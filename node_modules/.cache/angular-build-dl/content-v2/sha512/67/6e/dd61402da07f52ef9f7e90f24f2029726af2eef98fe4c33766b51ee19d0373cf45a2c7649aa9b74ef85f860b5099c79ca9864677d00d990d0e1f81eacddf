{"version":3,"sources":["webpack:///src/app/admin/doctors/add-doctor/add-doctor.component.html","webpack:///src/app/admin/doctors/add-doctor/add-doctor.component.ts","webpack:///src/app/admin/doctors/alldoctors/alldoctors.component.html","webpack:///src/app/admin/doctors/alldoctors/alldoctors.component.ts","webpack:///src/app/admin/doctors/alldoctors/dialogs/delete/delete.component.ts","webpack:///src/app/admin/doctors/alldoctors/dialogs/delete/delete.component.html","webpack:///src/app/admin/doctors/alldoctors/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/admin/doctors/alldoctors/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/doctors/doctors-routing.module.ts","webpack:///src/app/admin/doctors/doctors.module.ts"],"names":["AddDoctorComponent","fb","restApi","router","toastr","hide3","agree3","getAllSpecialities","subscribe","next","result","allSpecialities","medecinForm","group","nom","Validators","prenom","adresse","genre","telephone","specialite","email","username","password","userBody","value","addNewUser","resetForm","showSuccessMessage","navigate","error","console","log","reset","onSubmit","$event","stopPropagation","AlldoctorsComponent","dialog","displayedColumns","listMedecins","MatTableDataSource","refreshList","getUserByProfile","localStorage","getItem","data","sort","a","b","paginator","filterValue","trim","toLowerCase","filter","tempDirection","dialogRef","open","FormDialogComponent","action","direction","afterClosed","row","medecin","DeleteDialogComponent","MatPaginator","MatSort","applyFilter","addNew","close","idPerson","deleteUser","showErrorMessage","MAT_DIALOG_DATA","confirmDelete","onNoClick","userId","dialogTitle","idSpecialite","undefined","updateUser","confirmAdd","routes","path","component","DoctorsRoutingModule","RouterModule","DoctorsModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MaterialFileInputModule","MatProgressSpinnerModule"],"mappings":"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D;AAAA;AAAA;ADV/B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAkB;;AAC3C;;AACA;;AACE;;AACE;;AAA2B;;AAAO;;AACtC;;AACA;;AACE;;AAAoC;;AAAQ;;AAC9C;;AACA;;AAAmC;;AAAK;;AAC1C;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAkB;;AACxB;;AACA;;AACE;;AAA4C;AAAA,qBAAY,IAAAkC,QAAA,EAAZ;AAAsB,aAAtB;;AAC1C;;AACE;;AACE;;AACE;;AAAW;;AAAG;;AACd;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACkB;;AAAO;;AACzB;;AAAmC;AAAA,qBAAS,IAAAP,SAAA,EAAT;AAAoB,aAApB;;AAAwC;;AAAO;;AACpF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AApH8B;;AAAA;;AAME;;AAAA;;AASA;;AAAA;;AAWE;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AASA;;AAAA;;AAWA;;AAAA;;AASmB;;AAAA;;AAInB;;AAAA;;AAWA;;A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","file":"src_app_admin_doctors_doctors_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Ajout d'un médecin</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Médecins</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Ajout</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Ajouter un médecin</h2>\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"medecinForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Nom</mat-label>\r\n                    <input matInput formControlName=\"nom\" required>\r\n                    <mat-error *ngIf=\"medecinForm.get('nom').hasError('required')\">\r\n                      Le nom est obligatoire\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Prénom</mat-label>\r\n                    <input matInput formControlName=\"prenom\" required>\r\n                    <mat-error *ngIf=\"medecinForm.get('prenom').hasError('required')\">\r\n                      Le prénom est obligatoire\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Genre</mat-label>\r\n                    <mat-select formControlName=\"genre\" required>\r\n                      <mat-option [value]=\"'Homme'\">\r\n                        Homme\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Femme'\">\r\n                        Femme\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"medecinForm.get('genre').hasError('required')\">\r\n                      Le genre est obligatoire\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Téléphone</mat-label>\r\n                    <input matInput formControlName=\"telephone\" type=\"number\" required minlength=\"8\">\r\n                    <mat-error *ngIf=\"medecinForm.get('telephone').hasError('required')\">\r\n                      Le téléphone est obligatoire\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Adresse</mat-label>\r\n                    <input matInput formControlName=\"adresse\" required minlength=\"4\">\r\n                    <mat-error *ngIf=\"medecinForm.get('adresse').hasError('required')\">\r\n                      Ce champ est obligatoire\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Spécialité</mat-label>\r\n                    <mat-select formControlName=\"specialite\" required>\r\n                      <mat-option *ngFor=\"let item of allSpecialities\" value=\"{{item.idSpecialite}}\">\r\n                        {{item.nom}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"medecinForm.get('specialite').hasError('required')\">\r\n                      Selectionner une spécialité !\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"medecinForm.get('email').hasError('email') && medecinForm.get('email').touched\">\r\n                      Entrer votre email valide\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Nom d'utilisateur</mat-label>\r\n                    <input matInput formControlName=\"username\" required minlength=\"3\">\r\n                    <mat-error *ngIf=\"medecinForm.get('username').hasError('required')\">\r\n                      Ce champ est obligatoire\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Mot de passe</mat-label>\r\n                    <input matInput formControlName=\"password\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"medecinForm.get('password').hasError('required')\">\r\n                      Le mot de passe est obligatoire\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!medecinForm.valid \" mat-raised-button\r\n                    color=\"primary\">Ajouter</button>\r\n                  <button type=\"button\" color=\"warn\" (click)=\"resetForm()\" mat-raised-button>Annuler</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\nimport { ToasServiceService } from \"src/app/core/service/toast-service/toas-service.service\";\r\n@Component({\r\n  selector: \"app-add-doctor\",\r\n  templateUrl: \"./add-doctor.component.html\",\r\n  styleUrls: [\"./add-doctor.component.sass\"],\r\n})\r\nexport class AddDoctorComponent {\r\n  public medecinForm: FormGroup;\r\n  public hide3 = true;\r\n  public agree3 = false;\r\n  public userBody: any;\r\n  public allSpecialities: any;\r\n\r\n  constructor(private fb: FormBuilder, private restApi: RestApiService,\r\n    private router: Router, private toastr: ToasServiceService)\r\n    {\r\n      this.restApi.getAllSpecialities().subscribe(\r\n        {\r\n          next: result =>{\r\n            this.allSpecialities = result;\r\n          }\r\n        }\r\n      );\r\n      this.medecinForm = this.fb.group({\r\n        nom: [\"\", Validators.required],\r\n        prenom: [\"\", Validators.required],\r\n        adresse: [\"\", Validators.required],\r\n        genre: [\"\", Validators.required],\r\n        telephone: [\"\", Validators.required],\r\n        specialite: [\"\", Validators.required],\r\n        email: [\r\n          \"\",\r\n          [Validators.required, Validators.email],\r\n        ],\r\n        username: [\"\", Validators.required],\r\n        password: [\"\", Validators.required],\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.userBody = {\r\n      \"person_type\": \"MEDECIN\",\r\n      \"profile\": \"MEDECIN\",\r\n      \"nom\": this.medecinForm.value.nom,\r\n      \"prenom\": this.medecinForm.value.prenom,\r\n      \"adresse\": this.medecinForm.value.adresse,\r\n      \"telephone\": this.medecinForm.value.telephone,\r\n      \"email\": this.medecinForm.value.email,\r\n      \"genre\": this.medecinForm.value.genre,\r\n      \"username\": this.medecinForm.value.username,\r\n      \"password\": this.medecinForm.value.password,\r\n      \"specialite\": {\r\n        \"idSpecialite\": this.medecinForm.value.specialite\r\n      },\r\n      \"imageProfile\": \"imageLinnnkkk\",\r\n      \"roles\": [\r\n        {\"idRole\": 3}\r\n      ]\r\n    };\r\n\r\n    this.restApi.addNewUser(this.userBody).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.resetForm();\r\n          this.toastr.showSuccessMessage(\"Médecin ajouté avec succès !\");\r\n          this.router.navigate(['/admin/doctors/allDoctors']);\r\n        },\r\n        error: error =>{\r\n          console.log(error);\r\n          \r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  resetForm()\r\n  {\r\n    this.medecinForm.reset();\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Liste des médecins</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Médecins</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Liste</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"table-responsive\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Médecins</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Recherche\" type=\"text\" (keyup)=\"applyFilter($event.target.value)\" class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table [dataSource]=\"listMedecins\" matSort class=\"mat-cell\">\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n                <ng-container matColumnDef=\"nom\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Nom</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.nom}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"prenom\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Prénom</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.prenom}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"specialite\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Spécialité</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.specialite.nom}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"telephone\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Téléphone</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.telephone}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"adresse\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Adresse</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.adresse}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Statut</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.status}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" class=\"pr-0\">\r\n                    <button mat-icon-button class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n              </mat-table>\r\n              <div *ngIf=\"listMedecins.data.length === 0\" class=\"no-results text-center mt-3\">\r\n                Y'a pas encore de médecins\r\n              </div>\r\n              <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\n\r\n@Component({\r\n  selector: \"app-alldoctors\",\r\n  templateUrl: \"./alldoctors.component.html\",\r\n  styleUrls: [\"./alldoctors.component.sass\"],\r\n})\r\nexport class AlldoctorsComponent\r\n  implements OnInit, AfterViewInit\r\n{\r\n  displayedColumns = [\r\n    \"nom\",\r\n    \"prenom\",\r\n    \"specialite\",\r\n    \"telephone\",\r\n    \"email\",\r\n    \"adresse\",\r\n    \"status\",\r\n    \"actions\",\r\n  ];\r\n  public listMedecins: any = new MatTableDataSource([]);\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private restApi: RestApiService\r\n  ){}\r\n\r\n  //Init pagination value\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  //Init sort value\r\n  @ViewChild(MatSort) sort: MatSort\r\n\r\n  ngOnInit() {\r\n    this.refreshList(); //Refresh list\r\n  }\r\n\r\n  refreshList()\r\n  {\r\n    this.restApi.getUserByProfile(\"MEDECIN\", localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result=>{\r\n          this.listMedecins.data = result;\r\n\r\n          //Sort list element order by desc\r\n          this.listMedecins.data = this.listMedecins.data.sort((a, b)=> b - a);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  //Angular Pagination\r\n  ngAfterViewInit(): void {\r\n    this.listMedecins.paginator = this.paginator; //make pagination\r\n    this.listMedecins.sort = this.sort; //Make sort\r\n    this.refreshList();\r\n  }\r\n\r\n  //Search filter table\r\n  applyFilter(filterValue: string)\r\n  {\r\n    filterValue = filterValue.trim();\r\n    filterValue = filterValue.toLowerCase();\r\n\r\n    this.listMedecins.filter = filterValue;\r\n  }\r\n\r\n  addNew() {\r\n    //Add dialog config\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n\r\n    //Make add dialog\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n\r\n    //Close add dialog\r\n    dialogRef.afterClosed().subscribe(\r\n      {\r\n        next: result =>{\r\n          this.refreshList(); //Refresh list\r\n        }\r\n      }\r\n    );\r\n  }\r\n  editCall(row) {\r\n    //Edit dialog config\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n\r\n    //Make edit dialog\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        medecin: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n\r\n    //Close edit dialog\r\n    dialogRef.afterClosed().subscribe(\r\n      {\r\n        next: result =>{\r\n          this.refreshList(); //Refresh list\r\n        }\r\n      }\r\n    );\r\n  }\r\n  deleteItem(row) {\r\n    //Delete dialog config\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    \r\n    //Make Delete dialog\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n\r\n    //Close delete dialog\r\n    dialogRef.afterClosed().subscribe(\r\n      {\r\n        next: result =>{\r\n          this.refreshList(); //Refresh list\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\nimport { ToasServiceService } from \"src/app/core/service/toast-service/toas-service.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private restApi: RestApiService,\r\n    private toastr: ToasServiceService){}\r\n\r\n  \r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  confirmDelete(): void {\r\n    console.log(this.data.idPerson);\r\n    this.restApi.deleteUser(this.data.idPerson, localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.toastr.showSuccessMessage(\"Suppression éffectuée avec succès\");\r\n        },\r\n        error: error =>{\r\n          this.toastr.showErrorMessage(\"Suppression non éffectuée !\");\r\n        }\r\n      }\r\n    )\r\n    \r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h5 mat-dialog-title>Êtes-vous sûr de supprimer ?</h5>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\">Nom : </span><strong>{{data.nom}} {{data.prenom}}</strong></p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Tél : </span>{{data.telephone}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Supprimer\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Annuler</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"medecinForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Nom</mat-label>\r\n            <input matInput formControlName=\"nom\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"medecinForm.get('nom').hasError('required')\">\r\n              Le nom est obligatoire\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Prénom</mat-label>\r\n            <input matInput formControlName=\"prenom\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"medecinForm.get('prenom').hasError('required')\">\r\n              Le prénom est obligatoire\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Spécialité</mat-label>\r\n            <mat-select formControlName=\"specialite\" required>\r\n              <mat-option *ngFor=\"let item of allSpecialities\" value=\"{{item.idSpecialite}}\">\r\n                {{item.nom}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"medecinForm.get('specialite').hasError('required')\">\r\n              Ce champ est obligatoire\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Adresse</mat-label>\r\n            <input matInput formControlName=\"adresse\" required minlength=\"4\">\r\n            <mat-icon matSuffix>book</mat-icon>\r\n            <mat-error *ngIf=\"medecinForm.get('adresse').hasError('required')\">\r\n              Ce champ est obligatoire\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Téléphone</mat-label>\r\n            <input matInput formControlName=\"telephone\" type=\"number\" required minlength=\"8\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"medecinForm.get('telephone').hasError('required')\">\r\n              le numéro de téléphone est obligatoire\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\">\r\n            <mat-label>Genre</mat-label>\r\n            <mat-select formControlName=\"genre\" required>\r\n              <mat-option value=\"Homme\">\r\n                Homme\r\n              </mat-option>\r\n              <mat-option value=\"Femme\">\r\n                Femme\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"medecinForm.get('genre').hasError('required')\">\r\n              Champ obligatoire, choissez un genre\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Nom d'utlisateur</mat-label>\r\n            <input matInput formControlName=\"username\" type=\"text\" required minlength=\"3\">\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"medecinForm.get('username').hasError('required')\">\r\n              Ce champ est obligatoire\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error *ngIf=\"medecinForm.get('email').hasError('required') || medecinForm.get('email').touched\">\r\n              Entrer votre email valide !\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" *ngIf=\"action!=='edit'\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Mot de passe</mat-label>\r\n            <input matInput formControlName=\"password\" type=\"text\">\r\n            <mat-icon matSuffix>key</mat-icon>\r\n            <mat-error *ngIf=\"medecinForm.get('password').hasError('required')\">\r\n              Ce champ est obligatoire\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!medecinForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Enregistrer</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Annuler</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport {\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\nimport { ToasServiceService } from \"src/app/core/service/toast-service/toas-service.service\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n})\r\nexport class FormDialogComponent {\r\n  public action: string;\r\n  public dialogTitle: string;\r\n  public medecinForm: FormGroup;\r\n  public userBody: any;\r\n  public userId: number;\r\n  public allSpecialities: any;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    private restApi: RestApiService,\r\n    private toastr: ToasServiceService)\r\n  {\r\n    //Get all specialities\r\n    this.restApi.getAllSpecialities().subscribe(\r\n      {\r\n        next: result =>{\r\n          this.allSpecialities = result;\r\n        }\r\n      }\r\n    )\r\n\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      this.userId = data.medecin.idPerson;\r\n      this.dialogTitle = \"Modification de \"+data.medecin.prenom+\" \"+data.medecin.nom;\r\n      this.medecinForm = this.fb.group({\r\n        nom: [data.medecin.nom],\r\n        prenom: [data.medecin.prenom],\r\n        specialite: [data.medecin.specialite.idSpecialite],\r\n        adresse: [data.medecin.adresse],\r\n        telephone: [data.medecin.telephone],\r\n        email: [data.medecin.email],\r\n        genre: [data.medecin.genre],\r\n        username: [data.medecin.username]\r\n      });\r\n    } else {\r\n      this.dialogTitle = \"Ajouter un nouveau médecin\";\r\n      this.medecinForm = this.fb.group({\r\n        nom: [\"\", Validators.required],\r\n        prenom: [\"\", Validators.required],\r\n        specialite: [\"\", Validators.required],\r\n        adresse: [\"\", Validators.required],\r\n        telephone: [\"\", Validators.required],\r\n        email: [\"\", [Validators.required, Validators.email]],\r\n        genre: [\"\", Validators.required],\r\n        username: [\"\", Validators.required],\r\n        password: [\"\", Validators.required]\r\n      });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n\r\n    if(this.action === \"edit\" && this.medecinForm.value.password === undefined)\r\n    {\r\n      this.userBody = {\r\n        \"person_type\": \"MEDECIN\",\r\n        \"profile\": \"MEDECIN\",\r\n        \"nom\": this.medecinForm.value.nom,\r\n        \"prenom\": this.medecinForm.value.prenom,\r\n        \"adresse\": this.medecinForm.value.adresse,\r\n        \"telephone\": this.medecinForm.value.telephone,\r\n        \"email\": this.medecinForm.value.email,\r\n        \"genre\": this.medecinForm.value.genre,\r\n        \"username\": this.medecinForm.value.username,\r\n        \"password\": null,\r\n        \"specialite\": {\r\n          \"idSpecialite\": this.medecinForm.value.specialite\r\n        },\r\n        \"imageProfile\": \"imageLinnnkkk\",\r\n        \"roles\": [\r\n          {\"idRole\": 3}\r\n        ]\r\n      };\r\n\r\n      //Updated user\r\n      this.restApi.updateUser(this.userId, this.userBody, localStorage.getItem(\"token\")).subscribe(\r\n        {\r\n          next: result =>{\r\n          this.toastr.showSuccessMessage(\"Modification éffectuée avec succès\");\r\n          },\r\n          error: error =>{\r\n            this.toastr.showErrorMessage(\"Modification non éffectuée !\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n    else\r\n    {\r\n      this.userBody = {\r\n          \"person_type\": \"MEDECIN\",\r\n          \"profile\": \"MEDECIN\",\r\n          \"nom\": this.medecinForm.value.nom,\r\n          \"prenom\": this.medecinForm.value.prenom,\r\n          \"adresse\": this.medecinForm.value.adresse,\r\n          \"telephone\": this.medecinForm.value.telephone,\r\n          \"email\": this.medecinForm.value.email,\r\n          \"genre\": this.medecinForm.value.genre,\r\n          \"username\": this.medecinForm.value.username,\r\n          \"password\": this.medecinForm.value.password,\r\n          \"specialite\": {\r\n            \"idSpecialite\": this.medecinForm.value.specialite\r\n          },\r\n          \"imageProfile\": \"imageLinnnkkk\",\r\n          \"roles\": [\r\n          {\"idRole\": 3}\r\n        ]\r\n      };\r\n      \r\n\r\n      //Add new user\r\n      this.restApi.addNewUser(this.userBody).subscribe(\r\n        {\r\n          next: result =>{\r\n          this.toastr.showSuccessMessage(\"Nouveau médecin ajouté avec succès !\");\r\n          },\r\n          error: error =>{\r\n            this.toastr.showErrorMessage(\"Ajout non éffectué !\")\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AlldoctorsComponent } from \"./alldoctors/alldoctors.component\";\r\nimport { AddDoctorComponent } from \"./add-doctor/add-doctor.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"allDoctors\",\r\n    component: AlldoctorsComponent,\r\n  },\r\n  {\r\n    path: \"add-doctor\",\r\n    component: AddDoctorComponent,\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DoctorsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { DoctorsRoutingModule } from \"./doctors-routing.module\";\r\nimport { AlldoctorsComponent } from \"./alldoctors/alldoctors.component\";\r\nimport { DeleteDialogComponent } from \"./alldoctors/dialogs/delete/delete.component\";\r\nimport { FormDialogComponent } from \"./alldoctors/dialogs/form-dialog/form-dialog.component\";\r\nimport { AddDoctorComponent } from \"./add-doctor/add-doctor.component\";\r\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AlldoctorsComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n    AddDoctorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MaterialFileInputModule,\r\n    DoctorsRoutingModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [\r\n  ],\r\n})\r\nexport class DoctorsModule {}\r\n"]}