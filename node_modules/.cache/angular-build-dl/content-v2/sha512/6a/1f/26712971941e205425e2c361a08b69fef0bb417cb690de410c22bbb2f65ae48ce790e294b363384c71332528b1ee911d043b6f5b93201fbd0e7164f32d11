{"version":3,"sources":["webpack:///src/app/doctor/appointments/appointments.component.html","webpack:///src/app/doctor/appointments/appointments.component.ts","webpack:///src/app/doctor/appointments/form/form.component.html","webpack:///src/app/doctor/appointments/form/form.component.ts","webpack:///src/app/doctor/dashboard/dashboard.component.html","webpack:///src/app/doctor/dashboard/dashboard.component.ts","webpack:///src/app/doctor/doctor-routing.module.ts","webpack:///src/app/doctor/doctor.module.ts","webpack:///src/app/doctor/doctors/doctors.component.html","webpack:///src/app/doctor/doctors/doctors.component.ts","webpack:///src/app/doctor/patients/patients.component.html","webpack:///src/app/doctor/patients/patients.component.ts","webpack:///src/app/doctor/settings/settings.component.html","webpack:///src/app/doctor/settings/settings.component.ts"],"names":["AppointmentsComponent","dialog","restApi","displayedColumns","myAllRDV","MatTableDataSource","refreshList","paginator","sort","filterValue","trim","toLowerCase","filter","getPersonByUsername","localStorage","getItem","subscribe","next","result","currentUser","postBody","idPerson","getRDVByMedecin","data","row","validRDV","idRDV","tempDirection","open","FormComponent","rdv","action","direction","height","width","MatPaginator","MatSort","applyFilter","dialogRef","isDetails","close","MAT_DIALOG_DATA","DashboardComponent","myTodayRDV","currentDate","formatDate","Date","getDistinctPatientByMedecinAndDate","myTodayPatient","getDistinctPatientByMedecin","myAllPatient","getRDVByMedecinAndDate","DatePipe","routes","path","component","DoctorsComponent","PatientsComponent","SettingsComponent","DoctorRoutingModule","RouterModule","DoctorModule","FormsModule","CommonModule","NgxEchartsModule","echarts","PerfectScrollbarModule","MatIconModule","MatButtonModule","MatDialogModule","NgApexchartsModule","MatPaginatorModule","MatSnackBarModule","MatFormFieldModule","MatSortModule","MatTabsModule","MatMenuModule","MatDatepickerModule","MatTableModule","MatSelectModule","MatCheckboxModule","MatInputModule","MatTooltipModule","MatRadioModule","DragDropModule","MatProgressSpinnerModule","getUserByProfile","allMedecins","toastr","router","myProfile","changePassword","changeUserPassword","value","username","showSuccessMessage","resetForm","error","errorMsg1","changeUSer","updateBody","nom","prenom","adresse","telephone","email","genre","updateUser","setItem","navigate","showErrorMessage","updatePassword","userUpdate"],"mappings":"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","file":"src_app_doctor_doctor_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Tous les rendez-vous</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Rendez-vous</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"tabbable-line\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <div class=\"card\">\r\n                <div class=\"body\">\r\n                  <div class=\"table-responsive\">\r\n                    <div class=\"materialTableHeader\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                          <ul class=\"header-buttons-left ms-0\">\r\n                            <li class=\"dropdown\">\r\n                              <h2>\r\n                                <strong>Rendez-vous</strong></h2>\r\n                            </li>\r\n                            <li class=\"dropdown m-l-20\">\r\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                              <input placeholder=\"Recherche\" (keyup)=\"applyFilter($event.target.value)\" type=\"text\" class=\"browser-default search-field\"\r\n                                aria-label=\"Search box\">\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <mat-table #table [dataSource]=\"myAllRDV\" matSort class=\"mat-cell\">\r\n                      <ng-container matColumnDef=\"nom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Nom Patient</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.nom}} {{row.patient.prenom}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"dateTime\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Date et Heure\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                          {{row.rdvDate | date: 'dd/MM/yyyy'}}, {{row.rdvHeure}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"telephone\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Téléphone\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> {{row.patient.telephone}}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"email\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> {{row.patient.email}}</mat-cell>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"genre\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Genre\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.genre}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"symptom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Symptôme</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.symptom}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"isValid\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Accepter</mat-header-cell>\r\n                        <ng-container *matCellDef=\"let row\">\r\n                          <mat-cell *ngIf=\"row.isValid===false\">Non</mat-cell>\r\n                          <mat-cell *ngIf=\"row.isValid===true\">Oui</mat-cell>\r\n                        </ng-container>\r\n                      </ng-container>\r\n                      <!-- actions -->\r\n                      <ng-container matColumnDef=\"actions\">\r\n                        <mat-header-cell class=\"tbl-col-width-per-10\" *matHeaderCellDef>Actions</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row;\" class=\"tbl-col-width-per-10\">\r\n                          <button mat-icon-button (click)=\"detailsCall(row)\" style=\"color: #40ea48;\">\r\n                            <i class=\"material-icons\">visibility</i>\r\n                          </button>\r\n                          <button mat-icon-button style=\"color: #3F51B5;\" [matMenuTriggerFor]=\"menu\">\r\n                            <mat-icon>more_vert</mat-icon>\r\n                          </button>\r\n                          <mat-menu #menu=\"matMenu\">\r\n                            <button mat-menu-item style=\"color: #40ea48;\" (click)=\"validRDV(row)\">\r\n                              <i class=\"material-icons-two-tone align-middle msr-2\">done</i>\r\n                              <span>Valider</span>\r\n                            </button>\r\n                            <button mat-menu-item style=\"color: #ee2525;\" (click)=\"cancel(row)\">\r\n                              <i class=\"material-icons align-middle msr-2\">cancel</i>\r\n                              <span>Annuler</span>\r\n                            </button>\r\n                          </mat-menu>\r\n                        </mat-cell>\r\n                      </ng-container>\r\n\r\n                      <mat-header-row *matHeaderRowDef=\"displayedColumns\">\r\n                      </mat-header-row>\r\n                      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                      </mat-row>\r\n                    </mat-table>\r\n                    <div *ngIf=\"myAllRDV.data.length === 0\" class=\"no-results text-center mt-3\">\r\n                      Vous n'avez pas encore de rendez-vous !\r\n                    </div>\r\n                    <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\nimport { FormComponent } from \"./form/form.component\";\r\n\r\n@Component({\r\n  selector: \"app-appointments\",\r\n  templateUrl: \"./appointments.component.html\",\r\n  styleUrls: [\"./appointments.component.sass\"],\r\n})\r\nexport class AppointmentsComponent implements OnInit, AfterViewInit\r\n{\r\n  displayedColumns = [\r\n    \"nom\",\r\n    \"dateTime\",\r\n    \"telephone\",\r\n    \"email\",\r\n    \"genre\",\r\n    \"symptom\",\r\n    \"isValid\",\r\n    \"actions\"\r\n  ];\r\n\r\n  public currentUser: any;\r\n  public myAllRDV: any = new MatTableDataSource([]);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(public dialog: MatDialog, private restApi: RestApiService){}\r\n\r\n  ngOnInit(){\r\n    this.refreshList();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n      this.myAllRDV.paginator = this.paginator; //Add pagination\r\n      this.myAllRDV.sort = this.sort;\r\n  }\r\n\r\n  //Search filter table\r\n  applyFilter(filterValue: string)\r\n  {\r\n    filterValue = filterValue.trim();\r\n    filterValue = filterValue.toLowerCase();\r\n\r\n    this.myAllRDV.filter = filterValue;\r\n  }\r\n\r\n  refreshList()\r\n  {\r\n    this.restApi.getPersonByUsername(localStorage.getItem(\"username\"), localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result=>{\r\n          this.currentUser = result;\r\n          \r\n          let postBody = {\"idPerson\": this.currentUser.idPerson, \"person_type\": \"MEDECIN\"};\r\n          \r\n          //Get all RDV for the current medecin\r\n          this.restApi.getRDVByMedecin(postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result =>{\r\n                this.myAllRDV.data = result;\r\n              }\r\n            }\r\n          );         \r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  validRDV(row: any){\r\n    this.restApi.validRDV(row.idRDV, true, localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          if(result)\r\n          {\r\n            this.refreshList();\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(row: any){\r\n    this.restApi.validRDV(row.idRDV, false, localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          if(!result)\r\n          {\r\n            this.refreshList();\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  detailsCall(row) {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    this.dialog.open(FormComponent, {\r\n      data: {\r\n        rdv: row,\r\n        action: \"details\",\r\n      },\r\n      direction: tempDirection,\r\n      height: \"60%\",\r\n      width: \"50%\",\r\n    });\r\n  }  \r\n}","<div class=\"addContainer\">\r\n  <div *ngIf=\"isDetails\" class=\"contact-details\">\r\n    <div class=\"modalHeader\">\r\n      <div class=\"editRowModal\">\r\n        <div class=\"modalHeader clearfix\">\r\n          <div class=\"modal-about contact-header\">\r\n            <div class=\"contact-details-heading\">\r\n              <div class=\"contact-details-name mb-2\">{{rdv.patient.prenom}} {{rdv.patient.nom}}</div>\r\n              <div class=\"badge col-green\">Patient</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <mat-card-content>\r\n        <div class=\"contact-details-field\" matTooltip=\"Date et l'heure du rendez-vous\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">event_note</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.rdvDate | date: 'd MMMM, yyyy'}} à {{rdv.rdvHeure}}</div>\r\n        </div>\r\n        <div class=\"contact-details-field\" matTooltip=\"L'E-mail du patient\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">email</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.patient.email}}\r\n          </div>\r\n        </div>\r\n        <div class=\"contact-details-field\" matTooltip=\"Numéro de téléphone du patient\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">phonelink_ring</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.patient.telephone}}\r\n          </div>\r\n        </div>\r\n        <div class=\"contact-details-field\" matTooltip=\"Patient Address\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">location_on</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.patient.adresse}}\r\n          </div>\r\n        </div>\r\n        <div class=\"contact-details-field\" matTooltip=\"Patient Disease\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">healing</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.symptom}}\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-form\",\r\n  templateUrl: \"./form.component.html\",\r\n  styleUrls: [\"./form.component.sass\"],\r\n})\r\nexport class FormComponent {\r\n  action: string;\r\n  isDetails = false;\r\n  rdv: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"details\") {\r\n      this.rdv = data.rdv;\r\n      this.isDetails = true;\r\n    } else {\r\n      this.isDetails = false;\r\n    }\r\n  }\r\n  \r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  \r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Dashboard</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Médecin Dashboard</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Widgets -->\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-card1 order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h5 class=\"m-b-15\">Patients du jour</h5>\r\n            <h2 class=\"text-end\"><i class=\"fas fa-user-injured float-start\"></i><span>{{myTodayPatient?.length}}</span></h2>\r\n            <p class=\"m-b-0\">Mes patients d'aujourd'hui</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-card2 order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h5 class=\"m-b-15\">Rendez-vous du jour</h5>\r\n            <h2 class=\"text-end\"><i class=\"far fa-calendar-check float-start\"></i><span>{{myTodayRDV.data.length}}</span></h2>\r\n            <p class=\"m-b-0\">Mes rendez-vous d'aujourd'hui</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-card3 order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h5 class=\"m-b-15\">Tous mes patients</h5>\r\n            <h2 class=\"text-end\"><i class=\"fa fa-users float-start\" aria-hidden=\"true\"></i><span>{{myAllPatient?.length}}</span></h2>\r\n            <p class=\"m-b-0\">Le total de mes patients</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-card4 order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h5 class=\"m-b-15\">Tous mes rendez-vous</h5>\r\n            <h2 class=\"text-end\"><i class=\"far fa-calendar-check float-start\"></i><span>{{myAllRDV?.length}}</span></h2>\r\n            <p class=\"m-b-0\">Le total de mes rendez-vous</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- #END# Widgets -->\r\n    <h5>La liste des rendez-vous d'aujourd'hui</h5>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"tabbable-line\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <div class=\"card\">\r\n                <div class=\"body\">\r\n                  <div class=\"table-responsive mat-elevation-z8\">\r\n                    <mat-table [dataSource]=\"myTodayRDV\" matSort class=\"mat-cell\">\r\n                      <ng-container matColumnDef=\"nom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Nom patient</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.nom}} {{row.patient.prenom}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"email\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Email patient</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.email}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"genre\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Genre</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.genre}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"rdvDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.rdvDate | date: 'dd/MM/yyyy' }}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"rdvHeure\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Heure</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.rdvHeure}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"telephone\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Tél Patient</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.telephone}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"symptom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Symptôme</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.symptom}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"isValid\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Accepter</mat-header-cell>\r\n                        <ng-container *matCellDef=\"let row\">\r\n                          <mat-cell *ngIf=\"row.isValid===false\">Non</mat-cell>\r\n                          <mat-cell *ngIf=\"row.isValid===true\">Oui</mat-cell>\r\n                        </ng-container>\r\n                      </ng-container>\r\n                      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                      </mat-row>\r\n                    </mat-table>\r\n                    <div *ngIf=\"myTodayRDV.data.length === 0\" class=\"no-results text-center mb-3 mt-3\">\r\n                      Vous n'avez pas encore de rendez-vous !\r\n                    </div>\r\n                    <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                      [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n                    </mat-paginator>              \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { DatePipe, formatDate } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.sass\"],\r\n  providers: [DatePipe]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    \"nom\",\r\n    \"email\",\r\n    \"genre\",\r\n    \"rdvDate\",\r\n    \"rdvHeure\",\r\n    \"telephone\",\r\n    \"symptom\",\r\n    \"isValid\"\r\n  ];\r\n\r\n  public myAllPatient: any;\r\n  public myTodayPatient: any;\r\n  public myAllRDV: any;\r\n  public myTodayRDV: any = new MatTableDataSource([]);\r\n  public currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n  public currentUser: any;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.myTodayRDV.paginator = this.paginator;\r\n    this.myTodayRDV.sort = this.sort;\r\n  }\r\n\r\n  constructor(private restApi: RestApiService){}\r\n\r\n  ngOnInit() {\r\n    this.restApi.getPersonByUsername(localStorage.getItem(\"username\"), localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result=>{\r\n          this.currentUser = result;\r\n          \r\n          let postBody = {\"idPerson\": this.currentUser.idPerson, \"person_type\": \"MEDECIN\"};          \r\n          \r\n          //Get all today's distinct patient for the current medecin\r\n          this.restApi.getDistinctPatientByMedecinAndDate(this.currentDate, postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result=>{\r\n                this.myTodayPatient = result;\r\n              }\r\n            }\r\n          );\r\n\r\n          //Get all distinct patient for the current medecin\r\n          this.restApi.getDistinctPatientByMedecin(postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result=>{\r\n                this.myAllPatient = result;\r\n              }\r\n            }\r\n          );\r\n\r\n          //Get all RDV for the current medecin\r\n          this.restApi.getRDVByMedecin(postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result =>{\r\n                this.myAllRDV = result;\r\n              }\r\n            }\r\n          );\r\n          \r\n          //Get today'RDV\r\n          this.restApi.getRDVByMedecinAndDate(this.currentDate, postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result=>{\r\n                this.myTodayRDV.data = result;\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { AppointmentsComponent } from \"./appointments/appointments.component\";\r\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\r\nimport { PatientsComponent } from \"./patients/patients.component\";\r\nimport { SettingsComponent } from \"./settings/settings.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"dashboard\",\r\n    component: DashboardComponent,\r\n  },\r\n  {\r\n    path: \"appointments\",\r\n    component: AppointmentsComponent,\r\n  },\r\n  {\r\n    path: \"doctors\",\r\n    component: DoctorsComponent,\r\n  },\r\n  {\r\n    path: \"patients\",\r\n    component: PatientsComponent,\r\n  },\r\n  {\r\n    path: \"settings\",\r\n    component: SettingsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DoctorRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\r\nimport { ChartsModule as chartjsModule } from \"ng2-charts\";\r\nimport { NgxEchartsModule } from \"ngx-echarts\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\nimport { DoctorRoutingModule } from \"./doctor-routing.module\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { AppointmentsComponent } from \"./appointments/appointments.component\";\r\nimport { FormComponent } from \"./appointments/form/form.component\";\r\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\r\nimport { PatientsComponent } from \"./patients/patients.component\";\r\nimport { SettingsComponent } from \"./settings/settings.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    AppointmentsComponent,\r\n    FormComponent,\r\n    DoctorsComponent,\r\n    PatientsComponent,\r\n    SettingsComponent,\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    DoctorRoutingModule,\r\n    chartjsModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import(\"echarts\"),\r\n    }),\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    NgApexchartsModule,\r\n    MatPaginatorModule,\r\n    MatSnackBarModule,\r\n    MatFormFieldModule,\r\n    MatSortModule,\r\n    MatTabsModule,\r\n    MatMenuModule,\r\n    MatDatepickerModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    MatRadioModule,\r\n    DragDropModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class DoctorModule {}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Médecins</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Médecins</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\" *ngFor=\"let item of allMedecins\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"card p-3\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12 col-md-2 mb-0\">\r\n                      <img class=\"img-circle doc-card-image\" style=\"width: 150px;\" src=\"assets/images/user/usrbig4.jpg\">\r\n                    </div>\r\n                    <div class=\"col-md-6 border-right mb-0\">\r\n                      <div class=\"doc-card-title\">\r\n                        <h4>{{item.nom}} {{item.prenom}}</h4>\r\n                      </div>\r\n                      <p><strong>{{item.specialite.nom}}</strong></p>\r\n                      <div class=\"description\">\r\n                        <p>{{item.nom}} {{item.prenom}} est l'un de nos médecins qui ont beaucoup d'expériences avec comme spécialité {{item.specialite.nom}} !<br></p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex col-md-4 mb-0\">\r\n                      <div class=\"d-flex flex-column justify-content-start user-profile w-100\">\r\n                        <div><i class=\"fas fa-map-marker-alt pt-3 psr-3\"></i>{{item.adresse}}</div>\r\n                        <div><i class=\"fas fa-envelope pt-3 psr-3\"></i>{{item.email}}</div>\r\n                        <div><i class=\"fas fa-phone pt-3 psr-3\"></i>{{item.telephone}}</div>\r\n                        <div><i class=\"fas fa-briefcase pt-3 psr-3\"></i>{{item.status}}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\n\r\n@Component({\r\n  selector: \"app-doctors\",\r\n  templateUrl: \"./doctors.component.html\",\r\n  styleUrls: [\"./doctors.component.sass\"],\r\n})\r\nexport class DoctorsComponent implements OnInit {\r\n  public allMedecins: any;\r\n\r\n  constructor(private restApi: RestApiService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.restApi.getUserByProfile('MEDECIN', localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.allMedecins = result;\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Patients</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Patients</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\" *ngFor=\"let item of myAllPatient\">\r\n        <div class=\"card py-3 py-md-3\">\r\n          <div class=\" d-flex justify-content-between px-3 px-md-4\">\r\n            <img src=\"assets/images/user/usrbig4.jpg\" height=\"55sspx\" width=\"55px\" alt=\"\" class=\"rounded-circle\">\r\n            <div class=\"\">\r\n              <h6 class=\"col-green\">{{item.nom}} {{item.prenom}}</h6>\r\n              <p>Profession : {{item.profession}}</p>\r\n            </div>\r\n          </div>\r\n          <hr class=\"light-hr\">\r\n          <div class=\"d-flex flex-column justify-content-start w-100 px-3 px-md-4\">\r\n            <div><i class=\"fas fa-map-marker-alt pt-3 psr-3\"></i>{{item.adresse}}</div>\r\n            <div><i class=\"fas fa-phone pt-3 psr-3\"></i>{{item.telephone}}</div>\r\n            <div><i class=\"fas fa-envelope pt-3 psr-3\"></i>{{item.email}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\n\r\n@Component({\r\n  selector: \"app-patients\",\r\n  templateUrl: \"./patients.component.html\",\r\n  styleUrls: [\"./patients.component.sass\"],\r\n})\r\nexport class PatientsComponent implements OnInit {\r\n  public currentUser: any;\r\n  public myAllPatient: any;\r\n\r\n  constructor(private restApi: RestApiService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.restApi.getPersonByUsername(localStorage.getItem(\"username\"), localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.currentUser = result;\r\n          let postBody = {\"idPerson\": this.currentUser.idPerson, \"person_type\": \"MEDECIN\"};\r\n          //Get all distinct patient for the current medecin\r\n          this.restApi.getDistinctPatientByMedecin(postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result=>{\r\n                this.myAllPatient = result;\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Paramètre</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Paramètre</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card\">\r\n      <div class=\"header\">\r\n        <h2>\r\n          <strong>Modifier votre mot de passe</strong></h2>\r\n      </div>\r\n      <div class=\"body\">\r\n        <div class=\"example-container\">\r\n          <form #changePassword=\"ngForm\" (ngSubmit)=\"updatePassword(changePassword)\">\r\n            <div *ngIf=\"errorMsg1\" class=\"mb-2 col-red\">{{errorMsg1}}</div>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n              <mat-label>Nom d'utilisateur</mat-label>\r\n              <input matInput name=\"username\" ngModel required>\r\n              <mat-error *ngIf=\"!changePassword.valid\">Veuilez remplir ce champ !</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n              <mat-label>Nouveau Password</mat-label>\r\n              <input matInput type=\"password\" name=\"newPassword\" ngModel required>\r\n              <mat-error *ngIf=\"!changePassword.valid\">Veuilez remplir ce champ !</mat-error>\r\n            </mat-form-field>\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!changePassword.valid\">Envoyer</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card\">\r\n      <div class=\"header\">\r\n        <h2>\r\n          <strong>Account</strong> Settings</h2>\r\n      </div>\r\n      <div class=\"body\">\r\n        <form #changeUSer=\"ngForm\" (ngSubmit)=\"userUpdate(changeUSer)\">\r\n          <div class=\"row clearfix\">\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Nom d'utilisateur</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.username\" name=\"username\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Prénom</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.prenom\" name=\"prenom\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Nom</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.nom\" name=\"nom\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Adress</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.adresse\" name=\"adresse\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.email\" name=\"email\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Téléphone</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.telephone\" name=\"telephone\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Statut</mat-label>\r\n                  <mat-select name=\"status\" [ngModel]=\"myProfile?.status\" ngModel required>\r\n                    <mat-option value=\"DISPONIBLE\">\r\n                      DISPONIBLE\r\n                    </mat-option>\r\n                    <mat-option value=\"NON_DISPONIBLE\">\r\n                      NON_DISPONIBLE\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"col-md-12\">\r\n              <button mat-raised-button color=\"primary\">Enregistrer </button>\r\n            </div>\r\n          </div>\r\n      </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\nimport { ToasServiceService } from \"src/app/core/service/toast-service/toas-service.service\";\r\n\r\n@Component({\r\n  selector: \"app-settings\",\r\n  templateUrl: \"./settings.component.html\",\r\n  styleUrls: [\"./settings.component.sass\"],\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  public errorMsg1: any;\r\n  public myProfile: any;\r\n  public updateBody: any;\r\n\r\n  constructor(private restApi: RestApiService, private toastr: ToasServiceService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.restApi.getPersonByUsername(localStorage.getItem(\"username\"), localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.myProfile = result;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  updatePassword(changePassword: NgForm)\r\n  {\r\n   this.restApi.changeUserPassword(changePassword.value.username, localStorage.getItem(\"token\")).subscribe(\r\n     {\r\n      next: result =>{\r\n        this.toastr.showSuccessMessage(\"Mot de passe modifié avec succès !\");\r\n        changePassword.resetForm();\r\n      },\r\n      error: error =>{\r\n        this.errorMsg1 = \"Nom d'utilisateur non trouvé !\";\r\n      }\r\n     }\r\n   );\r\n  }\r\n\r\n  userUpdate(changeUSer)\r\n  {\r\n    this.updateBody = {\r\n      \"person_type\": \"MEDECIN\",\r\n      \"profile\": \"MEDECIN\",\r\n      \"nom\": changeUSer.value.nom,\r\n      \"prenom\": changeUSer.value.prenom,\r\n      \"adresse\": changeUSer.value.adresse,\r\n      \"telephone\": changeUSer.value.telephone,\r\n      \"email\": changeUSer.value.email,\r\n      \"genre\": this.myProfile.genre,\r\n      \"username\": changeUSer.value.username,\r\n      \"password\": null,\r\n      \"imageProfile\": \"imageLinnnkkk\",\r\n      \"roles\": [\r\n        {\"idRole\": 3}\r\n      ]\r\n    };\r\n\r\n    this.restApi.updateUser(this.myProfile.idPerson, this.updateBody, localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          localStorage.setItem(\"username\", changeUSer.value.username);\r\n          this.toastr.showSuccessMessage(\"Votre profile a été modifié avec succès !\");\r\n          this.router.navigate(['/doctor/dashboard']);\r\n        },\r\n        error: error =>{\r\n          this.toastr.showErrorMessage(\"Modification non éffectuée !\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n"]}