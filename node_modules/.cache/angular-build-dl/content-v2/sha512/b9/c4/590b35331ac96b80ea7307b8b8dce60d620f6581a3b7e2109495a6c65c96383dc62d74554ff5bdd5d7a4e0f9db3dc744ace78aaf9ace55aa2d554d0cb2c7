{"version":3,"sources":["webpack:///src/app/admin/simple-admin/add/add-admin/add-admin.component.html","webpack:///src/app/admin/simple-admin/add/add-admin/add-admin.component.ts","webpack:///src/app/admin/simple-admin/all/all-admins/all-admins.component.html","webpack:///src/app/admin/simple-admin/all/all-admins/all-admins.component.ts","webpack:///src/app/admin/simple-admin/all/dialogs/delete/delete.component.ts","webpack:///src/app/admin/simple-admin/all/dialogs/delete/delete.component.html","webpack:///src/app/admin/simple-admin/all/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/admin/simple-admin/all/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/simple-admin/simple-admin-routing.module.ts","webpack:///src/app/admin/simple-admin/simple-admin.module.ts"],"names":["AddAdminComponent","fb","restApi","router","toastr","adminForm","group","nom","Validators","prenom","adresse","genre","telephone","email","username","password","userBody","value","addNewUser","subscribe","next","result","resetForm","showSuccessMessage","navigate","error","console","log","showErrorMessage","reset","onSubmit","$event","stopPropagation","AllAdminsComponent","dialog","displayedColumns","listAdmins","MatTableDataSource","refreshList","paginator","sort","getUserByProfile","localStorage","getItem","data","a","b","filterValue","trim","toLowerCase","filter","tempDirection","dialogRef","open","FormDialogComponent","direction","action","afterClosed","row","admin","DeleteComponent","MatPaginator","MatSort","applyFilter","addNew","dialoRef","close","deleteUser","idPerson","MAT_DIALOG_DATA","confirmDelete","onNoClick","userId","dialogTitle","specialite","undefined","updateUser","confirmAdd","routes","path","component","SimpleAdminRoutingModule","RouterModule","SimpleAdminModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatSortModule","MatFormFieldModule","MatDialogModule","MatInputModule","MatButtonModule","MatIconModule","MatToolbarModule","MatSelectModule","MaterialFileInputModule","MatProgressSpinnerModule"],"mappings":"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","file":"src_app_admin_simple-admin_simple-admin_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"block-header\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n            <ul class=\"breadcrumb breadcrumb-style \">\r\n              <li class=\"breadcrumb-item\">\r\n                <h4 class=\"page-title\">Ajout d'un admin</h4>\r\n              </li>\r\n              <li class=\"breadcrumb-item bcrumb-1\">\r\n                <a routerLink=\"/admin/dashboard/main\">\r\n                  <i class=\"fas fa-home\"></i>Accueil</a>\r\n              </li>\r\n              <li class=\"breadcrumb-item bcrumb-2\">\r\n                <a href=\"#\" onClick=\"return false;\">Admin</a>\r\n              </li>\r\n              <li class=\"breadcrumb-item active\">Ajout</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row clearfix\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n          <div class=\"card\">\r\n            <div class=\"header\">\r\n              <h2>Ajouter un administrateur</h2>\r\n            </div>\r\n            <div class=\"body\">\r\n              <form class=\"m-4\" [formGroup]=\"adminForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                      <mat-label>Nom</mat-label>\r\n                      <input matInput formControlName=\"nom\" required>\r\n                      <mat-error *ngIf=\"adminForm.get('nom').hasError('required')\">\r\n                        Le nom est obligatoire\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                      <mat-label>Prénom</mat-label>\r\n                      <input matInput formControlName=\"prenom\" required>\r\n                      <mat-error *ngIf=\"adminForm.get('prenom').hasError('required')\">\r\n                        Le prénom est obligatoire\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                      <mat-label>Genre</mat-label>\r\n                      <mat-select formControlName=\"genre\" required>\r\n                        <mat-option [value]=\"'Homme'\">\r\n                          Homme\r\n                        </mat-option>\r\n                        <mat-option [value]=\"'Femme'\">\r\n                          Femme\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"adminForm.get('genre').hasError('required')\">\r\n                        Le genre est obligatoire\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                      <mat-label>Téléphone</mat-label>\r\n                      <input matInput formControlName=\"telephone\" type=\"number\" required minlength=\"8\">\r\n                      <mat-error *ngIf=\"adminForm.get('telephone').hasError('required')\">\r\n                        Le téléphone est obligatoire\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                      <mat-label>Adresse</mat-label>\r\n                      <input matInput formControlName=\"adresse\" required minlength=\"4\">\r\n                      <mat-error *ngIf=\"adminForm.get('adresse').hasError('required')\">\r\n                        Ce champ est obligatoire\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                      <mat-label>Email</mat-label>\r\n                      <input matInput formControlName=\"email\" required>\r\n                      <mat-error *ngIf=\"adminForm.get('email').hasError('email') && adminForm.get('email').touched\">\r\n                        Entrer votre email valide\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                      <mat-label>Nom d'utilisateur</mat-label>\r\n                      <input matInput formControlName=\"username\" required minlength=\"3\">\r\n                      <mat-error *ngIf=\"adminForm.get('username').hasError('required')\">\r\n                        Ce champ est obligatoire\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                      <mat-label>Mot de passe</mat-label>\r\n                      <input matInput formControlName=\"password\" type=\"password\" required>\r\n                      <mat-error *ngIf=\"adminForm.get('password').hasError('required')\">\r\n                        Le mot de passe est obligatoire\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                    <button class=\"btn-space\" [disabled]=\"!adminForm.valid \" mat-raised-button\r\n                      color=\"primary\">Ajouter</button>\r\n                    <button type=\"button\" color=\"warn\" (click)=\"resetForm()\" mat-raised-button>Annuler</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { RestApiService } from 'src/app/core/service/api-services/rest-api.service';\r\nimport { ToasServiceService } from 'src/app/core/service/toast-service/toas-service.service';\r\n\r\n@Component({\r\n  selector: 'app-add-admin',\r\n  templateUrl: './add-admin.component.html',\r\n  styleUrls: ['./add-admin.component.sass']\r\n})\r\nexport class AddAdminComponent implements OnInit {\r\n  adminForm: FormGroup;\r\n  userBody: any;\r\n\r\n  constructor(private fb: FormBuilder, private restApi: RestApiService,\r\n    private router: Router,\r\n    private toastr: ToasServiceService)\r\n  {\r\n    this.adminForm = this.fb.group({\r\n        nom: [\"\", Validators.required],\r\n        prenom: [\"\", Validators.required],\r\n        adresse: [\"\", Validators.required],\r\n        genre: [\"\", Validators.required],\r\n        telephone: [\"\", Validators.required],\r\n        email: [\r\n          \"\",\r\n          [Validators.required, Validators.email],\r\n        ],\r\n        username: [\"\", Validators.required],\r\n        password: [\"\", Validators.required],\r\n      });\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit()\r\n  {\r\n    this.userBody = {\r\n      \"person_type\": \"ADMIN\",\r\n      \"profile\": \"ADMIN\",\r\n      \"nom\": this.adminForm.value.nom,\r\n      \"prenom\": this.adminForm.value.prenom,\r\n      \"adresse\": this.adminForm.value.adresse,\r\n      \"telephone\": this.adminForm.value.telephone,\r\n      \"email\": this.adminForm.value.email,\r\n      \"genre\": this.adminForm.value.genre,\r\n      \"username\": this.adminForm.value.username,\r\n      \"password\": this.adminForm.value.password,\r\n      \"imageProfile\": \"imageLinnnkkk\",\r\n      \"roles\": [\r\n        {\"idRole\": 2}\r\n      ]\r\n    };\r\n\r\n    this.restApi.addNewUser(this.userBody).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.resetForm();\r\n          this.toastr.showSuccessMessage(\"L'administrateur ajouté avec succès !\");\r\n          this.router.navigate(['/admin/simple-admin/allAdmins']);\r\n        },\r\n        error: error =>{\r\n          console.log(error);\r\n          this.toastr.showErrorMessage(\"Ajout non éffectué !\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  resetForm()\r\n  {\r\n    this.adminForm.reset();\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"block-header\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n            <ul class=\"breadcrumb breadcrumb-style \">\r\n              <li class=\"breadcrumb-item\">\r\n                <h4 class=\"page-title\">Liste des admins</h4>\r\n              </li>\r\n              <li class=\"breadcrumb-item bcrumb-1\">\r\n                <a routerLink=\"/admin/dashboard/main\">\r\n                  <i class=\"fas fa-home\"></i>Accueil</a>\r\n              </li>\r\n              <li class=\"breadcrumb-item bcrumb-2\">\r\n                <a href=\"#\" onClick=\"return false;\">Admins</a>\r\n              </li>\r\n              <li class=\"breadcrumb-item active\">Liste</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n          <div class=\"card\">\r\n            <div class=\"body\">\r\n              <div class=\"table-responsive\">\r\n                <div class=\"materialTableHeader\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-8\">\r\n                      <ul class=\"header-buttons-left ms-0\">\r\n                        <li class=\"dropdown\">\r\n                          <h2>\r\n                            <strong>Administrateurs</strong></h2>\r\n                        </li>\r\n                        <li class=\"dropdown m-l-20\">\r\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                          <input placeholder=\"Recherche\" type=\"text\" (keyup)=\"applyFilter($event.target.value)\" class=\"browser-default search-field\"\r\n                            aria-label=\"Search box\">\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                      <ul class=\"header-buttons\">\r\n                        <li>\r\n                          <div class=\"icon-button-demo\">\r\n                            <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                              <mat-icon class=\"col-white\">add</mat-icon>\r\n                            </button>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <mat-table [dataSource]=\"listAdmins\" matSort class=\"mat-cell\">\r\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  \r\n                  <ng-container matColumnDef=\"nom\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Nom</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.nom}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"prenom\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Prénom</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.prenom}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"telephone\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Téléphone</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.telephone}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"email\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"adresse\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Adresse</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.adresse}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"genre\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Genre</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\">{{row.genre}}</mat-cell>\r\n                  </ng-container>\r\n                  <!-- actions -->\r\n                  <ng-container matColumnDef=\"actions\">\r\n                    <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\" class=\"pr-0\">\r\n                      <button mat-icon-button class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                        (click)=\"editCall(row)\">\r\n                        <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                      </button>\r\n                      <button mat-icon-button class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                        (click)=\"deleteItem(row)\">\r\n                        <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                      </button>\r\n                    </mat-cell>\r\n                  </ng-container>\r\n                </mat-table>\r\n                <div *ngIf=\"listAdmins.data.length === 0\" class=\"no-results text-center mt-3\">\r\n                  Y'a pas encore d'admins\r\n                </div>\r\n                <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                  [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n                </mat-paginator>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  ","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { RestApiService } from 'src/app/core/service/api-services/rest-api.service';\r\nimport { DeleteComponent } from '../dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from '../dialogs/form-dialog/form-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-all-admins',\r\n  templateUrl: './all-admins.component.html',\r\n  styleUrls: ['./all-admins.component.sass']\r\n})\r\nexport class AllAdminsComponent implements OnInit, AfterViewInit {\r\n  displayedColumns = [\r\n    \"nom\",\r\n    \"prenom\",\r\n    \"telephone\",\r\n    \"email\",\r\n    \"adresse\",\r\n    \"genre\",\r\n    \"actions\",\r\n  ];\r\n  public listAdmins: any = new MatTableDataSource([]);\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private restApi: RestApiService, private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.refreshList();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n      this.listAdmins.paginator = this.paginator; //Add Pagination\r\n      this.listAdmins.sort = this.sort; //Add sort header element\r\n  }\r\n\r\n  refreshList()\r\n  {\r\n    this.restApi.getUserByProfile(\"ADMIN\", localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result=>{\r\n          this.listAdmins.data = result;\r\n\r\n          //Sort list element order by desc\r\n          this.listAdmins.data = this.listAdmins.data.sort((a, b)=> b - a);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  //Search filter table\r\n  applyFilter(filterValue: string)\r\n  {\r\n    filterValue = filterValue.trim();\r\n    filterValue = filterValue.toLowerCase();\r\n\r\n    this.listAdmins.filter = filterValue;\r\n  }\r\n\r\n  //Add new admin\r\n  addNew() {\r\n    //Add dialog config\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n\r\n    //Make add dialog\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      direction: tempDirection,\r\n      data: {\r\n        action: \"add\"\r\n      }\r\n    });\r\n\r\n    //Close added dialog\r\n    dialogRef.afterClosed().subscribe(\r\n      {\r\n        next: result =>{\r\n          this.refreshList(); //Refresh list\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  //Edit admin\r\n  editCall(row) {\r\n    //Edit dialog config\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n\r\n    //Make edit dialog\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        admin: row,\r\n        action: \"edit\"\r\n      },\r\n      direction: tempDirection\r\n    });\r\n\r\n    //Close edit dialog\r\n    dialogRef.afterClosed().subscribe(\r\n      {\r\n        next: result =>{\r\n          this.refreshList(); //Refresh list\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  //Delete admin\r\n  deleteItem(row) {\r\n    //Delete dialog config\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    \r\n    //Make Delete dialog\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n\r\n    //Close delete dialog\r\n    dialogRef.afterClosed().subscribe(\r\n      {\r\n        next: result =>{\r\n          this.refreshList(); //Refresh list\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RestApiService } from 'src/app/core/service/api-services/rest-api.service';\r\nimport { ToasServiceService } from 'src/app/core/service/toast-service/toas-service.service';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialoRef: MatDialogRef<DeleteComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private restApi: RestApiService,\r\n    private toastr: ToasServiceService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick()\r\n  {\r\n    this.dialoRef.close();\r\n  }\r\n\r\n  confirmDelete(): void\r\n  {\r\n    this.restApi.deleteUser(this.data.idPerson, localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result=>{\r\n          this.toastr.showSuccessMessage(\"Suppression éffectuée avec succès !\");\r\n        },\r\n        error: error =>{\r\n          console.log(error);\r\n          this.toastr.showErrorMessage(\"Suppression non éffectuée !\");\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h5 mat-dialog-title>Êtes-vous sûr de supprimer ?</h5>\r\n    <div mat-dialog-content>\r\n      <ul class=\"clearfix\">\r\n        <li>\r\n          <p><span class=\"font-weight-bold\">Nom : </span><strong>{{data.nom}} {{data.prenom}}</strong></p>\r\n        </li>\r\n        <li>\r\n          <p>\r\n            <span class=\"font-weight-bold\">Tél : </span>{{data.telephone}}\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n      <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n        Oui\r\n      </button>\r\n      <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Non</button>\r\n    </div>\r\n</div>\r\n  ","<div class=\"addContainer\">\r\n    <div class=\"modalHeader\">\r\n      <div class=\"editRowModal\">\r\n        <div class=\"modalHeader clearfix\">\r\n          <div class=\"modal-about\">\r\n            <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n              {{dialogTitle}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <form class=\"register-form m-4\" [formGroup]=\"adminForm\" (ngSubmit)=\"submit\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Nom</mat-label>\r\n              <input matInput formControlName=\"nom\" required>\r\n              <mat-icon matSuffix>face</mat-icon>\r\n              <mat-error *ngIf=\"adminForm.get('nom').hasError('required')\">\r\n                Le nom est obligatoire\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Prénom</mat-label>\r\n              <input matInput formControlName=\"prenom\" required>\r\n              <mat-icon matSuffix>face</mat-icon>\r\n              <mat-error *ngIf=\"adminForm.get('prenom').hasError('required')\">\r\n                Le prénom est obligatoire\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-icon matSuffix>email</mat-icon>\r\n                    <mat-error *ngIf=\"adminForm.get('email').hasError('required') || adminForm.get('email').touched\">\r\n                    Entrer votre email valide !\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Adresse</mat-label>\r\n              <input matInput formControlName=\"adresse\" required minlength=\"4\">\r\n              <mat-icon matSuffix>book</mat-icon>\r\n              <mat-error *ngIf=\"adminForm.get('adresse').hasError('required')\">\r\n                Ce champ est obligatoire\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Téléphone</mat-label>\r\n              <input matInput formControlName=\"telephone\" type=\"number\" required minlength=\"8\">\r\n              <mat-icon matSuffix>phone</mat-icon>\r\n              <mat-error *ngIf=\"adminForm.get('telephone').hasError('required')\">\r\n                le numéro de téléphone est obligatoire\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width mb-3\">\r\n              <mat-label>Genre</mat-label>\r\n              <mat-select formControlName=\"genre\" required>\r\n                <mat-option value=\"Homme\">\r\n                  Homme\r\n                </mat-option>\r\n                <mat-option value=\"Femme\">\r\n                  Femme\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"adminForm.get('genre').hasError('required')\">\r\n                Champ obligatoire, choissez un genre\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Nom d'utlisateur</mat-label>\r\n              <input matInput formControlName=\"username\" type=\"text\" required minlength=\"3\">\r\n              <mat-icon matSuffix>face</mat-icon>\r\n              <mat-error *ngIf=\"adminForm.get('username').hasError('required')\">\r\n                Ce champ est obligatoire\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" *ngIf=\"action!=='edit'\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Mot de passe</mat-label>\r\n              <input matInput formControlName=\"password\" type=\"text\">\r\n              <mat-icon matSuffix>key</mat-icon>\r\n              <mat-error *ngIf=\"adminForm.get('password').hasError('required')\">\r\n                Ce champ est obligatoire\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n            <div class=\"example-button-row\">\r\n              <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!adminForm.valid\"\r\n                [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Enregistrer</button>\r\n              <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Annuler</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RestApiService } from 'src/app/core/service/api-services/rest-api.service';\r\nimport { ToasServiceService } from 'src/app/core/service/toast-service/toas-service.service';\r\n\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass']\r\n})\r\nexport class FormDialogComponent implements OnInit {\r\n  public dialogTitle: any;\r\n  public action: string;\r\n  public adminForm: FormGroup;\r\n  public userBody: any;\r\n  public userId: any;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    private restApi: RestApiService,\r\n    private toastr: ToasServiceService\r\n  )\r\n  {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\")\r\n    {\r\n      this.userId = data.admin.idPerson;\r\n      this.dialogTitle = \"Modification de \"+data.admin.nom+\" \"+data.admin.prenom;\r\n      this.adminForm = this.fb.group({\r\n        nom: [data.admin.nom],\r\n        prenom: [data.admin.prenom],\r\n        specialite: [data.admin.specialite],\r\n        adresse: [data.admin.adresse],\r\n        telephone: [data.admin.telephone],\r\n        email: [data.admin.email],\r\n        genre: [data.admin.genre],\r\n        username: [data.admin.username]\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.dialogTitle = \"Ajouter un nouveau administrateur\";\r\n      this.adminForm = this.fb.group({\r\n        nom: [\"\", Validators.required],\r\n        prenom: [\"\", Validators.required],\r\n        adresse: [\"\", Validators.required],\r\n        telephone: [\"\", Validators.required],\r\n        email: [\"\", [Validators.required, Validators.email]],\r\n        genre: [\"\", Validators.required],\r\n        username: [\"\", Validators.required],\r\n        password: [\"\", Validators.required]\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n\r\n  onNoClick()\r\n  {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  confirmAdd()\r\n  {\r\n    if(this.action === \"edit\" && this.adminForm.value.password === undefined)\r\n    { \r\n      this.userBody = {\r\n        \"person_type\": \"ADMIN\",\r\n        \"profile\": \"ADMIN\",\r\n        \"nom\": this.adminForm.value.nom,\r\n        \"prenom\": this.adminForm.value.prenom,\r\n        \"adresse\": this.adminForm.value.adresse,\r\n        \"telephone\": this.adminForm.value.telephone,\r\n        \"email\": this.adminForm.value.email,\r\n        \"genre\": this.adminForm.value.genre,\r\n        \"username\": this.adminForm.value.username,\r\n        \"password\": null,\r\n        \"imageProfile\": \"imageLinnnkkk\",\r\n        \"roles\": [\r\n          {\"idRole\": 2}\r\n        ]\r\n      };\r\n      \r\n      this.restApi.updateUser(this.userId, this.userBody, localStorage.getItem(\"token\")).subscribe(\r\n        {\r\n          next: result =>{\r\n            this.toastr.showSuccessMessage(\"Modification éffectuée avec succès !\");\r\n          },\r\n          error: error =>{\r\n            console.log(error);\r\n            this.toastr.showErrorMessage(\"Modification non éffectuée !\");\r\n            \r\n          }\r\n        }\r\n      )\r\n    }\r\n    else\r\n    {\r\n      this.userBody = {\r\n        \"person_type\": \"ADMIN\",\r\n        \"profile\": \"ADMIN\",\r\n        \"nom\": this.adminForm.value.nom,\r\n        \"prenom\": this.adminForm.value.prenom,\r\n        \"adresse\": this.adminForm.value.adresse,\r\n        \"telephone\": this.adminForm.value.telephone,\r\n        \"email\": this.adminForm.value.email,\r\n        \"genre\": this.adminForm.value.genre,\r\n        \"username\": this.adminForm.value.username,\r\n        \"password\": this.adminForm.value.password,\r\n        \"imageProfile\": \"imageLinnnkkk\",\r\n        \"roles\": [\r\n          {\"idRole\": 2}\r\n        ]\r\n      };\r\n\r\n      this.restApi.addNewUser(this.userBody).subscribe(\r\n        {\r\n          next: result =>{\r\n            this.toastr.showSuccessMessage(\"Ajout éffectué avec succès !\");\r\n          },\r\n          error: error =>{\r\n            console.log(error);\r\n            this.toastr.showErrorMessage(\"Ajout non éffectué !\");\r\n          }\r\n        }\r\n      );\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddAdminComponent } from './add/add-admin/add-admin.component';\r\nimport { AllAdminsComponent } from './all/all-admins/all-admins.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'allAdmins',\r\n    component: AllAdminsComponent\r\n  },\r\n  {\r\n    path: 'add-admin',\r\n    component: AddAdminComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SimpleAdminRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SimpleAdminRoutingModule } from './simple-admin-routing.module';\r\nimport { AddAdminComponent } from './add/add-admin/add-admin.component';\r\nimport { AllAdminsComponent } from './all/all-admins/all-admins.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FormDialogComponent } from './all/dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteComponent } from './all/dialogs/delete/delete.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddAdminComponent,\r\n    AllAdminsComponent,\r\n    FormDialogComponent,\r\n    DeleteComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SimpleAdminRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MaterialFileInputModule,\r\n    SimpleAdminRoutingModule,\r\n    MatProgressSpinnerModule\r\n  ]\r\n})\r\nexport class SimpleAdminModule { }\r\n"]}