{"version":3,"sources":["webpack:///src/app/authentication/authentication-routing.module.ts","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/forgot-password/forgot-password.component.html","webpack:///src/app/authentication/forgot-password/forgot-password.component.ts","webpack:///src/app/authentication/signin/signin.component.html","webpack:///src/app/authentication/signin/signin.component.ts","webpack:///src/app/authentication/signup/next-signup/next-signup.component.html","webpack:///src/app/authentication/signup/next-signup/next-signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup/signup.component.ts"],"names":["routes","path","redirectTo","pathMatch","component","SigninComponent","SignupComponent","NextSignupComponent","ForgotPasswordComponent","AuthenticationRoutingModule","RouterModule","AuthenticationModule","CommonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","MatSelectModule","formBuilder","router","restApi","toastr","authForm","group","username","Validators","password","controls","invalid","changeUserPassword","value","subscribe","next","result","showSuccessMessage","navigate","error","showErrorMessage","onSubmit","authService","submitted","loading","hide","login","f","token","setTimeout","userRole","localStorage","getItem","Role","UnsubscribeOnDestroyAdapter","activedRoute","chide","queryParams","data","userDataSendByRoute","getAllSpecialities","allSpecialities","cpassword","profile","userPostBody","nom","prenom","adresse","telephone","email","genre","specialite","profession","symptom","addNewUser","console","log","message","route","returnUrl","snapshot","navigationValue"],"mappings":"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","file":"src_app_authentication_authentication_module_ts-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { NextSignupComponent } from \"./signup/next-signup/next-signup.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"signin\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"signin\",\r\n    component: SigninComponent,\r\n  },\r\n  {\r\n    path: \"signup\",\r\n    component: SignupComponent,\r\n  },\r\n  {\r\n    path: \"next-signup\",\r\n    component: NextSignupComponent\r\n  },\r\n  {\r\n    path: \"forgot-password\",\r\n    component: ForgotPasswordComponent\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AuthenticationRoutingModule } from \"./authentication-routing.module\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { NextSignupComponent } from './signup/next-signup/next-signup.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SigninComponent,\r\n    SignupComponent,\r\n    ForgotPasswordComponent,\r\n    NextSignupComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n  ],\r\n})\r\nexport class AuthenticationModule {}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <div class=\"logo\">\r\n            <img  src=\"../../../assets/images/ges_cab.png\" alt=\"\" width=\"250\" height=\"250\" >\r\n          </div>\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h2 class=\"welcome-msg card-title\"> Réinitiliser votre mot de passe </h2>\r\n     \r\n              <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                      Entrer votre informations.\r\n                    </span>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <mat-label>Nom d'utilisateur</mat-label>\r\n                      <input matInput formControlName=\"username\" required>\r\n                      <mat-icon matSuffix>face</mat-icon>\r\n                      <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                       Veuillez renseigner votre nom d'utilisateur\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                   \r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <mat-label>Nouveau mot de passe</mat-label>\r\n                      <input matInput formControlName=\"password\" required>\r\n                      <mat-icon matSuffix>password</mat-icon>\r\n                      <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                       Veuillez renseigner votre nouveau mot de passe\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"container-auth-form-btn mt-2 mb-0\">\r\n                  <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                    Envoyer\r\n                  </button>\r\n                </div>\r\n                <div class=\"w-full p-t-25 text-center\">\r\n                  <div>\r\n                    <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                      Se connecter?\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\nimport { ToasServiceService } from \"src/app/core/service/toast-service/toas-service.service\";\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private restApi: RestApiService,\r\n    private toastr: ToasServiceService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\r\n        \"\",\r\n        [ Validators.required, Validators.minLength(3)],\r\n      ],\r\n\r\n      password: [\r\n        \"\",\r\n        [ Validators.required, Validators.minLength(6)],\r\n      ]\r\n     \r\n    });\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n    //  console.log(this.authForm.controls.username.value);\r\n     this.restApi.changeUserPassword(this.authForm.controls.username.value, this.authForm.controls.password.value).subscribe(\r\n       {\r\n         next: result =>{\r\n           this.toastr.showSuccessMessage(result);\r\n           this.router.navigate([\"/authentication/signin\"])\r\n         },\r\n         error: error=>{\r\n           this.toastr.showErrorMessage(\"Ce nom d'utilisateur n'existe pas\");\r\n         }\r\n       }\r\n     );\r\n     \r\n    }\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\"  href=\"signin.component.scss\">\r\n  <title>GesCab</title>\r\n</head>\r\n<body>\r\n  <div class=\"auth-container\">\r\n    <div class=\"row auth-main\">\r\n      <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n        <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 auth-form-section\">\r\n        <div class=\"form-section\">\r\n          <div class=\"auth-wrapper\">\r\n            <div class=\"logo\">\r\n              <img  src=\"../../../assets/images/ges_cab.png\" alt=\"\" width=\"250\" height=\"250\" >\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n                  <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-3\">{{error}}</div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Nom d'utilisateur</mat-label>\r\n                        <input matInput formControlName=\"username\" minlength=\"3\">\r\n                        <mat-icon matSuffix>face</mat-icon>\r\n                        <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                          Champ obligatoire\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Mot de passe</mat-label>\r\n                        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" minlength=\"6\">\r\n                        <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"\r\n                          [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                        </a>\r\n                        <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                          Mot de passe obligatoire\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"mb-2 textRight\">\r\n                    <a routerLink=\"/authentication/forgot-password\">Mot de passe oublié?</a>\r\n                  </div>\r\n                  <div class=\"container-auth-form-btn\">\r\n                    <div style=\"text-align:center\">\r\n                      <button mat-raised-button [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\r\n                        class=\"auth-form-btn\" color=\"primary\" [disabled]=\"!authForm.valid \" type=\"submit\" >Connexion</button>\r\n                    </div>\r\n                    <div class=\"text-center mt-2 mb-1\">\r\n                      <span>OU</span>\r\n                    </div>\r\n                    <div style=\"text-align:center\" class=\"mt-1\">\r\n                      <button mat-raised-button class=\"auth-form-btn sign-up-button\" type=\"submit\" routerLink=\"/authentication/signup\">S'inscrire</button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n        \r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n  \r\n</body>\r\n</html>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"src/app/core/service/auth.service\";\r\nimport { Role } from \"src/app/core/models/role\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.scss\"],\r\n})\r\nexport class SigninComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  loading = false;\r\n  error = \"\";\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\"\", Validators.required],\r\n      password: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n\r\n  onSubmit()\r\n  {\r\n    this.loading = true;\r\n    if(this.authForm.invalid)\r\n    {\r\n      this.error = \"Nom d'utilisateur ou mot de passe non valide !\";\r\n      return;\r\n    }\r\n    else\r\n    {\r\n      this.authService.login(this.f.username.value, this.f.password.value).subscribe(\r\n        {\r\n          next: (token) => {\r\n            setTimeout(() => {\r\n              let userRole = localStorage.getItem(\"userRole\");\r\n              if(userRole === Role.SUPERADMIN || userRole === Role.ADMIN)\r\n              {\r\n                this.router.navigate([\"/admin/dashboard/main\"]);\r\n              }\r\n              else if(userRole === Role.MEDECIN)\r\n              {\r\n                this.router.navigate([\"/doctor/dashboard\"]);\r\n              }\r\n              else if(userRole === Role.PATIENT)\r\n              {\r\n                this.router.navigate([\"/patient/dashboard\"]);\r\n              }\r\n              else\r\n              {\r\n                this.router.navigate([\"/authentication/signin\"]);\r\n              }\r\n              \r\n              this.loading = false;\r\n            }, 1000);\r\n          },\r\n          error: () => {\r\n            this.error = \"Nom d'utilisateur ou mot de passe non valide !\";\r\n            this.loading = false;\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\" style=\"background-color: white;\">\r\n      <div class=\"logo\">\r\n        <img  src=\"../../../assets/images/ges_cab.png\" alt=\"\" width=\"150\">\r\n      </div>\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\" style=\"margin-bottom: -12%;\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> S'inscrire </h2>\r\n          <p class=\"auth-signup-text text-muted\">Veuillez fournir vos informations restantes</p>\r\n          <form class=\"validate-form\" #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-3\">{{error}}</div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput type=\"email\" name=\"email\" ngModel [email]=\"true\" required>\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Veuillez entrer le bon E-mail\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width mb-3\">\r\n                  <mat-label>Profile</mat-label>\r\n                  <mat-select name=\"profile\" ngModel required #profile=\"ngModel\">\r\n                    <mat-option value=\"PATIENT\">\r\n                      PATIENT\r\n                    </mat-option>\r\n                    <mat-option value=\"MEDECIN\">\r\n                      MEDECIN\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Champ obligatoire, choissez un Profile\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"profile.value==='PATIENT'\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Profession</mat-label>\r\n                  <input matInput name=\"profession\" ngModel required>\r\n                  <mat-icon matSuffix>grade</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Veuillez entrer votre profession\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"profile.value==='PATIENT'\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Symptôme</mat-label>\r\n                  <input matInput name=\"symptom\" ngModel required>\r\n                  <mat-icon matSuffix>mood_bad</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Veuillez entrer votre symptôme\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"profile.value==='MEDECIN'\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Spécialité</mat-label>\r\n                  <mat-select name=\"specialite\" ngModel required>\r\n                    <mat-option *ngFor=\"let item of allSpecialities\" value=\"{{item.idSpecialite}}\">\r\n                      {{item.nom}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Veuillez entrer votre spécialité\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Mot de passe</mat-label>\r\n                  <input matInput name=\"password\" ngModel [type]=\"hide ? 'password' : 'text'\" minlength=\"6\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Mot de passe obligatoire et au moins 6 caractères\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Confirmer le mot de passe</mat-label>\r\n                  <input matInput name=\"cpassword\" ngModel [type]=\"chide ? 'password' : 'text'\" minlength=\"6\" required>\r\n                  <mat-icon matSuffix (click)=\"chide = !chide\">\r\n                    {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Mot de passe confirmer obligatoire et au moins 6 caractères\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex-sb-m w-full  p-b-20\">\r\n              <div>\r\n                <span>Vous avez déjà un compte? <a routerLink=\"/authentication/signin\">\r\n                    Connecter\r\n                  </a></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid\" type=\"submit\">\r\n                S'inscrire\r\n              </button>\r\n            </div>\r\n          </form>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RestApiService } from 'src/app/core/service/api-services/rest-api.service';\r\nimport { ToasServiceService } from 'src/app/core/service/toast-service/toas-service.service';\r\n\r\n@Component({\r\n  selector: 'app-next-signup',\r\n  templateUrl: './next-signup.component.html',\r\n  styleUrls: ['./next-signup.component.sass']\r\n})\r\nexport class NextSignupComponent implements OnInit {\r\n  hide = true;\r\n  chide = true;\r\n  error: any;\r\n  public userDataSendByRoute: any;\r\n  public userPostBody: any;\r\n  public allSpecialities: any;\r\n\r\n  constructor(private activedRoute: ActivatedRoute, private restApi: RestApiService, private router: Router, private toastr: ToasServiceService) {\r\n    this.activedRoute.queryParams.subscribe(\r\n      data => {\r\n        this.userDataSendByRoute = data;\r\n      }\r\n    );\r\n\r\n    this.restApi.getAllSpecialities().subscribe(\r\n      {\r\n        next: result =>{\r\n          this.allSpecialities = result;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  onSubmit(authForm: NgForm)\r\n  {\r\n    if(authForm.value.password !== authForm.value.cpassword)\r\n    {\r\n      this.error = \"Votre mot de passe et le mot de passe confirmer doivent être identique !!!\";\r\n      return;\r\n    }\r\n    else\r\n    {\r\n      if(authForm.value.profile === \"MEDECIN\")\r\n      { \r\n        this.userPostBody = {\r\n          \"person_type\": \"MEDECIN\",\r\n          \"profile\": authForm.value.profile,\r\n          \"nom\": this.userDataSendByRoute.nom,\r\n          \"prenom\": this.userDataSendByRoute.prenom,\r\n          \"adresse\": this.userDataSendByRoute.adresse,\r\n          \"telephone\": this.userDataSendByRoute.telephone,\r\n          \"email\": authForm.value.email,\r\n          \"genre\": this.userDataSendByRoute.genre,\r\n          \"username\": this.userDataSendByRoute.username,\r\n          \"password\": authForm.value.password,\r\n          \"specialite\": {\r\n            \"idSpecialite\": authForm.value.specialite\r\n          },\r\n          \"imageProfile\": \"imageLinnnkkk\",\r\n          \"roles\": [\r\n            {\"idRole\": 3}\r\n          ]\r\n        };\r\n        \r\n      }\r\n      else if(authForm.value.profile === \"PATIENT\")\r\n      {\r\n        this.userPostBody = {\r\n          \"person_type\": \"PATIENT\",\r\n          \"profile\": authForm.value.profile,\r\n          \"profession\": authForm.value.profession,\r\n          \"symptom\": authForm.value.symptom,\r\n          \"nom\": this.userDataSendByRoute.nom,\r\n          \"prenom\": this.userDataSendByRoute.prenom,\r\n          \"adresse\": this.userDataSendByRoute.adresse,\r\n          \"telephone\": this.userDataSendByRoute.telephone,\r\n          \"email\": authForm.value.email,\r\n          \"genre\": this.userDataSendByRoute.genre,\r\n          \"username\": this.userDataSendByRoute.username,\r\n          \"password\": authForm.value.password,\r\n          \"imageProfile\": \"imageLinnnkkk\",\r\n          \"roles\": [\r\n            {\"idRole\": 4}\r\n          ]\r\n        };\r\n      }\r\n      else\r\n      {\r\n        this.error = \"Inscription non éffectué !!!\";\r\n        return;\r\n      }\r\n\r\n      this.restApi.addNewUser(this.userPostBody).subscribe(\r\n        {\r\n          next: result => {\r\n            this.toastr.showSuccessMessage(\"Inscription éffectué avec succès\");\r\n            this.router.navigate(['/authentication/signin']);\r\n            \r\n\r\n          },\r\n          error: error =>{\r\n            console.log(error);\r\n            this.toastr.showErrorMessage(error.message);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\" style=\"background-color: white;\">\r\n      <div class=\"logo\">\r\n        <img  src=\"../../../assets/images/ges_cab.png\" alt=\"\" width=\"150\">\r\n      </div>\r\n      <div class=\"left-img img-fluid\" style=\"background-image: url(assets/images/pages/Gb.png);\"></div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> S'inscrire </h2>\r\n          <p class=\"auth-signup-text text-muted\">Veuillez fournir vos informations</p>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Nom d'utilisateur</mat-label>\r\n                  <input matInput formControlName=\"username\" minlength=\"3\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Champ obligatoire, donnez un bon username\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Nom</mat-label>\r\n                  <input matInput formControlName=\"nom\" minlength=\"3\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('nom').hasError('required')\">\r\n                    Champ obligatoire, donnez un bon nom\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Prénom</mat-label>\r\n                  <input matInput formControlName=\"prenom\" minlength=\"3\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('prenom').hasError('required')\">\r\n                    Champ obligatoire, donnez un bon prenom\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Adresse</mat-label>\r\n                  <input matInput formControlName=\"adresse\" minlength=\"4\" required>\r\n                  <mat-icon matSuffix>book</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('adresse').hasError('required')\">\r\n                    Champ obligatoire, donnez une bonne adresse\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width mb-3\">\r\n                  <mat-label>Genre</mat-label>\r\n                  <mat-select formControlName=\"genre\" required>\r\n                    <mat-option value=\"Homme\">\r\n                      Homme\r\n                    </mat-option>\r\n                    <mat-option value=\"Femme\">\r\n                      Femme\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"authForm.get('genre').hasError('required')\">\r\n                    Champ obligatoire, choissez un genre\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Téléphone</mat-label>\r\n                  <input matInput formControlName=\"telephone\" type=\"number\" minlength=\"8\" required>\r\n                  <mat-icon matSuffix>phone</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('telephone').hasError('required')\">\r\n                    Champ obligatoire, donnez votre numéro de téléphone\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex-sb-m w-full  p-b-20\">\r\n              <div>\r\n                <span>Vous avez déjà un compte? <a routerLink=\"/authentication/signin\">\r\n                    Connecter\r\n                  </a></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid\" type=\"submit\">\r\n                Suivant\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute, NavigationExtras } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\"\", Validators.required],\r\n      nom: [\"\", Validators.required],\r\n      prenom: [\"\", Validators.required],\r\n      adresse: [\"\", Validators.required],\r\n      genre: [\"\", Validators.required],\r\n      telephone: [\"\", Validators.required]\r\n    });\r\n    \r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    }\r\n    else\r\n    {\r\n      const navigationValue: NavigationExtras = {queryParams: {\r\n        username: this.f.username.value,\r\n        nom: this.f.nom.value,\r\n        prenom: this.f.prenom.value,\r\n        adresse: this.f.adresse.value,\r\n        genre: this.f.genre.value,\r\n        telephone: this.f.telephone.value,\r\n      }}\r\n      this.router.navigate(['/authentication/next-signup'], navigationValue);\r\n    }\r\n  }\r\n}\r\n"]}