{"version":3,"sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/authentication/signup/next-signup/next-signup.component.html","./src/app/authentication/signup/next-signup/next-signup.component.ts","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html"],"names":[],"mappings":"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","file":"src_app_authentication_authentication_module_ts-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { NextSignupComponent } from \"./signup/next-signup/next-signup.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"signin\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"signin\",\r\n    component: SigninComponent,\r\n  },\r\n  {\r\n    path: \"signup\",\r\n    component: SignupComponent,\r\n  },\r\n  {\r\n    path: \"next-signup\",\r\n    component: NextSignupComponent\r\n  },\r\n  {\r\n    path: \"forgot-password\",\r\n    component: ForgotPasswordComponent\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AuthenticationRoutingModule } from \"./authentication-routing.module\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { NextSignupComponent } from './signup/next-signup/next-signup.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SigninComponent,\r\n    SignupComponent,\r\n    ForgotPasswordComponent,\r\n    NextSignupComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n  ],\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\nimport { ToasServiceService } from \"src/app/core/service/toast-service/toas-service.service\";\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private restApi: RestApiService,\r\n    private toastr: ToasServiceService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\r\n        \"\",\r\n        [ Validators.required, Validators.minLength(3)],\r\n      ],\r\n\r\n      password: [\r\n        \"\",\r\n        [ Validators.required, Validators.minLength(6)],\r\n      ]\r\n     \r\n    });\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n    //  console.log(this.authForm.controls.username.value);\r\n     this.restApi.changeUserPassword(this.authForm.controls.username.value, this.authForm.controls.password.value).subscribe(\r\n       {\r\n         next: result =>{\r\n           this.toastr.showSuccessMessage(result);\r\n           this.router.navigate([\"/authentication/signin\"])\r\n         },\r\n         error: error=>{\r\n           this.toastr.showErrorMessage(\"Ce nom d'utilisateur n'existe pas\");\r\n         }\r\n       }\r\n     );\r\n     \r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <div class=\"logo\">\r\n            <img  src=\"../../../assets/images/ges_cab.png\" alt=\"\" width=\"250\" height=\"250\" >\r\n          </div>\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h2 class=\"welcome-msg card-title\"> Réinitiliser votre mot de passe </h2>\r\n     \r\n              <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                      Entrer votre informations.\r\n                    </span>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <mat-label>Nom d'utilisateur</mat-label>\r\n                      <input matInput formControlName=\"username\" required>\r\n                      <mat-icon matSuffix>face</mat-icon>\r\n                      <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                       Veuillez renseigner votre nom d'utilisateur\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                   \r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <mat-label>Nouveau mot de passe</mat-label>\r\n                      <input matInput formControlName=\"password\" required>\r\n                      <mat-icon matSuffix>password</mat-icon>\r\n                      <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                       Veuillez renseigner votre nouveau mot de passe\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"container-auth-form-btn mt-2 mb-0\">\r\n                  <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                    Envoyer\r\n                  </button>\r\n                </div>\r\n                <div class=\"w-full p-t-25 text-center\">\r\n                  <div>\r\n                    <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                      Se connecter?\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"src/app/core/service/auth.service\";\r\nimport { Role } from \"src/app/core/models/role\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.scss\"],\r\n})\r\nexport class SigninComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  loading = false;\r\n  error = \"\";\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\"\", Validators.required],\r\n      password: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n\r\n  onSubmit()\r\n  {\r\n    this.loading = true;\r\n    if(this.authForm.invalid)\r\n    {\r\n      this.error = \"Nom d'utilisateur ou mot de passe non valide !\";\r\n      return;\r\n    }\r\n    else\r\n    {\r\n      this.authService.login(this.f.username.value, this.f.password.value).subscribe(\r\n        {\r\n          next: (token) => {\r\n            setTimeout(() => {\r\n              let userRole = localStorage.getItem(\"userRole\");\r\n              if(userRole === Role.SUPERADMIN || userRole === Role.ADMIN)\r\n              {\r\n                this.router.navigate([\"/admin/dashboard/main\"]);\r\n              }\r\n              else if(userRole === Role.MEDECIN)\r\n              {\r\n                this.router.navigate([\"/doctor/dashboard\"]);\r\n              }\r\n              else if(userRole === Role.PATIENT)\r\n              {\r\n                this.router.navigate([\"/patient/dashboard\"]);\r\n              }\r\n              else\r\n              {\r\n                this.router.navigate([\"/authentication/signin\"]);\r\n              }\r\n              \r\n              this.loading = false;\r\n            }, 1000);\r\n          },\r\n          error: () => {\r\n            this.error = \"Nom d'utilisateur ou mot de passe non valide !\";\r\n            this.loading = false;\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\"  href=\"signin.component.scss\">\r\n  <title>GesCab</title>\r\n</head>\r\n<body>\r\n  <div class=\"auth-container\">\r\n    <div class=\"row auth-main\">\r\n      <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n        <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 auth-form-section\">\r\n        <div class=\"form-section\">\r\n          <div class=\"auth-wrapper\">\r\n            <div class=\"logo\">\r\n              <img  src=\"../../../assets/images/ges_cab.png\" alt=\"\" width=\"250\" height=\"250\" >\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n                  <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-3\">{{error}}</div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Nom d'utilisateur</mat-label>\r\n                        <input matInput formControlName=\"username\" minlength=\"3\">\r\n                        <mat-icon matSuffix>face</mat-icon>\r\n                        <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                          Champ obligatoire\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Mot de passe</mat-label>\r\n                        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" minlength=\"6\">\r\n                        <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"\r\n                          [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                        </a>\r\n                        <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                          Mot de passe obligatoire\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"mb-2 textRight\">\r\n                    <a routerLink=\"/authentication/forgot-password\">Mot de passe oublié?</a>\r\n                  </div>\r\n                  <div class=\"container-auth-form-btn\">\r\n                    <div style=\"text-align:center\">\r\n                      <button mat-raised-button [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\r\n                        class=\"auth-form-btn\" color=\"primary\" [disabled]=\"!authForm.valid \" type=\"submit\" >Connexion</button>\r\n                    </div>\r\n                    <div class=\"text-center mt-2 mb-1\">\r\n                      <span>OU</span>\r\n                    </div>\r\n                    <div style=\"text-align:center\" class=\"mt-1\">\r\n                      <button mat-raised-button class=\"auth-form-btn sign-up-button\" type=\"submit\" routerLink=\"/authentication/signup\">S'inscrire</button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n        \r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n  \r\n</body>\r\n</html>","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\" style=\"background-color: white;\">\r\n      <div class=\"logo\">\r\n        <img  src=\"../../../assets/images/ges_cab.png\" alt=\"\" width=\"150\">\r\n      </div>\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\" style=\"margin-bottom: -12%;\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> S'inscrire </h2>\r\n          <p class=\"auth-signup-text text-muted\">Veuillez fournir vos informations restantes</p>\r\n          <form class=\"validate-form\" #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-3\">{{error}}</div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput type=\"email\" name=\"email\" ngModel [email]=\"true\" required>\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Veuillez entrer le bon E-mail\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width mb-3\">\r\n                  <mat-label>Profile</mat-label>\r\n                  <mat-select name=\"profile\" ngModel required #profile=\"ngModel\">\r\n                    <mat-option value=\"PATIENT\">\r\n                      PATIENT\r\n                    </mat-option>\r\n                    <mat-option value=\"MEDECIN\">\r\n                      MEDECIN\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Champ obligatoire, choissez un Profile\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"profile.value==='PATIENT'\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Profession</mat-label>\r\n                  <input matInput name=\"profession\" ngModel required>\r\n                  <mat-icon matSuffix>grade</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Veuillez entrer votre profession\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"profile.value==='PATIENT'\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Symptôme</mat-label>\r\n                  <input matInput name=\"symptom\" ngModel required>\r\n                  <mat-icon matSuffix>mood_bad</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Veuillez entrer votre symptôme\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"profile.value==='MEDECIN'\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Spécialité</mat-label>\r\n                  <mat-select name=\"specialite\" ngModel required>\r\n                    <mat-option *ngFor=\"let item of allSpecialities\" value=\"{{item.idSpecialite}}\">\r\n                      {{item.nom}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Veuillez entrer votre spécialité\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Mot de passe</mat-label>\r\n                  <input matInput name=\"password\" ngModel [type]=\"hide ? 'password' : 'text'\" minlength=\"6\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Mot de passe obligatoire et au moins 6 caractères\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Confirmer le mot de passe</mat-label>\r\n                  <input matInput name=\"cpassword\" ngModel [type]=\"chide ? 'password' : 'text'\" minlength=\"6\" required>\r\n                  <mat-icon matSuffix (click)=\"chide = !chide\">\r\n                    {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"!authForm.valid\">\r\n                    Mot de passe confirmer obligatoire et au moins 6 caractères\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex-sb-m w-full  p-b-20\">\r\n              <div>\r\n                <span>Vous avez déjà un compte? <a routerLink=\"/authentication/signin\">\r\n                    Connecter\r\n                  </a></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid\" type=\"submit\">\r\n                S'inscrire\r\n              </button>\r\n            </div>\r\n          </form>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RestApiService } from 'src/app/core/service/api-services/rest-api.service';\r\nimport { ToasServiceService } from 'src/app/core/service/toast-service/toas-service.service';\r\n\r\n@Component({\r\n  selector: 'app-next-signup',\r\n  templateUrl: './next-signup.component.html',\r\n  styleUrls: ['./next-signup.component.sass']\r\n})\r\nexport class NextSignupComponent implements OnInit {\r\n  hide = true;\r\n  chide = true;\r\n  error: any;\r\n  public userDataSendByRoute: any;\r\n  public userPostBody: any;\r\n  public allSpecialities: any;\r\n\r\n  constructor(private activedRoute: ActivatedRoute, private restApi: RestApiService, private router: Router, private toastr: ToasServiceService) {\r\n    this.activedRoute.queryParams.subscribe(\r\n      data => {\r\n        this.userDataSendByRoute = data;\r\n      }\r\n    );\r\n\r\n    this.restApi.getAllSpecialities().subscribe(\r\n      {\r\n        next: result =>{\r\n          this.allSpecialities = result;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  onSubmit(authForm: NgForm)\r\n  {\r\n    if(authForm.value.password !== authForm.value.cpassword)\r\n    {\r\n      this.error = \"Votre mot de passe et le mot de passe confirmer doivent être identique !!!\";\r\n      return;\r\n    }\r\n    else\r\n    {\r\n      if(authForm.value.profile === \"MEDECIN\")\r\n      { \r\n        this.userPostBody = {\r\n          \"person_type\": \"MEDECIN\",\r\n          \"profile\": authForm.value.profile,\r\n          \"nom\": this.userDataSendByRoute.nom,\r\n          \"prenom\": this.userDataSendByRoute.prenom,\r\n          \"adresse\": this.userDataSendByRoute.adresse,\r\n          \"telephone\": this.userDataSendByRoute.telephone,\r\n          \"email\": authForm.value.email,\r\n          \"genre\": this.userDataSendByRoute.genre,\r\n          \"username\": this.userDataSendByRoute.username,\r\n          \"password\": authForm.value.password,\r\n          \"specialite\": {\r\n            \"idSpecialite\": authForm.value.specialite\r\n          },\r\n          \"imageProfile\": \"imageLinnnkkk\",\r\n          \"roles\": [\r\n            {\"idRole\": 3}\r\n          ]\r\n        };\r\n        \r\n      }\r\n      else if(authForm.value.profile === \"PATIENT\")\r\n      {\r\n        this.userPostBody = {\r\n          \"person_type\": \"PATIENT\",\r\n          \"profile\": authForm.value.profile,\r\n          \"profession\": authForm.value.profession,\r\n          \"symptom\": authForm.value.symptom,\r\n          \"nom\": this.userDataSendByRoute.nom,\r\n          \"prenom\": this.userDataSendByRoute.prenom,\r\n          \"adresse\": this.userDataSendByRoute.adresse,\r\n          \"telephone\": this.userDataSendByRoute.telephone,\r\n          \"email\": authForm.value.email,\r\n          \"genre\": this.userDataSendByRoute.genre,\r\n          \"username\": this.userDataSendByRoute.username,\r\n          \"password\": authForm.value.password,\r\n          \"imageProfile\": \"imageLinnnkkk\",\r\n          \"roles\": [\r\n            {\"idRole\": 4}\r\n          ]\r\n        };\r\n      }\r\n      else\r\n      {\r\n        this.error = \"Inscription non éffectué !!!\";\r\n        return;\r\n      }\r\n\r\n      this.restApi.addNewUser(this.userPostBody).subscribe(\r\n        {\r\n          next: result => {\r\n            this.toastr.showSuccessMessage(\"Inscription éffectué avec succès\");\r\n            this.router.navigate(['/authentication/signin']);\r\n            \r\n\r\n          },\r\n          error: error =>{\r\n            console.log(error);\r\n            this.toastr.showErrorMessage(error.message);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute, NavigationExtras } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\"\", Validators.required],\r\n      nom: [\"\", Validators.required],\r\n      prenom: [\"\", Validators.required],\r\n      adresse: [\"\", Validators.required],\r\n      genre: [\"\", Validators.required],\r\n      telephone: [\"\", Validators.required]\r\n    });\r\n    \r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    }\r\n    else\r\n    {\r\n      const navigationValue: NavigationExtras = {queryParams: {\r\n        username: this.f.username.value,\r\n        nom: this.f.nom.value,\r\n        prenom: this.f.prenom.value,\r\n        adresse: this.f.adresse.value,\r\n        genre: this.f.genre.value,\r\n        telephone: this.f.telephone.value,\r\n      }}\r\n      this.router.navigate(['/authentication/next-signup'], navigationValue);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\" style=\"background-color: white;\">\r\n      <div class=\"logo\">\r\n        <img  src=\"../../../assets/images/ges_cab.png\" alt=\"\" width=\"150\">\r\n      </div>\r\n      <div class=\"left-img img-fluid\" style=\"background-image: url(assets/images/pages/Gb.png);\"></div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> S'inscrire </h2>\r\n          <p class=\"auth-signup-text text-muted\">Veuillez fournir vos informations</p>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Nom d'utilisateur</mat-label>\r\n                  <input matInput formControlName=\"username\" minlength=\"3\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Champ obligatoire, donnez un bon username\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Nom</mat-label>\r\n                  <input matInput formControlName=\"nom\" minlength=\"3\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('nom').hasError('required')\">\r\n                    Champ obligatoire, donnez un bon nom\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Prénom</mat-label>\r\n                  <input matInput formControlName=\"prenom\" minlength=\"3\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('prenom').hasError('required')\">\r\n                    Champ obligatoire, donnez un bon prenom\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Adresse</mat-label>\r\n                  <input matInput formControlName=\"adresse\" minlength=\"4\" required>\r\n                  <mat-icon matSuffix>book</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('adresse').hasError('required')\">\r\n                    Champ obligatoire, donnez une bonne adresse\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width mb-3\">\r\n                  <mat-label>Genre</mat-label>\r\n                  <mat-select formControlName=\"genre\" required>\r\n                    <mat-option value=\"Homme\">\r\n                      Homme\r\n                    </mat-option>\r\n                    <mat-option value=\"Femme\">\r\n                      Femme\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"authForm.get('genre').hasError('required')\">\r\n                    Champ obligatoire, choissez un genre\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Téléphone</mat-label>\r\n                  <input matInput formControlName=\"telephone\" type=\"number\" minlength=\"8\" required>\r\n                  <mat-icon matSuffix>phone</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('telephone').hasError('required')\">\r\n                    Champ obligatoire, donnez votre numéro de téléphone\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex-sb-m w-full  p-b-20\">\r\n              <div>\r\n                <span>Vous avez déjà un compte? <a routerLink=\"/authentication/signin\">\r\n                    Connecter\r\n                  </a></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid\" type=\"submit\">\r\n                Suivant\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}