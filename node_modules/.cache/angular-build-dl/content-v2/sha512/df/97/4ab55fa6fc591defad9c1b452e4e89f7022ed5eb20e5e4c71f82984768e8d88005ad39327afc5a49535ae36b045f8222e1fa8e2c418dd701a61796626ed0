{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js"],"names":["_c0","_c1","a0","enterDuration","_c2","MAT_RADIO_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","color","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatRadioGroup","multi","MatRadioChange","source","value","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","change","EventEmitter","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","selected","coerceBooleanProperty","_radios","forEach","radio","name","_markForCheck","isAlreadySelected","emit","markForCheck","fn","isDisabled","disabled","ɵfac","_MatRadioGroupBase_Factory","t","ɵdir","type","inputs","labelPosition","required","outputs","ctorParameters","ChangeDetectorRef","propDecorators","Output","Input","ngDevMode","Directive","ɵMatRadioGroup_BaseFactory","MatRadioGroup_Factory","selectors","contentQueries","MatRadioGroup_ContentQueries","rf","ctx","dirIndex","MatRadioButton","_t","hostAttrs","exportAs","features","ContentChildren","args","descendants","selector","providers","host","MatRadioButtonBase","_elementRef","_MatRadioButtonMixinBase","mixinDisableRipple","mixinTabIndex","_MatRadioButtonBase","radioGroup","elementRef","_focusMonitor","_radioDispatcher","animationMode","_providerOverride","tabIndex","_uniqueId","id","_checked","_removeUniqueSelectionListener","_noopAnimations","coerceNumberProperty","listen","newCheckedState","notify","_setDisabled","_color","options","origin","focusVia","_inputElement","nativeElement","focus","monitor","subscribe","focusOrigin","_touch","stopMonitoring","disableRipple","event","stopPropagation","groupValueChanged","_emitChangeEvent","_MatRadioButtonBase_Factory","String","undefined","viewQuery","_MatRadioButtonBase_Query","first","ariaLabel","ariaLabelledby","ariaDescribedby","ElementRef","FocusMonitor","UniqueSelectionDispatcher","ViewChild","changeDetector","focusMonitor","radioDispatcher","providerOverride","MatRadioButton_Factory","ANIMATION_MODULE_TYPE","ɵcmp","hostVars","hostBindings","MatRadioButton_HostBindings","MatRadioButton_focus_HostBindingHandler","ngContentSelectors","decls","vars","consts","template","MatRadioButton_Template","MatRadioButton_Template_input_change_5_listener","$event","_onInputInteraction","MatRadioButton_Template_input_click_5_listener","_onInputClick","_r0","inputId","_isRippleDisabled","directives","styles","encapsulation","changeDetection","decorators","Optional","Inject","Attribute","Component","ViewEncapsulation","ChangeDetectionStrategy","MatRadioModule","MatRadioModule_Factory","ɵmod","ɵinj","imports","MatRippleModule","MatCommonModule","NgModule","exports","declarations","ngJitMode"],"mappings":"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","file":"default-node_modules_angular_material___ivy_ngcc___fesm2015_radio_js-es5.js","sourcesContent":["import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\r\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/a11y';\r\nimport * as ɵngcc2 from '@angular/cdk/collections';\r\nimport * as ɵngcc3 from '@angular/material/core';\r\n\r\nconst _c0 = [\"input\"];\r\nconst _c1 = function (a0) { return { enterDuration: a0 }; };\r\nconst _c2 = [\"*\"];\r\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\r\n    providedIn: 'root',\r\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\r\n});\r\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\r\n    return {\r\n        color: 'accent'\r\n    };\r\n}\r\n// Increasing integer for generating unique ids for radio components.\r\nlet nextUniqueId = 0;\r\n/**\r\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\r\n * allows it to support [(ngModel)] and ngControl.\r\n * @docs-private\r\n */\r\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => MatRadioGroup),\r\n    multi: true\r\n};\r\n/** Change event object emitted by MatRadio and MatRadioGroup. */\r\nclass MatRadioChange {\r\n    constructor(\r\n    /** The MatRadioButton that emits the change event. */\r\n    source, \r\n    /** The value of the MatRadioButton. */\r\n    value) {\r\n        this.source = source;\r\n        this.value = value;\r\n    }\r\n}\r\n/**\r\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\r\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\r\n * retention of the class and its component metadata.\r\n */\r\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\r\n/**\r\n * Base class with all of the `MatRadioGroup` functionality.\r\n * @docs-private\r\n */\r\nclass _MatRadioGroupBase {\r\n    constructor(_changeDetector) {\r\n        this._changeDetector = _changeDetector;\r\n        /** Selected value for the radio group. */\r\n        this._value = null;\r\n        /** The HTML name attribute applied to radio buttons in this group. */\r\n        this._name = `mat-radio-group-${nextUniqueId++}`;\r\n        /** The currently selected radio button. Should match value. */\r\n        this._selected = null;\r\n        /** Whether the `value` has been set to its initial value. */\r\n        this._isInitialized = false;\r\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\r\n        this._labelPosition = 'after';\r\n        /** Whether the radio group is disabled. */\r\n        this._disabled = false;\r\n        /** Whether the radio group is required. */\r\n        this._required = false;\r\n        /** The method to be called in order to update ngModel */\r\n        this._controlValueAccessorChangeFn = () => { };\r\n        /**\r\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\r\n         * @docs-private\r\n         */\r\n        this.onTouched = () => { };\r\n        /**\r\n         * Event emitted when the group value changes.\r\n         * Change events are only emitted when the value changes due to user interaction with\r\n         * a radio button (the same behavior as `<input type-\"radio\">`).\r\n         */\r\n        this.change = new EventEmitter();\r\n    }\r\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\r\n    get name() { return this._name; }\r\n    set name(value) {\r\n        this._name = value;\r\n        this._updateRadioButtonNames();\r\n    }\r\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\r\n    get labelPosition() {\r\n        return this._labelPosition;\r\n    }\r\n    set labelPosition(v) {\r\n        this._labelPosition = v === 'before' ? 'before' : 'after';\r\n        this._markRadiosForCheck();\r\n    }\r\n    /**\r\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\r\n     * a corresponding radio button with a matching value. If there is not such a corresponding\r\n     * radio button, this value persists to be applied in case a new radio button is added with a\r\n     * matching value.\r\n     */\r\n    get value() { return this._value; }\r\n    set value(newValue) {\r\n        if (this._value !== newValue) {\r\n            // Set this before proceeding to ensure no circular loop occurs with selection.\r\n            this._value = newValue;\r\n            this._updateSelectedRadioFromValue();\r\n            this._checkSelectedRadioButton();\r\n        }\r\n    }\r\n    _checkSelectedRadioButton() {\r\n        if (this._selected && !this._selected.checked) {\r\n            this._selected.checked = true;\r\n        }\r\n    }\r\n    /**\r\n     * The currently selected radio button. If set to a new radio button, the radio group value\r\n     * will be updated to match the new selected button.\r\n     */\r\n    get selected() { return this._selected; }\r\n    set selected(selected) {\r\n        this._selected = selected;\r\n        this.value = selected ? selected.value : null;\r\n        this._checkSelectedRadioButton();\r\n    }\r\n    /** Whether the radio group is disabled */\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        this._markRadiosForCheck();\r\n    }\r\n    /** Whether the radio group is required */\r\n    get required() { return this._required; }\r\n    set required(value) {\r\n        this._required = coerceBooleanProperty(value);\r\n        this._markRadiosForCheck();\r\n    }\r\n    /**\r\n     * Initialize properties once content children are available.\r\n     * This allows us to propagate relevant attributes to associated buttons.\r\n     */\r\n    ngAfterContentInit() {\r\n        // Mark this component as initialized in AfterContentInit because the initial value can\r\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\r\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\r\n        this._isInitialized = true;\r\n    }\r\n    /**\r\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\r\n     * radio buttons upon their blur.\r\n     */\r\n    _touch() {\r\n        if (this.onTouched) {\r\n            this.onTouched();\r\n        }\r\n    }\r\n    _updateRadioButtonNames() {\r\n        if (this._radios) {\r\n            this._radios.forEach(radio => {\r\n                radio.name = this.name;\r\n                radio._markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /** Updates the `selected` radio button from the internal _value state. */\r\n    _updateSelectedRadioFromValue() {\r\n        // If the value already matches the selected radio, do nothing.\r\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\r\n        if (this._radios && !isAlreadySelected) {\r\n            this._selected = null;\r\n            this._radios.forEach(radio => {\r\n                radio.checked = this.value === radio.value;\r\n                if (radio.checked) {\r\n                    this._selected = radio;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /** Dispatch change event with current selection and group value. */\r\n    _emitChangeEvent() {\r\n        if (this._isInitialized) {\r\n            this.change.emit(new MatRadioChange(this._selected, this._value));\r\n        }\r\n    }\r\n    _markRadiosForCheck() {\r\n        if (this._radios) {\r\n            this._radios.forEach(radio => radio._markForCheck());\r\n        }\r\n    }\r\n    /**\r\n     * Sets the model value. Implemented as part of ControlValueAccessor.\r\n     * @param value\r\n     */\r\n    writeValue(value) {\r\n        this.value = value;\r\n        this._changeDetector.markForCheck();\r\n    }\r\n    /**\r\n     * Registers a callback to be triggered when the model value changes.\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @param fn Callback to be registered.\r\n     */\r\n    registerOnChange(fn) {\r\n        this._controlValueAccessorChangeFn = fn;\r\n    }\r\n    /**\r\n     * Registers a callback to be triggered when the control is touched.\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @param fn Callback to be registered.\r\n     */\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n    /**\r\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\r\n     * @param isDisabled Whether the control should be disabled.\r\n     */\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this._changeDetector.markForCheck();\r\n    }\r\n}\r\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\r\n_MatRadioGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\r\n_MatRadioGroupBase.ctorParameters = () => [\r\n    { type: ChangeDetectorRef }\r\n];\r\n_MatRadioGroupBase.propDecorators = {\r\n    change: [{ type: Output }],\r\n    color: [{ type: Input }],\r\n    name: [{ type: Input }],\r\n    labelPosition: [{ type: Input }],\r\n    value: [{ type: Input }],\r\n    selected: [{ type: Input }],\r\n    disabled: [{ type: Input }],\r\n    required: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\r\n            type: Output\r\n        }], name: [{\r\n            type: Input\r\n        }], labelPosition: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }], selected: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }], required: [{\r\n            type: Input\r\n        }], color: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\r\n */\r\nclass MatRadioGroup extends _MatRadioGroupBase {\r\n}\r\nMatRadioGroup.ɵfac = /*@__PURE__*/ function () { let ɵMatRadioGroup_BaseFactory; return function MatRadioGroup_Factory(t) { return (ɵMatRadioGroup_BaseFactory || (ɵMatRadioGroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup)))(t || MatRadioGroup); }; }();\r\nMatRadioGroup.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\r\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\r\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\r\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\r\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nMatRadioGroup.propDecorators = {\r\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'mat-radio-group',\r\n                exportAs: 'matRadioGroup',\r\n                providers: [\r\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\r\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\r\n                ],\r\n                host: {\r\n                    'role': 'radiogroup',\r\n                    'class': 'mat-radio-group'\r\n                }\r\n            }]\r\n    }], null, { _radios: [{\r\n            type: ContentChildren,\r\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\r\n        }] }); })();\r\n// Boilerplate for applying mixins to MatRadioButton.\r\n/** @docs-private */\r\nclass MatRadioButtonBase {\r\n    constructor(_elementRef) {\r\n        this._elementRef = _elementRef;\r\n    }\r\n}\r\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\r\n/**\r\n * Base class with all of the `MatRadioButton` functionality.\r\n * @docs-private\r\n */\r\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\r\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _providerOverride, tabIndex) {\r\n        super(elementRef);\r\n        this._changeDetector = _changeDetector;\r\n        this._focusMonitor = _focusMonitor;\r\n        this._radioDispatcher = _radioDispatcher;\r\n        this._providerOverride = _providerOverride;\r\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\r\n        /** The unique ID for the radio button. */\r\n        this.id = this._uniqueId;\r\n        /**\r\n         * Event emitted when the checked state of this radio button changes.\r\n         * Change events are only emitted when the value changes due to user interaction with\r\n         * the radio button (the same behavior as `<input type-\"radio\">`).\r\n         */\r\n        this.change = new EventEmitter();\r\n        /** Whether this radio is checked. */\r\n        this._checked = false;\r\n        /** Value assigned to this radio. */\r\n        this._value = null;\r\n        /** Unregister function for _radioDispatcher */\r\n        this._removeUniqueSelectionListener = () => { };\r\n        // Assertions. Ideally these should be stripped out by the compiler.\r\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\r\n        this.radioGroup = radioGroup;\r\n        this._noopAnimations = animationMode === 'NoopAnimations';\r\n        if (tabIndex) {\r\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\r\n        }\r\n        this._removeUniqueSelectionListener =\r\n            _radioDispatcher.listen((id, name) => {\r\n                if (id !== this.id && name === this.name) {\r\n                    this.checked = false;\r\n                }\r\n            });\r\n    }\r\n    /** Whether this radio button is checked. */\r\n    get checked() { return this._checked; }\r\n    set checked(value) {\r\n        const newCheckedState = coerceBooleanProperty(value);\r\n        if (this._checked !== newCheckedState) {\r\n            this._checked = newCheckedState;\r\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\r\n                this.radioGroup.selected = this;\r\n            }\r\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\r\n                // When unchecking the selected radio button, update the selected radio\r\n                // property on the group.\r\n                this.radioGroup.selected = null;\r\n            }\r\n            if (newCheckedState) {\r\n                // Notify all radio buttons with the same name to un-check.\r\n                this._radioDispatcher.notify(this.id, this.name);\r\n            }\r\n            this._changeDetector.markForCheck();\r\n        }\r\n    }\r\n    /** The value of this radio button. */\r\n    get value() { return this._value; }\r\n    set value(value) {\r\n        if (this._value !== value) {\r\n            this._value = value;\r\n            if (this.radioGroup !== null) {\r\n                if (!this.checked) {\r\n                    // Update checked when the value changed to match the radio group's value\r\n                    this.checked = this.radioGroup.value === value;\r\n                }\r\n                if (this.checked) {\r\n                    this.radioGroup.selected = this;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\r\n    get labelPosition() {\r\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\r\n    }\r\n    set labelPosition(value) {\r\n        this._labelPosition = value;\r\n    }\r\n    /** Whether the radio button is disabled. */\r\n    get disabled() {\r\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\r\n    }\r\n    set disabled(value) {\r\n        this._setDisabled(coerceBooleanProperty(value));\r\n    }\r\n    /** Whether the radio button is required. */\r\n    get required() {\r\n        return this._required || (this.radioGroup && this.radioGroup.required);\r\n    }\r\n    set required(value) {\r\n        this._required = coerceBooleanProperty(value);\r\n    }\r\n    /** Theme color of the radio button. */\r\n    get color() {\r\n        // As per Material design specifications the selection control radio should use the accent color\r\n        // palette by default. https://material.io/guidelines/components/selection-controls.html\r\n        return this._color ||\r\n            (this.radioGroup && this.radioGroup.color) ||\r\n            this._providerOverride && this._providerOverride.color || 'accent';\r\n    }\r\n    set color(newValue) { this._color = newValue; }\r\n    /** ID of the native input element inside `<mat-radio-button>` */\r\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\r\n    /** Focuses the radio button. */\r\n    focus(options, origin) {\r\n        if (origin) {\r\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\r\n        }\r\n        else {\r\n            this._inputElement.nativeElement.focus(options);\r\n        }\r\n    }\r\n    /**\r\n     * Marks the radio button as needing checking for change detection.\r\n     * This method is exposed because the parent radio group will directly\r\n     * update bound properties of the radio button.\r\n     */\r\n    _markForCheck() {\r\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\r\n        // update radio button's status\r\n        this._changeDetector.markForCheck();\r\n    }\r\n    ngOnInit() {\r\n        if (this.radioGroup) {\r\n            // If the radio is inside a radio group, determine if it should be checked\r\n            this.checked = this.radioGroup.value === this._value;\r\n            if (this.checked) {\r\n                this.radioGroup.selected = this;\r\n            }\r\n            // Copy name from parent radio group\r\n            this.name = this.radioGroup.name;\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        this._focusMonitor\r\n            .monitor(this._elementRef, true)\r\n            .subscribe(focusOrigin => {\r\n            if (!focusOrigin && this.radioGroup) {\r\n                this.radioGroup._touch();\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._focusMonitor.stopMonitoring(this._elementRef);\r\n        this._removeUniqueSelectionListener();\r\n    }\r\n    /** Dispatch change event with current value. */\r\n    _emitChangeEvent() {\r\n        this.change.emit(new MatRadioChange(this, this._value));\r\n    }\r\n    _isRippleDisabled() {\r\n        return this.disableRipple || this.disabled;\r\n    }\r\n    _onInputClick(event) {\r\n        // We have to stop propagation for click events on the visual hidden input element.\r\n        // By default, when a user clicks on a label element, a generated click event will be\r\n        // dispatched on the associated input element. Since we are using a label element as our\r\n        // root container, the click event on the `radio-button` will be executed twice.\r\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\r\n        // This will lead to multiple click events.\r\n        // Preventing bubbling for the second event will solve that issue.\r\n        event.stopPropagation();\r\n    }\r\n    /** Triggered when the radio button receives an interaction from the user. */\r\n    _onInputInteraction(event) {\r\n        // We always have to stop propagation on the change event.\r\n        // Otherwise the change event, from the input element, will bubble up and\r\n        // emit its event object to the `change` output.\r\n        event.stopPropagation();\r\n        if (!this.checked && !this.disabled) {\r\n            const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\r\n            this.checked = true;\r\n            this._emitChangeEvent();\r\n            if (this.radioGroup) {\r\n                this.radioGroup._controlValueAccessorChangeFn(this.value);\r\n                if (groupValueChanged) {\r\n                    this.radioGroup._emitChangeEvent();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** Sets the disabled state and marks for check if a change occurred. */\r\n    _setDisabled(value) {\r\n        if (this._disabled !== value) {\r\n            this._disabled = value;\r\n            this._changeDetector.markForCheck();\r\n        }\r\n    }\r\n}\r\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\r\n_MatRadioButtonBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\r\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\n_MatRadioButtonBase.ctorParameters = () => [\r\n    { type: _MatRadioGroupBase },\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: FocusMonitor },\r\n    { type: UniqueSelectionDispatcher },\r\n    { type: String },\r\n    { type: undefined },\r\n    { type: String }\r\n];\r\n_MatRadioButtonBase.propDecorators = {\r\n    id: [{ type: Input }],\r\n    name: [{ type: Input }],\r\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\r\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\r\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\r\n    checked: [{ type: Input }],\r\n    value: [{ type: Input }],\r\n    labelPosition: [{ type: Input }],\r\n    disabled: [{ type: Input }],\r\n    required: [{ type: Input }],\r\n    color: [{ type: Input }],\r\n    change: [{ type: Output }],\r\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\r\n        type: Directive\r\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }, { type: String }]; }, { id: [{\r\n            type: Input\r\n        }], change: [{\r\n            type: Output\r\n        }], checked: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }], labelPosition: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }], required: [{\r\n            type: Input\r\n        }], color: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], ariaLabel: [{\r\n            type: Input,\r\n            args: ['aria-label']\r\n        }], ariaLabelledby: [{\r\n            type: Input,\r\n            args: ['aria-labelledby']\r\n        }], ariaDescribedby: [{\r\n            type: Input,\r\n            args: ['aria-describedby']\r\n        }], _inputElement: [{\r\n            type: ViewChild,\r\n            args: ['input']\r\n        }] }); })();\r\n/**\r\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\r\n */\r\nclass MatRadioButton extends _MatRadioButtonBase {\r\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\r\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\r\n    }\r\n}\r\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\r\nMatRadioButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\r\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._noopAnimations)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\r\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 20, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\r\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\r\n        ɵngcc0.ɵɵelement(3, \"span\", 3);\r\n        ɵngcc0.ɵɵelement(4, \"span\", 4);\r\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\r\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputInteraction($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(7, \"span\", 7);\r\n        ɵngcc0.ɵɵelement(8, \"span\", 8);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(9, \"span\", 9);\r\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\r\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵprojection(12);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        const _r0 = ɵngcc0.ɵɵreference(1);\r\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\r\n        ɵngcc0.ɵɵadvance(5);\r\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\r\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\r\n        ɵngcc0.ɵɵadvance(2);\r\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction1(18, _c1, ctx._noopAnimations ? 0 : 150));\r\n        ɵngcc0.ɵɵadvance(2);\r\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\r\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\r\nMatRadioButton.ctorParameters = () => [\r\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: FocusMonitor },\r\n    { type: UniqueSelectionDispatcher },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] },\r\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'mat-radio-button',\r\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\r\n                inputs: ['disableRipple', 'tabIndex'],\r\n                encapsulation: ViewEncapsulation.None,\r\n                exportAs: 'matRadioButton',\r\n                host: {\r\n                    'class': 'mat-radio-button',\r\n                    '[class.mat-radio-checked]': 'checked',\r\n                    '[class.mat-radio-disabled]': 'disabled',\r\n                    '[class._mat-animation-noopable]': '_noopAnimations',\r\n                    '[class.mat-primary]': 'color === \"primary\"',\r\n                    '[class.mat-accent]': 'color === \"accent\"',\r\n                    '[class.mat-warn]': 'color === \"warn\"',\r\n                    // Needs to be removed since it causes some a11y issues (see #21266).\r\n                    '[attr.tabindex]': 'null',\r\n                    '[attr.id]': 'id',\r\n                    '[attr.aria-label]': 'null',\r\n                    '[attr.aria-labelledby]': 'null',\r\n                    '[attr.aria-describedby]': 'null',\r\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\r\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\r\n                    // the focus to the native element.\r\n                    '(focus)': '_inputElement.nativeElement.focus()'\r\n                },\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_RADIO_GROUP]\r\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\r\n            }] }, { type: String, decorators: [{\r\n                type: Attribute,\r\n                args: ['tabindex']\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass MatRadioModule {\r\n}\r\nMatRadioModule.ɵfac = function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); };\r\nMatRadioModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\r\nMatRadioModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [MatRippleModule, MatCommonModule],\r\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\r\n                declarations: [MatRadioGroup, MatRadioButton]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\r\n\r\n//# sourceMappingURL=radio.js.map"]}