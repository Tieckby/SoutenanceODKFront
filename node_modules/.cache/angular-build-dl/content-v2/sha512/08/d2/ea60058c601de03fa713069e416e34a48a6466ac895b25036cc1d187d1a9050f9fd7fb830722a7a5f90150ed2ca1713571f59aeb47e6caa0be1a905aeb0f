{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js"],"names":[],"mappings":"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A;AACA;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD,8BAA8B,uBAAuB,6EAAqB,QAAQ;AAClF;AACA,yBAAyB,4BAA4B;AACrD;AACA,8BAA8B,4EAAoB;AAClD;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA,gCAAgC,4EAAoB;AACpD;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA,yDAAyD,qBAAqB;AAC9E;AACA,0DAA0D,MAAM;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAS;AAC3B;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc,GAAG,EAAE;AACnD;AACA;AACA;AACA,kCAAkC,cAAc,GAAG,EAAE;AACrD;AACA;AACA;AACA;AACA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ACA,oCAAoC,uFAA+B,EAAE,gBAAgB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yCAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uDAAY;AAClD;AACA,gCAAgC,uDAAY;AAC5C;AACA;AACA,YAAY,gDAAS;AACrB,sBAAsB,0DAAS;AAC/B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA,gBAAgB,4EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gDAAS;AACjB,kBAAkB,0DAAS;AAC3B;AACA;AACA,SAAS;AACT,QAAQ,gDAAS;AACjB,kBAAkB,0DAAS;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA,yDAAyD,yCAAE;AAC3D;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4CAAK,8CAA8C,0DAAS;AACpE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,0DAAS;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sEAAc;AAC1B;AACA;AACA;AACA,iBAAiB,yDAAK;AACtB,iBAAiB,yDAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uBAAuB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzb;AACA,kBAAkB,0DAAS,CAAC,4CAAK;AACjC;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,wEAAwE,yCAAyC,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,CAAC,kEAAoB,GAAG,+DAAwB,CAAC,8DAAqB,MAAM,+DAAwB,CAAC,iDAAa,GAAG,+DAAwB,CAAC,4DAAe,GAAG,+DAAwB,CAAC,uFAAqB,MAAM;AAC9b,2CAA2C,+DAAwB,EAAE,uCAAuC,yCAAyC,EAAE;AACvJ;AACA,KAAK,OAAO,qDAAU,EAAE;AACxB,KAAK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","file":"default-node_modules_angular_material___ivy_ngcc___fesm2015_tabs_js-es2015.js","sourcesContent":["import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\r\nimport { DOCUMENT, CommonModule } from '@angular/common';\r\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\r\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\r\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\r\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { ViewportRuler } from '@angular/cdk/scrolling';\r\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\r\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Injection token for the MatInkBar's Positioner. */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/bidi';\r\nimport * as ɵngcc2 from '@angular/common';\r\nimport * as ɵngcc3 from '@angular/material/core';\r\nimport * as ɵngcc4 from '@angular/cdk/a11y';\r\nimport * as ɵngcc5 from '@angular/cdk/portal';\r\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\r\nimport * as ɵngcc7 from '@angular/cdk/platform';\r\nimport * as ɵngcc8 from '@angular/cdk/observers';\r\n\r\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵprojection(0);\r\n} }\r\nconst _c0 = [\"*\"];\r\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\r\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\r\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\r\nconst _c3 = [\"tabBodyWrapper\"];\r\nconst _c4 = [\"tabHeader\"];\r\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\r\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\r\n} if (rf & 2) {\r\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\r\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\r\n} }\r\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵtext(0);\r\n} if (rf & 2) {\r\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\r\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\r\n} }\r\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\r\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\r\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const i_r5 = restoredCtx.index; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._tabFocusChanged($event, i_r5); });\r\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\r\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\r\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\r\n    ɵngcc0.ɵɵelementEnd();\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const tab_r4 = ctx.$implicit;\r\n    const i_r5 = ctx.index;\r\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\r\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\r\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\r\n    ɵngcc0.ɵɵadvance(2);\r\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\r\n} }\r\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\r\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\r\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\r\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18._setTabBodyWrapperHeight($event); });\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const tab_r14 = ctx.$implicit;\r\n    const i_r15 = ctx.index;\r\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r15);\r\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\r\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r15 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\r\n} }\r\nconst _c5 = [\"tabListContainer\"];\r\nconst _c6 = [\"tabList\"];\r\nconst _c7 = [\"nextPaginator\"];\r\nconst _c8 = [\"previousPaginator\"];\r\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\r\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\r\n    providedIn: 'root',\r\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\r\n});\r\n/**\r\n * The default positioner function for the MatInkBar.\r\n * @docs-private\r\n */\r\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\r\n    const method = (element) => ({\r\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\r\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\r\n    });\r\n    return method;\r\n}\r\n/**\r\n * The ink-bar is used to display and animate the line underneath the current active tab label.\r\n * @docs-private\r\n */\r\nclass MatInkBar {\r\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\r\n        this._elementRef = _elementRef;\r\n        this._ngZone = _ngZone;\r\n        this._inkBarPositioner = _inkBarPositioner;\r\n        this._animationMode = _animationMode;\r\n    }\r\n    /**\r\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\r\n     * Shows the ink bar if previously set as hidden.\r\n     * @param element\r\n     */\r\n    alignToElement(element) {\r\n        this.show();\r\n        if (typeof requestAnimationFrame !== 'undefined') {\r\n            this._ngZone.runOutsideAngular(() => {\r\n                requestAnimationFrame(() => this._setStyles(element));\r\n            });\r\n        }\r\n        else {\r\n            this._setStyles(element);\r\n        }\r\n    }\r\n    /** Shows the ink bar. */\r\n    show() {\r\n        this._elementRef.nativeElement.style.visibility = 'visible';\r\n    }\r\n    /** Hides the ink bar. */\r\n    hide() {\r\n        this._elementRef.nativeElement.style.visibility = 'hidden';\r\n    }\r\n    /**\r\n     * Sets the proper styles to the ink bar element.\r\n     * @param element\r\n     */\r\n    _setStyles(element) {\r\n        const positions = this._inkBarPositioner(element);\r\n        const inkBar = this._elementRef.nativeElement;\r\n        inkBar.style.left = positions.left;\r\n        inkBar.style.width = positions.width;\r\n    }\r\n}\r\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\r\n    } } });\r\nMatInkBar.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: NgZone },\r\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'mat-ink-bar',\r\n                host: {\r\n                    'class': 'mat-ink-bar',\r\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\r\n                }\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [_MAT_INK_BAR_POSITIONER]\r\n            }] }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\r\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\r\n/** Decorates the `ng-template` tags and reads out the template from it. */\r\nclass MatTabContent {\r\n    constructor(\r\n    /** Content for the tab. */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\r\nMatTabContent.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[matTabContent]',\r\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\r\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\r\n/**\r\n * Used to provide a tab label to a tab without causing a circular dependency.\r\n * @docs-private\r\n */\r\nconst MAT_TAB = new InjectionToken('MAT_TAB');\r\n/** Used to flag tab labels for use with the portal directive */\r\nclass MatTabLabel extends CdkPortal {\r\n    constructor(templateRef, viewContainerRef, _closestTab) {\r\n        super(templateRef, viewContainerRef);\r\n        this._closestTab = _closestTab;\r\n    }\r\n}\r\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return new (t || MatTabLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB, 8)); };\r\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nMatTabLabel.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: ViewContainerRef },\r\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[mat-tab-label], [matTabLabel]',\r\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [MAT_TAB]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// Boilerplate for applying mixins to MatTab.\r\n/** @docs-private */\r\nconst _MatTabBase = mixinDisabled(class {\r\n});\r\n/**\r\n * Used to provide a tab group to a tab without causing a circular dependency.\r\n * @docs-private\r\n */\r\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\r\nclass MatTab extends _MatTabBase {\r\n    constructor(_viewContainerRef, _closestTabGroup) {\r\n        super();\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._closestTabGroup = _closestTabGroup;\r\n        /** Plain text label for the tab, used when there is no template label. */\r\n        this.textLabel = '';\r\n        /** Portal that will be the hosted content of the tab */\r\n        this._contentPortal = null;\r\n        /** Emits whenever the internal state of the tab changes. */\r\n        this._stateChanges = new Subject();\r\n        /**\r\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\r\n         * represents the right.\r\n         */\r\n        this.position = null;\r\n        /**\r\n         * The initial relatively index origin of the tab if it was created and selected after there\r\n         * was already a selected tab. Provides context of what position the tab should originate from.\r\n         */\r\n        this.origin = null;\r\n        /**\r\n         * Whether the tab is currently active.\r\n         */\r\n        this.isActive = false;\r\n    }\r\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\r\n    get templateLabel() { return this._templateLabel; }\r\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\r\n    /** @docs-private */\r\n    get content() {\r\n        return this._contentPortal;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\r\n            this._stateChanges.next();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._stateChanges.complete();\r\n    }\r\n    ngOnInit() {\r\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\r\n    }\r\n    /**\r\n     * This has been extracted to a util because of TS 4 and VE.\r\n     * View Engine doesn't support property rename inheritance.\r\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\r\n     * @docs-private\r\n     */\r\n    _setTemplateLabelInput(value) {\r\n        // Only update the label if the query managed to find one. This works around an issue where a\r\n        // user may have manually set `templateLabel` during creation mode, which would then get\r\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\r\n        // tab matches the current one so that we don't pick up labels from nested tabs.\r\n        if (value && value._closestTab === this) {\r\n            this._templateLabel = value;\r\n        }\r\n    }\r\n}\r\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\r\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\r\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\r\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB, useExisting: MatTab }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\r\n    } }, encapsulation: 2 });\r\nMatTab.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }, { type: Optional }] }\r\n];\r\nMatTab.propDecorators = {\r\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\r\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\r\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\r\n    textLabel: [{ type: Input, args: ['label',] }],\r\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\r\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'mat-tab',\r\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\r\n                inputs: ['disabled'],\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None,\r\n                exportAs: 'matTab',\r\n                providers: [{ provide: MAT_TAB, useExisting: MatTab }]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [MAT_TAB_GROUP]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, { textLabel: [{\r\n            type: Input,\r\n            args: ['label']\r\n        }], templateLabel: [{\r\n            type: ContentChild,\r\n            args: [MAT_TAB_LABEL]\r\n        }], _explicitContent: [{\r\n            type: ContentChild,\r\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\r\n        }], _implicitContent: [{\r\n            type: ViewChild,\r\n            args: [TemplateRef, { static: true }]\r\n        }], ariaLabel: [{\r\n            type: Input,\r\n            args: ['aria-label']\r\n        }], ariaLabelledby: [{\r\n            type: Input,\r\n            args: ['aria-labelledby']\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Animations used by the Material tabs.\r\n * @docs-private\r\n */\r\nconst matTabsAnimations = {\r\n    /** Animation translates a tab along the X axis. */\r\n    translateTab: trigger('translateTab', [\r\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\r\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\r\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\r\n        // in order to ensure that the element has a height before its state changes. This is\r\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\r\n        // not have a static height and is not rendered. See related issue: #9465\r\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\r\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\r\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\r\n        transition('void => left-origin-center', [\r\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\r\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\r\n        ]),\r\n        transition('void => right-origin-center', [\r\n            style({ transform: 'translate3d(100%, 0, 0)' }),\r\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\r\n        ])\r\n    ])\r\n};\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * The portal host directive for the contents of the tab.\r\n * @docs-private\r\n */\r\nclass MatTabBodyPortal extends CdkPortalOutlet {\r\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\r\n        super(componentFactoryResolver, viewContainerRef, _document);\r\n        this._host = _host;\r\n        /** Subscription to events for when the tab body begins centering. */\r\n        this._centeringSub = Subscription.EMPTY;\r\n        /** Subscription to events for when the tab body finishes leaving from center position. */\r\n        this._leavingSub = Subscription.EMPTY;\r\n    }\r\n    /** Set initial visibility or set up subscription for changing visibility. */\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this._centeringSub = this._host._beforeCentering\r\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\r\n            .subscribe((isCentering) => {\r\n            if (isCentering && !this.hasAttached()) {\r\n                this.attach(this._host._content);\r\n            }\r\n        });\r\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\r\n            this.detach();\r\n        });\r\n    }\r\n    /** Clean up centering subscription. */\r\n    ngOnDestroy() {\r\n        super.ngOnDestroy();\r\n        this._centeringSub.unsubscribe();\r\n        this._leavingSub.unsubscribe();\r\n    }\r\n}\r\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\r\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nMatTabBodyPortal.ctorParameters = () => [\r\n    { type: ComponentFactoryResolver },\r\n    { type: ViewContainerRef },\r\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[matTabBodyHost]'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\r\n                type: Inject,\r\n                args: [forwardRef(() => MatTabBody)]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\n/**\r\n * Base class with all of the `MatTabBody` functionality.\r\n * @docs-private\r\n */\r\nclass _MatTabBodyBase {\r\n    constructor(_elementRef, _dir, changeDetectorRef) {\r\n        this._elementRef = _elementRef;\r\n        this._dir = _dir;\r\n        /** Subscription to the directionality change observable. */\r\n        this._dirChangeSubscription = Subscription.EMPTY;\r\n        /** Emits when an animation on the tab is complete. */\r\n        this._translateTabComplete = new Subject();\r\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\r\n        this._onCentering = new EventEmitter();\r\n        /** Event emitted before the centering of the tab begins. */\r\n        this._beforeCentering = new EventEmitter();\r\n        /** Event emitted before the centering of the tab begins. */\r\n        this._afterLeavingCenter = new EventEmitter();\r\n        /** Event emitted when the tab completes its animation towards the center. */\r\n        this._onCentered = new EventEmitter(true);\r\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\r\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\r\n        /** Duration for the tab's animation. */\r\n        this.animationDuration = '500ms';\r\n        if (_dir) {\r\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\r\n                this._computePositionAnimationState(dir);\r\n                changeDetectorRef.markForCheck();\r\n            });\r\n        }\r\n        // Ensure that we get unique animation events, because the `.done` callback can get\r\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\r\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\r\n            return x.fromState === y.fromState && x.toState === y.toState;\r\n        })).subscribe(event => {\r\n            // If the transition to the center is complete, emit an event.\r\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\r\n                this._onCentered.emit();\r\n            }\r\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\r\n                this._afterLeavingCenter.emit();\r\n            }\r\n        });\r\n    }\r\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\r\n    set position(position) {\r\n        this._positionIndex = position;\r\n        this._computePositionAnimationState();\r\n    }\r\n    /**\r\n     * After initialized, check if the content is centered and has an origin. If so, set the\r\n     * special position states that transition the tab from the left or right before centering.\r\n     */\r\n    ngOnInit() {\r\n        if (this._position == 'center' && this.origin != null) {\r\n            this._position = this._computePositionFromOrigin(this.origin);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._dirChangeSubscription.unsubscribe();\r\n        this._translateTabComplete.complete();\r\n    }\r\n    _onTranslateTabStarted(event) {\r\n        const isCentering = this._isCenterPosition(event.toState);\r\n        this._beforeCentering.emit(isCentering);\r\n        if (isCentering) {\r\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\r\n        }\r\n    }\r\n    /** The text direction of the containing app. */\r\n    _getLayoutDirection() {\r\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n    /** Whether the provided position state is considered center, regardless of origin. */\r\n    _isCenterPosition(position) {\r\n        return position == 'center' ||\r\n            position == 'left-origin-center' ||\r\n            position == 'right-origin-center';\r\n    }\r\n    /** Computes the position state that will be used for the tab-body animation trigger. */\r\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\r\n        if (this._positionIndex < 0) {\r\n            this._position = dir == 'ltr' ? 'left' : 'right';\r\n        }\r\n        else if (this._positionIndex > 0) {\r\n            this._position = dir == 'ltr' ? 'right' : 'left';\r\n        }\r\n        else {\r\n            this._position = 'center';\r\n        }\r\n    }\r\n    /**\r\n     * Computes the position state based on the specified origin position. This is used if the\r\n     * tab is becoming visible immediately after creation.\r\n     */\r\n    _computePositionFromOrigin(origin) {\r\n        const dir = this._getLayoutDirection();\r\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\r\n            return 'left-origin-center';\r\n        }\r\n        return 'right-origin-center';\r\n    }\r\n}\r\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\r\n_MatTabBodyBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\r\n_MatTabBodyBase.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: ChangeDetectorRef }\r\n];\r\n_MatTabBodyBase.propDecorators = {\r\n    _onCentering: [{ type: Output }],\r\n    _beforeCentering: [{ type: Output }],\r\n    _afterLeavingCenter: [{ type: Output }],\r\n    _onCentered: [{ type: Output }],\r\n    _content: [{ type: Input, args: ['content',] }],\r\n    origin: [{ type: Input }],\r\n    animationDuration: [{ type: Input }],\r\n    position: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\r\n            type: Output\r\n        }], _beforeCentering: [{\r\n            type: Output\r\n        }], _afterLeavingCenter: [{\r\n            type: Output\r\n        }], _onCentered: [{\r\n            type: Output\r\n        }], animationDuration: [{\r\n            type: Input\r\n        }], position: [{\r\n            type: Input\r\n        }], _content: [{\r\n            type: Input,\r\n            args: ['content']\r\n        }], origin: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * Wrapper for the contents of a tab.\r\n * @docs-private\r\n */\r\nclass MatTabBody extends _MatTabBodyBase {\r\n    constructor(elementRef, dir, changeDetectorRef) {\r\n        super(elementRef, dir, changeDetectorRef);\r\n    }\r\n}\r\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\r\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\r\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\r\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\r\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\r\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\r\nMatTabBody.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: ChangeDetectorRef }\r\n];\r\nMatTabBody.propDecorators = {\r\n    _portalHost: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'mat-tab-body',\r\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\r\n                encapsulation: ViewEncapsulation.None,\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                animations: [matTabsAnimations.translateTab],\r\n                host: {\r\n                    'class': 'mat-tab-body'\r\n                },\r\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\r\n            type: ViewChild,\r\n            args: [CdkPortalOutlet]\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Injection token that can be used to provide the default options the tabs module. */\r\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Used to generate unique ID's for each tab component */\r\nlet nextId = 0;\r\n/** A simple change event emitted on focus or selection changes. */\r\nclass MatTabChangeEvent {\r\n}\r\n// Boilerplate for applying mixins to MatTabGroup.\r\n/** @docs-private */\r\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\r\n    constructor(_elementRef) {\r\n        this._elementRef = _elementRef;\r\n    }\r\n}), 'primary');\r\n/**\r\n * Base class with all of the `MatTabGroupBase` functionality.\r\n * @docs-private\r\n */\r\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\r\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\r\n        var _a;\r\n        super(elementRef);\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._animationMode = _animationMode;\r\n        /** All of the tabs that belong to the group. */\r\n        this._tabs = new QueryList();\r\n        /** The tab index that should be selected after the content has been checked. */\r\n        this._indexToSelect = 0;\r\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\r\n        this._tabBodyWrapperHeight = 0;\r\n        /** Subscription to tabs being added/removed. */\r\n        this._tabsSubscription = Subscription.EMPTY;\r\n        /** Subscription to changes in the tab labels. */\r\n        this._tabLabelSubscription = Subscription.EMPTY;\r\n        this._selectedIndex = null;\r\n        /** Position of the tab header. */\r\n        this.headerPosition = 'above';\r\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\r\n        this.selectedIndexChange = new EventEmitter();\r\n        /** Event emitted when focus has changed within a tab group. */\r\n        this.focusChange = new EventEmitter();\r\n        /** Event emitted when the body animation has completed */\r\n        this.animationDone = new EventEmitter();\r\n        /** Event emitted when the tab selection has changed. */\r\n        this.selectedTabChange = new EventEmitter(true);\r\n        this._groupId = nextId++;\r\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\r\n            defaultConfig.animationDuration : '500ms';\r\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\r\n            defaultConfig.disablePagination : false;\r\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\r\n            defaultConfig.dynamicHeight : false;\r\n        this.contentTabIndex = (_a = defaultConfig === null || defaultConfig === void 0 ? void 0 : defaultConfig.contentTabIndex) !== null && _a !== void 0 ? _a : null;\r\n    }\r\n    /** Whether the tab group should grow to the size of the active tab. */\r\n    get dynamicHeight() { return this._dynamicHeight; }\r\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\r\n    /** The index of the active tab. */\r\n    get selectedIndex() { return this._selectedIndex; }\r\n    set selectedIndex(value) {\r\n        this._indexToSelect = coerceNumberProperty(value, null);\r\n    }\r\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\r\n    get animationDuration() { return this._animationDuration; }\r\n    set animationDuration(value) {\r\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\r\n    }\r\n    /**\r\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\r\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\r\n     * The `tabindex` will be removed automatically for inactive tabs.\r\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\r\n     */\r\n    get contentTabIndex() { return this._contentTabIndex; }\r\n    set contentTabIndex(value) {\r\n        this._contentTabIndex = coerceNumberProperty(value, null);\r\n    }\r\n    /** Background color of the tab group. */\r\n    get backgroundColor() { return this._backgroundColor; }\r\n    set backgroundColor(value) {\r\n        const nativeElement = this._elementRef.nativeElement;\r\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\r\n        if (value) {\r\n            nativeElement.classList.add(`mat-background-${value}`);\r\n        }\r\n        this._backgroundColor = value;\r\n    }\r\n    /**\r\n     * After the content is checked, this component knows what tabs have been defined\r\n     * and what the selected index should be. This is where we can know exactly what position\r\n     * each tab should be in according to the new selected index, and additionally we know how\r\n     * a new selected tab should transition in (from the left or right).\r\n     */\r\n    ngAfterContentChecked() {\r\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\r\n        // the amount of tabs changes before the actual change detection runs.\r\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\r\n        // If there is a change in selected index, emit a change event. Should not trigger if\r\n        // the selected index has not yet been initialized.\r\n        if (this._selectedIndex != indexToSelect) {\r\n            const isFirstRun = this._selectedIndex == null;\r\n            if (!isFirstRun) {\r\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\r\n                // Preserve the height so page doesn't scroll up during tab change.\r\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\r\n                const wrapper = this._tabBodyWrapper.nativeElement;\r\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\r\n            }\r\n            // Changing these values after change detection has run\r\n            // since the checked content may contain references to them.\r\n            Promise.resolve().then(() => {\r\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\r\n                if (!isFirstRun) {\r\n                    this.selectedIndexChange.emit(indexToSelect);\r\n                    // Clear the min-height, this was needed during tab change to avoid\r\n                    // unnecessary scrolling.\r\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\r\n                }\r\n            });\r\n        }\r\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\r\n        this._tabs.forEach((tab, index) => {\r\n            tab.position = index - indexToSelect;\r\n            // If there is already a selected tab, then set up an origin for the next selected tab\r\n            // if it doesn't have one already.\r\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\r\n                tab.origin = indexToSelect - this._selectedIndex;\r\n            }\r\n        });\r\n        if (this._selectedIndex !== indexToSelect) {\r\n            this._selectedIndex = indexToSelect;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    ngAfterContentInit() {\r\n        this._subscribeToAllTabChanges();\r\n        this._subscribeToTabLabels();\r\n        // Subscribe to changes in the amount of tabs, in order to be\r\n        // able to re-render the content as new tabs are added or removed.\r\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\r\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\r\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\r\n            // explicit change that selects a different tab.\r\n            if (indexToSelect === this._selectedIndex) {\r\n                const tabs = this._tabs.toArray();\r\n                for (let i = 0; i < tabs.length; i++) {\r\n                    if (tabs[i].isActive) {\r\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\r\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\r\n                        // adding a tab within the `selectedIndexChange` event.\r\n                        this._indexToSelect = this._selectedIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n    /** Listens to changes in all of the tabs. */\r\n    _subscribeToAllTabChanges() {\r\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\r\n        // some that are inside of nested tab groups. We filter them out manually by checking that\r\n        // the closest group to the tab is the current one.\r\n        this._allTabs.changes\r\n            .pipe(startWith(this._allTabs))\r\n            .subscribe((tabs) => {\r\n            this._tabs.reset(tabs.filter(tab => {\r\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\r\n            }));\r\n            this._tabs.notifyOnChanges();\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._tabs.destroy();\r\n        this._tabsSubscription.unsubscribe();\r\n        this._tabLabelSubscription.unsubscribe();\r\n    }\r\n    /** Re-aligns the ink bar to the selected tab element. */\r\n    realignInkBar() {\r\n        if (this._tabHeader) {\r\n            this._tabHeader._alignInkBarToSelectedTab();\r\n        }\r\n    }\r\n    /**\r\n     * Sets focus to a particular tab.\r\n     * @param index Index of the tab to be focused.\r\n     */\r\n    focusTab(index) {\r\n        const header = this._tabHeader;\r\n        if (header) {\r\n            header.focusIndex = index;\r\n        }\r\n    }\r\n    _focusChanged(index) {\r\n        this.focusChange.emit(this._createChangeEvent(index));\r\n    }\r\n    _createChangeEvent(index) {\r\n        const event = new MatTabChangeEvent;\r\n        event.index = index;\r\n        if (this._tabs && this._tabs.length) {\r\n            event.tab = this._tabs.toArray()[index];\r\n        }\r\n        return event;\r\n    }\r\n    /**\r\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\r\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\r\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\r\n     * manually.\r\n     */\r\n    _subscribeToTabLabels() {\r\n        if (this._tabLabelSubscription) {\r\n            this._tabLabelSubscription.unsubscribe();\r\n        }\r\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\r\n            .subscribe(() => this._changeDetectorRef.markForCheck());\r\n    }\r\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\r\n    _clampTabIndex(index) {\r\n        // Note the `|| 0`, which ensures that values like NaN can't get through\r\n        // and which would otherwise throw the component into an infinite loop\r\n        // (since Math.max(NaN, 0) === NaN).\r\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\r\n    }\r\n    /** Returns a unique id for each tab label element */\r\n    _getTabLabelId(i) {\r\n        return `mat-tab-label-${this._groupId}-${i}`;\r\n    }\r\n    /** Returns a unique id for each tab content element */\r\n    _getTabContentId(i) {\r\n        return `mat-tab-content-${this._groupId}-${i}`;\r\n    }\r\n    /**\r\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\r\n     * height property is true.\r\n     */\r\n    _setTabBodyWrapperHeight(tabHeight) {\r\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\r\n            return;\r\n        }\r\n        const wrapper = this._tabBodyWrapper.nativeElement;\r\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\r\n        // This conditional forces the browser to paint the height so that\r\n        // the animation to the new height can have an origin.\r\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\r\n            wrapper.style.height = tabHeight + 'px';\r\n        }\r\n    }\r\n    /** Removes the height of the tab body wrapper. */\r\n    _removeTabBodyWrapperHeight() {\r\n        const wrapper = this._tabBodyWrapper.nativeElement;\r\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\r\n        wrapper.style.height = '';\r\n        this.animationDone.emit();\r\n    }\r\n    /** Handle click events, setting new selected index if appropriate. */\r\n    _handleClick(tab, tabHeader, index) {\r\n        if (!tab.disabled) {\r\n            this.selectedIndex = tabHeader.focusIndex = index;\r\n        }\r\n    }\r\n    /** Retrieves the tabindex for the tab. */\r\n    _getTabIndex(tab, idx) {\r\n        if (tab.disabled) {\r\n            return null;\r\n        }\r\n        return this.selectedIndex === idx ? 0 : -1;\r\n    }\r\n    /** Callback for when the focused state of a tab has changed. */\r\n    _tabFocusChanged(focusOrigin, index) {\r\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\r\n        // can cause the tab to be moved out from under the pointer, interrupting the\r\n        // click sequence (see #21898). We don't need to scroll the tab into view for\r\n        // such cases anyway, because it will be done when the tab becomes selected.\r\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\r\n            this._tabHeader.focusIndex = index;\r\n        }\r\n    }\r\n}\r\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\n_MatTabGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", contentTabIndex: \"contentTabIndex\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\n_MatTabGroupBase.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\n_MatTabGroupBase.propDecorators = {\r\n    dynamicHeight: [{ type: Input }],\r\n    selectedIndex: [{ type: Input }],\r\n    headerPosition: [{ type: Input }],\r\n    animationDuration: [{ type: Input }],\r\n    contentTabIndex: [{ type: Input }],\r\n    disablePagination: [{ type: Input }],\r\n    backgroundColor: [{ type: Input }],\r\n    selectedIndexChange: [{ type: Output }],\r\n    focusChange: [{ type: Output }],\r\n    animationDone: [{ type: Output }],\r\n    selectedTabChange: [{ type: Output }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [MAT_TABS_CONFIG]\r\n            }, {\r\n                type: Optional\r\n            }] }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { headerPosition: [{\r\n            type: Input\r\n        }], selectedIndexChange: [{\r\n            type: Output\r\n        }], focusChange: [{\r\n            type: Output\r\n        }], animationDone: [{\r\n            type: Output\r\n        }], selectedTabChange: [{\r\n            type: Output\r\n        }], animationDuration: [{\r\n            type: Input\r\n        }], disablePagination: [{\r\n            type: Input\r\n        }], dynamicHeight: [{\r\n            type: Input\r\n        }], contentTabIndex: [{\r\n            type: Input\r\n        }], selectedIndex: [{\r\n            type: Input\r\n        }], backgroundColor: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\r\n * animated ink-bar, keyboard navigation, and screen reader.\r\n * See: https://material.io/design/components/tabs.html\r\n */\r\nclass MatTabGroup extends _MatTabGroupBase {\r\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\r\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\r\n    }\r\n}\r\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\r\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\r\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\r\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\r\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\r\n                provide: MAT_TAB_GROUP,\r\n                useExisting: MatTabGroup\r\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\r\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\r\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\r\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 9, \"mat-tab-body\", 5);\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\r\n        ɵngcc0.ɵɵadvance(2);\r\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\r\n        ɵngcc0.ɵɵadvance(2);\r\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\r\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\r\nMatTabGroup.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\nMatTabGroup.propDecorators = {\r\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\r\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\r\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'mat-tab-group',\r\n                exportAs: 'matTabGroup',\r\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\r\n                encapsulation: ViewEncapsulation.None,\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                inputs: ['color', 'disableRipple'],\r\n                providers: [{\r\n                        provide: MAT_TAB_GROUP,\r\n                        useExisting: MatTabGroup\r\n                    }],\r\n                host: {\r\n                    'class': 'mat-tab-group',\r\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\r\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\r\n                },\r\n                styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [MAT_TABS_CONFIG]\r\n            }, {\r\n                type: Optional\r\n            }] }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { _allTabs: [{\r\n            type: ContentChildren,\r\n            args: [MatTab, { descendants: true }]\r\n        }], _tabBodyWrapper: [{\r\n            type: ViewChild,\r\n            args: ['tabBodyWrapper']\r\n        }], _tabHeader: [{\r\n            type: ViewChild,\r\n            args: ['tabHeader']\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// Boilerplate for applying mixins to MatTabLabelWrapper.\r\n/** @docs-private */\r\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\r\n});\r\n/**\r\n * Used in the `mat-tab-group` view to display tab labels.\r\n * @docs-private\r\n */\r\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\r\n    constructor(elementRef) {\r\n        super();\r\n        this.elementRef = elementRef;\r\n    }\r\n    /** Sets focus on the wrapper element */\r\n    focus() {\r\n        this.elementRef.nativeElement.focus();\r\n    }\r\n    getOffsetLeft() {\r\n        return this.elementRef.nativeElement.offsetLeft;\r\n    }\r\n    getOffsetWidth() {\r\n        return this.elementRef.nativeElement.offsetWidth;\r\n    }\r\n}\r\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\r\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\r\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nMatTabLabelWrapper.ctorParameters = () => [\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[matTabLabelWrapper]',\r\n                inputs: ['disabled'],\r\n                host: {\r\n                    '[class.mat-tab-disabled]': 'disabled',\r\n                    '[attr.aria-disabled]': '!!disabled'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Config used to bind passive event listeners */\r\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\r\n/**\r\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\r\n * provide a small affordance to the label next to it.\r\n */\r\nconst EXAGGERATED_OVERSCROLL = 60;\r\n/**\r\n * Amount of milliseconds to wait before starting to scroll the header automatically.\r\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\r\n */\r\nconst HEADER_SCROLL_DELAY = 650;\r\n/**\r\n * Interval in milliseconds at which to scroll the header\r\n * while the user is holding their pointer.\r\n */\r\nconst HEADER_SCROLL_INTERVAL = 100;\r\n/**\r\n * Base class for a tab header that supported pagination.\r\n * @docs-private\r\n */\r\nclass MatPaginatedTabHeader {\r\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\r\n        this._elementRef = _elementRef;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._viewportRuler = _viewportRuler;\r\n        this._dir = _dir;\r\n        this._ngZone = _ngZone;\r\n        this._platform = _platform;\r\n        this._animationMode = _animationMode;\r\n        /** The distance in pixels that the tab labels should be translated to the left. */\r\n        this._scrollDistance = 0;\r\n        /** Whether the header should scroll to the selected index after the view has been checked. */\r\n        this._selectedIndexChanged = false;\r\n        /** Emits when the component is destroyed. */\r\n        this._destroyed = new Subject();\r\n        /** Whether the controls for pagination should be displayed */\r\n        this._showPaginationControls = false;\r\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\r\n        this._disableScrollAfter = true;\r\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\r\n        this._disableScrollBefore = true;\r\n        /** Stream that will stop the automated scrolling. */\r\n        this._stopScrolling = new Subject();\r\n        /**\r\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\r\n         * layout recalculations if it's known that pagination won't be required.\r\n         */\r\n        this.disablePagination = false;\r\n        this._selectedIndex = 0;\r\n        /** Event emitted when the option is selected. */\r\n        this.selectFocusedIndex = new EventEmitter();\r\n        /** Event emitted when a label is focused. */\r\n        this.indexFocused = new EventEmitter();\r\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\r\n        _ngZone.runOutsideAngular(() => {\r\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\r\n                .pipe(takeUntil(this._destroyed))\r\n                .subscribe(() => {\r\n                this._stopInterval();\r\n            });\r\n        });\r\n    }\r\n    /** The index of the active tab. */\r\n    get selectedIndex() { return this._selectedIndex; }\r\n    set selectedIndex(value) {\r\n        value = coerceNumberProperty(value);\r\n        if (this._selectedIndex != value) {\r\n            this._selectedIndexChanged = true;\r\n            this._selectedIndex = value;\r\n            if (this._keyManager) {\r\n                this._keyManager.updateActiveItem(value);\r\n            }\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // We need to handle these events manually, because we want to bind passive event listeners.\r\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\r\n            .pipe(takeUntil(this._destroyed))\r\n            .subscribe(() => {\r\n            this._handlePaginatorPress('before');\r\n        });\r\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\r\n            .pipe(takeUntil(this._destroyed))\r\n            .subscribe(() => {\r\n            this._handlePaginatorPress('after');\r\n        });\r\n    }\r\n    ngAfterContentInit() {\r\n        const dirChange = this._dir ? this._dir.change : of('ltr');\r\n        const resize = this._viewportRuler.change(150);\r\n        const realign = () => {\r\n            this.updatePagination();\r\n            this._alignInkBarToSelectedTab();\r\n        };\r\n        this._keyManager = new FocusKeyManager(this._items)\r\n            .withHorizontalOrientation(this._getLayoutDirection())\r\n            .withHomeAndEnd()\r\n            .withWrap();\r\n        this._keyManager.updateActiveItem(this._selectedIndex);\r\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\r\n        // This helps in cases where the user lands directly on a page with paginated tabs.\r\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\r\n        // On dir change or window resize, realign the ink bar and update the orientation of\r\n        // the key manager if the direction has changed.\r\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\r\n            // We need to defer this to give the browser some time to recalculate\r\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\r\n            // because the viewport change handler runs outside of Angular.\r\n            this._ngZone.run(() => Promise.resolve().then(realign));\r\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\r\n        });\r\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\r\n        // event in order to provide a public event that notifies about focus changes. Also we realign\r\n        // the tabs container by scrolling the new focused tab into the visible section.\r\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\r\n            this.indexFocused.emit(newFocusIndex);\r\n            this._setTabFocus(newFocusIndex);\r\n        });\r\n    }\r\n    ngAfterContentChecked() {\r\n        // If the number of tab labels have changed, check if scrolling should be enabled\r\n        if (this._tabLabelCount != this._items.length) {\r\n            this.updatePagination();\r\n            this._tabLabelCount = this._items.length;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\r\n        // should be disabled.\r\n        if (this._selectedIndexChanged) {\r\n            this._scrollToLabel(this._selectedIndex);\r\n            this._checkScrollingControls();\r\n            this._alignInkBarToSelectedTab();\r\n            this._selectedIndexChanged = false;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\r\n        // then translate the header to reflect this.\r\n        if (this._scrollDistanceChanged) {\r\n            this._updateTabScrollPosition();\r\n            this._scrollDistanceChanged = false;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n        this._stopScrolling.complete();\r\n    }\r\n    /** Handles keyboard events on the header. */\r\n    _handleKeydown(event) {\r\n        // We don't handle any key bindings with a modifier key.\r\n        if (hasModifierKey(event)) {\r\n            return;\r\n        }\r\n        switch (event.keyCode) {\r\n            case ENTER:\r\n            case SPACE:\r\n                if (this.focusIndex !== this.selectedIndex) {\r\n                    this.selectFocusedIndex.emit(this.focusIndex);\r\n                    this._itemSelected(event);\r\n                }\r\n                break;\r\n            default:\r\n                this._keyManager.onKeydown(event);\r\n        }\r\n    }\r\n    /**\r\n     * Callback for when the MutationObserver detects that the content has changed.\r\n     */\r\n    _onContentChanges() {\r\n        const textContent = this._elementRef.nativeElement.textContent;\r\n        // We need to diff the text content of the header, because the MutationObserver callback\r\n        // will fire even if the text content didn't change which is inefficient and is prone\r\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\r\n        if (textContent !== this._currentTextContent) {\r\n            this._currentTextContent = textContent || '';\r\n            // The content observer runs outside the `NgZone` by default, which\r\n            // means that we need to bring the callback back in ourselves.\r\n            this._ngZone.run(() => {\r\n                this.updatePagination();\r\n                this._alignInkBarToSelectedTab();\r\n                this._changeDetectorRef.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Updates the view whether pagination should be enabled or not.\r\n     *\r\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\r\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\r\n     * page.\r\n     */\r\n    updatePagination() {\r\n        this._checkPaginationEnabled();\r\n        this._checkScrollingControls();\r\n        this._updateTabScrollPosition();\r\n    }\r\n    /** Tracks which element has focus; used for keyboard navigation */\r\n    get focusIndex() {\r\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\r\n    }\r\n    /** When the focus index is set, we must manually send focus to the correct label */\r\n    set focusIndex(value) {\r\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\r\n            return;\r\n        }\r\n        this._keyManager.setActiveItem(value);\r\n    }\r\n    /**\r\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\r\n     * providing a valid index and return true.\r\n     */\r\n    _isValidIndex(index) {\r\n        if (!this._items) {\r\n            return true;\r\n        }\r\n        const tab = this._items ? this._items.toArray()[index] : null;\r\n        return !!tab && !tab.disabled;\r\n    }\r\n    /**\r\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\r\n     * scrolling is enabled.\r\n     */\r\n    _setTabFocus(tabIndex) {\r\n        if (this._showPaginationControls) {\r\n            this._scrollToLabel(tabIndex);\r\n        }\r\n        if (this._items && this._items.length) {\r\n            this._items.toArray()[tabIndex].focus();\r\n            // Do not let the browser manage scrolling to focus the element, this will be handled\r\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\r\n            // should be the full width minus the offset width.\r\n            const containerEl = this._tabListContainer.nativeElement;\r\n            const dir = this._getLayoutDirection();\r\n            if (dir == 'ltr') {\r\n                containerEl.scrollLeft = 0;\r\n            }\r\n            else {\r\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\r\n            }\r\n        }\r\n    }\r\n    /** The layout direction of the containing app. */\r\n    _getLayoutDirection() {\r\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\r\n    _updateTabScrollPosition() {\r\n        if (this.disablePagination) {\r\n            return;\r\n        }\r\n        const scrollDistance = this.scrollDistance;\r\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\r\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\r\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\r\n        // and ripples will exceed the boundaries of the visible tab bar.\r\n        // See: https://github.com/angular/components/issues/10276\r\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\r\n        // browsers to blur the content of the element.\r\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\r\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\r\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\r\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\r\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\r\n        if (this._platform.TRIDENT || this._platform.EDGE) {\r\n            this._tabListContainer.nativeElement.scrollLeft = 0;\r\n        }\r\n    }\r\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\r\n    get scrollDistance() { return this._scrollDistance; }\r\n    set scrollDistance(value) {\r\n        this._scrollTo(value);\r\n    }\r\n    /**\r\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\r\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\r\n     * length of the tab list view window.\r\n     *\r\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n     * should be called sparingly.\r\n     */\r\n    _scrollHeader(direction) {\r\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n        // Move the scroll distance one-third the length of the tab list's viewport.\r\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\r\n        return this._scrollTo(this._scrollDistance + scrollAmount);\r\n    }\r\n    /** Handles click events on the pagination arrows. */\r\n    _handlePaginatorClick(direction) {\r\n        this._stopInterval();\r\n        this._scrollHeader(direction);\r\n    }\r\n    /**\r\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\r\n     *\r\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n     * should be called sparingly.\r\n     */\r\n    _scrollToLabel(labelIndex) {\r\n        if (this.disablePagination) {\r\n            return;\r\n        }\r\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\r\n        if (!selectedLabel) {\r\n            return;\r\n        }\r\n        // The view length is the visible width of the tab labels.\r\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\r\n        let labelBeforePos, labelAfterPos;\r\n        if (this._getLayoutDirection() == 'ltr') {\r\n            labelBeforePos = offsetLeft;\r\n            labelAfterPos = labelBeforePos + offsetWidth;\r\n        }\r\n        else {\r\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\r\n            labelBeforePos = labelAfterPos - offsetWidth;\r\n        }\r\n        const beforeVisiblePos = this.scrollDistance;\r\n        const afterVisiblePos = this.scrollDistance + viewLength;\r\n        if (labelBeforePos < beforeVisiblePos) {\r\n            // Scroll header to move label to the before direction\r\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\r\n        }\r\n        else if (labelAfterPos > afterVisiblePos) {\r\n            // Scroll header to move label to the after direction\r\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\r\n        }\r\n    }\r\n    /**\r\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\r\n     * tab list is wider than the size of the header container, then the pagination controls should\r\n     * be shown.\r\n     *\r\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n     * should be called sparingly.\r\n     */\r\n    _checkPaginationEnabled() {\r\n        if (this.disablePagination) {\r\n            this._showPaginationControls = false;\r\n        }\r\n        else {\r\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\r\n            if (!isEnabled) {\r\n                this.scrollDistance = 0;\r\n            }\r\n            if (isEnabled !== this._showPaginationControls) {\r\n                this._changeDetectorRef.markForCheck();\r\n            }\r\n            this._showPaginationControls = isEnabled;\r\n        }\r\n    }\r\n    /**\r\n     * Evaluate whether the before and after controls should be enabled or disabled.\r\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\r\n     * before button. If the header is at the end of the list (scroll distance is equal to the\r\n     * maximum distance we can scroll), then disable the after button.\r\n     *\r\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n     * should be called sparingly.\r\n     */\r\n    _checkScrollingControls() {\r\n        if (this.disablePagination) {\r\n            this._disableScrollAfter = this._disableScrollBefore = true;\r\n        }\r\n        else {\r\n            // Check if the pagination arrows should be activated.\r\n            this._disableScrollBefore = this.scrollDistance == 0;\r\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    /**\r\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\r\n     * is equal to the difference in width between the tab list container and tab header container.\r\n     *\r\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\r\n     * should be called sparingly.\r\n     */\r\n    _getMaxScrollDistance() {\r\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\r\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n        return (lengthOfTabList - viewLength) || 0;\r\n    }\r\n    /** Tells the ink-bar to align itself to the current label wrapper */\r\n    _alignInkBarToSelectedTab() {\r\n        const selectedItem = this._items && this._items.length ?\r\n            this._items.toArray()[this.selectedIndex] : null;\r\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\r\n        if (selectedLabelWrapper) {\r\n            this._inkBar.alignToElement(selectedLabelWrapper);\r\n        }\r\n        else {\r\n            this._inkBar.hide();\r\n        }\r\n    }\r\n    /** Stops the currently-running paginator interval.  */\r\n    _stopInterval() {\r\n        this._stopScrolling.next();\r\n    }\r\n    /**\r\n     * Handles the user pressing down on one of the paginators.\r\n     * Starts scrolling the header after a certain amount of time.\r\n     * @param direction In which direction the paginator should be scrolled.\r\n     */\r\n    _handlePaginatorPress(direction, mouseEvent) {\r\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\r\n        // null check the `button`, but we do it so we don't break tests that use fake events.\r\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\r\n            return;\r\n        }\r\n        // Avoid overlapping timers.\r\n        this._stopInterval();\r\n        // Start a timer after the delay and keep firing based on the interval.\r\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\r\n            // Keep the timer going until something tells it to stop or the component is destroyed.\r\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\r\n            .subscribe(() => {\r\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\r\n            // Stop the timer if we've reached the start or the end.\r\n            if (distance === 0 || distance >= maxScrollDistance) {\r\n                this._stopInterval();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Scrolls the header to a given position.\r\n     * @param position Position to which to scroll.\r\n     * @returns Information on the current scroll distance and the maximum.\r\n     */\r\n    _scrollTo(position) {\r\n        if (this.disablePagination) {\r\n            return { maxScrollDistance: 0, distance: 0 };\r\n        }\r\n        const maxScrollDistance = this._getMaxScrollDistance();\r\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\r\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\r\n        // transformation can move the header.\r\n        this._scrollDistanceChanged = true;\r\n        this._checkScrollingControls();\r\n        return { maxScrollDistance, distance: this._scrollDistance };\r\n    }\r\n}\r\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\nMatPaginatedTabHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\r\nMatPaginatedTabHeader.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: ViewportRuler },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: NgZone },\r\n    { type: Platform },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\nMatPaginatedTabHeader.propDecorators = {\r\n    disablePagination: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { disablePagination: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Base class with all of the `MatTabHeader` functionality.\r\n * @docs-private\r\n */\r\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\r\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\r\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\r\n        this._disableRipple = false;\r\n    }\r\n    /** Whether the ripple effect is disabled or not. */\r\n    get disableRipple() { return this._disableRipple; }\r\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\r\n    _itemSelected(event) {\r\n        event.preventDefault();\r\n    }\r\n}\r\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\n_MatTabHeaderBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\n_MatTabHeaderBase.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: ViewportRuler },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: NgZone },\r\n    { type: Platform },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\n_MatTabHeaderBase.propDecorators = {\r\n    disableRipple: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { disableRipple: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\r\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\r\n * width of the header container, then arrows will be displayed to allow the user to scroll\r\n * left and right across the header.\r\n * @docs-private\r\n */\r\nclass MatTabHeader extends _MatTabHeaderBase {\r\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\r\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\r\n    }\r\n}\r\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\r\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\r\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\r\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\r\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\r\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\r\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\r\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\r\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\r\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\r\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\r\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\r\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\r\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\r\n        ɵngcc0.ɵɵprojection(8);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\r\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\r\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\r\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\r\n        ɵngcc0.ɵɵadvance(5);\r\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\r\n        ɵngcc0.ɵɵadvance(5);\r\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\r\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\r\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\r\nMatTabHeader.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: ViewportRuler },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: NgZone },\r\n    { type: Platform },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\nMatTabHeader.propDecorators = {\r\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\r\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\r\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\r\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\r\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\r\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'mat-tab-header',\r\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\r\n                inputs: ['selectedIndex'],\r\n                outputs: ['selectFocusedIndex', 'indexFocused'],\r\n                encapsulation: ViewEncapsulation.None,\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                host: {\r\n                    'class': 'mat-tab-header',\r\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\r\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\r\n                },\r\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { _items: [{\r\n            type: ContentChildren,\r\n            args: [MatTabLabelWrapper, { descendants: false }]\r\n        }], _inkBar: [{\r\n            type: ViewChild,\r\n            args: [MatInkBar, { static: true }]\r\n        }], _tabListContainer: [{\r\n            type: ViewChild,\r\n            args: ['tabListContainer', { static: true }]\r\n        }], _tabList: [{\r\n            type: ViewChild,\r\n            args: ['tabList', { static: true }]\r\n        }], _nextPaginator: [{\r\n            type: ViewChild,\r\n            args: ['nextPaginator']\r\n        }], _previousPaginator: [{\r\n            type: ViewChild,\r\n            args: ['previousPaginator']\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Base class with all of the `MatTabNav` functionality.\r\n * @docs-private\r\n */\r\nclass _MatTabNavBase extends MatPaginatedTabHeader {\r\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\r\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\r\n        this._disableRipple = false;\r\n        /** Theme color of the nav bar. */\r\n        this.color = 'primary';\r\n    }\r\n    /** Background color of the tab nav. */\r\n    get backgroundColor() { return this._backgroundColor; }\r\n    set backgroundColor(value) {\r\n        const classList = this._elementRef.nativeElement.classList;\r\n        classList.remove(`mat-background-${this.backgroundColor}`);\r\n        if (value) {\r\n            classList.add(`mat-background-${value}`);\r\n        }\r\n        this._backgroundColor = value;\r\n    }\r\n    /** Whether the ripple effect is disabled or not. */\r\n    get disableRipple() { return this._disableRipple; }\r\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\r\n    _itemSelected() {\r\n        // noop\r\n    }\r\n    ngAfterContentInit() {\r\n        // We need this to run before the `changes` subscription in parent to ensure that the\r\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\r\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\r\n            this.updateActiveLink();\r\n        });\r\n        super.ngAfterContentInit();\r\n    }\r\n    /** Notifies the component that the active link has been changed. */\r\n    updateActiveLink() {\r\n        if (!this._items) {\r\n            return;\r\n        }\r\n        const items = this._items.toArray();\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].active) {\r\n                this.selectedIndex = i;\r\n                this._changeDetectorRef.markForCheck();\r\n                return;\r\n            }\r\n        }\r\n        // The ink bar should hide itself if no items are active.\r\n        this.selectedIndex = -1;\r\n        this._inkBar.hide();\r\n    }\r\n}\r\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\n_MatTabNavBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\n_MatTabNavBase.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: NgZone },\r\n    { type: ChangeDetectorRef },\r\n    { type: ViewportRuler },\r\n    { type: Platform },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\n_MatTabNavBase.propDecorators = {\r\n    backgroundColor: [{ type: Input }],\r\n    disableRipple: [{ type: Input }],\r\n    color: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { color: [{\r\n            type: Input\r\n        }], backgroundColor: [{\r\n            type: Input\r\n        }], disableRipple: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * Navigation component matching the styles of the tab group header.\r\n * Provides anchored navigation with animated ink bar.\r\n */\r\nclass MatTabNav extends _MatTabNavBase {\r\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\r\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\r\n    }\r\n}\r\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\r\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\r\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\r\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\r\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\r\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\r\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\r\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\r\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\r\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\r\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\r\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\r\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\r\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\r\n        ɵngcc0.ɵɵprojection(8);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\r\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\r\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\r\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\r\n        ɵngcc0.ɵɵadvance(5);\r\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\r\n        ɵngcc0.ɵɵadvance(5);\r\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\r\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\r\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\r\nMatTabNav.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: NgZone },\r\n    { type: ChangeDetectorRef },\r\n    { type: ViewportRuler },\r\n    { type: Platform },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\nMatTabNav.propDecorators = {\r\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\r\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\r\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\r\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\r\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\r\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: '[mat-tab-nav-bar]',\r\n                exportAs: 'matTabNavBar, matTabNav',\r\n                inputs: ['color'],\r\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\r\n                host: {\r\n                    'class': 'mat-tab-nav-bar mat-tab-header',\r\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\r\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\r\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\r\n                    '[class.mat-accent]': 'color === \"accent\"',\r\n                    '[class.mat-warn]': 'color === \"warn\"'\r\n                },\r\n                encapsulation: ViewEncapsulation.None,\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { _items: [{\r\n            type: ContentChildren,\r\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\r\n        }], _inkBar: [{\r\n            type: ViewChild,\r\n            args: [MatInkBar, { static: true }]\r\n        }], _tabListContainer: [{\r\n            type: ViewChild,\r\n            args: ['tabListContainer', { static: true }]\r\n        }], _tabList: [{\r\n            type: ViewChild,\r\n            args: ['tabList', { static: true }]\r\n        }], _nextPaginator: [{\r\n            type: ViewChild,\r\n            args: ['nextPaginator']\r\n        }], _previousPaginator: [{\r\n            type: ViewChild,\r\n            args: ['previousPaginator']\r\n        }] }); })();\r\n// Boilerplate for applying mixins to MatTabLink.\r\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\r\n})));\r\n/** Base class with all of the `MatTabLink` functionality. */\r\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\r\n    constructor(_tabNavBar, \r\n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\r\n        super();\r\n        this._tabNavBar = _tabNavBar;\r\n        this.elementRef = elementRef;\r\n        this._focusMonitor = _focusMonitor;\r\n        /** Whether the tab link is active or not. */\r\n        this._isActive = false;\r\n        this.rippleConfig = globalRippleOptions || {};\r\n        this.tabIndex = parseInt(tabIndex) || 0;\r\n        if (animationMode === 'NoopAnimations') {\r\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\r\n        }\r\n    }\r\n    /** Whether the link is active. */\r\n    get active() { return this._isActive; }\r\n    set active(value) {\r\n        const newValue = coerceBooleanProperty(value);\r\n        if (newValue !== this._isActive) {\r\n            this._isActive = value;\r\n            this._tabNavBar.updateActiveLink();\r\n        }\r\n    }\r\n    /**\r\n     * Whether ripples are disabled on interaction.\r\n     * @docs-private\r\n     */\r\n    get rippleDisabled() {\r\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\r\n            !!this.rippleConfig.disabled;\r\n    }\r\n    /** Focuses the tab link. */\r\n    focus() {\r\n        this.elementRef.nativeElement.focus();\r\n    }\r\n    ngAfterViewInit() {\r\n        this._focusMonitor.monitor(this.elementRef);\r\n    }\r\n    ngOnDestroy() {\r\n        this._focusMonitor.stopMonitoring(this.elementRef);\r\n    }\r\n    _handleFocus() {\r\n        // Since we allow navigation through tabbing in the nav bar, we\r\n        // have to update the focused index whenever the link receives focus.\r\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\r\n    }\r\n}\r\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\n_MatTabLinkBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\n_MatTabLinkBase.ctorParameters = () => [\r\n    { type: _MatTabNavBase },\r\n    { type: ElementRef },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\r\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\r\n    { type: FocusMonitor },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\n_MatTabLinkBase.propDecorators = {\r\n    active: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\r\n        type: Directive\r\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\r\n            }] }, { type: String, decorators: [{\r\n                type: Attribute,\r\n                args: ['tabindex']\r\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { active: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * Link inside of a `mat-tab-nav-bar`.\r\n */\r\nclass MatTabLink extends _MatTabLinkBase {\r\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\r\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\r\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\r\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\r\n    }\r\n    ngOnDestroy() {\r\n        super.ngOnDestroy();\r\n        this._tabLinkRipple._removeTriggerEvents();\r\n    }\r\n}\r\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() { return ctx._handleFocus(); });\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\r\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\r\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nMatTabLink.ctorParameters = () => [\r\n    { type: MatTabNav },\r\n    { type: ElementRef },\r\n    { type: NgZone },\r\n    { type: Platform },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\r\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\r\n    { type: FocusMonitor },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[mat-tab-link], [matTabLink]',\r\n                exportAs: 'matTabLink',\r\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\r\n                host: {\r\n                    'class': 'mat-tab-link mat-focus-indicator',\r\n                    '[attr.aria-current]': 'active ? \"page\" : null',\r\n                    '[attr.aria-disabled]': 'disabled',\r\n                    '[attr.tabIndex]': 'tabIndex',\r\n                    '[class.mat-tab-disabled]': 'disabled',\r\n                    '[class.mat-tab-label-active]': 'active',\r\n                    '(focus)': '_handleFocus()'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\r\n            }] }, { type: String, decorators: [{\r\n                type: Attribute,\r\n                args: ['tabindex']\r\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass MatTabsModule {\r\n}\r\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\r\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\r\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            MatCommonModule,\r\n            PortalModule,\r\n            MatRippleModule,\r\n            ObserversModule,\r\n            A11yModule,\r\n        ], MatCommonModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    MatCommonModule,\r\n                    PortalModule,\r\n                    MatRippleModule,\r\n                    ObserversModule,\r\n                    A11yModule,\r\n                ],\r\n                // Don't export all components because some are only to be used internally.\r\n                exports: [\r\n                    MatCommonModule,\r\n                    MatTabGroup,\r\n                    MatTabLabel,\r\n                    MatTab,\r\n                    MatTabNav,\r\n                    MatTabLink,\r\n                    MatTabContent,\r\n                ],\r\n                declarations: [\r\n                    MatTabGroup,\r\n                    MatTabLabel,\r\n                    MatTab,\r\n                    MatInkBar,\r\n                    MatTabLabelWrapper,\r\n                    MatTabNav,\r\n                    MatTabLink,\r\n                    MatTabBody,\r\n                    MatTabBodyPortal,\r\n                    MatTabHeader,\r\n                    MatTabContent,\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\r\n        MatCommonModule,\r\n        PortalModule,\r\n        MatRippleModule,\r\n        ObserversModule,\r\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\r\n\r\n//# sourceMappingURL=tabs.js.map"],"sourceRoot":"webpack:///"}