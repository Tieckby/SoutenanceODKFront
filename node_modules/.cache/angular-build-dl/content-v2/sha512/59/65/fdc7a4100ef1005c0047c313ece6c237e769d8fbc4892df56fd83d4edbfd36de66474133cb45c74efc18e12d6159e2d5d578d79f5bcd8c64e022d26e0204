{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","webpack:///node_modules/rxjs/dist/esm5/internal/observable/interval.js","webpack:///src/app/doctor/appointments/appointments.component.html","webpack:///src/app/doctor/appointments/appointments.component.ts","webpack:///src/app/doctor/appointments/form/form.component.html","webpack:///src/app/doctor/appointments/form/form.component.ts","webpack:///src/app/doctor/dashboard/dashboard.component.html","webpack:///src/app/doctor/dashboard/dashboard.component.ts","webpack:///src/app/doctor/doctor-routing.module.ts","webpack:///src/app/doctor/doctor.module.ts","webpack:///src/app/doctor/doctors/doctors.component.html","webpack:///src/app/doctor/doctors/doctors.component.ts","webpack:///src/app/doctor/patients/patients.component.html","webpack:///src/app/doctor/patients/patients.component.ts","webpack:///src/app/doctor/settings/settings.component.html","webpack:///src/app/doctor/settings/settings.component.ts"],"names":["extendStyles","dest","source","importantProperties","key","hasOwnProperty","value","setProperty","has","removeProperty","toggleNativeDragInteractions","element","enable","userSelect","style","toggleVisibility","position","top","opacity","left","combineTransforms","transform","initialTransform","parseCssTimeUnitsToMs","multiplier","toLowerCase","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","name","getPropertyValue","split","map","part","trim","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","width","height","isInsideClientRect","x","y","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","_document","_viewportRuler","positions","Map","clear","elements","set","scrollPosition","getViewportScrollPosition","forEach","scrollTop","scrollLeft","event","target","_getEventTarget","cachedPosition","get","scrolledParentNode","documentElement","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","removeAttribute","i","length","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","type","context","getContext","drawImage","_a","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","Set","DragRef","_config","_ngZone","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","Subject","_pointerMoveSubscription","Subscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","next","targetHandle","handle","disabled","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","container","_dropContainer","_endDragSequence","isDragging","isReceiving","preventDefault","run","_startDragSequence","_previewRect","_preview","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","SVGElement","appliedTransform","setAttribute","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","newValue","coerceBooleanProperty","_toggleNativeDragInteractions","_placeholder","getPlaceholderElement","getRootElement","handles","coerceElement","disabledHandles","add","template","_previewTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","addEventListener","_initialTransform","undefined","_ownerSVGElement","ownerSVGElement","boundaryElement","unsubscribe","change","subscribe","_containInsideBoundaryOnResize","parent","_parentDragRef","removeNode","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","direction","_previewContainer","_previewRef","destroy","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","shadowRoot","_getShadowRoot","insertBefore","_createPreviewElement","body","appendChild","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","cache","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","draggable","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","getTransform","zIndex","classList","Array","isArray","className","Promise","resolve","placeholderRect","duration","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","constrainPosition","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","setFreeDragPosition","touch","mouse","scrollDifference","handleScroll","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","round","min","max","removeChild","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","sourceRect","moveItemInArray","array","fromIndex","toIndex","from","clamp","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","_isDragging","_itemPositions","_previousSwap","drag","overlaps","_draggables","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","interval","animationFrameScheduler","pipe","takeUntil","_scrollNode","scrollStep","incrementVerticalScroll","incrementHorizontalScroll","withScrollableParents","registerDropContainer","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","index","newIndex","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","parentElement","_shouldEnterAsFirstChild","reference","unshift","push","_cacheItemPositions","_cacheParentPositions","_reset","items","previousItems","_withDropContainer","draggedItems","filter","every","_cacheItems","connectedTo","slice","orientation","_scrollableElements","reverse","findIndex","currentItem","size","pointerDelta","_clientRect","siblings","isHorizontal","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","sibling","isDraggedItem","offset","elementToOffset","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","window","styles","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","elementToMeasure","getVisibleElement","sort","a","b","current","_stopReceiving","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","_","floor","_canReceive","elementFromPoint","nativeElement","activeSiblings","_sortFromLastPointerPosition","_startReceiving","predicate","amount","scrollBy","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","some","startsWith","e","options","config","_clearGlobalListeners","streams","Observable","observer","eventOptions","merge","instance","ɵfac","DragDropRegistry_Factory","t","DOCUMENT","ɵprov","factory","token","providedIn","ctorParameters","NgZone","decorators","Inject","args","ngDevMode","Injectable","DEFAULT_CONFIG","DragDrop","DragDrop_Factory","ViewportRuler","CDK_DRAG_PARENT","InjectionToken","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","CdkDropListGroup_Factory","ɵdir","selectors","inputs","exportAs","features","provide","useExisting","propDecorators","Input","Directive","providers","CDK_DRAG_CONFIG","assertElementNode","Error","_uniqueIdCounter","CDK_DROP_LIST","ɵ0","CdkDropList","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_group","_destroyed","id","EventEmitter","_unsortedItems","_dropListRef","createDropList","data","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","_syncItemsWithRef","documentPosition","_dragRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","dispose","ref","startWith","withDirection","coerceArray","correspondingDropList","list","console","warn","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","coerceNumberProperty","withOrientation","markForCheck","emit","draggingDisabled","listAutoScrollDisabled","listOrientation","withItems","getSortedItems","CdkDropList_Factory","hostAttrs","hostVars","hostBindings","CdkDropList_HostBindings","rf","ctx","outputs","useValue","ElementRef","ChangeDetectorRef","ScrollDispatcher","Directionality","Optional","SkipSelf","Output","host","CDK_DRAG_HANDLE","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CdkDragHandle_Factory","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","templateRef","CdkDragPlaceholder_Factory","TemplateRef","CDK_DRAG_PREVIEW","CdkDragPreview","_matchSize","CdkDragPreview_Factory","DRAG_HOST_CLASS","CdkDrag","_viewContainerRef","_selfHandle","subscription","movedEvent","createDrag","addItem","_syncInputs","reset","getFreeDragPosition","onStable","take","_updateRootElement","_setupHandlesListener","freeDragPosition","changes","rootSelectorChange","positionChange","firstChange","removeItem","rootElementSelector","getClosestMatchingAncestor","boundary","dir","withBoundaryElement","_getBoundaryElement","withPlaceholderTemplate","withPreviewTemplate","withPreviewContainer","_b","tap","childHandleElements","withHandles","switchMap","handleInstance","dragRef","disableHandle","enableHandle","CdkDrag_Factory","contentQueries","CdkDrag_ContentQueries","dirIndex","_t","first","CdkDrag_HostBindings","ViewContainerRef","Self","ContentChildren","descendants","ContentChild","currentElement","matches","msMatchesSelector","DragDropModule","DragDropModule_Factory","ɵmod","ɵinj","imports","CdkScrollableModule","NgModule","declarations","exports","ngJitMode","period","scheduler","asyncScheduler","timer","AppointmentsComponent","dialog","restApi","toatr","displayedColumns","myAllRDV","MatTableDataSource","refreshList","paginator","filterValue","getPersonByUsername","localStorage","getItem","result","currentUser","postBody","idPerson","getRDVByMedecin","row","validRDV","idRDV","showSuccessMessage","tempDirection","open","FormComponent","rdv","action","MatPaginator","MatSort","applyFilter","dialogRef","isDetails","close","MAT_DIALOG_DATA","DashboardComponent","myTodayRDV","currentDate","formatDate","getDistinctPatientByMedecinAndDate","myTodayPatient","getDistinctPatientByMedecin","myAllPatient","getRDVByMedecinAndDate","DatePipe","routes","path","component","DoctorsComponent","PatientsComponent","SettingsComponent","DoctorRoutingModule","RouterModule","DoctorModule","FormsModule","CommonModule","NgxEchartsModule","echarts","PerfectScrollbarModule","MatIconModule","MatButtonModule","MatDialogModule","NgApexchartsModule","MatPaginatorModule","MatSnackBarModule","MatFormFieldModule","MatSortModule","MatTabsModule","MatMenuModule","MatDatepickerModule","MatTableModule","MatSelectModule","MatCheckboxModule","MatInputModule","MatTooltipModule","MatRadioModule","MatProgressSpinnerModule","userProfileImg","userLink","getUserByProfile","allMedecins","toastr","router","passwordloading","loading","myProfile","location","reload","uploadImg","files","updateUserProfile","username","showWarningMessage","refreshPage","error","changePassword","changeUserPassword","resetForm","errorMsg1","changeUSer","updateBody","nom","prenom","adresse","telephone","email","genre","updateUser","setItem","navigate","showErrorMessage","getPhoto","updatePassword","userUpdate"],"mappings":"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","file":"src_app_doctor_doctor_module_ts-es5.js","sourcesContent":["import * as i0 from '@angular/core';\r\nimport { Injectable, NgZone, Inject, InjectionToken, Directive, Input, EventEmitter, ElementRef, ChangeDetectorRef, Optional, SkipSelf, Output, TemplateRef, ViewContainerRef, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\r\nimport * as i1 from '@angular/common';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport * as i2 from '@angular/cdk/scrolling';\r\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\r\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\r\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\r\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\r\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Shallow-extends a stylesheet object with another stylesheet-like object.\r\n * Note that the keys in `source` have to be dash-cased.\r\n * @docs-private\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\r\nimport * as ɵngcc2 from '@angular/cdk/bidi';\r\nfunction extendStyles(dest, source, importantProperties) {\r\n    for (let key in source) {\r\n        if (source.hasOwnProperty(key)) {\r\n            const value = source[key];\r\n            if (value) {\r\n                dest.setProperty(key, value, (importantProperties === null || importantProperties === void 0 ? void 0 : importantProperties.has(key)) ? 'important' : '');\r\n            }\r\n            else {\r\n                dest.removeProperty(key);\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\n/**\r\n * Toggles whether the native drag interactions should be enabled for an element.\r\n * @param element Element on which to toggle the drag interactions.\r\n * @param enable Whether the drag interactions should be enabled.\r\n * @docs-private\r\n */\r\nfunction toggleNativeDragInteractions(element, enable) {\r\n    const userSelect = enable ? '' : 'none';\r\n    extendStyles(element.style, {\r\n        'touch-action': enable ? '' : 'none',\r\n        '-webkit-user-drag': enable ? '' : 'none',\r\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\r\n        'user-select': userSelect,\r\n        '-ms-user-select': userSelect,\r\n        '-webkit-user-select': userSelect,\r\n        '-moz-user-select': userSelect\r\n    });\r\n}\r\n/**\r\n * Toggles whether an element is visible while preserving its dimensions.\r\n * @param element Element whose visibility to toggle\r\n * @param enable Whether the element should be visible.\r\n * @param importantProperties Properties to be set as `!important`.\r\n * @docs-private\r\n */\r\nfunction toggleVisibility(element, enable, importantProperties) {\r\n    extendStyles(element.style, {\r\n        position: enable ? '' : 'fixed',\r\n        top: enable ? '' : '0',\r\n        opacity: enable ? '' : '0',\r\n        left: enable ? '' : '-999em'\r\n    }, importantProperties);\r\n}\r\n/**\r\n * Combines a transform string with an optional other transform\r\n * that exited before the base transform was applied.\r\n */\r\nfunction combineTransforms(transform, initialTransform) {\r\n    return initialTransform && initialTransform != 'none' ?\r\n        (transform + ' ' + initialTransform) :\r\n        transform;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Parses a CSS time value to milliseconds. */\r\nfunction parseCssTimeUnitsToMs(value) {\r\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\r\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\r\n    return parseFloat(value) * multiplier;\r\n}\r\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\r\nfunction getTransformTransitionDurationInMs(element) {\r\n    const computedStyle = getComputedStyle(element);\r\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\r\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\r\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\r\n    if (!property) {\r\n        return 0;\r\n    }\r\n    // Get the index of the property that we're interested in and match\r\n    // it up to the same index in `transition-delay` and `transition-duration`.\r\n    const propertyIndex = transitionedProperties.indexOf(property);\r\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\r\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\r\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\r\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\r\n}\r\n/** Parses out multiple values from a computed style into an array. */\r\nfunction parseCssPropertyValue(computedStyle, name) {\r\n    const value = computedStyle.getPropertyValue(name);\r\n    return value.split(',').map(part => part.trim());\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Gets a mutable version of an element's bounding `ClientRect`. */\r\nfunction getMutableClientRect(element) {\r\n    const clientRect = element.getBoundingClientRect();\r\n    // We need to clone the `clientRect` here, because all the values on it are readonly\r\n    // and we need to be able to update them. Also we can't use a spread here, because\r\n    // the values on a `ClientRect` aren't own properties. See:\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\r\n    return {\r\n        top: clientRect.top,\r\n        right: clientRect.right,\r\n        bottom: clientRect.bottom,\r\n        left: clientRect.left,\r\n        width: clientRect.width,\r\n        height: clientRect.height\r\n    };\r\n}\r\n/**\r\n * Checks whether some coordinates are within a `ClientRect`.\r\n * @param clientRect ClientRect that is being checked.\r\n * @param x Coordinates along the X axis.\r\n * @param y Coordinates along the Y axis.\r\n */\r\nfunction isInsideClientRect(clientRect, x, y) {\r\n    const { top, bottom, left, right } = clientRect;\r\n    return y >= top && y <= bottom && x >= left && x <= right;\r\n}\r\n/**\r\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\r\n * @param clientRect `ClientRect` that should be updated.\r\n * @param top Amount to add to the `top` position.\r\n * @param left Amount to add to the `left` position.\r\n */\r\nfunction adjustClientRect(clientRect, top, left) {\r\n    clientRect.top += top;\r\n    clientRect.bottom = clientRect.top + clientRect.height;\r\n    clientRect.left += left;\r\n    clientRect.right = clientRect.left + clientRect.width;\r\n}\r\n/**\r\n * Checks whether the pointer coordinates are close to a ClientRect.\r\n * @param rect ClientRect to check against.\r\n * @param threshold Threshold around the ClientRect.\r\n * @param pointerX Coordinates along the X axis.\r\n * @param pointerY Coordinates along the Y axis.\r\n */\r\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\r\n    const { top, right, bottom, left, width, height } = rect;\r\n    const xThreshold = width * threshold;\r\n    const yThreshold = height * threshold;\r\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\r\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\r\nclass ParentPositionTracker {\r\n    constructor(_document, _viewportRuler) {\r\n        this._document = _document;\r\n        this._viewportRuler = _viewportRuler;\r\n        /** Cached positions of the scrollable parent elements. */\r\n        this.positions = new Map();\r\n    }\r\n    /** Clears the cached positions. */\r\n    clear() {\r\n        this.positions.clear();\r\n    }\r\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\r\n    cache(elements) {\r\n        this.clear();\r\n        this.positions.set(this._document, {\r\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\r\n        });\r\n        elements.forEach(element => {\r\n            this.positions.set(element, {\r\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\r\n                clientRect: getMutableClientRect(element)\r\n            });\r\n        });\r\n    }\r\n    /** Handles scrolling while a drag is taking place. */\r\n    handleScroll(event) {\r\n        const target = _getEventTarget(event);\r\n        const cachedPosition = this.positions.get(target);\r\n        if (!cachedPosition) {\r\n            return null;\r\n        }\r\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\r\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\r\n        // `contains` on the `document`.\r\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\r\n        const scrollPosition = cachedPosition.scrollPosition;\r\n        let newTop;\r\n        let newLeft;\r\n        if (target === this._document) {\r\n            const viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\r\n            newTop = viewportScrollPosition.top;\r\n            newLeft = viewportScrollPosition.left;\r\n        }\r\n        else {\r\n            newTop = target.scrollTop;\r\n            newLeft = target.scrollLeft;\r\n        }\r\n        const topDifference = scrollPosition.top - newTop;\r\n        const leftDifference = scrollPosition.left - newLeft;\r\n        // Go through and update the cached positions of the scroll\r\n        // parents that are inside the element that was scrolled.\r\n        this.positions.forEach((position, node) => {\r\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\r\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\r\n            }\r\n        });\r\n        scrollPosition.top = newTop;\r\n        scrollPosition.left = newLeft;\r\n        return { top: topDifference, left: leftDifference };\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Creates a deep clone of an element. */\r\nfunction deepCloneNode(node) {\r\n    const clone = node.cloneNode(true);\r\n    const descendantsWithId = clone.querySelectorAll('[id]');\r\n    const nodeName = node.nodeName.toLowerCase();\r\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\r\n    clone.removeAttribute('id');\r\n    for (let i = 0; i < descendantsWithId.length; i++) {\r\n        descendantsWithId[i].removeAttribute('id');\r\n    }\r\n    if (nodeName === 'canvas') {\r\n        transferCanvasData(node, clone);\r\n    }\r\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\r\n        transferInputData(node, clone);\r\n    }\r\n    transferData('canvas', node, clone, transferCanvasData);\r\n    transferData('input, textarea, select', node, clone, transferInputData);\r\n    return clone;\r\n}\r\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\r\nfunction transferData(selector, node, clone, callback) {\r\n    const descendantElements = node.querySelectorAll(selector);\r\n    if (descendantElements.length) {\r\n        const cloneElements = clone.querySelectorAll(selector);\r\n        for (let i = 0; i < descendantElements.length; i++) {\r\n            callback(descendantElements[i], cloneElements[i]);\r\n        }\r\n    }\r\n}\r\n// Counter for unique cloned radio button names.\r\nlet cloneUniqueId = 0;\r\n/** Transfers the data of one input element to another. */\r\nfunction transferInputData(source, clone) {\r\n    // Browsers throw an error when assigning the value of a file input programmatically.\r\n    if (clone.type !== 'file') {\r\n        clone.value = source.value;\r\n    }\r\n    // Radio button `name` attributes must be unique for radio button groups\r\n    // otherwise original radio buttons can lose their checked state\r\n    // once the clone is inserted in the DOM.\r\n    if (clone.type === 'radio' && clone.name) {\r\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\r\n    }\r\n}\r\n/** Transfers the data of one canvas element to another. */\r\nfunction transferCanvasData(source, clone) {\r\n    const context = clone.getContext('2d');\r\n    if (context) {\r\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\r\n        // We can't do much about it so just ignore the error.\r\n        try {\r\n            context.drawImage(source, 0, 0);\r\n        }\r\n        catch (_a) { }\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Options that can be used to bind a passive event listener. */\r\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\r\n/** Options that can be used to bind an active event listener. */\r\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\r\n/**\r\n * Time in milliseconds for which to ignore mouse events, after\r\n * receiving a touch event. Used to avoid doing double work for\r\n * touch devices where the browser fires fake mouse events, in\r\n * addition to touch events.\r\n */\r\nconst MOUSE_EVENT_IGNORE_TIME = 800;\r\n/** Inline styles to be set as `!important` while dragging. */\r\nconst dragImportantProperties = new Set([\r\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\r\n    'position'\r\n]);\r\n/**\r\n * Reference to a draggable item. Used to manipulate or dispose of the item.\r\n */\r\nclass DragRef {\r\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\r\n        this._config = _config;\r\n        this._document = _document;\r\n        this._ngZone = _ngZone;\r\n        this._viewportRuler = _viewportRuler;\r\n        this._dragDropRegistry = _dragDropRegistry;\r\n        /**\r\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\r\n         * passive transform in order for the dragged element to retain its new position\r\n         * after the user has stopped dragging and because we need to know the relative\r\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\r\n         */\r\n        this._passiveTransform = { x: 0, y: 0 };\r\n        /** CSS `transform` that is applied to the element while it's being dragged. */\r\n        this._activeTransform = { x: 0, y: 0 };\r\n        /**\r\n         * Whether the dragging sequence has been started. Doesn't\r\n         * necessarily mean that the element has been moved.\r\n         */\r\n        this._hasStartedDragging = false;\r\n        /** Emits when the item is being moved. */\r\n        this._moveEvents = new Subject();\r\n        /** Subscription to pointer movement events. */\r\n        this._pointerMoveSubscription = Subscription.EMPTY;\r\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\r\n        this._pointerUpSubscription = Subscription.EMPTY;\r\n        /** Subscription to the viewport being scrolled. */\r\n        this._scrollSubscription = Subscription.EMPTY;\r\n        /** Subscription to the viewport being resized. */\r\n        this._resizeSubscription = Subscription.EMPTY;\r\n        /** Cached reference to the boundary element. */\r\n        this._boundaryElement = null;\r\n        /** Whether the native dragging interactions have been enabled on the root element. */\r\n        this._nativeInteractionsEnabled = true;\r\n        /** Elements that can be used to drag the draggable item. */\r\n        this._handles = [];\r\n        /** Registered handles that are currently disabled. */\r\n        this._disabledHandles = new Set();\r\n        /** Layout direction of the item. */\r\n        this._direction = 'ltr';\r\n        /**\r\n         * Amount of milliseconds to wait after the user has put their\r\n         * pointer down before starting to drag the element.\r\n         */\r\n        this.dragStartDelay = 0;\r\n        this._disabled = false;\r\n        /** Emits as the drag sequence is being prepared. */\r\n        this.beforeStarted = new Subject();\r\n        /** Emits when the user starts dragging the item. */\r\n        this.started = new Subject();\r\n        /** Emits when the user has released a drag item, before any animations have started. */\r\n        this.released = new Subject();\r\n        /** Emits when the user stops dragging an item in the container. */\r\n        this.ended = new Subject();\r\n        /** Emits when the user has moved the item into a new container. */\r\n        this.entered = new Subject();\r\n        /** Emits when the user removes the item its container by dragging it into another container. */\r\n        this.exited = new Subject();\r\n        /** Emits when the user drops the item inside a container. */\r\n        this.dropped = new Subject();\r\n        /**\r\n         * Emits as the user is dragging the item. Use with caution,\r\n         * because this event will fire for every pixel that the user has dragged.\r\n         */\r\n        this.moved = this._moveEvents;\r\n        /** Handler for the `mousedown`/`touchstart` events. */\r\n        this._pointerDown = (event) => {\r\n            this.beforeStarted.next();\r\n            // Delegate the event based on whether it started from a handle or the element itself.\r\n            if (this._handles.length) {\r\n                const targetHandle = this._handles.find(handle => {\r\n                    const target = _getEventTarget(event);\r\n                    return !!target && (target === handle || handle.contains(target));\r\n                });\r\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\r\n                    this._initializeDragSequence(targetHandle, event);\r\n                }\r\n            }\r\n            else if (!this.disabled) {\r\n                this._initializeDragSequence(this._rootElement, event);\r\n            }\r\n        };\r\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\r\n        this._pointerMove = (event) => {\r\n            const pointerPosition = this._getPointerPositionOnPage(event);\r\n            if (!this._hasStartedDragging) {\r\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\r\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\r\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\r\n                // Only start dragging after the user has moved more than the minimum distance in either\r\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\r\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\r\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\r\n                if (isOverThreshold) {\r\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\r\n                    const container = this._dropContainer;\r\n                    if (!isDelayElapsed) {\r\n                        this._endDragSequence(event);\r\n                        return;\r\n                    }\r\n                    // Prevent other drag sequences from starting while something in the container is still\r\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\r\n                    // and can cause errors, because some elements might still be moving around.\r\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\r\n                        // Prevent the default action as soon as the dragging sequence is considered as\r\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\r\n                        event.preventDefault();\r\n                        this._hasStartedDragging = true;\r\n                        this._ngZone.run(() => this._startDragSequence(event));\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            // We only need the preview dimensions if we have a boundary element.\r\n            if (this._boundaryElement) {\r\n                // Cache the preview element rect if we haven't cached it already or if\r\n                // we cached it too early before the element dimensions were computed.\r\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\r\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\r\n                }\r\n            }\r\n            // We prevent the default action down here so that we know that dragging has started. This is\r\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\r\n            // if there's a dragging delay.\r\n            event.preventDefault();\r\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\r\n            this._hasMoved = true;\r\n            this._lastKnownPointerPosition = pointerPosition;\r\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\r\n            if (this._dropContainer) {\r\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\r\n            }\r\n            else {\r\n                const activeTransform = this._activeTransform;\r\n                activeTransform.x =\r\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\r\n                activeTransform.y =\r\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\r\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\r\n                // Apply transform as attribute if dragging and svg element to work for IE\r\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\r\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\r\n                    this._rootElement.setAttribute('transform', appliedTransform);\r\n                }\r\n            }\r\n            // Since this event gets fired for every pixel while dragging, we only\r\n            // want to fire it if the consumer opted into it. Also we have to\r\n            // re-enter the zone because we run all of the events on the outside.\r\n            if (this._moveEvents.observers.length) {\r\n                this._ngZone.run(() => {\r\n                    this._moveEvents.next({\r\n                        source: this,\r\n                        pointerPosition: constrainedPointerPosition,\r\n                        event,\r\n                        distance: this._getDragDistance(constrainedPointerPosition),\r\n                        delta: this._pointerDirectionDelta\r\n                    });\r\n                });\r\n            }\r\n        };\r\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\r\n        this._pointerUp = (event) => {\r\n            this._endDragSequence(event);\r\n        };\r\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\r\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\r\n        _dragDropRegistry.registerDragItem(this);\r\n    }\r\n    /** Whether starting to drag this element is disabled. */\r\n    get disabled() {\r\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\r\n    }\r\n    set disabled(value) {\r\n        const newValue = coerceBooleanProperty(value);\r\n        if (newValue !== this._disabled) {\r\n            this._disabled = newValue;\r\n            this._toggleNativeDragInteractions();\r\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\r\n        }\r\n    }\r\n    /**\r\n     * Returns the element that is being used as a placeholder\r\n     * while the current element is being dragged.\r\n     */\r\n    getPlaceholderElement() {\r\n        return this._placeholder;\r\n    }\r\n    /** Returns the root draggable element. */\r\n    getRootElement() {\r\n        return this._rootElement;\r\n    }\r\n    /**\r\n     * Gets the currently-visible element that represents the drag item.\r\n     * While dragging this is the placeholder, otherwise it's the root element.\r\n     */\r\n    getVisibleElement() {\r\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\r\n    }\r\n    /** Registers the handles that can be used to drag the element. */\r\n    withHandles(handles) {\r\n        this._handles = handles.map(handle => coerceElement(handle));\r\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\r\n        this._toggleNativeDragInteractions();\r\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\r\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\r\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\r\n        // use an array internally which may throw an error.\r\n        const disabledHandles = new Set();\r\n        this._disabledHandles.forEach(handle => {\r\n            if (this._handles.indexOf(handle) > -1) {\r\n                disabledHandles.add(handle);\r\n            }\r\n        });\r\n        this._disabledHandles = disabledHandles;\r\n        return this;\r\n    }\r\n    /**\r\n     * Registers the template that should be used for the drag preview.\r\n     * @param template Template that from which to stamp out the preview.\r\n     */\r\n    withPreviewTemplate(template) {\r\n        this._previewTemplate = template;\r\n        return this;\r\n    }\r\n    /**\r\n     * Registers the template that should be used for the drag placeholder.\r\n     * @param template Template that from which to stamp out the placeholder.\r\n     */\r\n    withPlaceholderTemplate(template) {\r\n        this._placeholderTemplate = template;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets an alternate drag root element. The root element is the element that will be moved as\r\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\r\n     * dragging on an element that you might not have access to.\r\n     */\r\n    withRootElement(rootElement) {\r\n        const element = coerceElement(rootElement);\r\n        if (element !== this._rootElement) {\r\n            if (this._rootElement) {\r\n                this._removeRootElementListeners(this._rootElement);\r\n            }\r\n            this._ngZone.runOutsideAngular(() => {\r\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\r\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\r\n            });\r\n            this._initialTransform = undefined;\r\n            this._rootElement = element;\r\n        }\r\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\r\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Element to which the draggable's position will be constrained.\r\n     */\r\n    withBoundaryElement(boundaryElement) {\r\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\r\n        this._resizeSubscription.unsubscribe();\r\n        if (boundaryElement) {\r\n            this._resizeSubscription = this._viewportRuler\r\n                .change(10)\r\n                .subscribe(() => this._containInsideBoundaryOnResize());\r\n        }\r\n        return this;\r\n    }\r\n    /** Sets the parent ref that the ref is nested in.  */\r\n    withParent(parent) {\r\n        this._parentDragRef = parent;\r\n        return this;\r\n    }\r\n    /** Removes the dragging functionality from the DOM element. */\r\n    dispose() {\r\n        this._removeRootElementListeners(this._rootElement);\r\n        // Do this check before removing from the registry since it'll\r\n        // stop being considered as dragged once it is removed.\r\n        if (this.isDragging()) {\r\n            // Since we move out the element to the end of the body while it's being\r\n            // dragged, we have to make sure that it's removed if it gets destroyed.\r\n            removeNode(this._rootElement);\r\n        }\r\n        removeNode(this._anchor);\r\n        this._destroyPreview();\r\n        this._destroyPlaceholder();\r\n        this._dragDropRegistry.removeDragItem(this);\r\n        this._removeSubscriptions();\r\n        this.beforeStarted.complete();\r\n        this.started.complete();\r\n        this.released.complete();\r\n        this.ended.complete();\r\n        this.entered.complete();\r\n        this.exited.complete();\r\n        this.dropped.complete();\r\n        this._moveEvents.complete();\r\n        this._handles = [];\r\n        this._disabledHandles.clear();\r\n        this._dropContainer = undefined;\r\n        this._resizeSubscription.unsubscribe();\r\n        this._parentPositions.clear();\r\n        this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\r\n            this._previewTemplate = this._anchor = this._parentDragRef = null;\r\n    }\r\n    /** Checks whether the element is currently being dragged. */\r\n    isDragging() {\r\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\r\n    }\r\n    /** Resets a standalone drag item to its initial position. */\r\n    reset() {\r\n        this._rootElement.style.transform = this._initialTransform || '';\r\n        this._activeTransform = { x: 0, y: 0 };\r\n        this._passiveTransform = { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\r\n     * @param handle Handle element that should be disabled.\r\n     */\r\n    disableHandle(handle) {\r\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\r\n            this._disabledHandles.add(handle);\r\n            toggleNativeDragInteractions(handle, true);\r\n        }\r\n    }\r\n    /**\r\n     * Enables a handle, if it has been disabled.\r\n     * @param handle Handle element to be enabled.\r\n     */\r\n    enableHandle(handle) {\r\n        if (this._disabledHandles.has(handle)) {\r\n            this._disabledHandles.delete(handle);\r\n            toggleNativeDragInteractions(handle, this.disabled);\r\n        }\r\n    }\r\n    /** Sets the layout direction of the draggable item. */\r\n    withDirection(direction) {\r\n        this._direction = direction;\r\n        return this;\r\n    }\r\n    /** Sets the container that the item is part of. */\r\n    _withDropContainer(container) {\r\n        this._dropContainer = container;\r\n    }\r\n    /**\r\n     * Gets the current position in pixels the draggable outside of a drop container.\r\n     */\r\n    getFreeDragPosition() {\r\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\r\n        return { x: position.x, y: position.y };\r\n    }\r\n    /**\r\n     * Sets the current position in pixels the draggable outside of a drop container.\r\n     * @param value New position to be set.\r\n     */\r\n    setFreeDragPosition(value) {\r\n        this._activeTransform = { x: 0, y: 0 };\r\n        this._passiveTransform.x = value.x;\r\n        this._passiveTransform.y = value.y;\r\n        if (!this._dropContainer) {\r\n            this._applyRootElementTransform(value.x, value.y);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets the container into which to insert the preview element.\r\n     * @param value Container into which to insert the preview.\r\n     */\r\n    withPreviewContainer(value) {\r\n        this._previewContainer = value;\r\n        return this;\r\n    }\r\n    /** Updates the item's sort order based on the last-known pointer position. */\r\n    _sortFromLastPointerPosition() {\r\n        const position = this._lastKnownPointerPosition;\r\n        if (position && this._dropContainer) {\r\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\r\n        }\r\n    }\r\n    /** Unsubscribes from the global subscriptions. */\r\n    _removeSubscriptions() {\r\n        this._pointerMoveSubscription.unsubscribe();\r\n        this._pointerUpSubscription.unsubscribe();\r\n        this._scrollSubscription.unsubscribe();\r\n    }\r\n    /** Destroys the preview element and its ViewRef. */\r\n    _destroyPreview() {\r\n        if (this._preview) {\r\n            removeNode(this._preview);\r\n        }\r\n        if (this._previewRef) {\r\n            this._previewRef.destroy();\r\n        }\r\n        this._preview = this._previewRef = null;\r\n    }\r\n    /** Destroys the placeholder element and its ViewRef. */\r\n    _destroyPlaceholder() {\r\n        if (this._placeholder) {\r\n            removeNode(this._placeholder);\r\n        }\r\n        if (this._placeholderRef) {\r\n            this._placeholderRef.destroy();\r\n        }\r\n        this._placeholder = this._placeholderRef = null;\r\n    }\r\n    /**\r\n     * Clears subscriptions and stops the dragging sequence.\r\n     * @param event Browser event object that ended the sequence.\r\n     */\r\n    _endDragSequence(event) {\r\n        // Note that here we use `isDragging` from the service, rather than from `this`.\r\n        // The difference is that the one from the service reflects whether a dragging sequence\r\n        // has been initiated, whereas the one on `this` includes whether the user has passed\r\n        // the minimum dragging threshold.\r\n        if (!this._dragDropRegistry.isDragging(this)) {\r\n            return;\r\n        }\r\n        this._removeSubscriptions();\r\n        this._dragDropRegistry.stopDragging(this);\r\n        this._toggleNativeDragInteractions();\r\n        if (this._handles) {\r\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\r\n        }\r\n        if (!this._hasStartedDragging) {\r\n            return;\r\n        }\r\n        this.released.next({ source: this });\r\n        if (this._dropContainer) {\r\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\r\n            this._dropContainer._stopScrolling();\r\n            this._animatePreviewToPlaceholder().then(() => {\r\n                this._cleanupDragArtifacts(event);\r\n                this._cleanupCachedDimensions();\r\n                this._dragDropRegistry.stopDragging(this);\r\n            });\r\n        }\r\n        else {\r\n            // Convert the active transform into a passive one. This means that next time\r\n            // the user starts dragging the item, its position will be calculated relatively\r\n            // to the new passive transform.\r\n            this._passiveTransform.x = this._activeTransform.x;\r\n            const pointerPosition = this._getPointerPositionOnPage(event);\r\n            this._passiveTransform.y = this._activeTransform.y;\r\n            this._ngZone.run(() => {\r\n                this.ended.next({\r\n                    source: this,\r\n                    distance: this._getDragDistance(pointerPosition),\r\n                    dropPoint: pointerPosition\r\n                });\r\n            });\r\n            this._cleanupCachedDimensions();\r\n            this._dragDropRegistry.stopDragging(this);\r\n        }\r\n    }\r\n    /** Starts the dragging sequence. */\r\n    _startDragSequence(event) {\r\n        if (isTouchEvent(event)) {\r\n            this._lastTouchEventTime = Date.now();\r\n        }\r\n        this._toggleNativeDragInteractions();\r\n        const dropContainer = this._dropContainer;\r\n        if (dropContainer) {\r\n            const element = this._rootElement;\r\n            const parent = element.parentNode;\r\n            const placeholder = this._placeholder = this._createPlaceholderElement();\r\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\r\n            // Needs to happen before the root element is moved.\r\n            const shadowRoot = this._getShadowRoot();\r\n            // Insert an anchor node so that we can restore the element's position in the DOM.\r\n            parent.insertBefore(anchor, element);\r\n            // There's no risk of transforms stacking when inside a drop container so\r\n            // we can keep the initial transform up to date any time dragging starts.\r\n            this._initialTransform = element.style.transform || '';\r\n            // Create the preview after the initial transform has\r\n            // been cached, because it can be affected by the transform.\r\n            this._preview = this._createPreviewElement();\r\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\r\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\r\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\r\n            toggleVisibility(element, false, dragImportantProperties);\r\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\r\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\r\n            this.started.next({ source: this }); // Emit before notifying the container.\r\n            dropContainer.start();\r\n            this._initialContainer = dropContainer;\r\n            this._initialIndex = dropContainer.getItemIndex(this);\r\n        }\r\n        else {\r\n            this.started.next({ source: this });\r\n            this._initialContainer = this._initialIndex = undefined;\r\n        }\r\n        // Important to run after we've called `start` on the parent container\r\n        // so that it has had time to resolve its scrollable parents.\r\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\r\n    }\r\n    /**\r\n     * Sets up the different variables and subscriptions\r\n     * that will be necessary for the dragging sequence.\r\n     * @param referenceElement Element that started the drag sequence.\r\n     * @param event Browser event object that started the sequence.\r\n     */\r\n    _initializeDragSequence(referenceElement, event) {\r\n        // Stop propagation if the item is inside another\r\n        // draggable so we don't start multiple drag sequences.\r\n        if (this._parentDragRef) {\r\n            event.stopPropagation();\r\n        }\r\n        const isDragging = this.isDragging();\r\n        const isTouchSequence = isTouchEvent(event);\r\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\r\n        const rootElement = this._rootElement;\r\n        const target = _getEventTarget(event);\r\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\r\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\r\n        const isFakeEvent = isTouchSequence ? isFakeTouchstartFromScreenReader(event) :\r\n            isFakeMousedownFromScreenReader(event);\r\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\r\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\r\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\r\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\r\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\r\n        // events from firing on touch devices.\r\n        if (target && target.draggable && event.type === 'mousedown') {\r\n            event.preventDefault();\r\n        }\r\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\r\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\r\n            return;\r\n        }\r\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\r\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\r\n        // are disabled.\r\n        if (this._handles.length) {\r\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\r\n            rootElement.style.webkitTapHighlightColor = 'transparent';\r\n        }\r\n        this._hasStartedDragging = this._hasMoved = false;\r\n        // Avoid multiple subscriptions and memory leaks when multi touch\r\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\r\n        this._removeSubscriptions();\r\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\r\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\r\n        this._scrollSubscription = this._dragDropRegistry\r\n            .scrolled(this._getShadowRoot())\r\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\r\n        if (this._boundaryElement) {\r\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\r\n        }\r\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\r\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\r\n        // the same size as the root element, in which case we do know the size.\r\n        const previewTemplate = this._previewTemplate;\r\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\r\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\r\n            this._getPointerPositionInElement(referenceElement, event);\r\n        const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\r\n            this._getPointerPositionOnPage(event);\r\n        this._pointerDirectionDelta = { x: 0, y: 0 };\r\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\r\n        this._dragStartTime = Date.now();\r\n        this._dragDropRegistry.startDragging(this, event);\r\n    }\r\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\r\n    _cleanupDragArtifacts(event) {\r\n        // Restore the element's visibility and insert it at its old position in the DOM.\r\n        // It's important that we maintain the position, because moving the element around in the DOM\r\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\r\n        // while moving the existing elements in all other cases.\r\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\r\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\r\n        this._destroyPreview();\r\n        this._destroyPlaceholder();\r\n        this._boundaryRect = this._previewRect = this._initialTransform = undefined;\r\n        // Re-enter the NgZone since we bound `document` events on the outside.\r\n        this._ngZone.run(() => {\r\n            const container = this._dropContainer;\r\n            const currentIndex = container.getItemIndex(this);\r\n            const pointerPosition = this._getPointerPositionOnPage(event);\r\n            const distance = this._getDragDistance(pointerPosition);\r\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\r\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition });\r\n            this.dropped.next({\r\n                item: this,\r\n                currentIndex,\r\n                previousIndex: this._initialIndex,\r\n                container: container,\r\n                previousContainer: this._initialContainer,\r\n                isPointerOverContainer,\r\n                distance,\r\n                dropPoint: pointerPosition\r\n            });\r\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition);\r\n            this._dropContainer = this._initialContainer;\r\n        });\r\n    }\r\n    /**\r\n     * Updates the item's position in its drop container, or moves it\r\n     * into a new one, depending on its current drag position.\r\n     */\r\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\r\n        // Drop container that draggable has been moved into.\r\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\r\n        // If we couldn't find a new container to move the item into, and the item has left its\r\n        // initial container, check whether the it's over the initial container. This handles the\r\n        // case where two containers are connected one way and the user tries to undo dragging an\r\n        // item into a new container.\r\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\r\n            this._initialContainer._isOverContainer(x, y)) {\r\n            newContainer = this._initialContainer;\r\n        }\r\n        if (newContainer && newContainer !== this._dropContainer) {\r\n            this._ngZone.run(() => {\r\n                // Notify the old container that the item has left.\r\n                this.exited.next({ item: this, container: this._dropContainer });\r\n                this._dropContainer.exit(this);\r\n                // Notify the new container that the item has entered.\r\n                this._dropContainer = newContainer;\r\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\r\n                    // If we're re-entering the initial container and sorting is disabled,\r\n                    // put item the into its starting index to begin with.\r\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\r\n                this.entered.next({\r\n                    item: this,\r\n                    container: newContainer,\r\n                    currentIndex: newContainer.getItemIndex(this)\r\n                });\r\n            });\r\n        }\r\n        // Dragging may have been interrupted as a result of the events above.\r\n        if (this.isDragging()) {\r\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\r\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\r\n            this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\r\n        }\r\n    }\r\n    /**\r\n     * Creates the element that will be rendered next to the user's pointer\r\n     * and will be used as a preview of the element that is being dragged.\r\n     */\r\n    _createPreviewElement() {\r\n        const previewConfig = this._previewTemplate;\r\n        const previewClass = this.previewClass;\r\n        const previewTemplate = previewConfig ? previewConfig.template : null;\r\n        let preview;\r\n        if (previewTemplate && previewConfig) {\r\n            // Measure the element before we've inserted the preview\r\n            // since the insertion could throw off the measurement.\r\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\r\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\r\n            viewRef.detectChanges();\r\n            preview = getRootNode(viewRef, this._document);\r\n            this._previewRef = viewRef;\r\n            if (previewConfig.matchSize) {\r\n                matchElementSize(preview, rootRect);\r\n            }\r\n            else {\r\n                preview.style.transform =\r\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\r\n            }\r\n        }\r\n        else {\r\n            const element = this._rootElement;\r\n            preview = deepCloneNode(element);\r\n            matchElementSize(preview, element.getBoundingClientRect());\r\n            if (this._initialTransform) {\r\n                preview.style.transform = this._initialTransform;\r\n            }\r\n        }\r\n        extendStyles(preview.style, {\r\n            // It's important that we disable the pointer events on the preview, because\r\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\r\n            'pointer-events': 'none',\r\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\r\n            'margin': '0',\r\n            'position': 'fixed',\r\n            'top': '0',\r\n            'left': '0',\r\n            'z-index': `${this._config.zIndex || 1000}`\r\n        }, dragImportantProperties);\r\n        toggleNativeDragInteractions(preview, false);\r\n        preview.classList.add('cdk-drag-preview');\r\n        preview.setAttribute('dir', this._direction);\r\n        if (previewClass) {\r\n            if (Array.isArray(previewClass)) {\r\n                previewClass.forEach(className => preview.classList.add(className));\r\n            }\r\n            else {\r\n                preview.classList.add(previewClass);\r\n            }\r\n        }\r\n        return preview;\r\n    }\r\n    /**\r\n     * Animates the preview element from its current position to the location of the drop placeholder.\r\n     * @returns Promise that resolves when the animation completes.\r\n     */\r\n    _animatePreviewToPlaceholder() {\r\n        // If the user hasn't moved yet, the transitionend event won't fire.\r\n        if (!this._hasMoved) {\r\n            return Promise.resolve();\r\n        }\r\n        const placeholderRect = this._placeholder.getBoundingClientRect();\r\n        // Apply the class that adds a transition to the preview.\r\n        this._preview.classList.add('cdk-drag-animating');\r\n        // Move the preview to the placeholder position.\r\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\r\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\r\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\r\n        // apply its style, we take advantage of the available info to figure out whether we need to\r\n        // bind the event in the first place.\r\n        const duration = getTransformTransitionDurationInMs(this._preview);\r\n        if (duration === 0) {\r\n            return Promise.resolve();\r\n        }\r\n        return this._ngZone.runOutsideAngular(() => {\r\n            return new Promise(resolve => {\r\n                const handler = ((event) => {\r\n                    var _a;\r\n                    if (!event || (_getEventTarget(event) === this._preview &&\r\n                        event.propertyName === 'transform')) {\r\n                        (_a = this._preview) === null || _a === void 0 ? void 0 : _a.removeEventListener('transitionend', handler);\r\n                        resolve();\r\n                        clearTimeout(timeout);\r\n                    }\r\n                });\r\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\r\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\r\n                // fire if the transition hasn't completed when it was supposed to.\r\n                const timeout = setTimeout(handler, duration * 1.5);\r\n                this._preview.addEventListener('transitionend', handler);\r\n            });\r\n        });\r\n    }\r\n    /** Creates an element that will be shown instead of the current element while dragging. */\r\n    _createPlaceholderElement() {\r\n        const placeholderConfig = this._placeholderTemplate;\r\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\r\n        let placeholder;\r\n        if (placeholderTemplate) {\r\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\r\n            this._placeholderRef.detectChanges();\r\n            placeholder = getRootNode(this._placeholderRef, this._document);\r\n        }\r\n        else {\r\n            placeholder = deepCloneNode(this._rootElement);\r\n        }\r\n        placeholder.classList.add('cdk-drag-placeholder');\r\n        return placeholder;\r\n    }\r\n    /**\r\n     * Figures out the coordinates at which an element was picked up.\r\n     * @param referenceElement Element that initiated the dragging.\r\n     * @param event Event that initiated the dragging.\r\n     */\r\n    _getPointerPositionInElement(referenceElement, event) {\r\n        const elementRect = this._rootElement.getBoundingClientRect();\r\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\r\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\r\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\r\n        const scrollPosition = this._getViewportScrollPosition();\r\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\r\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\r\n        return {\r\n            x: referenceRect.left - elementRect.left + x,\r\n            y: referenceRect.top - elementRect.top + y\r\n        };\r\n    }\r\n    /** Determines the point of the page that was touched by the user. */\r\n    _getPointerPositionOnPage(event) {\r\n        const scrollPosition = this._getViewportScrollPosition();\r\n        const point = isTouchEvent(event) ?\r\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\r\n            // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\r\n            // to have a value, but Firefox in device emulation mode has a bug where both can be empty\r\n            // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\r\n            // throwing an error. The value returned here will be incorrect, but since this only\r\n            // breaks inside a developer tool and the value is only used for secondary information,\r\n            // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\r\n            (event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }) : event;\r\n        const x = point.pageX - scrollPosition.left;\r\n        const y = point.pageY - scrollPosition.top;\r\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\r\n        // coordinate system\r\n        if (this._ownerSVGElement) {\r\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\r\n            if (svgMatrix) {\r\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\r\n                svgPoint.x = x;\r\n                svgPoint.y = y;\r\n                return svgPoint.matrixTransform(svgMatrix.inverse());\r\n            }\r\n        }\r\n        return { x, y };\r\n    }\r\n    /** Gets the pointer position on the page, accounting for any position constraints. */\r\n    _getConstrainedPointerPosition(point) {\r\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\r\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\r\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\r\n            y = this._pickupPositionOnPage.y;\r\n        }\r\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\r\n            x = this._pickupPositionOnPage.x;\r\n        }\r\n        if (this._boundaryRect) {\r\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\r\n            const boundaryRect = this._boundaryRect;\r\n            const previewRect = this._previewRect;\r\n            const minY = boundaryRect.top + pickupY;\r\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\r\n            const minX = boundaryRect.left + pickupX;\r\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\r\n            x = clamp$1(x, minX, maxX);\r\n            y = clamp$1(y, minY, maxY);\r\n        }\r\n        return { x, y };\r\n    }\r\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\r\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\r\n        const { x, y } = pointerPositionOnPage;\r\n        const delta = this._pointerDirectionDelta;\r\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\r\n        // Amount of pixels the user has dragged since the last time the direction changed.\r\n        const changeX = Math.abs(x - positionSinceLastChange.x);\r\n        const changeY = Math.abs(y - positionSinceLastChange.y);\r\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\r\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\r\n        // To make the delta more consistent, we track how much the user has moved since the last\r\n        // delta change and we only update it after it has reached a certain threshold.\r\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\r\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\r\n            positionSinceLastChange.x = x;\r\n        }\r\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\r\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\r\n            positionSinceLastChange.y = y;\r\n        }\r\n        return delta;\r\n    }\r\n    /** Toggles the native drag interactions, based on how many handles are registered. */\r\n    _toggleNativeDragInteractions() {\r\n        if (!this._rootElement || !this._handles) {\r\n            return;\r\n        }\r\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\r\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\r\n            this._nativeInteractionsEnabled = shouldEnable;\r\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\r\n        }\r\n    }\r\n    /** Removes the manually-added event listeners from the root element. */\r\n    _removeRootElementListeners(element) {\r\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\r\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\r\n    }\r\n    /**\r\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\r\n     * @param x New transform value along the X axis.\r\n     * @param y New transform value along the Y axis.\r\n     */\r\n    _applyRootElementTransform(x, y) {\r\n        const transform = getTransform(x, y);\r\n        // Cache the previous transform amount only after the first drag sequence, because\r\n        // we don't want our own transforms to stack on top of each other.\r\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\r\n        if (this._initialTransform == null) {\r\n            this._initialTransform = this._rootElement.style.transform\r\n                && this._rootElement.style.transform != 'none'\r\n                ? this._rootElement.style.transform\r\n                : '';\r\n        }\r\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\r\n        // transform before the user's, because things like rotation can affect which direction\r\n        // the element will be translated towards.\r\n        this._rootElement.style.transform = combineTransforms(transform, this._initialTransform);\r\n    }\r\n    /**\r\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\r\n     * @param x New transform value along the X axis.\r\n     * @param y New transform value along the Y axis.\r\n     */\r\n    _applyPreviewTransform(x, y) {\r\n        var _a;\r\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\r\n        // it could be completely different and the transform might not make sense anymore.\r\n        const initialTransform = ((_a = this._previewTemplate) === null || _a === void 0 ? void 0 : _a.template) ? undefined : this._initialTransform;\r\n        const transform = getTransform(x, y);\r\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\r\n    }\r\n    /**\r\n     * Gets the distance that the user has dragged during the current drag sequence.\r\n     * @param currentPosition Current position of the user's pointer.\r\n     */\r\n    _getDragDistance(currentPosition) {\r\n        const pickupPosition = this._pickupPositionOnPage;\r\n        if (pickupPosition) {\r\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\r\n    _cleanupCachedDimensions() {\r\n        this._boundaryRect = this._previewRect = undefined;\r\n        this._parentPositions.clear();\r\n    }\r\n    /**\r\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\r\n     * If not, the position is adjusted so that the element fits again.\r\n     */\r\n    _containInsideBoundaryOnResize() {\r\n        let { x, y } = this._passiveTransform;\r\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\r\n            return;\r\n        }\r\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\r\n        const elementRect = this._rootElement.getBoundingClientRect();\r\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\r\n        // different tab). Don't do anything in this case so we don't clear the user's position.\r\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\r\n            (elementRect.width === 0 && elementRect.height === 0)) {\r\n            return;\r\n        }\r\n        const leftOverflow = boundaryRect.left - elementRect.left;\r\n        const rightOverflow = elementRect.right - boundaryRect.right;\r\n        const topOverflow = boundaryRect.top - elementRect.top;\r\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\r\n        // If the element has become wider than the boundary, we can't\r\n        // do much to make it fit so we just anchor it to the left.\r\n        if (boundaryRect.width > elementRect.width) {\r\n            if (leftOverflow > 0) {\r\n                x += leftOverflow;\r\n            }\r\n            if (rightOverflow > 0) {\r\n                x -= rightOverflow;\r\n            }\r\n        }\r\n        else {\r\n            x = 0;\r\n        }\r\n        // If the element has become taller than the boundary, we can't\r\n        // do much to make it fit so we just anchor it to the top.\r\n        if (boundaryRect.height > elementRect.height) {\r\n            if (topOverflow > 0) {\r\n                y += topOverflow;\r\n            }\r\n            if (bottomOverflow > 0) {\r\n                y -= bottomOverflow;\r\n            }\r\n        }\r\n        else {\r\n            y = 0;\r\n        }\r\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\r\n            this.setFreeDragPosition({ y, x });\r\n        }\r\n    }\r\n    /** Gets the drag start delay, based on the event type. */\r\n    _getDragStartDelay(event) {\r\n        const value = this.dragStartDelay;\r\n        if (typeof value === 'number') {\r\n            return value;\r\n        }\r\n        else if (isTouchEvent(event)) {\r\n            return value.touch;\r\n        }\r\n        return value ? value.mouse : 0;\r\n    }\r\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\r\n    _updateOnScroll(event) {\r\n        const scrollDifference = this._parentPositions.handleScroll(event);\r\n        if (scrollDifference) {\r\n            const target = _getEventTarget(event);\r\n            // ClientRect dimensions are based on the scroll position of the page and its parent node so\r\n            // we have to update the cached boundary ClientRect if the user has scrolled. Check for\r\n            // the `document` specifically since IE doesn't support `contains` on it.\r\n            if (this._boundaryRect && (target === this._document ||\r\n                (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\r\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\r\n            }\r\n            this._pickupPositionOnPage.x += scrollDifference.left;\r\n            this._pickupPositionOnPage.y += scrollDifference.top;\r\n            // If we're in free drag mode, we have to update the active transform, because\r\n            // it isn't relative to the viewport like the preview inside a drop list.\r\n            if (!this._dropContainer) {\r\n                this._activeTransform.x -= scrollDifference.left;\r\n                this._activeTransform.y -= scrollDifference.top;\r\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\r\n            }\r\n        }\r\n    }\r\n    /** Gets the scroll position of the viewport. */\r\n    _getViewportScrollPosition() {\r\n        const cachedPosition = this._parentPositions.positions.get(this._document);\r\n        return cachedPosition ? cachedPosition.scrollPosition :\r\n            this._viewportRuler.getViewportScrollPosition();\r\n    }\r\n    /**\r\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\r\n     * than saving it in property directly on init, because we want to resolve it as late as possible\r\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\r\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\r\n     */\r\n    _getShadowRoot() {\r\n        if (this._cachedShadowRoot === undefined) {\r\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\r\n        }\r\n        return this._cachedShadowRoot;\r\n    }\r\n    /** Gets the element into which the drag preview should be inserted. */\r\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\r\n        const previewContainer = this._previewContainer || 'global';\r\n        if (previewContainer === 'parent') {\r\n            return initialParent;\r\n        }\r\n        if (previewContainer === 'global') {\r\n            const documentRef = this._document;\r\n            // We can't use the body if the user is in fullscreen mode,\r\n            // because the preview will render under the fullscreen element.\r\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\r\n            return shadowRoot ||\r\n                documentRef.fullscreenElement ||\r\n                documentRef.webkitFullscreenElement ||\r\n                documentRef.mozFullScreenElement ||\r\n                documentRef.msFullscreenElement ||\r\n                documentRef.body;\r\n        }\r\n        return coerceElement(previewContainer);\r\n    }\r\n}\r\n/**\r\n * Gets a 3d `transform` that can be applied to an element.\r\n * @param x Desired position of the element along the X axis.\r\n * @param y Desired position of the element along the Y axis.\r\n */\r\nfunction getTransform(x, y) {\r\n    // Round the transforms since some browsers will\r\n    // blur the elements for sub-pixel transforms.\r\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\r\n}\r\n/** Clamps a value between a minimum and a maximum. */\r\nfunction clamp$1(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\n/**\r\n * Helper to remove a node from the DOM and to do all the necessary null checks.\r\n * @param node Node to be removed.\r\n */\r\nfunction removeNode(node) {\r\n    if (node && node.parentNode) {\r\n        node.parentNode.removeChild(node);\r\n    }\r\n}\r\n/** Determines whether an event is a touch event. */\r\nfunction isTouchEvent(event) {\r\n    // This function is called for every pixel that the user has dragged so we need it to be\r\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\r\n    // that if the event's name starts with `t`, it's a touch event.\r\n    return event.type[0] === 't';\r\n}\r\n/**\r\n * Gets the root HTML element of an embedded view.\r\n * If the root is not an HTML element it gets wrapped in one.\r\n */\r\nfunction getRootNode(viewRef, _document) {\r\n    const rootNodes = viewRef.rootNodes;\r\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\r\n        return rootNodes[0];\r\n    }\r\n    const wrapper = _document.createElement('div');\r\n    rootNodes.forEach(node => wrapper.appendChild(node));\r\n    return wrapper;\r\n}\r\n/**\r\n * Matches the target element's size to the source's size.\r\n * @param target Element that needs to be resized.\r\n * @param sourceRect Dimensions of the source element.\r\n */\r\nfunction matchElementSize(target, sourceRect) {\r\n    target.style.width = `${sourceRect.width}px`;\r\n    target.style.height = `${sourceRect.height}px`;\r\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nfunction moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Proximity, as a ratio to width/height, at which a\r\n * dragged item will affect the drop container.\r\n */\r\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\r\n/**\r\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\r\n * viewport. The value comes from trying it out manually until it feels right.\r\n */\r\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\r\n/**\r\n * Reference to a drop list. Used to manipulate or dispose of the container.\r\n */\r\nclass DropListRef {\r\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\r\n        this._dragDropRegistry = _dragDropRegistry;\r\n        this._ngZone = _ngZone;\r\n        this._viewportRuler = _viewportRuler;\r\n        /** Whether starting a dragging sequence from this container is disabled. */\r\n        this.disabled = false;\r\n        /** Whether sorting items within the list is disabled. */\r\n        this.sortingDisabled = false;\r\n        /**\r\n         * Whether auto-scrolling the view when the user\r\n         * moves their pointer close to the edges is disabled.\r\n         */\r\n        this.autoScrollDisabled = false;\r\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\r\n        this.autoScrollStep = 2;\r\n        /**\r\n         * Function that is used to determine whether an item\r\n         * is allowed to be moved into a drop container.\r\n         */\r\n        this.enterPredicate = () => true;\r\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\r\n        this.sortPredicate = () => true;\r\n        /** Emits right before dragging has started. */\r\n        this.beforeStarted = new Subject();\r\n        /**\r\n         * Emits when the user has moved a new drag item into this container.\r\n         */\r\n        this.entered = new Subject();\r\n        /**\r\n         * Emits when the user removes an item from the container\r\n         * by dragging it into another container.\r\n         */\r\n        this.exited = new Subject();\r\n        /** Emits when the user drops an item inside the container. */\r\n        this.dropped = new Subject();\r\n        /** Emits as the user is swapping items while actively dragging. */\r\n        this.sorted = new Subject();\r\n        /** Whether an item in the list is being dragged. */\r\n        this._isDragging = false;\r\n        /** Cache of the dimensions of all the items inside the container. */\r\n        this._itemPositions = [];\r\n        /**\r\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\r\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\r\n         * overlap with the swapped item after the swapping occurred.\r\n         */\r\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\r\n        /** Draggable items in the container. */\r\n        this._draggables = [];\r\n        /** Drop lists that are connected to the current one. */\r\n        this._siblings = [];\r\n        /** Direction in which the list is oriented. */\r\n        this._orientation = 'vertical';\r\n        /** Connected siblings that currently have a dragged item. */\r\n        this._activeSiblings = new Set();\r\n        /** Layout direction of the drop list. */\r\n        this._direction = 'ltr';\r\n        /** Subscription to the window being scrolled. */\r\n        this._viewportScrollSubscription = Subscription.EMPTY;\r\n        /** Vertical direction in which the list is currently scrolling. */\r\n        this._verticalScrollDirection = 0 /* NONE */;\r\n        /** Horizontal direction in which the list is currently scrolling. */\r\n        this._horizontalScrollDirection = 0 /* NONE */;\r\n        /** Used to signal to the current auto-scroll sequence when to stop. */\r\n        this._stopScrollTimers = new Subject();\r\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\r\n        this._cachedShadowRoot = null;\r\n        /** Starts the interval that'll auto-scroll the element. */\r\n        this._startScrollInterval = () => {\r\n            this._stopScrolling();\r\n            interval(0, animationFrameScheduler)\r\n                .pipe(takeUntil(this._stopScrollTimers))\r\n                .subscribe(() => {\r\n                const node = this._scrollNode;\r\n                const scrollStep = this.autoScrollStep;\r\n                if (this._verticalScrollDirection === 1 /* UP */) {\r\n                    incrementVerticalScroll(node, -scrollStep);\r\n                }\r\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\r\n                    incrementVerticalScroll(node, scrollStep);\r\n                }\r\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\r\n                    incrementHorizontalScroll(node, -scrollStep);\r\n                }\r\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\r\n                    incrementHorizontalScroll(node, scrollStep);\r\n                }\r\n            });\r\n        };\r\n        this.element = coerceElement(element);\r\n        this._document = _document;\r\n        this.withScrollableParents([this.element]);\r\n        _dragDropRegistry.registerDropContainer(this);\r\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\r\n    }\r\n    /** Removes the drop list functionality from the DOM element. */\r\n    dispose() {\r\n        this._stopScrolling();\r\n        this._stopScrollTimers.complete();\r\n        this._viewportScrollSubscription.unsubscribe();\r\n        this.beforeStarted.complete();\r\n        this.entered.complete();\r\n        this.exited.complete();\r\n        this.dropped.complete();\r\n        this.sorted.complete();\r\n        this._activeSiblings.clear();\r\n        this._scrollNode = null;\r\n        this._parentPositions.clear();\r\n        this._dragDropRegistry.removeDropContainer(this);\r\n    }\r\n    /** Whether an item from this list is currently being dragged. */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /** Starts dragging an item. */\r\n    start() {\r\n        this._draggingStarted();\r\n        this._notifyReceivingSiblings();\r\n    }\r\n    /**\r\n     * Emits an event to indicate that the user moved an item into the container.\r\n     * @param item Item that was moved into the container.\r\n     * @param pointerX Position of the item along the X axis.\r\n     * @param pointerY Position of the item along the Y axis.\r\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\r\n     *   out automatically.\r\n     */\r\n    enter(item, pointerX, pointerY, index) {\r\n        this._draggingStarted();\r\n        // If sorting is disabled, we want the item to return to its starting\r\n        // position if the user is returning it to its initial container.\r\n        let newIndex;\r\n        if (index == null) {\r\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\r\n            if (newIndex === -1) {\r\n                // We use the coordinates of where the item entered the drop\r\n                // zone to figure out at which index it should be inserted.\r\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\r\n            }\r\n        }\r\n        else {\r\n            newIndex = index;\r\n        }\r\n        const activeDraggables = this._activeDraggables;\r\n        const currentIndex = activeDraggables.indexOf(item);\r\n        const placeholder = item.getPlaceholderElement();\r\n        let newPositionReference = activeDraggables[newIndex];\r\n        // If the item at the new position is the same as the item that is being dragged,\r\n        // it means that we're trying to restore the item to its initial position. In this\r\n        // case we should use the next item from the list as the reference.\r\n        if (newPositionReference === item) {\r\n            newPositionReference = activeDraggables[newIndex + 1];\r\n        }\r\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\r\n        // into another container and back again), we have to ensure that it isn't duplicated.\r\n        if (currentIndex > -1) {\r\n            activeDraggables.splice(currentIndex, 1);\r\n        }\r\n        // Don't use items that are being dragged as a reference, because\r\n        // their element has been moved down to the bottom of the body.\r\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\r\n            const element = newPositionReference.getRootElement();\r\n            element.parentElement.insertBefore(placeholder, element);\r\n            activeDraggables.splice(newIndex, 0, item);\r\n        }\r\n        else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\r\n            const reference = activeDraggables[0].getRootElement();\r\n            reference.parentNode.insertBefore(placeholder, reference);\r\n            activeDraggables.unshift(item);\r\n        }\r\n        else {\r\n            coerceElement(this.element).appendChild(placeholder);\r\n            activeDraggables.push(item);\r\n        }\r\n        // The transform needs to be cleared so it doesn't throw off the measurements.\r\n        placeholder.style.transform = '';\r\n        // Note that the positions were already cached when we called `start` above,\r\n        // but we need to refresh them since the amount of items has changed and also parent rects.\r\n        this._cacheItemPositions();\r\n        this._cacheParentPositions();\r\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\r\n        this._notifyReceivingSiblings();\r\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\r\n    }\r\n    /**\r\n     * Removes an item from the container after it was dragged into another container by the user.\r\n     * @param item Item that was dragged out.\r\n     */\r\n    exit(item) {\r\n        this._reset();\r\n        this.exited.next({ item, container: this });\r\n    }\r\n    /**\r\n     * Drops an item into this container.\r\n     * @param item Item being dropped into the container.\r\n     * @param currentIndex Index at which the item should be inserted.\r\n     * @param previousIndex Index of the item when dragging started.\r\n     * @param previousContainer Container from which the item got dragged in.\r\n     * @param isPointerOverContainer Whether the user's pointer was over the\r\n     *    container when the item was dropped.\r\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\r\n     */\r\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint) {\r\n        this._reset();\r\n        this.dropped.next({\r\n            item,\r\n            currentIndex,\r\n            previousIndex,\r\n            container: this,\r\n            previousContainer,\r\n            isPointerOverContainer,\r\n            distance,\r\n            dropPoint\r\n        });\r\n    }\r\n    /**\r\n     * Sets the draggable items that are a part of this list.\r\n     * @param items Items that are a part of this list.\r\n     */\r\n    withItems(items) {\r\n        const previousItems = this._draggables;\r\n        this._draggables = items;\r\n        items.forEach(item => item._withDropContainer(this));\r\n        if (this.isDragging()) {\r\n            const draggedItems = previousItems.filter(item => item.isDragging());\r\n            // If all of the items being dragged were removed\r\n            // from the list, abort the current drag sequence.\r\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\r\n                this._reset();\r\n            }\r\n            else {\r\n                this._cacheItems();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /** Sets the layout direction of the drop list. */\r\n    withDirection(direction) {\r\n        this._direction = direction;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets the containers that are connected to this one. When two or more containers are\r\n     * connected, the user will be allowed to transfer items between them.\r\n     * @param connectedTo Other containers that the current containers should be connected to.\r\n     */\r\n    connectedTo(connectedTo) {\r\n        this._siblings = connectedTo.slice();\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets the orientation of the container.\r\n     * @param orientation New orientation for the container.\r\n     */\r\n    withOrientation(orientation) {\r\n        this._orientation = orientation;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets which parent elements are can be scrolled while the user is dragging.\r\n     * @param elements Elements that can be scrolled.\r\n     */\r\n    withScrollableParents(elements) {\r\n        const element = coerceElement(this.element);\r\n        // We always allow the current element to be scrollable\r\n        // so we need to ensure that it's in the array.\r\n        this._scrollableElements =\r\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\r\n        return this;\r\n    }\r\n    /** Gets the scrollable parents that are registered with this drop container. */\r\n    getScrollableParents() {\r\n        return this._scrollableElements;\r\n    }\r\n    /**\r\n     * Figures out the index of an item in the container.\r\n     * @param item Item whose index should be determined.\r\n     */\r\n    getItemIndex(item) {\r\n        if (!this._isDragging) {\r\n            return this._draggables.indexOf(item);\r\n        }\r\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\r\n        // The rest of the logic still stands no matter what orientation we're in, however\r\n        // we need to invert the array when determining the index.\r\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\r\n            this._itemPositions.slice().reverse() : this._itemPositions;\r\n        return findIndex(items, currentItem => currentItem.drag === item);\r\n    }\r\n    /**\r\n     * Whether the list is able to receive the item that\r\n     * is currently being dragged inside a connected drop list.\r\n     */\r\n    isReceiving() {\r\n        return this._activeSiblings.size > 0;\r\n    }\r\n    /**\r\n     * Sorts an item inside the container based on its position.\r\n     * @param item Item to be sorted.\r\n     * @param pointerX Position of the item along the X axis.\r\n     * @param pointerY Position of the item along the Y axis.\r\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\r\n     */\r\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\r\n        // Don't sort the item if sorting is disabled or it's out of range.\r\n        if (this.sortingDisabled || !this._clientRect ||\r\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\r\n            return;\r\n        }\r\n        const siblings = this._itemPositions;\r\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\r\n        if (newIndex === -1 && siblings.length > 0) {\r\n            return;\r\n        }\r\n        const isHorizontal = this._orientation === 'horizontal';\r\n        const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\r\n        const siblingAtNewPosition = siblings[newIndex];\r\n        const currentPosition = siblings[currentIndex].clientRect;\r\n        const newPosition = siblingAtNewPosition.clientRect;\r\n        const delta = currentIndex > newIndex ? 1 : -1;\r\n        // How many pixels the item's placeholder should be offset.\r\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\r\n        // How many pixels all the other items should be offset.\r\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\r\n        // Save the previous order of the items before moving the item to its new index.\r\n        // We use this to check whether an item has been moved as a result of the sorting.\r\n        const oldOrder = siblings.slice();\r\n        // Shuffle the array in place.\r\n        moveItemInArray(siblings, currentIndex, newIndex);\r\n        this.sorted.next({\r\n            previousIndex: currentIndex,\r\n            currentIndex: newIndex,\r\n            container: this,\r\n            item\r\n        });\r\n        siblings.forEach((sibling, index) => {\r\n            // Don't do anything if the position hasn't changed.\r\n            if (oldOrder[index] === sibling) {\r\n                return;\r\n            }\r\n            const isDraggedItem = sibling.drag === item;\r\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\r\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\r\n                sibling.drag.getRootElement();\r\n            // Update the offset to reflect the new position.\r\n            sibling.offset += offset;\r\n            // Since we're moving the items with a `transform`, we need to adjust their cached\r\n            // client rects to reflect their new position, as well as swap their positions in the cache.\r\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\r\n            // elements may be mid-animation which will give us a wrong result.\r\n            if (isHorizontal) {\r\n                // Round the transforms since some browsers will\r\n                // blur the elements, for sub-pixel transforms.\r\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\r\n                adjustClientRect(sibling.clientRect, 0, offset);\r\n            }\r\n            else {\r\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\r\n                adjustClientRect(sibling.clientRect, offset, 0);\r\n            }\r\n        });\r\n        // Note that it's important that we do this after the client rects have been adjusted.\r\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\r\n        this._previousSwap.drag = siblingAtNewPosition.drag;\r\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\r\n    }\r\n    /**\r\n     * Checks whether the user's pointer is close to the edges of either the\r\n     * viewport or the drop list and starts the auto-scroll sequence.\r\n     * @param pointerX User's pointer position along the x axis.\r\n     * @param pointerY User's pointer position along the y axis.\r\n     */\r\n    _startScrollingIfNecessary(pointerX, pointerY) {\r\n        if (this.autoScrollDisabled) {\r\n            return;\r\n        }\r\n        let scrollNode;\r\n        let verticalScrollDirection = 0 /* NONE */;\r\n        let horizontalScrollDirection = 0 /* NONE */;\r\n        // Check whether we should start scrolling any of the parent containers.\r\n        this._parentPositions.positions.forEach((position, element) => {\r\n            // We have special handling for the `document` below. Also this would be\r\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\r\n            if (element === this._document || !position.clientRect || scrollNode) {\r\n                return;\r\n            }\r\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\r\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\r\n                if (verticalScrollDirection || horizontalScrollDirection) {\r\n                    scrollNode = element;\r\n                }\r\n            }\r\n        });\r\n        // Otherwise check if we can start scrolling the viewport.\r\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\r\n            const { width, height } = this._viewportRuler.getViewportSize();\r\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\r\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\r\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\r\n            scrollNode = window;\r\n        }\r\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\r\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\r\n            scrollNode !== this._scrollNode)) {\r\n            this._verticalScrollDirection = verticalScrollDirection;\r\n            this._horizontalScrollDirection = horizontalScrollDirection;\r\n            this._scrollNode = scrollNode;\r\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\r\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\r\n            }\r\n            else {\r\n                this._stopScrolling();\r\n            }\r\n        }\r\n    }\r\n    /** Stops any currently-running auto-scroll sequences. */\r\n    _stopScrolling() {\r\n        this._stopScrollTimers.next();\r\n    }\r\n    /** Starts the dragging sequence within the list. */\r\n    _draggingStarted() {\r\n        const styles = coerceElement(this.element).style;\r\n        this.beforeStarted.next();\r\n        this._isDragging = true;\r\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\r\n        // scrolling. The browser seems to round the value based on the snapping points which means\r\n        // that we can't increment/decrement the scroll position.\r\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\r\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\r\n        this._cacheItems();\r\n        this._viewportScrollSubscription.unsubscribe();\r\n        this._listenToScrollEvents();\r\n    }\r\n    /** Caches the positions of the configured scrollable parents. */\r\n    _cacheParentPositions() {\r\n        const element = coerceElement(this.element);\r\n        this._parentPositions.cache(this._scrollableElements);\r\n        // The list element is always in the `scrollableElements`\r\n        // so we can take advantage of the cached `ClientRect`.\r\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\r\n    }\r\n    /** Refreshes the position cache of the items and sibling containers. */\r\n    _cacheItemPositions() {\r\n        const isHorizontal = this._orientation === 'horizontal';\r\n        this._itemPositions = this._activeDraggables.map(drag => {\r\n            const elementToMeasure = drag.getVisibleElement();\r\n            return {\r\n                drag,\r\n                offset: 0,\r\n                initialTransform: elementToMeasure.style.transform || '',\r\n                clientRect: getMutableClientRect(elementToMeasure),\r\n            };\r\n        }).sort((a, b) => {\r\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\r\n                a.clientRect.top - b.clientRect.top;\r\n        });\r\n    }\r\n    /** Resets the container to its initial state. */\r\n    _reset() {\r\n        this._isDragging = false;\r\n        const styles = coerceElement(this.element).style;\r\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\r\n        // TODO(crisbeto): may have to wait for the animations to finish.\r\n        this._activeDraggables.forEach(item => {\r\n            var _a;\r\n            const rootElement = item.getRootElement();\r\n            if (rootElement) {\r\n                const initialTransform = (_a = this._itemPositions\r\n                    .find(current => current.drag === item)) === null || _a === void 0 ? void 0 : _a.initialTransform;\r\n                rootElement.style.transform = initialTransform || '';\r\n            }\r\n        });\r\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\r\n        this._activeDraggables = [];\r\n        this._itemPositions = [];\r\n        this._previousSwap.drag = null;\r\n        this._previousSwap.delta = 0;\r\n        this._previousSwap.overlaps = false;\r\n        this._stopScrolling();\r\n        this._viewportScrollSubscription.unsubscribe();\r\n        this._parentPositions.clear();\r\n    }\r\n    /**\r\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\r\n     * @param currentIndex Index of the item currently being dragged.\r\n     * @param siblings All of the items in the list.\r\n     * @param delta Direction in which the user is moving.\r\n     */\r\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\r\n        const isHorizontal = this._orientation === 'horizontal';\r\n        const currentPosition = siblings[currentIndex].clientRect;\r\n        const immediateSibling = siblings[currentIndex + delta * -1];\r\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\r\n        if (immediateSibling) {\r\n            const start = isHorizontal ? 'left' : 'top';\r\n            const end = isHorizontal ? 'right' : 'bottom';\r\n            // Get the spacing between the start of the current item and the end of the one immediately\r\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\r\n            // offset in order to push the element to where it will be when it's inline and is influenced\r\n            // by the `margin` of its siblings.\r\n            if (delta === -1) {\r\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\r\n            }\r\n            else {\r\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\r\n            }\r\n        }\r\n        return siblingOffset;\r\n    }\r\n    /**\r\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\r\n     * @param currentPosition Current position of the item.\r\n     * @param newPosition Position of the item where the current item should be moved.\r\n     * @param delta Direction in which the user is moving.\r\n     */\r\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\r\n        const isHorizontal = this._orientation === 'horizontal';\r\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\r\n            newPosition.top - currentPosition.top;\r\n        // Account for differences in the item width/height.\r\n        if (delta === -1) {\r\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\r\n                newPosition.height - currentPosition.height;\r\n        }\r\n        return itemOffset;\r\n    }\r\n    /**\r\n     * Checks if pointer is entering in the first position\r\n     * @param pointerX Position of the user's pointer along the X axis.\r\n     * @param pointerY Position of the user's pointer along the Y axis.\r\n     */\r\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\r\n        if (!this._activeDraggables.length) {\r\n            return false;\r\n        }\r\n        const itemPositions = this._itemPositions;\r\n        const isHorizontal = this._orientation === 'horizontal';\r\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\r\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\r\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\r\n        if (reversed) {\r\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\r\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\r\n        }\r\n        else {\r\n            const firstItemRect = itemPositions[0].clientRect;\r\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\r\n     * @param item Item that is being sorted.\r\n     * @param pointerX Position of the user's pointer along the X axis.\r\n     * @param pointerY Position of the user's pointer along the Y axis.\r\n     * @param delta Direction in which the user is moving their pointer.\r\n     */\r\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\r\n        const isHorizontal = this._orientation === 'horizontal';\r\n        const index = findIndex(this._itemPositions, ({ drag, clientRect }, _, array) => {\r\n            if (drag === item) {\r\n                // If there's only one item left in the container, it must be\r\n                // the dragged item itself so we use it as a reference.\r\n                return array.length < 2;\r\n            }\r\n            if (delta) {\r\n                const direction = isHorizontal ? delta.x : delta.y;\r\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\r\n                // the item after we made the swap, and they didn't change the direction in which they're\r\n                // dragging, we don't consider it a direction swap.\r\n                if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\r\n                    direction === this._previousSwap.delta) {\r\n                    return false;\r\n                }\r\n            }\r\n            return isHorizontal ?\r\n                // Round these down since most browsers report client rects with\r\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\r\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\r\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\r\n        });\r\n        return (index === -1 || !this.sortPredicate(index, item, this)) ? -1 : index;\r\n    }\r\n    /** Caches the current items in the list and their positions. */\r\n    _cacheItems() {\r\n        this._activeDraggables = this._draggables.slice();\r\n        this._cacheItemPositions();\r\n        this._cacheParentPositions();\r\n    }\r\n    /**\r\n     * Checks whether the user's pointer is positioned over the container.\r\n     * @param x Pointer position along the X axis.\r\n     * @param y Pointer position along the Y axis.\r\n     */\r\n    _isOverContainer(x, y) {\r\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\r\n    }\r\n    /**\r\n     * Figures out whether an item should be moved into a sibling\r\n     * drop container, based on its current position.\r\n     * @param item Drag item that is being moved.\r\n     * @param x Position of the item along the X axis.\r\n     * @param y Position of the item along the Y axis.\r\n     */\r\n    _getSiblingContainerFromPosition(item, x, y) {\r\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\r\n    }\r\n    /**\r\n     * Checks whether the drop list can receive the passed-in item.\r\n     * @param item Item that is being dragged into the list.\r\n     * @param x Position of the item along the X axis.\r\n     * @param y Position of the item along the Y axis.\r\n     */\r\n    _canReceive(item, x, y) {\r\n        if (!this._clientRect || !isInsideClientRect(this._clientRect, x, y) ||\r\n            !this.enterPredicate(item, this)) {\r\n            return false;\r\n        }\r\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\r\n        // If there's no element at the pointer position, then\r\n        // the client rect is probably scrolled out of the view.\r\n        if (!elementFromPoint) {\r\n            return false;\r\n        }\r\n        const nativeElement = coerceElement(this.element);\r\n        // The `ClientRect`, that we're using to find the container over which the user is\r\n        // hovering, doesn't give us any information on whether the element has been scrolled\r\n        // out of the view or whether it's overlapping with other containers. This means that\r\n        // we could end up transferring the item into a container that's invisible or is positioned\r\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\r\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\r\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\r\n    }\r\n    /**\r\n     * Called by one of the connected drop lists when a dragging sequence has started.\r\n     * @param sibling Sibling in which dragging has started.\r\n     */\r\n    _startReceiving(sibling, items) {\r\n        const activeSiblings = this._activeSiblings;\r\n        if (!activeSiblings.has(sibling) && items.every(item => {\r\n            // Note that we have to add an exception to the `enterPredicate` for items that started off\r\n            // in this drop list. The drag ref has logic that allows an item to return to its initial\r\n            // container, if it has left the initial container and none of the connected containers\r\n            // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\r\n            return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\r\n        })) {\r\n            activeSiblings.add(sibling);\r\n            this._cacheParentPositions();\r\n            this._listenToScrollEvents();\r\n        }\r\n    }\r\n    /**\r\n     * Called by a connected drop list when dragging has stopped.\r\n     * @param sibling Sibling whose dragging has stopped.\r\n     */\r\n    _stopReceiving(sibling) {\r\n        this._activeSiblings.delete(sibling);\r\n        this._viewportScrollSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Starts listening to scroll events on the viewport.\r\n     * Used for updating the internal state of the list.\r\n     */\r\n    _listenToScrollEvents() {\r\n        this._viewportScrollSubscription = this._dragDropRegistry\r\n            .scrolled(this._getShadowRoot())\r\n            .subscribe(event => {\r\n            if (this.isDragging()) {\r\n                const scrollDifference = this._parentPositions.handleScroll(event);\r\n                if (scrollDifference) {\r\n                    // Since we know the amount that the user has scrolled we can shift all of the\r\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\r\n                    // we can avoid inconsistent behavior where we might be measuring the element before\r\n                    // its position has changed.\r\n                    this._itemPositions.forEach(({ clientRect }) => {\r\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\r\n                    });\r\n                    // We need two loops for this, because we want all of the cached\r\n                    // positions to be up-to-date before we re-sort the item.\r\n                    this._itemPositions.forEach(({ drag }) => {\r\n                        if (this._dragDropRegistry.isDragging(drag)) {\r\n                            // We need to re-sort the item manually, because the pointer move\r\n                            // events won't be dispatched while the user is scrolling.\r\n                            drag._sortFromLastPointerPosition();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else if (this.isReceiving()) {\r\n                this._cacheParentPositions();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\r\n     * than saving it in property directly on init, because we want to resolve it as late as possible\r\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\r\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\r\n     */\r\n    _getShadowRoot() {\r\n        if (!this._cachedShadowRoot) {\r\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\r\n            this._cachedShadowRoot = shadowRoot || this._document;\r\n        }\r\n        return this._cachedShadowRoot;\r\n    }\r\n    /** Notifies any siblings that may potentially receive the item. */\r\n    _notifyReceivingSiblings() {\r\n        const draggedItems = this._activeDraggables.filter(item => item.isDragging());\r\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\r\n    }\r\n}\r\n/**\r\n * Finds the index of an item that matches a predicate function. Used as an equivalent\r\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\r\n * @param array Array in which to look for matches.\r\n * @param predicate Function used to determine whether an item is a match.\r\n */\r\nfunction findIndex(array, predicate) {\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (predicate(array[i], i, array)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Increments the vertical scroll position of a node.\r\n * @param node Node whose scroll position should change.\r\n * @param amount Amount of pixels that the `node` should be scrolled.\r\n */\r\nfunction incrementVerticalScroll(node, amount) {\r\n    if (node === window) {\r\n        node.scrollBy(0, amount);\r\n    }\r\n    else {\r\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\r\n        node.scrollTop += amount;\r\n    }\r\n}\r\n/**\r\n * Increments the horizontal scroll position of a node.\r\n * @param node Node whose scroll position should change.\r\n * @param amount Amount of pixels that the `node` should be scrolled.\r\n */\r\nfunction incrementHorizontalScroll(node, amount) {\r\n    if (node === window) {\r\n        node.scrollBy(amount, 0);\r\n    }\r\n    else {\r\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\r\n        node.scrollLeft += amount;\r\n    }\r\n}\r\n/**\r\n * Gets whether the vertical auto-scroll direction of a node.\r\n * @param clientRect Dimensions of the node.\r\n * @param pointerY Position of the user's pointer along the y axis.\r\n */\r\nfunction getVerticalScrollDirection(clientRect, pointerY) {\r\n    const { top, bottom, height } = clientRect;\r\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\r\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\r\n        return 1 /* UP */;\r\n    }\r\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\r\n        return 2 /* DOWN */;\r\n    }\r\n    return 0 /* NONE */;\r\n}\r\n/**\r\n * Gets whether the horizontal auto-scroll direction of a node.\r\n * @param clientRect Dimensions of the node.\r\n * @param pointerX Position of the user's pointer along the x axis.\r\n */\r\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\r\n    const { left, right, width } = clientRect;\r\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\r\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\r\n        return 1 /* LEFT */;\r\n    }\r\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\r\n        return 2 /* RIGHT */;\r\n    }\r\n    return 0 /* NONE */;\r\n}\r\n/**\r\n * Gets the directions in which an element node should be scrolled,\r\n * assuming that the user's pointer is already within it scrollable region.\r\n * @param element Element for which we should calculate the scroll direction.\r\n * @param clientRect Bounding client rectangle of the element.\r\n * @param pointerX Position of the user's pointer along the x axis.\r\n * @param pointerY Position of the user's pointer along the y axis.\r\n */\r\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\r\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\r\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\r\n    let verticalScrollDirection = 0 /* NONE */;\r\n    let horizontalScrollDirection = 0 /* NONE */;\r\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\r\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\r\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\r\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\r\n    if (computedVertical) {\r\n        const scrollTop = element.scrollTop;\r\n        if (computedVertical === 1 /* UP */) {\r\n            if (scrollTop > 0) {\r\n                verticalScrollDirection = 1 /* UP */;\r\n            }\r\n        }\r\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\r\n            verticalScrollDirection = 2 /* DOWN */;\r\n        }\r\n    }\r\n    if (computedHorizontal) {\r\n        const scrollLeft = element.scrollLeft;\r\n        if (computedHorizontal === 1 /* LEFT */) {\r\n            if (scrollLeft > 0) {\r\n                horizontalScrollDirection = 1 /* LEFT */;\r\n            }\r\n        }\r\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\r\n            horizontalScrollDirection = 2 /* RIGHT */;\r\n        }\r\n    }\r\n    return [verticalScrollDirection, horizontalScrollDirection];\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Event options that can be used to bind an active, capturing event. */\r\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\r\n    passive: false,\r\n    capture: true\r\n});\r\n/**\r\n * Service that keeps track of all the drag item and drop container\r\n * instances, and manages global event listeners on the `document`.\r\n * @docs-private\r\n */\r\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\r\n// to avoid circular imports. If we were to reference them here, importing the registry into the\r\n// classes that are registering themselves will introduce a circular import.\r\nclass DragDropRegistry {\r\n    constructor(_ngZone, _document) {\r\n        this._ngZone = _ngZone;\r\n        /** Registered drop container instances. */\r\n        this._dropInstances = new Set();\r\n        /** Registered drag item instances. */\r\n        this._dragInstances = new Set();\r\n        /** Drag item instances that are currently being dragged. */\r\n        this._activeDragInstances = [];\r\n        /** Keeps track of the event listeners that we've bound to the `document`. */\r\n        this._globalListeners = new Map();\r\n        /**\r\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\r\n         * because it'll be called a lot and we don't want to create a new function every time.\r\n         */\r\n        this._draggingPredicate = (item) => item.isDragging();\r\n        /**\r\n         * Emits the `touchmove` or `mousemove` events that are dispatched\r\n         * while the user is dragging a drag item instance.\r\n         */\r\n        this.pointerMove = new Subject();\r\n        /**\r\n         * Emits the `touchend` or `mouseup` events that are dispatched\r\n         * while the user is dragging a drag item instance.\r\n         */\r\n        this.pointerUp = new Subject();\r\n        /**\r\n         * Emits when the viewport has been scrolled while the user is dragging an item.\r\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\r\n         * @breaking-change 13.0.0\r\n         */\r\n        this.scroll = new Subject();\r\n        /**\r\n         * Event listener that will prevent the default browser action while the user is dragging.\r\n         * @param event Event whose default action should be prevented.\r\n         */\r\n        this._preventDefaultWhileDragging = (event) => {\r\n            if (this._activeDragInstances.length > 0) {\r\n                event.preventDefault();\r\n            }\r\n        };\r\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\r\n        this._persistentTouchmoveListener = (event) => {\r\n            if (this._activeDragInstances.length > 0) {\r\n                // Note that we only want to prevent the default action after dragging has actually started.\r\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\r\n                // but it could be pushed back if the user has set up a drag delay or threshold.\r\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\r\n                    event.preventDefault();\r\n                }\r\n                this.pointerMove.next(event);\r\n            }\r\n        };\r\n        this._document = _document;\r\n    }\r\n    /** Adds a drop container to the registry. */\r\n    registerDropContainer(drop) {\r\n        if (!this._dropInstances.has(drop)) {\r\n            this._dropInstances.add(drop);\r\n        }\r\n    }\r\n    /** Adds a drag item instance to the registry. */\r\n    registerDragItem(drag) {\r\n        this._dragInstances.add(drag);\r\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\r\n        // won't preventDefault on a dynamically-added `touchmove` listener.\r\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\r\n        if (this._dragInstances.size === 1) {\r\n            this._ngZone.runOutsideAngular(() => {\r\n                // The event handler has to be explicitly active,\r\n                // because newer browsers make it passive by default.\r\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\r\n            });\r\n        }\r\n    }\r\n    /** Removes a drop container from the registry. */\r\n    removeDropContainer(drop) {\r\n        this._dropInstances.delete(drop);\r\n    }\r\n    /** Removes a drag item instance from the registry. */\r\n    removeDragItem(drag) {\r\n        this._dragInstances.delete(drag);\r\n        this.stopDragging(drag);\r\n        if (this._dragInstances.size === 0) {\r\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\r\n        }\r\n    }\r\n    /**\r\n     * Starts the dragging sequence for a drag instance.\r\n     * @param drag Drag instance which is being dragged.\r\n     * @param event Event that initiated the dragging.\r\n     */\r\n    startDragging(drag, event) {\r\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\r\n        if (this._activeDragInstances.indexOf(drag) > -1) {\r\n            return;\r\n        }\r\n        this._activeDragInstances.push(drag);\r\n        if (this._activeDragInstances.length === 1) {\r\n            const isTouchEvent = event.type.startsWith('touch');\r\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\r\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\r\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\r\n            this._globalListeners\r\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\r\n                handler: (e) => this.pointerUp.next(e),\r\n                options: true\r\n            })\r\n                .set('scroll', {\r\n                handler: (e) => this.scroll.next(e),\r\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\r\n                // the document. See https://github.com/angular/components/issues/17144.\r\n                options: true\r\n            })\r\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\r\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\r\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\r\n                // recalculation which can be expensive on pages with a lot of elements.\r\n                .set('selectstart', {\r\n                handler: this._preventDefaultWhileDragging,\r\n                options: activeCapturingEventOptions\r\n            });\r\n            // We don't have to bind a move event for touch drag sequences, because\r\n            // we already have a persistent global one bound from `registerDragItem`.\r\n            if (!isTouchEvent) {\r\n                this._globalListeners.set('mousemove', {\r\n                    handler: (e) => this.pointerMove.next(e),\r\n                    options: activeCapturingEventOptions\r\n                });\r\n            }\r\n            this._ngZone.runOutsideAngular(() => {\r\n                this._globalListeners.forEach((config, name) => {\r\n                    this._document.addEventListener(name, config.handler, config.options);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    /** Stops dragging a drag item instance. */\r\n    stopDragging(drag) {\r\n        const index = this._activeDragInstances.indexOf(drag);\r\n        if (index > -1) {\r\n            this._activeDragInstances.splice(index, 1);\r\n            if (this._activeDragInstances.length === 0) {\r\n                this._clearGlobalListeners();\r\n            }\r\n        }\r\n    }\r\n    /** Gets whether a drag item instance is currently being dragged. */\r\n    isDragging(drag) {\r\n        return this._activeDragInstances.indexOf(drag) > -1;\r\n    }\r\n    /**\r\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\r\n     * dragged.\r\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\r\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\r\n     *   be used to include an additional top-level listener at the shadow root level.\r\n     */\r\n    scrolled(shadowRoot) {\r\n        const streams = [this.scroll];\r\n        if (shadowRoot && shadowRoot !== this._document) {\r\n            // Note that this is basically the same as `fromEvent` from rjxs, but we do it ourselves,\r\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\r\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\r\n            streams.push(new Observable((observer) => {\r\n                return this._ngZone.runOutsideAngular(() => {\r\n                    const eventOptions = true;\r\n                    const callback = (event) => {\r\n                        if (this._activeDragInstances.length) {\r\n                            observer.next(event);\r\n                        }\r\n                    };\r\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\r\n                    return () => {\r\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\r\n                    };\r\n                });\r\n            }));\r\n        }\r\n        return merge(...streams);\r\n    }\r\n    ngOnDestroy() {\r\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\r\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\r\n        this._clearGlobalListeners();\r\n        this.pointerMove.complete();\r\n        this.pointerUp.complete();\r\n    }\r\n    /** Clears out the global event listeners from the `document`. */\r\n    _clearGlobalListeners() {\r\n        this._globalListeners.forEach((config, name) => {\r\n            this._document.removeEventListener(name, config.handler, config.options);\r\n        });\r\n        this._globalListeners.clear();\r\n    }\r\n}\r\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\r\nDragDropRegistry.ɵprov = i0.ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\r\nDragDropRegistry.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Default configuration to be used when creating a `DragRef`. */\r\nconst DEFAULT_CONFIG = {\r\n    dragStartThreshold: 5,\r\n    pointerDirectionChangeThreshold: 5\r\n};\r\n/**\r\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\r\n */\r\nclass DragDrop {\r\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\r\n        this._document = _document;\r\n        this._ngZone = _ngZone;\r\n        this._viewportRuler = _viewportRuler;\r\n        this._dragDropRegistry = _dragDropRegistry;\r\n    }\r\n    /**\r\n     * Turns an element into a draggable item.\r\n     * @param element Element to which to attach the dragging functionality.\r\n     * @param config Object used to configure the dragging behavior.\r\n     */\r\n    createDrag(element, config = DEFAULT_CONFIG) {\r\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\r\n    }\r\n    /**\r\n     * Turns an element into a drop list.\r\n     * @param element Element to which to attach the drop list functionality.\r\n     */\r\n    createDropList(element) {\r\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\r\n    }\r\n}\r\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\r\nDragDrop.ɵprov = i0.ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(i0.ɵɵinject(i1.DOCUMENT), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i2.ViewportRuler), i0.ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\r\nDragDrop.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: NgZone },\r\n    { type: ViewportRuler },\r\n    { type: DragDropRegistry }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDrop, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\r\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\r\n * to avoid circular imports.\r\n * @docs-private\r\n */\r\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\r\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\r\n/**\r\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\r\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\r\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\r\n * from `cdkDropList`.\r\n */\r\nclass CdkDropListGroup {\r\n    constructor() {\r\n        /** Drop lists registered inside the group. */\r\n        this._items = new Set();\r\n        this._disabled = false;\r\n    }\r\n    /** Whether starting a dragging sequence from inside this group is disabled. */\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n    }\r\n    ngOnDestroy() {\r\n        this._items.clear();\r\n    }\r\n}\r\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\r\nCdkDropListGroup.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }])] });\r\nCdkDropListGroup.propDecorators = {\r\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkDropListGroup]',\r\n                exportAs: 'cdkDropListGroup',\r\n                providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }]\r\n            }]\r\n    }], function () { return []; }, { disabled: [{\r\n            type: Input,\r\n            args: ['cdkDropListGroupDisabled']\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token that can be used to configure the\r\n * behavior of the drag&drop-related components.\r\n */\r\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Asserts that a particular node is an element.\r\n * @param node Node to be checked.\r\n * @param name Name to attach to the error message.\r\n */\r\nfunction assertElementNode(node, name) {\r\n    if (node.nodeType !== 1) {\r\n        throw Error(`${name} must be attached to an element node. ` +\r\n            `Currently attached to \"${node.nodeName}\".`);\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Counter used to generate unique ids for drop zones. */\r\nlet _uniqueIdCounter = 0;\r\n/**\r\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\r\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\r\nconst ɵ0 = undefined;\r\n/** Container that wraps a set of draggable items. */\r\nclass CdkDropList {\r\n    constructor(\r\n    /** Element that the drop list is attached to. */\r\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\r\n        this.element = element;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._scrollDispatcher = _scrollDispatcher;\r\n        this._dir = _dir;\r\n        this._group = _group;\r\n        /** Emits when the list has been destroyed. */\r\n        this._destroyed = new Subject();\r\n        /**\r\n         * Other draggable containers that this container is connected to and into which the\r\n         * container's items can be transferred. Can either be references to other drop containers,\r\n         * or their unique IDs.\r\n         */\r\n        this.connectedTo = [];\r\n        /**\r\n         * Unique ID for the drop zone. Can be used as a reference\r\n         * in the `connectedTo` of another `CdkDropList`.\r\n         */\r\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\r\n        /**\r\n         * Function that is used to determine whether an item\r\n         * is allowed to be moved into a drop container.\r\n         */\r\n        this.enterPredicate = () => true;\r\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\r\n        this.sortPredicate = () => true;\r\n        /** Emits when the user drops an item inside the container. */\r\n        this.dropped = new EventEmitter();\r\n        /**\r\n         * Emits when the user has moved a new drag item into this container.\r\n         */\r\n        this.entered = new EventEmitter();\r\n        /**\r\n         * Emits when the user removes an item from the container\r\n         * by dragging it into another container.\r\n         */\r\n        this.exited = new EventEmitter();\r\n        /** Emits as the user is swapping items while actively dragging. */\r\n        this.sorted = new EventEmitter();\r\n        /**\r\n         * Keeps track of the items that are registered with this container. Historically we used to\r\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\r\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\r\n         * correctly. What we do instead is to have the items register themselves with the container\r\n         * and then we sort them based on their position in the DOM.\r\n         */\r\n        this._unsortedItems = new Set();\r\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\r\n            assertElementNode(element.nativeElement, 'cdkDropList');\r\n        }\r\n        this._dropListRef = dragDrop.createDropList(element);\r\n        this._dropListRef.data = this;\r\n        if (config) {\r\n            this._assignDefaults(config);\r\n        }\r\n        this._dropListRef.enterPredicate = (drag, drop) => {\r\n            return this.enterPredicate(drag.data, drop.data);\r\n        };\r\n        this._dropListRef.sortPredicate =\r\n            (index, drag, drop) => {\r\n                return this.sortPredicate(index, drag.data, drop.data);\r\n            };\r\n        this._setupInputSyncSubscription(this._dropListRef);\r\n        this._handleEvents(this._dropListRef);\r\n        CdkDropList._dropLists.push(this);\r\n        if (_group) {\r\n            _group._items.add(this);\r\n        }\r\n    }\r\n    /** Whether starting a dragging sequence from this container is disabled. */\r\n    get disabled() {\r\n        return this._disabled || (!!this._group && this._group.disabled);\r\n    }\r\n    set disabled(value) {\r\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\r\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\r\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\r\n        // the user in a disabled state, so we also need to sync it as it's being set.\r\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\r\n    }\r\n    /** Registers an items with the drop list. */\r\n    addItem(item) {\r\n        this._unsortedItems.add(item);\r\n        if (this._dropListRef.isDragging()) {\r\n            this._syncItemsWithRef();\r\n        }\r\n    }\r\n    /** Removes an item from the drop list. */\r\n    removeItem(item) {\r\n        this._unsortedItems.delete(item);\r\n        if (this._dropListRef.isDragging()) {\r\n            this._syncItemsWithRef();\r\n        }\r\n    }\r\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\r\n    getSortedItems() {\r\n        return Array.from(this._unsortedItems).sort((a, b) => {\r\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\r\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\r\n            // tslint:disable-next-line:no-bitwise\r\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        const index = CdkDropList._dropLists.indexOf(this);\r\n        if (index > -1) {\r\n            CdkDropList._dropLists.splice(index, 1);\r\n        }\r\n        if (this._group) {\r\n            this._group._items.delete(this);\r\n        }\r\n        this._unsortedItems.clear();\r\n        this._dropListRef.dispose();\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\r\n    _setupInputSyncSubscription(ref) {\r\n        if (this._dir) {\r\n            this._dir.change\r\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\r\n                .subscribe(value => ref.withDirection(value));\r\n        }\r\n        ref.beforeStarted.subscribe(() => {\r\n            const siblings = coerceArray(this.connectedTo).map(drop => {\r\n                if (typeof drop === 'string') {\r\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\r\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\r\n                    }\r\n                    return correspondingDropList;\r\n                }\r\n                return drop;\r\n            });\r\n            if (this._group) {\r\n                this._group._items.forEach(drop => {\r\n                    if (siblings.indexOf(drop) === -1) {\r\n                        siblings.push(drop);\r\n                    }\r\n                });\r\n            }\r\n            // Note that we resolve the scrollable parents here so that we delay the resolution\r\n            // as long as possible, ensuring that the element is in its final place in the DOM.\r\n            if (!this._scrollableParentsResolved) {\r\n                const scrollableParents = this._scrollDispatcher\r\n                    .getAncestorScrollContainers(this.element)\r\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\r\n                this._dropListRef.withScrollableParents(scrollableParents);\r\n                // Only do this once since it involves traversing the DOM and the parents\r\n                // shouldn't be able to change without the drop list being destroyed.\r\n                this._scrollableParentsResolved = true;\r\n            }\r\n            ref.disabled = this.disabled;\r\n            ref.lockAxis = this.lockAxis;\r\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\r\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\r\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\r\n            ref\r\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\r\n                .withOrientation(this.orientation);\r\n        });\r\n    }\r\n    /** Handles events from the underlying DropListRef. */\r\n    _handleEvents(ref) {\r\n        ref.beforeStarted.subscribe(() => {\r\n            this._syncItemsWithRef();\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n        ref.entered.subscribe(event => {\r\n            this.entered.emit({\r\n                container: this,\r\n                item: event.item.data,\r\n                currentIndex: event.currentIndex\r\n            });\r\n        });\r\n        ref.exited.subscribe(event => {\r\n            this.exited.emit({\r\n                container: this,\r\n                item: event.item.data\r\n            });\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n        ref.sorted.subscribe(event => {\r\n            this.sorted.emit({\r\n                previousIndex: event.previousIndex,\r\n                currentIndex: event.currentIndex,\r\n                container: this,\r\n                item: event.item.data\r\n            });\r\n        });\r\n        ref.dropped.subscribe(event => {\r\n            this.dropped.emit({\r\n                previousIndex: event.previousIndex,\r\n                currentIndex: event.currentIndex,\r\n                previousContainer: event.previousContainer.data,\r\n                container: event.container.data,\r\n                item: event.item.data,\r\n                isPointerOverContainer: event.isPointerOverContainer,\r\n                distance: event.distance,\r\n                dropPoint: event.dropPoint\r\n            });\r\n            // Mark for check since all of these events run outside of change\r\n            // detection and we're not guaranteed for something else to have triggered it.\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n    /** Assigns the default input values based on a provided config object. */\r\n    _assignDefaults(config) {\r\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\r\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\r\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\r\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\r\n        this.orientation = listOrientation || 'vertical';\r\n        if (lockAxis) {\r\n            this.lockAxis = lockAxis;\r\n        }\r\n    }\r\n    /** Syncs up the registered drag items with underlying drop list ref. */\r\n    _syncItemsWithRef() {\r\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\r\n    }\r\n}\r\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST_GROUP, 12), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\r\nCdkDropList.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\r\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\r\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\r\n            // Prevent child drop lists from picking up the same group as their parent.\r\n            { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\r\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\r\n        ])] });\r\n/** Keeps track of the drop lists that are currently on the page. */\r\nCdkDropList._dropLists = [];\r\nCdkDropList.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: DragDrop },\r\n    { type: ChangeDetectorRef },\r\n    { type: ScrollDispatcher },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DROP_LIST_GROUP,] }, { type: SkipSelf }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\r\n];\r\nCdkDropList.propDecorators = {\r\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\r\n    data: [{ type: Input, args: ['cdkDropListData',] }],\r\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\r\n    id: [{ type: Input }],\r\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\r\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\r\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\r\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\r\n    sortPredicate: [{ type: Input, args: ['cdkDropListSortPredicate',] }],\r\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\r\n    autoScrollStep: [{ type: Input, args: ['cdkDropListAutoScrollStep',] }],\r\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\r\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\r\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\r\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkDropList], cdk-drop-list',\r\n                exportAs: 'cdkDropList',\r\n                providers: [\r\n                    // Prevent child drop lists from picking up the same group as their parent.\r\n                    { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\r\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\r\n                ],\r\n                host: {\r\n                    'class': 'cdk-drop-list',\r\n                    '[attr.id]': 'id',\r\n                    '[class.cdk-drop-list-disabled]': 'disabled',\r\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\r\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc2.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: CdkDropListGroup, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [CDK_DROP_LIST_GROUP]\r\n            }, {\r\n                type: SkipSelf\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [CDK_DRAG_CONFIG]\r\n            }] }]; }, { connectedTo: [{\r\n            type: Input,\r\n            args: ['cdkDropListConnectedTo']\r\n        }], id: [{\r\n            type: Input\r\n        }], enterPredicate: [{\r\n            type: Input,\r\n            args: ['cdkDropListEnterPredicate']\r\n        }], sortPredicate: [{\r\n            type: Input,\r\n            args: ['cdkDropListSortPredicate']\r\n        }], dropped: [{\r\n            type: Output,\r\n            args: ['cdkDropListDropped']\r\n        }], entered: [{\r\n            type: Output,\r\n            args: ['cdkDropListEntered']\r\n        }], exited: [{\r\n            type: Output,\r\n            args: ['cdkDropListExited']\r\n        }], sorted: [{\r\n            type: Output,\r\n            args: ['cdkDropListSorted']\r\n        }], disabled: [{\r\n            type: Input,\r\n            args: ['cdkDropListDisabled']\r\n        }], sortingDisabled: [{\r\n            type: Input,\r\n            args: ['cdkDropListSortingDisabled']\r\n        }], autoScrollDisabled: [{\r\n            type: Input,\r\n            args: ['cdkDropListAutoScrollDisabled']\r\n        }], orientation: [{\r\n            type: Input,\r\n            args: ['cdkDropListOrientation']\r\n        }], lockAxis: [{\r\n            type: Input,\r\n            args: ['cdkDropListLockAxis']\r\n        }], data: [{\r\n            type: Input,\r\n            args: ['cdkDropListData']\r\n        }], autoScrollStep: [{\r\n            type: Input,\r\n            args: ['cdkDropListAutoScrollStep']\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\r\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\r\n/** Handle that can be used to drag a CdkDrag instance. */\r\nclass CdkDragHandle {\r\n    constructor(element, parentDrag) {\r\n        this.element = element;\r\n        /** Emits when the state of the handle has changed. */\r\n        this._stateChanges = new Subject();\r\n        this._disabled = false;\r\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\r\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\r\n        }\r\n        this._parentDrag = parentDrag;\r\n    }\r\n    /** Whether starting to drag through this handle is disabled. */\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        this._stateChanges.next(this);\r\n    }\r\n    ngOnDestroy() {\r\n        this._stateChanges.complete();\r\n    }\r\n}\r\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12)); };\r\nCdkDragHandle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }])] });\r\nCdkDragHandle.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }, { type: SkipSelf }] }\r\n];\r\nCdkDragHandle.propDecorators = {\r\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkDragHandle]',\r\n                host: {\r\n                    'class': 'cdk-drag-handle'\r\n                },\r\n                providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_DRAG_PARENT]\r\n            }, {\r\n                type: Optional\r\n            }, {\r\n                type: SkipSelf\r\n            }] }]; }, { disabled: [{\r\n            type: Input,\r\n            args: ['cdkDragHandleDisabled']\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\r\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\r\n/**\r\n * Element that will be used as a template for the placeholder of a CdkDrag when\r\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\r\n */\r\nclass CdkDragPlaceholder {\r\n    constructor(templateRef) {\r\n        this.templateRef = templateRef;\r\n    }\r\n}\r\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkDragPlaceholder.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }])] });\r\nCdkDragPlaceholder.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\nCdkDragPlaceholder.propDecorators = {\r\n    data: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[cdkDragPlaceholder]',\r\n                providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\r\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\r\n/**\r\n * Element that will be used as a template for the preview\r\n * of a CdkDrag when it is being dragged.\r\n */\r\nclass CdkDragPreview {\r\n    constructor(templateRef) {\r\n        this.templateRef = templateRef;\r\n        this._matchSize = false;\r\n    }\r\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\r\n    get matchSize() { return this._matchSize; }\r\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\r\n}\r\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkDragPreview.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }])] });\r\nCdkDragPreview.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\nCdkDragPreview.propDecorators = {\r\n    data: [{ type: Input }],\r\n    matchSize: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[cdkDragPreview]',\r\n                providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\r\n            type: Input\r\n        }], data: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst DRAG_HOST_CLASS = 'cdk-drag';\r\n/** Element that can be moved inside a CdkDropList container. */\r\nclass CdkDrag {\r\n    constructor(\r\n    /** Element that the draggable is attached to. */\r\n    element, \r\n    /** Droppable container that the draggable is a part of. */\r\n    dropContainer, \r\n    /**\r\n     * @deprecated `_document` parameter no longer being used and will be removed.\r\n     * @breaking-change 12.0.0\r\n     */\r\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\r\n        this.element = element;\r\n        this.dropContainer = dropContainer;\r\n        this._ngZone = _ngZone;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._dir = _dir;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._selfHandle = _selfHandle;\r\n        this._parentDrag = _parentDrag;\r\n        this._destroyed = new Subject();\r\n        /** Emits when the user starts dragging the item. */\r\n        this.started = new EventEmitter();\r\n        /** Emits when the user has released a drag item, before any animations have started. */\r\n        this.released = new EventEmitter();\r\n        /** Emits when the user stops dragging an item in the container. */\r\n        this.ended = new EventEmitter();\r\n        /** Emits when the user has moved the item into a new container. */\r\n        this.entered = new EventEmitter();\r\n        /** Emits when the user removes the item its container by dragging it into another container. */\r\n        this.exited = new EventEmitter();\r\n        /** Emits when the user drops the item inside a container. */\r\n        this.dropped = new EventEmitter();\r\n        /**\r\n         * Emits as the user is dragging the item. Use with caution,\r\n         * because this event will fire for every pixel that the user has dragged.\r\n         */\r\n        this.moved = new Observable((observer) => {\r\n            const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\r\n                source: this,\r\n                pointerPosition: movedEvent.pointerPosition,\r\n                event: movedEvent.event,\r\n                delta: movedEvent.delta,\r\n                distance: movedEvent.distance\r\n            }))).subscribe(observer);\r\n            return () => {\r\n                subscription.unsubscribe();\r\n            };\r\n        });\r\n        this._dragRef = dragDrop.createDrag(element, {\r\n            dragStartThreshold: config && config.dragStartThreshold != null ?\r\n                config.dragStartThreshold : 5,\r\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\r\n                config.pointerDirectionChangeThreshold : 5,\r\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex,\r\n        });\r\n        this._dragRef.data = this;\r\n        // We have to keep track of the drag instances in order to be able to match an element to\r\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\r\n        // element could be different.\r\n        CdkDrag._dragInstances.push(this);\r\n        if (config) {\r\n            this._assignDefaults(config);\r\n        }\r\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\r\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\r\n        // where there are no items on the first change detection pass, but the items get picked up as\r\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\r\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\r\n        // is too late since the two modes save different kinds of information. We work around it by\r\n        // assigning the drop container both from here and the list.\r\n        if (dropContainer) {\r\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\r\n            dropContainer.addItem(this);\r\n        }\r\n        this._syncInputs(this._dragRef);\r\n        this._handleEvents(this._dragRef);\r\n    }\r\n    /** Whether starting to drag this element is disabled. */\r\n    get disabled() {\r\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        this._dragRef.disabled = this._disabled;\r\n    }\r\n    /**\r\n     * Returns the element that is being used as a placeholder\r\n     * while the current element is being dragged.\r\n     */\r\n    getPlaceholderElement() {\r\n        return this._dragRef.getPlaceholderElement();\r\n    }\r\n    /** Returns the root draggable element. */\r\n    getRootElement() {\r\n        return this._dragRef.getRootElement();\r\n    }\r\n    /** Resets a standalone drag item to its initial position. */\r\n    reset() {\r\n        this._dragRef.reset();\r\n    }\r\n    /**\r\n     * Gets the pixel coordinates of the draggable outside of a drop container.\r\n     */\r\n    getFreeDragPosition() {\r\n        return this._dragRef.getFreeDragPosition();\r\n    }\r\n    ngAfterViewInit() {\r\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\r\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\r\n        this._ngZone.runOutsideAngular(() => {\r\n            // We need to wait for the zone to stabilize, in order for the reference\r\n            // element to be in the proper place in the DOM. This is mostly relevant\r\n            // for draggable elements inside portals since they get stamped out in\r\n            // their original DOM position and then they get transferred to the portal.\r\n            this._ngZone.onStable\r\n                .pipe(take(1), takeUntil(this._destroyed))\r\n                .subscribe(() => {\r\n                this._updateRootElement();\r\n                this._setupHandlesListener();\r\n                if (this.freeDragPosition) {\r\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        const rootSelectorChange = changes['rootElementSelector'];\r\n        const positionChange = changes['freeDragPosition'];\r\n        // We don't have to react to the first change since it's being\r\n        // handled in `ngAfterViewInit` where it needs to be deferred.\r\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\r\n            this._updateRootElement();\r\n        }\r\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\r\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\r\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.dropContainer) {\r\n            this.dropContainer.removeItem(this);\r\n        }\r\n        const index = CdkDrag._dragInstances.indexOf(this);\r\n        if (index > -1) {\r\n            CdkDrag._dragInstances.splice(index, 1);\r\n        }\r\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\r\n        this._ngZone.runOutsideAngular(() => {\r\n            this._destroyed.next();\r\n            this._destroyed.complete();\r\n            this._dragRef.dispose();\r\n        });\r\n    }\r\n    /** Syncs the root element with the `DragRef`. */\r\n    _updateRootElement() {\r\n        const element = this.element.nativeElement;\r\n        const rootElement = this.rootElementSelector ?\r\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\r\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            assertElementNode(rootElement, 'cdkDrag');\r\n        }\r\n        this._dragRef.withRootElement(rootElement || element);\r\n    }\r\n    /** Gets the boundary element, based on the `boundaryElement` value. */\r\n    _getBoundaryElement() {\r\n        const boundary = this.boundaryElement;\r\n        if (!boundary) {\r\n            return null;\r\n        }\r\n        if (typeof boundary === 'string') {\r\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\r\n        }\r\n        const element = coerceElement(boundary);\r\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\r\n            !element.contains(this.element.nativeElement)) {\r\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\r\n        }\r\n        return element;\r\n    }\r\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\r\n    _syncInputs(ref) {\r\n        ref.beforeStarted.subscribe(() => {\r\n            if (!ref.isDragging()) {\r\n                const dir = this._dir;\r\n                const dragStartDelay = this.dragStartDelay;\r\n                const placeholder = this._placeholderTemplate ? {\r\n                    template: this._placeholderTemplate.templateRef,\r\n                    context: this._placeholderTemplate.data,\r\n                    viewContainer: this._viewContainerRef\r\n                } : null;\r\n                const preview = this._previewTemplate ? {\r\n                    template: this._previewTemplate.templateRef,\r\n                    context: this._previewTemplate.data,\r\n                    matchSize: this._previewTemplate.matchSize,\r\n                    viewContainer: this._viewContainerRef\r\n                } : null;\r\n                ref.disabled = this.disabled;\r\n                ref.lockAxis = this.lockAxis;\r\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\r\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\r\n                ref.constrainPosition = this.constrainPosition;\r\n                ref.previewClass = this.previewClass;\r\n                ref\r\n                    .withBoundaryElement(this._getBoundaryElement())\r\n                    .withPlaceholderTemplate(placeholder)\r\n                    .withPreviewTemplate(preview)\r\n                    .withPreviewContainer(this.previewContainer || 'global');\r\n                if (dir) {\r\n                    ref.withDirection(dir.value);\r\n                }\r\n            }\r\n        });\r\n        // This only needs to be resolved once.\r\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\r\n            var _a, _b;\r\n            // If we managed to resolve a parent through DI, use it.\r\n            if (this._parentDrag) {\r\n                ref.withParent(this._parentDrag._dragRef);\r\n                return;\r\n            }\r\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\r\n            // the item was projected into another item by something like `ngTemplateOutlet`.\r\n            let parent = this.element.nativeElement.parentElement;\r\n            while (parent) {\r\n                // `classList` needs to be null checked, because IE doesn't have it on some elements.\r\n                if ((_a = parent.classList) === null || _a === void 0 ? void 0 : _a.contains(DRAG_HOST_CLASS)) {\r\n                    ref.withParent(((_b = CdkDrag._dragInstances.find(drag => {\r\n                        return drag.element.nativeElement === parent;\r\n                    })) === null || _b === void 0 ? void 0 : _b._dragRef) || null);\r\n                    break;\r\n                }\r\n                parent = parent.parentElement;\r\n            }\r\n        });\r\n    }\r\n    /** Handles the events from the underlying `DragRef`. */\r\n    _handleEvents(ref) {\r\n        ref.started.subscribe(() => {\r\n            this.started.emit({ source: this });\r\n            // Since all of these events run outside of change detection,\r\n            // we need to ensure that everything is marked correctly.\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n        ref.released.subscribe(() => {\r\n            this.released.emit({ source: this });\r\n        });\r\n        ref.ended.subscribe(event => {\r\n            this.ended.emit({\r\n                source: this,\r\n                distance: event.distance,\r\n                dropPoint: event.dropPoint\r\n            });\r\n            // Since all of these events run outside of change detection,\r\n            // we need to ensure that everything is marked correctly.\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n        ref.entered.subscribe(event => {\r\n            this.entered.emit({\r\n                container: event.container.data,\r\n                item: this,\r\n                currentIndex: event.currentIndex\r\n            });\r\n        });\r\n        ref.exited.subscribe(event => {\r\n            this.exited.emit({\r\n                container: event.container.data,\r\n                item: this\r\n            });\r\n        });\r\n        ref.dropped.subscribe(event => {\r\n            this.dropped.emit({\r\n                previousIndex: event.previousIndex,\r\n                currentIndex: event.currentIndex,\r\n                previousContainer: event.previousContainer.data,\r\n                container: event.container.data,\r\n                isPointerOverContainer: event.isPointerOverContainer,\r\n                item: this,\r\n                distance: event.distance,\r\n                dropPoint: event.dropPoint\r\n            });\r\n        });\r\n    }\r\n    /** Assigns the default input values based on a provided config object. */\r\n    _assignDefaults(config) {\r\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer } = config;\r\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\r\n        this.dragStartDelay = dragStartDelay || 0;\r\n        if (lockAxis) {\r\n            this.lockAxis = lockAxis;\r\n        }\r\n        if (constrainPosition) {\r\n            this.constrainPosition = constrainPosition;\r\n        }\r\n        if (previewClass) {\r\n            this.previewClass = previewClass;\r\n        }\r\n        if (boundaryElement) {\r\n            this.boundaryElement = boundaryElement;\r\n        }\r\n        if (rootElementSelector) {\r\n            this.rootElementSelector = rootElementSelector;\r\n        }\r\n        if (previewContainer) {\r\n            this.previewContainer = previewContainer;\r\n        }\r\n    }\r\n    /** Sets up the listener that syncs the handles with the drag ref. */\r\n    _setupHandlesListener() {\r\n        // Listen for any newly-added handles.\r\n        this._handles.changes.pipe(startWith(this._handles), \r\n        // Sync the new handles with the DragRef.\r\n        tap((handles) => {\r\n            const childHandleElements = handles\r\n                .filter(handle => handle._parentDrag === this)\r\n                .map(handle => handle.element);\r\n            // Usually handles are only allowed to be a descendant of the drag element, but if\r\n            // the consumer defined a different drag root, we should allow the drag element\r\n            // itself to be a handle too.\r\n            if (this._selfHandle && this.rootElementSelector) {\r\n                childHandleElements.push(this.element);\r\n            }\r\n            this._dragRef.withHandles(childHandleElements);\r\n        }), \r\n        // Listen if the state of any of the handles changes.\r\n        switchMap((handles) => {\r\n            return merge(...handles.map(item => {\r\n                return item._stateChanges.pipe(startWith(item));\r\n            }));\r\n        }), takeUntil(this._destroyed)).subscribe(handleInstance => {\r\n            // Enabled/disable the handle that changed in the DragRef.\r\n            const dragRef = this._dragRef;\r\n            const handle = handleInstance.element.nativeElement;\r\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\r\n        });\r\n    }\r\n}\r\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_HANDLE, 10), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12)); };\r\nCdkDrag.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PREVIEW, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PLACEHOLDER, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_HANDLE, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\r\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\r\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkDrag._dragInstances = [];\r\nCdkDrag.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: NgZone },\r\n    { type: ViewContainerRef },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: DragDrop },\r\n    { type: ChangeDetectorRef },\r\n    { type: CdkDragHandle, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [CDK_DRAG_HANDLE,] }] },\r\n    { type: CdkDrag, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [CDK_DRAG_PARENT,] }] }\r\n];\r\nCdkDrag.propDecorators = {\r\n    _handles: [{ type: ContentChildren, args: [CDK_DRAG_HANDLE, { descendants: true },] }],\r\n    _previewTemplate: [{ type: ContentChild, args: [CDK_DRAG_PREVIEW,] }],\r\n    _placeholderTemplate: [{ type: ContentChild, args: [CDK_DRAG_PLACEHOLDER,] }],\r\n    data: [{ type: Input, args: ['cdkDragData',] }],\r\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\r\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\r\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\r\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\r\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\r\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\r\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\r\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\r\n    previewContainer: [{ type: Input, args: ['cdkDragPreviewContainer',] }],\r\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\r\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\r\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\r\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\r\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\r\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\r\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkDrag]',\r\n                exportAs: 'cdkDrag',\r\n                host: {\r\n                    'class': DRAG_HOST_CLASS,\r\n                    '[class.cdk-drag-disabled]': 'disabled',\r\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\r\n                },\r\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_DROP_LIST]\r\n            }, {\r\n                type: Optional\r\n            }, {\r\n                type: SkipSelf\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [CDK_DRAG_CONFIG]\r\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Self\r\n            }, {\r\n                type: Inject,\r\n                args: [CDK_DRAG_HANDLE]\r\n            }] }, { type: CdkDrag, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: SkipSelf\r\n            }, {\r\n                type: Inject,\r\n                args: [CDK_DRAG_PARENT]\r\n            }] }]; }, { started: [{\r\n            type: Output,\r\n            args: ['cdkDragStarted']\r\n        }], released: [{\r\n            type: Output,\r\n            args: ['cdkDragReleased']\r\n        }], ended: [{\r\n            type: Output,\r\n            args: ['cdkDragEnded']\r\n        }], entered: [{\r\n            type: Output,\r\n            args: ['cdkDragEntered']\r\n        }], exited: [{\r\n            type: Output,\r\n            args: ['cdkDragExited']\r\n        }], dropped: [{\r\n            type: Output,\r\n            args: ['cdkDragDropped']\r\n        }], moved: [{\r\n            type: Output,\r\n            args: ['cdkDragMoved']\r\n        }], disabled: [{\r\n            type: Input,\r\n            args: ['cdkDragDisabled']\r\n        }], dragStartDelay: [{\r\n            type: Input,\r\n            args: ['cdkDragStartDelay']\r\n        }], lockAxis: [{\r\n            type: Input,\r\n            args: ['cdkDragLockAxis']\r\n        }], constrainPosition: [{\r\n            type: Input,\r\n            args: ['cdkDragConstrainPosition']\r\n        }], previewClass: [{\r\n            type: Input,\r\n            args: ['cdkDragPreviewClass']\r\n        }], boundaryElement: [{\r\n            type: Input,\r\n            args: ['cdkDragBoundary']\r\n        }], rootElementSelector: [{\r\n            type: Input,\r\n            args: ['cdkDragRootElement']\r\n        }], previewContainer: [{\r\n            type: Input,\r\n            args: ['cdkDragPreviewContainer']\r\n        }], _handles: [{\r\n            type: ContentChildren,\r\n            args: [CDK_DRAG_HANDLE, { descendants: true }]\r\n        }], _previewTemplate: [{\r\n            type: ContentChild,\r\n            args: [CDK_DRAG_PREVIEW]\r\n        }], _placeholderTemplate: [{\r\n            type: ContentChild,\r\n            args: [CDK_DRAG_PLACEHOLDER]\r\n        }], data: [{\r\n            type: Input,\r\n            args: ['cdkDragData']\r\n        }], freeDragPosition: [{\r\n            type: Input,\r\n            args: ['cdkDragFreeDragPosition']\r\n        }] }); })();\r\n/** Gets the closest ancestor of an element that matches a selector. */\r\nfunction getClosestMatchingAncestor(element, selector) {\r\n    let currentElement = element.parentElement;\r\n    while (currentElement) {\r\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\r\n        if (currentElement.matches ? currentElement.matches(selector) :\r\n            currentElement.msMatchesSelector(selector)) {\r\n            return currentElement;\r\n        }\r\n        currentElement = currentElement.parentElement;\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass DragDropModule {\r\n}\r\nDragDropModule.ɵfac = function DragDropModule_Factory(t) { return new (t || DragDropModule)(); };\r\nDragDropModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\r\nDragDropModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\r\n        DragDrop,\r\n    ], imports: [CdkScrollableModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    CdkDropList,\r\n                    CdkDropListGroup,\r\n                    CdkDrag,\r\n                    CdkDragHandle,\r\n                    CdkDragPreview,\r\n                    CdkDragPlaceholder,\r\n                ],\r\n                exports: [\r\n                    CdkScrollableModule,\r\n                    CdkDropList,\r\n                    CdkDropListGroup,\r\n                    CdkDrag,\r\n                    CdkDragHandle,\r\n                    CdkDragPreview,\r\n                    CdkDragPlaceholder,\r\n                ],\r\n                providers: [\r\n                    DragDrop,\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; }, exports: function () { return [CdkScrollableModule, CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; } }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\r\n\r\n//# sourceMappingURL=drag-drop.js.map","import { asyncScheduler } from '../scheduler/async';\r\nimport { timer } from './timer';\r\nexport function interval(period, scheduler) {\r\n    if (period === void 0) { period = 0; }\r\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\r\n    if (period < 0) {\r\n        period = 0;\r\n    }\r\n    return timer(period, period, scheduler);\r\n}\r\n//# sourceMappingURL=interval.js.map","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Tous les rendez-vous</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Rendez-vous</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"tabbable-line\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <div class=\"card\">\r\n                <div class=\"body\">\r\n                  <div class=\"table-responsive\">\r\n                    <div class=\"materialTableHeader\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                          <ul class=\"header-buttons-left ms-0\">\r\n                            <li class=\"dropdown\">\r\n                              <h2>\r\n                                <strong>Rendez-vous</strong></h2>\r\n                            </li>\r\n                            <li class=\"dropdown m-l-20\">\r\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                              <input placeholder=\"Recherche\" (keyup)=\"applyFilter($event.target.value)\" type=\"text\" class=\"browser-default search-field\"\r\n                                aria-label=\"Search box\">\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <mat-table #table [dataSource]=\"myAllRDV\" matSort class=\"mat-cell\">\r\n                      <ng-container matColumnDef=\"nom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Nom Patient</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.nom}} {{row.patient.prenom}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"dateTime\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Date et Heure\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                          {{row.rdvDate | date: 'dd/MM/yyyy'}}, {{row.rdvHeure}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"telephone\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Téléphone\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> {{row.patient.telephone}}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"email\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> {{row.patient.email}}</mat-cell>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"genre\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Genre\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.genre}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"symptom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Symptôme</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.symptom}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"isValid\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Accepter</mat-header-cell>\r\n                        <ng-container *matCellDef=\"let row\">\r\n                          <mat-cell *ngIf=\"row.isValid===null\" class=\"col-red\">En attente</mat-cell>\r\n                          <mat-cell *ngIf=\"row.isValid===false\" class=\"col-red\">Non</mat-cell>\r\n                          <mat-cell *ngIf=\"row.isValid===true\" class=\"col-green\">Oui</mat-cell>\r\n                        </ng-container>\r\n                      </ng-container>\r\n                      <!-- actions -->\r\n                      <ng-container matColumnDef=\"actions\">\r\n                        <mat-header-cell class=\"tbl-col-width-per-10\" *matHeaderCellDef>Actions</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row;\" class=\"tbl-col-width-per-10\">\r\n                          <button mat-icon-button (click)=\"detailsCall(row)\" style=\"color: #40ea48;\">\r\n                            <i class=\"material-icons\">visibility</i>\r\n                          </button>\r\n                          <button mat-icon-button style=\"color: #3F51B5;\" [matMenuTriggerFor]=\"menu\">\r\n                            <mat-icon>more_vert</mat-icon>\r\n                          </button>\r\n                          <mat-menu #menu=\"matMenu\">\r\n                            <button mat-menu-item style=\"color: #40ea48;\" (click)=\"validRDV(row)\">\r\n                              <i class=\"material-icons-two-tone align-middle msr-2\">done</i>\r\n                              <span>Valider</span>\r\n                            </button>\r\n                            <button mat-menu-item style=\"color: #ee2525;\" (click)=\"cancel(row)\">\r\n                              <i class=\"material-icons align-middle msr-2\">cancel</i>\r\n                              <span>Annuler</span>\r\n                            </button>\r\n                          </mat-menu>\r\n                        </mat-cell>\r\n                      </ng-container>\r\n\r\n                      <mat-header-row *matHeaderRowDef=\"displayedColumns\">\r\n                      </mat-header-row>\r\n                      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                      </mat-row>\r\n                    </mat-table>\r\n                    <div *ngIf=\"myAllRDV.data.length === 0\" class=\"no-results text-center mt-3\">\r\n                      Vous n'avez pas encore de rendez-vous !\r\n                    </div>\r\n                    <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\nimport { ToasServiceService } from \"src/app/core/service/toast-service/toas-service.service\";\r\nimport { FormComponent } from \"./form/form.component\";\r\n\r\n@Component({\r\n  selector: \"app-appointments\",\r\n  templateUrl: \"./appointments.component.html\",\r\n  styleUrls: [\"./appointments.component.sass\"],\r\n})\r\nexport class AppointmentsComponent implements OnInit, AfterViewInit\r\n{\r\n  displayedColumns = [\r\n    \"nom\",\r\n    \"dateTime\",\r\n    \"telephone\",\r\n    \"email\",\r\n    \"genre\",\r\n    \"symptom\",\r\n    \"isValid\",\r\n    \"actions\"\r\n  ];\r\n\r\n  public currentUser: any;\r\n  public myAllRDV: any = new MatTableDataSource([]);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(public dialog: MatDialog, private restApi: RestApiService, private toatr: ToasServiceService){}\r\n\r\n  ngOnInit(){\r\n    this.refreshList();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n      this.myAllRDV.paginator = this.paginator; //Add pagination\r\n      this.myAllRDV.sort = this.sort;\r\n  }\r\n\r\n  //Search filter table\r\n  applyFilter(filterValue: string)\r\n  {\r\n    filterValue = filterValue.trim();\r\n    filterValue = filterValue.toLowerCase();\r\n\r\n    this.myAllRDV.filter = filterValue;\r\n  }\r\n\r\n  refreshList()\r\n  {\r\n    this.restApi.getPersonByUsername(localStorage.getItem(\"username\"), localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result=>{\r\n          this.currentUser = result;\r\n          \r\n          let postBody = {\"idPerson\": this.currentUser.idPerson, \"person_type\": \"MEDECIN\"};\r\n          \r\n          //Get all RDV for the current medecin\r\n          this.restApi.getRDVByMedecin(postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result =>{\r\n                this.myAllRDV.data = result;\r\n              }\r\n            }\r\n          );         \r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  validRDV(row: any){\r\n    this.restApi.validRDV(row.idRDV, true, localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          if(result)\r\n          {\r\n            this.refreshList();\r\n          }\r\n          this.toatr.showSuccessMessage(\"Rendez-vous accepté !\")\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(row: any){\r\n    this.restApi.validRDV(row.idRDV, false, localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          if(!result)\r\n          {\r\n            this.refreshList();\r\n          }\r\n          this.toatr.showSuccessMessage(\"Rendez-vous annulé !\")\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  detailsCall(row) {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    this.dialog.open(FormComponent, {\r\n      data: {\r\n        rdv: row,\r\n        action: \"details\",\r\n      },\r\n      direction: tempDirection,\r\n      height: \"60%\",\r\n      width: \"50%\",\r\n    });\r\n  }  \r\n}","<div class=\"addContainer\">\r\n  <div *ngIf=\"isDetails\" class=\"contact-details\">\r\n    <div class=\"modalHeader\">\r\n      <div class=\"editRowModal\">\r\n        <div class=\"modalHeader clearfix\">\r\n          <div class=\"modal-about contact-header\">\r\n            <div class=\"contact-details-heading\">\r\n              <div class=\"contact-details-name mb-2\">{{rdv.patient.prenom}} {{rdv.patient.nom}}</div>\r\n              <div class=\"badge col-green\">Patient</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <mat-card-content>\r\n        <div class=\"contact-details-field\" matTooltip=\"Date et l'heure du rendez-vous\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">event_note</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.rdvDate | date: 'd MMMM, yyyy'}} à {{rdv.rdvHeure}}</div>\r\n        </div>\r\n        <div class=\"contact-details-field\" matTooltip=\"L'E-mail du patient\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">email</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.patient.email}}\r\n          </div>\r\n        </div>\r\n        <div class=\"contact-details-field\" matTooltip=\"Numéro de téléphone du patient\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">phonelink_ring</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.patient.telephone}}\r\n          </div>\r\n        </div>\r\n        <div class=\"contact-details-field\" matTooltip=\"Patient Address\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">location_on</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.patient.adresse}}\r\n          </div>\r\n        </div>\r\n        <div class=\"contact-details-field\" matTooltip=\"Patient Disease\" [matTooltipPosition]=\"'above'\">\r\n          <i class=\"material-icons-two-tone color-icon\">healing</i>\r\n          <div class=\"contact-detail-info\"> {{rdv.symptom}}\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-form\",\r\n  templateUrl: \"./form.component.html\",\r\n  styleUrls: [\"./form.component.sass\"],\r\n})\r\nexport class FormComponent {\r\n  action: string;\r\n  isDetails = false;\r\n  rdv: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"details\") {\r\n      this.rdv = data.rdv;\r\n      this.isDetails = true;\r\n    } else {\r\n      this.isDetails = false;\r\n    }\r\n  }\r\n  \r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  \r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Dashboard</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Médecin Dashboard</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Widgets -->\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-card1 order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h5 class=\"m-b-15\">Patients du jour</h5>\r\n            <h2 class=\"text-end\"><i class=\"fas fa-user-injured float-start\"></i><span>{{myTodayPatient?.length}}</span></h2>\r\n            <p class=\"m-b-0\">Mes patients d'aujourd'hui</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-card2 order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h5 class=\"m-b-15\">Rendez-vous du jour</h5>\r\n            <h2 class=\"text-end\"><i class=\"far fa-calendar-check float-start\"></i><span>{{myTodayRDV.data.length}}</span></h2>\r\n            <p class=\"m-b-0\">Mes rendez-vous d'aujourd'hui</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-card3 order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h5 class=\"m-b-15\">Tous mes patients</h5>\r\n            <h2 class=\"text-end\"><i class=\"fa fa-users float-start\" aria-hidden=\"true\"></i><span>{{myAllPatient?.length}}</span></h2>\r\n            <p class=\"m-b-0\">Le total de mes patients</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-card4 order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h5 class=\"m-b-15\">Tous mes rendez-vous</h5>\r\n            <h2 class=\"text-end\"><i class=\"far fa-calendar-check float-start\"></i><span>{{myAllRDV?.length}}</span></h2>\r\n            <p class=\"m-b-0\">Le total de mes rendez-vous</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- #END# Widgets -->\r\n    <h5>La liste des rendez-vous d'aujourd'hui</h5>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"tabbable-line\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <div class=\"card\">\r\n                <div class=\"body\">\r\n                  <div class=\"table-responsive mat-elevation-z8\">\r\n                    <mat-table [dataSource]=\"myTodayRDV\" matSort class=\"mat-cell\">\r\n                      <ng-container matColumnDef=\"nom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Nom patient</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.nom}} {{row.patient.prenom}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"email\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Email patient</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.email}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"genre\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Genre</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.genre}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"rdvDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.rdvDate | date: 'dd/MM/yyyy' }}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"rdvHeure\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Heure</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.rdvHeure}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"telephone\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Tél Patient</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.patient.telephone}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"symptom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Symptôme</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.symptom}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"isValid\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Accepter</mat-header-cell>\r\n                        <ng-container *matCellDef=\"let row\">\r\n                          <mat-cell *ngIf=\"row.isValid===null\" class=\"col-red\">En attente</mat-cell>\r\n                          <mat-cell *ngIf=\"row.isValid===false\" class=\"col-red\">Non</mat-cell>\r\n                          <mat-cell *ngIf=\"row.isValid===true\" class=\"col-green\">Oui</mat-cell>\r\n                        </ng-container>\r\n                      </ng-container>\r\n                      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                      </mat-row>\r\n                    </mat-table>\r\n                    <div *ngIf=\"myTodayRDV.data.length === 0\" class=\"no-results text-center mb-3 mt-3\">\r\n                      Vous n'avez pas encore de rendez-vous !\r\n                    </div>\r\n                    <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                      [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n                    </mat-paginator>              \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { DatePipe, formatDate } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.sass\"],\r\n  providers: [DatePipe]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    \"nom\",\r\n    \"email\",\r\n    \"genre\",\r\n    \"rdvDate\",\r\n    \"rdvHeure\",\r\n    \"telephone\",\r\n    \"symptom\",\r\n    \"isValid\"\r\n  ];\r\n\r\n  public myAllPatient: any;\r\n  public myTodayPatient: any;\r\n  public myAllRDV: any;\r\n  public myTodayRDV: any = new MatTableDataSource([]);\r\n  public currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n  public currentUser: any;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.myTodayRDV.paginator = this.paginator;\r\n    this.myTodayRDV.sort = this.sort;\r\n  }\r\n\r\n  constructor(private restApi: RestApiService){}\r\n\r\n  ngOnInit() {\r\n    this.restApi.getPersonByUsername(localStorage.getItem(\"username\"), localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result=>{\r\n          this.currentUser = result;\r\n          \r\n          let postBody = {\"idPerson\": this.currentUser.idPerson, \"person_type\": \"MEDECIN\"};          \r\n          \r\n          //Get all today's distinct patient for the current medecin\r\n          this.restApi.getDistinctPatientByMedecinAndDate(this.currentDate, postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result=>{\r\n                this.myTodayPatient = result;\r\n              }\r\n            }\r\n          );\r\n\r\n          //Get all distinct patient for the current medecin\r\n          this.restApi.getDistinctPatientByMedecin(postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result=>{\r\n                this.myAllPatient = result;\r\n              }\r\n            }\r\n          );\r\n\r\n          //Get all RDV for the current medecin\r\n          this.restApi.getRDVByMedecin(postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result =>{\r\n                this.myAllRDV = result;\r\n              }\r\n            }\r\n          );\r\n          \r\n          //Get today'RDV\r\n          this.restApi.getRDVByMedecinAndDate(this.currentDate, postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result=>{\r\n                this.myTodayRDV.data = result;\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { AppointmentsComponent } from \"./appointments/appointments.component\";\r\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\r\nimport { PatientsComponent } from \"./patients/patients.component\";\r\nimport { SettingsComponent } from \"./settings/settings.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"dashboard\",\r\n    component: DashboardComponent,\r\n  },\r\n  {\r\n    path: \"appointments\",\r\n    component: AppointmentsComponent,\r\n  },\r\n  {\r\n    path: \"doctors\",\r\n    component: DoctorsComponent,\r\n  },\r\n  {\r\n    path: \"patients\",\r\n    component: PatientsComponent,\r\n  },\r\n  {\r\n    path: \"settings\",\r\n    component: SettingsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DoctorRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\r\nimport { ChartsModule as chartjsModule } from \"ng2-charts\";\r\nimport { NgxEchartsModule } from \"ngx-echarts\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\nimport { DoctorRoutingModule } from \"./doctor-routing.module\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { AppointmentsComponent } from \"./appointments/appointments.component\";\r\nimport { FormComponent } from \"./appointments/form/form.component\";\r\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\r\nimport { PatientsComponent } from \"./patients/patients.component\";\r\nimport { SettingsComponent } from \"./settings/settings.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    AppointmentsComponent,\r\n    FormComponent,\r\n    DoctorsComponent,\r\n    PatientsComponent,\r\n    SettingsComponent,\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    DoctorRoutingModule,\r\n    chartjsModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import(\"echarts\"),\r\n    }),\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    NgApexchartsModule,\r\n    MatPaginatorModule,\r\n    MatSnackBarModule,\r\n    MatFormFieldModule,\r\n    MatSortModule,\r\n    MatTabsModule,\r\n    MatMenuModule,\r\n    MatDatepickerModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    MatRadioModule,\r\n    DragDropModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class DoctorModule {}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Médecins</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Médecins</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\" *ngFor=\"let item of allMedecins\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"card p-3\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12 col-md-2 mb-0\">\r\n                      <img class=\"img-circle doc-card-image\" style=\"width: 150px;\" src=\"{{userProfileImg}}{{item.username}}\">\r\n                    </div>\r\n                    <div class=\"col-md-6 border-right mb-0\">\r\n                      <div class=\"doc-card-title\">\r\n                        <h4>{{item.nom}} {{item.prenom}}</h4>\r\n                      </div>\r\n                      <p>\r\n                        <strong>{{item.specialite.nom}}</strong><br>\r\n                        <i>{{item.cabinetMedicale.nom}}</i><br>\r\n                        <i>{{item.cabinetMedicale.rive.nomRive}}, {{item.cabinetMedicale.adresse}}</i>\r\n                      </p>\r\n                      <div class=\"description\">\r\n                        <p>{{item.nom}} {{item.prenom}} est l'un de nos médecins qui ont beaucoup d'expériences avec comme spécialité {{item.specialite.nom}} !<br></p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex col-md-4 mb-0\">\r\n                      <div class=\"d-flex flex-column justify-content-start user-profile w-100\">\r\n                        <div><i class=\"fas fa-map-marker-alt pt-3 psr-3\"></i>{{item.adresse}}</div>\r\n                        <div><i class=\"fas fa-envelope pt-3 psr-3\"></i>{{item.email}}</div>\r\n                        <div><i class=\"fas fa-phone pt-3 psr-3\"></i>{{item.telephone}}</div>\r\n                        <div><i class=\"fas fa-briefcase pt-3 psr-3\"></i>{{item.etat}}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\n\r\n@Component({\r\n  selector: \"app-doctors\",\r\n  templateUrl: \"./doctors.component.html\",\r\n  styleUrls: [\"./doctors.component.sass\"],\r\n})\r\nexport class DoctorsComponent implements OnInit {\r\n  public allMedecins: any;\r\n  public userProfileImg: any = this.restApi.userLink+'/getProfileImg/';\r\n\r\n  constructor(private restApi: RestApiService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.restApi.getUserByProfile('MEDECIN', localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.allMedecins = result;\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Patients</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Patients</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div *ngIf=\"myAllPatient?.length === 0\" class=\"text-center\"><h6>Vous n'avez pas encore de patients !</h6></div>\r\n      <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\" *ngFor=\"let item of myAllPatient\">\r\n        <div class=\"card py-3 py-md-3\">\r\n          <div class=\" d-flex justify-content-between px-3 px-md-4\">\r\n            <img src=\"{{userProfileImg}}{{item.username}}\" height=\"55px\" width=\"55px\" alt=\"\" class=\"rounded-circle\">\r\n            <div class=\"\">\r\n              <h6 class=\"col-green\">{{item.nom}} {{item.prenom}}</h6>\r\n              <p>Profession : {{item.profession}}</p>\r\n            </div>\r\n          </div>\r\n          <hr class=\"light-hr\">\r\n          <div class=\"d-flex flex-column justify-content-start w-100 px-3 px-md-4\">\r\n            <div><i class=\"fas fa-map-marker-alt pt-3 psr-3\"></i>{{item.adresse}}</div>\r\n            <div><i class=\"fas fa-phone pt-3 psr-3\"></i>{{item.telephone}}</div>\r\n            <div><i class=\"fas fa-envelope pt-3 psr-3\"></i>{{item.email}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\n\r\n@Component({\r\n  selector: \"app-patients\",\r\n  templateUrl: \"./patients.component.html\",\r\n  styleUrls: [\"./patients.component.sass\"],\r\n})\r\nexport class PatientsComponent implements OnInit {\r\n  public currentUser: any;\r\n  public myAllPatient: any;\r\n  public userProfileImg: any = this.restApi.userLink+'/getProfileImg/';\r\n\r\n  constructor(private restApi: RestApiService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.restApi.getPersonByUsername(localStorage.getItem(\"username\"), localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.currentUser = result;\r\n          let postBody = {\"idPerson\": this.currentUser.idPerson, \"person_type\": \"MEDECIN\"};\r\n          //Get all distinct patient for the current medecin\r\n          this.restApi.getDistinctPatientByMedecin(postBody, localStorage.getItem(\"token\")).subscribe(\r\n            {\r\n              next: result=>{\r\n                this.myAllPatient = result;\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  .card1{\r\n    height: 35vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #img{\r\n    height: 200px;\r\n    width: 1000px;\r\n    border-radius: 26px;\r\n  }\r\n  .profile>img{\r\n    height: 55px;\r\n    width: auto;\r\n    border-radius: 50%;\r\n  }\r\n  .profile{\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    font-size: 8px;\r\n    width: 300px;\r\n    height: 70px;\r\n    border-radius: 50px;\r\n    box-shadow: 5px 6px 8px 0px #00000065;\r\n    margin-top: -72px;\r\n    margin-left: 12em;\r\n    position: absolute;\r\n    z-index: 99;\r\n    background-color: rgb(255, 255, 255);\r\n  }\r\n</style>\r\n<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Profile</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i>Accueil</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Profile</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card\">\r\n      <div class=\"m-b-20\">\r\n        <div class=\"contact-grid\">\r\n          <div class=\"profile-header\" style=\"background-color: #99B9EC;\">\r\n            <div class=\"user-name\">{{myProfile?.nom}} {{myProfile?.prenom}}</div>\r\n            <div class=\"name-center\">{{myProfile?.specialite.nom}}</div>\r\n          </div>\r\n          <img src=\"{{userProfileImg}}\" class=\"user-img\" alt=\"User profile\">\r\n          <label for=\"imgProfile\" style=\"margin-left: -18px;\"><i class=\"fas fa-edit\" style=\"font-size: 20px;\"></i></label>\r\n          <input type=\"file\" (change)=\"getPhoto($event)\" id=\"imgProfile\" style=\"display: none; visibility: none;\">\r\n          <p>Adresse : {{myProfile?.adresse}}</p>\r\n          <p>Cabinet Médicale : {{myProfile?.cabinetMedicale.nom}}</p>\r\n          <div>\r\n            <span class=\"phone\">\r\n              <i class=\"material-icons\">phone</i>{{myProfile?.telephone}}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card\">\r\n      <div class=\"header\">\r\n        <h2>\r\n          <strong>Modifier votre mot de passe</strong></h2>\r\n      </div>\r\n      <div class=\"body\">\r\n        <div class=\"example-container\">\r\n          <form #changePassword=\"ngForm\" (ngSubmit)=\"updatePassword(changePassword)\">\r\n            <div *ngIf=\"errorMsg1\" class=\"mb-2 col-red\">{{errorMsg1}}</div>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n              <mat-label>Nom d'utilisateur</mat-label>\r\n              <input matInput name=\"username\" ngModel required>\r\n              <mat-error *ngIf=\"!changePassword.valid\">Veuilez remplir ce champ !</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n              <mat-label>Nouveau Password</mat-label>\r\n              <input matInput type=\"password\" name=\"newPassword\" ngModel required>\r\n              <mat-error *ngIf=\"!changePassword.valid\">Veuilez remplir ce champ !</mat-error>\r\n            </mat-form-field>\r\n            <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"passwordloading\" [disabled]=\"!changePassword.valid\">Envoyer</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card\">\r\n      <div class=\"header\">\r\n        <h2>\r\n          <strong>Account</strong> Settings</h2>\r\n      </div>\r\n      <div class=\"body\">\r\n        <form #changeUSer=\"ngForm\" (ngSubmit)=\"userUpdate(changeUSer)\">\r\n          <div class=\"row clearfix\">\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Nom d'utilisateur</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.username\" name=\"username\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Prénom</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.prenom\" name=\"prenom\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Nom</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.nom\" name=\"nom\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Adress</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.adresse\" name=\"adresse\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.email\" name=\"email\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                  <mat-label>Téléphone</mat-label>\r\n                  <input matInput [ngModel]=\"myProfile?.telephone\" name=\"telephone\" ngModel required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n              <button mat-raised-button [class.auth-spinner]=\"loading\" color=\"primary\" [disabled]=\"!changeUSer.valid\">Enregistrer </button>\r\n            </div>\r\n          </div>\r\n      </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\r\nimport { ToasServiceService } from \"src/app/core/service/toast-service/toas-service.service\";\r\n\r\n@Component({\r\n  selector: \"app-settings\",\r\n  templateUrl: \"./settings.component.html\",\r\n  styleUrls: [\"./settings.component.sass\"],\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  public passwordloading = false;\r\n  public loading = false;\r\n  public errorMsg1: any;\r\n  public myProfile: any;\r\n  public updateBody: any;\r\n  public uploadImg: any;\r\n  public userProfileImg: any = this.restApi.userLink+'/getProfileImg/'+localStorage.getItem(\"username\");\r\n\r\n  constructor(private restApi: RestApiService, private toastr: ToasServiceService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.restApi.getPersonByUsername(localStorage.getItem(\"username\"), localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.myProfile = result;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  refreshPage() {\r\n    window.location.reload();\r\n   }\r\n\r\n  getPhoto(event)\r\n  {\r\n    this.uploadImg = event.target.files[0];\r\n    this.restApi.updateUserProfile(this.myProfile.username, this.uploadImg, localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          if(!result)\r\n          {\r\n            this.toastr.showWarningMessage(\"Veuillez changer le nom de votre image !\");\r\n            return;\r\n          }\r\n          \r\n          this.toastr.showSuccessMessage(\"Profile image modifié avec succès !\");\r\n          this.refreshPage();\r\n        },\r\n        error: error =>{\r\n          this.toastr.showWarningMessage(\"Veuillez choisir une autre photo !\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  updatePassword(changePassword: NgForm)\r\n  {\r\n    this.passwordloading = true;\r\n    this.restApi.changeUserPassword(changePassword.value.username, localStorage.getItem(\"token\")).subscribe(\r\n     {\r\n      next: result =>{\r\n        this.passwordloading = false;\r\n        this.toastr.showSuccessMessage(\"Mot de passe modifié avec succès !\");\r\n        changePassword.resetForm();\r\n      },\r\n      error: error =>{\r\n        this.passwordloading = false;\r\n        this.errorMsg1 = \"Nom d'utilisateur non trouvé !\";\r\n      }\r\n     }\r\n   );\r\n  }\r\n\r\n  userUpdate(changeUSer)\r\n  {\r\n    this.loading = true;\r\n    this.updateBody = {\r\n      \"person_type\": \"MEDECIN\",\r\n      \"profile\": \"MEDECIN\",\r\n      \"nom\": changeUSer.value.nom,\r\n      \"prenom\": changeUSer.value.prenom,\r\n      \"adresse\": changeUSer.value.adresse,\r\n      \"telephone\": changeUSer.value.telephone,\r\n      \"email\": changeUSer.value.email,\r\n      \"genre\": this.myProfile.genre,\r\n      \"username\": changeUSer.value.username,\r\n      \"password\": null,\r\n      \"imageProfile\": \"imageLinnnkkk\",\r\n      \"roles\": [\r\n        {\"idRole\": 3}\r\n      ]\r\n    };\r\n\r\n    this.restApi.updateUser(this.myProfile.idPerson, this.updateBody, localStorage.getItem(\"token\")).subscribe(\r\n      {\r\n        next: result =>{\r\n          this.loading = false;\r\n          localStorage.setItem(\"username\", changeUSer.value.username);\r\n          this.toastr.showSuccessMessage(\"Votre profile a été modifié avec succès !\");\r\n          this.router.navigate(['/doctor/dashboard']);\r\n        },\r\n        error: error =>{\r\n          this.loading = false;\r\n          this.toastr.showErrorMessage(\"Modification non éffectuée !\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n"]}