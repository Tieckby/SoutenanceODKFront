{"version":3,"sources":["./node_modules/echarts/index.js","./node_modules/echarts/lib/CoordinateSystem.js","./node_modules/echarts/lib/ExtensionAPI.js","./node_modules/echarts/lib/action/createDataSelectAction.js","./node_modules/echarts/lib/action/geoRoam.js","./node_modules/echarts/lib/action/roamHelper.js","./node_modules/echarts/lib/chart/bar.js","./node_modules/echarts/lib/chart/bar/BarSeries.js","./node_modules/echarts/lib/chart/bar/BarView.js","./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","./node_modules/echarts/lib/chart/bar/PictorialBarView.js","./node_modules/echarts/lib/chart/bar/barItemStyle.js","./node_modules/echarts/lib/chart/bar/helper.js","./node_modules/echarts/lib/chart/boxplot.js","./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","./node_modules/echarts/lib/chart/candlestick.js","./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","./node_modules/echarts/lib/chart/candlestick/preprocessor.js","./node_modules/echarts/lib/chart/custom.js","./node_modules/echarts/lib/chart/effectScatter.js","./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","./node_modules/echarts/lib/chart/funnel.js","./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","./node_modules/echarts/lib/chart/funnel/FunnelView.js","./node_modules/echarts/lib/chart/funnel/funnelLayout.js","./node_modules/echarts/lib/chart/gauge.js","./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","./node_modules/echarts/lib/chart/gauge/GaugeView.js","./node_modules/echarts/lib/chart/gauge/PointerPath.js","./node_modules/echarts/lib/chart/graph.js","./node_modules/echarts/lib/chart/graph/GraphSeries.js","./node_modules/echarts/lib/chart/graph/GraphView.js","./node_modules/echarts/lib/chart/graph/adjustEdge.js","./node_modules/echarts/lib/chart/graph/categoryFilter.js","./node_modules/echarts/lib/chart/graph/categoryVisual.js","./node_modules/echarts/lib/chart/graph/circularLayout.js","./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","./node_modules/echarts/lib/chart/graph/createView.js","./node_modules/echarts/lib/chart/graph/edgeVisual.js","./node_modules/echarts/lib/chart/graph/forceHelper.js","./node_modules/echarts/lib/chart/graph/forceLayout.js","./node_modules/echarts/lib/chart/graph/graphAction.js","./node_modules/echarts/lib/chart/graph/graphHelper.js","./node_modules/echarts/lib/chart/graph/simpleLayout.js","./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","./node_modules/echarts/lib/chart/heatmap.js","./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","./node_modules/echarts/lib/chart/helper/EffectLine.js","./node_modules/echarts/lib/chart/helper/EffectPolyline.js","./node_modules/echarts/lib/chart/helper/EffectSymbol.js","./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","./node_modules/echarts/lib/chart/helper/Line.js","./node_modules/echarts/lib/chart/helper/LineDraw.js","./node_modules/echarts/lib/chart/helper/LinePath.js","./node_modules/echarts/lib/chart/helper/Polyline.js","./node_modules/echarts/lib/chart/helper/Symbol.js","./node_modules/echarts/lib/chart/helper/SymbolDraw.js","./node_modules/echarts/lib/chart/helper/createClipPathFromCoordSys.js","./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","./node_modules/echarts/lib/chart/helper/createListFromArray.js","./node_modules/echarts/lib/chart/helper/createListSimply.js","./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","./node_modules/echarts/lib/chart/helper/focusNodeAdjacencyAction.js","./node_modules/echarts/lib/chart/helper/labelHelper.js","./node_modules/echarts/lib/chart/helper/multipleGraphEdgeHelper.js","./node_modules/echarts/lib/chart/helper/treeHelper.js","./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","./node_modules/echarts/lib/chart/line.js","./node_modules/echarts/lib/chart/line/LineSeries.js","./node_modules/echarts/lib/chart/line/LineView.js","./node_modules/echarts/lib/chart/line/helper.js","./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","./node_modules/echarts/lib/chart/line/poly.js","./node_modules/echarts/lib/chart/lines.js","./node_modules/echarts/lib/chart/lines/LinesSeries.js","./node_modules/echarts/lib/chart/lines/LinesView.js","./node_modules/echarts/lib/chart/lines/linesLayout.js","./node_modules/echarts/lib/chart/lines/linesVisual.js","./node_modules/echarts/lib/chart/map.js","./node_modules/echarts/lib/chart/map/MapSeries.js","./node_modules/echarts/lib/chart/map/MapView.js","./node_modules/echarts/lib/chart/map/backwardCompat.js","./node_modules/echarts/lib/chart/map/mapDataStatistic.js","./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","./node_modules/echarts/lib/chart/map/mapVisual.js","./node_modules/echarts/lib/chart/parallel.js","./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","./node_modules/echarts/lib/chart/parallel/ParallelView.js","./node_modules/echarts/lib/chart/parallel/parallelVisual.js","./node_modules/echarts/lib/chart/pictorialBar.js","./node_modules/echarts/lib/chart/pie.js","./node_modules/echarts/lib/chart/pie/PieSeries.js","./node_modules/echarts/lib/chart/pie/PieView.js","./node_modules/echarts/lib/chart/pie/labelLayout.js","./node_modules/echarts/lib/chart/pie/pieLayout.js","./node_modules/echarts/lib/chart/radar.js","./node_modules/echarts/lib/chart/radar/RadarSeries.js","./node_modules/echarts/lib/chart/radar/RadarView.js","./node_modules/echarts/lib/chart/radar/backwardCompat.js","./node_modules/echarts/lib/chart/radar/radarLayout.js","./node_modules/echarts/lib/chart/sankey.js","./node_modules/echarts/lib/chart/sankey/SankeySeries.js","./node_modules/echarts/lib/chart/sankey/SankeyView.js","./node_modules/echarts/lib/chart/sankey/sankeyAction.js","./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","./node_modules/echarts/lib/chart/scatter.js","./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","./node_modules/echarts/lib/chart/scatter/ScatterView.js","./node_modules/echarts/lib/chart/sunburst.js","./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","./node_modules/echarts/lib/chart/sunburst/SunburstView.js","./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","./node_modules/echarts/lib/chart/themeRiver.js","./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","./node_modules/echarts/lib/chart/tree.js","./node_modules/echarts/lib/chart/tree/TreeSeries.js","./node_modules/echarts/lib/chart/tree/TreeView.js","./node_modules/echarts/lib/chart/tree/layoutHelper.js","./node_modules/echarts/lib/chart/tree/traversalHelper.js","./node_modules/echarts/lib/chart/tree/treeAction.js","./node_modules/echarts/lib/chart/tree/treeLayout.js","./node_modules/echarts/lib/chart/treemap.js","./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","./node_modules/echarts/lib/chart/treemap/TreemapView.js","./node_modules/echarts/lib/chart/treemap/treemapAction.js","./node_modules/echarts/lib/chart/treemap/treemapLayout.js","./node_modules/echarts/lib/chart/treemap/treemapVisual.js","./node_modules/echarts/lib/component/angleAxis.js","./node_modules/echarts/lib/component/axis.js","./node_modules/echarts/lib/component/axisPointer.js","./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","./node_modules/echarts/lib/component/axisPointer/globalListener.js","./node_modules/echarts/lib/component/axisPointer/modelHelper.js","./node_modules/echarts/lib/component/axisPointer/viewHelper.js","./node_modules/echarts/lib/component/axis/AngleAxisView.js","./node_modules/echarts/lib/component/axis/AxisBuilder.js","./node_modules/echarts/lib/component/axis/AxisView.js","./node_modules/echarts/lib/component/axis/CartesianAxisView.js","./node_modules/echarts/lib/component/axis/ParallelAxisView.js","./node_modules/echarts/lib/component/axis/RadiusAxisView.js","./node_modules/echarts/lib/component/axis/SingleAxisView.js","./node_modules/echarts/lib/component/axis/axisSplitHelper.js","./node_modules/echarts/lib/component/axis/parallelAxisAction.js","./node_modules/echarts/lib/component/brush.js","./node_modules/echarts/lib/component/brush/BrushModel.js","./node_modules/echarts/lib/component/brush/BrushView.js","./node_modules/echarts/lib/component/brush/brushAction.js","./node_modules/echarts/lib/component/brush/preprocessor.js","./node_modules/echarts/lib/component/brush/selector.js","./node_modules/echarts/lib/component/brush/visualEncoding.js","./node_modules/echarts/lib/component/calendar.js","./node_modules/echarts/lib/component/calendar/CalendarView.js","./node_modules/echarts/lib/component/dataZoom.js","./node_modules/echarts/lib/component/dataZoomInside.js","./node_modules/echarts/lib/component/dataZoomSelect.js","./node_modules/echarts/lib/component/dataZoomSlider.js","./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","./node_modules/echarts/lib/component/dataZoom/helper.js","./node_modules/echarts/lib/component/dataZoom/history.js","./node_modules/echarts/lib/component/dataZoom/roams.js","./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","./node_modules/echarts/lib/component/dataset.js","./node_modules/echarts/lib/component/geo.js","./node_modules/echarts/lib/component/geo/GeoView.js","./node_modules/echarts/lib/component/graphic.js","./node_modules/echarts/lib/component/grid.js","./node_modules/echarts/lib/component/gridSimple.js","./node_modules/echarts/lib/component/helper/BrushController.js","./node_modules/echarts/lib/component/helper/BrushTargetManager.js","./node_modules/echarts/lib/component/helper/MapDraw.js","./node_modules/echarts/lib/component/helper/RoamController.js","./node_modules/echarts/lib/component/helper/brushHelper.js","./node_modules/echarts/lib/component/helper/cursorHelper.js","./node_modules/echarts/lib/component/helper/interactionMutex.js","./node_modules/echarts/lib/component/helper/listComponent.js","./node_modules/echarts/lib/component/helper/roamHelper.js","./node_modules/echarts/lib/component/helper/selectableMixin.js","./node_modules/echarts/lib/component/helper/sliderMove.js","./node_modules/echarts/lib/component/legend.js","./node_modules/echarts/lib/component/legendScroll.js","./node_modules/echarts/lib/component/legend/LegendModel.js","./node_modules/echarts/lib/component/legend/LegendView.js","./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","./node_modules/echarts/lib/component/legend/legendAction.js","./node_modules/echarts/lib/component/legend/legendFilter.js","./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","./node_modules/echarts/lib/component/markArea.js","./node_modules/echarts/lib/component/markLine.js","./node_modules/echarts/lib/component/markPoint.js","./node_modules/echarts/lib/component/marker/MarkAreaModel.js","./node_modules/echarts/lib/component/marker/MarkAreaView.js","./node_modules/echarts/lib/component/marker/MarkLineModel.js","./node_modules/echarts/lib/component/marker/MarkLineView.js","./node_modules/echarts/lib/component/marker/MarkPointModel.js","./node_modules/echarts/lib/component/marker/MarkPointView.js","./node_modules/echarts/lib/component/marker/MarkerModel.js","./node_modules/echarts/lib/component/marker/MarkerView.js","./node_modules/echarts/lib/component/marker/markerHelper.js","./node_modules/echarts/lib/component/parallel.js","./node_modules/echarts/lib/component/parallelAxis.js","./node_modules/echarts/lib/component/polar.js","./node_modules/echarts/lib/component/radar.js","./node_modules/echarts/lib/component/radar/RadarView.js","./node_modules/echarts/lib/component/radiusAxis.js","./node_modules/echarts/lib/component/singleAxis.js","./node_modules/echarts/lib/component/timeline.js","./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","./node_modules/echarts/lib/component/timeline/TimelineAxis.js","./node_modules/echarts/lib/component/timeline/TimelineModel.js","./node_modules/echarts/lib/component/timeline/TimelineView.js","./node_modules/echarts/lib/component/timeline/preprocessor.js","./node_modules/echarts/lib/component/timeline/timelineAction.js","./node_modules/echarts/lib/component/timeline/typeDefaulter.js","./node_modules/echarts/lib/component/title.js","./node_modules/echarts/lib/component/toolbox.js","./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","./node_modules/echarts/lib/component/toolbox/ToolboxView.js","./node_modules/echarts/lib/component/toolbox/featureManager.js","./node_modules/echarts/lib/component/toolbox/feature/Brush.js","./node_modules/echarts/lib/component/toolbox/feature/DataView.js","./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","./node_modules/echarts/lib/component/toolbox/feature/Restore.js","./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","./node_modules/echarts/lib/component/tooltip.js","./node_modules/echarts/lib/component/tooltip/TooltipContent.js","./node_modules/echarts/lib/component/tooltip/TooltipModel.js","./node_modules/echarts/lib/component/tooltip/TooltipRichContent.js","./node_modules/echarts/lib/component/tooltip/TooltipView.js","./node_modules/echarts/lib/component/visualMap.js","./node_modules/echarts/lib/component/visualMapContinuous.js","./node_modules/echarts/lib/component/visualMapPiecewise.js","./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","./node_modules/echarts/lib/component/visualMap/ContinuousView.js","./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","./node_modules/echarts/lib/component/visualMap/VisualMapView.js","./node_modules/echarts/lib/component/visualMap/helper.js","./node_modules/echarts/lib/component/visualMap/preprocessor.js","./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","./node_modules/echarts/lib/component/visualMap/visualEncoding.js","./node_modules/echarts/lib/component/visualMap/visualMapAction.js","./node_modules/echarts/lib/config.js","./node_modules/echarts/lib/coord/Axis.js","./node_modules/echarts/lib/coord/View.js","./node_modules/echarts/lib/coord/axisDefault.js","./node_modules/echarts/lib/coord/axisHelper.js","./node_modules/echarts/lib/coord/axisModelCommonMixin.js","./node_modules/echarts/lib/coord/axisModelCreator.js","./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","./node_modules/echarts/lib/coord/calendar/Calendar.js","./node_modules/echarts/lib/coord/calendar/CalendarModel.js","./node_modules/echarts/lib/coord/calendar/prepareCustom.js","./node_modules/echarts/lib/coord/cartesian/Axis2D.js","./node_modules/echarts/lib/coord/cartesian/AxisModel.js","./node_modules/echarts/lib/coord/cartesian/Cartesian.js","./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","./node_modules/echarts/lib/coord/cartesian/Grid.js","./node_modules/echarts/lib/coord/cartesian/GridModel.js","./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","./node_modules/echarts/lib/coord/geo/Geo.js","./node_modules/echarts/lib/coord/geo/GeoModel.js","./node_modules/echarts/lib/coord/geo/Region.js","./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","./node_modules/echarts/lib/coord/geo/fix/nanhai.js","./node_modules/echarts/lib/coord/geo/fix/textCoord.js","./node_modules/echarts/lib/coord/geo/geoCreator.js","./node_modules/echarts/lib/coord/geo/geoJSONLoader.js","./node_modules/echarts/lib/coord/geo/geoSVGLoader.js","./node_modules/echarts/lib/coord/geo/geoSourceManager.js","./node_modules/echarts/lib/coord/geo/mapDataStorage.js","./node_modules/echarts/lib/coord/geo/parseGeoJson.js","./node_modules/echarts/lib/coord/geo/prepareCustom.js","./node_modules/echarts/lib/coord/parallel/AxisModel.js","./node_modules/echarts/lib/coord/parallel/Parallel.js","./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","./node_modules/echarts/lib/coord/parallel/ParallelModel.js","./node_modules/echarts/lib/coord/parallel/parallelCreator.js","./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","./node_modules/echarts/lib/coord/polar/AngleAxis.js","./node_modules/echarts/lib/coord/polar/AxisModel.js","./node_modules/echarts/lib/coord/polar/Polar.js","./node_modules/echarts/lib/coord/polar/PolarModel.js","./node_modules/echarts/lib/coord/polar/RadiusAxis.js","./node_modules/echarts/lib/coord/polar/polarCreator.js","./node_modules/echarts/lib/coord/polar/prepareCustom.js","./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","./node_modules/echarts/lib/coord/radar/Radar.js","./node_modules/echarts/lib/coord/radar/RadarModel.js","./node_modules/echarts/lib/coord/single/AxisModel.js","./node_modules/echarts/lib/coord/single/Single.js","./node_modules/echarts/lib/coord/single/SingleAxis.js","./node_modules/echarts/lib/coord/single/prepareCustom.js","./node_modules/echarts/lib/coord/single/singleAxisHelper.js","./node_modules/echarts/lib/coord/single/singleCreator.js","./node_modules/echarts/lib/data/DataDiffer.js","./node_modules/echarts/lib/data/DataDimensionInfo.js","./node_modules/echarts/lib/data/Graph.js","./node_modules/echarts/lib/data/List.js","./node_modules/echarts/lib/data/OrdinalMeta.js","./node_modules/echarts/lib/data/Source.js","./node_modules/echarts/lib/data/Tree.js","./node_modules/echarts/lib/data/helper/completeDimensions.js","./node_modules/echarts/lib/data/helper/createDimensions.js","./node_modules/echarts/lib/data/helper/dataProvider.js","./node_modules/echarts/lib/data/helper/dataStackHelper.js","./node_modules/echarts/lib/data/helper/dimensionHelper.js","./node_modules/echarts/lib/data/helper/linkList.js","./node_modules/echarts/lib/data/helper/sourceHelper.js","./node_modules/echarts/lib/data/helper/sourceType.js","./node_modules/echarts/lib/echarts.js","./node_modules/echarts/lib/export.js","./node_modules/echarts/lib/helper.js","./node_modules/echarts/lib/lang.js","./node_modules/echarts/lib/layout/barGrid.js","./node_modules/echarts/lib/layout/barPolar.js","./node_modules/echarts/lib/layout/points.js","./node_modules/echarts/lib/loading/default.js","./node_modules/echarts/lib/model/Component.js","./node_modules/echarts/lib/model/Global.js","./node_modules/echarts/lib/model/Model.js","./node_modules/echarts/lib/model/OptionManager.js","./node_modules/echarts/lib/model/Series.js","./node_modules/echarts/lib/model/globalDefault.js","./node_modules/echarts/lib/model/mixin/areaStyle.js","./node_modules/echarts/lib/model/mixin/boxLayout.js","./node_modules/echarts/lib/model/mixin/colorPalette.js","./node_modules/echarts/lib/model/mixin/dataFormat.js","./node_modules/echarts/lib/model/mixin/itemStyle.js","./node_modules/echarts/lib/model/mixin/lineStyle.js","./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","./node_modules/echarts/lib/model/mixin/textStyle.js","./node_modules/echarts/lib/model/referHelper.js","./node_modules/echarts/lib/preprocessor/backwardCompat.js","./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","./node_modules/echarts/lib/processor/dataFilter.js","./node_modules/echarts/lib/processor/dataSample.js","./node_modules/echarts/lib/processor/dataStack.js","./node_modules/echarts/lib/scale/Interval.js","./node_modules/echarts/lib/scale/Log.js","./node_modules/echarts/lib/scale/Ordinal.js","./node_modules/echarts/lib/scale/Scale.js","./node_modules/echarts/lib/scale/Time.js","./node_modules/echarts/lib/scale/helper.js","./node_modules/echarts/lib/stream/Scheduler.js","./node_modules/echarts/lib/stream/task.js","./node_modules/echarts/lib/theme/dark.js","./node_modules/echarts/lib/theme/light.js","./node_modules/echarts/lib/util/animation.js","./node_modules/echarts/lib/util/clazz.js","./node_modules/echarts/lib/util/component.js","./node_modules/echarts/lib/util/format.js","./node_modules/echarts/lib/util/graphic.js","./node_modules/echarts/lib/util/layout.js","./node_modules/echarts/lib/util/model.js","./node_modules/echarts/lib/util/number.js","./node_modules/echarts/lib/util/shape/sausage.js","./node_modules/echarts/lib/util/symbol.js","./node_modules/echarts/lib/util/throttle.js","./node_modules/echarts/lib/view/Chart.js","./node_modules/echarts/lib/view/Component.js","./node_modules/echarts/lib/visual/LegendVisualProvider.js","./node_modules/echarts/lib/visual/VisualMapping.js","./node_modules/echarts/lib/visual/aria.js","./node_modules/echarts/lib/visual/dataColor.js","./node_modules/echarts/lib/visual/seriesColor.js","./node_modules/echarts/lib/visual/symbol.js","./node_modules/echarts/lib/visual/visualDefault.js","./node_modules/echarts/lib/visual/visualSolution.js","./node_modules/zrender/lib/Element.js","./node_modules/zrender/lib/Handler.js","./node_modules/zrender/lib/Layer.js","./node_modules/zrender/lib/Painter.js","./node_modules/zrender/lib/Storage.js","./node_modules/zrender/lib/animation/Animation.js","./node_modules/zrender/lib/animation/Animator.js","./node_modules/zrender/lib/animation/Clip.js","./node_modules/zrender/lib/animation/easing.js","./node_modules/zrender/lib/animation/requestAnimationFrame.js","./node_modules/zrender/lib/config.js","./node_modules/zrender/lib/contain/arc.js","./node_modules/zrender/lib/contain/cubic.js","./node_modules/zrender/lib/contain/line.js","./node_modules/zrender/lib/contain/path.js","./node_modules/zrender/lib/contain/polygon.js","./node_modules/zrender/lib/contain/quadratic.js","./node_modules/zrender/lib/contain/text.js","./node_modules/zrender/lib/contain/util.js","./node_modules/zrender/lib/contain/windingLine.js","./node_modules/zrender/lib/container/Group.js","./node_modules/zrender/lib/core/BoundingRect.js","./node_modules/zrender/lib/core/GestureMgr.js","./node_modules/zrender/lib/core/LRU.js","./node_modules/zrender/lib/core/PathProxy.js","./node_modules/zrender/lib/core/arrayDiff2.js","./node_modules/zrender/lib/core/bbox.js","./node_modules/zrender/lib/core/curve.js","./node_modules/zrender/lib/core/dom.js","./node_modules/zrender/lib/core/env.js","./node_modules/zrender/lib/core/event.js","./node_modules/zrender/lib/core/fourPointsTransform.js","./node_modules/zrender/lib/core/guid.js","./node_modules/zrender/lib/core/log.js","./node_modules/zrender/lib/core/matrix.js","./node_modules/zrender/lib/core/timsort.js","./node_modules/zrender/lib/core/util.js","./node_modules/zrender/lib/core/vector.js","./node_modules/zrender/lib/dom/HandlerProxy.js","./node_modules/zrender/lib/graphic/CompoundPath.js","./node_modules/zrender/lib/graphic/Displayable.js","./node_modules/zrender/lib/graphic/Gradient.js","./node_modules/zrender/lib/graphic/Image.js","./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","./node_modules/zrender/lib/graphic/LinearGradient.js","./node_modules/zrender/lib/graphic/Path.js","./node_modules/zrender/lib/graphic/Pattern.js","./node_modules/zrender/lib/graphic/RadialGradient.js","./node_modules/zrender/lib/graphic/Style.js","./node_modules/zrender/lib/graphic/Text.js","./node_modules/zrender/lib/graphic/constant.js","./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","./node_modules/zrender/lib/graphic/helper/fixShadow.js","./node_modules/zrender/lib/graphic/helper/image.js","./node_modules/zrender/lib/graphic/helper/poly.js","./node_modules/zrender/lib/graphic/helper/roundRect.js","./node_modules/zrender/lib/graphic/helper/smoothBezier.js","./node_modules/zrender/lib/graphic/helper/smoothSpline.js","./node_modules/zrender/lib/graphic/helper/subPixelOptimize.js","./node_modules/zrender/lib/graphic/helper/text.js","./node_modules/zrender/lib/graphic/mixin/RectText.js","./node_modules/zrender/lib/graphic/shape/Arc.js","./node_modules/zrender/lib/graphic/shape/BezierCurve.js","./node_modules/zrender/lib/graphic/shape/Circle.js","./node_modules/zrender/lib/graphic/shape/Ellipse.js","./node_modules/zrender/lib/graphic/shape/Line.js","./node_modules/zrender/lib/graphic/shape/Polygon.js","./node_modules/zrender/lib/graphic/shape/Polyline.js","./node_modules/zrender/lib/graphic/shape/Rect.js","./node_modules/zrender/lib/graphic/shape/Ring.js","./node_modules/zrender/lib/graphic/shape/Sector.js","./node_modules/zrender/lib/mixin/Animatable.js","./node_modules/zrender/lib/mixin/Draggable.js","./node_modules/zrender/lib/mixin/Eventful.js","./node_modules/zrender/lib/mixin/Transformable.js","./node_modules/zrender/lib/svg/Painter.js","./node_modules/zrender/lib/svg/core.js","./node_modules/zrender/lib/svg/graphic.js","./node_modules/zrender/lib/svg/helper/ClippathManager.js","./node_modules/zrender/lib/svg/helper/Definable.js","./node_modules/zrender/lib/svg/helper/GradientManager.js","./node_modules/zrender/lib/svg/helper/ShadowManager.js","./node_modules/zrender/lib/svg/svg.js","./node_modules/zrender/lib/tool/color.js","./node_modules/zrender/lib/tool/parseSVG.js","./node_modules/zrender/lib/tool/path.js","./node_modules/zrender/lib/tool/transformPath.js","./node_modules/zrender/lib/vml/Painter.js","./node_modules/zrender/lib/vml/core.js","./node_modules/zrender/lib/vml/graphic.js","./node_modules/zrender/lib/vml/vml.js","./node_modules/zrender/lib/zrender.js"],"names":[],"mappings":";;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,0BAAe;;AAEtC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,6BAAkB;;AAE1B,mBAAO,CAAC,4BAAiB;;AAEzB,mBAAO,CAAC,4BAAiB;;AAEzB,mBAAO,CAAC,+BAAqB;;AAE7B,mBAAO,CAAC,8BAAmB;;AAE3B,mBAAO,CAAC,4BAAiB;;AAEzB,mBAAO,CAAC,6BAAkB;;AAE1B,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,8BAAmB;;AAE3B,mBAAO,CAAC,8BAAmB;;AAE3B,mBAAO,CAAC,+BAAoB;;AAE5B,mBAAO,CAAC,iCAAsB;;AAE9B,mBAAO,CAAC,+BAAoB;;AAE5B,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,6BAAmB;;AAE3B,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,oCAA0B;;AAElC,mBAAO,CAAC,mCAAwB;;AAEhC,mBAAO,CAAC,iCAAsB;;AAE9B,mBAAO,CAAC,+BAAoB;;AAE5B,mBAAO,CAAC,iCAAsB;;AAE9B,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,8BAAqB;;AAE7B,mBAAO,CAAC,oCAA4B;;AAEpC,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,wCAA6B;;AAErC,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,yCAA8B;;AAEtC,mBAAO,CAAC,mCAAwB;;AAEhC,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,0CAAgC;;AAExC,mBAAO,CAAC,2CAAgC;;AAExC,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,gDAAqC;;AAE7C,mBAAO,CAAC,+CAAoC;;AAE5C,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,gCAAqB,E;;;;;;;;;;;ACrI7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uPAAuP;;AAEvP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0B;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,yBAAc;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D;AAC/D;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,CAAC,E;;;;;;;;;;;ACnFD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,0BAA0B;AACrC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,uB;;;;;;;;;;;ACpF3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,eAAe,mBAAO,CAAC,8BAAmB;;AAE1C;AACA;;AAEA,mBAAO,CAAC,mCAAyB;;AAEjC,mBAAO,CAAC,4BAAiB;;AAEzB,mBAAO,CAAC,0BAAe;;AAEvB,mBAAO,CAAC,oCAAyB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;ACjED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,cAAc,mBAAO,CAAC,qBAAU;;AAEhC;;AAEA,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,WAAW,mBAAO,CAAC,oCAA0B;;AAE7C,YAAY,mBAAO,CAAC,wCAA6B;;AAEjD,gBAAgB,mBAAO,CAAC,gCAAqB;;AAE7C;;AAEA,kCAAkC,mBAAO,CAAC,iDAAsC;;AAEhF;;AAEA,cAAc,mBAAO,CAAC,oCAA0B;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;;AAEA;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,oDAAoD;;AAEpD,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,2DAA2D;;AAE3D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA,0CAA0C;;AAE1C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,yCAAyC;;AAEzC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,KAAK;AACL,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,yEAAyE;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uCAAuC;;AAEvC;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACxrBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,0BAA0B,mBAAO,CAAC,0CAA+B;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;;AAEA,cAAc,mBAAO,CAAC,qBAAU;;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,6CAA6C;;AAE7C;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC,EAAE;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA,iCAAiC;;AAEjC,gHAAgH;;AAEhH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE;AACpE;;AAEA,kDAAkD;AAClD;;AAEA;AACA,iHAAiH;AACjH;;AAEA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iJAAiJ;;AAEjJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA,GAAG;;AAEH,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK,wBAAwB;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,kEAAkE;;AAElE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,4CAA4C;;AAE5C;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACnqBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAO,CAAC,8CAAmC;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0B;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,mBAAmB,mBAAO,CAAC,kCAAuB;;AAElD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,Y;;;;;;;;;;;AC/DhB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,mCAAyB;;AAEjC,mBAAO,CAAC,kCAAuB;;AAE/B,oBAAoB,mBAAO,CAAC,oCAAyB;;AAErD,oBAAoB,mBAAO,CAAC,mCAAyB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,wBAAwB,mBAAO,CAAC,uCAA4B;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,0B;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,WAAW,mBAAO,CAAC,oCAA0B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sDAAsD;;AAEtD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA,UAAU,OAAO;AACjB;AACA;;AAEA;;AAEA,UAAU,iBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0B;;;;;;;;;;;ACtKA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC1MA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,4CAAiC;;AAEzC,mBAAO,CAAC,0CAA+B;;AAEvC,mBAAmB,mBAAO,CAAC,uCAA4B;;AAEvD,wBAAwB,mBAAO,CAAC,4CAAiC;;AAEjE,wBAAwB,mBAAO,CAAC,2CAAiC;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,wBAAwB,mBAAO,CAAC,uCAA4B;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,0B;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,WAAW,mBAAO,CAAC,oCAA0B;;AAE7C,kCAAkC,mBAAO,CAAC,iDAAsC;;AAEhF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+FAA+F;AAC/F;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC3TA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,+BAAoB;;AAE3C;;AAEA,0BAA0B,mBAAO,CAAC,0CAA+B;;AAEjE,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACnNA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,mBAAO,CAAC,0CAA+B;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,4BAAiB;;AAE3C,mBAAmB,mBAAO,CAAC,iCAAsB;;AAEjD;;AAEA,0BAA0B,mBAAO,CAAC,yCAA8B;;AAEhE,eAAe,mBAAO,CAAC,8BAAmB;;AAE1C;;AAEA,iBAAiB,mBAAO,CAAC,+BAAoB;;AAE7C,kBAAkB,mBAAO,CAAC,4BAAiB;;AAE3C,YAAY,mBAAO,CAAC,2BAAgB;;AAEpC,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC,kCAAkC,mBAAO,CAAC,gDAAqC;;AAE/E;;AAEA,yBAAyB,mBAAO,CAAC,6CAAkC;;AAEnE,iBAAiB,mBAAO,CAAC,uCAA4B;;AAErD,wBAAwB,mBAAO,CAAC,0CAA+B;;AAE/D,mBAAmB,mBAAO,CAAC,yCAA8B;;AAEzD,sBAAsB,mBAAO,CAAC,4CAAiC;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC,gBAAgB,OAAO,EAAE,WAAW,IAAI;AACxC,2CAA2C;AAC3C,iDAAiD;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK,YAAY;;AAEjB;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,SAAS;AACT;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sCAAsC;;AAEtC;AACA;AACA,GAAG;AACH,iCAAiC;AACjC;AACA,GAAG;AACH,gCAAgC;AAChC;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;;AAEA,oEAAoE;AACpE;;AAEA,6CAA6C;AAC7C;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,yBAAyB;AAC5B;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,OAAO;AACpB,cAAc,cAAc;AAC5B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wCAAwC;AACzD;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO,EAAE,4BAA4B;AACnD;;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB,cAAc;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,6BAA6B;AAC7B;;AAEA;;AAEA,QAAQ,gBAAgB;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;AC7rBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,gDAAqC;;AAE7C,mBAAO,CAAC,8CAAmC;;AAE3C,mBAAmB,mBAAO,CAAC,4BAAkB;;AAE7C,mBAAmB,mBAAO,CAAC,6BAAkB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sD;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,mBAAO,CAAC,0CAA+B;;AAEjE,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C,mBAAmB,mBAAO,CAAC,mCAAwB;;AAEnD,aAAa,mBAAO,CAAC,mCAAyB;;AAE9C,mBAAmB,mBAAO,CAAC,gCAAqB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,iCAAuB;;AAE/B,mBAAO,CAAC,gCAAqB;;AAE7B,gBAAgB,mBAAO,CAAC,gCAAqB;;AAE7C,mBAAmB,mBAAO,CAAC,kCAAuB;;AAElD,iBAAiB,mBAAO,CAAC,oCAAyB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,uBAAuB,mBAAO,CAAC,uCAA4B;;AAE3D,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA,oBAAoB,mBAAO,CAAC,2CAAgC;;AAE5D;;AAEA,2BAA2B,mBAAO,CAAC,8CAAmC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;;AAEA,8HAA8H;;AAE9H;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC1IA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C,qBAAqB;;AAErB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACzMA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC1XA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,8BAAmB,E;;;;;;;;;;;ACrB3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,uCAA4B;;AAE3D,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,MAAM;AAC7C,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,SAAS;AACT,OAAO;;;AAGP;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACvXA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,oCAA0B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,8BAAmB;;AAE3B,mBAAO,CAAC,gCAAqB;;AAE7B,qBAAqB,mBAAO,CAAC,mCAAwB;;AAErD,mBAAmB,mBAAO,CAAC,4BAAkB;;AAE7C,qBAAqB,mBAAO,CAAC,mCAAwB;;AAErD,iBAAiB,mBAAO,CAAC,+BAAoB;;AAE7C,mBAAmB,mBAAO,CAAC,iCAAsB;;AAEjD,qBAAqB,mBAAO,CAAC,mCAAwB;;AAErD,kBAAkB,mBAAO,CAAC,gCAAqB;;AAE/C,iBAAiB,mBAAO,CAAC,+BAAoB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA,CAAC,E;;;;;;;;;;;ACvED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,8BAA8B,mBAAO,CAAC,4CAAmC;;AAEzE,2BAA2B,mBAAO,CAAC,8CAAmC;;AAEtE,+BAA+B,mBAAO,CAAC,8CAAmC;;AAE1E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,sDAAsD;;AAEtD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,KAAK;AACL,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC/RA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C,eAAe,mBAAO,CAAC,+BAAoB;;AAE3C,qBAAqB,mBAAO,CAAC,kDAAuC;;AAEpE,iBAAiB,mBAAO,CAAC,8CAAmC;;AAE5D,oBAAoB,mBAAO,CAAC,gDAAqC;;AAEjE;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC,mBAAmB,mBAAO,CAAC,0BAAe;;AAE1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACxZA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C,mBAAmB,mBAAO,CAAC,0BAAe;;AAE1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,WAAW;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA,iBAAiB,QAAQ;AACzB;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA+C;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA,iFAAiF;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iFAAiF;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,0BAA0B;AAC/C;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,mBAAO,CAAC,mCAAwB;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C,mBAAmB,mBAAO,CAAC,0BAAe;;AAE1C;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,+BAA+B,mBAAO,CAAC,8CAAmC;;AAE1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,OAAO;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,kB;;;;;;;;;;;AC7JtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,6BAAkB;;AAErC,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,WAAW,mBAAO,CAAC,kCAAuB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yDAAyD;;AAEzD,2DAA2D;;AAE3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;;AAE9E;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,0B;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;;AAE3E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD,0DAA0D,mBAAmB,kBAAkB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP,qBAAqB,UAAU;AAC/B;;AAEA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA,OAAO;AACP;;;AAGA,qBAAqB,UAAU;AAC/B;;AAEA,2BAA2B,UAAU;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,UAAU;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,e;;;;;;;;;;;ACtLnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0BAAe;;AAE1C;;AAEA,0BAA0B,mBAAO,CAAC,iCAAsB;;AAExD;;AAEA,4BAA4B,mBAAO,CAAC,mCAAwB;;AAE5D;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,+BAA+B,mBAAO,CAAC,8CAAmC;;AAE1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA,2DAA2D;;AAE3D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;;;AAGX;AACA,SAAS;AACT;;AAEA;AACA,oDAAoD;;AAEpD;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACtMA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,kBAAkB,mBAAO,CAAC,oCAAyB;;AAEnD;;AAEA,mBAAO,CAAC,+CAAoC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC,E;;;;;;;;;;;ACtED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;AAC1B,qBAAqB,iB;;;;;;;;;;;AChErB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA,0BAA0B,mBAAO,CAAC,iCAAsB;;AAExD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,6BAA6B,0BAA0B;AACvD;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT,mBAAmB,eAAe;AAClC;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,+BAA+B,mBAAO,CAAC,8CAAmC;;AAE1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA,oBAAoB;AACpB,wBAAwB,oB;;;;;;;;;;;AC5ExB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,kCAAuB,E;;;;;;;;;;;ACrB/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA,uBAAuB;;AAEvB,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yEAAyE;;AAEzE;AACA,+EAA+E;;AAE/E;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,uFAAuF;;AAEvF;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,0BAA0B,mBAAO,CAAC,0CAA+B;;AAEjE,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,QAAQ;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,WAAW;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,kFAAkF;AAClF,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACvRA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,WAAW,mBAAO,CAAC,mBAAQ;;AAE3B,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,oDAAoD;;AAEpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;AC1OA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,uBAAY;;AAEnC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD;;AAEnD;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA,KAAK;;;AAGL;AACA,GAAG;AACH,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,eAAe,mBAAO,CAAC,+BAAoB;;AAE3C;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,gBAAgB,mBAAO,CAAC,qBAAU;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,sFAAsF;;AAEtF;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,oCAAoC;;AAEpC;;AAEA,iBAAiB,4BAA4B;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;ACrQA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,6BAA6B,mBAAO,CAAC,uDAA4C;;AAEjF,kBAAkB,mBAAO,CAAC,qCAA0B;;AAEpD,uBAAuB,mBAAO,CAAC,0CAA+B;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;;AAEA;AACA;;AAEA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;;AAEA;AACA;AACA;;AAEA,yBAAyB,WAAW;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH,gCAAgC;;;AAGhC;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC/QA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,6BAA6B,mBAAO,CAAC,uDAA4C;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;;AAE3B,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA,yCAAyC,UAAU;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,2BAA2B;AAC3B;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yEAAyE;;AAEzE,iDAAiD;;AAEjD,4EAA4E;;AAE5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC5SA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,oCAAyB;;AAE9C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,eAAe,mBAAO,CAAC,uBAAY;;AAEnC,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oIAAoI;;AAEpI;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;;;AAGA;AACA;;AAEA;AACA;;AAEA,+BAA+B;;AAE/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6DAA6D;AAC7D;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mCAAmC;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,yDAAyD;;AAEzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;AC/dA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,gBAAgB,mBAAO,CAAC,mBAAQ;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;;;AAGA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,sBAAsB;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AChMA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,mBAAmB,mBAAO,CAAC,0BAAe;;AAE1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,2BAA2B;AACtC,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0GAA0G;AAC1G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,qCAAqC;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wDAAwD;;AAExD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA,mCAAmC;;AAEnC,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA,0B;;;;;;;;;;;AClYA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,gBAAgB,mBAAO,CAAC,qBAAU;;AAElC,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;;;AAGL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,sBAAsB;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,0BAA0B;AAC1B,2BAA2B;AAC3B,sBAAsB,kB;;;;;;;;;;;AC1HtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,YAAY,mBAAO,CAAC,6BAAkB;;AAEtC,eAAe,mBAAO,CAAC,uCAA4B;;AAEnD,uBAAuB,mBAAO,CAAC,+CAAoC;;AAEnE,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD,0BAA0B,mBAAO,CAAC,kCAAuB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,4GAA4G;AAC5G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACxHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,uBAAuB,mBAAO,CAAC,+CAAoC;;AAEnE,kBAAkB,mBAAO,CAAC,wCAA8B;;AAExD;;AAEA,uBAAuB,mBAAO,CAAC,8CAAmC;;AAElE;;AAEA,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD,mBAAmB,mBAAO,CAAC,mCAAyB;;AAEpD;;AAEA,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,uBAAuB,mBAAO,CAAC,8CAAmC;;AAElE;;AAEA,oBAAoB,mBAAO,CAAC,2CAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,iCAAiC;AAC5C,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC1KA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,+CAAoC;;AAEnE,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,WAAW,4BAA4B;AACvC,WAAW,6BAA6B;AACxC;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG,aAAa;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;AACjB;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,CAAC,gBAAgB,E;;;;;;;;;;;AC/DjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,2CAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA,GAAG;AACH;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,mB;;;;;;;;;;;ACjEvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,WAAW,OAAO;AAClB;AACA;;;AAGA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD,WAAW,6CAA6C;AACxD,WAAW,iCAAiC;AAC5C,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD,WAAW,6CAA6C;AACxD,WAAW,iCAAiC;AAC5C,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,wCAAwC;;AAExC;AACA,kDAAkD;;AAElD;;AAEA;AACA;AACA;AACA;AACA,qEAAqE;;AAErE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,yBAAyB;AACzB,iCAAiC;AACjC,2BAA2B,uB;;;;;;;;;;;AChQ3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B;AAC1B,qBAAqB;AACrB,qBAAqB;AACrB,wBAAwB,oB;;;;;;;;;;;ACtGxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,uCAA4B;;AAE3D,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,uBAAuB,mBAAO,CAAC,8CAAmC;;AAElE;;AAEA,oBAAoB,mBAAO,CAAC,2CAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,oDAAoD;;AAEpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oB;;;;;;;;;;;AChJxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,8BAAmB;;AAE3B,mBAAO,CAAC,4BAAiB;;AAEzB,mBAAmB,mBAAO,CAAC,4BAAkB;;AAE7C,mBAAmB,mBAAO,CAAC,6BAAkB;;AAE7C,iBAAiB,mBAAO,CAAC,oCAAyB;;AAElD,mBAAO,CAAC,oCAAyB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C,oF;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,0BAA0B,mBAAO,CAAC,0CAA+B;;AAEjE,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,wBAAwB,mBAAO,CAAC,gCAAqB;;AAErD,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,YAAY,mBAAO,CAAC,mBAAQ;;AAE5B;AACA;;AAEA,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,cAAc,mBAAO,CAAC,oBAAU;;AAEhC;AACA;;AAEA,kCAAkC,mBAAO,CAAC,iDAAsC;;AAEhF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,4EAA4E;AACvF,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,uBAAuB;AAClC;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA,uCAAuC,WAAW;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG,EAAE;AACL;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2EAA2E;;AAE3E;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG;;AAEtG;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;;;AAGP,8EAA8E;AAC9E;;AAEA;AACA;AACA;AACA,OAAO,EAAE;AACT;;AAEA;AACA;AACA,OAAO,EAAE;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,+BAA+B;AAC5C,aAAa,uBAAuB;AACpC;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,+BAA+B;AAC5C,aAAa,uBAAuB;AACpC,aAAa,uBAAuB;AACpC;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,kCAAkC;;;AAGlC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACjuBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,8CAAmC;;AAElE;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B,yBAAyB,qB;;;;;;;;;;;ACvIzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,oBAAU;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,KAAK;;;AAGL;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC7LA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,oCAA0B;;AAE7C,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C,wBAAwB,mBAAO,CAAC,yDAA8C;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;;AAGX;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA,sEAAsE;;AAEtE;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB;AAChB,eAAe,W;;;;;;;;;;;AC3Xf;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,8BAAmB;;AAE3B,kBAAkB,mBAAO,CAAC,gCAAqB;;AAE/C,kBAAkB,mBAAO,CAAC,gCAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA,8BAA8B;;AAE9B,+EAA+E;;AAE/E;;AAEA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC1UA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,eAAe,mBAAO,CAAC,+BAAoB;;AAE3C,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C,WAAW,mBAAO,CAAC,2BAAgB;;AAEnC,eAAe,mBAAO,CAAC,+BAAoB;;AAE3C,qBAAqB,mBAAO,CAAC,qCAA0B;;AAEvD,oBAAoB,mBAAO,CAAC,oCAAyB;;AAErD,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,kCAAkC,mBAAO,CAAC,iDAAsC;;AAEhF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,0BAA0B;;AAE1B;AACA,GAAG;AACH;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACpMA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,mBAAO,CAAC,0CAA+B;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,gBAAgB;AACpD;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA,kCAAkC,gBAAgB;AAClD;;AAEA;AACA;AACA;;AAEA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,kCAAkC,gBAAgB;AAClD;AACA;AACA;;AAEA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,4BAAiB;;AAEzB,mBAAO,CAAC,0BAAe;;AAEvB,mBAAO,CAAC,6BAAmB;;AAE3B,mBAAO,CAAC,oCAAyB;;AAEjC,sBAAsB,mBAAO,CAAC,kCAAuB;;AAErD,gBAAgB,mBAAO,CAAC,4BAAiB;;AAEzC,uBAAuB,mBAAO,CAAC,mCAAwB;;AAEvD,qBAAqB,mBAAO,CAAC,iCAAsB;;AAEnD,6BAA6B,mBAAO,CAAC,6CAAkC;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC,G;;;;;;;;;;;ACzED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,uBAAuB,mBAAO,CAAC,uCAA4B;;AAE3D,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;;AAEA,0BAA0B,mBAAO,CAAC,mDAAwC;;AAE1E,oBAAoB,mBAAO,CAAC,2CAAgC;;AAE5D;;AAEA,uBAAuB,mBAAO,CAAC,6CAAkC;;AAEjE,oBAAoB,mBAAO,CAAC,2CAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA,0B;;;;;;;;;;;ACxQA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,cAAc,mBAAO,CAAC,2CAAgC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO,EAAE;AACT;AACA;AACA,cAAc,iCAAiC,QAAQ,qBAAqB,GAAG,YAAY,UAAU,EAAE;AACvG,cAAc,iCAAiC,QAAQ,qBAAqB,GAAG,YAAY,UAAU;AACrG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,KAAK;AACL;AACA;AACA,KAAK,SAAS;;AAEd;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK,EAAE;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACjOA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,iCAAiC;AAC5C,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,uBAAuB;AAC1C;AACA,KAAK;;;AAGL,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,mCAAyB;;AAEjC,qBAAqB,mBAAO,CAAC,oCAA2B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,0BAA0B,mBAAO,CAAC,0CAA+B;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACnIA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,4BAA4B;AACtE;AACA;AACA;AACA;AACA,GAAG;AACH,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB,0DAA0D;;AAE1D;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,2EAA2E;AAC3E;;AAEA;AACA,0B;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAO,CAAC,mCAAyB;;AAEjC,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,mCAAwB;;AAEhC,eAAe,mBAAO,CAAC,8BAAmB;;AAE1C;;AAEA,mBAAmB,mBAAO,CAAC,4BAAkB;;AAE7C,mBAAO,CAAC,oCAAyB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kE;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAO,CAAC,4BAAiB;;AAEzB,mBAAO,CAAC,0BAAe;;AAEvB,6BAA6B,mBAAO,CAAC,6CAAkC;;AAEvE,gBAAgB,mBAAO,CAAC,gCAAqB;;AAE7C,gBAAgB,mBAAO,CAAC,4BAAiB;;AAEzC,iBAAiB,mBAAO,CAAC,oCAAyB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,6C;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,uBAAuB,mBAAO,CAAC,uCAA4B;;AAE3D,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,0BAA0B,mBAAO,CAAC,mDAAwC;;AAE1E,oBAAoB,mBAAO,CAAC,2CAAgC;;AAE5D;;AAEA,oBAAoB,mBAAO,CAAC,2CAAgC;;AAE5D;;AAEA,2BAA2B,mBAAO,CAAC,8CAAmC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,uEAAuE;;AAEvE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,0B;;;;;;;;;;;AC1MA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,4BAA4B;AACvC,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oDAAoD;;AAEpD,gKAAgK;;AAEhK;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,qBAAqB,6CAA6C;AAClE;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;AACH,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACpYA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,qCAA0B;;AAEpD,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER,oCAAoC,OAAO;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACjWA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;;AAEA,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,oCAAoC;;AAEpC;AACA;AACA;AACA,+DAA+D;;AAE/D;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK,EAAE;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACrLA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,+BAAoB;;AAE5B,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,8BAAmB;;AAE3B,gBAAgB,mBAAO,CAAC,gCAAqB;;AAE7C,mBAAmB,mBAAO,CAAC,4BAAkB;;AAE7C,kBAAkB,mBAAO,CAAC,gCAAqB;;AAE/C,iBAAiB,mBAAO,CAAC,oCAAyB;;AAElD,qBAAqB,mBAAO,CAAC,mCAAwB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,uBAAuB,mBAAO,CAAC,uCAA4B;;AAE3D,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,2BAA2B,mBAAO,CAAC,8CAAmC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,0BAA0B;AAC/C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACzNA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,oCAAoC;;AAE3C;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAmB,mBAAO,CAAC,kCAAuB;;AAElD,mBAAmB,mBAAO,CAAC,kCAAuB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,8BAA8B,mBAAO,CAAC,4CAAmC;;AAEzE,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,yBAAyB;AACvC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oDAAoD;;AAEpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,CAAC,EAAE;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,0B;;;;;;;;;;;ACncA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,mBAAO,CAAC,+CAAoC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC,E;;;;;;;;;;;ACtDD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC,YAAY,iCAAiC;AAC7C;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA,uBAAuB;;AAEvB,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;;AAEA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;;AAEP,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA,SAAS;;AAET,uBAAuB,yBAAyB;AAChD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,+CAA+C;AAC1D;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,+CAA+C;AAC1D;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,2DAA2D;;AAE3D;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,+CAA+C;AAC1D;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,+CAA+C;AAC1D;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC5kBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,uCAA4B;;AAExD,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAmB,mBAAO,CAAC,4BAAkB;;AAE7C,mBAAmB,mBAAO,CAAC,6BAAkB;;AAE7C,mBAAO,CAAC,oCAAyB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI,E;;;;;;;;;;;ACrEJ;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,mBAAO,CAAC,0CAA+B;;AAEjE,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C,sBAAsB,mBAAO,CAAC,sCAA2B;;AAEzD,mBAAmB,mBAAO,CAAC,gCAAqB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;AACA,qCAAqC;AACrC;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC,E;;;;;;;;;;;AC5HD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,sCAA2B;;AAEnC,gBAAgB,mBAAO,CAAC,gCAAqB;;AAE7C,qBAAqB,mBAAO,CAAC,sCAA2B;;AAExD,iBAAiB,mBAAO,CAAC,oCAAyB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gE;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,8DAA8D;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,OAAO;AACnB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACzYA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,kBAAkB,mBAAO,CAAC,iCAAsB;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,QAAQ;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C,iBAAiB,mBAAO,CAAC,kCAAuB;;AAEhD,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qFAAqF;;AAErF;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACrPA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,iCAAsB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;ACvGD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,yBAAyB;AACpC;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,0B;;;;;;;;;;;ACtNA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,iCAAyB;;AAEjC,mBAAO,CAAC,0CAA+B;;AAEvC,mBAAO,CAAC,wCAA6B;;AAErC,uBAAuB,mBAAO,CAAC,0CAA+B;;AAE9D,uBAAuB,mBAAO,CAAC,0CAA+B;;AAE9D,iBAAiB,mBAAO,CAAC,oCAAyB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oD;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,uBAAuB,mBAAO,CAAC,+CAAoC;;AAEnE,uBAAuB,mBAAO,CAAC,8CAAmC;;AAElE;;AAEA,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,2BAA2B,mBAAO,CAAC,8CAAmC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA,mBAAmB,cAAc;AACjC;;AAEA,qBAAqB,gCAAgC;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc,2BAA2B;AACzC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,+CAA+C;;AAE/C;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,cAAc,sBAAsB;AACpC,aAAa,OAAO;AACpB,aAAa,uCAAuC;AACpD;AACA,cAAc,OAAO,EAAE;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACtTA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,YAAY,mBAAO,CAAC,yBAAc;;AAElC;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA,iBAAiB,mBAAO,CAAC,kCAAuB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC,EAAE;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,0B;;;;;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;;AAEA,8CAA8C;;AAE9C,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B,6BAA6B,cAAc;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;;AAEA,iBAAiB,cAAc;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,8BAAmB;;AAE3B,mBAAO,CAAC,4BAAiB;;AAEzB,mBAAO,CAAC,8BAAmB;;AAE3B,mBAAmB,mBAAO,CAAC,4BAAkB;;AAE7C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,oBAAoB,mBAAO,CAAC,2BAAgB;;AAE5C;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,WAAW,mBAAO,CAAC,kCAAuB;;AAE1C,WAAW,mBAAO,CAAC,6BAAkB;;AAErC,iBAAiB,mBAAO,CAAC,8CAAmC;;AAE5D,qBAAqB,mBAAO,CAAC,kDAAuC;;AAEpE,oBAAoB,mBAAO,CAAC,gDAAqC;;AAEjE;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA,KAAK;AACL,sDAAsD;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC3nBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,8BAAmB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC,YAAY,iCAAiC;AAC7C;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,kCAAkC;AAC9C,YAAY,kCAAkC;AAC9C,YAAY,SAAS;AACrB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,kCAAkC;AAC9C,YAAY,kCAAkC;AAC9C,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,kCAAkC;AAC9C,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,YAAY;AACZ,iBAAiB;AACjB,kBAAkB;AAClB,kBAAkB;AAClB,wBAAwB;AACxB,mBAAmB,e;;;;;;;;;;;AC7WnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,kBAAkB,c;;;;;;;;;;;AChGlB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,kBAAkB,mBAAO,CAAC,oCAAyB;;AAEnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC,E;;;;;;;;;;;AC9ED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,8BAAmB;;AAElD;AACA;;AAEA,oBAAoB,mBAAO,CAAC,2BAAgB;;AAE5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,iCAAuB;;AAE/B,mBAAO,CAAC,oCAAyB;;AAEjC,oBAAoB,mBAAO,CAAC,oCAAyB;;AAErD,oBAAoB,mBAAO,CAAC,oCAAyB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,iCAAsB;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;;AAEA,kBAAkB,mBAAO,CAAC,iCAAsB;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK,QAAQ;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;;ACvaA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,iBAAiB,mBAAO,CAAC,kCAAuB;;AAEhD,aAAa,mBAAO,CAAC,iCAAsB;;AAE3C,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC,qBAAqB,mBAAO,CAAC,kDAAuC;;AAEpE,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,aAAa,mBAAO,CAAC,mCAAyB;;AAE9C,oBAAoB,mBAAO,CAAC,iCAAsB;;AAElD,sBAAsB,mBAAO,CAAC,8CAAmC;;AAEjE,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA,mIAAmI;AACnI;AACA;AACA;;AAEA,yJAAyJ;;AAEzJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,4BAA4B;AAC5B;;AAEA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;;AAEA,+BAA+B;;AAE/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;;AAEb,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK,EAAE;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,mDAAmD;;AAEnD;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8DAA8D;;;AAG9D;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB;AACvB;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA,mCAAmC;AACnC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC;;AAEtC;AACA,6EAA6E;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA,iDAAiD;;AAEjD;AACA;;AAEA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA,2FAA2F;AAC3F,GAAG;AACH;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP,6BAA6B,SAAS;;;AAGtC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC36BA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,iCAAsB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;AChFD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;;AAEA,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,aAAa,mBAAO,CAAC,iCAAsB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC;;AAEvC;AACA,4FAA4F;;AAE5F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA,gEAAgE;;AAEhE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,8EAA8E;;AAE9E;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;;AAGH,4CAA4C,SAAS;AACrD,iEAAiE,0BAA0B,IAAI;;AAE/F;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;;AAExB,uBAAuB,QAAQ;AAC/B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA,iBAAiB;;AAEjB;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;;AAEA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA,wFAAwF;;AAExF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ;;AAEX;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACxjBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,uCAA4B;;AAExD,cAAc,mBAAO,CAAC,mCAAwB;;AAE9C,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA,gFAAgF;;AAEhF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kDAAkD;;AAElD;AACA,GAAG;AACH,6GAA6G;;AAE7G;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;;AClNA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,wCAA6B;;AAErC,mBAAO,CAAC,iCAAsB,E;;;;;;;;;;;ACrB9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,yCAA8B;;AAEtC,mBAAO,CAAC,qCAA0B,E;;;;;;;;;;;ACrBlC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,6BAA6B,mBAAO,CAAC,sCAA2B;;AAEhE,kBAAkB,mBAAO,CAAC,sCAA2B;;AAErD,mBAAO,CAAC,2CAAgC;;AAExC,mBAAO,CAAC,0CAA+B;;AAEvC,mBAAO,CAAC,+CAAoC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,EAAE;AACH;;AAEA;AACA;AACA;AACA;AACA,CAAC,EAAE;;AAEH;AACA;AACA;AACA;AACA,CAAC,e;;;;;;;;;;;AC/ED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,qBAAqB,mBAAO,CAAC,6BAAkB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8IAA8I;AAC9I;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,6BAA6B,mBAAO,CAAC,0BAAe;;AAEpD,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,mBAAmB,mBAAO,CAAC,gCAAqB;;AAEhD,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2CAA2C;AAC5D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA,yEAAyE;;AAEzE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;AACA;AACA,0CAA0C;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,UAAU,2BAA2B;AACrC;AACA;AACA,8EAA8E;AAC9E,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,0DAA0D;;AAE1D;AACA,mEAAmE;;AAEnE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;;;AAGA,mCAAmC;AACnC;;;AAGA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,2BAA2B;AACxC,aAAa,2BAA2B;AACxC,cAAc,OAAO,EAAE;AACvB;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO,YAAY;AAChC,aAAa,eAAe;AAC5B,aAAa,2BAA2B;AACxC,aAAa,2BAA2B;AACxC,cAAc,OAAO,EAAE;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,wBAAwB;AACxB,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,0B;;;;;;;;;;;AC7gBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAO,CAAC,6BAAmB;;AAEjD,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC,0BAA0B,mBAAO,CAAC,sDAA2C;;AAE7E,eAAe,mBAAO,CAAC,6BAAkB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;AChJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,sBAAsB,mBAAO,CAAC,6BAAmB;;AAEjD,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC,aAAa,mBAAO,CAAC,mCAAyB;;AAE9C,kBAAkB,mBAAO,CAAC,gCAAqB;;AAE/C,eAAe,mBAAO,CAAC,6BAAkB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAO,CAAC,6BAAmB;;AAEjD,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC,uBAAuB,mBAAO,CAAC,+CAAqC;;AAEpE,eAAe,mBAAO,CAAC,6BAAkB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,0BAA0B,mBAAO,CAAC,kCAAuB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;AACA,WAAW,eAAe;AAC1B;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,+BAA+B;AAC1C;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,2CAA2C,iEAAiE,0BAA0B;AACtI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,qEAAqE;;AAErE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG,EAAE;;AAEL;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,uEAAuE;AACvE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA,kDAAkD;;AAElD;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;;AAEnC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;;;AAGA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iBAAiB,kCAAkC;AACnD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC7aA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO,kBAAkB;AACpC,WAAW,4BAA4B;AACvC,YAAY,OAAO,EAAE,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,4BAA4B;AACvC,WAAW,SAAS;AACpB,gBAAgB,OAAO;AACvB,gBAAgB,eAAe;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA,qEAAqE;AACrE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,kBAAkB,c;;;;;;;;;;;AChKlB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA,mEAAmE;;AAEnE;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA,sEAAsE;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6EAA6E;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;AACL;AACA;;AAEA,qEAAqE;AACrE;;AAEA;AACA;AACA;;AAEA,sEAAsE,EAAE;;AAExE;;AAEA;AACA;AACA;AACA,gGAAgG;AAChG;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;;AAEA,oDAAoD;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;;AAEA,eAAe;AACf,gBAAgB;AAChB,mBAAmB;AACnB,2BAA2B;AAC3B,eAAe,W;;;;;;;;;;;ACvUf;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,kBAAkB,mBAAO,CAAC,qCAA0B;;AAEpD,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,aAAa,mBAAO,CAAC,mCAAyB;;AAE9C,iBAAiB,mBAAO,CAAC,mCAAwB;;AAEjD,kBAAkB,mBAAO,CAAC,gCAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS,WAAW;AAC/B;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA;AACA,4DAA4D;;AAE5D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,0BAA0B;AACrC,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,iCAAiC,MAAM;AACvC,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,0BAA0B;AAC1B,qBAAqB;AACrB,8BAA8B;AAC9B,yCAAyC;AACzC,qBAAqB;AACrB,qBAAqB;AACrB,uBAAuB,mB;;;;;;;;;;;ACrQvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,eAAe,mBAAO,CAAC,uBAAY;;AAEnC,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,uEAAuE;;AAEvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C,qBAAqB,+BAA+B;AACpD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;;AAGA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C,qBAAqB,+BAA+B;AACpD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,KAAK;AACL;;;AAGA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC1VA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,iBAAiB,mBAAO,CAAC,mCAAyB;;AAElD,cAAc,mBAAO,CAAC,oCAAyB;;AAE/C;;AAEA,kBAAkB,mBAAO,CAAC,mCAAwB;;AAElD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mCAAmC;;AAEnC;AACA;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,2IAA2I;;AAE3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oGAAoG;AACpG;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,iBAAiB,qBAAqB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH,iBAAiB,6BAA6B;AAC9C;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACzqBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,6BAA6B,mBAAO,CAAC,uCAA4B;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,yCAAyC;AACtD,aAAa,4BAA4B;AACzC,aAAa,4BAA4B;AACzC,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,eAAe,mBAAO,CAAC,uBAAY;;AAEnC,0BAA0B,mBAAO,CAAC,sDAA2C;;AAE7E,uBAAuB,mBAAO,CAAC,8BAAmB;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD,qBAAqB,gCAAgC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC,E;;;;;;;;;;;AC1ND;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,sBAAsB,mBAAO,CAAC,sCAA2B;;AAEzD,kBAAkB,mBAAO,CAAC,kCAAuB;;AAEjD,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,eAAe,mBAAO,CAAC,uBAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;;AAGA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,KAAK;AACL;;;AAGA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,uBAAuB,mBAAO,CAAC,+CAAqC;;AAEpE,eAAe,mBAAO,CAAC,uBAAY;;AAEnC,uBAAuB,mBAAO,CAAC,8BAAmB;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC;AACnC,iCAAiC,6B;;;;;;;;;;;AClIjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC,E;;;;;;;;;;;ACrED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAmB,mBAAO,CAAC,iCAAsB;;AAEjD,mBAAO,CAAC,mCAAwB;;AAEhC,mBAAO,CAAC,+BAAoB;;AAE5B,mBAAO,CAAC,8BAAmB;;AAE3B,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAO,CAAC,oCAAyB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2C;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,uCAA6B;;AAE1D,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,iBAAiB;;AAEjB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,gEAAgE;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA,0CAA0C,cAAc;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0B;;;;;;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,sBAAsB,mBAAO,CAAC,sCAA2B;;AAEzD,sBAAsB,mBAAO,CAAC,6BAAkB;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AChJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;AACjB;AACA;AACA;AACA;AACA,CAAC,gBAAgB,E;;;;;;;;;;;AC5FjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAA+D;AAC/D,uEAAuE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAO,CAAC,wCAA6B;;AAE1D,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,eAAe,mBAAO,CAAC,+BAAoB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB,SAAS,OAAO,YAAY;AAC5B,SAAS,OAAO,OAAO;AACvB;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,qBAAqB,mBAAO,CAAC,uCAA6B;;AAE1D,eAAe,mBAAO,CAAC,uBAAY;;AAEnC,mBAAmB,mBAAO,CAAC,gCAAqB;;AAEhD,yBAAyB,mBAAO,CAAC,yCAA8B;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,QAAQ;;AAER;AACA,KAAK;AACL,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,6CAA6C,SAAS;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,gB;;;;;;;;;;;ACtUpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,4CAAiC;;AAEzC,mBAAO,CAAC,oCAAyB,E;;;;;;;;;;;ACvBjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;;AAEA,yDAAyD;;;AAGzD;;AAEA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,yBAAyB;AAC/D,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,qCAAqC;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,KAAK;;;AAGL,gHAAgH;;AAEhH;AACA,GAAG;AACH;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,gCAAgC;AACnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACjcA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,6BAAkB;;AAE1B,mBAAO,CAAC,4BAAkB,E;;;;;;;;;;;ACrB1B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,mCAAyB;;AAEjC,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,yCAA8B;;AAEtC,mBAAO,CAAC,sCAA2B,E;;;;;;;;;;;AC/BnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,mCAAyB;;AAEjC,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,yCAA8B;;AAEtC,mBAAO,CAAC,sCAA2B,E;;;;;;;;;;;AC/BnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,mCAAyB;;AAEjC,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,yCAA8B;;AAEtC,mBAAO,CAAC,sCAA2B,E;;;;;;;;;;;AC/BnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,aAAa,mBAAO,CAAC,qBAAU;;AAE/B,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,MAAM;AACN;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,iDAAiD;AAC9D,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE;;AAEpE;AACA,OAAO;AACP;AACA,oFAAoF;AACpF;AACA;;AAEA;AACA,OAAO;AACP;;;AAGA;AACA;AACA,KAAK;AACL;AACA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAiD;AAC9D;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;;AAEpD,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA,GAAG;;AAEH;AACA,aAAa,iDAAiD;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,iDAAiD;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;;AAGX;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA,qCAAqC;;AAErC,0CAA0C;AAC1C;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;;AAE5F;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0B;;;;;;;;;;;ACpgBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,aAAa,mBAAO,CAAC,qBAAU;;AAE/B,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uDAAuD,eAAe;AACtE,iDAAiD,0BAA0B;AAC3E;AACA;AACA,OAAO;;AAEP,KAAK;AACL;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;;AAErE;AACA,wFAAwF;AACxF;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,eAAe;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,2BAA2B;AACxC;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL,GAAG;AACH;;AAEA;AACA,0B;;;;;;;;;;;ACtnBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,iCAAsB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,4BAA4B,yDAAyD;AACrF,4BAA4B,yDAAyD;AACrF;AACA;AACA;AACA,4BAA4B,kDAAkD;AAC9E;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAmB,mBAAO,CAAC,0BAAgB;;AAE3C,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C,YAAY,mBAAO,CAAC,oBAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;;AAEA,kDAAkD;;AAElD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,kCAAkC;;AAElC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gEAAgE;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,kCAAkC;;AAElC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACrPA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0BAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,eAAe,mBAAO,CAAC,gCAAqB;;AAE5C,mBAAmB,mBAAO,CAAC,0BAAgB;;AAE3C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,oEAAoE;;AAEpE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,sDAAsD,mBAAmB;;AAEzE;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;AAGA,kEAAkE;;AAElE,gGAAgG;;AAEhG;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,2CAA2C;;AAE3C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,QAAQ;;AAEb;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4IAA4I,MAAM;AAClJ,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,0BAA0B;;AAE1B,gCAAgC;;AAEhC;;AAEA;;AAEA;;AAEA;;AAEA,gCAAgC;AAChC;;;AAGA;AACA,GAAG;AACH;AACA;;AAEA,8BAA8B;AAC9B;;;AAGA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC5uBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,qBAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC,E;;;;;;;;;;;AC9DD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;AACT;AACA;AACA;AACA,eAAe,kCAAkC;AACjD,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,CAAC,E;;;;;;;;;;;ACxGD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,gBAAgB;AAC5B,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,YAAY,SAAS,kCAAkC;AACvD;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA,wBAAwB;AACxB,sBAAsB;AACtB,mBAAmB;AACnB,+BAA+B,2B;;;;;;;;;;;AC3K/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,OAAO,cAAc;AAChC;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;;AAEA,UAAU,QAAQ;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA,kCAAkC,QAAQ;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA,KAAK,yBAAyB,mBAAmB;AACjD;AACA;AACA,UAAU;AACV;;;AAGA;AACA;;AAEA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA,YAAY;AACZ,WAAW;AACX,aAAa;AACb,aAAa,S;;;;;;;;;;;AC/Ib;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,kDAAuC;;AAEpE,mBAAmB,mBAAO,CAAC,gCAAqB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,+EAA+E;;AAE/E,kEAAkE;;AAElE;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,UAAU;AACV;;;AAGA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,kBAAkB;AAClB,uBAAuB,mB;;;;;;;;;;;ACxOvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,kCAAuB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;AC1CD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAO,CAAC,+BAAoB;;AAEjD,oBAAoB,mBAAO,CAAC,8BAAmB;;AAE/C,oBAAoB,mBAAO,CAAC,wCAA6B;;AAEzD;;AAEA,kBAAkB,mBAAO,CAAC,qCAA2B;;AAErD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC,E;;;;;;;;;;;AC9ED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,0BAAe;;AAEvB,mBAAO,CAAC,6BAAmB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;ACjFD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC,kBAAkB,mBAAO,CAAC,4BAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA,qCAAqC;AACrC,MAAM,WAAW,yBAAyB;AAC1C;AACA,MAAM,UAAU;AAChB;AACA,MAAM,WAAW,YAAY,yBAAyB,OAAO;;AAE7D;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,CAAC,EAAE;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2CAA2C;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,QAAQ;;AAEb,sCAAsC,QAAQ;AAC9C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe,GAAG,gBAAgB;AACpD,MAAM;AACN;AACA;AACA,OAAO,wBAAwB;AAC/B,OAAO,+BAA+B;AACtC,OAAO;AACP;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,CAAC,EAAE;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,IAAI;AACrD;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA,OAAO;;;AAGP,yDAAyD;;AAEzD;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA,KAAK;;;AAGL,sCAAsC,QAAQ;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;AAGD;AACA,6BAA6B;AAC7B;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA,gFAAgF;;AAEhF;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA,OAAO,EAAE;;AAET;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,C;;;;;;;;;;;AC1hBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,yBAAc;;AAEtB,mBAAO,CAAC,+CAAoC;;AAE5C,mBAAO,CAAC,0BAAe,E;;;;;;;;;;;ACvBvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,4BAAiB;;AAEvC,mBAAO,CAAC,mCAAyB;;AAEjC,mBAAO,CAAC,mBAAQ;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;ACtED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,eAAe,mBAAO,CAAC,uCAA4B;;AAEnD,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,uBAAuB,mBAAO,CAAC,+BAAoB;;AAEnD,iBAAiB,mBAAO,CAAC,kCAAuB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,eAAe;AAC5B;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B;AACA,iBAAiB,wEAAwE;AACzF,iBAAiB,yDAAyD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,4BAA4B;;AAE5B;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;AAGD;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA,4CAA4C;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mEAAmE;;AAEnE;AACA,mBAAmB,mBAAmB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB;;AAEtB;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACz5BA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,uBAAuB,sBAAsB,SAAS;AACtD,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA,mEAAmE;;AAEnE;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AChaA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,6BAAkB;;AAE/C,iBAAiB,mBAAO,CAAC,8CAAmC;;AAE5D,oBAAoB,mBAAO,CAAC,gDAAqC;;AAEjE;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,uBAAuB,mBAAO,CAAC,6CAAkC;;AAEjE,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C;;AAEA,oBAAoB,mBAAO,CAAC,4CAAiC;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY,OAAO,EAAE;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA,+CAA+C;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA,gDAAgD;AAChD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,8BAA8B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,uBAAuB,0DAA0D;AACjF;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,kEAAkE;AAClE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;AACP;;;AAGA;AACA;AACA,OAAO;AACP,oEAAoE;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0B;;;;;;;;;;;ACjdA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,eAAe,mBAAO,CAAC,uCAA4B;;AAEnD,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,uBAAuB,mBAAO,CAAC,+BAAoB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC3RA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,oBAAoB,mBAAO,CAAC,2BAAgB;;AAE5C;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;;AAEA,6BAA6B;AAC7B,kCAAkC;AAClC,gCAAgC,4B;;;;;;;;;;;AC5EhC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;;AAErD;AACA;AACA;;AAEA,2BAA2B,uB;;;;;;;;;;;ACtD3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;AACjB,YAAY;AACZ,eAAe;AACf,eAAe,W;;;;;;;;;;;AC9Ef;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,+BAA+B;AAC1C,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG,EAAE;AACL;AACA;AACA;;AAEA;AACA;;AAEA,cAAc;AACd,sBAAsB,kB;;;;;;;;;;;AC3FtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB,WAAW,OAAO,iCAAiC;AACnD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,wBAAwB,oB;;;;;;;;;;;ACtFxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe,cAAc,sBAAsB;AAChE,wDAAwD,sBAAsB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B;AACA;AACA,qFAAqF;AACrF;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;AACA,WAAW,eAAe;AAC1B;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA,0EAA0E;;AAE1E;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mEAAmE;AACnE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,gCAAsB;;AAE9B,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,gCAAqB;;AAE7B,mBAAmB,mBAAO,CAAC,kCAAuB;;AAElD,gBAAgB,mBAAO,CAAC,+BAAoB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;ACvDD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,qBAAU;;AAElB,mBAAO,CAAC,2CAAgC;;AAExC,mBAAO,CAAC,0CAA+B;;AAEvC,mBAAO,CAAC,4CAAiC,E;;;;;;;;;;;ACzBzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA,WAAW,mBAAO,CAAC,uBAAY;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA,mBAAmB,SAAS,SAAS,EAAE;AACvC,wBAAwB,SAAS,UAAU,EAAE;AAC7C;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA,gCAAgC;;AAEhC;AACA,8BAA8B;;AAE9B,qBAAqB,uBAAuB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc;AACd;AACA;;AAEA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,cAAc;AACd;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC7VA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,qBAAqB,mBAAO,CAAC,mCAAyB;;AAEtD;;AAEA,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+FAA+F;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH;;AAEhH;AACA;AACA;AACA,KAAK;AACL,wFAAwF;;AAExF;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;;;AAGP;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yJAAyJ;;;AAGzJ;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA,sIAAsI;AACtI;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0DAA0D;;AAE1D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,KAAK;AACzC,KAAK;AACL;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,0B;;;;;;;;;;;ACleA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,yBAAe;;AAEzC,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ,EAAE,MAAM;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE,2CAA2C,oBAAoB;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0B;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA,gDAAgD;AAChD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,mHAAmH;;AAEnH;AACA,2EAA2E;;AAE3E;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA,iEAAiE;;AAEjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;;;AAGL;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oHAAoH,QAAQ,sBAAsB,MAAM;AACxJ;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,aAAa,2BAA2B;AACxC,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8HAA8H,gBAAgB;AAC9I;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,8HAA8H,SAAS;AACvI;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC7bA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG,EAAE;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,UAAU;AACV,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA,kH;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,0B;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC,E;;;;;;;;;;;ACvDD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,mCAAwB;;AAEhC,mBAAO,CAAC,kCAAuB;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;AC9CD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,kCAAwB;;AAEhC,mBAAO,CAAC,kCAAuB;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;AC9CD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,oCAAyB;;AAEjC,mBAAO,CAAC,mCAAwB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;AC/CD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,UAAU;AACV,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;;AAEb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8DAA8D;;AAE9D,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA,OAAO,EAAE;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,4BAA4B;AACvC,WAAW,2BAA2B;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0EAA0E;;AAE1E;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACnWA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,eAAe,mBAAO,CAAC,wCAA6B;;AAEpD,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC,uBAAuB,mBAAO,CAAC,8CAAmC;;AAElE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,8HAA8H,YAAY;;AAE1I,oCAAoC;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,UAAU;AACV,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,4BAA4B;AACvC,WAAW,2BAA2B;AACtC;;;AAGA;AACA;;AAEA;AACA;AACA,4GAA4G;;AAE5G;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,iDAAiD;;AAEjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC/WA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,iBAAiB,mBAAO,CAAC,0CAA+B;;AAExD,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,EAAE;;AAEP;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,4BAA4B;AACvC,WAAW,2BAA2B;AACtC;;;AAGA;AACA;;AAEA;AACA;AACA,4GAA4G;;AAE5G;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,0B;;;;;;;;;;;ACxMA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,sBAAsB,mBAAO,CAAC,yCAA8B;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,0B;;;;;;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,uBAAuB,mBAAO,CAAC,8CAAmC;;AAElE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4BAA4B;AACxC,YAAY,uBAAuB;AACnC,YAAY,OAAO;AACnB,YAAY;AACZ;;AAEA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;AACA,kEAAkE;AAClE;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA,KAAK;AACL;AACA,wHAAwH;;AAExH,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,mBAAmB;AACnB,kBAAkB;AAClB,sBAAsB;AACtB,oBAAoB,gB;;;;;;;;;;;AC5PpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAmB,mBAAO,CAAC,6BAAkB;;AAE7C,2BAA2B,mBAAO,CAAC,mDAAwC;;AAE3E,mBAAO,CAAC,8CAAmC;;AAE3C,mBAAO,CAAC,4CAAiC;;AAEzC,mBAAO,CAAC,2BAAgB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mD;;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,8CAAmC;;AAE3C,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,mCAAyB,E;;;;;;;;;;;ACvBjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,eAAe,mBAAO,CAAC,+BAAoB;;AAE3C,mBAAO,CAAC,wCAA6B;;AAErC,mBAAO,CAAC,wBAAa;;AAErB,mBAAO,CAAC,yBAAc;;AAEtB,mBAAO,CAAC,0BAAe;;AAEvB,mBAAO,CAAC,2CAAgC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA,CAAC,E;;;;;;;;;;;AC1DD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,iCAAsB;;AAE9B,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,8BAAmB,E;;;;;;;;;;;ACvB3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,gCAAqB;;AAE/C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA,uBAAuB,sBAAsB;AAC7C;;AAEA,yBAAyB,0BAA0B;AACnD;AACA,WAAW;;;AAGX;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,KAAK;AACL;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,wCAA6B;;AAErC,mBAAO,CAAC,iCAAuB,E;;;;;;;;;;;ACrB/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,0CAA+B;;AAEvC,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,0BAAe;;AAEvB,mBAAO,CAAC,4CAAiC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;ACnDD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAmB,mBAAO,CAAC,oCAAyB;;AAEpD,mBAAO,CAAC,qCAA0B;;AAElC,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,2CAAgC;;AAExC,mBAAO,CAAC,0CAA+B;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2C;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C,sBAAsB,mBAAO,CAAC,yCAA8B;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA,0B;;;;;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,aAAa,mBAAO,CAAC,mCAAyB;;AAE9C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,iBAAiB,mBAAO,CAAC,mCAAwB;;AAEjD,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,uEAAuE;;AAEvE;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,2DAA2D;AAC3D,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM;;AAEN,qFAAqF;AACrF,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,sEAAsE,wDAAwD;;AAE9H;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,sBAAsB;;AAEtB;AACA,GAAG;;;AAGH;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,0B;;;;;;;;;;;ACjpBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,6BAAkB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,kCAAuB;;AAEpD,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC3NA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,iCAAsB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iEAAiE;;AAEjE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA,sDAAsD;AACtD,wEAAwE,EAAE;;AAE1E;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;ACxED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,kCAAuB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;AC1CD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,uBAAY;;AAElC,cAAc,mBAAO,CAAC,4BAAiB;;AAEvC,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;;AAEA,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC,EAAE;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6BAA6B;;AAElC;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC,E;;;;;;;;;;;AChPD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,mCAAwB;;AAEhC,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,yCAA+B;;AAEvC,mBAAO,CAAC,wCAA6B;;AAErC,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,sCAA2B,E;;;;;;;;;;;AC/BnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,6BAAkB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,qCAA0B;;AAEpD,qBAAqB,mBAAO,CAAC,6BAAkB;;AAE/C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,iBAAiB,mBAAO,CAAC,kCAAuB;;AAEhD,0BAA0B,mBAAO,CAAC,mCAAyB;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL,2JAA2J;;AAE3J;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gEAAgE;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,yDAAyD;AACzD;;AAEA,yFAAyF;;AAEzF;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACnSA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB;AAChB,WAAW,O;;;;;;;;;;;AChDX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD,WAAW,mBAAO,CAAC,0BAAe;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;AACH;AACA;AACA;AACA,4BAA4B;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;ACxJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,6BAAkB;;AAExC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,WAAW,mBAAO,CAAC,0BAAe;;AAElC,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,EAAE;;AAEP;;AAEA,mBAAmB,uBAAuB;AAC1C;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,WAAW;AACX,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,iBAAiB,qBAAqB;AACtC;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW,2BAA2B;AACtC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,SAAS,QAAQ,WAAW,UAAU;AAChF,sEAAsE;;AAEtE;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,0CAA0C,WAAW,cAAc;AACnE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,yCAAyC,YAAY,sBAAsB,eAAe,mBAAmB;AAC7G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD,SAAS,OAAO,QAAQ;AAC7E,iCAAiC,kBAAkB,YAAY,oBAAoB,gBAAgB,eAAe;AAClH;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP,0EAA0E;;AAE1E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA,0B;;;;;;;;;;;AC7fA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,6BAAkB;;AAExC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,sBAAsB,mBAAO,CAAC,yCAA8B;;AAE5D,yBAAyB,mBAAO,CAAC,4CAAiC;;AAElE,cAAc,mBAAO,CAAC,mCAAwB;;AAE9C,iBAAiB,mBAAO,CAAC,oCAAyB;;AAElD,WAAW,mBAAO,CAAC,0BAAe;;AAElC,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD,mBAAO,CAAC,iCAAsB;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC;;;AAGzC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA,kEAAkE;;AAElE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,iBAAiB;;AAEjB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACvUA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,6BAAkB;;AAExC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,0BAAe;;AAElC,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;AACH;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gCAAgC;AACvC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,+BAA+B;AACtC;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,iCAAiC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe;;AAEf;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,0B;;;;;;;;;;;ACvNA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,6BAAkB;;AAExC,cAAc,mBAAO,CAAC,mCAAwB;;AAE9C,WAAW,mBAAO,CAAC,0BAAe;;AAElC,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,WAAW,mBAAO,CAAC,0BAAe;;AAElC,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,+CAA+C,oDAAoD;AACnG;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAO,CAAC,0BAAe;;AAEvB,mBAAO,CAAC,mCAAwB;;AAEhC,mBAAO,CAAC,kCAAuB;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc,E;;;;;;;;;;;AClEd;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,mCAAwB;;AAE9C,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,cAAc,mBAAO,CAAC,iCAAsB;;AAE5C,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc,mBAAmB,mBAAmB,gBAAgB;AACtG;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,SAAS;AACZ;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB;AACxB;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL,6CAA6C;;AAE7C;AACA;AACA;;AAEA,wBAAwB,OAAO;AAC/B,CAAC;;;AAGD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;;AAElC,mCAAmC;AACnC;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC,qCAAqC;;AAErC;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6BAA6B,4BAA4B;AACjE,uDAAuD;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACrXA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM,IAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,qCAA0B;;AAE7C,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC,qCAAqC;;AAErC;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB,oBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC1PA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,qBAAqB,mBAAO,CAAC,6BAAkB;;AAE/C,yBAAyB,mBAAO,CAAC,iCAAsB;;AAEvD,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,0BAA0B,mBAAO,CAAC,+CAAoC;;AAEtE,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,qBAAqB,mBAAO,CAAC,0CAA+B;;AAE5D,iBAAiB,mBAAO,CAAC,mCAAwB;;AAEjD,4BAA4B,mBAAO,CAAC,sCAA2B;;AAE/D,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,wBAAwB;;AAExB;AACA,6BAA6B,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D;;AAE1D,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wHAAwH;;AAExH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK,QAAQ;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK,EAAE;AACP;;AAEA,GAAG;AACH;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA;AACA,qIAAqI;AACrI;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK,EAAE;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA,yGAAyG;AACzG,KAAK,EAAE;;;AAGP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc,sCAAsC;AACpD,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,uBAAuB;AACrC,cAAc,uBAAuB;AACrC,cAAc,4BAA4B;AAC1C,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;AACD;AACA,WAAW,0CAA0C;AACrD;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC3wBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,kCAAuB;;AAE/B,mBAAO,CAAC,iCAAsB,E;;;;;;;;;;;ACrB9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAmB,mBAAO,CAAC,oCAA0B;;AAErD,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,uCAA6B;;AAErC,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,wCAA6B;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2C;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAmB,mBAAO,CAAC,oCAA0B;;AAErD,mBAAO,CAAC,sCAA2B;;AAEnC,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,uCAA4B;;AAEpC,mBAAO,CAAC,qCAA2B;;AAEnC,mBAAO,CAAC,wCAA6B;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2C;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,6BAAkB;;AAE/C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yEAAyE;;AAEzE;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc,eAAe;AAC7B,cAAc,eAAe,GAAG,wCAAwC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA,UAAU,2DAA2D;AACrE;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,qCAAqC;AACtD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AChRA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,+CAAoC;;AAEjE,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,iBAAiB,mBAAO,CAAC,iCAAsB;;AAE/C,aAAa,mBAAO,CAAC,qBAAU;;AAE/B,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sDAAsD;;;AAGtD,2BAA2B;AAC3B;;;AAGA,qCAAqC;;AAErC;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qEAAqE;;;AAGrE;AACA;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mDAAmD;AACnD;;;AAGA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,kBAAkB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kGAAkG;AAClG;;;AAGA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA,sIAAsI;AACtI;;AAEA;AACA,gEAAgE;AAChE;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC1xBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,6BAAkB;;AAE/C,oBAAoB,mBAAO,CAAC,uCAA4B;;AAExD,oBAAoB,mBAAO,CAAC,uCAA4B;;AAExD,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uCAAuC;AAChD;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB,GAAG,uBAAuB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,6CAA6C;AAC7C,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,oCAAoC;;AAEpC;AACA,mCAAmC;;AAEnC;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc,eAAe,GAAG,sCAAsC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,UAAU;AACV,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;;AAElE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,QAAQ;;AAEb;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,QAAQ;AAChC;;AAEA,yBAAyB,+BAA+B;AACxD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,yBAAyB,KAAK,GAAG,eAAe;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,QAAQ;;AAEb,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC1hBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,aAAa,mBAAO,CAAC,qBAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO,EAAE,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8CAA8C;;AAE9C;AACA,gDAAgD;;AAEhD;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC7OA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,oBAAoB,mBAAO,CAAC,uCAA4B;;AAExD,oBAAoB,mBAAO,CAAC,uCAA4B;;AAExD,qBAAqB,mBAAO,CAAC,uCAA6B;;AAE1D,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,mCAAmC;AACnC,yCAAyC;AACzC,sCAAsC;AACtC,oDAAoD;AACpD,oDAAoD;AACpD;AACA,aAAa,sBAAsB;AACnC,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iCAAiC,MAAM,kDAAkD,OAAO;AAChG,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,yBAAyB;AACtC,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,yEAAyE;AACzE,+BAA+B;;AAE/B,mCAAmC;;AAEnC;AACA;AACA;AACA,iEAAiE;;AAEjE;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,YAAY;AAC/E;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,8DAA8D,YAAY;;;AAG1E;AACA;AACA,QAAQ,6BAA6B,kBAAkB;;AAEvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,kDAAkD,wCAAwC;AAC1F,sDAAsD,4CAA4C;AAClG;AACA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA,SAAS,EAAE;;AAEX;;AAEA;AACA,8BAA8B;;AAE9B;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,2BAA2B;AACxC,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA,cAAc,OAAO;AACrB,6BAA6B;AAC7B;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC7hBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,oBAAoB,mBAAO,CAAC,uCAA4B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC7LA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,kDAAkD;AAC7D,WAAW,4BAA4B;AACvC,WAAW,eAAe;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,oBAAoB;AACpB,yBAAyB,qB;;;;;;;;;;;ACjGzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,kCAAuB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;AC1CD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,uCAA6B;;AAE1D,oBAAoB,mBAAO,CAAC,uCAA4B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,CAAC,EAAE;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA,CAAC,EAAE;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC,E;;;;;;;;;;;ACpDD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,W;;;;;;;;;;;ACxDf;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;AACA;AACA;;AAEA,4BAA4B,mBAAO,CAAC,mCAAwB;;AAE5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA,wCAAwC;AACxC,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,uBAAuB,GAAG,4BAA4B;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;;AAExD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;;AAEH;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,oEAAoE;;AAEpE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACzYA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,oCAAyB;;AAE9C,aAAa,mBAAO,CAAC,mCAAyB;;AAE9C,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,oBAAoB,mBAAO,CAAC,4CAAiC;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mEAAmE;;AAEnE;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACjUA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAmB,mBAAO,CAAC,6BAAkB;;AAE7C,oBAAoB,mBAAO,CAAC,8BAAmB;;AAE/C,YAAY,mBAAO,CAAC,2BAAgB;;AAEpC,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC,eAAe,mBAAO,CAAC,8BAAmB;;AAE1C;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,mBAAO,CAAC,0BAAe;;AAEvB,mBAAO,CAAC,yBAAc;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iIAAiI;;AAEjI;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gEAAgE;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,YAAY,SAAS;AACrB,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA,oBAAoB,OAAO;AAC3B;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,6BAA6B,MAAM;AACnC;AACA,KAAK,iBAAiB;;;AAGtB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,YAAY,iCAAiC;AAC7C;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,YAAY,cAAc;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA,sBAAsB;AACtB,uBAAuB;AACvB,0BAA0B;AAC1B,uBAAuB;AACvB,0BAA0B;AAC1B,uBAAuB;AACvB,8BAA8B;AAC9B,iCAAiC;AACjC,2BAA2B,uB;;;;;;;;;;;ACjb3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,cAAc;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,QAAQ;AACrB,cAAc,cAAc;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,+BAA+B;AAC7C;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,qBAAqB,mBAAO,CAAC,+BAAoB;;AAEjD,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;AACA;;AAEA,kBAAkB,mBAAO,CAAC,gCAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,+BAA+B;AAC1C,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,wCAAwC;AACxC,KAAK;AACL,GAAG;AACH;AACA;;AAEA,0B;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,qCAA0B;;AAEpD,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;;AAEA,kBAAkB,mBAAO,CAAC,yBAAc;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,2BAA2B;AACtC,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,eAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA,QAAQ,+BAA+B;AACvC;AACA,mBAAmB;AACnB;;AAEA,oGAAoG;;AAEpG;AACA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;;AAEA,QAAQ,+BAA+B;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA,wBAAwB;AACxB,uBAAuB;AACvB,iCAAiC,6B;;;;;;;;;;;AClXjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,cAAc;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B,cAAc,QAAQ;AACtB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,MAAM;AACpB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,MAAM;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa,EAAE;AACf;AACA;;AAEA,aAAa,EAAE,SAAS,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,EAAE,SAAS,IAAI,SAAS,IAAI;AACzC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mHAAmH;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;;AAE5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;AC9aA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,kCAAuB;;AAEpD,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0B;;;;;;;;;;;ACjKA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,oBAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACjJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,kCAAuB;;AAEpD,uBAAuB,mBAAO,CAAC,gCAAqB;;AAEpD,2BAA2B,mBAAO,CAAC,oCAAyB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,cAAc;AAC5B,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,uCAAuC;AACpD,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,uCAAuC;AACrD,cAAc;AACd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,eAAe;AAC5B,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,eAAe;AAC5B,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,eAAe;AAC5B,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,sCAAsC;AACnD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,kBAAkB,mBAAO,CAAC,mCAAwB;;AAElD;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,aAAa,mBAAO,CAAC,qBAAU;;AAE/B,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD,uBAAuB,mBAAO,CAAC,8CAAmC;;AAElE;;AAEA,mBAAO,CAAC,wBAAa;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH,+CAA+C,sBAAsB;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C,4BAA4B;;AAE5B,6BAA6B;;AAE7B,uBAAuB;;AAEvB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4BAA4B;AACxC;AACA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO,EAAE;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE;;;AAGF;AACA;AACA;AACA,0B;;;;;;;;;;;AChmBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,wBAAa;;AAErB,qBAAqB,mBAAO,CAAC,kCAAuB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,MAAM;AACxB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH,iJAAiJ;;AAEjJ,4DAA4D;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA,2EAA2E;;AAE3E;AACA;AACA;;AAEA,cAAc,U;;;;;;;;;;;AC1Gd;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,WAAW,mBAAO,CAAC,oBAAS;;AAE5B,uBAAuB,mBAAO,CAAC,+BAAoB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA,WAAW,wBAAwB;AACnC;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,eAAe;AAC5B;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,sBAAsB;AACnC,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACxNA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C,qBAAqB,mBAAO,CAAC,kCAAuB;;AAEpD,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,sBAAsB,mBAAO,CAAC,mDAAwC;;AAEtE,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,iCAAiC,EAAE;AACnC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,0B;;;;;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,WAAW,mBAAO,CAAC,kCAAuB;;AAE1C,WAAW,mBAAO,CAAC,oCAAyB;;AAE5C,qBAAqB,mBAAO,CAAC,wCAA6B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,cAAc;AACzB,WAAW,MAAM;AACjB,WAAW,eAAe;AAC1B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,gBAAgB;AAC7B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;AACA;;AAEA,qBAAqB,wCAAwC;AAC7D,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;;AAEtB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,0B;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,sBAAW;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAmB;AAClC,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,0B;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,UAAU,mBAAO,CAAC,kBAAO;;AAEzB,aAAa,mBAAO,CAAC,8BAAmB;;AAExC,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,uBAAuB,mBAAO,CAAC,+BAAoB;;AAEnD,qBAAqB,mBAAO,CAAC,6BAAkB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oEAAoE;AAC/E,WAAW,4BAA4B;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oGAAoG;AACpG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,2BAA2B;AACtC;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,cAAc,eAAe;AAC7B,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACvOA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA,gBAAgB,mBAAO,CAAC,yBAAc;;AAEtC,mBAAmB,mBAAO,CAAC,4BAAiB;;AAE5C,kBAAkB,mBAAO,CAAC,2BAAgB;;AAE1C,sBAAsB,mBAAO,CAAC,+BAAoB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO,YAAY;AAChC,aAAa,OAAO;AACpB,cAAc,OAAO,EAAE;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,qCAA2B;;AAEnD;AACA;;AAEA,YAAY,mBAAO,CAAC,wCAA6B;;AAEjD,WAAW,mBAAO,CAAC,2CAAgC;;AAEnD,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO,YAAY;AAChC,cAAc,OAAO,EAAE;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACtKA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA,qBAAqB,mBAAO,CAAC,6BAAkB;;AAE/C,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,+BAA+B;AAC7C;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,qCAA2B;;AAEnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yJAAyJ;AACzJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,qBAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;;AAEA;AACA;AACA,OAAO;AACP,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA,8CAA8C;;AAE9C;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACzJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,kCAAuB;;AAEpD,sBAAsB,mBAAO,CAAC,8CAAmC;;AAEjE,uBAAuB,mBAAO,CAAC,gCAAqB;;AAEpD,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,2BAA2B,mBAAO,CAAC,oCAAyB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA,yEAAyE;;AAEzE;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,cAAc;AAC3B;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,mCAAyB;;AAE9C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,iBAAiB,mBAAO,CAAC,mCAAwB;;AAEjD,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,cAAc,mBAAO,CAAC,+BAAoB;;AAE1C,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,iBAAiB,mBAAO,CAAC,8CAAmC;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA,aAAa,4CAA4C;AACzD,aAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+KAA+K;AAC/K;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,qFAAqF;;AAErF,qDAAqD;;AAErD,0JAA0J;;AAE1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc,2CAA2C;AACzD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,EAAE;AACf,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,QAAQ,YAAY,OAAO;AACxC,iCAAiC,OAAO;AACxC,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,+BAA+B,iBAAiB;AAChD;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA,iDAAiD,UAAU;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,eAAe;AAC5B,cAAc,OAAO,EAAE,6DAA6D;AACpF;AACA;AACA;;AAEA;AACA;AACA;AACA,8EAA8E;;AAE9E;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL,oGAAoG;AACpG;;AAEA;AACA;AACA;;AAEA,oEAAoE;;;AAGpE;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACjgBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,oBAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,kCAAuB;;AAE/C,mBAAO,CAAC,uBAAa;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,oEAAoE;AACjF,aAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,uBAAY;;AAEnC,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,CAAC,E;;;;;;;;;;;ACvED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,qCAA0B;;AAEpD,WAAW,mBAAO,CAAC,oBAAS;;AAE5B,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,kCAAuB;;AAEpD,uBAAuB,mBAAO,CAAC,gCAAqB;;AAEpD,2BAA2B,mBAAO,CAAC,oCAAyB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+F;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,wBAAc;;AAEvC,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa;AACb,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc,OAAO,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;AACA;AACA,qDAAqD;;AAErD;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AClSA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,mBAAO,CAAC,wBAAa;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,oBAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,kBAAkB,mBAAO,CAAC,mCAAwB;;AAElD;AACA;;AAEA,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD,uBAAuB,mBAAO,CAAC,8CAAmC;;AAElE;;AAEA,mBAAO,CAAC,yBAAc;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iD;;;;;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,oBAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C,oBAAoB,mBAAO,CAAC,iCAAsB;;AAElD,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC;AACA;;AAEA,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD,eAAe,mBAAO,CAAC,4BAAiB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;;AAEA,iBAAiB,gCAAgC;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;;AAEjE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iFAAiF;;AAEjF;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA,yEAAyE;;AAEzE;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,cAAc;;AAEd;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU;AACV;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;AC5RA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,0BAAe;;AAErC,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,2BAAgB;;AAE1C,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,2BAA2B,mBAAO,CAAC,oCAAyB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,MAAM;AAC1D,OAAO;AACP;AACA;;AAEA,mGAAmG;;AAEnG;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,qBAAqB,mBAAO,CAAC,kCAAuB;;AAEpD,uBAAuB,mBAAO,CAAC,gCAAqB;;AAEpD,2BAA2B,mBAAO,CAAC,oCAAyB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0B;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC,iBAAiB,mBAAO,CAAC,0BAAe;;AAExC,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY,uCAAuC;AACnD;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,cAAc,sCAAsC;AACpD,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc,uCAAuC;AACrD,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,eAAe;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,sBAAsB;AACpC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC9RA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,oBAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO,MAAM;AACxB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,U;;;;;;;;;;;AC/Fd;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,qBAAU;;AAE/B,uBAAuB,mBAAO,CAAC,kCAAwB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;AC9ED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAmB;AAClC;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA,SAAS;AACT,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AC/JA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD,WAAW,6CAA6C;AACxD,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,sCAAsC;AAClD,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,EAAE;AACd;;;AAGA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,EAAE;AACd;;;AAGA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA,GAAG,EAAE;;AAEL,qCAAqC,SAAS;AAC9C;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,eAAe,cAAc;AAC7B,eAAe,EAAE;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA,eAAe,OAAO;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACpjBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,YAAY,mBAAO,CAAC,2BAAgB;;AAEpC,iBAAiB,mBAAO,CAAC,yBAAc;;AAEvC,aAAa,mBAAO,CAAC,qBAAU;;AAE/B,oBAAoB,mBAAO,CAAC,kCAAuB;;AAEnD;AACA;;AAEA,uBAAuB,mBAAO,CAAC,qCAA0B;;AAEzD;;AAEA,wBAAwB,mBAAO,CAAC,gCAAqB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAoD;AAC/D,sCAAsC,yCAAyC;AAC/E;AACA,WAAW,2BAA2B;AACtC;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,8FAA8F;;AAE9F;AACA,mEAAmE;;AAEnE;;AAEA,8CAA8C;;;AAG9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,WAAW;AAClC;AACA;AACA,sCAAsC;;AAEtC,mBAAmB,YAAY;AAC/B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,WAAW;AAClC;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC,mBAAmB,YAAY;AAC/B;AACA,gDAAgD;;AAEhD;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;;AAEA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uFAAuF;AACvF;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;;AAEA;AACA,GAAG;;;AAGH,sCAAsC,SAAS;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;;AAE5C;;AAEA;AACA,oGAAoG;AACpG;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC;;AAEhC;AACA;;AAEA,qBAAqB,eAAe;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA,GAAG;;;AAGH,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA,GAAG,EAAE;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH,yBAAyB;;AAEzB;AACA,EAAE;AACF;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;;AAE5B,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW,SAAS;AACpB,WAAW,EAAE;AACb;AACA;AACA,uCAAuC;AACvC,iDAAiD;AACjD,+BAA+B;AAC/B;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,aAAa;AAC3B;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW,SAAS;AACpB,WAAW,EAAE;AACb;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA,qCAAqC;;AAErC;AACA;AACA,KAAK;AACL;;AAEA;AACA,KAAK;AACL,qBAAqB,aAAa;AAClC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C;AACA;;AAEA,uBAAuB,SAAS;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA,uBAAuB,SAAS;AAChC;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,mBAAmB;AACxC;;AAEA,gDAAgD;;;AAGhD;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,mBAAmB;AACxC;AACA;;AAEA,uBAAuB,aAAa;AACpC;;AAEA,iDAAiD;;;AAGjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE;;;AAGF;AACA;AACA,0GAA0G;;AAE1G;AACA;AACA,0CAA0C;;AAE1C,iBAAiB,0BAA0B;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,6BAA6B;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA,eAAe;;AAEf;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,uBAAuB;AAChD,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;;AAEvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;;;AAGA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,uBAAuB;AAClC;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA,uEAAuE;;AAEvE;AACA;AACA,0B;;;;;;;;;;;ACniEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;;AAEA,kBAAkB,mBAAO,CAAC,+BAAqB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAmD;AAC3D,QAAQ,+CAA+C;AACvD,QAAQ,mDAAmD;AAC3D,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA,sFAAsF;AACtF;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,0B;;;;;;;;;;;AC1KA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,eAAe,mBAAO,CAAC,8BAAmB;;AAE1C,WAAW,mBAAO,CAAC,mBAAQ;;AAE3B,uBAAuB,mBAAO,CAAC,sCAA2B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,yBAAyB;AACpC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,mCAAmC,MAAM,EAAE;AAC3C,+CAA+C,MAAM,EAAE;AACvD,gDAAgD,MAAM,EAAE;AACxD;AACA,aAAa,yCAAyC;AACtD,yBAAyB;AACzB,UAAU;AACV;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,0CAA0C;AAC7D;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,oEAAoE,SAAS;AAC7E;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,kCAAkC;AAC/C,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,oEAAoE,SAAS;AAC7E;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,QAAQ;AACrB,cAAc,0CAA0C;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,cAAc;AAC3B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,MAAM,EAAE;AAC3C,+CAA+C,MAAM,EAAE;AACvD,gDAAgD,MAAM,EAAE;AACxD;AACA,aAAa,yCAAyC;AACtD,yBAAyB;AACzB,UAAU;AACV;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AClhBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA,oBAAoB,mBAAO,CAAC,2BAAgB;;AAE5C;AACA;;AAEA,aAAa,mBAAO,CAAC,sBAAW;;AAEhC,uBAAuB,mBAAO,CAAC,8BAAmB;;AAElD;;AAEA,wBAAwB,mBAAO,CAAC,iCAAsB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA,UAAU,8BAA8B;AACxC;AACA,UAAU,YAAY;AACtB,WAAW,wCAAwC;AACnD,WAAW,OAAO;AAClB,WAAW,sBAAsB;AACjC,+BAA+B,WAAW;AAC1C,WAAW,eAAe,uCAAuC;AACjE,WAAW,SAAS;AACpB;AACA,sBAAsB;AACtB,wBAAwB;AACxB,gBAAgB,OAAO;AACvB,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA,qEAAqE;;AAErE,iBAAiB,cAAc;AAC/B,2CAA2C;AAC3C;AACA,KAAK;AACL;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uCAAuC;;AAEvC;AACA,kDAAkD;AAClD,SAAS,SAAS,aAAa;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;;AAEA,2CAA2C;;AAE3C;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA,qBAAqB,0DAA0D;AAC/E;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO,kDAAkD,YAAY;;;AAGrE;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC,4BAA4B,yBAAyB;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AClUA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,mBAAO,CAAC,iCAAsB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oDAAoD;AAC/D,WAAW,aAAa;AACxB,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,sBAAsB;AACjC,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;AACA;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA,aAAa,mBAAO,CAAC,sBAAW;;AAEhC,kBAAkB,mBAAO,CAAC,wBAAc;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD;;AAElD,2BAA2B;;AAE3B,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,uBAAuB,2BAA2B;AAClD;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,6BAA6B;;AAE9G;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,cAAc;AACzB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,YAAY,6BAA6B;AACzC;;;AAGA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B,8BAA8B;AAC9B,wBAAwB;AACxB,uBAAuB,mB;;;;;;;;;;;ACxXvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,sBAAsB;AACjC;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;;AAEA,uBAAuB;AACvB,0BAA0B;AAC1B,2BAA2B,uB;;;;;;;;;;;ACpL3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA,iDAAiD;AACjD;;AAEA;AACA,GAAG;AACH;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA,wBAAwB;AACxB,2BAA2B;AAC3B,8BAA8B,0B;;;;;;;;;;;ACnK9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO,cAAc,eAAe;AAC/C,0BAA0B,+BAA+B;AACzD;AACA,WAAW,OAAO,kBAAkB,eAAe;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA,KAAK;AACL,GAAG,EAAE;;AAEL,gFAAgF;AAChF;;AAEA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yBAAc;;AAEpC;;AAEA,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,sBAAW;;AAEhC,kBAAkB,mBAAO,CAAC,wBAAc;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,WAAW,8CAA8C;AACzD,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,sCAAsC,SAAS;AAC/C;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,QAAQ;AACR,oBAAoB,IAAI;AACxB;AACA;AACA,QAAQ;AACR;AACA;AACA,YAAY,2BAA2B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,YAAY,GAAG,SAAS,YAAY,GAAG,SAAS,YAAY;AAClF;AACA;AACA,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC,YAAY;;;AAGb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK,EAAE;AACP;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA,GAAG;AACH;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE;;;AAGpE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB,mBAAmB,iDAAiD;AACrG,WAAW,oBAAoB;AAC/B,WAAW,mBAAmB;AAC9B,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA,WAAW,oBAAoB;AAC/B,WAAW,mBAAmB;AAC9B,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG,gBAAgB,KAAK;;;AAGxB;AACA;AACA;AACA,0BAA0B;;AAE1B,gDAAgD,SAAS;AACzD;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,+BAA+B;;AAE/B,2FAA2F;AAC3F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,kCAAkC;AAClC;AACA,sCAAsC,SAAS,SAAS;AACxD,2CAA2C,SAAS,YAAY,EAAE;AAClE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,OAAO;AAClB,YAAY,WAAW;AACvB;;;AAGA;AACA;AACA,CAAC;AACD,WAAW;;;AAGX;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,gCAAgC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,gCAAgC;AACnD;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,gCAAgC;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB;AAClB,0BAA0B;AAC1B,iBAAiB;AACjB,4BAA4B;AAC5B,qBAAqB;AACrB,uCAAuC;AACvC,oCAAoC;AACpC,oBAAoB,gB;;;;;;;;;;;AChrBpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,8BAA8B;AAC9B,gCAAgC;AAChC,iCAAiC;AACjC,mCAAmC;AACnC,6BAA6B;AAC7B,iCAAiC;AACjC,+BAA+B;AAC/B,4BAA4B,wB;;;;;;;;;;;ACtD5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,qBAAU;;AAEhC;;AAEA,cAAc,mBAAO,CAAC,gCAAqB;;AAE3C,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,cAAc,mBAAO,CAAC,qCAA0B;;AAEhD,eAAe,mBAAO,CAAC,uCAA4B;;AAEnD,kBAAkB,mBAAO,CAAC,2BAAgB;;AAE1C,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,8BAA8B,mBAAO,CAAC,8BAAoB;;AAE1D,oBAAoB,mBAAO,CAAC,kCAAuB;;AAEnD,qBAAqB,mBAAO,CAAC,0CAA+B;;AAE5D,gBAAgB,mBAAO,CAAC,kCAAuB;;AAE/C,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD,kBAAkB,mBAAO,CAAC,2BAAgB;;AAE1C,oBAAoB,mBAAO,CAAC,6BAAkB;;AAE9C,gBAAgB,mBAAO,CAAC,yBAAc;;AAEtC,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC,gBAAgB,mBAAO,CAAC,yBAAc;;AAEtC,gBAAgB,mBAAO,CAAC,4BAAiB;;AAEzC;;AAEA,kBAAkB,mBAAO,CAAC,iCAAsB;;AAEhD,WAAW,mBAAO,CAAC,0BAAe;;AAElC,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD,gBAAgB,mBAAO,CAAC,8BAAoB;;AAE5C,iBAAiB,mBAAO,CAAC,0BAAe;;AAExC,gBAAgB,mBAAO,CAAC,yBAAc;;AAEtC,mBAAO,CAAC,gCAAqB;;AAE7B,qBAAqB,mBAAO,CAAC,uCAA4B;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA,iDAAiD;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA,4CAA4C;;AAE5C,qBAAqB;;;AAGrB,+CAA+C;;AAE/C;AACA;AACA,8BAA8B;;AAE9B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;;AAE9C;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,gDAAgD;;;AAGvD;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,oCAAoC;AACpC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;;AAEzC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY;AACZ,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY;AACZ,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,YAAY,aAAa;AACzB;;;AAGA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,YAAY,aAAa;AACzB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY,4BAA4B;AACxC,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA,0DAA0D;AAC1D;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;;AAExC,0EAA0E;;AAE1E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,yCAAyC;AACzC,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA,KAAK,EAAE;AACP;;;AAGA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,qCAAqC;AAClG;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,eAAe;AAC5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;;AAE3C;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4BAA4B;;AAE5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,oEAAoE;;AAEpE,2CAA2C,aAAa;;AAExD;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,iBAAiB;AAC5B;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY,4BAA4B;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,qCAAqC;;AAErC,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,mCAAmC;AACnC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,EAAE;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,2DAA2D;AACtE,WAAW,wDAAwD;AACnE;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,WAAW,2DAA2D;AACtE,WAAW,wDAAwD;AACnE;;;AAGA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,OAAO,eAAe,KAAK,iBAAiB,KAAK,iBAAiB;AAClE,OAAO,cAAc,KAAK,gBAAgB,KAAK,gBAAgB;AAC/D;AACA,OAAO,eAAe,KAAK,iBAAiB,KAAK,aAAa;AAC9D;AACA,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA,8CAA8C;;AAE9C;AACA;AACA,KAAK,sCAAsC,0BAA0B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;;AAEA;AACA,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD;;;AAGA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA,YAAY,6CAA6C;AACzD;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA,0DAA0D,MAAM;AAChE,6CAA6C,MAAM;AACnD;AACA,QAAQ,6DAA6D;AACrE,oBAAoB;AACpB;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,KAAK;;AAER;AACA,+BAA+B;;AAE/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC;;;AAGA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,MAAM;AACjC;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,6BAA6B;AACxC,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC,eAAe;;AAEhB;AACA,iCAAiC;AACjC;;AAEA;AACA,eAAe;AACf,oBAAoB;AACpB,gBAAgB;AAChB,YAAY;AACZ,eAAe;AACf,kBAAkB;AAClB,kBAAkB;AAClB,eAAe;AACf,wBAAwB;AACxB,uBAAuB;AACvB,qBAAqB;AACrB,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B;AAC1B,sBAAsB;AACtB,gCAAgC;AAChC,qCAAqC;AACrC,sBAAsB;AACtB,sBAAsB;AACtB,uBAAuB;AACvB,4BAA4B;AAC5B,2BAA2B;AAC3B,yBAAyB;AACzB,uBAAuB;AACvB,wBAAwB;AACxB,mBAAmB;AACnB,cAAc;AACd,gBAAgB;AAChB,mBAAmB,mBAAO,CAAC,qBAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;;;;;ACxyED;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,gCAAqB;;AAE3C,eAAe;;AAEf,aAAa,mBAAO,CAAC,mCAAyB;;AAE9C,cAAc;;AAEd,aAAa,mBAAO,CAAC,oCAAyB;;AAE9C,cAAc;;AAEd,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,aAAa;;AAEb,kBAAkB,mBAAO,CAAC,2BAAgB;;AAE1C,iBAAiB,mBAAO,CAAC,0BAAe;;AAExC,cAAc;;AAEd,iBAAiB,mBAAO,CAAC,0BAAe;;AAExC,cAAc;;AAEd,gBAAgB,mBAAO,CAAC,4BAAiB;;AAEzC;AACA,gBAAgB;;AAEhB,eAAe,mBAAO,CAAC,qBAAU;;AAEjC,cAAc;;AAEd,mBAAmB,mBAAO,CAAC,qCAA0B;;AAErD,oBAAoB;;AAEpB,YAAY,mBAAO,CAAC,wBAAa;;AAEjC,YAAY;;AAEZ,aAAa,mBAAO,CAAC,0BAAe;;AAEpC,aAAa;;AAEb,YAAY,mBAAO,CAAC,yBAAc;;AAElC,YAAY;;AAEZ,WAAW,mBAAO,CAAC,iCAAsB;;AAEzC,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD,oBAAoB;AACpB,YAAY;AACZ,eAAe,W;;;;;;;;;;;AC7Gf;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,0BAA0B,mBAAO,CAAC,+CAAoC;;AAEtE,iBAAiB,mBAAO,CAAC,+BAAoB;;AAE7C,2BAA2B,mBAAO,CAAC,yCAA8B;;AAEjE,YAAY,mBAAO,CAAC,0BAAe;;AAEnC,cAAc,mBAAO,CAAC,0BAAe;;AAErC;AACA,qBAAqB;;AAErB,uBAAuB,mBAAO,CAAC,0CAA+B;;AAE9D;AACA;AACA;;AAEA,0BAA0B,mBAAO,CAAC,6CAAkC;;AAEpE,0BAA0B;;AAE1B,wBAAwB,mBAAO,CAAC,2CAAgC;;AAEhE,wBAAwB;;AAExB,cAAc,mBAAO,CAAC,0BAAe;;AAErC,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,2BAA2B;AACvC,YAAY,yBAAyB;AACrC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,4BAA4B;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,kBAAkB;AAClB,iBAAiB;AACjB,mBAAmB;AACnB,mCAAmC,+B;;;;;;;;;;;AC5InC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,0BAA0B,MAAM;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA,yBAAyB,WAAW,IAAI,WAAW;AACnD,4BAA4B,WAAW;AACvC,OAAO;AACP;AACA,oBAAoB,YAAY;AAChC,qBAAqB,SAAS,SAAS,WAAW,EAAE,WAAW;AAC/D,wBAAwB,SAAS,OAAO,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yBAAyB,WAAW;AACpC,kBAAkB,KAAK,KAAK,MAAM;AAClC,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AChJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;;AAEA,uBAAuB,mBAAO,CAAC,2CAAgC;;AAE/D;;AAEA,0BAA0B,mBAAO,CAAC,gDAAqC;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,0BAA0B;AACrC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO,EAAE,4BAA4B;AACjD;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAM,qDAAqD;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,uBAAuB,yBAAyB;AAChD;;AAEA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,0BAA0B;AACrC,WAAW,4BAA4B;AACvC,YAAY,OAAO,EAAE,UAAU,eAAe,KAAK,cAAc;AACjE;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;;AAE1E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D;;AAE9D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;;AAEA,uBAAuB;AACvB,8BAA8B;AAC9B,wBAAwB;AACxB,4BAA4B;AAC5B,cAAc;AACd,mBAAmB,e;;;;;;;;;;;ACnkBnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;;AAEA,uBAAuB,mBAAO,CAAC,2CAAgC;;AAE/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACzRA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA,0BAA0B,mBAAO,CAAC,gDAAqC;;AAEvE,uBAAuB,mBAAO,CAAC,2CAAgC;;AAE/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uEAAuE,gBAAgB;AACvF;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,oDAAoD,UAAU,eAAe;;AAE7E;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,4BAAiB;;AAEvC,kBAAkB,mBAAO,CAAC,qCAA0B;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;;;AAGH;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACjJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,oBAAoB,mBAAO,CAAC,8BAAmB;;AAE/C,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;AACA;;AAEA,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;;AAEA,aAAa,mBAAO,CAAC,2BAAgB;;AAErC,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,2BAA2B;AACtC;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,EAAE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD,qDAAqD;;AAErD;;AAEA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;AClPA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,qBAAqB,mBAAO,CAAC,wBAAa;;AAE1C,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C,wBAAwB,mBAAO,CAAC,iCAAsB;;AAEtD,oBAAoB,mBAAO,CAAC,wCAA6B;;AAEzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,iEAAiE;AACxJ;AACA;;AAEA;AACA,uCAAuC;AACvC,yCAAyC;AACzC,SAAS;AACT;;AAEA;AACA,0DAA0D;;AAE1D;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oEAAoE;AACpE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO,QAAQ;;AAEf;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,sBAAsB;AACnC,aAAa,sBAAsB;AACnC,aAAa,sBAAsB;AACnC,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8BAA8B;AACxC;AACA;AACA,UAAU,4CAA4C;AACtD;AACA;AACA,UAAU;AACV,0CAA0C;AAC1C;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO,yBAAyB,yBAAyB;AACtE;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,UAAU,8BAA8B,mBAAmB;AAC3D,kCAAkC;AAClC;AACA;AACA,UAAU,4CAA4C,mBAAmB;AACzE,kCAAkC;AAClC;AACA;AACA,aAAa,eAAe;AAC5B;AACA,aAAa,SAAS;AACtB,aAAa,EAAE;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,EAAE;AACf;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,EAAE;AACf;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,SAAS;AACtB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0BAA0B;AAC1B,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,YAAY,OAAO,OAAO,OAAO,eAAe,eAAe;AAC/D;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,0B;;;;;;;;;;;ACntBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;;AAEA,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;AACA;;AAEA,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD,qBAAqB,mBAAO,CAAC,8BAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,4BAA4B;AACvC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,sBAAsB;AACnC,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,sBAAsB;AACnC,aAAa,2BAA2B;AACxC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH,sCAAsC;AACtC,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,SAAS;AACtB,mBAAmB,sBAAsB;AACzC,oBAAoB;AACpB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC5OA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC,qBAAqB,mBAAO,CAAC,wBAAa;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,oBAAoB,IAAI;AACxB,uBAAuB,IAAI;AAC3B;AACA,gBAAgB,YAAY;AAC5B,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,wBAAwB,IAAI;AAC5B;AACA,oBAAoB,YAAY;AAChC,oBAAoB,YAAY;AAChC;AACA;AACA,YAAY;AACZ,sBAAsB,IAAI;AAC1B;AACA,gBAAgB,QAAQ,IAAI,WAAW,aAAa;AACpD,gBAAgB,QAAQ,IAAI,WAAW,aAAa;AACpD;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC,4BAA4B,SAAS,MAAM,cAAc;AACzD,gBAAgB;AAChB;AACA,2BAA2B,6BAA6B;AACxD,4BAA4B,SAAS,OAAO,cAAc;AAC1D,gBAAgB;AAChB;AACA,4BAA4B,SAAS,QAAQ,cAAc;AAC3D;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW,gBAAgB,MAAM;AAC7D,4BAA4B,WAAW,eAAe,MAAM;;;AAG5D;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,4BAA4B;AACzC,aAAa,iBAAiB;AAC9B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;;AAGA,iCAAiC;AACjC;;AAEA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA,0EAA0E;AAC1E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,4BAA4B;AACzC,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,4BAA4B;AACzC,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA,KAAK;;;AAGL,2CAA2C,SAAS;AACpD;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA,0BAA0B,uBAAuB;AACjD,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA,0B;;;;;;;;;;;ACncA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,UAAU,mBAAO,CAAC,iCAAsB;;AAExC,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC,qBAAqB,mBAAO,CAAC,wBAAa;;AAE1C,wBAAwB,mBAAO,CAAC,iCAAsB;;AAEtD,sBAAsB,mBAAO,CAAC,sCAA2B;;AAEzD,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;AACA;;AAEA,YAAY,mBAAO,CAAC,2BAAgB;;AAEpC;;AAEA,oBAAoB,mBAAO,CAAC,wCAA6B;;AAEzD;AACA;;AAEA,oBAAoB,mBAAO,CAAC,wCAA6B;;AAEzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA,aAAa,OAAO;AACpB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,WAAW;AACX,cAAc,2BAA2B;AACzC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,iDAAiD;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;;AAEA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,+BAA+B;;AAE/B;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,aAAa,eAAe;AAC5B,aAAa,uCAAuC;AACpD,cAAc,OAAO,EAAE,0BAA0B;AACjD;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,eAAe;AAC7B;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACrmBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAO,CAAC,8BAAmB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,iFAAiF;;AAEjF;AACA;AACA;;AAEA;AACA;AACA,4JAA4J;;AAE5J;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,2CAAgC;;AAE5D;;AAEA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;;AAEA,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ,GAAG;;AAExC;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,6CAA6C,iBAAiB,KAAK,IAAI,SAAS;AAChF,0BAA0B;;AAE1B;AACA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA,8BAA8B;AAC9B;AACA;AACA,0B;;;;;;;;;;;ACjKA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAO,CAAC,8BAAmB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAO,CAAC,8BAAmB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,qCAA0B;;AAEpD,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,2B;;;;;;;;;;;AC5L/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,gCAAsB;;AAEhD,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C,2CAA2C;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D,SAAS;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC,2CAA2C;;AAE3C;;AAEA;AACA,iDAAiD;;AAEjD,sDAAsD;;AAEtD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,4BAA4B;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC7TA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;;AAErC,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA,KAAK;;;AAGL;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA,KAAK;;;AAGL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA,4EAA4E;AAC5E;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;;;AAGP;;AAEA,kCAAkC,QAAQ;AAC1C,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA,sGAAsG;;AAEtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,0CAA0C;;AAE1C;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,aAAa,mBAAO,CAAC,qBAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB;;AAEvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iFAAiF;;AAEjF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA,sEAAsE;;AAEtE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AClTA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC,oBAAoB,mBAAO,CAAC,uBAAY;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;;AAEA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C;;AAE9C;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AClNA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,kBAAkB,mBAAO,CAAC,gCAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,+CAA+C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,cAAc;AAC3B,cAAc;AACd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC,kBAAkB,mBAAO,CAAC,qBAAU;;AAEpC,oBAAoB,mBAAO,CAAC,uBAAY;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA,sEAAsE;;AAEtE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0B;;;;;;;;;;;ACjPA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO,EAAE;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH,4EAA4E;;AAE5E;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B,4BAA4B;AAC5B,iBAAiB,a;;;;;;;;;;;ACtGjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,mBAAQ;;AAE5B;;AAEA,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;;AAEA,kBAAkB,mBAAO,CAAC,4BAAiB;;AAE3C,mBAAmB,mBAAO,CAAC,4BAAiB;;AAE5C,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA,uFAAuF;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,yEAAyE;AACzE;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0B;;;;;;;;;;;AC9jBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,yBAAyB;AACzB;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA,yDAAyD,mBAAmB;AAC5E,mFAAmF,mBAAmB;AACtG;AACA;AACA,wBAAwB,qBAAqB,GAAG,qCAAqC,GAAG,2BAA2B;AACnH,uBAAuB,wBAAwB;AAC/C,QAAQ;AACR;AACA;AACA,uBAAuB,uCAAuC,UAAU,GAAG;AAC3E;AACA,mBAAmB,kCAAkC;AACrD;AACA,uBAAuB,uCAAuC;AAC9D;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,wCAAwC;AACpD,YAAY,oCAAoC;AAChD,YAAY;AACZ;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD,YAAY;AACZ;AACA;AACA,uBAAuB,cAAc;AACrC;AACA,cAAc,UAAU,MAAM,WAAW;AACzC;AACA;AACA;AACA;;;AAGA,kBAAkB,c;;;;;;;;;;;ACvVlB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC1KA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,mBAAmB,QAAQ,WAAW,UAAU,aAAa;AAC7D,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,c;;;;;;;;;;;ACxIlB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;;;AAGA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,MAAM;AACN;;AAEA,sBAAsB;AACtB,yBAAyB;AACzB,wBAAwB;AACxB,6BAA6B;AAC7B,mBAAmB,e;;;;;;;;;;;ACvRnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,aAAa,mBAAO,CAAC,oBAAS;;AAE9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA,aAAa,eAAe;AAC5B,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,cAAc;AACd,8BAA8B;AAC9B,+BAA+B,2B;;;;;;;;;;;ACzN/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,kBAAkB,mBAAO,CAAC,qCAA0B;;AAEpD,iBAAiB,mBAAO,CAAC,qBAAU;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,IAAI,UAAU,EAAE;AAC3C;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd,cAAc;AACd;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA,WAAW,uDAAuD;AAClE;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA,yBAAyB,uBAAuB;AAChD,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA,wBAAwB,YAAY;AACpC,GAAG;AACH;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mEAAmE,sBAAsB,iBAAiB,gBAAgB,uBAAuB,UAAU,WAAW,2CAA2C,4EAA4E,iBAAiB,wBAAwB,WAAW,YAAY,2CAA2C;AACxY,GAAG;AACH;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO,EAAE;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,iBAAiB;AACjB,mBAAmB;AACnB,yBAAyB;AACzB,kBAAkB;AAClB,iBAAiB;AACjB,uBAAuB;AACvB,wBAAwB;AACxB,kBAAkB;AAClB,oBAAoB;AACpB,oBAAoB;AACpB,2BAA2B;AAC3B,mBAAmB;AACnB,kBAAkB,c;;;;;;;;;;;ACnSlB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,eAAe,mBAAO,CAAC,kCAAuB;;AAE9C,gBAAgB,mBAAO,CAAC,mCAAwB;;AAEhD,aAAa,mBAAO,CAAC,mCAAyB;;AAE9C,aAAa,mBAAO,CAAC,oCAAyB;;AAE9C,WAAW,mBAAO,CAAC,oCAA0B;;AAE7C,oBAAoB,mBAAO,CAAC,4CAAiC;;AAE7D,aAAa,mBAAO,CAAC,sCAA2B;;AAEhD,aAAa;;AAEb,YAAY,mBAAO,CAAC,wCAA6B;;AAEjD,aAAa;;AAEb,WAAW,mBAAO,CAAC,qCAA0B;;AAE7C,YAAY;;AAEZ,aAAa,mBAAO,CAAC,6CAAkC;;AAEvD,cAAc;;AAEd,aAAa,mBAAO,CAAC,6CAAkC;;AAEvD,cAAc;;AAEd,WAAW,mBAAO,CAAC,2CAAgC;;AAEnD,YAAY;;AAEZ,cAAc,mBAAO,CAAC,8CAAmC;;AAEzD,eAAe;;AAEf,eAAe,mBAAO,CAAC,+CAAoC;;AAE3D,gBAAgB;;AAEhB,WAAW,mBAAO,CAAC,2CAAgC;;AAEnD,YAAY;;AAEZ,WAAW,mBAAO,CAAC,0CAAgC;;AAEnD,YAAY;;AAEZ,kBAAkB,mBAAO,CAAC,kDAAuC;;AAEjE,mBAAmB;;AAEnB,UAAU,mBAAO,CAAC,0CAA+B;;AAEjD,WAAW;;AAEX,mBAAmB,mBAAO,CAAC,6CAAkC;;AAE7D,oBAAoB;;AAEpB,qBAAqB,mBAAO,CAAC,+CAAoC;;AAEjE,sBAAsB;;AAEtB,qBAAqB,mBAAO,CAAC,+CAAoC;;AAEjE,sBAAsB;;AAEtB,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,oBAAoB;;AAEpB,6BAA6B,mBAAO,CAAC,uDAA4C;;AAEjF,8BAA8B;;AAE9B,2BAA2B,mBAAO,CAAC,wDAA6C;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,iCAAiC;AAC5C,WAAW,OAAO;AAClB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,iCAAiC;AAC5C,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY,OAAO;AACnB;;;AAGA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB,qCAAqC,2BAA2B;AAChE;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mFAAmF;AACnF,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;;AAGA;AACA,uCAAuC;AACvC;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA,wCAAwC;;AAExC,uFAAuF;;AAEvF,2FAA2F;;AAE3F;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,2BAA2B;AACtC;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C;AAC7E;;AAEA;AACA,sDAAsD;AACtD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6LAA6L;;AAE7L;AACA;AACA;AACA;AACA,uCAAuC,SAAS,WAAW,aAAa,YAAY,MAAM;AAC1F,wCAAwC,SAAS,sCAAsC,MAAM;AAC7F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA,qEAAqE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,eAAe;AAC1B;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,6FAA6F;AAC7F;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE;AACpE,oCAAoC,aAAa,KAAK,yBAAyB,OAAO;AACtF;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,eAAe;AACf;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA,QAAQ,uCAAuC,gCAAgC,EAAE;AACjF;AACA;AACA;AACA,QAAQ,4BAA4B,gCAAgC,EAAE;AACtE;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,mCAAmC;AAC9C;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,0CAA0C;AACrD;AACA,WAAW,0BAA0B;AACrC,WAAW,SAAS;AACpB,YAAY,eAAe;AAC3B;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,OAAO,OAAO;AACzB,YAAY,uBAAuB;AACnC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,OAAO,aAAa;AAC/B,WAAW,OAAO,OAAO;AACzB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO,SAAS;AAC3B,YAAY,uBAAuB;AACnC;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,uBAAuB;AAClC,YAAY;AACZ;;;AAGA;AACA,iDAAiD,mBAAmB;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,qCAAqC;AACrC,mBAAmB;AACnB,kBAAkB;AAClB,qBAAqB;AACrB,qBAAqB;AACrB,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB,kBAAkB;AAClB,4BAA4B;AAC5B,4BAA4B;AAC5B,wBAAwB;AACxB,4BAA4B;AAC5B,qBAAqB;AACrB,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB,qBAAqB;AACrB,wBAAwB;AACxB,oBAAoB;AACpB,eAAe;AACf,eAAe;AACf,mBAAmB;AACnB,iBAAiB;AACjB,oBAAoB;AACpB,sBAAsB;AACtB,0BAA0B;AAC1B,uBAAuB;AACvB,wBAAwB;AACxB,sBAAsB;AACtB,kBAAkB;AAClB,4BAA4B;AAC5B,yBAAyB,qB;;;;;;;;;;;ACr/CzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,cAAc,mBAAO,CAAC,qBAAU;;AAEhC;;AAEA,iBAAiB,mBAAO,CAAC,qBAAU;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,OAAO,gBAAgB;AAClC,WAAW,cAAc;AACzB,YAAY,OAAO,EAAE;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,UAAU,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG,wCAAwC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO,qBAAqB;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB,cAAc;AAC9D;AACA,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,wBAAwB;AACnC;AACA;;;AAGA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK,sBAAsB,uBAAuB;AAClD,yBAAyB,WAAW,iBAAiB,WAAW;AAChE;AACA;;;AAGA;AACA;AACA,KAAK,sBAAsB,uBAAuB;AAClD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,uBAAuB,kBAAkB;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,uBAAuB;AACvB,gBAAgB;AAChB,WAAW;AACX,YAAY;AACZ,YAAY;AACZ,wBAAwB;AACxB,qBAAqB;AACrB,uBAAuB;AACvB,sBAAsB;AACtB,wBAAwB;AACxB,uBAAuB;AACvB,wBAAwB,oB;;;;;;;;;;;ACzgBxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,UAAU,mBAAO,CAAC,iCAAsB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,EAAE;AACd,YAAY,MAAM;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,oBAAoB;AACpB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD,yCAAyC,SAAS;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8aAA8a;AAC9a;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,WAAW,eAAe,eAAe;AACtE;AACA,WAAW,gCAAgC;AAC3C,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,WAAW,eAAe,eAAe;AACtE;AACA,WAAW,gCAAgC;AAC3C;;;AAGA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sDAAsD;AACjE,WAAW,sBAAsB;AACjC,YAAY,eAAe,gBAAgB,wBAAwB,IAAI;AACvE;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA,KAAK;;;AAGL,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA,UAAU,mBAAmB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe,gBAAgB,wBAAwB,IAAI;AACtE;AACA,YAAY,eAAe;AAC3B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,uCAAuC;AACvC,GAAG,EAAE;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,qBAAqB,UAAU,GAAG,UAAU,GAAG,GAAG;AAClD,oBAAoB,GAAG,GAAG,UAAU,GAAG,UAAU;AACjD;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe,gBAAgB,mCAAmC;AAC7E,WAAW,eAAe,gBAAgB,mCAAmC;AAC7E,YAAY,uCAAuC;AACnD;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;;AAEA,gDAAgD,UAAU;AAC1D;;AAEA;AACA;AACA,SAAS;AACT,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB;AACA,YAAY,sBAAsB;AAClC;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,cAAc;AACzB,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,iBAAiB,EAAE;AACnB,kBAAkB,OAAO;AACzB,YAAY,OAAO;AACnB,WAAW,MAAM;AACjB,WAAW,iCAAiC,WAAW;AACvD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,uBAAuB;AACvB,0BAA0B;AAC1B,wBAAwB;AACxB,wBAAwB;AACxB,uBAAuB;AACvB,qBAAqB;AACrB,uBAAuB;AACvB,iBAAiB;AACjB,uBAAuB;AACvB,sBAAsB;AACtB,iBAAiB;AACjB,mBAAmB;AACnB,oBAAoB;AACpB,oBAAoB;AACpB,4BAA4B;AAC5B,iBAAiB,a;;;;;;;;;;;ACjiBjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,eAAe;AAC3B,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,MAAM;AAClB;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;;;AAGA;AACA,2BAA2B;;AAE3B;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA,uFAAuF;;AAEvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;;AAGA,wBAAwB,EAAE,aAAa,IAAI,aAAa,IAAI,YAAY,IAAI,uEAAuE;;AAEnJ;;AAEA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oDAAoD;AACpD,oDAAoD;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kCAAkC;AAC1C,QAAQ,0CAA0C;AAClD,QAAQ,oCAAoC;AAC5C,QAAQ,mCAAmC;AAC3C,QAAQ,mCAAmC;AAC3C,QAAQ,oCAAoC;AAC5C,QAAQ;AACR;AACA,QAAQ,0CAA0C;AAClD,QAAQ,oCAAoC;AAC5C,QAAQ,mCAAmC;AAC3C,QAAQ,kCAAkC;AAC1C,QAAQ,mCAAmC;AAC3C,QAAQ;AACR;AACA,WAAW,eAAe;AAC1B;AACA,YAAY,eAAe;AAC3B;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA,iBAAiB;AACjB,oBAAoB;AACpB,aAAa;AACb,WAAW;AACX,oBAAoB;AACpB,wBAAwB;AACxB,yBAAyB;AACzB,+BAA+B;AAC/B,wBAAwB;AACxB,iBAAiB;AACjB,0BAA0B;AAC1B,iBAAiB;AACjB,gBAAgB;AAChB,wBAAwB;AACxB,YAAY;AACZ,gBAAgB;AAChB,uBAAuB;AACvB,iBAAiB,a;;;;;;;;;;;ACxkBjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,uBAAY;;AAEnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,sBAAW;;AAEjC,mBAAmB,mBAAO,CAAC,0CAA+B;;AAE1D,YAAY,mBAAO,CAAC,qCAA0B;;AAE9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA,kBAAkB;;AAElB;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,EAAE;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH,yDAAyD;AACzD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,gB;;;;;;;;;;;ACtVpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,sBAAsB;AACtB,aAAa,S;;;;;;;;;;;AC/Lb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA,YAAY,mBAAO,CAAC,wCAA6B;;AAEjD,oBAAoB,mBAAO,CAAC,8BAAmB;;AAE/C,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC,kBAAkB,mBAAO,CAAC,4BAAiB;;AAE3C,YAAY,mBAAO,CAAC,2BAAgB;;AAEpC;;AAEA,0BAA0B,mBAAO,CAAC,gDAAqC;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C;AACA,kCAAkC;;AAElC;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,OAAO;AACrB;AACA,0DAA0D;;AAE1D;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,OAAO;AACrB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,OAAO;AACrB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C;AACA,yBAAyB;;AAEzB;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,OAAO;AACrB,cAAc,OAAO,EAAE;AACvB;AACA;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,uBAAuB;AACpC,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,CAAC;;;AAGD,gDAAgD;;AAEhD;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC5RA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,wCAA6B;;AAEjD,oBAAoB,mBAAO,CAAC,8BAAmB;;AAE/C,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC,6DAA6D;AAC7D,yBAAyB;;AAEzB;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,uBAAuB;AACpC,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA,uIAAuI;AACvI,EAAE;;;AAGF,uCAAuC;;AAEvC;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,cAAc,mBAAO,CAAC,mCAAwB;;AAE9C,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B;AACA,WAAW,gBAAgB;AAC3B,gDAAgD,iBAAiB;AACjE,gDAAgD,iCAAiC,KAAK;AACtF,gDAAgD;AAChD;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B;AACA;AACA,sDAAsD,4BAA4B;AAClF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;AAGA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,gFAAgF;;AAEhF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe,+BAA+B;AACzD;AACA,YAAY,eAAe;AAC3B;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe,aAAa,iCAAiC;AACxE;AACA,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA,qBAAqB;;AAErB,yCAAyC,SAAS;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;AClmBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,WAAW,mBAAO,CAAC,oBAAS;;AAE5B,oBAAoB,mBAAO,CAAC,wCAA6B;;AAEzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;;AAEA;;AAEA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,sBAAsB;AACnE,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC3KA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+KAA+K;;AAE/K;AACA;AACA;AACA;;AAEA;AACA,mEAAmE;;AAEnE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,0B;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,yCAA8B;;AAErD,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;;AAE9F;AACA,yFAAyF;;AAEzF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kCAAuB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oFAAoF;;AAEpF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,kCAAuB;;AAE5C,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA,iCAAiC;AACjC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,yBAAyB;AACpC,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uDAAuD;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B,2BAA2B;AAC3B,mBAAmB;AACnB,8BAA8B,0B;;;;;;;;;;AC5O9B,WAAW,mBAAO,CAAC,wBAAa;;AAEhC,eAAe,mBAAO,CAAC,6BAAkB;;AAEzC,oBAAoB,mBAAO,CAAC,kCAAuB;;AAEnD,iBAAiB,mBAAO,CAAC,+BAAoB;;AAE7C,aAAa,mBAAO,CAAC,wBAAa;;AAElC;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,SAAS;AACvB,eAAe;AACf;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,cAAc;AAC3B,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,4BAA4B;AACzC;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA,mBAAmB;;AAEnB;;AAEA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA,qBAAqB;;AAErB;;AAEA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;AC5QA,WAAW,mBAAO,CAAC,wBAAa;;AAEhC,WAAW,mBAAO,CAAC,0BAAe;;AAElC,gBAAgB,mBAAO,CAAC,8BAAmB;;AAE3C,eAAe,mBAAO,CAAC,6BAAkB;;AAEzC,gBAAgB,mBAAO,CAAC,yBAAc;;AAEtC,iBAAiB,mBAAO,CAAC,8BAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC,WAAW,gCAAgC;AAC3C,WAAW,YAAY;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,QAAQ;;AAEf;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yFAAyF;;AAEzF;AACA;AACA,KAAK;;;AAGL,wDAAwD;;AAExD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO,aAAa,kBAAkB;AACnD,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,mCAAmC;AAChD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,QAAQ;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;;AAE/C;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0B;;;;;;;;;;AClbA,WAAW,mBAAO,CAAC,wBAAa;;AAEhC,cAAc,mBAAO,CAAC,qBAAU;;AAEhC;;AAEA,YAAY,mBAAO,CAAC,4BAAiB;;AAErC,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;AC1OA,cAAc,mBAAO,CAAC,qBAAU;;AAEhC;;AAEA,WAAW,mBAAO,CAAC,wBAAa;;AAEhC,eAAe,mBAAO,CAAC,uBAAY;;AAEnC,mBAAmB,mBAAO,CAAC,gCAAqB;;AAEhD,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,4BAA4B,mBAAO,CAAC,8CAAmC;;AAEvE,YAAY,mBAAO,CAAC,4BAAiB;;AAErC,UAAU,mBAAO,CAAC,uBAAY;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;;AAEA;AACA,8CAA8C,wCAAwC;;AAEtF;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,wGAAwG,OAAO;AAC/G;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB;;;AAGA;AACA,uBAAuB;;AAEvB;AACA;AACA,oCAAoC,YAAY;AAChD;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C;;AAE1C;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;;;AAGpD,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6DAA6D;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;;AAE3F;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,sBAAsB;AAC/C;;AAEA;;AAEA;;AAEA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC;AACtC;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,uBAAuB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,uBAAuB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA,qBAAqB,6BAA6B;AAClD,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,kCAAkC;;AAElC,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA,qBAAqB,wBAAwB;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;AC1gCA,WAAW,mBAAO,CAAC,wBAAa;;AAEhC,UAAU,mBAAO,CAAC,uBAAY;;AAE9B,YAAY,mBAAO,CAAC,8BAAmB;;AAEvC,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,QAAQ;AACR,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C,gCAAgC;AAChC;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,0B;;;;;;;;;;ACvOA,WAAW,mBAAO,CAAC,yBAAc;;AAEjC,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;;AAEA,4BAA4B,mBAAO,CAAC,oCAAyB;;AAE7D,eAAe,mBAAO,CAAC,uBAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,SAAS;AACvB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,mDAAmD;;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,kCAAkC;AAC/C;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,8BAA8B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,kCAAkC;AAC/C;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;ACtPA,WAAW,mBAAO,CAAC,mBAAQ;;AAE3B,YAAY,mBAAO,CAAC,0BAAe;;AAEnC,YAAY,mBAAO,CAAC,yBAAc;;AAElC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;;AAEA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;;AAEA,mBAAmB,SAAS;AAC5B,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,mBAAmB,SAAS;AAC5B,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;;AAEA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;;AAEA,mBAAmB,SAAS;AAC5B,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA,mBAAmB;;AAEnB;AACA;AACA,GAAG;AACH,8CAA8C;;AAE9C,sBAAsB;;AAEtB;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B,sDAAsD;;AAEtD,mCAAmC;;AAEnC;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;;AAEzC,iBAAiB,kBAAkB;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,iFAAiF;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,OAAO;;;AAGP;AACA,KAAK;AACL,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,mBAAmB,2BAA2B;AAC9C;AACA;;AAEA;AACA,GAAG;AACH;AACA,mBAAmB,2BAA2B;AAC9C;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,gBAAgB;AAC9B,uBAAuB;AACvB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;;AAEA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;ACnoBA,kBAAkB,mBAAO,CAAC,qBAAU;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC,oCAAoC;;AAEpC,mCAAmC;AACnC,0DAA0D;;AAE1D,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iFAAiF;;AAEjF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;ACzXA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;ACLA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,kBAAkB;;AAElB;AACA,iBAAiB;AACjB,wBAAwB,oB;;;;;;;;;;ACtBxB,YAAY,mBAAO,CAAC,mBAAQ;;AAE5B;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,iB;;;;;;;;;;AC3DrB,YAAY,mBAAO,CAAC,0BAAe;;AAEnC;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,iB;;;;;;;;;;AChCrB;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;;AAEd;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,qBAAqB,iB;;;;;;;;;;ACtCrB,gBAAgB,mBAAO,CAAC,8BAAmB;;AAE3C,WAAW,mBAAO,CAAC,mBAAQ;;AAE3B,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC,UAAU,mBAAO,CAAC,kBAAO;;AAEzB,YAAY,mBAAO,CAAC,mBAAQ;;AAE5B;;AAEA,YAAY,mBAAO,CAAC,0BAAe;;AAEnC,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,OAAO;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC,wBAAwB;;AAExB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;;AAGT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe;AACf,qBAAqB,iB;;;;;;;;;;AC3YrB,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,W;;;;;;;;;;AChCf,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,iB;;;;;;;;;;AChCrB,mBAAmB,mBAAO,CAAC,iCAAsB;;AAEjD,kBAAkB,mBAAO,CAAC,oCAAyB;;AAEnD,YAAY,mBAAO,CAAC,yBAAc;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB,KAAK;AAC7C,qCAAqC;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uCAAuC,OAAO;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO,EAAE;AACrB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,6BAA6B;AACxC,WAAW,OAAO,OAAO,oBAAoB;AAC7C,YAAY,OAAO,wBAAwB;AAC3C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO,OAAO;AACzB,WAAW,OAAO;AAClB,YAAY,OAAO,EAAE;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,4EAA4E;AAC5E;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,gEAAgE;AAChE;;AAEA,4CAA4C;AAC5C;;AAEA;AACA,2DAA2D;AAC3D;;AAEA,sEAAsE;;AAEtE,iBAAiB,6CAA6C;AAC9D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,iCAAiC;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO,SAAS;AAC5B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO,EAAE;AACT;;AAEA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY,WAAW,YAAY,IAAI,GAAG;AACtE,uBAAuB,WAAW;AAClC;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA,4EAA4E;;AAE5E,mEAAmE;;AAEnE,4DAA4D;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+EAA+E;AAC/E;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,OAAO;AACP;AACA,uCAAuC;AACvC;;AAEA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA,0CAA0C;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,OAAO,UAAU;AACjB;AACA;AACA,iDAAiD,GAAG;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,iBAAiB;AACjB,gBAAgB;AAChB,uBAAuB;AACvB,mBAAmB;AACnB,mBAAmB;AACnB,6BAA6B;AAC7B,gCAAgC;AAChC,oBAAoB;AACpB,qBAAqB;AACrB,mBAAmB;AACnB,sBAAsB;AACtB,qBAAqB;AACrB,gBAAgB,Y;;;;;;;;;;AC9sBhB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,mB;;;;;;;;;;ACZvB;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA,6B;;;;;;;;;;ACtBA,aAAa,mBAAO,CAAC,yBAAc;;AAEnC,cAAc,mBAAO,CAAC,uBAAY;;AAElC,mBAAmB,mBAAO,CAAC,iCAAsB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,qBAAqB;AACpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,SAAS;AACvB,eAAe;AACf;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,SAAS;AACvB,eAAe;AACf;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,mBAAmB,2BAA2B;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,2BAA2B;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;ACvTA,WAAW,mBAAO,CAAC,qBAAU;;AAE7B,aAAa,mBAAO,CAAC,oBAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,iCAAiC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,iCAAiC;AAC/C,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,0CAA0C;AACvD,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wCAAwC;AACnD,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;ACtLA,gBAAgB,mBAAO,CAAC,oBAAS;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA,uDAAuD;AACvD;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C;AAC7C,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,0B;;;;;;;;;;AClGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,aAAa;AACb,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,0B;;;;;;;;;;ACzMA,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,WAAW,mBAAO,CAAC,qBAAU;;AAE7B,WAAW,mBAAO,CAAC,mBAAQ;;AAE3B,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,cAAc,yBAAyB;AACvC,cAAc;AACd;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,yBAAyB;AACtC,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,oEAAoE;AACjF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;;AAEA,qBAAqB,2BAA2B;AAChD;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,eAAe;AACpC;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;;AAGL,UAAU,aAAa;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;ACjwBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;;AAEA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA,OAAO;;;AAGP;AACA;AACA;AACA,OAAO;AACP,KAAK;;;AAGL;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA,SAAS;AACT,6BAA6B;;AAE7B;AACA;AACA;;AAEA,4EAA4E;;AAE5E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,6BAA6B;AACrC;;AAEA;AACA;;AAEA,0BAA0B,8BAA8B;AACxD;AACA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA,KAAK;AACL;;AAEA,0BAA0B,8BAA8B;AACxD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;ACrMA,WAAW,mBAAO,CAAC,qBAAU;;AAE7B,YAAY,mBAAO,CAAC,oBAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,gBAAgB;AAChB,iBAAiB;AACjB,qBAAqB;AACrB,eAAe,W;;;;;;;;;;AC5Nf,cAAc,mBAAO,CAAC,qBAAU;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,0BAA0B;;AAE1B,sBAAsB;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe;;AAEf,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B;;;AAGA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe;;AAEf,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA,eAAe;AACf,yBAAyB;AACzB,mBAAmB;AACnB,oBAAoB;AACpB,sBAAsB;AACtB,yBAAyB;AACzB,mBAAmB;AACnB,6BAA6B;AAC7B,uBAAuB;AACvB,yBAAyB;AACzB,0BAA0B;AAC1B,6BAA6B,yB;;;;;;;;;;ACnhB7B,UAAU,mBAAO,CAAC,kBAAO;;AAEzB,2BAA2B,mBAAO,CAAC,kCAAuB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB,mBAAmB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB;AACA;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA,kEAAkE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,+HAA+H;AAC/H;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B,kCAAkC;AAClC,kBAAkB,c;;;;;;;;;;ACzIlB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,eAAe;AACf,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,eAAe;AACf,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA,mBAAmB,yCAAyC,IAAI;AAChE,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;;AAEA,2DAA2D;AAC3D;AACA,wCAAwC;;AAExC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,YAAY;AACZ,+DAA+D;AAC/D,QAAQ;AACR;AACA;AACA;;;AAGA,0B;;;;;;;;;;ACzKA,eAAe,mBAAO,CAAC,8BAAmB;;AAE1C,kBAAkB;;AAElB,UAAU,mBAAO,CAAC,kBAAO;;AAEzB,WAAW,mBAAO,CAAC,kBAAO;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA,YAAY,MAAM;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,oCAAoC,cAAc,aAAa;AAClE;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;;;AAGA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,CAAC;;;AAGD,qBAAqB;AACrB,sBAAsB;AACtB,sBAAsB;AACtB,wBAAwB;AACxB,2BAA2B;AAC3B,YAAY;AACZ,0CAA0C;AAC1C,oBAAoB,gB;;;;;;;;;;AC7QpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kCAAkC,cAAc;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA,iBAAiB,OAAO;AACxB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,oB;;;;;;;;;;AC7FxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;ACXA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;ACXA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd,gBAAgB;AAChB,YAAY;AACZ,WAAW;AACX,iBAAiB;AACjB,cAAc;AACd,aAAa;AACb,cAAc;AACd,aAAa,S;;;;;;;;;;ACxLb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,aAAa;AAC5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,YAAY;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,YAAY;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA,KAAK;AACL,wBAAwB;AACxB,KAAK;AACL,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,aAAa;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,QAAQ;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,YAAY;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;;AAEA;AACA,KAAK;AACL,wBAAwB;AACxB,KAAK;AACL;;AAEA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,sB;;;;;;;;;;ACzpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY,EAAE;AACd;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,YAAY,EAAE;AACd;;;AAGA;AACA;;AAEA,gDAAgD,SAAS;AACzD;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,qCAAqC,SAAS;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE;AACd;;;AAGA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;;AAGA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gEAAgE;AAChE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;;AAEA,aAAa,cAAc;AAC3B;AACA;;AAEA;AACA;;AAEA;;AAEA,iBAAiB;AACjB,aAAa;AACb,aAAa;AACb,gBAAgB;AAChB,cAAc;AACd,gBAAgB;AAChB,oBAAoB;AACpB,kBAAkB;AAClB,eAAe;AACf,gBAAgB;AAChB,aAAa;AACb,mBAAmB;AACnB,YAAY;AACZ,WAAW;AACX,cAAc;AACd,cAAc;AACd,YAAY;AACZ,YAAY;AACZ,aAAa;AACb,eAAe;AACf,kBAAkB;AAClB,gBAAgB;AAChB,gBAAgB;AAChB,uBAAuB;AACvB,oBAAoB;AACpB,aAAa;AACb,aAAa;AACb,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB,aAAa;AACb,yBAAyB;AACzB,cAAc;AACd,YAAY;AACZ,sBAAsB;AACtB,mBAAmB;AACnB,qBAAqB;AACrB,mBAAmB;AACnB,YAAY,Q;;;;;;;;;;ACnuBZ;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd,YAAY;AACZ,aAAa;AACb,WAAW;AACX,WAAW;AACX,mBAAmB;AACnB,WAAW;AACX,WAAW;AACX,cAAc;AACd,iBAAiB;AACjB,oBAAoB;AACpB,WAAW;AACX,WAAW;AACX,WAAW;AACX,aAAa;AACb,iBAAiB;AACjB,gBAAgB;AAChB,YAAY;AACZ,sBAAsB;AACtB,kBAAkB;AAClB,cAAc;AACd,YAAY;AACZ,sBAAsB;AACtB,WAAW;AACX,WAAW,O;;;;;;;;;;ACzTX,aAAa,mBAAO,CAAC,0BAAe;;AAEpC;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,yBAAc;;AAEnC,eAAe,mBAAO,CAAC,8BAAmB;;AAE1C,UAAU,mBAAO,CAAC,wBAAa;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA,+BAA+B;AAC/B;AACA;;AAEA,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,iDAAiD;AACjD;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,iDAAiD;AACjD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,EAAE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO,EAAE;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA,YAAY,eAAe;AAC3B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;ACxfA,WAAW,mBAAO,CAAC,kBAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,sCAAsC;;AAEtC,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;ACvDA,aAAa,mBAAO,CAAC,yBAAc;;AAEnC,YAAY,mBAAO,CAAC,oBAAS;;AAE7B,cAAc,mBAAO,CAAC,uBAAY;;AAElC,eAAe,mBAAO,CAAC,6BAAkB;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA,oBAAoB;AACpB;AACA;;AAEA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,gCAAgC;AAChC,+BAA+B;;AAE/B;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA,kCAAkC;;AAElC;AACA;AACA,cAAc;AACd;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,SAAS;AACvB,eAAe;AACf;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,aAAa,cAAc;AAC3B,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,6BAA6B;AAC1C,aAAa,OAAO,OAAO;AAC3B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA,0B;;;;;;;;;;ACpRA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0B;;;;;;;;;;ACjBA,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,mBAAmB,mBAAO,CAAC,iCAAsB;;AAEjD,aAAa,mBAAO,CAAC,yBAAc;;AAEnC,kBAAkB,mBAAO,CAAC,2BAAgB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;AC3FA,YAAY,mBAAO,CAAC,yBAAc;;AAElC;;AAEA,iBAAiB,mBAAO,CAAC,0BAAe;;AAExC,mBAAmB,mBAAO,CAAC,iCAAsB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;;AAEA;AACA,4BAA4B,+BAA+B;AAC3D;AACA;;AAEA,iBAAiB,wCAAwC;AACzD;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,+BAA+B;AAC3D,4CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA,iBAAiB,wCAAwC;AACzD,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,+BAA+B;AAC3D;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,iBAAiB,wCAAwC;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,+BAA+B;AAClD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;AClJA,aAAa,mBAAO,CAAC,yBAAc;;AAEnC,eAAe,mBAAO,CAAC,uBAAY;;AAEnC;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;ACjCA,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,aAAa,mBAAO,CAAC,yBAAc;;AAEnC,gBAAgB,mBAAO,CAAC,8BAAmB;;AAE3C,kBAAkB,mBAAO,CAAC,4BAAiB;;AAE3C,cAAc,mBAAO,CAAC,sBAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,wCAAwC;;AAExC;AACA,mEAAmE;AACnE;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kDAAkD;AAClD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC,gCAAgC;;AAEhC,sEAAsE;;AAEtE;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sEAAsE;;AAEtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,aAAa,cAAc;AAC3B,aAAa,EAAE;AACf;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;ACzXA;AACA;AACA,yBAAyB,WAAW;AACpC;AACA,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;ACdA,aAAa,mBAAO,CAAC,yBAAc;;AAEnC,eAAe,mBAAO,CAAC,uBAAY;;AAEnC;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA,+BAA+B;;AAE/B,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;AC/BA,gBAAgB,mBAAO,CAAC,+BAAoB;;AAE5C,gBAAgB,mBAAO,CAAC,uBAAY;;AAEpC;AACA,kLAAkL;AAClL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,MAAM;AACN,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,sBAAsB;AACnC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,+BAA+B;AAC9C;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,0B;;;;;;;;;;AC5dA,kBAAkB,mBAAO,CAAC,0BAAe;;AAEzC,aAAa,mBAAO,CAAC,yBAAc;;AAEnC,kBAAkB,mBAAO,CAAC,4BAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,0BAAe;;AAExC,gBAAgB,mBAAO,CAAC,uBAAY;;AAEpC;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B,+DAA+D;;AAE/D;AACA,0BAA0B;;AAE1B,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,2BAA2B;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,uBAAuB;AACvB,wBAAwB,oB;;;;;;;;;;ACRxB,UAAU,mBAAO,CAAC,2BAAgB;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA,GAAG;AACH;;AAEA,0B;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,2BAAgB;;AAElC;AACA;AACA,WAAW,iDAAiD;AAC5D,YAAY,0CAA0C;AACtD;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iDAAiD;AAC5D,WAAW,0CAA0C;AACrD,WAAW,uBAAuB;AAClC,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,YAAY,0CAA0C;AACtD;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iCAAiC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,2BAA2B;AAC3B,oBAAoB,gB;;;;;;;;;;ACvFpB,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C,mBAAmB,mBAAO,CAAC,2BAAgB;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,wCAAwC,OAAO;AAC/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,a;;;;;;;;;;ACpCjB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,a;;;;;;;;;;ACzFjB,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA,sCAAsC,SAAS;AAC/C;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,mCAAmC;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;ACxGA,cAAc,mBAAO,CAAC,8BAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;;AAEA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;;AAEA,4BAA4B;AAC5B,4BAA4B;AAC5B,wBAAwB,oB;;;;;;;;;;AChHxB,YAAY,mBAAO,CAAC,4BAAiB;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,+BAAoB;;AAE9C,sBAAsB,mBAAO,CAAC,wBAAa;;AAE3C,kBAAkB,mBAAO,CAAC,oBAAS;;AAEnC,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,YAAY,6BAA6B;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4FAA4F;;AAE5F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,6BAA6B;AACxC,WAAW,eAAe,SAAS;AACnC;AACA,WAAW,gEAAgE;AAC3E;;;AAGA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,qEAAqE;;AAErE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA,4BAA4B;AAC5B;;AAEA,8BAA8B;;AAE9B,uCAAuC;;AAEvC,iBAAiB,sCAAsC;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA,qFAAqF;;AAErF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,YAAY;AACb,WAAW;;;AAGX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA,0BAA0B;AAC1B,kBAAkB;AAClB,sBAAsB;AACtB,iBAAiB;AACjB,eAAe;AACf,oBAAoB;AACpB,oBAAoB,gB;;;;;;;;;;ACliBpB,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC,mBAAmB,mBAAO,CAAC,oCAAyB;;AAEpD,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,yBAAyB;AACvC,cAAc,OAAO;AACrB;AACA;AACA;AACA,kCAAkC;;AAElC;AACA,0BAA0B;;AAE1B;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA,eAAe;;AAEf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;AC7DA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;AClCA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B,WAAW,mBAAO,CAAC,8BAAmB;;AAEtC,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;AChHA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;AC/BA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;AClCA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B,wBAAwB,mBAAO,CAAC,uCAA4B;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;AC1EA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;ACpBA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B,iBAAiB,mBAAO,CAAC,2BAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;ACvBA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B,sBAAsB,mBAAO,CAAC,gCAAqB;;AAEnD,wBAAwB,mBAAO,CAAC,uCAA4B;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;AC7DA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;ACzBA,WAAW,mBAAO,CAAC,mBAAS;;AAE5B,wBAAwB,mBAAO,CAAC,wCAA6B;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,0B;;;;;;;;;;AC3CA,eAAe,mBAAO,CAAC,kCAAuB;;AAE9C,eAAe,mBAAO,CAAC,wBAAa;;AAEpC,YAAY,mBAAO,CAAC,yBAAc;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA,0BAA0B,MAAM;AAChC,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;;AAEA,8CAA8C,OAAO;AACrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,6BAA6B;;AAE7B;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAe,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO,qCAAqC,UAAU;AACtD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;;;AAGX;AACA,6EAA6E;AAC7E;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;AACH;;;AAGA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;AClRA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,SAAS;AACpB,kBAAkB,cAAc;AAChC,mBAAmB,cAAc;AACjC,WAAW,SAAS;AACpB;AACA,kBAAkB,OAAO;AACzB,kBAAkB,cAAc;AAChC,mBAAmB;AACnB,WAAW,SAAS;AACpB,kBAAkB,OAAO;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qBAAqB,SAAS;AAC9B;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA,0B;;;;;;;;;;AClXA,aAAa,mBAAO,CAAC,0BAAgB;;AAErC,aAAa,mBAAO,CAAC,2BAAgB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;;;AAGH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;ACnUA,YAAY,mBAAO,CAAC,mBAAQ;;AAE5B;;AAEA,WAAW,mBAAO,CAAC,yBAAc;;AAEjC,eAAe,mBAAO,CAAC,wBAAa;;AAEpC,WAAW,mBAAO,CAAC,2BAAiB;;AAEpC,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC,YAAY,mBAAO,CAAC,4BAAiB;;AAErC,gBAAgB,mBAAO,CAAC,+BAAoB;;AAE5C,sBAAsB,mBAAO,CAAC,oCAA0B;;AAExD,sBAAsB,mBAAO,CAAC,qCAA0B;;AAExD,oBAAoB,mBAAO,CAAC,mCAAwB;;AAEpD,eAAe,mBAAO,CAAC,sBAAW;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA,2CAA2C,kBAAkB,OAAO,MAAM;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,aAAa;AAC5B;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;;AAElD,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA,eAAe,iBAAiB;AAChC;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,iBAAiB;AAChC;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;;;AAGX;AACA,0EAA0E;;AAE1E;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,kCAAkC;;AAElC,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;ACjZA;;AAEA;AACA;AACA;;AAEA,qBAAqB,iB;;;;;;;;;;ACNrB,YAAY,mBAAO,CAAC,mBAAQ;;AAE5B;;AAEA,gBAAgB,mBAAO,CAAC,8BAAmB;;AAE3C,mBAAmB,mBAAO,CAAC,iCAAsB;;AAEjD,aAAa,mBAAO,CAAC,0BAAgB;;AAErC,kBAAkB,mBAAO,CAAC,4BAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,mCAAwB;;AAEjD,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,8BAA8B;;AAEzF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G;;AAE1G;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0DAA0D;;AAE1D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,eAAe,aAAa;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;;AAEA;AACA;AACA,GAAG;;;AAGH,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA,uDAAuD;;AAEvD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,GAAG;;;AAGH;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,UAAU,kBAAkB;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA,YAAY,sBAAsB;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA,CAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,YAAY;AACZ,aAAa;AACb,YAAY,W;;;;;;;;;;AC1gBZ,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC,aAAa,mBAAO,CAAC,4BAAiB;;AAEtC,aAAa,mBAAO,CAAC,6BAAmB;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,WAAW;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;;AAErE;AACA,+BAA+B;;AAE/B;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;;;AAGA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,0B;;;;;;;;;;AC3JA,YAAY,mBAAO,CAAC,oBAAS;;AAE7B;;AAEA,aAAa,mBAAO,CAAC,4BAAiB;;AAEtC,WAAW,mBAAO,CAAC,8BAAoB;;AAEvC,aAAa,mBAAO,CAAC,gCAAqB;;AAE1C,YAAY,mBAAO,CAAC,+BAAoB;;AAExC,eAAe,mBAAO,CAAC,uBAAY;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,uDAAuD;AACvD,WAAW,mBAAmB;AAC9B;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,gBAAgB;AAC5B;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,WAAW;AACvB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,WAAW;AACvB;;;AAGA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;ACzQA,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC,aAAa,mBAAO,CAAC,4BAAiB;;AAEtC,eAAe,mBAAO,CAAC,2BAAgB;;AAEvC,gBAAgB,mBAAO,CAAC,6BAAkB;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,WAAW;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,YAAY;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,YAAY;AACZ;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,oDAAoD;AAC/D;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;;AAGH,qBAAqB;;AAErB;;AAEA,sCAAsC,SAAS;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;AC/MA,gBAAgB,mBAAO,CAAC,wBAAa;;AAErC,aAAa,mBAAO,CAAC,4BAAiB;;AAEtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,WAAW;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,YAAY;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,iBAAiB;AAC7B;;;AAGA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,iBAAiB;AAC5B;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iEAAiE;;AAEjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;AC1LA,mBAAO,CAAC,sBAAW;;AAEnB,eAAe,mBAAO,CAAC,uBAAY;;AAEnC;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC,gC;;;;;;;;;;ACRA,UAAU,mBAAO,CAAC,wBAAaoBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH,2BAA2B;;AAE3B,qDAAqD;;AAErD;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA,KAAK;AACL,2CAA2C;;AAE3C;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,YAAY,eAAe;AAC3B;;;AAGA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY,eAAe;AAC3B;;;AAGA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,+BAA+B;;AAE/B,+BAA+B;;AAE/B,0BAA0B;;AAE1B;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;;AAGA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,uBAAuB;AAClC,WAAW,eAAe;AAC1B,YAAY,eAAe;AAC3B;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,YAAY,gBAAgB;AAC5B,qCAAqC,wDAAwD;AAC7F;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa;AACb,YAAY;AACZ,aAAa;AACb,gBAAgB;AAChB,sBAAsB;AACtB,YAAY;AACZ,kBAAkB;AAClB,iBAAiB;AACjB,mBAAmB;AACnB,iBAAiB,a;;;;;;;;;;AClnBjB,YAAY,mBAAO,CAAC,+BAAoB;;AAExC,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,aAAa,mBAAO,CAAC,oCAAyB;;AAE9C,WAAW,mBAAO,CAAC,kCAAuB;;AAE1C,cAAc,mBAAO,CAAC,qCAA0B;;AAEhD,WAAW,mBAAO,CAAC,iCAAuB;;AAE1C,WAAW,mBAAO,CAAC,2BAAiB;;AAEpC,cAAc,mBAAO,CAAC,qCAA0B;;AAEhD,eAAe,mBAAO,CAAC,sCAA2B;;AAElD,qBAAqB,mBAAO,CAAC,sCAA2B;;AAExD,YAAY,mBAAO,CAAC,6BAAkB;;AAEtC,aAAa,mBAAO,CAAC,0BAAgB;;AAErC,YAAY,mBAAO,CAAC,mBAAQ;;AAE5B;;AAEA,YAAY,mBAAO,CAAC,yBAAc;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB,kDAAkD;AAClD;;AAEA;AACA,oEAAoE;;AAEpE;AACA,mCAAmC;;AAEnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,yCAAyC,OAAO;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD,yBAAyB,eAAe;;AAExC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO,EAAE;AACrB;;;AAGA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC,8BAA8B,gBAAgB;AAC9C;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,4BAA4B;AAC5B,gBAAgB,Y;;;;;;;;;;ACnrBhB,WAAW,mBAAO,CAAC,2BAAiB;;AAEpC,gBAAgB,mBAAO,CAAC,8BAAmB;;AAE3C,oBAAoB,mBAAO,CAAC,4BAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;;AAEtD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA,YAAY;AACZ;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,UAAU;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnwBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;;AAEnC;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC;;AAElC;;AAEA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB;AACxB,wBAAwB;AACxB,iBAAiB,a;;;;;;;;;;ACvbjB,gBAAgB,mBAAO,CAAC,8BAAmB;;AAE3C,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAqD;;AAErD;AACA,uBAAuB;;AAEvB;AACA,uBAAuB;AACvB;;AAEA;AACA,wBAAwB;;AAExB,2BAA2B;;AAE3B,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;ACnGA,eAAe,mBAAO,CAAC,wBAAa;;AAEpC,cAAc,mBAAO,CAAC,mBAAQ;;AAE9B,YAAY,mBAAO,CAAC,yBAAc;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB,kBAAkB,YAAY,aAAa;AAC/G,6CAA6C,OAAO,MAAM;AAC1D;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,CAAC;AACD;AACA,0B;;;;;;;;;;AC9KA,UAAU,mBAAO,CAAC,wBAAa;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,WAAW;AACX,kBAAkB;AAClB,eAAe,W;;;;;;;;;;AC/Cf,UAAU,mBAAO,CAAC,wBAAa;;AAE/B,cAAc,mBAAO,CAAC,2BAAgB;;AAEtC;;AAEA,mBAAmB,mBAAO,CAAC,iCAAsB;;AAEjD,gBAAgB,mBAAO,CAAC,0BAAe;;AAEvC,kBAAkB,mBAAO,CAAC,4BAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,mCAAwB;;AAEjD,eAAe,mBAAO,CAAC,sCAA2B;;AAElD,kBAAkB,mBAAO,CAAC,mCAAwB;;AAElD,aAAa,mBAAO,CAAC,6BAAkB;;AAEvC,WAAW,mBAAO,CAAC,4BAAiB;;AAEpC,WAAW,mBAAO,CAAC,2BAAiB;;AAEpC,gBAAgB,mBAAO,CAAC,8BAAmB;;AAE3C,eAAe,mBAAO,CAAC,gCAAqB;;AAE5C,cAAc,mBAAO,CAAC,mBAAQ;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,OAAO,MAAM,UAAU,WAAW;AAC5E;AACA;AACA;;AAEA;AACA,yCAAyC,wBAAwB;AACjE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA,WAAW;AACX;;;AAGA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA,SAAS;AACT,kCAAkC;;AAElC;AACA;;AAEA,uBAAuB,YAAY;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;;AAEA,gCAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;;AAEjD;AACA,oDAAoD;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,gBAAgB;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,YAAY;AACnC;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAiE;;AAEjE,2BAA2B;;AAE3B;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,yFAAyF;AACzF,IAAI;;;AAGJ;AACA;AACA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA,0BAA0B;;AAE1B;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;;AAE7E;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA,oEAAoE;;AAEpE;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iEAAiE;;AAEjE,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA,uDAAuD,aAAa,OAAO,eAAe,SAAS,YAAY,gBAAgB;AAC/H;AACA;;AAEA;AACA;AACA,KAAK,aAAa;AAClB;;AAEA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,2BAA2B;;AAE3B;AACA,0BAA0B;;AAE1B;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA,qBAAqB,+BAA+B;AACpD;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA,kIAAkI;;AAElI,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA,OAAO;AACP,4EAA4E,qDAAqD;AACjI;AACA,kBAAkB;;AAElB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mEAAmE;;AAEnE,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA,6HAA6H;;AAE7H,8EAA8E;;AAE9E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kDAAkD;;AAElD;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,KAAK;AACL,qEAAqE;;AAErE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yDAAyD;;AAEzD,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;AC1+BA,mBAAO,CAAC,sBAAW;;AAEnB,eAAe,mBAAO,CAAC,uBAAY;;AAEnC;;AAEA,cAAc,mBAAO,CAAC,sBAAW;;AAEjC,gC;;;;;;;;;;ACRA,WAAW,mBAAO,CAAC,wBAAa;;AAEhC,UAAU,mBAAO,CAAC,uBAAY;;AAE9B,aAAa,mBAAO,CAAC,wBAAa;;AAElC,cAAc,mBAAO,CAAC,sBAAW;;AAEjC,cAAc,mBAAO,CAAC,sBAAW;;AAEjC,cAAc,mBAAO,CAAC,sBAAW;;AAEjC,gBAAgB,mBAAO,CAAC,kCAAuB;;AAE/C,mBAAmB,mBAAO,CAAC,+BAAoB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY;AACZ;AACA;;AAEA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B,yDAAyD;AACzD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,uBAAuB;AACrC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;;AAEN;AACA;AACA;AACA,aAAa,4BAA4B;AACzC,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO,EAAE;AACvB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,YAAY;AACZ,eAAe;AACf,mBAAmB;AACnB,uBAAuB,mB","file":"node_modules_echarts_index_js-es2015.js","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _echarts = require(\"./lib/echarts\");\r\n\r\n(function () {\r\n  for (var key in _echarts) {\r\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\r\n    exports[key] = _echarts[key];\r\n  }\r\n})();\r\n\r\nvar _export = require(\"./lib/export\");\r\n\r\n(function () {\r\n  for (var key in _export) {\r\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\r\n    exports[key] = _export[key];\r\n  }\r\n})();\r\n\r\nrequire(\"./lib/component/dataset\");\r\n\r\nrequire(\"./lib/chart/line\");\r\n\r\nrequire(\"./lib/chart/bar\");\r\n\r\nrequire(\"./lib/chart/pie\");\r\n\r\nrequire(\"./lib/chart/scatter\");\r\n\r\nrequire(\"./lib/chart/radar\");\r\n\r\nrequire(\"./lib/chart/map\");\r\n\r\nrequire(\"./lib/chart/tree\");\r\n\r\nrequire(\"./lib/chart/treemap\");\r\n\r\nrequire(\"./lib/chart/graph\");\r\n\r\nrequire(\"./lib/chart/gauge\");\r\n\r\nrequire(\"./lib/chart/funnel\");\r\n\r\nrequire(\"./lib/chart/parallel\");\r\n\r\nrequire(\"./lib/chart/sankey\");\r\n\r\nrequire(\"./lib/chart/boxplot\");\r\n\r\nrequire(\"./lib/chart/candlestick\");\r\n\r\nrequire(\"./lib/chart/effectScatter\");\r\n\r\nrequire(\"./lib/chart/lines\");\r\n\r\nrequire(\"./lib/chart/heatmap\");\r\n\r\nrequire(\"./lib/chart/pictorialBar\");\r\n\r\nrequire(\"./lib/chart/themeRiver\");\r\n\r\nrequire(\"./lib/chart/sunburst\");\r\n\r\nrequire(\"./lib/chart/custom\");\r\n\r\nrequire(\"./lib/component/grid\");\r\n\r\nrequire(\"./lib/component/polar\");\r\n\r\nrequire(\"./lib/component/geo\");\r\n\r\nrequire(\"./lib/component/singleAxis\");\r\n\r\nrequire(\"./lib/component/parallel\");\r\n\r\nrequire(\"./lib/component/calendar\");\r\n\r\nrequire(\"./lib/component/graphic\");\r\n\r\nrequire(\"./lib/component/toolbox\");\r\n\r\nrequire(\"./lib/component/tooltip\");\r\n\r\nrequire(\"./lib/component/axisPointer\");\r\n\r\nrequire(\"./lib/component/brush\");\r\n\r\nrequire(\"./lib/component/title\");\r\n\r\nrequire(\"./lib/component/timeline\");\r\n\r\nrequire(\"./lib/component/markPoint\");\r\n\r\nrequire(\"./lib/component/markLine\");\r\n\r\nrequire(\"./lib/component/markArea\");\r\n\r\nrequire(\"./lib/component/legendScroll\");\r\n\r\nrequire(\"./lib/component/legend\");\r\n\r\nrequire(\"./lib/component/dataZoom\");\r\n\r\nrequire(\"./lib/component/dataZoomInside\");\r\n\r\nrequire(\"./lib/component/dataZoomSlider\");\r\n\r\nrequire(\"./lib/component/visualMap\");\r\n\r\nrequire(\"./lib/component/visualMapContinuous\");\r\n\r\nrequire(\"./lib/component/visualMapPiecewise\");\r\n\r\nrequire(\"zrender/lib/vml/vml\");\r\n\r\nrequire(\"zrender/lib/svg/svg\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar coordinateSystemCreators = {};\r\n\r\nfunction CoordinateSystemManager() {\r\n  this._coordinateSystems = [];\r\n}\r\n\r\nCoordinateSystemManager.prototype = {\r\n  constructor: CoordinateSystemManager,\r\n  create: function (ecModel, api) {\r\n    var coordinateSystems = [];\r\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\r\n      var list = creater.create(ecModel, api);\r\n      coordinateSystems = coordinateSystems.concat(list || []);\r\n    });\r\n    this._coordinateSystems = coordinateSystems;\r\n  },\r\n  update: function (ecModel, api) {\r\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\r\n      coordSys.update && coordSys.update(ecModel, api);\r\n    });\r\n  },\r\n  getCoordinateSystems: function () {\r\n    return this._coordinateSystems.slice();\r\n  }\r\n};\r\n\r\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\r\n  coordinateSystemCreators[type] = coordinateSystemCreator;\r\n};\r\n\r\nCoordinateSystemManager.get = function (type) {\r\n  return coordinateSystemCreators[type];\r\n};\r\n\r\nvar _default = CoordinateSystemManager;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\r\n\r\nfunction ExtensionAPI(chartInstance) {\r\n  zrUtil.each(echartsAPIList, function (name) {\r\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\r\n  }, this);\r\n}\r\n\r\nvar _default = ExtensionAPI;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(seriesType, actionInfos) {\r\n  zrUtil.each(actionInfos, function (actionInfo) {\r\n    actionInfo.update = 'updateView';\r\n    /**\r\n     * @payload\r\n     * @property {string} seriesName\r\n     * @property {string} name\r\n     */\r\n\r\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\r\n      var selected = {};\r\n      ecModel.eachComponent({\r\n        mainType: 'series',\r\n        subType: seriesType,\r\n        query: payload\r\n      }, function (seriesModel) {\r\n        if (seriesModel[actionInfo.method]) {\r\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\r\n        }\r\n\r\n        var data = seriesModel.getData(); // Create selected map\r\n\r\n        data.each(function (idx) {\r\n          var name = data.getName(idx);\r\n          selected[name] = seriesModel.isSelected(name) || false;\r\n        });\r\n      });\r\n      return {\r\n        name: payload.name,\r\n        selected: selected,\r\n        seriesId: payload.seriesId\r\n      };\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _roamHelper = require(\"./roamHelper\");\r\n\r\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @payload\r\n * @property {string} [componentType=series]\r\n * @property {number} [dx]\r\n * @property {number} [dy]\r\n * @property {number} [zoom]\r\n * @property {number} [originX]\r\n * @property {number} [originY]\r\n */\r\necharts.registerAction({\r\n  type: 'geoRoam',\r\n  event: 'geoRoam',\r\n  update: 'updateTransform'\r\n}, function (payload, ecModel) {\r\n  var componentType = payload.componentType || 'series';\r\n  ecModel.eachComponent({\r\n    mainType: componentType,\r\n    query: payload\r\n  }, function (componentModel) {\r\n    var geo = componentModel.coordinateSystem;\r\n\r\n    if (geo.type !== 'geo') {\r\n      return;\r\n    }\r\n\r\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\r\n    componentModel.setCenter && componentModel.setCenter(res.center);\r\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\r\n    // So the center and zoom must be in sync. Include the series not selected by legend\r\n\r\n    if (componentType === 'series') {\r\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\r\n        seriesModel.setCenter(res.center);\r\n        seriesModel.setZoom(res.zoom);\r\n      });\r\n    }\r\n  });\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {module:echarts/coord/View} view\r\n * @param {Object} payload\r\n * @param {Object} [zoomLimit]\r\n */\r\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\r\n  var previousZoom = view.getZoom();\r\n  var center = view.getCenter();\r\n  var zoom = payload.zoom;\r\n  var point = view.dataToPoint(center);\r\n\r\n  if (payload.dx != null && payload.dy != null) {\r\n    point[0] -= payload.dx;\r\n    point[1] -= payload.dy;\r\n    var center = view.pointToData(point);\r\n    view.setCenter(center);\r\n  }\r\n\r\n  if (zoom != null) {\r\n    if (zoomLimit) {\r\n      var zoomMin = zoomLimit.min || 0;\r\n      var zoomMax = zoomLimit.max || Infinity;\r\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\r\n    } // Zoom on given point(originX, originY)\r\n\r\n\r\n    view.scale[0] *= zoom;\r\n    view.scale[1] *= zoom;\r\n    var position = view.position;\r\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\r\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\r\n    position[0] -= fixX;\r\n    position[1] -= fixY;\r\n    view.updateTransform(); // Get the new center\r\n\r\n    var center = view.pointToData(point);\r\n    view.setCenter(center);\r\n    view.setZoom(zoom * previousZoom);\r\n  }\r\n\r\n  return {\r\n    center: view.getCenter(),\r\n    zoom: view.getZoom()\r\n  };\r\n}\r\n\r\nexports.updateCenterAndZoom = updateCenterAndZoom;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _barGrid = require(\"../layout/barGrid\");\r\n\r\nvar layout = _barGrid.layout;\r\nvar largeLayout = _barGrid.largeLayout;\r\n\r\nrequire(\"../coord/cartesian/Grid\");\r\n\r\nrequire(\"./bar/BarSeries\");\r\n\r\nrequire(\"./bar/BarView\");\r\n\r\nrequire(\"../component/gridSimple\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// In case developer forget to include grid component\r\necharts.registerLayout(echarts.PRIORITY.VISUAL.LAYOUT, zrUtil.curry(layout, 'bar')); // Use higher prority to avoid to be blocked by other overall layout, which do not\r\n// only exist in this module, but probably also exist in other modules, like `barPolar`.\r\n\r\necharts.registerLayout(echarts.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, largeLayout);\r\necharts.registerVisual({\r\n  seriesType: 'bar',\r\n  reset: function (seriesModel) {\r\n    // Visual coding for legend\r\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\r\n  }\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar BaseBarSeries = require(\"./BaseBarSeries\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = BaseBarSeries.extend({\r\n  type: 'series.bar',\r\n  dependencies: ['grid', 'polar'],\r\n  brushSelector: 'rect',\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getProgressive: function () {\r\n    // Do not support progressive in normal mode.\r\n    return this.get('large') ? this.get('progressive') : false;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getProgressiveThreshold: function () {\r\n    // Do not support progressive in normal mode.\r\n    var progressiveThreshold = this.get('progressiveThreshold');\r\n    var largeThreshold = this.get('largeThreshold');\r\n\r\n    if (largeThreshold > progressiveThreshold) {\r\n      progressiveThreshold = largeThreshold;\r\n    }\r\n\r\n    return progressiveThreshold;\r\n  },\r\n  defaultOption: {\r\n    // If clipped\r\n    // Only available on cartesian2d\r\n    clip: true,\r\n    // If use caps on two sides of bars\r\n    // Only available on tangential polar bar\r\n    roundCap: false,\r\n    showBackground: false,\r\n    backgroundStyle: {\r\n      color: 'rgba(180, 180, 180, 0.2)',\r\n      borderColor: null,\r\n      borderWidth: 0,\r\n      borderType: 'solid',\r\n      borderRadius: 0,\r\n      shadowBlur: 0,\r\n      shadowColor: null,\r\n      shadowOffsetX: 0,\r\n      shadowOffsetY: 0,\r\n      opacity: 1\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _helper = require(\"./helper\");\r\n\r\nvar setLabel = _helper.setLabel;\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar barItemStyle = require(\"./barItemStyle\");\r\n\r\nvar Path = require(\"zrender/lib/graphic/Path\");\r\n\r\nvar Group = require(\"zrender/lib/container/Group\");\r\n\r\nvar _throttle = require(\"../../util/throttle\");\r\n\r\nvar throttle = _throttle.throttle;\r\n\r\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\r\n\r\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\r\n\r\nvar Sausage = require(\"../../util/shape/sausage\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\r\nvar _eventPos = [0, 0]; // FIXME\r\n// Just for compatible with ec2.\r\n\r\nzrUtil.extend(Model.prototype, barItemStyle);\r\n\r\nfunction getClipArea(coord, data) {\r\n  var coordSysClipArea = coord.getArea && coord.getArea();\r\n\r\n  if (coord.type === 'cartesian2d') {\r\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\r\n    // We should not clip this part.\r\n    // See test/bar2.html\r\n\r\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\r\n      var expandWidth = data.getLayout('bandWidth');\r\n\r\n      if (baseAxis.isHorizontal()) {\r\n        coordSysClipArea.x -= expandWidth;\r\n        coordSysClipArea.width += expandWidth * 2;\r\n      } else {\r\n        coordSysClipArea.y -= expandWidth;\r\n        coordSysClipArea.height += expandWidth * 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return coordSysClipArea;\r\n}\r\n\r\nvar _default = echarts.extendChartView({\r\n  type: 'bar',\r\n  render: function (seriesModel, ecModel, api) {\r\n    this._updateDrawMode(seriesModel);\r\n\r\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\r\n\r\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\r\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\r\n    } else {}\r\n\r\n    return this.group;\r\n  },\r\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\r\n    this._clear();\r\n\r\n    this._updateDrawMode(seriesModel);\r\n  },\r\n  incrementalRender: function (params, seriesModel, ecModel, api) {\r\n    // Do not support progressive in normal mode.\r\n    this._incrementalRenderLarge(params, seriesModel);\r\n  },\r\n  _updateDrawMode: function (seriesModel) {\r\n    var isLargeDraw = seriesModel.pipelineContext.large;\r\n\r\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\r\n      this._isLargeDraw = isLargeDraw;\r\n\r\n      this._clear();\r\n    }\r\n  },\r\n  _renderNormal: function (seriesModel, ecModel, api) {\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var coord = seriesModel.coordinateSystem;\r\n    var baseAxis = coord.getBaseAxis();\r\n    var isHorizontalOrRadial;\r\n\r\n    if (coord.type === 'cartesian2d') {\r\n      isHorizontalOrRadial = baseAxis.isHorizontal();\r\n    } else if (coord.type === 'polar') {\r\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\r\n    }\r\n\r\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\r\n    var needsClip = seriesModel.get('clip', true);\r\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\r\n\r\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\r\n    // And don't want the label are clipped.\r\n\r\n    var roundCap = seriesModel.get('roundCap', true);\r\n    var drawBackground = seriesModel.get('showBackground', true);\r\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\r\n    var barBorderRadius = backgroundModel.get('barBorderRadius') || 0;\r\n    var bgEls = [];\r\n    var oldBgEls = this._backgroundEls || [];\r\n\r\n    var createBackground = function (dataIndex) {\r\n      var bgLayout = getLayout[coord.type](data, dataIndex);\r\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\r\n      bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\r\n\r\n      if (coord.type === 'cartesian2d') {\r\n        bgEl.setShape('r', barBorderRadius);\r\n      }\r\n\r\n      bgEls[dataIndex] = bgEl;\r\n      return bgEl;\r\n    };\r\n\r\n    data.diff(oldData).add(function (dataIndex) {\r\n      var itemModel = data.getItemModel(dataIndex);\r\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\r\n\r\n      if (drawBackground) {\r\n        createBackground(dataIndex);\r\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\r\n\r\n\r\n      if (!data.hasValue(dataIndex)) {\r\n        return;\r\n      }\r\n\r\n      if (needsClip) {\r\n        // Clip will modify the layout params.\r\n        // And return a boolean to determine if the shape are fully clipped.\r\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\r\n\r\n        if (isClipped) {\r\n          group.remove(el);\r\n          return;\r\n        }\r\n      }\r\n\r\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\r\n      data.setItemGraphicEl(dataIndex, el);\r\n      group.add(el);\r\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\r\n    }).update(function (newIndex, oldIndex) {\r\n      var itemModel = data.getItemModel(newIndex);\r\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\r\n\r\n      if (drawBackground) {\r\n        var bgEl;\r\n\r\n        if (oldBgEls.length === 0) {\r\n          bgEl = createBackground(oldIndex);\r\n        } else {\r\n          bgEl = oldBgEls[oldIndex];\r\n          bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\r\n\r\n          if (coord.type === 'cartesian2d') {\r\n            bgEl.setShape('r', barBorderRadius);\r\n          }\r\n\r\n          bgEls[newIndex] = bgEl;\r\n        }\r\n\r\n        var bgLayout = getLayout[coord.type](data, newIndex);\r\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\r\n        graphic.updateProps(bgEl, {\r\n          shape: shape\r\n        }, animationModel, newIndex);\r\n      }\r\n\r\n      var el = oldData.getItemGraphicEl(oldIndex);\r\n\r\n      if (!data.hasValue(newIndex)) {\r\n        group.remove(el);\r\n        return;\r\n      }\r\n\r\n      if (needsClip) {\r\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\r\n\r\n        if (isClipped) {\r\n          group.remove(el);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (el) {\r\n        graphic.updateProps(el, {\r\n          shape: layout\r\n        }, animationModel, newIndex);\r\n      } else {\r\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\r\n      }\r\n\r\n      data.setItemGraphicEl(newIndex, el); // Add back\r\n\r\n      group.add(el);\r\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\r\n    }).remove(function (dataIndex) {\r\n      var el = oldData.getItemGraphicEl(dataIndex);\r\n\r\n      if (coord.type === 'cartesian2d') {\r\n        el && removeRect(dataIndex, animationModel, el);\r\n      } else {\r\n        el && removeSector(dataIndex, animationModel, el);\r\n      }\r\n    }).execute();\r\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\r\n    bgGroup.removeAll();\r\n\r\n    for (var i = 0; i < bgEls.length; ++i) {\r\n      bgGroup.add(bgEls[i]);\r\n    }\r\n\r\n    group.add(bgGroup);\r\n    this._backgroundEls = bgEls;\r\n    this._data = data;\r\n  },\r\n  _renderLarge: function (seriesModel, ecModel, api) {\r\n    this._clear();\r\n\r\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\r\n\r\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\r\n\r\n    if (clipPath) {\r\n      this.group.setClipPath(clipPath);\r\n    } else {\r\n      this.group.removeClipPath();\r\n    }\r\n  },\r\n  _incrementalRenderLarge: function (params, seriesModel) {\r\n    this._removeBackground();\r\n\r\n    createLarge(seriesModel, this.group, true);\r\n  },\r\n  dispose: zrUtil.noop,\r\n  remove: function (ecModel) {\r\n    this._clear(ecModel);\r\n  },\r\n  _clear: function (ecModel) {\r\n    var group = this.group;\r\n    var data = this._data;\r\n\r\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\r\n      this._removeBackground();\r\n\r\n      this._backgroundEls = [];\r\n      data.eachItemGraphicEl(function (el) {\r\n        if (el.type === 'sector') {\r\n          removeSector(el.dataIndex, ecModel, el);\r\n        } else {\r\n          removeRect(el.dataIndex, ecModel, el);\r\n        }\r\n      });\r\n    } else {\r\n      group.removeAll();\r\n    }\r\n\r\n    this._data = null;\r\n  },\r\n  _removeBackground: function () {\r\n    this.group.remove(this._backgroundGroup);\r\n    this._backgroundGroup = null;\r\n  }\r\n});\r\n\r\nvar mathMax = Math.max;\r\nvar mathMin = Math.min;\r\nvar clip = {\r\n  cartesian2d: function (coordSysBoundingRect, layout) {\r\n    var signWidth = layout.width < 0 ? -1 : 1;\r\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\r\n\r\n    if (signWidth < 0) {\r\n      layout.x += layout.width;\r\n      layout.width = -layout.width;\r\n    }\r\n\r\n    if (signHeight < 0) {\r\n      layout.y += layout.height;\r\n      layout.height = -layout.height;\r\n    }\r\n\r\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\r\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\r\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\r\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\r\n    layout.x = x;\r\n    layout.y = y;\r\n    layout.width = x2 - x;\r\n    layout.height = y2 - y;\r\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\r\n\r\n    if (signWidth < 0) {\r\n      layout.x += layout.width;\r\n      layout.width = -layout.width;\r\n    }\r\n\r\n    if (signHeight < 0) {\r\n      layout.y += layout.height;\r\n      layout.height = -layout.height;\r\n    }\r\n\r\n    return clipped;\r\n  },\r\n  polar: function (coordSysClipArea, layout) {\r\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\r\n\r\n    if (signR < 0) {\r\n      var r = layout.r;\r\n      layout.r = layout.r0;\r\n      layout.r0 = r;\r\n    }\r\n\r\n    var r = mathMin(layout.r, coordSysClipArea.r);\r\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\r\n    layout.r = r;\r\n    layout.r0 = r0;\r\n    var clipped = r - r0 < 0; // Reverse back\r\n\r\n    if (signR < 0) {\r\n      var r = layout.r;\r\n      layout.r = layout.r0;\r\n      layout.r0 = r;\r\n    }\r\n\r\n    return clipped;\r\n  }\r\n};\r\nvar elementCreator = {\r\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\r\n    var rect = new graphic.Rect({\r\n      shape: zrUtil.extend({}, layout),\r\n      z2: 1\r\n    });\r\n    rect.name = 'item'; // Animation\r\n\r\n    if (animationModel) {\r\n      var rectShape = rect.shape;\r\n      var animateProperty = isHorizontal ? 'height' : 'width';\r\n      var animateTarget = {};\r\n      rectShape[animateProperty] = 0;\r\n      animateTarget[animateProperty] = layout[animateProperty];\r\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\r\n        shape: animateTarget\r\n      }, animationModel, dataIndex);\r\n    }\r\n\r\n    return rect;\r\n  },\r\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\r\n    // Keep the same logic with bar in catesion: use end value to control\r\n    // direction. Notice that if clockwise is true (by default), the sector\r\n    // will always draw clockwisely, no matter whether endAngle is greater\r\n    // or less than startAngle.\r\n    var clockwise = layout.startAngle < layout.endAngle;\r\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\r\n    var sector = new ShapeClass({\r\n      shape: zrUtil.defaults({\r\n        clockwise: clockwise\r\n      }, layout),\r\n      z2: 1\r\n    });\r\n    sector.name = 'item'; // Animation\r\n\r\n    if (animationModel) {\r\n      var sectorShape = sector.shape;\r\n      var animateProperty = isRadial ? 'r' : 'endAngle';\r\n      var animateTarget = {};\r\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\r\n      animateTarget[animateProperty] = layout[animateProperty];\r\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\r\n        shape: animateTarget\r\n      }, animationModel, dataIndex);\r\n    }\r\n\r\n    return sector;\r\n  }\r\n};\r\n\r\nfunction removeRect(dataIndex, animationModel, el) {\r\n  // Not show text when animating\r\n  el.style.text = null;\r\n  graphic.updateProps(el, {\r\n    shape: {\r\n      width: 0\r\n    }\r\n  }, animationModel, dataIndex, function () {\r\n    el.parent && el.parent.remove(el);\r\n  });\r\n}\r\n\r\nfunction removeSector(dataIndex, animationModel, el) {\r\n  // Not show text when animating\r\n  el.style.text = null;\r\n  graphic.updateProps(el, {\r\n    shape: {\r\n      r: el.shape.r0\r\n    }\r\n  }, animationModel, dataIndex, function () {\r\n    el.parent && el.parent.remove(el);\r\n  });\r\n}\r\n\r\nvar getLayout = {\r\n  // itemModel is only used to get borderWidth, which is not needed\r\n  // when calculating bar background layout.\r\n  cartesian2d: function (data, dataIndex, itemModel) {\r\n    var layout = data.getItemLayout(dataIndex);\r\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\r\n\r\n    var signX = layout.width > 0 ? 1 : -1;\r\n    var signY = layout.height > 0 ? 1 : -1;\r\n    return {\r\n      x: layout.x + signX * fixedLineWidth / 2,\r\n      y: layout.y + signY * fixedLineWidth / 2,\r\n      width: layout.width - signX * fixedLineWidth,\r\n      height: layout.height - signY * fixedLineWidth\r\n    };\r\n  },\r\n  polar: function (data, dataIndex, itemModel) {\r\n    var layout = data.getItemLayout(dataIndex);\r\n    return {\r\n      cx: layout.cx,\r\n      cy: layout.cy,\r\n      r0: layout.r0,\r\n      r: layout.r,\r\n      startAngle: layout.startAngle,\r\n      endAngle: layout.endAngle\r\n    };\r\n  }\r\n};\r\n\r\nfunction isZeroOnPolar(layout) {\r\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\r\n}\r\n\r\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\r\n  var color = data.getItemVisual(dataIndex, 'color');\r\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\r\n  var stroke = data.getVisual('borderColor');\r\n  var itemStyleModel = itemModel.getModel('itemStyle');\r\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\r\n\r\n  if (!isPolar) {\r\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\r\n  }\r\n\r\n  el.useStyle(zrUtil.defaults({\r\n    stroke: isZeroOnPolar(layout) ? 'none' : stroke,\r\n    fill: isZeroOnPolar(layout) ? 'none' : color,\r\n    opacity: opacity\r\n  }, itemStyleModel.getBarItemStyle()));\r\n  var cursorStyle = itemModel.getShallow('cursor');\r\n  cursorStyle && el.attr('cursor', cursorStyle);\r\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\r\n\r\n  if (!isPolar) {\r\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\r\n  }\r\n\r\n  if (isZeroOnPolar(layout)) {\r\n    hoverStyle.fill = hoverStyle.stroke = 'none';\r\n  }\r\n\r\n  graphic.setHoverStyle(el, hoverStyle);\r\n} // In case width or height are too small.\r\n\r\n\r\nfunction getLineWidth(itemModel, rawLayout) {\r\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\r\n\r\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\r\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\r\n  return Math.min(lineWidth, width, height);\r\n}\r\n\r\nvar LargePath = Path.extend({\r\n  type: 'largeBar',\r\n  shape: {\r\n    points: []\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    // Drawing lines is more efficient than drawing\r\n    // a whole line or drawing rects.\r\n    var points = shape.points;\r\n    var startPoint = this.__startPoint;\r\n    var baseDimIdx = this.__baseDimIdx;\r\n\r\n    for (var i = 0; i < points.length; i += 2) {\r\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\r\n      ctx.moveTo(startPoint[0], startPoint[1]);\r\n      ctx.lineTo(points[i], points[i + 1]);\r\n    }\r\n  }\r\n});\r\n\r\nfunction createLarge(seriesModel, group, incremental) {\r\n  // TODO support polar\r\n  var data = seriesModel.getData();\r\n  var startPoint = [];\r\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\r\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\r\n  var largeDataIndices = data.getLayout('largeDataIndices');\r\n  var barWidth = data.getLayout('barWidth');\r\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\r\n  var drawBackground = seriesModel.get('showBackground', true);\r\n\r\n  if (drawBackground) {\r\n    var points = data.getLayout('largeBackgroundPoints');\r\n    var backgroundStartPoint = [];\r\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\r\n    var bgEl = new LargePath({\r\n      shape: {\r\n        points: points\r\n      },\r\n      incremental: !!incremental,\r\n      __startPoint: backgroundStartPoint,\r\n      __baseDimIdx: baseDimIdx,\r\n      __largeDataIndices: largeDataIndices,\r\n      __barWidth: barWidth,\r\n      silent: true,\r\n      z2: 0\r\n    });\r\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\r\n    group.add(bgEl);\r\n  }\r\n\r\n  var el = new LargePath({\r\n    shape: {\r\n      points: data.getLayout('largePoints')\r\n    },\r\n    incremental: !!incremental,\r\n    __startPoint: startPoint,\r\n    __baseDimIdx: baseDimIdx,\r\n    __largeDataIndices: largeDataIndices,\r\n    __barWidth: barWidth\r\n  });\r\n  group.add(el);\r\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\r\n\r\n  el.seriesIndex = seriesModel.seriesIndex;\r\n\r\n  if (!seriesModel.get('silent')) {\r\n    el.on('mousedown', largePathUpdateDataIndex);\r\n    el.on('mousemove', largePathUpdateDataIndex);\r\n  }\r\n} // Use throttle to avoid frequently traverse to find dataIndex.\r\n\r\n\r\nvar largePathUpdateDataIndex = throttle(function (event) {\r\n  var largePath = this;\r\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\r\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\r\n}, 30, false);\r\n\r\nfunction largePathFindDataIndex(largePath, x, y) {\r\n  var baseDimIdx = largePath.__baseDimIdx;\r\n  var valueDimIdx = 1 - baseDimIdx;\r\n  var points = largePath.shape.points;\r\n  var largeDataIndices = largePath.__largeDataIndices;\r\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\r\n  var startValueVal = largePath.__startPoint[valueDimIdx];\r\n  _eventPos[0] = x;\r\n  _eventPos[1] = y;\r\n  var pointerBaseVal = _eventPos[baseDimIdx];\r\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\r\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\r\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\r\n\r\n  for (var i = 0, len = points.length / 2; i < len; i++) {\r\n    var ii = i * 2;\r\n    var barBaseVal = points[ii + baseDimIdx];\r\n    var barValueVal = points[ii + valueDimIdx];\r\n\r\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\r\n      return largeDataIndices[i];\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nfunction setLargeStyle(el, seriesModel, data) {\r\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\r\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\r\n  el.useStyle(itemStyle);\r\n  el.style.fill = null;\r\n  el.style.stroke = borderColor;\r\n  el.style.lineWidth = data.getLayout('barWidth');\r\n}\r\n\r\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\r\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\r\n  var itemStyle = backgroundModel.getItemStyle(['color', 'borderColor']);\r\n  el.useStyle(itemStyle);\r\n  el.style.fill = null;\r\n  el.style.stroke = borderColor;\r\n  el.style.lineWidth = data.getLayout('barWidth');\r\n}\r\n\r\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\r\n  var coordLayout;\r\n  var isPolar = coord.type === 'polar';\r\n\r\n  if (isPolar) {\r\n    coordLayout = coord.getArea();\r\n  } else {\r\n    coordLayout = coord.grid.getRect();\r\n  }\r\n\r\n  if (isPolar) {\r\n    return {\r\n      cx: coordLayout.cx,\r\n      cy: coordLayout.cy,\r\n      r0: isHorizontalOrRadial ? coordLayout.r0 : layout.r0,\r\n      r: isHorizontalOrRadial ? coordLayout.r : layout.r,\r\n      startAngle: isHorizontalOrRadial ? layout.startAngle : 0,\r\n      endAngle: isHorizontalOrRadial ? layout.endAngle : Math.PI * 2\r\n    };\r\n  } else {\r\n    return {\r\n      x: isHorizontalOrRadial ? layout.x : coordLayout.x,\r\n      y: isHorizontalOrRadial ? coordLayout.y : layout.y,\r\n      width: isHorizontalOrRadial ? layout.width : coordLayout.width,\r\n      height: isHorizontalOrRadial ? coordLayout.height : layout.height\r\n    };\r\n  }\r\n}\r\n\r\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\r\n  var ElementClz = coord.type === 'polar' ? graphic.Sector : graphic.Rect;\r\n  return new ElementClz({\r\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\r\n    silent: true,\r\n    z2: 0\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar createListFromArray = require(\"../helper/createListFromArray\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = SeriesModel.extend({\r\n  type: 'series.__base_bar__',\r\n  getInitialData: function (option, ecModel) {\r\n    return createListFromArray(this.getSource(), this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  },\r\n  getMarkerPosition: function (value) {\r\n    var coordSys = this.coordinateSystem;\r\n\r\n    if (coordSys) {\r\n      // PENDING if clamp ?\r\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\r\n      var data = this.getData();\r\n      var offset = data.getLayout('offset');\r\n      var size = data.getLayout('size');\r\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\r\n      pt[offsetIndex] += offset + size / 2;\r\n      return pt;\r\n    }\r\n\r\n    return [NaN, NaN];\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    // 一级层叠\r\n    z: 2,\r\n    // 二级层叠\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    // stack: null\r\n    // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // 最小高度改为0\r\n    barMinHeight: 0,\r\n    // 最小角度为0，仅对极坐标系下的柱状图有效\r\n    barMinAngle: 0,\r\n    // cursor: null,\r\n    large: false,\r\n    largeThreshold: 400,\r\n    progressive: 3e3,\r\n    progressiveChunkMode: 'mod',\r\n    // barMaxWidth: null,\r\n    // In cartesian, the default value is 1. Otherwise null.\r\n    // barMinWidth: null,\r\n    // 默认自适应\r\n    // barWidth: null,\r\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\r\n    // barGap: '30%',\r\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\r\n    // barCategoryGap: '20%',\r\n    // label: {\r\n    //      show: false\r\n    // },\r\n    itemStyle: {},\r\n    emphasis: {}\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar BaseBarSeries = require(\"./BaseBarSeries\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PictorialBarSeries = BaseBarSeries.extend({\r\n  type: 'series.pictorialBar',\r\n  dependencies: ['grid'],\r\n  defaultOption: {\r\n    symbol: 'circle',\r\n    // Customized bar shape\r\n    symbolSize: null,\r\n    // Can be ['100%', '100%'], null means auto.\r\n    symbolRotate: null,\r\n    symbolPosition: null,\r\n    // 'start' or 'end' or 'center', null means auto.\r\n    symbolOffset: null,\r\n    symbolMargin: null,\r\n    // start margin and end margin. Can be a number or a percent string.\r\n    // Auto margin by default.\r\n    symbolRepeat: false,\r\n    // false/null/undefined, means no repeat.\r\n    // Can be true, means auto calculate repeat times and cut by data.\r\n    // Can be a number, specifies repeat times, and do not cut by data.\r\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\r\n    symbolRepeatDirection: 'end',\r\n    // 'end' means from 'start' to 'end'.\r\n    symbolClip: false,\r\n    symbolBoundingData: null,\r\n    // Can be 60 or -40 or [-40, 60]\r\n    symbolPatternSize: 400,\r\n    // 400 * 400 px\r\n    barGap: '-100%',\r\n    // In most case, overlap is needed.\r\n    // z can be set in data item, which is z2 actually.\r\n    // Disable progressive\r\n    progressive: 0,\r\n    hoverAnimation: false // Open only when needed.\r\n\r\n  },\r\n  getInitialData: function (option) {\r\n    // Disable stack.\r\n    option.stack = null;\r\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\r\n  }\r\n});\r\nvar _default = PictorialBarSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _symbol = require(\"../../util/symbol\");\r\n\r\nvar createSymbol = _symbol.createSymbol;\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\nvar isNumeric = _number.isNumeric;\r\n\r\nvar _helper = require(\"./helper\");\r\n\r\nvar setLabel = _helper.setLabel;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\r\n\r\nvar LAYOUT_ATTRS = [{\r\n  xy: 'x',\r\n  wh: 'width',\r\n  index: 0,\r\n  posDesc: ['left', 'right']\r\n}, {\r\n  xy: 'y',\r\n  wh: 'height',\r\n  index: 1,\r\n  posDesc: ['top', 'bottom']\r\n}];\r\nvar pathForLineWidth = new graphic.Circle();\r\nvar BarView = echarts.extendChartView({\r\n  type: 'pictorialBar',\r\n  render: function (seriesModel, ecModel, api) {\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var cartesian = seriesModel.coordinateSystem;\r\n    var baseAxis = cartesian.getBaseAxis();\r\n    var isHorizontal = !!baseAxis.isHorizontal();\r\n    var coordSysRect = cartesian.grid.getRect();\r\n    var opt = {\r\n      ecSize: {\r\n        width: api.getWidth(),\r\n        height: api.getHeight()\r\n      },\r\n      seriesModel: seriesModel,\r\n      coordSys: cartesian,\r\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\r\n      isHorizontal: isHorizontal,\r\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\r\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\r\n    };\r\n    data.diff(oldData).add(function (dataIndex) {\r\n      if (!data.hasValue(dataIndex)) {\r\n        return;\r\n      }\r\n\r\n      var itemModel = getItemModel(data, dataIndex);\r\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\r\n      var bar = createBar(data, opt, symbolMeta);\r\n      data.setItemGraphicEl(dataIndex, bar);\r\n      group.add(bar);\r\n      updateCommon(bar, opt, symbolMeta);\r\n    }).update(function (newIndex, oldIndex) {\r\n      var bar = oldData.getItemGraphicEl(oldIndex);\r\n\r\n      if (!data.hasValue(newIndex)) {\r\n        group.remove(bar);\r\n        return;\r\n      }\r\n\r\n      var itemModel = getItemModel(data, newIndex);\r\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\r\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\r\n\r\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\r\n        group.remove(bar);\r\n        data.setItemGraphicEl(newIndex, null);\r\n        bar = null;\r\n      }\r\n\r\n      if (bar) {\r\n        updateBar(bar, opt, symbolMeta);\r\n      } else {\r\n        bar = createBar(data, opt, symbolMeta, true);\r\n      }\r\n\r\n      data.setItemGraphicEl(newIndex, bar);\r\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\r\n\r\n      group.add(bar);\r\n      updateCommon(bar, opt, symbolMeta);\r\n    }).remove(function (dataIndex) {\r\n      var bar = oldData.getItemGraphicEl(dataIndex);\r\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\r\n    }).execute();\r\n    this._data = data;\r\n    return this.group;\r\n  },\r\n  dispose: zrUtil.noop,\r\n  remove: function (ecModel, api) {\r\n    var group = this.group;\r\n    var data = this._data;\r\n\r\n    if (ecModel.get('animation')) {\r\n      if (data) {\r\n        data.eachItemGraphicEl(function (bar) {\r\n          removeBar(data, bar.dataIndex, ecModel, bar);\r\n        });\r\n      }\r\n    } else {\r\n      group.removeAll();\r\n    }\r\n  }\r\n}); // Set or calculate default value about symbol, and calculate layout info.\r\n\r\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\r\n  var layout = data.getItemLayout(dataIndex);\r\n  var symbolRepeat = itemModel.get('symbolRepeat');\r\n  var symbolClip = itemModel.get('symbolClip');\r\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\r\n  var symbolRotate = itemModel.get('symbolRotate');\r\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\r\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\r\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\r\n  var symbolMeta = {\r\n    dataIndex: dataIndex,\r\n    layout: layout,\r\n    itemModel: itemModel,\r\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\r\n    color: data.getItemVisual(dataIndex, 'color'),\r\n    symbolClip: symbolClip,\r\n    symbolRepeat: symbolRepeat,\r\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\r\n    symbolPatternSize: symbolPatternSize,\r\n    rotation: rotation,\r\n    animationModel: isAnimationEnabled ? itemModel : null,\r\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\r\n    z2: itemModel.getShallow('z', true) || 0\r\n  };\r\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\r\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\r\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\r\n  var symbolSize = symbolMeta.symbolSize;\r\n  var symbolOffset = itemModel.get('symbolOffset');\r\n\r\n  if (zrUtil.isArray(symbolOffset)) {\r\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\r\n  }\r\n\r\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\r\n  return symbolMeta;\r\n} // bar length can be negative.\r\n\r\n\r\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\r\n  var valueDim = opt.valueDim;\r\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\r\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\r\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\r\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\r\n  var boundingLength;\r\n\r\n  if (zrUtil.isArray(symbolBoundingData)) {\r\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\r\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\r\n    boundingLength = symbolBoundingExtent[pxSignIdx];\r\n  } else if (symbolBoundingData != null) {\r\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\r\n  } else if (symbolRepeat) {\r\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\r\n  } else {\r\n    boundingLength = layout[valueDim.wh];\r\n  }\r\n\r\n  output.boundingLength = boundingLength;\r\n\r\n  if (symbolRepeat) {\r\n    output.repeatCutLength = layout[valueDim.wh];\r\n  }\r\n\r\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\r\n}\r\n\r\nfunction convertToCoordOnAxis(axis, value) {\r\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\r\n} // Support ['100%', '100%']\r\n\r\n\r\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\r\n  var valueDim = opt.valueDim;\r\n  var categoryDim = opt.categoryDim;\r\n  var categorySize = Math.abs(layout[categoryDim.wh]);\r\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\r\n\r\n  if (zrUtil.isArray(symbolSize)) {\r\n    symbolSize = symbolSize.slice();\r\n  } else {\r\n    if (symbolSize == null) {\r\n      symbolSize = '100%';\r\n    }\r\n\r\n    symbolSize = [symbolSize, symbolSize];\r\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\r\n  // to complicated to calculate real percent value if considering scaled lineWidth.\r\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\r\n  // which can be tolerated in pictorial chart.\r\n\r\n\r\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\r\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\r\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\r\n\r\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\r\n\r\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\r\n}\r\n\r\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\r\n  // In symbols are drawn with scale, so do not need to care about the case that width\r\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\r\n  // be calculated.\r\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\r\n\r\n  if (valueLineWidth) {\r\n    pathForLineWidth.attr({\r\n      scale: symbolScale.slice(),\r\n      rotation: rotation\r\n    });\r\n    pathForLineWidth.updateTransform();\r\n    valueLineWidth /= pathForLineWidth.getLineScale();\r\n    valueLineWidth *= symbolScale[opt.valueDim.index];\r\n  }\r\n\r\n  output.valueLineWidth = valueLineWidth;\r\n}\r\n\r\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\r\n  var categoryDim = opt.categoryDim;\r\n  var valueDim = opt.valueDim;\r\n  var pxSign = output.pxSign;\r\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\r\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\r\n  // want symbols to rotate on its center, which should not be translated\r\n  // when rotating.\r\n\r\n  if (symbolRepeat) {\r\n    var absBoundingLength = Math.abs(boundingLength);\r\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\r\n    var hasEndGap = false;\r\n\r\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\r\n      hasEndGap = true;\r\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\r\n    }\r\n\r\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\r\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\r\n    // to ensure that all of the symbols will not be overflow the given area.\r\n\r\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\r\n    // boundingLength.\r\n\r\n    var repeatSpecified = isNumeric(symbolRepeat);\r\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\r\n    // entirely in the given layout area.\r\n\r\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\r\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\r\n    uLenWithMargin = unitLength + symbolMargin * 2;\r\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\r\n\r\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\r\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\r\n    }\r\n\r\n    pathLen = repeatTimes * uLenWithMargin - endFix;\r\n    output.repeatTimes = repeatTimes;\r\n    output.symbolMargin = symbolMargin;\r\n  }\r\n\r\n  var sizeFix = pxSign * (pathLen / 2);\r\n  var pathPosition = output.pathPosition = [];\r\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\r\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\r\n\r\n  if (symbolOffset) {\r\n    pathPosition[0] += symbolOffset[0];\r\n    pathPosition[1] += symbolOffset[1];\r\n  }\r\n\r\n  var bundlePosition = output.bundlePosition = [];\r\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\r\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\r\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\r\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\r\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\r\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\r\n\r\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\r\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\r\n  clipShape[valueDim.xy] = 0;\r\n  clipShape[valueDim.wh] = layout[valueDim.wh];\r\n}\r\n\r\nfunction createPath(symbolMeta) {\r\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\r\n  var path = createSymbol( // Consider texture img, make a big size.\r\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\r\n  path.attr({\r\n    culling: true\r\n  });\r\n  path.type !== 'image' && path.setStyle({\r\n    strokeNoScale: true\r\n  });\r\n  return path;\r\n}\r\n\r\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\r\n  var bundle = bar.__pictorialBundle;\r\n  var symbolSize = symbolMeta.symbolSize;\r\n  var valueLineWidth = symbolMeta.valueLineWidth;\r\n  var pathPosition = symbolMeta.pathPosition;\r\n  var valueDim = opt.valueDim;\r\n  var repeatTimes = symbolMeta.repeatTimes || 0;\r\n  var index = 0;\r\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\r\n  eachPath(bar, function (path) {\r\n    path.__pictorialAnimationIndex = index;\r\n    path.__pictorialRepeatTimes = repeatTimes;\r\n\r\n    if (index < repeatTimes) {\r\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\r\n    } else {\r\n      updateAttr(path, null, {\r\n        scale: [0, 0]\r\n      }, symbolMeta, isUpdate, function () {\r\n        bundle.remove(path);\r\n      });\r\n    }\r\n\r\n    updateHoverAnimation(path, symbolMeta);\r\n    index++;\r\n  });\r\n\r\n  for (; index < repeatTimes; index++) {\r\n    var path = createPath(symbolMeta);\r\n    path.__pictorialAnimationIndex = index;\r\n    path.__pictorialRepeatTimes = repeatTimes;\r\n    bundle.add(path);\r\n    var target = makeTarget(index);\r\n    updateAttr(path, {\r\n      position: target.position,\r\n      scale: [0, 0]\r\n    }, {\r\n      scale: target.scale,\r\n      rotation: target.rotation\r\n    }, symbolMeta, isUpdate); // FIXME\r\n    // If all emphasis/normal through action.\r\n\r\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\r\n    updateHoverAnimation(path, symbolMeta);\r\n  }\r\n\r\n  function makeTarget(index) {\r\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\r\n    // Otherwise: i = index;\r\n\r\n    var pxSign = symbolMeta.pxSign;\r\n    var i = index;\r\n\r\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\r\n      i = repeatTimes - 1 - index;\r\n    }\r\n\r\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\r\n    return {\r\n      position: position,\r\n      scale: symbolMeta.symbolScale.slice(),\r\n      rotation: symbolMeta.rotation\r\n    };\r\n  }\r\n\r\n  function onMouseOver() {\r\n    eachPath(bar, function (path) {\r\n      path.trigger('emphasis');\r\n    });\r\n  }\r\n\r\n  function onMouseOut() {\r\n    eachPath(bar, function (path) {\r\n      path.trigger('normal');\r\n    });\r\n  }\r\n}\r\n\r\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\r\n  var bundle = bar.__pictorialBundle;\r\n  var mainPath = bar.__pictorialMainPath;\r\n\r\n  if (!mainPath) {\r\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\r\n    bundle.add(mainPath);\r\n    updateAttr(mainPath, {\r\n      position: symbolMeta.pathPosition.slice(),\r\n      scale: [0, 0],\r\n      rotation: symbolMeta.rotation\r\n    }, {\r\n      scale: symbolMeta.symbolScale.slice()\r\n    }, symbolMeta, isUpdate);\r\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\r\n  } else {\r\n    updateAttr(mainPath, null, {\r\n      position: symbolMeta.pathPosition.slice(),\r\n      scale: symbolMeta.symbolScale.slice(),\r\n      rotation: symbolMeta.rotation\r\n    }, symbolMeta, isUpdate);\r\n  }\r\n\r\n  updateHoverAnimation(mainPath, symbolMeta);\r\n\r\n  function onMouseOver() {\r\n    this.trigger('emphasis');\r\n  }\r\n\r\n  function onMouseOut() {\r\n    this.trigger('normal');\r\n  }\r\n} // bar rect is used for label.\r\n\r\n\r\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\r\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\r\n  var barRect = bar.__pictorialBarRect;\r\n\r\n  if (!barRect) {\r\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\r\n      z2: 2,\r\n      shape: rectShape,\r\n      silent: true,\r\n      style: {\r\n        stroke: 'transparent',\r\n        fill: 'transparent',\r\n        lineWidth: 0\r\n      }\r\n    });\r\n    bar.add(barRect);\r\n  } else {\r\n    updateAttr(barRect, null, {\r\n      shape: rectShape\r\n    }, symbolMeta, isUpdate);\r\n  }\r\n}\r\n\r\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\r\n  // If not clip, symbol will be remove and rebuilt.\r\n  if (symbolMeta.symbolClip) {\r\n    var clipPath = bar.__pictorialClipPath;\r\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\r\n    var valueDim = opt.valueDim;\r\n    var animationModel = symbolMeta.animationModel;\r\n    var dataIndex = symbolMeta.dataIndex;\r\n\r\n    if (clipPath) {\r\n      graphic.updateProps(clipPath, {\r\n        shape: clipShape\r\n      }, animationModel, dataIndex);\r\n    } else {\r\n      clipShape[valueDim.wh] = 0;\r\n      clipPath = new graphic.Rect({\r\n        shape: clipShape\r\n      });\r\n\r\n      bar.__pictorialBundle.setClipPath(clipPath);\r\n\r\n      bar.__pictorialClipPath = clipPath;\r\n      var target = {};\r\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\r\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\r\n        shape: target\r\n      }, animationModel, dataIndex);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getItemModel(data, dataIndex) {\r\n  var itemModel = data.getItemModel(dataIndex);\r\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\r\n  itemModel.isAnimationEnabled = isAnimationEnabled;\r\n  return itemModel;\r\n}\r\n\r\nfunction getAnimationDelayParams(path) {\r\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\r\n  return {\r\n    index: path.__pictorialAnimationIndex,\r\n    count: path.__pictorialRepeatTimes\r\n  };\r\n}\r\n\r\nfunction isAnimationEnabled() {\r\n  // `animation` prop can be set on itemModel in pictorial bar chart.\r\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\r\n}\r\n\r\nfunction updateHoverAnimation(path, symbolMeta) {\r\n  path.off('emphasis').off('normal');\r\n  var scale = symbolMeta.symbolScale.slice();\r\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\r\n    this.animateTo({\r\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\r\n    }, 400, 'elasticOut');\r\n  }).on('normal', function () {\r\n    this.animateTo({\r\n      scale: scale.slice()\r\n    }, 400, 'elasticOut');\r\n  });\r\n}\r\n\r\nfunction createBar(data, opt, symbolMeta, isUpdate) {\r\n  // bar is the main element for each data.\r\n  var bar = new graphic.Group(); // bundle is used for location and clip.\r\n\r\n  var bundle = new graphic.Group();\r\n  bar.add(bundle);\r\n  bar.__pictorialBundle = bundle;\r\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\r\n\r\n  if (symbolMeta.symbolRepeat) {\r\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\r\n  } else {\r\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\r\n  }\r\n\r\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\r\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\r\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\r\n  bar.__pictorialSymbolMeta = symbolMeta;\r\n  return bar;\r\n}\r\n\r\nfunction updateBar(bar, opt, symbolMeta) {\r\n  var animationModel = symbolMeta.animationModel;\r\n  var dataIndex = symbolMeta.dataIndex;\r\n  var bundle = bar.__pictorialBundle;\r\n  graphic.updateProps(bundle, {\r\n    position: symbolMeta.bundlePosition.slice()\r\n  }, animationModel, dataIndex);\r\n\r\n  if (symbolMeta.symbolRepeat) {\r\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\r\n  } else {\r\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\r\n  }\r\n\r\n  createOrUpdateBarRect(bar, symbolMeta, true);\r\n  createOrUpdateClip(bar, opt, symbolMeta, true);\r\n}\r\n\r\nfunction removeBar(data, dataIndex, animationModel, bar) {\r\n  // Not show text when animating\r\n  var labelRect = bar.__pictorialBarRect;\r\n  labelRect && (labelRect.style.text = null);\r\n  var pathes = [];\r\n  eachPath(bar, function (path) {\r\n    pathes.push(path);\r\n  });\r\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\r\n\r\n  bar.__pictorialClipPath && (animationModel = null);\r\n  zrUtil.each(pathes, function (path) {\r\n    graphic.updateProps(path, {\r\n      scale: [0, 0]\r\n    }, animationModel, dataIndex, function () {\r\n      bar.parent && bar.parent.remove(bar);\r\n    });\r\n  });\r\n  data.setItemGraphicEl(dataIndex, null);\r\n}\r\n\r\nfunction getShapeStr(data, symbolMeta) {\r\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\r\n}\r\n\r\nfunction eachPath(bar, cb, context) {\r\n  // Do not use Group#eachChild, because it do not support remove.\r\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\r\n    el !== bar.__pictorialBarRect && cb.call(context, el);\r\n  });\r\n}\r\n\r\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\r\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\r\n\r\n  if (symbolMeta.symbolClip && !isUpdate) {\r\n    animationAttrs && el.attr(animationAttrs);\r\n  } else {\r\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\r\n  }\r\n}\r\n\r\nfunction updateCommon(bar, opt, symbolMeta) {\r\n  var color = symbolMeta.color;\r\n  var dataIndex = symbolMeta.dataIndex;\r\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\r\n  // Because symbol provide setColor individually to set fill and stroke\r\n\r\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\r\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\r\n  var cursorStyle = itemModel.getShallow('cursor');\r\n  eachPath(bar, function (path) {\r\n    // PENDING setColor should be before setStyle!!!\r\n    path.setColor(color);\r\n    path.setStyle(zrUtil.defaults({\r\n      fill: color,\r\n      opacity: symbolMeta.opacity\r\n    }, normalStyle));\r\n    graphic.setHoverStyle(path, hoverStyle);\r\n    cursorStyle && (path.cursor = cursorStyle);\r\n    path.z2 = symbolMeta.z2;\r\n  });\r\n  var barRectHoverStyle = {};\r\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\r\n  var barRect = bar.__pictorialBarRect;\r\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\r\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\r\n}\r\n\r\nfunction toIntTimes(times) {\r\n  var roundedTimes = Math.round(times); // Escapse accurate error\r\n\r\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\r\n}\r\n\r\nvar _default = BarView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\r\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\r\nvar _default = {\r\n  getBarItemStyle: function (excludes) {\r\n    var style = getBarItemStyle(this, excludes);\r\n\r\n    if (this.getBorderLineDash) {\r\n      var lineDash = this.getBorderLineDash();\r\n      lineDash && (style.lineDash = lineDash);\r\n    }\r\n\r\n    return style;\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _labelHelper = require(\"../helper/labelHelper\");\r\n\r\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\r\n  var labelModel = itemModel.getModel('label');\r\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\r\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\r\n    labelFetcher: seriesModel,\r\n    labelDataIndex: dataIndex,\r\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\r\n    isRectText: true,\r\n    autoColor: color\r\n  });\r\n  fixPosition(normalStyle);\r\n  fixPosition(hoverStyle);\r\n}\r\n\r\nfunction fixPosition(style, labelPositionOutside) {\r\n  if (style.textPosition === 'outside') {\r\n    style.textPosition = labelPositionOutside;\r\n  }\r\n}\r\n\r\nexports.setLabel = setLabel;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./boxplot/BoxplotSeries\");\r\n\r\nrequire(\"./boxplot/BoxplotView\");\r\n\r\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\r\n\r\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerVisual(boxplotVisual);\r\necharts.registerLayout(boxplotLayout);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\r\n\r\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar BoxplotSeries = SeriesModel.extend({\r\n  type: 'series.boxplot',\r\n  dependencies: ['xAxis', 'yAxis', 'grid'],\r\n  // TODO\r\n  // box width represents group size, so dimension should have 'size'.\r\n\r\n  /**\r\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\r\n   * The meanings of 'min' and 'max' depend on user,\r\n   * and echarts do not need to know it.\r\n   * @readOnly\r\n   */\r\n  defaultValueDimensions: [{\r\n    name: 'min',\r\n    defaultTooltip: true\r\n  }, {\r\n    name: 'Q1',\r\n    defaultTooltip: true\r\n  }, {\r\n    name: 'median',\r\n    defaultTooltip: true\r\n  }, {\r\n    name: 'Q3',\r\n    defaultTooltip: true\r\n  }, {\r\n    name: 'max',\r\n    defaultTooltip: true\r\n  }],\r\n\r\n  /**\r\n   * @type {Array.<string>}\r\n   * @readOnly\r\n   */\r\n  dimensions: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    // 一级层叠\r\n    z: 2,\r\n    // 二级层叠\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    hoverAnimation: true,\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    layout: null,\r\n    // 'horizontal' or 'vertical'\r\n    boxWidth: [7, 50],\r\n    // [min, max] can be percent of band width.\r\n    itemStyle: {\r\n      color: '#fff',\r\n      borderWidth: 1\r\n    },\r\n    emphasis: {\r\n      itemStyle: {\r\n        borderWidth: 2,\r\n        shadowBlur: 5,\r\n        shadowOffsetX: 2,\r\n        shadowOffsetY: 2,\r\n        shadowColor: 'rgba(0,0,0,0.4)'\r\n      }\r\n    },\r\n    animationEasing: 'elasticOut',\r\n    animationDuration: 800\r\n  }\r\n});\r\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\r\nvar _default = BoxplotSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ChartView = require(\"../../view/Chart\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar Path = require(\"zrender/lib/graphic/Path\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Update common properties\r\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\r\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\r\nvar BoxplotView = ChartView.extend({\r\n  type: 'boxplot',\r\n  render: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var group = this.group;\r\n    var oldData = this._data; // There is no old data only when first rendering or switching from\r\n    // stream mode to normal mode, where previous elements should be removed.\r\n\r\n    if (!this._data) {\r\n      group.removeAll();\r\n    }\r\n\r\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\r\n    data.diff(oldData).add(function (newIdx) {\r\n      if (data.hasValue(newIdx)) {\r\n        var itemLayout = data.getItemLayout(newIdx);\r\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\r\n        data.setItemGraphicEl(newIdx, symbolEl);\r\n        group.add(symbolEl);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\r\n\r\n      if (!data.hasValue(newIdx)) {\r\n        group.remove(symbolEl);\r\n        return;\r\n      }\r\n\r\n      var itemLayout = data.getItemLayout(newIdx);\r\n\r\n      if (!symbolEl) {\r\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\r\n      } else {\r\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\r\n      }\r\n\r\n      group.add(symbolEl);\r\n      data.setItemGraphicEl(newIdx, symbolEl);\r\n    }).remove(function (oldIdx) {\r\n      var el = oldData.getItemGraphicEl(oldIdx);\r\n      el && group.remove(el);\r\n    }).execute();\r\n    this._data = data;\r\n  },\r\n  remove: function (ecModel) {\r\n    var group = this.group;\r\n    var data = this._data;\r\n    this._data = null;\r\n    data && data.eachItemGraphicEl(function (el) {\r\n      el && group.remove(el);\r\n    });\r\n  },\r\n  dispose: zrUtil.noop\r\n});\r\nvar BoxPath = Path.extend({\r\n  type: 'boxplotBoxPath',\r\n  shape: {},\r\n  buildPath: function (ctx, shape) {\r\n    var ends = shape.points;\r\n    var i = 0;\r\n    ctx.moveTo(ends[i][0], ends[i][1]);\r\n    i++;\r\n\r\n    for (; i < 4; i++) {\r\n      ctx.lineTo(ends[i][0], ends[i][1]);\r\n    }\r\n\r\n    ctx.closePath();\r\n\r\n    for (; i < ends.length; i++) {\r\n      ctx.moveTo(ends[i][0], ends[i][1]);\r\n      i++;\r\n      ctx.lineTo(ends[i][0], ends[i][1]);\r\n    }\r\n  }\r\n});\r\n\r\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\r\n  var ends = itemLayout.ends;\r\n  var el = new BoxPath({\r\n    shape: {\r\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\r\n    }\r\n  });\r\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\r\n  return el;\r\n}\r\n\r\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\r\n  var seriesModel = data.hostModel;\r\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\r\n  updateMethod(el, {\r\n    shape: {\r\n      points: itemLayout.ends\r\n    }\r\n  }, seriesModel, dataIndex);\r\n  var itemModel = data.getItemModel(dataIndex);\r\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\r\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\r\n\r\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\r\n  itemStyle.stroke = borderColor;\r\n  itemStyle.strokeNoScale = true;\r\n  el.useStyle(itemStyle);\r\n  el.z2 = 100;\r\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\r\n  graphic.setHoverStyle(el, hoverStyle);\r\n}\r\n\r\nfunction transInit(points, dim, itemLayout) {\r\n  return zrUtil.map(points, function (point) {\r\n    point = point.slice();\r\n    point[dim] = itemLayout.initBaseline;\r\n    return point;\r\n  });\r\n}\r\n\r\nvar _default = BoxplotView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\n\r\nfunction _default(ecModel) {\r\n  var groupResult = groupSeriesByAxis(ecModel);\r\n  each(groupResult, function (groupItem) {\r\n    var seriesModels = groupItem.seriesModels;\r\n\r\n    if (!seriesModels.length) {\r\n      return;\r\n    }\r\n\r\n    calculateBase(groupItem);\r\n    each(seriesModels, function (seriesModel, idx) {\r\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\r\n    });\r\n  });\r\n}\r\n/**\r\n * Group series by axis.\r\n */\r\n\r\n\r\nfunction groupSeriesByAxis(ecModel) {\r\n  var result = [];\r\n  var axisList = [];\r\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\r\n    var baseAxis = seriesModel.getBaseAxis();\r\n    var idx = zrUtil.indexOf(axisList, baseAxis);\r\n\r\n    if (idx < 0) {\r\n      idx = axisList.length;\r\n      axisList[idx] = baseAxis;\r\n      result[idx] = {\r\n        axis: baseAxis,\r\n        seriesModels: []\r\n      };\r\n    }\r\n\r\n    result[idx].seriesModels.push(seriesModel);\r\n  });\r\n  return result;\r\n}\r\n/**\r\n * Calculate offset and box width for each series.\r\n */\r\n\r\n\r\nfunction calculateBase(groupItem) {\r\n  var extent;\r\n  var baseAxis = groupItem.axis;\r\n  var seriesModels = groupItem.seriesModels;\r\n  var seriesCount = seriesModels.length;\r\n  var boxWidthList = groupItem.boxWidthList = [];\r\n  var boxOffsetList = groupItem.boxOffsetList = [];\r\n  var boundList = [];\r\n  var bandWidth;\r\n\r\n  if (baseAxis.type === 'category') {\r\n    bandWidth = baseAxis.getBandWidth();\r\n  } else {\r\n    var maxDataCount = 0;\r\n    each(seriesModels, function (seriesModel) {\r\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\r\n    });\r\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\r\n  }\r\n\r\n  each(seriesModels, function (seriesModel) {\r\n    var boxWidthBound = seriesModel.get('boxWidth');\r\n\r\n    if (!zrUtil.isArray(boxWidthBound)) {\r\n      boxWidthBound = [boxWidthBound, boxWidthBound];\r\n    }\r\n\r\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\r\n  });\r\n  var availableWidth = bandWidth * 0.8 - 2;\r\n  var boxGap = availableWidth / seriesCount * 0.3;\r\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\r\n  var base = boxWidth / 2 - availableWidth / 2;\r\n  each(seriesModels, function (seriesModel, idx) {\r\n    boxOffsetList.push(base);\r\n    base += boxGap + boxWidth;\r\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\r\n  });\r\n}\r\n/**\r\n * Calculate points location for each series.\r\n */\r\n\r\n\r\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n  var data = seriesModel.getData();\r\n  var halfWidth = boxWidth / 2;\r\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\r\n  var vDimIdx = 1 - cDimIdx;\r\n  var coordDims = ['x', 'y'];\r\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\r\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\r\n\r\n  if (cDim == null || vDims.length < 5) {\r\n    return;\r\n  }\r\n\r\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\r\n    var axisDimVal = data.get(cDim, dataIndex);\r\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\r\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\r\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\r\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\r\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\r\n    var ends = [];\r\n    addBodyEnd(ends, end2, 0);\r\n    addBodyEnd(ends, end4, 1);\r\n    ends.push(end1, end2, end5, end4);\r\n    layEndLine(ends, end1);\r\n    layEndLine(ends, end5);\r\n    layEndLine(ends, median);\r\n    data.setItemLayout(dataIndex, {\r\n      initBaseline: median[vDimIdx],\r\n      ends: ends\r\n    });\r\n  }\r\n\r\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\r\n    var val = data.get(dimIdx, dataIndex);\r\n    var p = [];\r\n    p[cDimIdx] = axisDimVal;\r\n    p[vDimIdx] = val;\r\n    var point;\r\n\r\n    if (isNaN(axisDimVal) || isNaN(val)) {\r\n      point = [NaN, NaN];\r\n    } else {\r\n      point = coordSys.dataToPoint(p);\r\n      point[cDimIdx] += offset;\r\n    }\r\n\r\n    return point;\r\n  }\r\n\r\n  function addBodyEnd(ends, point, start) {\r\n    var point1 = point.slice();\r\n    var point2 = point.slice();\r\n    point1[cDimIdx] += halfWidth;\r\n    point2[cDimIdx] -= halfWidth;\r\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\r\n  }\r\n\r\n  function layEndLine(ends, endCenter) {\r\n    var from = endCenter.slice();\r\n    var to = endCenter.slice();\r\n    from[cDimIdx] -= halfWidth;\r\n    to[cDimIdx] += halfWidth;\r\n    ends.push(from, to);\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar borderColorQuery = ['itemStyle', 'borderColor'];\r\n\r\nfunction _default(ecModel, api) {\r\n  var globalColors = ecModel.get('color');\r\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\r\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\r\n    var data = seriesModel.getData();\r\n    data.setVisual({\r\n      legendSymbol: 'roundRect',\r\n      // Use name 'color' but not 'borderColor' for legend usage and\r\n      // visual coding from other component like dataRange.\r\n      color: seriesModel.get(borderColorQuery) || defaulColor\r\n    }); // Only visible series has each data be visual encoded\r\n\r\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n      data.each(function (idx) {\r\n        var itemModel = data.getItemModel(idx);\r\n        data.setItemVisual(idx, {\r\n          color: itemModel.get(borderColorQuery, true)\r\n        });\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./candlestick/CandlestickSeries\");\r\n\r\nrequire(\"./candlestick/CandlestickView\");\r\n\r\nvar preprocessor = require(\"./candlestick/preprocessor\");\r\n\r\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\r\n\r\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerPreprocessor(preprocessor);\r\necharts.registerVisual(candlestickVisual);\r\necharts.registerLayout(candlestickLayout);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\r\n\r\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar CandlestickSeries = SeriesModel.extend({\r\n  type: 'series.candlestick',\r\n  dependencies: ['xAxis', 'yAxis', 'grid'],\r\n\r\n  /**\r\n   * @readOnly\r\n   */\r\n  defaultValueDimensions: [{\r\n    name: 'open',\r\n    defaultTooltip: true\r\n  }, {\r\n    name: 'close',\r\n    defaultTooltip: true\r\n  }, {\r\n    name: 'lowest',\r\n    defaultTooltip: true\r\n  }, {\r\n    name: 'highest',\r\n    defaultTooltip: true\r\n  }],\r\n\r\n  /**\r\n   * @type {Array.<string>}\r\n   * @readOnly\r\n   */\r\n  dimensions: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    hoverAnimation: true,\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    layout: null,\r\n    // 'horizontal' or 'vertical'\r\n    clip: true,\r\n    itemStyle: {\r\n      color: '#c23531',\r\n      // 阳线 positive\r\n      color0: '#314656',\r\n      // 阴线 negative     '#c23531', '#314656'\r\n      borderWidth: 1,\r\n      // FIXME\r\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\r\n      borderColor: '#c23531',\r\n      borderColor0: '#314656'\r\n    },\r\n    emphasis: {\r\n      itemStyle: {\r\n        borderWidth: 2\r\n      }\r\n    },\r\n    barMaxWidth: null,\r\n    barMinWidth: null,\r\n    barWidth: null,\r\n    large: true,\r\n    largeThreshold: 600,\r\n    progressive: 3e3,\r\n    progressiveThreshold: 1e4,\r\n    progressiveChunkMode: 'mod',\r\n    animationUpdate: false,\r\n    animationEasing: 'linear',\r\n    animationDuration: 300\r\n  },\r\n\r\n  /**\r\n   * Get dimension for shadow in dataZoom\r\n   * @return {string} dimension name\r\n   */\r\n  getShadowDim: function () {\r\n    return 'open';\r\n  },\r\n  brushSelector: function (dataIndex, data, selectors) {\r\n    var itemLayout = data.getItemLayout(dataIndex);\r\n    return itemLayout && selectors.rect(itemLayout.brushRect);\r\n  }\r\n});\r\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\r\nvar _default = CandlestickSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ChartView = require(\"../../view/Chart\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar Path = require(\"zrender/lib/graphic/Path\");\r\n\r\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\r\n\r\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\r\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\r\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\r\nvar CandlestickView = ChartView.extend({\r\n  type: 'candlestick',\r\n  render: function (seriesModel, ecModel, api) {\r\n    // If there is clipPath created in large mode. Remove it.\r\n    this.group.removeClipPath();\r\n\r\n    this._updateDrawMode(seriesModel);\r\n\r\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\r\n  },\r\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\r\n    this._clear();\r\n\r\n    this._updateDrawMode(seriesModel);\r\n  },\r\n  incrementalRender: function (params, seriesModel, ecModel, api) {\r\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\r\n  },\r\n  _updateDrawMode: function (seriesModel) {\r\n    var isLargeDraw = seriesModel.pipelineContext.large;\r\n\r\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\r\n      this._isLargeDraw = isLargeDraw;\r\n\r\n      this._clear();\r\n    }\r\n  },\r\n  _renderNormal: function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var group = this.group;\r\n    var isSimpleBox = data.getLayout('isSimpleBox');\r\n    var needsClip = seriesModel.get('clip', true);\r\n    var coord = seriesModel.coordinateSystem;\r\n    var clipArea = coord.getArea && coord.getArea(); // There is no old data only when first rendering or switching from\r\n    // stream mode to normal mode, where previous elements should be removed.\r\n\r\n    if (!this._data) {\r\n      group.removeAll();\r\n    }\r\n\r\n    data.diff(oldData).add(function (newIdx) {\r\n      if (data.hasValue(newIdx)) {\r\n        var el;\r\n        var itemLayout = data.getItemLayout(newIdx);\r\n\r\n        if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\r\n          return;\r\n        }\r\n\r\n        el = createNormalBox(itemLayout, newIdx, true);\r\n        graphic.initProps(el, {\r\n          shape: {\r\n            points: itemLayout.ends\r\n          }\r\n        }, seriesModel, newIdx);\r\n        setBoxCommon(el, data, newIdx, isSimpleBox);\r\n        group.add(el);\r\n        data.setItemGraphicEl(newIdx, el);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\r\n\r\n      if (!data.hasValue(newIdx)) {\r\n        group.remove(el);\r\n        return;\r\n      }\r\n\r\n      var itemLayout = data.getItemLayout(newIdx);\r\n\r\n      if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\r\n        group.remove(el);\r\n        return;\r\n      }\r\n\r\n      if (!el) {\r\n        el = createNormalBox(itemLayout, newIdx);\r\n      } else {\r\n        graphic.updateProps(el, {\r\n          shape: {\r\n            points: itemLayout.ends\r\n          }\r\n        }, seriesModel, newIdx);\r\n      }\r\n\r\n      setBoxCommon(el, data, newIdx, isSimpleBox);\r\n      group.add(el);\r\n      data.setItemGraphicEl(newIdx, el);\r\n    }).remove(function (oldIdx) {\r\n      var el = oldData.getItemGraphicEl(oldIdx);\r\n      el && group.remove(el);\r\n    }).execute();\r\n    this._data = data;\r\n  },\r\n  _renderLarge: function (seriesModel) {\r\n    this._clear();\r\n\r\n    createLarge(seriesModel, this.group);\r\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\r\n\r\n    if (clipPath) {\r\n      this.group.setClipPath(clipPath);\r\n    } else {\r\n      this.group.removeClipPath();\r\n    }\r\n  },\r\n  _incrementalRenderNormal: function (params, seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var isSimpleBox = data.getLayout('isSimpleBox');\r\n    var dataIndex;\r\n\r\n    while ((dataIndex = params.next()) != null) {\r\n      var el;\r\n      var itemLayout = data.getItemLayout(dataIndex);\r\n      el = createNormalBox(itemLayout, dataIndex);\r\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\r\n      el.incremental = true;\r\n      this.group.add(el);\r\n    }\r\n  },\r\n  _incrementalRenderLarge: function (params, seriesModel) {\r\n    createLarge(seriesModel, this.group, true);\r\n  },\r\n  remove: function (ecModel) {\r\n    this._clear();\r\n  },\r\n  _clear: function () {\r\n    this.group.removeAll();\r\n    this._data = null;\r\n  },\r\n  dispose: zrUtil.noop\r\n});\r\nvar NormalBoxPath = Path.extend({\r\n  type: 'normalCandlestickBox',\r\n  shape: {},\r\n  buildPath: function (ctx, shape) {\r\n    var ends = shape.points;\r\n\r\n    if (this.__simpleBox) {\r\n      ctx.moveTo(ends[4][0], ends[4][1]);\r\n      ctx.lineTo(ends[6][0], ends[6][1]);\r\n    } else {\r\n      ctx.moveTo(ends[0][0], ends[0][1]);\r\n      ctx.lineTo(ends[1][0], ends[1][1]);\r\n      ctx.lineTo(ends[2][0], ends[2][1]);\r\n      ctx.lineTo(ends[3][0], ends[3][1]);\r\n      ctx.closePath();\r\n      ctx.moveTo(ends[4][0], ends[4][1]);\r\n      ctx.lineTo(ends[5][0], ends[5][1]);\r\n      ctx.moveTo(ends[6][0], ends[6][1]);\r\n      ctx.lineTo(ends[7][0], ends[7][1]);\r\n    }\r\n  }\r\n});\r\n\r\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\r\n  var ends = itemLayout.ends;\r\n  return new NormalBoxPath({\r\n    shape: {\r\n      points: isInit ? transInit(ends, itemLayout) : ends\r\n    },\r\n    z2: 100\r\n  });\r\n}\r\n\r\nfunction isNormalBoxClipped(clipArea, itemLayout) {\r\n  var clipped = true;\r\n\r\n  for (var i = 0; i < itemLayout.ends.length; i++) {\r\n    // If any point are in the region.\r\n    if (clipArea.contain(itemLayout.ends[i][0], itemLayout.ends[i][1])) {\r\n      clipped = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return clipped;\r\n}\r\n\r\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\r\n  var itemModel = data.getItemModel(dataIndex);\r\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\r\n  var color = data.getItemVisual(dataIndex, 'color');\r\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\r\n  // Because symbol provide setColor individually to set fill and stroke\r\n\r\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\r\n  el.useStyle(itemStyle);\r\n  el.style.strokeNoScale = true;\r\n  el.style.fill = color;\r\n  el.style.stroke = borderColor;\r\n  el.__simpleBox = isSimpleBox;\r\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\r\n  graphic.setHoverStyle(el, hoverStyle);\r\n}\r\n\r\nfunction transInit(points, itemLayout) {\r\n  return zrUtil.map(points, function (point) {\r\n    point = point.slice();\r\n    point[1] = itemLayout.initBaseline;\r\n    return point;\r\n  });\r\n}\r\n\r\nvar LargeBoxPath = Path.extend({\r\n  type: 'largeCandlestickBox',\r\n  shape: {},\r\n  buildPath: function (ctx, shape) {\r\n    // Drawing lines is more efficient than drawing\r\n    // a whole line or drawing rects.\r\n    var points = shape.points;\r\n\r\n    for (var i = 0; i < points.length;) {\r\n      if (this.__sign === points[i++]) {\r\n        var x = points[i++];\r\n        ctx.moveTo(x, points[i++]);\r\n        ctx.lineTo(x, points[i++]);\r\n      } else {\r\n        i += 3;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nfunction createLarge(seriesModel, group, incremental) {\r\n  var data = seriesModel.getData();\r\n  var largePoints = data.getLayout('largePoints');\r\n  var elP = new LargeBoxPath({\r\n    shape: {\r\n      points: largePoints\r\n    },\r\n    __sign: 1\r\n  });\r\n  group.add(elP);\r\n  var elN = new LargeBoxPath({\r\n    shape: {\r\n      points: largePoints\r\n    },\r\n    __sign: -1\r\n  });\r\n  group.add(elN);\r\n  setLargeStyle(1, elP, seriesModel, data);\r\n  setLargeStyle(-1, elN, seriesModel, data);\r\n\r\n  if (incremental) {\r\n    elP.incremental = true;\r\n    elN.incremental = true;\r\n  }\r\n}\r\n\r\nfunction setLargeStyle(sign, el, seriesModel, data) {\r\n  var suffix = sign > 0 ? 'P' : 'N';\r\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\r\n  // Because symbol provide setColor individually to set fill and stroke\r\n\r\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\r\n  el.useStyle(itemStyle);\r\n  el.style.fill = null;\r\n  el.style.stroke = borderColor; // No different\r\n  // el.style.lineWidth = .5;\r\n}\r\n\r\nvar _default = CandlestickView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _graphic = require(\"../../util/graphic\");\r\n\r\nvar subPixelOptimize = _graphic.subPixelOptimize;\r\n\r\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar retrieve2 = _util.retrieve2;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Float32Array */\r\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nvar _default = {\r\n  seriesType: 'candlestick',\r\n  plan: createRenderPlanner(),\r\n  reset: function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var data = seriesModel.getData();\r\n    var candleWidth = calculateCandleWidth(seriesModel, data);\r\n    var cDimIdx = 0;\r\n    var vDimIdx = 1;\r\n    var coordDims = ['x', 'y'];\r\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\r\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\r\n    var openDim = vDims[0];\r\n    var closeDim = vDims[1];\r\n    var lowestDim = vDims[2];\r\n    var highestDim = vDims[3];\r\n    data.setLayout({\r\n      candleWidth: candleWidth,\r\n      // The value is experimented visually.\r\n      isSimpleBox: candleWidth <= 1.3\r\n    });\r\n\r\n    if (cDim == null || vDims.length < 4) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\r\n    };\r\n\r\n    function normalProgress(params, data) {\r\n      var dataIndex;\r\n\r\n      while ((dataIndex = params.next()) != null) {\r\n        var axisDimVal = data.get(cDim, dataIndex);\r\n        var openVal = data.get(openDim, dataIndex);\r\n        var closeVal = data.get(closeDim, dataIndex);\r\n        var lowestVal = data.get(lowestDim, dataIndex);\r\n        var highestVal = data.get(highestDim, dataIndex);\r\n        var ocLow = Math.min(openVal, closeVal);\r\n        var ocHigh = Math.max(openVal, closeVal);\r\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\r\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\r\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\r\n        var highestPoint = getPoint(highestVal, axisDimVal);\r\n        var ends = [];\r\n        addBodyEnd(ends, ocHighPoint, 0);\r\n        addBodyEnd(ends, ocLowPoint, 1);\r\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\r\n        data.setItemLayout(dataIndex, {\r\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\r\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\r\n          // open point.\r\n          ends: ends,\r\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\r\n        });\r\n      }\r\n\r\n      function getPoint(val, axisDimVal) {\r\n        var p = [];\r\n        p[cDimIdx] = axisDimVal;\r\n        p[vDimIdx] = val;\r\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\r\n      }\r\n\r\n      function addBodyEnd(ends, point, start) {\r\n        var point1 = point.slice();\r\n        var point2 = point.slice();\r\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\r\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\r\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\r\n      }\r\n\r\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\r\n        var pmin = getPoint(lowestVal, axisDimVal);\r\n        var pmax = getPoint(highestVal, axisDimVal);\r\n        pmin[cDimIdx] -= candleWidth / 2;\r\n        pmax[cDimIdx] -= candleWidth / 2;\r\n        return {\r\n          x: pmin[0],\r\n          y: pmin[1],\r\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\r\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\r\n        };\r\n      }\r\n\r\n      function subPixelOptimizePoint(point) {\r\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\r\n        return point;\r\n      }\r\n    }\r\n\r\n    function largeProgress(params, data) {\r\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\r\n      var points = new LargeArr(params.count * 4);\r\n      var offset = 0;\r\n      var point;\r\n      var tmpIn = [];\r\n      var tmpOut = [];\r\n      var dataIndex;\r\n\r\n      while ((dataIndex = params.next()) != null) {\r\n        var axisDimVal = data.get(cDim, dataIndex);\r\n        var openVal = data.get(openDim, dataIndex);\r\n        var closeVal = data.get(closeDim, dataIndex);\r\n        var lowestVal = data.get(lowestDim, dataIndex);\r\n        var highestVal = data.get(highestDim, dataIndex);\r\n\r\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\r\n          points[offset++] = NaN;\r\n          offset += 3;\r\n          continue;\r\n        }\r\n\r\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\r\n        tmpIn[cDimIdx] = axisDimVal;\r\n        tmpIn[vDimIdx] = lowestVal;\r\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\r\n        points[offset++] = point ? point[0] : NaN;\r\n        points[offset++] = point ? point[1] : NaN;\r\n        tmpIn[vDimIdx] = highestVal;\r\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\r\n        points[offset++] = point ? point[1] : NaN;\r\n      }\r\n\r\n      data.setLayout('largePoints', points);\r\n    }\r\n  }\r\n};\r\n\r\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\r\n  var sign;\r\n\r\n  if (openVal > closeVal) {\r\n    sign = -1;\r\n  } else if (openVal < closeVal) {\r\n    sign = 1;\r\n  } else {\r\n    sign = dataIndex > 0 // If close === open, compare with close of last record\r\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\r\n    1;\r\n  }\r\n\r\n  return sign;\r\n}\r\n\r\nfunction calculateCandleWidth(seriesModel, data) {\r\n  var baseAxis = seriesModel.getBaseAxis();\r\n  var extent;\r\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\r\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\r\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\r\n  var barWidth = seriesModel.get('barWidth');\r\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\r\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\r\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\r\nvar positiveColorQuery = ['itemStyle', 'color'];\r\nvar negativeColorQuery = ['itemStyle', 'color0'];\r\nvar _default = {\r\n  seriesType: 'candlestick',\r\n  plan: createRenderPlanner(),\r\n  // For legend.\r\n  performRawSeries: true,\r\n  reset: function (seriesModel, ecModel) {\r\n    var data = seriesModel.getData();\r\n    data.setVisual({\r\n      legendSymbol: 'roundRect',\r\n      colorP: getColor(1, seriesModel),\r\n      colorN: getColor(-1, seriesModel),\r\n      borderColorP: getBorderColor(1, seriesModel),\r\n      borderColorN: getBorderColor(-1, seriesModel)\r\n    }); // Only visible series has each data be visual encoded\r\n\r\n    if (ecModel.isSeriesFiltered(seriesModel)) {\r\n      return;\r\n    }\r\n\r\n    var isLargeRender = seriesModel.pipelineContext.large;\r\n    return !isLargeRender && {\r\n      progress: progress\r\n    };\r\n\r\n    function progress(params, data) {\r\n      var dataIndex;\r\n\r\n      while ((dataIndex = params.next()) != null) {\r\n        var itemModel = data.getItemModel(dataIndex);\r\n        var sign = data.getItemLayout(dataIndex).sign;\r\n        data.setItemVisual(dataIndex, {\r\n          color: getColor(sign, itemModel),\r\n          borderColor: getBorderColor(sign, itemModel)\r\n        });\r\n      }\r\n    }\r\n\r\n    function getColor(sign, model) {\r\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\r\n    }\r\n\r\n    function getBorderColor(sign, model) {\r\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\r\n    }\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(option) {\r\n  if (!option || !zrUtil.isArray(option.series)) {\r\n    return;\r\n  } // Translate 'k' to 'candlestick'.\r\n\r\n\r\n  zrUtil.each(option.series, function (seriesItem) {\r\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\r\n      seriesItem.type = 'candlestick';\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphicUtil = require(\"../util/graphic\");\r\n\r\nvar _labelHelper = require(\"./helper/labelHelper\");\r\n\r\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\r\n\r\nvar createListFromArray = require(\"./helper/createListFromArray\");\r\n\r\nvar _barGrid = require(\"../layout/barGrid\");\r\n\r\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\r\n\r\nvar DataDiffer = require(\"../data/DataDiffer\");\r\n\r\nvar SeriesModel = require(\"../model/Series\");\r\n\r\nvar Model = require(\"../model/Model\");\r\n\r\nvar ChartView = require(\"../view/Chart\");\r\n\r\nvar _createClipPathFromCoordSys = require(\"./helper/createClipPathFromCoordSys\");\r\n\r\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\r\n\r\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\r\n\r\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\r\n\r\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\r\n\r\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\r\n\r\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar CACHED_LABEL_STYLE_PROPERTIES = graphicUtil.CACHED_LABEL_STYLE_PROPERTIES;\r\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\r\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\r\nvar LABEL_NORMAL = ['label'];\r\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\r\n// which will cause weird udpate animation.\r\n\r\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\r\n/**\r\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\r\n * of each coordinate systems are not required by each coordinate systems directly, but\r\n * required by the module `custom`.\r\n *\r\n * prepareInfoForCustomSeries {Function}: optional\r\n *     @return {Object} {coordSys: {...}, api: {\r\n *         coord: function (data, clamp) {}, // return point in global.\r\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\r\n *     }}\r\n */\r\n\r\nvar prepareCustoms = {\r\n  cartesian2d: prepareCartesian2d,\r\n  geo: prepareGeo,\r\n  singleAxis: prepareSingleAxis,\r\n  polar: preparePolar,\r\n  calendar: prepareCalendar\r\n}; // ------\r\n// Model\r\n// ------\r\n\r\nSeriesModel.extend({\r\n  type: 'series.custom',\r\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\r\n  defaultOption: {\r\n    coordinateSystem: 'cartesian2d',\r\n    // Can be set as 'none'\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    useTransform: true,\r\n    // Custom series will not clip by default.\r\n    // Some case will use custom series to draw label\r\n    // For example https://echarts.apache.org/examples/en/editor.html?c=custom-gantt-flight\r\n    // Only works on polar and cartesian2d coordinate system.\r\n    clip: false // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // Polar coordinate system\r\n    // polarIndex: 0,\r\n    // Geo coordinate system\r\n    // geoIndex: 0,\r\n    // label: {}\r\n    // itemStyle: {}\r\n\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getInitialData: function (option, ecModel) {\r\n    return createListFromArray(this.getSource(), this);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getDataParams: function (dataIndex, dataType, el) {\r\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\r\n    el && (params.info = el.info);\r\n    return params;\r\n  }\r\n}); // -----\r\n// View\r\n// -----\r\n\r\nChartView.extend({\r\n  type: 'custom',\r\n\r\n  /**\r\n   * @private\r\n   * @type {module:echarts/data/List}\r\n   */\r\n  _data: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (customSeries, ecModel, api, payload) {\r\n    var oldData = this._data;\r\n    var data = customSeries.getData();\r\n    var group = this.group;\r\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api); // By default, merge mode is applied. In most cases, custom series is\r\n    // used in the scenario that data amount is not large but graphic elements\r\n    // is complicated, where merge mode is probably necessary for optimization.\r\n    // For example, reuse graphic elements and only update the transform when\r\n    // roam or data zoom according to `actionType`.\r\n\r\n    data.diff(oldData).add(function (newIdx) {\r\n      createOrUpdate(null, newIdx, renderItem(newIdx, payload), customSeries, group, data);\r\n    }).update(function (newIdx, oldIdx) {\r\n      var el = oldData.getItemGraphicEl(oldIdx);\r\n      createOrUpdate(el, newIdx, renderItem(newIdx, payload), customSeries, group, data);\r\n    }).remove(function (oldIdx) {\r\n      var el = oldData.getItemGraphicEl(oldIdx);\r\n      el && group.remove(el);\r\n    }).execute(); // Do clipping\r\n\r\n    var clipPath = customSeries.get('clip', true) ? createClipPath(customSeries.coordinateSystem, false, customSeries) : null;\r\n\r\n    if (clipPath) {\r\n      group.setClipPath(clipPath);\r\n    } else {\r\n      group.removeClipPath();\r\n    }\r\n\r\n    this._data = data;\r\n  },\r\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\r\n    this.group.removeAll();\r\n    this._data = null;\r\n  },\r\n  incrementalRender: function (params, customSeries, ecModel, api, payload) {\r\n    var data = customSeries.getData();\r\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\r\n\r\n    function setIncrementalAndHoverLayer(el) {\r\n      if (!el.isGroup) {\r\n        el.incremental = true;\r\n        el.useHoverLayer = true;\r\n      }\r\n    }\r\n\r\n    for (var idx = params.start; idx < params.end; idx++) {\r\n      var el = createOrUpdate(null, idx, renderItem(idx, payload), customSeries, this.group, data);\r\n      el.traverse(setIncrementalAndHoverLayer);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: zrUtil.noop,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  filterForExposedEvent: function (eventType, query, targetEl, packedEvent) {\r\n    var elementName = query.element;\r\n\r\n    if (elementName == null || targetEl.name === elementName) {\r\n      return true;\r\n    } // Enable to give a name on a group made by `renderItem`, and listen\r\n    // events that triggerd by its descendents.\r\n\r\n\r\n    while ((targetEl = targetEl.parent) && targetEl !== this.group) {\r\n      if (targetEl.name === elementName) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n});\r\n\r\nfunction createEl(elOption) {\r\n  var graphicType = elOption.type;\r\n  var el; // Those graphic elements are not shapes. They should not be\r\n  // overwritten by users, so do them first.\r\n\r\n  if (graphicType === 'path') {\r\n    var shape = elOption.shape; // Using pathRect brings convenience to users sacle svg path.\r\n\r\n    var pathRect = shape.width != null && shape.height != null ? {\r\n      x: shape.x || 0,\r\n      y: shape.y || 0,\r\n      width: shape.width,\r\n      height: shape.height\r\n    } : null;\r\n    var pathData = getPathData(shape); // Path is also used for icon, so layout 'center' by default.\r\n\r\n    el = graphicUtil.makePath(pathData, null, pathRect, shape.layout || 'center');\r\n    el.__customPathData = pathData;\r\n  } else if (graphicType === 'image') {\r\n    el = new graphicUtil.Image({});\r\n    el.__customImagePath = elOption.style.image;\r\n  } else if (graphicType === 'text') {\r\n    el = new graphicUtil.Text({});\r\n    el.__customText = elOption.style.text;\r\n  } else if (graphicType === 'group') {\r\n    el = new graphicUtil.Group();\r\n  } else if (graphicType === 'compoundPath') {\r\n    throw new Error('\"compoundPath\" is not supported yet.');\r\n  } else {\r\n    var Clz = graphicUtil.getShapeClass(graphicType);\r\n    el = new Clz();\r\n  }\r\n\r\n  el.__customGraphicType = graphicType;\r\n  el.name = elOption.name;\r\n  return el;\r\n}\r\n\r\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit, isRoot) {\r\n  var transitionProps = {};\r\n  var elOptionStyle = elOption.style || {};\r\n  elOption.shape && (transitionProps.shape = zrUtil.clone(elOption.shape));\r\n  elOption.position && (transitionProps.position = elOption.position.slice());\r\n  elOption.scale && (transitionProps.scale = elOption.scale.slice());\r\n  elOption.origin && (transitionProps.origin = elOption.origin.slice());\r\n  elOption.rotation && (transitionProps.rotation = elOption.rotation);\r\n\r\n  if (el.type === 'image' && elOption.style) {\r\n    var targetStyle = transitionProps.style = {};\r\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\r\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\r\n    });\r\n  }\r\n\r\n  if (el.type === 'text' && elOption.style) {\r\n    var targetStyle = transitionProps.style = {};\r\n    zrUtil.each(['x', 'y'], function (prop) {\r\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\r\n    }); // Compatible with previous: both support\r\n    // textFill and fill, textStroke and stroke in 'text' element.\r\n\r\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\r\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\r\n  }\r\n\r\n  if (el.type !== 'group') {\r\n    el.useStyle(elOptionStyle); // Init animation.\r\n\r\n    if (isInit) {\r\n      el.style.opacity = 0;\r\n      var targetOpacity = elOptionStyle.opacity;\r\n      targetOpacity == null && (targetOpacity = 1);\r\n      graphicUtil.initProps(el, {\r\n        style: {\r\n          opacity: targetOpacity\r\n        }\r\n      }, animatableModel, dataIndex);\r\n    }\r\n  }\r\n\r\n  if (isInit) {\r\n    el.attr(transitionProps);\r\n  } else {\r\n    graphicUtil.updateProps(el, transitionProps, animatableModel, dataIndex);\r\n  } // Merge by default.\r\n  // z2 must not be null/undefined, otherwise sort error may occur.\r\n\r\n\r\n  elOption.hasOwnProperty('z2') && el.attr('z2', elOption.z2 || 0);\r\n  elOption.hasOwnProperty('silent') && el.attr('silent', elOption.silent);\r\n  elOption.hasOwnProperty('invisible') && el.attr('invisible', elOption.invisible);\r\n  elOption.hasOwnProperty('ignore') && el.attr('ignore', elOption.ignore); // `elOption.info` enables user to mount some info on\r\n  // elements and use them in event handlers.\r\n  // Update them only when user specified, otherwise, remain.\r\n\r\n  elOption.hasOwnProperty('info') && el.attr('info', elOption.info); // If `elOption.styleEmphasis` is `false`, remove hover style. The\r\n  // logic is ensured by `graphicUtil.setElementHoverStyle`.\r\n\r\n  var styleEmphasis = elOption.styleEmphasis; // hoverStyle should always be set here, because if the hover style\r\n  // may already be changed, where the inner cache should be reset.\r\n\r\n  graphicUtil.setElementHoverStyle(el, styleEmphasis);\r\n\r\n  if (isRoot) {\r\n    graphicUtil.setAsHighDownDispatcher(el, styleEmphasis !== false);\r\n  }\r\n}\r\n\r\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\r\n  if (elOptionStyle[prop] != null && !isInit) {\r\n    targetStyle[prop] = elOptionStyle[prop];\r\n    elOptionStyle[prop] = oldElStyle[prop];\r\n  }\r\n}\r\n\r\nfunction makeRenderItem(customSeries, data, ecModel, api) {\r\n  var renderItem = customSeries.get('renderItem');\r\n  var coordSys = customSeries.coordinateSystem;\r\n  var prepareResult = {};\r\n\r\n  if (coordSys) {\r\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\r\n  }\r\n\r\n  var userAPI = zrUtil.defaults({\r\n    getWidth: api.getWidth,\r\n    getHeight: api.getHeight,\r\n    getZr: api.getZr,\r\n    getDevicePixelRatio: api.getDevicePixelRatio,\r\n    value: value,\r\n    style: style,\r\n    styleEmphasis: styleEmphasis,\r\n    visual: visual,\r\n    barLayout: barLayout,\r\n    currentSeriesIndices: currentSeriesIndices,\r\n    font: font\r\n  }, prepareResult.api || {});\r\n  var userParams = {\r\n    // The life cycle of context: current round of rendering.\r\n    // The global life cycle is probably not necessary, because\r\n    // user can store global status by themselves.\r\n    context: {},\r\n    seriesId: customSeries.id,\r\n    seriesName: customSeries.name,\r\n    seriesIndex: customSeries.seriesIndex,\r\n    coordSys: prepareResult.coordSys,\r\n    dataInsideLength: data.count(),\r\n    encode: wrapEncodeDef(customSeries.getData())\r\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\r\n\r\n  var currDataIndexInside;\r\n  var currDirty = true;\r\n  var currItemModel;\r\n  var currLabelNormalModel;\r\n  var currLabelEmphasisModel;\r\n  var currVisualColor;\r\n  return function (dataIndexInside, payload) {\r\n    currDataIndexInside = dataIndexInside;\r\n    currDirty = true;\r\n    return renderItem && renderItem(zrUtil.defaults({\r\n      dataIndexInside: dataIndexInside,\r\n      dataIndex: data.getRawIndex(dataIndexInside),\r\n      // Can be used for optimization when zoom or roam.\r\n      actionType: payload ? payload.type : null\r\n    }, userParams), userAPI);\r\n  }; // Do not update cache until api called.\r\n\r\n  function updateCache(dataIndexInside) {\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n\r\n    if (currDirty) {\r\n      currItemModel = data.getItemModel(dataIndexInside);\r\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\r\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\r\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\r\n      currDirty = false;\r\n    }\r\n  }\r\n  /**\r\n   * @public\r\n   * @param {number|string} dim\r\n   * @param {number} [dataIndexInside=currDataIndexInside]\r\n   * @return {number|string} value\r\n   */\r\n\r\n\r\n  function value(dim, dataIndexInside) {\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\r\n  }\r\n  /**\r\n   * By default, `visual` is applied to style (to support visualMap).\r\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\r\n   * it can be implemented as:\r\n   * `api.style({stroke: api.visual('color'), fill: null})`;\r\n   * @public\r\n   * @param {Object} [extra]\r\n   * @param {number} [dataIndexInside=currDataIndexInside]\r\n   */\r\n\r\n\r\n  function style(extra, dataIndexInside) {\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n    updateCache(dataIndexInside);\r\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\r\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\r\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\r\n    opacity != null && (itemStyle.opacity = opacity);\r\n    var labelModel = extra ? applyExtraBefore(extra, currLabelNormalModel) : currLabelNormalModel;\r\n    graphicUtil.setTextStyle(itemStyle, labelModel, null, {\r\n      autoColor: currVisualColor,\r\n      isRectText: true\r\n    });\r\n    itemStyle.text = labelModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\r\n    extra && applyExtraAfter(itemStyle, extra);\r\n    return itemStyle;\r\n  }\r\n  /**\r\n   * @public\r\n   * @param {Object} [extra]\r\n   * @param {number} [dataIndexInside=currDataIndexInside]\r\n   */\r\n\r\n\r\n  function styleEmphasis(extra, dataIndexInside) {\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n    updateCache(dataIndexInside);\r\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\r\n    var labelModel = extra ? applyExtraBefore(extra, currLabelEmphasisModel) : currLabelEmphasisModel;\r\n    graphicUtil.setTextStyle(itemStyle, labelModel, null, {\r\n      isRectText: true\r\n    }, true);\r\n    itemStyle.text = labelModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\r\n    extra && applyExtraAfter(itemStyle, extra);\r\n    return itemStyle;\r\n  }\r\n  /**\r\n   * @public\r\n   * @param {string} visualType\r\n   * @param {number} [dataIndexInside=currDataIndexInside]\r\n   */\r\n\r\n\r\n  function visual(visualType, dataIndexInside) {\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n    return data.getItemVisual(dataIndexInside, visualType);\r\n  }\r\n  /**\r\n   * @public\r\n   * @param {number} opt.count Positive interger.\r\n   * @param {number} [opt.barWidth]\r\n   * @param {number} [opt.barMaxWidth]\r\n   * @param {number} [opt.barMinWidth]\r\n   * @param {number} [opt.barGap]\r\n   * @param {number} [opt.barCategoryGap]\r\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\r\n   */\r\n\r\n\r\n  function barLayout(opt) {\r\n    if (coordSys.getBaseAxis) {\r\n      var baseAxis = coordSys.getBaseAxis();\r\n      return getLayoutOnAxis(zrUtil.defaults({\r\n        axis: baseAxis\r\n      }, opt), api);\r\n    }\r\n  }\r\n  /**\r\n   * @public\r\n   * @return {Array.<number>}\r\n   */\r\n\r\n\r\n  function currentSeriesIndices() {\r\n    return ecModel.getCurrentSeriesIndices();\r\n  }\r\n  /**\r\n   * @public\r\n   * @param {Object} opt\r\n   * @param {string} [opt.fontStyle]\r\n   * @param {number} [opt.fontWeight]\r\n   * @param {number} [opt.fontSize]\r\n   * @param {string} [opt.fontFamily]\r\n   * @return {string} font string\r\n   */\r\n\r\n\r\n  function font(opt) {\r\n    return graphicUtil.getFont(opt, ecModel);\r\n  }\r\n}\r\n\r\nfunction wrapEncodeDef(data) {\r\n  var encodeDef = {};\r\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\r\n    var dimInfo = data.getDimensionInfo(dimName);\r\n\r\n    if (!dimInfo.isExtraCoord) {\r\n      var coordDim = dimInfo.coordDim;\r\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\r\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\r\n    }\r\n  });\r\n  return encodeDef;\r\n}\r\n\r\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\r\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data, true);\r\n  el && data.setItemGraphicEl(dataIndex, el);\r\n  return el;\r\n}\r\n\r\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data, isRoot) {\r\n  // [Rule]\r\n  // By default, follow merge mode.\r\n  //     (It probably brings benifit for performance in some cases of large data, where\r\n  //     user program can be optimized to that only updated props needed to be re-calculated,\r\n  //     or according to `actionType` some calculation can be skipped.)\r\n  // If `renderItem` returns `null`/`undefined`/`false`, remove the previous el if existing.\r\n  //     (It seems that violate the \"merge\" principle, but most of users probably intuitively\r\n  //     regard \"return;\" as \"show nothing element whatever\", so make a exception to meet the\r\n  //     most cases.)\r\n  var simplyRemove = !elOption; // `null`/`undefined`/`false`\r\n\r\n  elOption = elOption || {};\r\n  var elOptionType = elOption.type;\r\n  var elOptionShape = elOption.shape;\r\n  var elOptionStyle = elOption.style;\r\n\r\n  if (el && (simplyRemove // || elOption.$merge === false\r\n  // If `elOptionType` is `null`, follow the merge principle.\r\n  || elOptionType != null && elOptionType !== el.__customGraphicType || elOptionType === 'path' && hasOwnPathData(elOptionShape) && getPathData(elOptionShape) !== el.__customPathData || elOptionType === 'image' && hasOwn(elOptionStyle, 'image') && elOptionStyle.image !== el.__customImagePath // FIXME test and remove this restriction?\r\n  || elOptionType === 'text' && hasOwn(elOptionShape, 'text') && elOptionStyle.text !== el.__customText)) {\r\n    group.remove(el);\r\n    el = null;\r\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\r\n\r\n\r\n  if (simplyRemove) {\r\n    return;\r\n  }\r\n\r\n  var isInit = !el;\r\n  !el && (el = createEl(elOption));\r\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit, isRoot);\r\n\r\n  if (elOptionType === 'group') {\r\n    mergeChildren(el, dataIndex, elOption, animatableModel, data);\r\n  } // Always add whatever already added to ensure sequence.\r\n\r\n\r\n  group.add(el);\r\n  return el;\r\n} // Usage:\r\n// (1) By default, `elOption.$mergeChildren` is `'byIndex'`, which indicates that\r\n//     the existing children will not be removed, and enables the feature that\r\n//     update some of the props of some of the children simply by construct\r\n//     the returned children of `renderItem` like:\r\n//     `var children = group.children = []; children[3] = {opacity: 0.5};`\r\n// (2) If `elOption.$mergeChildren` is `'byName'`, add/update/remove children\r\n//     by child.name. But that might be lower performance.\r\n// (3) If `elOption.$mergeChildren` is `false`, the existing children will be\r\n//     replaced totally.\r\n// (4) If `!elOption.children`, following the \"merge\" principle, nothing will happen.\r\n//\r\n// For implementation simpleness, do not provide a direct way to remove sinlge\r\n// child (otherwise the total indicies of the children array have to be modified).\r\n// User can remove a single child by set its `ignore` as `true` or replace\r\n// it by another element, where its `$merge` can be set as `true` if necessary.\r\n\r\n\r\nfunction mergeChildren(el, dataIndex, elOption, animatableModel, data) {\r\n  var newChildren = elOption.children;\r\n  var newLen = newChildren ? newChildren.length : 0;\r\n  var mergeChildren = elOption.$mergeChildren; // `diffChildrenByName` has been deprecated.\r\n\r\n  var byName = mergeChildren === 'byName' || elOption.diffChildrenByName;\r\n  var notMerge = mergeChildren === false; // For better performance on roam update, only enter if necessary.\r\n\r\n  if (!newLen && !byName && !notMerge) {\r\n    return;\r\n  }\r\n\r\n  if (byName) {\r\n    diffGroupChildren({\r\n      oldChildren: el.children() || [],\r\n      newChildren: newChildren || [],\r\n      dataIndex: dataIndex,\r\n      animatableModel: animatableModel,\r\n      group: el,\r\n      data: data\r\n    });\r\n    return;\r\n  }\r\n\r\n  notMerge && el.removeAll(); // Mapping children of a group simply by index, which\r\n  // might be better performance.\r\n\r\n  var index = 0;\r\n\r\n  for (; index < newLen; index++) {\r\n    newChildren[index] && doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\r\n  }\r\n}\r\n\r\nfunction diffGroupChildren(context) {\r\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\r\n}\r\n\r\nfunction getKey(item, idx) {\r\n  var name = item && item.name;\r\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\r\n}\r\n\r\nfunction processAddUpdate(newIndex, oldIndex) {\r\n  var context = this.context;\r\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\r\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\r\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\r\n} // `graphic#applyDefaultTextStyle` will cache\r\n// textFill, textStroke, textStrokeWidth.\r\n// We have to do this trick.\r\n\r\n\r\nfunction applyExtraBefore(extra, model) {\r\n  var dummyModel = new Model({}, model);\r\n  zrUtil.each(CACHED_LABEL_STYLE_PROPERTIES, function (stylePropName, modelPropName) {\r\n    if (extra.hasOwnProperty(stylePropName)) {\r\n      dummyModel.option[modelPropName] = extra[stylePropName];\r\n    }\r\n  });\r\n  return dummyModel;\r\n}\r\n\r\nfunction applyExtraAfter(itemStyle, extra) {\r\n  for (var key in extra) {\r\n    if (extra.hasOwnProperty(key) || !CACHED_LABEL_STYLE_PROPERTIES.hasOwnProperty(key)) {\r\n      itemStyle[key] = extra[key];\r\n    }\r\n  }\r\n}\r\n\r\nfunction processRemove(oldIndex) {\r\n  var context = this.context;\r\n  var child = context.oldChildren[oldIndex];\r\n  child && context.group.remove(child);\r\n}\r\n\r\nfunction getPathData(shape) {\r\n  // \"d\" follows the SVG convention.\r\n  return shape && (shape.pathData || shape.d);\r\n}\r\n\r\nfunction hasOwnPathData(shape) {\r\n  return shape && (shape.hasOwnProperty('pathData') || shape.hasOwnProperty('d'));\r\n}\r\n\r\nfunction hasOwn(host, prop) {\r\n  return host && host.hasOwnProperty(prop);\r\n}","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./effectScatter/EffectScatterSeries\");\r\n\r\nrequire(\"./effectScatter/EffectScatterView\");\r\n\r\nvar visualSymbol = require(\"../visual/symbol\");\r\n\r\nvar layoutPoints = require(\"../layout/points\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\r\necharts.registerLayout(layoutPoints('effectScatter'));","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar createListFromArray = require(\"../helper/createListFromArray\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = SeriesModel.extend({\r\n  type: 'series.effectScatter',\r\n  dependencies: ['grid', 'polar'],\r\n  getInitialData: function (option, ecModel) {\r\n    return createListFromArray(this.getSource(), this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  },\r\n  brushSelector: 'point',\r\n  defaultOption: {\r\n    coordinateSystem: 'cartesian2d',\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    effectType: 'ripple',\r\n    progressive: 0,\r\n    // When to show the effect, option: 'render'|'emphasis'\r\n    showEffectOn: 'render',\r\n    // Ripple effect config\r\n    rippleEffect: {\r\n      period: 4,\r\n      // Scale of ripple\r\n      scale: 2.5,\r\n      // Brush type can be fill or stroke\r\n      brushType: 'fill'\r\n    },\r\n    // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // Polar coordinate system\r\n    // polarIndex: 0,\r\n    // Geo coordinate system\r\n    // geoIndex: 0,\r\n    // symbol: null,        // 图形类型\r\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n    // symbolRotate: null,  // 图形旋转控制\r\n    // large: false,\r\n    // Available when large is true\r\n    // largeThreshold: 2000,\r\n    // itemStyle: {\r\n    //     opacity: 1\r\n    // }\r\n\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\r\n\r\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar pointsLayout = require(\"../../layout/points\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendChartView({\r\n  type: 'effectScatter',\r\n  init: function () {\r\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\r\n  },\r\n  render: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var effectSymbolDraw = this._symbolDraw;\r\n    effectSymbolDraw.updateData(data);\r\n    this.group.add(effectSymbolDraw.group);\r\n  },\r\n  updateTransform: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    this.group.dirty();\r\n    var res = pointsLayout().reset(seriesModel);\r\n\r\n    if (res.progress) {\r\n      res.progress({\r\n        start: 0,\r\n        end: data.count()\r\n      }, data);\r\n    }\r\n\r\n    this._symbolDraw.updateLayout(data);\r\n  },\r\n  _updateGroupTransform: function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.getRoamTransform) {\r\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\r\n      this.group.decomposeTransform();\r\n    }\r\n  },\r\n  remove: function (ecModel, api) {\r\n    this._symbolDraw && this._symbolDraw.remove(api);\r\n  },\r\n  dispose: function () {}\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./funnel/FunnelSeries\");\r\n\r\nrequire(\"./funnel/FunnelView\");\r\n\r\nvar dataColor = require(\"../visual/dataColor\");\r\n\r\nvar funnelLayout = require(\"./funnel/funnelLayout\");\r\n\r\nvar dataFilter = require(\"../processor/dataFilter\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerVisual(dataColor('funnel'));\r\necharts.registerLayout(funnelLayout);\r\necharts.registerProcessor(dataFilter('funnel'));","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar createListSimply = require(\"../helper/createListSimply\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar defaultEmphasis = _model.defaultEmphasis;\r\n\r\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\r\n\r\nvar makeSeriesEncodeForNameBased = _sourceHelper.makeSeriesEncodeForNameBased;\r\n\r\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar FunnelSeries = echarts.extendSeriesModel({\r\n  type: 'series.funnel',\r\n  init: function (option) {\r\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this)); // Extend labelLine emphasis\r\n\r\n    this._defaultLabelLine(option);\r\n  },\r\n  getInitialData: function (option, ecModel) {\r\n    return createListSimply(this, {\r\n      coordDimensions: ['value'],\r\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\r\n    });\r\n  },\r\n  _defaultLabelLine: function (option) {\r\n    // Extend labelLine emphasis\r\n    defaultEmphasis(option, 'labelLine', ['show']);\r\n    var labelLineNormalOpt = option.labelLine;\r\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\r\n\r\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\r\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\r\n  },\r\n  // Overwrite\r\n  getDataParams: function (dataIndex) {\r\n    var data = this.getData();\r\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\r\n    var valueDim = data.mapDimension('value');\r\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\r\n\r\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\r\n    params.$vars.push('percent');\r\n    return params;\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    // 一级层叠\r\n    z: 2,\r\n    // 二级层叠\r\n    legendHoverLink: true,\r\n    left: 80,\r\n    top: 60,\r\n    right: 80,\r\n    bottom: 60,\r\n    // width: {totalWidth} - left - right,\r\n    // height: {totalHeight} - top - bottom,\r\n    // 默认取数据最小最大值\r\n    // min: 0,\r\n    // max: 100,\r\n    minSize: '0%',\r\n    maxSize: '100%',\r\n    sort: 'descending',\r\n    // 'ascending', 'descending'\r\n    orient: 'vertical',\r\n    gap: 0,\r\n    funnelAlign: 'center',\r\n    label: {\r\n      show: true,\r\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n\r\n    },\r\n    labelLine: {\r\n      show: true,\r\n      length: 20,\r\n      lineStyle: {\r\n        // color: 各异,\r\n        width: 1,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    itemStyle: {\r\n      // color: 各异,\r\n      borderColor: '#fff',\r\n      borderWidth: 1\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      }\r\n    }\r\n  }\r\n});\r\nvar _default = FunnelSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ChartView = require(\"../../view/Chart\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Piece of pie including Sector, Label, LabelLine\r\n * @constructor\r\n * @extends {module:zrender/graphic/Group}\r\n */\r\nfunction FunnelPiece(data, idx) {\r\n  graphic.Group.call(this);\r\n  var polygon = new graphic.Polygon();\r\n  var labelLine = new graphic.Polyline();\r\n  var text = new graphic.Text();\r\n  this.add(polygon);\r\n  this.add(labelLine);\r\n  this.add(text);\r\n\r\n  this.highDownOnUpdate = function (fromState, toState) {\r\n    if (toState === 'emphasis') {\r\n      labelLine.ignore = labelLine.hoverIgnore;\r\n      text.ignore = text.hoverIgnore;\r\n    } else {\r\n      labelLine.ignore = labelLine.normalIgnore;\r\n      text.ignore = text.normalIgnore;\r\n    }\r\n  };\r\n\r\n  this.updateData(data, idx, true);\r\n}\r\n\r\nvar funnelPieceProto = FunnelPiece.prototype;\r\nvar opacityAccessPath = ['itemStyle', 'opacity'];\r\n\r\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\r\n  var polygon = this.childAt(0);\r\n  var seriesModel = data.hostModel;\r\n  var itemModel = data.getItemModel(idx);\r\n  var layout = data.getItemLayout(idx);\r\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\r\n  opacity = opacity == null ? 1 : opacity; // Reset style\r\n\r\n  polygon.useStyle({});\r\n\r\n  if (firstCreate) {\r\n    polygon.setShape({\r\n      points: layout.points\r\n    });\r\n    polygon.setStyle({\r\n      opacity: 0\r\n    });\r\n    graphic.initProps(polygon, {\r\n      style: {\r\n        opacity: opacity\r\n      }\r\n    }, seriesModel, idx);\r\n  } else {\r\n    graphic.updateProps(polygon, {\r\n      style: {\r\n        opacity: opacity\r\n      },\r\n      shape: {\r\n        points: layout.points\r\n      }\r\n    }, seriesModel, idx);\r\n  } // Update common style\r\n\r\n\r\n  var itemStyleModel = itemModel.getModel('itemStyle');\r\n  var visualColor = data.getItemVisual(idx, 'color');\r\n  polygon.setStyle(zrUtil.defaults({\r\n    lineJoin: 'round',\r\n    fill: visualColor\r\n  }, itemStyleModel.getItemStyle(['opacity'])));\r\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\r\n\r\n  this._updateLabel(data, idx);\r\n\r\n  graphic.setHoverStyle(this);\r\n};\r\n\r\nfunnelPieceProto._updateLabel = function (data, idx) {\r\n  var labelLine = this.childAt(1);\r\n  var labelText = this.childAt(2);\r\n  var seriesModel = data.hostModel;\r\n  var itemModel = data.getItemModel(idx);\r\n  var layout = data.getItemLayout(idx);\r\n  var labelLayout = layout.label;\r\n  var visualColor = data.getItemVisual(idx, 'color');\r\n  graphic.updateProps(labelLine, {\r\n    shape: {\r\n      points: labelLayout.linePoints || labelLayout.linePoints\r\n    }\r\n  }, seriesModel, idx);\r\n  graphic.updateProps(labelText, {\r\n    style: {\r\n      x: labelLayout.x,\r\n      y: labelLayout.y\r\n    }\r\n  }, seriesModel, idx);\r\n  labelText.attr({\r\n    rotation: labelLayout.rotation,\r\n    origin: [labelLayout.x, labelLayout.y],\r\n    z2: 10\r\n  });\r\n  var labelModel = itemModel.getModel('label');\r\n  var labelHoverModel = itemModel.getModel('emphasis.label');\r\n  var labelLineModel = itemModel.getModel('labelLine');\r\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\r\n  var visualColor = data.getItemVisual(idx, 'color');\r\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\r\n    labelFetcher: data.hostModel,\r\n    labelDataIndex: idx,\r\n    defaultText: data.getName(idx),\r\n    autoColor: visualColor,\r\n    useInsideStyle: !!labelLayout.inside\r\n  }, {\r\n    textAlign: labelLayout.textAlign,\r\n    textVerticalAlign: labelLayout.verticalAlign\r\n  });\r\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\r\n  labelText.hoverIgnore = !labelHoverModel.get('show');\r\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\r\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\r\n\r\n  labelLine.setStyle({\r\n    stroke: visualColor\r\n  });\r\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\r\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\r\n};\r\n\r\nzrUtil.inherits(FunnelPiece, graphic.Group);\r\nvar FunnelView = ChartView.extend({\r\n  type: 'funnel',\r\n  render: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var group = this.group;\r\n    data.diff(oldData).add(function (idx) {\r\n      var funnelPiece = new FunnelPiece(data, idx);\r\n      data.setItemGraphicEl(idx, funnelPiece);\r\n      group.add(funnelPiece);\r\n    }).update(function (newIdx, oldIdx) {\r\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\r\n      piePiece.updateData(data, newIdx);\r\n      group.add(piePiece);\r\n      data.setItemGraphicEl(newIdx, piePiece);\r\n    }).remove(function (idx) {\r\n      var piePiece = oldData.getItemGraphicEl(idx);\r\n      group.remove(piePiece);\r\n    }).execute();\r\n    this._data = data;\r\n  },\r\n  remove: function () {\r\n    this.group.removeAll();\r\n    this._data = null;\r\n  },\r\n  dispose: function () {}\r\n});\r\nvar _default = FunnelView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\nvar linearMap = _number.linearMap;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction getViewRect(seriesModel, api) {\r\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n\r\nfunction getSortedIndices(data, sort) {\r\n  var valueDim = data.mapDimension('value');\r\n  var valueArr = data.mapArray(valueDim, function (val) {\r\n    return val;\r\n  });\r\n  var indices = [];\r\n  var isAscending = sort === 'ascending';\r\n\r\n  for (var i = 0, len = data.count(); i < len; i++) {\r\n    indices[i] = i;\r\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\r\n\r\n\r\n  if (typeof sort === 'function') {\r\n    indices.sort(sort);\r\n  } else if (sort !== 'none') {\r\n    indices.sort(function (a, b) {\r\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\r\n    });\r\n  }\r\n\r\n  return indices;\r\n}\r\n\r\nfunction labelLayout(data) {\r\n  data.each(function (idx) {\r\n    var itemModel = data.getItemModel(idx);\r\n    var labelModel = itemModel.getModel('label');\r\n    var labelPosition = labelModel.get('position');\r\n    var orient = itemModel.get('orient');\r\n    var labelLineModel = itemModel.getModel('labelLine');\r\n    var layout = data.getItemLayout(idx);\r\n    var points = layout.points;\r\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center' || labelPosition === 'insideLeft' || labelPosition === 'insideRight';\r\n    var textAlign;\r\n    var textX;\r\n    var textY;\r\n    var linePoints;\r\n\r\n    if (isLabelInside) {\r\n      if (labelPosition === 'insideLeft') {\r\n        textX = (points[0][0] + points[3][0]) / 2 + 5;\r\n        textY = (points[0][1] + points[3][1]) / 2;\r\n        textAlign = 'left';\r\n      } else if (labelPosition === 'insideRight') {\r\n        textX = (points[1][0] + points[2][0]) / 2 - 5;\r\n        textY = (points[1][1] + points[2][1]) / 2;\r\n        textAlign = 'right';\r\n      } else {\r\n        textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\r\n        textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\r\n        textAlign = 'center';\r\n      }\r\n\r\n      linePoints = [[textX, textY], [textX, textY]];\r\n    } else {\r\n      var x1;\r\n      var y1;\r\n      var x2;\r\n      var y2;\r\n      var labelLineLen = labelLineModel.get('length');\r\n\r\n      if (labelPosition === 'left') {\r\n        // Left side\r\n        x1 = (points[3][0] + points[0][0]) / 2;\r\n        y1 = (points[3][1] + points[0][1]) / 2;\r\n        x2 = x1 - labelLineLen;\r\n        textX = x2 - 5;\r\n        textAlign = 'right';\r\n      } else if (labelPosition === 'right') {\r\n        // Right side\r\n        x1 = (points[1][0] + points[2][0]) / 2;\r\n        y1 = (points[1][1] + points[2][1]) / 2;\r\n        x2 = x1 + labelLineLen;\r\n        textX = x2 + 5;\r\n        textAlign = 'left';\r\n      } else if (labelPosition === 'top') {\r\n        // Top side\r\n        x1 = (points[3][0] + points[0][0]) / 2;\r\n        y1 = (points[3][1] + points[0][1]) / 2;\r\n        y2 = y1 - labelLineLen;\r\n        textY = y2 - 5;\r\n        textAlign = 'center';\r\n      } else if (labelPosition === 'bottom') {\r\n        // Bottom side\r\n        x1 = (points[1][0] + points[2][0]) / 2;\r\n        y1 = (points[1][1] + points[2][1]) / 2;\r\n        y2 = y1 + labelLineLen;\r\n        textY = y2 + 5;\r\n        textAlign = 'center';\r\n      } else if (labelPosition === 'rightTop') {\r\n        // RightTop side\r\n        x1 = orient === 'horizontal' ? points[3][0] : points[1][0];\r\n        y1 = orient === 'horizontal' ? points[3][1] : points[1][1];\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 - labelLineLen;\r\n          textY = y2 - 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 + labelLineLen;\r\n          textX = x2 + 5;\r\n          textAlign = 'top';\r\n        }\r\n      } else if (labelPosition === 'rightBottom') {\r\n        // RightBottom side\r\n        x1 = points[2][0];\r\n        y1 = points[2][1];\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 + labelLineLen;\r\n          textY = y2 + 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 + labelLineLen;\r\n          textX = x2 + 5;\r\n          textAlign = 'bottom';\r\n        }\r\n      } else if (labelPosition === 'leftTop') {\r\n        // LeftTop side\r\n        x1 = points[0][0];\r\n        y1 = orient === 'horizontal' ? points[0][1] : points[1][1];\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 - labelLineLen;\r\n          textY = y2 - 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 - labelLineLen;\r\n          textX = x2 - 5;\r\n          textAlign = 'right';\r\n        }\r\n      } else if (labelPosition === 'leftBottom') {\r\n        // LeftBottom side\r\n        x1 = orient === 'horizontal' ? points[1][0] : points[3][0];\r\n        y1 = orient === 'horizontal' ? points[1][1] : points[2][1];\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 + labelLineLen;\r\n          textY = y2 + 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 - labelLineLen;\r\n          textX = x2 - 5;\r\n          textAlign = 'right';\r\n        }\r\n      } else {\r\n        // Right side or Bottom side\r\n        x1 = (points[1][0] + points[2][0]) / 2;\r\n        y1 = (points[1][1] + points[2][1]) / 2;\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 + labelLineLen;\r\n          textY = y2 + 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 + labelLineLen;\r\n          textX = x2 + 5;\r\n          textAlign = 'left';\r\n        }\r\n      }\r\n\r\n      if (orient === 'horizontal') {\r\n        x2 = x1;\r\n        textX = x2;\r\n      } else {\r\n        y2 = y1;\r\n        textY = y2;\r\n      }\r\n\r\n      linePoints = [[x1, y1], [x2, y2]];\r\n    }\r\n\r\n    layout.label = {\r\n      linePoints: linePoints,\r\n      x: textX,\r\n      y: textY,\r\n      verticalAlign: 'middle',\r\n      textAlign: textAlign,\r\n      inside: isLabelInside\r\n    };\r\n  });\r\n}\r\n\r\nfunction _default(ecModel, api, payload) {\r\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var valueDim = data.mapDimension('value');\r\n    var sort = seriesModel.get('sort');\r\n    var viewRect = getViewRect(seriesModel, api);\r\n    var indices = getSortedIndices(data, sort);\r\n    var orient = seriesModel.get('orient');\r\n    var viewWidth = viewRect.width;\r\n    var viewHeight = viewRect.height;\r\n    var x = viewRect.x;\r\n    var y = viewRect.y;\r\n    var sizeExtent = orient === 'horizontal' ? [parsePercent(seriesModel.get('minSize'), viewHeight), parsePercent(seriesModel.get('maxSize'), viewHeight)] : [parsePercent(seriesModel.get('minSize'), viewWidth), parsePercent(seriesModel.get('maxSize'), viewWidth)];\r\n    var dataExtent = data.getDataExtent(valueDim);\r\n    var min = seriesModel.get('min');\r\n    var max = seriesModel.get('max');\r\n\r\n    if (min == null) {\r\n      min = Math.min(dataExtent[0], 0);\r\n    }\r\n\r\n    if (max == null) {\r\n      max = dataExtent[1];\r\n    }\r\n\r\n    var funnelAlign = seriesModel.get('funnelAlign');\r\n    var gap = seriesModel.get('gap');\r\n    var viewSize = orient === 'horizontal' ? viewWidth : viewHeight;\r\n    var itemSize = (viewSize - gap * (data.count() - 1)) / data.count();\r\n\r\n    var getLinePoints = function (idx, offset) {\r\n      // End point index is data.count() and we assign it 0\r\n      if (orient === 'horizontal') {\r\n        var val = data.get(valueDim, idx) || 0;\r\n        var itemHeight = linearMap(val, [min, max], sizeExtent, true);\r\n        var y0;\r\n\r\n        switch (funnelAlign) {\r\n          case 'top':\r\n            y0 = y;\r\n            break;\r\n\r\n          case 'center':\r\n            y0 = y + (viewHeight - itemHeight) / 2;\r\n            break;\r\n\r\n          case 'bottom':\r\n            y0 = y + (viewHeight - itemHeight);\r\n            break;\r\n        }\r\n\r\n        return [[offset, y0], [offset, y0 + itemHeight]];\r\n      }\r\n\r\n      var val = data.get(valueDim, idx) || 0;\r\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\r\n      var x0;\r\n\r\n      switch (funnelAlign) {\r\n        case 'left':\r\n          x0 = x;\r\n          break;\r\n\r\n        case 'center':\r\n          x0 = x + (viewWidth - itemWidth) / 2;\r\n          break;\r\n\r\n        case 'right':\r\n          x0 = x + viewWidth - itemWidth;\r\n          break;\r\n      }\r\n\r\n      return [[x0, offset], [x0 + itemWidth, offset]];\r\n    };\r\n\r\n    if (sort === 'ascending') {\r\n      // From bottom to top\r\n      itemSize = -itemSize;\r\n      gap = -gap;\r\n\r\n      if (orient === 'horizontal') {\r\n        x += viewWidth;\r\n      } else {\r\n        y += viewHeight;\r\n      }\r\n\r\n      indices = indices.reverse();\r\n    }\r\n\r\n    for (var i = 0; i < indices.length; i++) {\r\n      var idx = indices[i];\r\n      var nextIdx = indices[i + 1];\r\n      var itemModel = data.getItemModel(idx);\r\n\r\n      if (orient === 'horizontal') {\r\n        var width = itemModel.get('itemStyle.width');\r\n\r\n        if (width == null) {\r\n          width = itemSize;\r\n        } else {\r\n          width = parsePercent(width, viewWidth);\r\n\r\n          if (sort === 'ascending') {\r\n            width = -width;\r\n          }\r\n        }\r\n\r\n        var start = getLinePoints(idx, x);\r\n        var end = getLinePoints(nextIdx, x + width);\r\n        x += width + gap;\r\n        data.setItemLayout(idx, {\r\n          points: start.concat(end.slice().reverse())\r\n        });\r\n      } else {\r\n        var height = itemModel.get('itemStyle.height');\r\n\r\n        if (height == null) {\r\n          height = itemSize;\r\n        } else {\r\n          height = parsePercent(height, viewHeight);\r\n\r\n          if (sort === 'ascending') {\r\n            height = -height;\r\n          }\r\n        }\r\n\r\n        var start = orient === 'horizontal' ? getLinePoints(idx, x) : getLinePoints(idx, y);\r\n        var end = orient === 'horizontal' ? getLinePoints(nextIdx, x + width) : getLinePoints(nextIdx, y + height);\r\n        y += height + gap;\r\n        data.setItemLayout(idx, {\r\n          points: start.concat(end.slice().reverse())\r\n        });\r\n      }\r\n    }\r\n\r\n    labelLayout(data);\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./gauge/GaugeSeries\");\r\n\r\nrequire(\"./gauge/GaugeView\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar createListSimply = require(\"../helper/createListSimply\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar GaugeSeries = SeriesModel.extend({\r\n  type: 'series.gauge',\r\n  getInitialData: function (option, ecModel) {\r\n    return createListSimply(this, ['value']);\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    // 默认全局居中\r\n    center: ['50%', '50%'],\r\n    legendHoverLink: true,\r\n    radius: '75%',\r\n    startAngle: 225,\r\n    endAngle: -45,\r\n    clockwise: true,\r\n    // 最小值\r\n    min: 0,\r\n    // 最大值\r\n    max: 100,\r\n    // 分割段数，默认为10\r\n    splitNumber: 10,\r\n    // 坐标轴线\r\n    axisLine: {\r\n      // 默认显示，属性show控制显示与否\r\n      show: true,\r\n      lineStyle: {\r\n        // 属性lineStyle控制线条样式\r\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\r\n        width: 30\r\n      }\r\n    },\r\n    // 分隔线\r\n    splitLine: {\r\n      // 默认显示，属性show控制显示与否\r\n      show: true,\r\n      // 属性length控制线长\r\n      length: 30,\r\n      // 属性lineStyle（详见lineStyle）控制线条样式\r\n      lineStyle: {\r\n        color: '#eee',\r\n        width: 2,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    // 坐标轴小标记\r\n    axisTick: {\r\n      // 属性show控制显示与否，默认不显示\r\n      show: true,\r\n      // 每份split细分多少段\r\n      splitNumber: 5,\r\n      // 属性length控制线长\r\n      length: 8,\r\n      // 属性lineStyle控制线条样式\r\n      lineStyle: {\r\n        color: '#eee',\r\n        width: 1,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    axisLabel: {\r\n      show: true,\r\n      distance: 5,\r\n      // formatter: null,\r\n      color: 'auto'\r\n    },\r\n    pointer: {\r\n      show: true,\r\n      length: '80%',\r\n      width: 8\r\n    },\r\n    itemStyle: {\r\n      color: 'auto'\r\n    },\r\n    title: {\r\n      show: true,\r\n      // x, y，单位px\r\n      offsetCenter: [0, '-40%'],\r\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n      color: '#333',\r\n      fontSize: 15\r\n    },\r\n    detail: {\r\n      show: true,\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      borderWidth: 0,\r\n      borderColor: '#ccc',\r\n      width: 100,\r\n      height: null,\r\n      // self-adaption\r\n      padding: [5, 10],\r\n      // x, y，单位px\r\n      offsetCenter: [0, '40%'],\r\n      // formatter: null,\r\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n      color: 'auto',\r\n      fontSize: 30\r\n    }\r\n  }\r\n});\r\nvar _default = GaugeSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar PointerPath = require(\"./PointerPath\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar ChartView = require(\"../../view/Chart\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\nvar round = _number.round;\r\nvar linearMap = _number.linearMap;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction parsePosition(seriesModel, api) {\r\n  var center = seriesModel.get('center');\r\n  var width = api.getWidth();\r\n  var height = api.getHeight();\r\n  var size = Math.min(width, height);\r\n  var cx = parsePercent(center[0], api.getWidth());\r\n  var cy = parsePercent(center[1], api.getHeight());\r\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\r\n  return {\r\n    cx: cx,\r\n    cy: cy,\r\n    r: r\r\n  };\r\n}\r\n\r\nfunction formatLabel(label, labelFormatter) {\r\n  if (labelFormatter) {\r\n    if (typeof labelFormatter === 'string') {\r\n      label = labelFormatter.replace('{value}', label != null ? label : '');\r\n    } else if (typeof labelFormatter === 'function') {\r\n      label = labelFormatter(label);\r\n    }\r\n  }\r\n\r\n  return label;\r\n}\r\n\r\nvar PI2 = Math.PI * 2;\r\nvar GaugeView = ChartView.extend({\r\n  type: 'gauge',\r\n  render: function (seriesModel, ecModel, api) {\r\n    this.group.removeAll();\r\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\r\n    var posInfo = parsePosition(seriesModel, api);\r\n\r\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\r\n  },\r\n  dispose: function () {},\r\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\r\n    var group = this.group;\r\n    var axisLineModel = seriesModel.getModel('axisLine');\r\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\r\n    var clockwise = seriesModel.get('clockwise');\r\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\r\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\r\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\r\n    var prevEndAngle = startAngle;\r\n    var axisLineWidth = lineStyleModel.get('width');\r\n    var showAxis = axisLineModel.get('show');\r\n\r\n    for (var i = 0; showAxis && i < colorList.length; i++) {\r\n      // Clamp\r\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\r\n      var endAngle = startAngle + angleRangeSpan * percent;\r\n      var sector = new graphic.Sector({\r\n        shape: {\r\n          startAngle: prevEndAngle,\r\n          endAngle: endAngle,\r\n          cx: posInfo.cx,\r\n          cy: posInfo.cy,\r\n          clockwise: clockwise,\r\n          r0: posInfo.r - axisLineWidth,\r\n          r: posInfo.r\r\n        },\r\n        silent: true\r\n      });\r\n      sector.setStyle({\r\n        fill: colorList[i][1]\r\n      });\r\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\r\n      // so the properties for stroking are useless\r\n      ['color', 'borderWidth', 'borderColor']));\r\n      group.add(sector);\r\n      prevEndAngle = endAngle;\r\n    }\r\n\r\n    var getColor = function (percent) {\r\n      // Less than 0\r\n      if (percent <= 0) {\r\n        return colorList[0][1];\r\n      }\r\n\r\n      for (var i = 0; i < colorList.length; i++) {\r\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\r\n          return colorList[i][1];\r\n        }\r\n      } // More than 1\r\n\r\n\r\n      return colorList[i - 1][1];\r\n    };\r\n\r\n    if (!clockwise) {\r\n      var tmp = startAngle;\r\n      startAngle = endAngle;\r\n      endAngle = tmp;\r\n    }\r\n\r\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\r\n\r\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\r\n\r\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\r\n\r\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\r\n  },\r\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\r\n    var group = this.group;\r\n    var cx = posInfo.cx;\r\n    var cy = posInfo.cy;\r\n    var r = posInfo.r;\r\n    var minVal = +seriesModel.get('min');\r\n    var maxVal = +seriesModel.get('max');\r\n    var splitLineModel = seriesModel.getModel('splitLine');\r\n    var tickModel = seriesModel.getModel('axisTick');\r\n    var labelModel = seriesModel.getModel('axisLabel');\r\n    var splitNumber = seriesModel.get('splitNumber');\r\n    var subSplitNumber = tickModel.get('splitNumber');\r\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\r\n    var tickLen = parsePercent(tickModel.get('length'), r);\r\n    var angle = startAngle;\r\n    var step = (endAngle - startAngle) / splitNumber;\r\n    var subStep = step / subSplitNumber;\r\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\r\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\r\n\r\n    for (var i = 0; i <= splitNumber; i++) {\r\n      var unitX = Math.cos(angle);\r\n      var unitY = Math.sin(angle); // Split line\r\n\r\n      if (splitLineModel.get('show')) {\r\n        var splitLine = new graphic.Line({\r\n          shape: {\r\n            x1: unitX * r + cx,\r\n            y1: unitY * r + cy,\r\n            x2: unitX * (r - splitLineLen) + cx,\r\n            y2: unitY * (r - splitLineLen) + cy\r\n          },\r\n          style: splitLineStyle,\r\n          silent: true\r\n        });\r\n\r\n        if (splitLineStyle.stroke === 'auto') {\r\n          splitLine.setStyle({\r\n            stroke: getColor(i / splitNumber)\r\n          });\r\n        }\r\n\r\n        group.add(splitLine);\r\n      } // Label\r\n\r\n\r\n      if (labelModel.get('show')) {\r\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\r\n        var distance = labelModel.get('distance');\r\n        var autoColor = getColor(i / splitNumber);\r\n        group.add(new graphic.Text({\r\n          style: graphic.setTextStyle({}, labelModel, {\r\n            text: label,\r\n            x: unitX * (r - splitLineLen - distance) + cx,\r\n            y: unitY * (r - splitLineLen - distance) + cy,\r\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\r\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\r\n          }, {\r\n            autoColor: autoColor\r\n          }),\r\n          silent: true\r\n        }));\r\n      } // Axis tick\r\n\r\n\r\n      if (tickModel.get('show') && i !== splitNumber) {\r\n        for (var j = 0; j <= subSplitNumber; j++) {\r\n          var unitX = Math.cos(angle);\r\n          var unitY = Math.sin(angle);\r\n          var tickLine = new graphic.Line({\r\n            shape: {\r\n              x1: unitX * r + cx,\r\n              y1: unitY * r + cy,\r\n              x2: unitX * (r - tickLen) + cx,\r\n              y2: unitY * (r - tickLen) + cy\r\n            },\r\n            silent: true,\r\n            style: tickLineStyle\r\n          });\r\n\r\n          if (tickLineStyle.stroke === 'auto') {\r\n            tickLine.setStyle({\r\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\r\n            });\r\n          }\r\n\r\n          group.add(tickLine);\r\n          angle += subStep;\r\n        }\r\n\r\n        angle -= subStep;\r\n      } else {\r\n        angle += step;\r\n      }\r\n    }\r\n  },\r\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\r\n    var group = this.group;\r\n    var oldData = this._data;\r\n\r\n    if (!seriesModel.get('pointer.show')) {\r\n      // Remove old element\r\n      oldData && oldData.eachItemGraphicEl(function (el) {\r\n        group.remove(el);\r\n      });\r\n      return;\r\n    }\r\n\r\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\r\n    var angleExtent = [startAngle, endAngle];\r\n    var data = seriesModel.getData();\r\n    var valueDim = data.mapDimension('value');\r\n    data.diff(oldData).add(function (idx) {\r\n      var pointer = new PointerPath({\r\n        shape: {\r\n          angle: startAngle\r\n        }\r\n      });\r\n      graphic.initProps(pointer, {\r\n        shape: {\r\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\r\n        }\r\n      }, seriesModel);\r\n      group.add(pointer);\r\n      data.setItemGraphicEl(idx, pointer);\r\n    }).update(function (newIdx, oldIdx) {\r\n      var pointer = oldData.getItemGraphicEl(oldIdx);\r\n      graphic.updateProps(pointer, {\r\n        shape: {\r\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\r\n        }\r\n      }, seriesModel);\r\n      group.add(pointer);\r\n      data.setItemGraphicEl(newIdx, pointer);\r\n    }).remove(function (idx) {\r\n      var pointer = oldData.getItemGraphicEl(idx);\r\n      group.remove(pointer);\r\n    }).execute();\r\n    data.eachItemGraphicEl(function (pointer, idx) {\r\n      var itemModel = data.getItemModel(idx);\r\n      var pointerModel = itemModel.getModel('pointer');\r\n      pointer.setShape({\r\n        x: posInfo.cx,\r\n        y: posInfo.cy,\r\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\r\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\r\n      });\r\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\r\n\r\n      if (pointer.style.fill === 'auto') {\r\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\r\n      }\r\n\r\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\r\n    });\r\n    this._data = data;\r\n  },\r\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\r\n    var data = seriesModel.getData();\r\n    var valueDim = data.mapDimension('value');\r\n    var titleModel = seriesModel.getModel('title');\r\n\r\n    if (titleModel.get('show')) {\r\n      var offsetCenter = titleModel.get('offsetCenter');\r\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\r\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\r\n      var minVal = +seriesModel.get('min');\r\n      var maxVal = +seriesModel.get('max');\r\n      var value = seriesModel.getData().get(valueDim, 0);\r\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\r\n      this.group.add(new graphic.Text({\r\n        silent: true,\r\n        style: graphic.setTextStyle({}, titleModel, {\r\n          x: x,\r\n          y: y,\r\n          // FIXME First data name ?\r\n          text: data.getName(0),\r\n          textAlign: 'center',\r\n          textVerticalAlign: 'middle'\r\n        }, {\r\n          autoColor: autoColor,\r\n          forceRich: true\r\n        })\r\n      }));\r\n    }\r\n  },\r\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\r\n    var detailModel = seriesModel.getModel('detail');\r\n    var minVal = +seriesModel.get('min');\r\n    var maxVal = +seriesModel.get('max');\r\n\r\n    if (detailModel.get('show')) {\r\n      var offsetCenter = detailModel.get('offsetCenter');\r\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\r\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\r\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\r\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\r\n      var data = seriesModel.getData();\r\n      var value = data.get(data.mapDimension('value'), 0);\r\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\r\n      this.group.add(new graphic.Text({\r\n        silent: true,\r\n        style: graphic.setTextStyle({}, detailModel, {\r\n          x: x,\r\n          y: y,\r\n          text: formatLabel( // FIXME First data name ?\r\n          value, detailModel.get('formatter')),\r\n          textWidth: isNaN(width) ? null : width,\r\n          textHeight: isNaN(height) ? null : height,\r\n          textAlign: 'center',\r\n          textVerticalAlign: 'middle'\r\n        }, {\r\n          autoColor: autoColor,\r\n          forceRich: true\r\n        })\r\n      }));\r\n    }\r\n  }\r\n});\r\nvar _default = GaugeView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Path = require(\"zrender/lib/graphic/Path\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = Path.extend({\r\n  type: 'echartsGaugePointer',\r\n  shape: {\r\n    angle: 0,\r\n    width: 10,\r\n    r: 10,\r\n    x: 0,\r\n    y: 0\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var mathCos = Math.cos;\r\n    var mathSin = Math.sin;\r\n    var r = shape.r;\r\n    var width = shape.width;\r\n    var angle = shape.angle;\r\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\r\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\r\n    angle = shape.angle - Math.PI / 2;\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\r\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\r\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\r\n    ctx.lineTo(x, y);\r\n    return;\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./graph/GraphSeries\");\r\n\r\nrequire(\"./graph/GraphView\");\r\n\r\nrequire(\"./graph/graphAction\");\r\n\r\nvar categoryFilter = require(\"./graph/categoryFilter\");\r\n\r\nvar visualSymbol = require(\"../visual/symbol\");\r\n\r\nvar categoryVisual = require(\"./graph/categoryVisual\");\r\n\r\nvar edgeVisual = require(\"./graph/edgeVisual\");\r\n\r\nvar simpleLayout = require(\"./graph/simpleLayout\");\r\n\r\nvar circularLayout = require(\"./graph/circularLayout\");\r\n\r\nvar forceLayout = require(\"./graph/forceLayout\");\r\n\r\nvar createView = require(\"./graph/createView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerProcessor(categoryFilter);\r\necharts.registerVisual(visualSymbol('graph', 'circle', null));\r\necharts.registerVisual(categoryVisual);\r\necharts.registerVisual(edgeVisual);\r\necharts.registerLayout(simpleLayout);\r\necharts.registerLayout(echarts.PRIORITY.VISUAL.POST_CHART_LAYOUT, circularLayout);\r\necharts.registerLayout(forceLayout); // Graph view coordinate system\r\n\r\necharts.registerCoordinateSystem('graphView', {\r\n  create: createView\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar defaultEmphasis = _model.defaultEmphasis;\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\n\r\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\r\n\r\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\r\n\r\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper\");\r\n\r\nvar initCurvenessList = _multipleGraphEdgeHelper.initCurvenessList;\r\nvar createEdgeMapForCurveness = _multipleGraphEdgeHelper.createEdgeMapForCurveness;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar GraphSeries = echarts.extendSeriesModel({\r\n  type: 'series.graph',\r\n  init: function (option) {\r\n    GraphSeries.superApply(this, 'init', arguments);\r\n    var self = this;\r\n\r\n    function getCategoriesData() {\r\n      return self._categoriesData;\r\n    } // Provide data for legend select\r\n\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(getCategoriesData, getCategoriesData);\r\n    this.fillDataTextStyle(option.edges || option.links);\r\n\r\n    this._updateCategoriesData();\r\n  },\r\n  mergeOption: function (option) {\r\n    GraphSeries.superApply(this, 'mergeOption', arguments);\r\n    this.fillDataTextStyle(option.edges || option.links);\r\n\r\n    this._updateCategoriesData();\r\n  },\r\n  mergeDefaultAndTheme: function (option) {\r\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\r\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\r\n  },\r\n  getInitialData: function (option, ecModel) {\r\n    var edges = option.edges || option.links || [];\r\n    var nodes = option.data || option.nodes || [];\r\n    var self = this;\r\n\r\n    if (nodes && edges) {\r\n      // auto curveness\r\n      initCurvenessList(this);\r\n      var graph = createGraphFromNodeEdge(nodes, edges, this, true, beforeLink);\r\n      zrUtil.each(graph.edges, function (edge) {\r\n        createEdgeMapForCurveness(edge.node1, edge.node2, this, edge.dataIndex);\r\n      }, this);\r\n      return graph.data;\r\n    }\r\n\r\n    function beforeLink(nodeData, edgeData) {\r\n      // Overwrite nodeData.getItemModel to\r\n      nodeData.wrapMethod('getItemModel', function (model) {\r\n        var categoriesModels = self._categoriesModels;\r\n        var categoryIdx = model.getShallow('category');\r\n        var categoryModel = categoriesModels[categoryIdx];\r\n\r\n        if (categoryModel) {\r\n          categoryModel.parentModel = model.parentModel;\r\n          model.parentModel = categoryModel;\r\n        }\r\n\r\n        return model;\r\n      });\r\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\r\n\r\n      var fakeSeriesModel = new Model({\r\n        label: edgeLabelModel.option\r\n      }, edgeLabelModel.parentModel, ecModel);\r\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\r\n      var emphasisFakeSeriesModel = new Model({\r\n        emphasis: {\r\n          label: emphasisEdgeLabelModel.option\r\n        }\r\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\r\n      edgeData.wrapMethod('getItemModel', function (model) {\r\n        model.customizeGetParent(edgeGetParent);\r\n        return model;\r\n      });\r\n\r\n      function edgeGetParent(path) {\r\n        path = this.parsePath(path);\r\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @return {module:echarts/data/Graph}\r\n   */\r\n  getGraph: function () {\r\n    return this.getData().graph;\r\n  },\r\n\r\n  /**\r\n   * @return {module:echarts/data/List}\r\n   */\r\n  getEdgeData: function () {\r\n    return this.getGraph().edgeData;\r\n  },\r\n\r\n  /**\r\n   * @return {module:echarts/data/List}\r\n   */\r\n  getCategoriesData: function () {\r\n    return this._categoriesData;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\r\n    if (dataType === 'edge') {\r\n      var nodeData = this.getData();\r\n      var params = this.getDataParams(dataIndex, dataType);\r\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\r\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\r\n      var targetName = nodeData.getName(edge.node2.dataIndex);\r\n      var html = [];\r\n      sourceName != null && html.push(sourceName);\r\n      targetName != null && html.push(targetName);\r\n      html = encodeHTML(html.join(' > '));\r\n\r\n      if (params.value) {\r\n        html += ' : ' + encodeHTML(params.value);\r\n      }\r\n\r\n      return html;\r\n    } else {\r\n      // dataType === 'node' or empty\r\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\r\n    }\r\n  },\r\n  _updateCategoriesData: function () {\r\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\r\n      // Data must has value\r\n      return category.value != null ? category : zrUtil.extend({\r\n        value: 0\r\n      }, category);\r\n    });\r\n    var categoriesData = new List(['value'], this);\r\n    categoriesData.initData(categories);\r\n    this._categoriesData = categoriesData;\r\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\r\n      return categoriesData.getItemModel(idx, true);\r\n    });\r\n  },\r\n  setZoom: function (zoom) {\r\n    this.option.zoom = zoom;\r\n  },\r\n  setCenter: function (center) {\r\n    this.option.center = center;\r\n  },\r\n  isAnimationEnabled: function () {\r\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\r\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'view',\r\n    // Default option for all coordinate systems\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // polarIndex: 0,\r\n    // geoIndex: 0,\r\n    legendHoverLink: true,\r\n    hoverAnimation: true,\r\n    layout: null,\r\n    focusNodeAdjacency: false,\r\n    // Configuration of circular layout\r\n    circular: {\r\n      rotateLabel: false\r\n    },\r\n    // Configuration of force directed layout\r\n    force: {\r\n      initLayout: null,\r\n      // Node repulsion. Can be an array to represent range.\r\n      repulsion: [0, 50],\r\n      gravity: 0.1,\r\n      // Initial friction\r\n      friction: 0.6,\r\n      // Edge length. Can be an array to represent range.\r\n      edgeLength: 30,\r\n      layoutAnimation: true\r\n    },\r\n    left: 'center',\r\n    top: 'center',\r\n    // right: null,\r\n    // bottom: null,\r\n    // width: '80%',\r\n    // height: '80%',\r\n    symbol: 'circle',\r\n    symbolSize: 10,\r\n    edgeSymbol: ['none', 'none'],\r\n    edgeSymbolSize: 10,\r\n    edgeLabel: {\r\n      position: 'middle',\r\n      distance: 5\r\n    },\r\n    draggable: false,\r\n    roam: false,\r\n    // Default on center of graph\r\n    center: null,\r\n    zoom: 1,\r\n    // Symbol size scale ratio in roam\r\n    nodeScaleRatio: 0.6,\r\n    // cursor: null,\r\n    // categories: [],\r\n    // data: []\r\n    // Or\r\n    // nodes: []\r\n    //\r\n    // links: []\r\n    // Or\r\n    // edges: []\r\n    label: {\r\n      show: false,\r\n      formatter: '{b}'\r\n    },\r\n    itemStyle: {},\r\n    lineStyle: {\r\n      color: '#aaa',\r\n      width: 1,\r\n      opacity: 0.5\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      }\r\n    }\r\n  }\r\n});\r\nvar _default = GraphSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\r\n\r\nvar LineDraw = require(\"../helper/LineDraw\");\r\n\r\nvar RoamController = require(\"../../component/helper/RoamController\");\r\n\r\nvar roamHelper = require(\"../../component/helper/roamHelper\");\r\n\r\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\r\n\r\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar adjustEdge = require(\"./adjustEdge\");\r\n\r\nvar _graphHelper = require(\"./graphHelper\");\r\n\r\nvar getNodeGlobalScale = _graphHelper.getNodeGlobalScale;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar FOCUS_ADJACENCY = '__focusNodeAdjacency';\r\nvar UNFOCUS_ADJACENCY = '__unfocusNodeAdjacency';\r\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\r\nvar lineOpacityPath = ['lineStyle', 'opacity'];\r\n\r\nfunction getItemOpacity(item, opacityPath) {\r\n  var opacity = item.getVisual('opacity');\r\n  return opacity != null ? opacity : item.getModel().get(opacityPath);\r\n}\r\n\r\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\r\n  var el = item.getGraphicEl();\r\n  var opacity = getItemOpacity(item, opacityPath);\r\n\r\n  if (opacityRatio != null) {\r\n    opacity == null && (opacity = 1);\r\n    opacity *= opacityRatio;\r\n  }\r\n\r\n  el.downplay && el.downplay();\r\n  el.traverse(function (child) {\r\n    if (!child.isGroup) {\r\n      var opct = child.lineLabelOriginalOpacity;\r\n\r\n      if (opct == null || opacityRatio != null) {\r\n        opct = opacity;\r\n      }\r\n\r\n      child.setStyle('opacity', opct);\r\n    }\r\n  });\r\n}\r\n\r\nfunction fadeInItem(item, opacityPath) {\r\n  var opacity = getItemOpacity(item, opacityPath);\r\n  var el = item.getGraphicEl(); // Should go back to normal opacity first, consider hoverLayer,\r\n  // where current state is copied to elMirror, and support\r\n  // emphasis opacity here.\r\n\r\n  el.traverse(function (child) {\r\n    !child.isGroup && child.setStyle('opacity', opacity);\r\n  });\r\n  el.highlight && el.highlight();\r\n}\r\n\r\nvar _default = echarts.extendChartView({\r\n  type: 'graph',\r\n  init: function (ecModel, api) {\r\n    var symbolDraw = new SymbolDraw();\r\n    var lineDraw = new LineDraw();\r\n    var group = this.group;\r\n    this._controller = new RoamController(api.getZr());\r\n    this._controllerHost = {\r\n      target: group\r\n    };\r\n    group.add(symbolDraw.group);\r\n    group.add(lineDraw.group);\r\n    this._symbolDraw = symbolDraw;\r\n    this._lineDraw = lineDraw;\r\n    this._firstRender = true;\r\n  },\r\n  render: function (seriesModel, ecModel, api) {\r\n    var graphView = this;\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    this._model = seriesModel;\r\n    var symbolDraw = this._symbolDraw;\r\n    var lineDraw = this._lineDraw;\r\n    var group = this.group;\r\n\r\n    if (coordSys.type === 'view') {\r\n      var groupNewProp = {\r\n        position: coordSys.position,\r\n        scale: coordSys.scale\r\n      };\r\n\r\n      if (this._firstRender) {\r\n        group.attr(groupNewProp);\r\n      } else {\r\n        graphic.updateProps(group, groupNewProp, seriesModel);\r\n      }\r\n    } // Fix edge contact point with node\r\n\r\n\r\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\r\n    var data = seriesModel.getData();\r\n    symbolDraw.updateData(data);\r\n    var edgeData = seriesModel.getEdgeData();\r\n    lineDraw.updateData(edgeData);\r\n\r\n    this._updateNodeAndLinkScale();\r\n\r\n    this._updateController(seriesModel, ecModel, api);\r\n\r\n    clearTimeout(this._layoutTimeout);\r\n    var forceLayout = seriesModel.forceLayout;\r\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\r\n\r\n    if (forceLayout) {\r\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\r\n    }\r\n\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      var itemModel = data.getItemModel(idx); // Update draggable\r\n\r\n      el.off('drag').off('dragend');\r\n      var draggable = itemModel.get('draggable');\r\n\r\n      if (draggable) {\r\n        el.on('drag', function () {\r\n          if (forceLayout) {\r\n            forceLayout.warmUp();\r\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\r\n            forceLayout.setFixed(idx); // Write position back to layout\r\n\r\n            data.setItemLayout(idx, el.position);\r\n          }\r\n        }, this).on('dragend', function () {\r\n          if (forceLayout) {\r\n            forceLayout.setUnfixed(idx);\r\n          }\r\n        }, this);\r\n      }\r\n\r\n      el.setDraggable(draggable && forceLayout);\r\n      el[FOCUS_ADJACENCY] && el.off('mouseover', el[FOCUS_ADJACENCY]);\r\n      el[UNFOCUS_ADJACENCY] && el.off('mouseout', el[UNFOCUS_ADJACENCY]);\r\n\r\n      if (itemModel.get('focusNodeAdjacency')) {\r\n        el.on('mouseover', el[FOCUS_ADJACENCY] = function () {\r\n          graphView._clearTimer();\r\n\r\n          api.dispatchAction({\r\n            type: 'focusNodeAdjacency',\r\n            seriesId: seriesModel.id,\r\n            dataIndex: el.dataIndex\r\n          });\r\n        });\r\n        el.on('mouseout', el[UNFOCUS_ADJACENCY] = function () {\r\n          graphView._dispatchUnfocus(api);\r\n        });\r\n      }\r\n    }, this);\r\n    data.graph.eachEdge(function (edge) {\r\n      var el = edge.getGraphicEl();\r\n      el[FOCUS_ADJACENCY] && el.off('mouseover', el[FOCUS_ADJACENCY]);\r\n      el[UNFOCUS_ADJACENCY] && el.off('mouseout', el[UNFOCUS_ADJACENCY]);\r\n\r\n      if (edge.getModel().get('focusNodeAdjacency')) {\r\n        el.on('mouseover', el[FOCUS_ADJACENCY] = function () {\r\n          graphView._clearTimer();\r\n\r\n          api.dispatchAction({\r\n            type: 'focusNodeAdjacency',\r\n            seriesId: seriesModel.id,\r\n            edgeDataIndex: edge.dataIndex\r\n          });\r\n        });\r\n        el.on('mouseout', el[UNFOCUS_ADJACENCY] = function () {\r\n          graphView._dispatchUnfocus(api);\r\n        });\r\n      }\r\n    });\r\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\r\n    var cx = data.getLayout('cx');\r\n    var cy = data.getLayout('cy');\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      var itemModel = data.getItemModel(idx);\r\n      var labelRotate = itemModel.get('label.rotate') || 0;\r\n      var symbolPath = el.getSymbolPath();\r\n\r\n      if (circularRotateLabel) {\r\n        var pos = data.getItemLayout(idx);\r\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\r\n\r\n        if (rad < 0) {\r\n          rad = Math.PI * 2 + rad;\r\n        }\r\n\r\n        var isLeft = pos[0] < cx;\r\n\r\n        if (isLeft) {\r\n          rad = rad - Math.PI;\r\n        }\r\n\r\n        var textPosition = isLeft ? 'left' : 'right';\r\n        graphic.modifyLabelStyle(symbolPath, {\r\n          textRotation: -rad,\r\n          textPosition: textPosition,\r\n          textOrigin: 'center'\r\n        }, {\r\n          textPosition: textPosition\r\n        });\r\n      } else {\r\n        graphic.modifyLabelStyle(symbolPath, {\r\n          textRotation: labelRotate *= Math.PI / 180\r\n        });\r\n      }\r\n    });\r\n    this._firstRender = false;\r\n  },\r\n  dispose: function () {\r\n    this._controller && this._controller.dispose();\r\n    this._controllerHost = {};\r\n\r\n    this._clearTimer();\r\n  },\r\n  _dispatchUnfocus: function (api, opt) {\r\n    var self = this;\r\n\r\n    this._clearTimer();\r\n\r\n    this._unfocusDelayTimer = setTimeout(function () {\r\n      self._unfocusDelayTimer = null;\r\n      api.dispatchAction({\r\n        type: 'unfocusNodeAdjacency',\r\n        seriesId: self._model.id\r\n      });\r\n    }, 500);\r\n  },\r\n  _clearTimer: function () {\r\n    if (this._unfocusDelayTimer) {\r\n      clearTimeout(this._unfocusDelayTimer);\r\n      this._unfocusDelayTimer = null;\r\n    }\r\n  },\r\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var graph = data.graph;\r\n    var dataIndex = payload.dataIndex;\r\n    var edgeDataIndex = payload.edgeDataIndex;\r\n    var node = graph.getNodeByIndex(dataIndex);\r\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\r\n\r\n    if (!node && !edge) {\r\n      return;\r\n    }\r\n\r\n    graph.eachNode(function (node) {\r\n      fadeOutItem(node, nodeOpacityPath, 0.1);\r\n    });\r\n    graph.eachEdge(function (edge) {\r\n      fadeOutItem(edge, lineOpacityPath, 0.1);\r\n    });\r\n\r\n    if (node) {\r\n      fadeInItem(node, nodeOpacityPath);\r\n      zrUtil.each(node.edges, function (adjacentEdge) {\r\n        if (adjacentEdge.dataIndex < 0) {\r\n          return;\r\n        }\r\n\r\n        fadeInItem(adjacentEdge, lineOpacityPath);\r\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\r\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\r\n      });\r\n    }\r\n\r\n    if (edge) {\r\n      fadeInItem(edge, lineOpacityPath);\r\n      fadeInItem(edge.node1, nodeOpacityPath);\r\n      fadeInItem(edge.node2, nodeOpacityPath);\r\n    }\r\n  },\r\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\r\n    var graph = seriesModel.getData().graph;\r\n    graph.eachNode(function (node) {\r\n      fadeOutItem(node, nodeOpacityPath);\r\n    });\r\n    graph.eachEdge(function (edge) {\r\n      fadeOutItem(edge, lineOpacityPath);\r\n    });\r\n  },\r\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\r\n    var self = this;\r\n\r\n    (function step() {\r\n      forceLayout.step(function (stopped) {\r\n        self.updateLayout(self._model);\r\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\r\n      });\r\n    })();\r\n  },\r\n  _updateController: function (seriesModel, ecModel, api) {\r\n    var controller = this._controller;\r\n    var controllerHost = this._controllerHost;\r\n    var group = this.group;\r\n    controller.setPointerChecker(function (e, x, y) {\r\n      var rect = group.getBoundingRect();\r\n      rect.applyTransform(group.transform);\r\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\r\n    });\r\n\r\n    if (seriesModel.coordinateSystem.type !== 'view') {\r\n      controller.disable();\r\n      return;\r\n    }\r\n\r\n    controller.enable(seriesModel.get('roam'));\r\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\r\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\r\n    controller.off('pan').off('zoom').on('pan', function (e) {\r\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'graphRoam',\r\n        dx: e.dx,\r\n        dy: e.dy\r\n      });\r\n    }).on('zoom', function (e) {\r\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'graphRoam',\r\n        zoom: e.scale,\r\n        originX: e.originX,\r\n        originY: e.originY\r\n      });\r\n\r\n      this._updateNodeAndLinkScale();\r\n\r\n      adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\r\n\r\n      this._lineDraw.updateLayout();\r\n    }, this);\r\n  },\r\n  _updateNodeAndLinkScale: function () {\r\n    var seriesModel = this._model;\r\n    var data = seriesModel.getData();\r\n    var nodeScale = getNodeGlobalScale(seriesModel);\r\n    var invScale = [nodeScale, nodeScale];\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      el.attr('scale', invScale);\r\n    });\r\n  },\r\n  updateLayout: function (seriesModel) {\r\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\r\n\r\n    this._symbolDraw.updateLayout();\r\n\r\n    this._lineDraw.updateLayout();\r\n  },\r\n  remove: function (ecModel, api) {\r\n    this._symbolDraw && this._symbolDraw.remove();\r\n    this._lineDraw && this._lineDraw.remove();\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar curveTool = require(\"zrender/lib/core/curve\");\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\nvar _graphHelper = require(\"./graphHelper\");\r\n\r\nvar getSymbolSize = _graphHelper.getSymbolSize;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar v1 = [];\r\nvar v2 = [];\r\nvar v3 = [];\r\nvar quadraticAt = curveTool.quadraticAt;\r\nvar v2DistSquare = vec2.distSquare;\r\nvar mathAbs = Math.abs;\r\n\r\nfunction intersectCurveCircle(curvePoints, center, radius) {\r\n  var p0 = curvePoints[0];\r\n  var p1 = curvePoints[1];\r\n  var p2 = curvePoints[2];\r\n  var d = Infinity;\r\n  var t;\r\n  var radiusSquare = radius * radius;\r\n  var interval = 0.1;\r\n\r\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\r\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\r\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\r\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\r\n\r\n    if (diff < d) {\r\n      d = diff;\r\n      t = _t;\r\n    }\r\n  } // Assume the segment is monotone，Find root through Bisection method\r\n  // At most 32 iteration\r\n\r\n\r\n  for (var i = 0; i < 32; i++) {\r\n    // var prev = t - interval;\r\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\r\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\r\n\r\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\r\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\r\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\r\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\r\n    var diff = v2DistSquare(v2, center) - radiusSquare;\r\n\r\n    if (mathAbs(diff) < 1e-2) {\r\n      break;\r\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\r\n\r\n\r\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\r\n    interval /= 2;\r\n\r\n    if (diff < 0) {\r\n      if (nextDiff >= 0) {\r\n        t = t + interval;\r\n      } else {\r\n        t = t - interval;\r\n      }\r\n    } else {\r\n      if (nextDiff >= 0) {\r\n        t = t - interval;\r\n      } else {\r\n        t = t + interval;\r\n      }\r\n    }\r\n  }\r\n\r\n  return t;\r\n} // Adjust edge to avoid\r\n\r\n\r\nfunction _default(graph, scale) {\r\n  var tmp0 = [];\r\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\r\n  var pts = [[], [], []];\r\n  var pts2 = [[], []];\r\n  var v = [];\r\n  scale /= 2;\r\n  graph.eachEdge(function (edge, idx) {\r\n    var linePoints = edge.getLayout();\r\n    var fromSymbol = edge.getVisual('fromSymbol');\r\n    var toSymbol = edge.getVisual('toSymbol');\r\n\r\n    if (!linePoints.__original) {\r\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\r\n\r\n      if (linePoints[2]) {\r\n        linePoints.__original.push(vec2.clone(linePoints[2]));\r\n      }\r\n    }\r\n\r\n    var originalPoints = linePoints.__original; // Quadratic curve\r\n\r\n    if (linePoints[2] != null) {\r\n      vec2.copy(pts[0], originalPoints[0]);\r\n      vec2.copy(pts[1], originalPoints[2]);\r\n      vec2.copy(pts[2], originalPoints[1]);\r\n\r\n      if (fromSymbol && fromSymbol !== 'none') {\r\n        var symbolSize = getSymbolSize(edge.node1);\r\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\r\n\r\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\r\n        pts[0][0] = tmp0[3];\r\n        pts[1][0] = tmp0[4];\r\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\r\n        pts[0][1] = tmp0[3];\r\n        pts[1][1] = tmp0[4];\r\n      }\r\n\r\n      if (toSymbol && toSymbol !== 'none') {\r\n        var symbolSize = getSymbolSize(edge.node2);\r\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\r\n\r\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\r\n        pts[1][0] = tmp0[1];\r\n        pts[2][0] = tmp0[2];\r\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\r\n        pts[1][1] = tmp0[1];\r\n        pts[2][1] = tmp0[2];\r\n      } // Copy back to layout\r\n\r\n\r\n      vec2.copy(linePoints[0], pts[0]);\r\n      vec2.copy(linePoints[1], pts[2]);\r\n      vec2.copy(linePoints[2], pts[1]);\r\n    } // Line\r\n    else {\r\n        vec2.copy(pts2[0], originalPoints[0]);\r\n        vec2.copy(pts2[1], originalPoints[1]);\r\n        vec2.sub(v, pts2[1], pts2[0]);\r\n        vec2.normalize(v, v);\r\n\r\n        if (fromSymbol && fromSymbol !== 'none') {\r\n          var symbolSize = getSymbolSize(edge.node1);\r\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\r\n        }\r\n\r\n        if (toSymbol && toSymbol !== 'none') {\r\n          var symbolSize = getSymbolSize(edge.node2);\r\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\r\n        }\r\n\r\n        vec2.copy(linePoints[0], pts2[0]);\r\n        vec2.copy(linePoints[1], pts2[1]);\r\n      }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel) {\r\n  var legendModels = ecModel.findComponents({\r\n    mainType: 'legend'\r\n  });\r\n\r\n  if (!legendModels || !legendModels.length) {\r\n    return;\r\n  }\r\n\r\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\r\n    var categoriesData = graphSeries.getCategoriesData();\r\n    var graph = graphSeries.getGraph();\r\n    var data = graph.data;\r\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\r\n    data.filterSelf(function (idx) {\r\n      var model = data.getItemModel(idx);\r\n      var category = model.getShallow('category');\r\n\r\n      if (category != null) {\r\n        if (typeof category === 'number') {\r\n          category = categoryNames[category];\r\n        } // If in any legend component the status is not selected.\r\n\r\n\r\n        for (var i = 0; i < legendModels.length; i++) {\r\n          if (!legendModels[i].isSelected(category)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }, this);\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel) {\r\n  var paletteScope = {};\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var categoriesData = seriesModel.getCategoriesData();\r\n    var data = seriesModel.getData();\r\n    var categoryNameIdxMap = {};\r\n    categoriesData.each(function (idx) {\r\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\r\n\r\n      categoryNameIdxMap['ec-' + name] = idx;\r\n      var itemModel = categoriesData.getItemModel(idx);\r\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\r\n      categoriesData.setItemVisual(idx, 'color', color);\r\n      var itemStyleList = ['opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\r\n\r\n      for (var i = 0; i < itemStyleList.length; i++) {\r\n        var itemStyle = itemModel.getShallow(itemStyleList[i], true);\r\n\r\n        if (itemStyle != null) {\r\n          categoriesData.setItemVisual(idx, itemStyleList[i], itemStyle);\r\n        }\r\n      }\r\n    }); // Assign category color to visual\r\n\r\n    if (categoriesData.count()) {\r\n      data.each(function (idx) {\r\n        var model = data.getItemModel(idx);\r\n        var category = model.getShallow('category');\r\n\r\n        if (category != null) {\r\n          if (typeof category === 'string') {\r\n            category = categoryNameIdxMap['ec-' + category];\r\n          }\r\n\r\n          var itemStyleList = ['color', 'opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\r\n\r\n          for (var i = 0; i < itemStyleList.length; i++) {\r\n            if (data.getItemVisual(idx, itemStyleList[i], true) == null) {\r\n              data.setItemVisual(idx, itemStyleList[i], categoriesData.getItemVisual(category, itemStyleList[i]));\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\r\n\r\nvar circularLayout = _circularLayoutHelper.circularLayout;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel) {\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    if (seriesModel.get('layout') === 'circular') {\r\n      circularLayout(seriesModel, 'symbolSize');\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\nvar _graphHelper = require(\"./graphHelper\");\r\n\r\nvar getSymbolSize = _graphHelper.getSymbolSize;\r\nvar getNodeGlobalScale = _graphHelper.getNodeGlobalScale;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper\");\r\n\r\nvar getCurvenessForEdge = _multipleGraphEdgeHelper.getCurvenessForEdge;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PI = Math.PI;\r\nvar _symbolRadiansHalf = [];\r\n/**\r\n * `basedOn` can be:\r\n * 'value':\r\n *     This layout is not accurate and have same bad case. For example,\r\n *     if the min value is very smaller than the max value, the nodes\r\n *     with the min value probably overlap even though there is enough\r\n *     space to layout them. So we only use this approach in the as the\r\n *     init layout of the force layout.\r\n *     FIXME\r\n *     Probably we do not need this method any more but use\r\n *     `basedOn: 'symbolSize'` in force layout if\r\n *     delay its init operations to GraphView.\r\n * 'symbolSize':\r\n *     This approach work only if all of the symbol size calculated.\r\n *     That is, the progressive rendering is not applied to graph.\r\n *     FIXME\r\n *     If progressive rendering is applied to graph some day,\r\n *     probably we have to use `basedOn: 'value'`.\r\n *\r\n * @param {module:echarts/src/model/Series} seriesModel\r\n * @param {string} basedOn 'value' or 'symbolSize'\r\n */\r\n\r\nfunction circularLayout(seriesModel, basedOn) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n\r\n  if (coordSys && coordSys.type !== 'view') {\r\n    return;\r\n  }\r\n\r\n  var rect = coordSys.getBoundingRect();\r\n  var nodeData = seriesModel.getData();\r\n  var graph = nodeData.graph;\r\n  var cx = rect.width / 2 + rect.x;\r\n  var cy = rect.height / 2 + rect.y;\r\n  var r = Math.min(rect.width, rect.height) / 2;\r\n  var count = nodeData.count();\r\n  nodeData.setLayout({\r\n    cx: cx,\r\n    cy: cy\r\n  });\r\n\r\n  if (!count) {\r\n    return;\r\n  }\r\n\r\n  _layoutNodesBasedOn[basedOn](seriesModel, coordSys, graph, nodeData, r, cx, cy, count);\r\n\r\n  graph.eachEdge(function (edge, index) {\r\n    var curveness = zrUtil.retrieve3(edge.getModel().get('lineStyle.curveness'), getCurvenessForEdge(edge, seriesModel, index), 0);\r\n    var p1 = vec2.clone(edge.node1.getLayout());\r\n    var p2 = vec2.clone(edge.node2.getLayout());\r\n    var cp1;\r\n    var x12 = (p1[0] + p2[0]) / 2;\r\n    var y12 = (p1[1] + p2[1]) / 2;\r\n\r\n    if (+curveness) {\r\n      curveness *= 3;\r\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\r\n    }\r\n\r\n    edge.setLayout([p1, p2, cp1]);\r\n  });\r\n}\r\n\r\nvar _layoutNodesBasedOn = {\r\n  value: function (seriesModel, coordSys, graph, nodeData, r, cx, cy, count) {\r\n    var angle = 0;\r\n    var sum = nodeData.getSum('value');\r\n    var unitAngle = Math.PI * 2 / (sum || count);\r\n    graph.eachNode(function (node) {\r\n      var value = node.getValue('value');\r\n      var radianHalf = unitAngle * (sum ? value : 1) / 2;\r\n      angle += radianHalf;\r\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\r\n      angle += radianHalf;\r\n    });\r\n  },\r\n  symbolSize: function (seriesModel, coordSys, graph, nodeData, r, cx, cy, count) {\r\n    var sumRadian = 0;\r\n    _symbolRadiansHalf.length = count;\r\n    var nodeScale = getNodeGlobalScale(seriesModel);\r\n    graph.eachNode(function (node) {\r\n      var symbolSize = getSymbolSize(node); // Normally this case will not happen, but we still add\r\n      // some the defensive code (2px is an arbitrary value).\r\n\r\n      isNaN(symbolSize) && (symbolSize = 2);\r\n      symbolSize < 0 && (symbolSize = 0);\r\n      symbolSize *= nodeScale;\r\n      var symbolRadianHalf = Math.asin(symbolSize / 2 / r); // when `symbolSize / 2` is bigger than `r`.\r\n\r\n      isNaN(symbolRadianHalf) && (symbolRadianHalf = PI / 2);\r\n      _symbolRadiansHalf[node.dataIndex] = symbolRadianHalf;\r\n      sumRadian += symbolRadianHalf * 2;\r\n    });\r\n    var halfRemainRadian = (2 * PI - sumRadian) / count / 2;\r\n    var angle = 0;\r\n    graph.eachNode(function (node) {\r\n      var radianHalf = halfRemainRadian + _symbolRadiansHalf[node.dataIndex];\r\n      angle += radianHalf;\r\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\r\n      angle += radianHalf;\r\n    });\r\n  }\r\n};\r\nexports.circularLayout = circularLayout;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar View = require(\"../../coord/View\");\r\n\r\nvar _layout = require(\"../../util/layout\");\r\n\r\nvar getLayoutRect = _layout.getLayoutRect;\r\n\r\nvar bbox = require(\"zrender/lib/core/bbox\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME Where to create the simple view coordinate system\r\nfunction getViewRect(seriesModel, api, aspect) {\r\n  var option = seriesModel.getBoxLayoutParams();\r\n  option.aspect = aspect;\r\n  return getLayoutRect(option, {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n\r\nfunction _default(ecModel, api) {\r\n  var viewList = [];\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var coordSysType = seriesModel.get('coordinateSystem');\r\n\r\n    if (!coordSysType || coordSysType === 'view') {\r\n      var data = seriesModel.getData();\r\n      var positions = data.mapArray(function (idx) {\r\n        var itemModel = data.getItemModel(idx);\r\n        return [+itemModel.get('x'), +itemModel.get('y')];\r\n      });\r\n      var min = [];\r\n      var max = [];\r\n      bbox.fromPoints(positions, min, max); // If width or height is 0\r\n\r\n      if (max[0] - min[0] === 0) {\r\n        max[0] += 1;\r\n        min[0] -= 1;\r\n      }\r\n\r\n      if (max[1] - min[1] === 0) {\r\n        max[1] += 1;\r\n        min[1] -= 1;\r\n      }\r\n\r\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\r\n\r\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\r\n\r\n      if (isNaN(aspect)) {\r\n        min = [viewRect.x, viewRect.y];\r\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\r\n      }\r\n\r\n      var bbWidth = max[0] - min[0];\r\n      var bbHeight = max[1] - min[1];\r\n      var viewWidth = viewRect.width;\r\n      var viewHeight = viewRect.height;\r\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\r\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\r\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\r\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\r\n\r\n      viewCoordSys.setCenter(seriesModel.get('center'));\r\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\r\n      viewList.push(viewCoordSys);\r\n    }\r\n  });\r\n  return viewList;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction normalize(a) {\r\n  if (!(a instanceof Array)) {\r\n    a = [a, a];\r\n  }\r\n\r\n  return a;\r\n}\r\n\r\nfunction _default(ecModel) {\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var graph = seriesModel.getGraph();\r\n    var edgeData = seriesModel.getEdgeData();\r\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\r\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\r\n    var colorQuery = 'lineStyle.color'.split('.');\r\n    var opacityQuery = 'lineStyle.opacity'.split('.');\r\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\r\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\r\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\r\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\r\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\r\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\r\n    edgeData.each(function (idx) {\r\n      var itemModel = edgeData.getItemModel(idx);\r\n      var edge = graph.getEdgeByIndex(idx);\r\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\r\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\r\n\r\n      var color = itemModel.get(colorQuery);\r\n      var opacity = itemModel.get(opacityQuery);\r\n\r\n      switch (color) {\r\n        case 'source':\r\n          color = edge.node1.getVisual('color');\r\n          break;\r\n\r\n        case 'target':\r\n          color = edge.node2.getVisual('color');\r\n          break;\r\n      }\r\n\r\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\r\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\r\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\r\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\r\n      edge.setVisual('color', color);\r\n      edge.setVisual('opacity', opacity);\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* A third-party license is embeded for some of the code in this file:\r\n* Some formulas were originally copied from \"d3.js\" with some\r\n* modifications made for this project.\r\n* (See more details in the comment of the method \"step\" below.)\r\n* The use of the source code of this file is also subject to the terms\r\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n* </licenses/LICENSE-d3>).\r\n*/\r\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\r\n//     return e.n1 === n ? e.n2 : e.n1;\r\n// }\r\n\r\nfunction forceLayout(nodes, edges, opts) {\r\n  var rect = opts.rect;\r\n  var width = rect.width;\r\n  var height = rect.height;\r\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\r\n\r\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\r\n  //     var e = edges[i];\r\n  //     var n1 = e.n1;\r\n  //     var n2 = e.n2;\r\n  //     n1.edges = n1.edges || [];\r\n  //     n2.edges = n2.edges || [];\r\n  //     n1.edges.push(e);\r\n  //     n2.edges.push(e);\r\n  // }\r\n  // Init position\r\n\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    var n = nodes[i];\r\n\r\n    if (!n.p) {\r\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]);\r\n    }\r\n\r\n    n.pp = vec2.clone(n.p);\r\n    n.edges = null;\r\n  } // Formula in 'Graph Drawing by Force-directed Placement'\r\n  // var k = scale * Math.sqrt(width * height / nodes.length);\r\n  // var k2 = k * k;\r\n\r\n\r\n  var initialFriction = opts.friction == null ? 0.6 : opts.friction;\r\n  var friction = initialFriction;\r\n  return {\r\n    warmUp: function () {\r\n      friction = initialFriction * 0.8;\r\n    },\r\n    setFixed: function (idx) {\r\n      nodes[idx].fixed = true;\r\n    },\r\n    setUnfixed: function (idx) {\r\n      nodes[idx].fixed = false;\r\n    },\r\n\r\n    /**\r\n     * Some formulas were originally copied from \"d3.js\"\r\n     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js\r\n     * with some modifications made for this project.\r\n     * See the license statement at the head of this file.\r\n     */\r\n    step: function (cb) {\r\n      var v12 = [];\r\n      var nLen = nodes.length;\r\n\r\n      for (var i = 0; i < edges.length; i++) {\r\n        var e = edges[i];\r\n\r\n        if (e.ignoreForceLayout) {\r\n          continue;\r\n        }\r\n\r\n        var n1 = e.n1;\r\n        var n2 = e.n2;\r\n        vec2.sub(v12, n2.p, n1.p);\r\n        var d = vec2.len(v12) - e.d;\r\n        var w = n2.w / (n1.w + n2.w);\r\n\r\n        if (isNaN(w)) {\r\n          w = 0;\r\n        }\r\n\r\n        vec2.normalize(v12, v12);\r\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\r\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\r\n      } // Gravity\r\n\r\n\r\n      for (var i = 0; i < nLen; i++) {\r\n        var n = nodes[i];\r\n\r\n        if (!n.fixed) {\r\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\r\n          // vec2.scale(v12, v12, 1 / d);\r\n          // var gravityFactor = gravity;\r\n\r\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\r\n        }\r\n      } // Repulsive\r\n      // PENDING\r\n\r\n\r\n      for (var i = 0; i < nLen; i++) {\r\n        var n1 = nodes[i];\r\n\r\n        for (var j = i + 1; j < nLen; j++) {\r\n          var n2 = nodes[j];\r\n          vec2.sub(v12, n2.p, n1.p);\r\n          var d = vec2.len(v12);\r\n\r\n          if (d === 0) {\r\n            // Random repulse\r\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\r\n            d = 1;\r\n          }\r\n\r\n          var repFact = (n1.rep + n2.rep) / d / d;\r\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\r\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\r\n        }\r\n      }\r\n\r\n      var v = [];\r\n\r\n      for (var i = 0; i < nLen; i++) {\r\n        var n = nodes[i];\r\n\r\n        if (!n.fixed) {\r\n          vec2.sub(v, n.p, n.pp);\r\n          scaleAndAdd(n.p, n.p, v, friction);\r\n          vec2.copy(n.pp, n.p);\r\n        }\r\n      }\r\n\r\n      friction = friction * 0.992;\r\n      cb && cb(nodes, edges, friction < 0.01);\r\n    }\r\n  };\r\n}\r\n\r\nexports.forceLayout = forceLayout;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _forceHelper = require(\"./forceHelper\");\r\n\r\nvar forceLayout = _forceHelper.forceLayout;\r\n\r\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\r\n\r\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\r\n\r\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\r\n\r\nvar circularLayout = _circularLayoutHelper.circularLayout;\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar linearMap = _number.linearMap;\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper\");\r\n\r\nvar getCurvenessForEdge = _multipleGraphEdgeHelper.getCurvenessForEdge;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel) {\r\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\r\n    var coordSys = graphSeries.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.type !== 'view') {\r\n      return;\r\n    }\r\n\r\n    if (graphSeries.get('layout') === 'force') {\r\n      var preservedPoints = graphSeries.preservedPoints || {};\r\n      var graph = graphSeries.getGraph();\r\n      var nodeData = graph.data;\r\n      var edgeData = graph.edgeData;\r\n      var forceModel = graphSeries.getModel('force');\r\n      var initLayout = forceModel.get('initLayout');\r\n\r\n      if (graphSeries.preservedPoints) {\r\n        nodeData.each(function (idx) {\r\n          var id = nodeData.getId(idx);\r\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\r\n        });\r\n      } else if (!initLayout || initLayout === 'none') {\r\n        simpleLayout(graphSeries);\r\n      } else if (initLayout === 'circular') {\r\n        circularLayout(graphSeries, 'value');\r\n      }\r\n\r\n      var nodeDataExtent = nodeData.getDataExtent('value');\r\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\r\n\r\n      var repulsion = forceModel.get('repulsion');\r\n      var edgeLength = forceModel.get('edgeLength');\r\n\r\n      if (!zrUtil.isArray(repulsion)) {\r\n        repulsion = [repulsion, repulsion];\r\n      }\r\n\r\n      if (!zrUtil.isArray(edgeLength)) {\r\n        edgeLength = [edgeLength, edgeLength];\r\n      } // Larger value has smaller length\r\n\r\n\r\n      edgeLength = [edgeLength[1], edgeLength[0]];\r\n      var nodes = nodeData.mapArray('value', function (value, idx) {\r\n        var point = nodeData.getItemLayout(idx);\r\n        var rep = linearMap(value, nodeDataExtent, repulsion);\r\n\r\n        if (isNaN(rep)) {\r\n          rep = (repulsion[0] + repulsion[1]) / 2;\r\n        }\r\n\r\n        return {\r\n          w: rep,\r\n          rep: rep,\r\n          fixed: nodeData.getItemModel(idx).get('fixed'),\r\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\r\n        };\r\n      });\r\n      var edges = edgeData.mapArray('value', function (value, idx) {\r\n        var edge = graph.getEdgeByIndex(idx);\r\n        var d = linearMap(value, edgeDataExtent, edgeLength);\r\n\r\n        if (isNaN(d)) {\r\n          d = (edgeLength[0] + edgeLength[1]) / 2;\r\n        }\r\n\r\n        var edgeModel = edge.getModel();\r\n        var curveness = zrUtil.retrieve3(edgeModel.get('lineStyle.curveness'), -getCurvenessForEdge(edge, graphSeries, idx, true), 0);\r\n        return {\r\n          n1: nodes[edge.node1.dataIndex],\r\n          n2: nodes[edge.node2.dataIndex],\r\n          d: d,\r\n          curveness: curveness,\r\n          ignoreForceLayout: edgeModel.get('ignoreForceLayout')\r\n        };\r\n      });\r\n      var coordSys = graphSeries.coordinateSystem;\r\n      var rect = coordSys.getBoundingRect();\r\n      var forceInstance = forceLayout(nodes, edges, {\r\n        rect: rect,\r\n        gravity: forceModel.get('gravity'),\r\n        friction: forceModel.get('friction')\r\n      });\r\n      var oldStep = forceInstance.step;\r\n\r\n      forceInstance.step = function (cb) {\r\n        for (var i = 0, l = nodes.length; i < l; i++) {\r\n          if (nodes[i].fixed) {\r\n            // Write back to layout instance\r\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\r\n          }\r\n        }\r\n\r\n        oldStep(function (nodes, edges, stopped) {\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            if (!nodes[i].fixed) {\r\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\r\n            }\r\n\r\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\r\n          }\r\n\r\n          for (var i = 0, l = edges.length; i < l; i++) {\r\n            var e = edges[i];\r\n            var edge = graph.getEdgeByIndex(i);\r\n            var p1 = e.n1.p;\r\n            var p2 = e.n2.p;\r\n            var points = edge.getLayout();\r\n            points = points ? points.slice() : [];\r\n            points[0] = points[0] || [];\r\n            points[1] = points[1] || [];\r\n            vec2.copy(points[0], p1);\r\n            vec2.copy(points[1], p2);\r\n\r\n            if (+e.curveness) {\r\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\r\n            }\r\n\r\n            edge.setLayout(points);\r\n          } // Update layout\r\n\r\n\r\n          cb && cb(stopped);\r\n        });\r\n      };\r\n\r\n      graphSeries.forceLayout = forceInstance;\r\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\r\n\r\n      forceInstance.step();\r\n    } else {\r\n      // Remove prev injected forceLayout instance\r\n      graphSeries.forceLayout = null;\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar _roamHelper = require(\"../../action/roamHelper\");\r\n\r\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\r\n\r\nrequire(\"../helper/focusNodeAdjacencyAction\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar actionInfo = {\r\n  type: 'graphRoam',\r\n  event: 'graphRoam',\r\n  update: 'none'\r\n};\r\n/**\r\n * @payload\r\n * @property {string} name Series name\r\n * @property {number} [dx]\r\n * @property {number} [dy]\r\n * @property {number} [zoom]\r\n * @property {number} [originX]\r\n * @property {number} [originY]\r\n */\r\n\r\necharts.registerAction(actionInfo, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    query: payload\r\n  }, function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var res = updateCenterAndZoom(coordSys, payload);\r\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\r\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\r\n  });\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction getNodeGlobalScale(seriesModel) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n\r\n  if (coordSys.type !== 'view') {\r\n    return 1;\r\n  }\r\n\r\n  var nodeScaleRatio = seriesModel.option.nodeScaleRatio;\r\n  var groupScale = coordSys.scale;\r\n  var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\r\n\r\n  var roamZoom = coordSys.getZoom();\r\n  var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\r\n  return nodeScale / groupZoom;\r\n}\r\n\r\nfunction getSymbolSize(node) {\r\n  var symbolSize = node.getVisual('symbolSize');\r\n\r\n  if (symbolSize instanceof Array) {\r\n    symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\r\n  }\r\n\r\n  return +symbolSize;\r\n}\r\n\r\nexports.getNodeGlobalScale = getNodeGlobalScale;\r\nexports.getSymbolSize = getSymbolSize;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\n\r\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\r\n\r\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\r\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel, api) {\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var layout = seriesModel.get('layout');\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.type !== 'view') {\r\n      var data = seriesModel.getData();\r\n      var dimensions = [];\r\n      each(coordSys.dimensions, function (coordDim) {\r\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\r\n      });\r\n\r\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\r\n        var value = [];\r\n        var hasValue = false;\r\n\r\n        for (var i = 0; i < dimensions.length; i++) {\r\n          var val = data.get(dimensions[i], dataIndex);\r\n\r\n          if (!isNaN(val)) {\r\n            hasValue = true;\r\n          }\r\n\r\n          value.push(val);\r\n        }\r\n\r\n        if (hasValue) {\r\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\r\n        } else {\r\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\r\n          data.setItemLayout(dataIndex, [NaN, NaN]);\r\n        }\r\n      }\r\n\r\n      simpleLayoutEdge(data.graph, seriesModel);\r\n    } else if (!layout || layout === 'none') {\r\n      simpleLayout(seriesModel);\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper\");\r\n\r\nvar getCurvenessForEdge = _multipleGraphEdgeHelper.getCurvenessForEdge;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction simpleLayout(seriesModel) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n\r\n  if (coordSys && coordSys.type !== 'view') {\r\n    return;\r\n  }\r\n\r\n  var graph = seriesModel.getGraph();\r\n  graph.eachNode(function (node) {\r\n    var model = node.getModel();\r\n    node.setLayout([+model.get('x'), +model.get('y')]);\r\n  });\r\n  simpleLayoutEdge(graph, seriesModel);\r\n}\r\n\r\nfunction simpleLayoutEdge(graph, seriesModel) {\r\n  graph.eachEdge(function (edge, index) {\r\n    var curveness = zrUtil.retrieve3(edge.getModel().get('lineStyle.curveness'), -getCurvenessForEdge(edge, seriesModel, index, true), 0);\r\n    var p1 = vec2.clone(edge.node1.getLayout());\r\n    var p2 = vec2.clone(edge.node2.getLayout());\r\n    var points = [p1, p2];\r\n\r\n    if (+curveness) {\r\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\r\n    }\r\n\r\n    edge.setLayout(points);\r\n  });\r\n}\r\n\r\nexports.simpleLayout = simpleLayout;\r\nexports.simpleLayoutEdge = simpleLayoutEdge;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./heatmap/HeatmapSeries\");\r\n\r\nrequire(\"./heatmap/HeatmapView\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Uint8ClampedArray */\r\nvar GRADIENT_LEVELS = 256;\r\n/**\r\n * Heatmap Chart\r\n *\r\n * @class\r\n */\r\n\r\nfunction Heatmap() {\r\n  var canvas = zrUtil.createCanvas();\r\n  this.canvas = canvas;\r\n  this.blurSize = 30;\r\n  this.pointSize = 20;\r\n  this.maxOpacity = 1;\r\n  this.minOpacity = 0;\r\n  this._gradientPixels = {};\r\n}\r\n\r\nHeatmap.prototype = {\r\n  /**\r\n   * Renders Heatmap and returns the rendered canvas\r\n   * @param {Array} data array of data, each has x, y, value\r\n   * @param {number} width canvas width\r\n   * @param {number} height canvas height\r\n   */\r\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\r\n    var brush = this._getBrush();\r\n\r\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\r\n\r\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\r\n\r\n    var r = this.pointSize + this.blurSize;\r\n    var canvas = this.canvas;\r\n    var ctx = canvas.getContext('2d');\r\n    var len = data.length;\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    for (var i = 0; i < len; ++i) {\r\n      var p = data[i];\r\n      var x = p[0];\r\n      var y = p[1];\r\n      var value = p[2]; // calculate alpha using value\r\n\r\n      var alpha = normalize(value); // draw with the circle brush with alpha\r\n\r\n      ctx.globalAlpha = alpha;\r\n      ctx.drawImage(brush, x - r, y - r);\r\n    }\r\n\r\n    if (!canvas.width || !canvas.height) {\r\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\r\n      // 'CanvasRenderingContext2D': The source height is 0.\"\r\n      return canvas;\r\n    } // colorize the canvas using alpha value and set with gradient\r\n\r\n\r\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    var pixels = imageData.data;\r\n    var offset = 0;\r\n    var pixelLen = pixels.length;\r\n    var minOpacity = this.minOpacity;\r\n    var maxOpacity = this.maxOpacity;\r\n    var diffOpacity = maxOpacity - minOpacity;\r\n\r\n    while (offset < pixelLen) {\r\n      var alpha = pixels[offset + 3] / 256;\r\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\r\n\r\n      if (alpha > 0) {\r\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\r\n\r\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\r\n        pixels[offset++] = gradient[gradientOffset];\r\n        pixels[offset++] = gradient[gradientOffset + 1];\r\n        pixels[offset++] = gradient[gradientOffset + 2];\r\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\r\n      } else {\r\n        offset += 4;\r\n      }\r\n    }\r\n\r\n    ctx.putImageData(imageData, 0, 0);\r\n    return canvas;\r\n  },\r\n\r\n  /**\r\n   * get canvas of a black circle brush used for canvas to draw later\r\n   * @private\r\n   * @returns {Object} circle brush canvas\r\n   */\r\n  _getBrush: function () {\r\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\r\n\r\n    var r = this.pointSize + this.blurSize;\r\n    var d = r * 2;\r\n    brushCanvas.width = d;\r\n    brushCanvas.height = d;\r\n    var ctx = brushCanvas.getContext('2d');\r\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\r\n    // draw the distinct circle in an invisible place,\r\n    // and use shadowOffset to draw shadow in the center of the canvas\r\n\r\n    ctx.shadowOffsetX = d;\r\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\r\n    // color in color map\r\n\r\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    return brushCanvas;\r\n  },\r\n\r\n  /**\r\n   * get gradient color map\r\n   * @private\r\n   */\r\n  _getGradient: function (data, colorFunc, state) {\r\n    var gradientPixels = this._gradientPixels;\r\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\r\n    var color = [0, 0, 0, 0];\r\n    var off = 0;\r\n\r\n    for (var i = 0; i < 256; i++) {\r\n      colorFunc[state](i / 255, true, color);\r\n      pixelsSingleState[off++] = color[0];\r\n      pixelsSingleState[off++] = color[1];\r\n      pixelsSingleState[off++] = color[2];\r\n      pixelsSingleState[off++] = color[3];\r\n    }\r\n\r\n    return pixelsSingleState;\r\n  }\r\n};\r\nvar _default = Heatmap;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar createListFromArray = require(\"../helper/createListFromArray\");\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = SeriesModel.extend({\r\n  type: 'series.heatmap',\r\n  getInitialData: function (option, ecModel) {\r\n    return createListFromArray(this.getSource(), this, {\r\n      generateCoord: 'value'\r\n    });\r\n  },\r\n  preventIncremental: function () {\r\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\r\n\r\n    if (coordSysCreator && coordSysCreator.dimensions) {\r\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\r\n    }\r\n  },\r\n  defaultOption: {\r\n    // Cartesian2D or geo\r\n    coordinateSystem: 'cartesian2d',\r\n    zlevel: 0,\r\n    z: 2,\r\n    // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // Geo coordinate system\r\n    geoIndex: 0,\r\n    blurSize: 30,\r\n    pointSize: 20,\r\n    maxOpacity: 1,\r\n    minOpacity: 0\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar HeatmapLayer = require(\"./HeatmapLayer\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\r\n  var dataSpan = dataExtent[1] - dataExtent[0];\r\n  pieceList = zrUtil.map(pieceList, function (piece) {\r\n    return {\r\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\r\n    };\r\n  });\r\n  var len = pieceList.length;\r\n  var lastIndex = 0;\r\n  return function (val) {\r\n    // Try to find in the location of the last found\r\n    for (var i = lastIndex; i < len; i++) {\r\n      var interval = pieceList[i].interval;\r\n\r\n      if (interval[0] <= val && val <= interval[1]) {\r\n        lastIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (i === len) {\r\n      // Not found, back interation\r\n      for (var i = lastIndex - 1; i >= 0; i--) {\r\n        var interval = pieceList[i].interval;\r\n\r\n        if (interval[0] <= val && val <= interval[1]) {\r\n          lastIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return i >= 0 && i < len && selected[i];\r\n  };\r\n}\r\n\r\nfunction getIsInContinuousRange(dataExtent, range) {\r\n  var dataSpan = dataExtent[1] - dataExtent[0];\r\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\r\n  return function (val) {\r\n    return val >= range[0] && val <= range[1];\r\n  };\r\n}\r\n\r\nfunction isGeoCoordSys(coordSys) {\r\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\r\n\r\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\r\n}\r\n\r\nvar _default = echarts.extendChartView({\r\n  type: 'heatmap',\r\n  render: function (seriesModel, ecModel, api) {\r\n    var visualMapOfThisSeries;\r\n    ecModel.eachComponent('visualMap', function (visualMap) {\r\n      visualMap.eachTargetSeries(function (targetSeries) {\r\n        if (targetSeries === seriesModel) {\r\n          visualMapOfThisSeries = visualMap;\r\n        }\r\n      });\r\n    });\r\n    this.group.removeAll();\r\n    this._incrementalDisplayable = null;\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\r\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\r\n    } else if (isGeoCoordSys(coordSys)) {\r\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\r\n    }\r\n  },\r\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\r\n    this.group.removeAll();\r\n  },\r\n  incrementalRender: function (params, seriesModel, ecModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys) {\r\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\r\n    }\r\n  },\r\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var width;\r\n    var height;\r\n\r\n    if (coordSys.type === 'cartesian2d') {\r\n      var xAxis = coordSys.getAxis('x');\r\n      var yAxis = coordSys.getAxis('y');\r\n      width = xAxis.getBandWidth();\r\n      height = yAxis.getBandWidth();\r\n    }\r\n\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var itemStyleQuery = 'itemStyle';\r\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\r\n    var labelQuery = 'label';\r\n    var hoverLabelQuery = 'emphasis.label';\r\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\r\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\r\n    var labelModel = seriesModel.getModel(labelQuery);\r\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\r\n    var coordSysType = coordSys.type;\r\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\r\n\r\n    for (var idx = start; idx < end; idx++) {\r\n      var rect;\r\n\r\n      if (coordSysType === 'cartesian2d') {\r\n        // Ignore empty data\r\n        if (isNaN(data.get(dataDims[2], idx))) {\r\n          continue;\r\n        }\r\n\r\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\r\n        rect = new graphic.Rect({\r\n          shape: {\r\n            x: Math.floor(Math.round(point[0]) - width / 2),\r\n            y: Math.floor(Math.round(point[1]) - height / 2),\r\n            width: Math.ceil(width),\r\n            height: Math.ceil(height)\r\n          },\r\n          style: {\r\n            fill: data.getItemVisual(idx, 'color'),\r\n            opacity: data.getItemVisual(idx, 'opacity')\r\n          }\r\n        });\r\n      } else {\r\n        // Ignore empty data\r\n        if (isNaN(data.get(dataDims[1], idx))) {\r\n          continue;\r\n        }\r\n\r\n        rect = new graphic.Rect({\r\n          z2: 1,\r\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\r\n          style: {\r\n            fill: data.getItemVisual(idx, 'color'),\r\n            opacity: data.getItemVisual(idx, 'opacity')\r\n          }\r\n        });\r\n      }\r\n\r\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\r\n\r\n      if (data.hasItemOption) {\r\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\r\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\r\n        labelModel = itemModel.getModel(labelQuery);\r\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\r\n      }\r\n\r\n      var rawValue = seriesModel.getRawValue(idx);\r\n      var defaultText = '-';\r\n\r\n      if (rawValue && rawValue[2] != null) {\r\n        defaultText = rawValue[2];\r\n      }\r\n\r\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\r\n        labelFetcher: seriesModel,\r\n        labelDataIndex: idx,\r\n        defaultText: defaultText,\r\n        isRectText: true\r\n      });\r\n      rect.setStyle(style);\r\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\r\n      rect.incremental = incremental; // PENDING\r\n\r\n      if (incremental) {\r\n        // Rect must use hover layer if it's incremental.\r\n        rect.useHoverLayer = true;\r\n      }\r\n\r\n      group.add(rect);\r\n      data.setItemGraphicEl(idx, rect);\r\n    }\r\n  },\r\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\r\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\r\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\r\n    //     throw new Error('Data range must have color visuals');\r\n    // }\r\n\r\n    var data = seriesModel.getData();\r\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\r\n    hmLayer.blurSize = seriesModel.get('blurSize');\r\n    hmLayer.pointSize = seriesModel.get('pointSize');\r\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\r\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\r\n    var rect = geo.getViewRect().clone();\r\n    var roamTransform = geo.getRoamTransform();\r\n    rect.applyTransform(roamTransform); // Clamp on viewport\r\n\r\n    var x = Math.max(rect.x, 0);\r\n    var y = Math.max(rect.y, 0);\r\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\r\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\r\n    var width = x2 - x;\r\n    var height = y2 - y;\r\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\r\n    var points = data.mapArray(dims, function (lng, lat, value) {\r\n      var pt = geo.dataToPoint([lng, lat]);\r\n      pt[0] -= x;\r\n      pt[1] -= y;\r\n      pt.push(value);\r\n      return pt;\r\n    });\r\n    var dataExtent = visualMapModel.getExtent();\r\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\r\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\r\n      inRange: inRangeVisuals.color.getColorMapper(),\r\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\r\n    }, isInRange);\r\n    var img = new graphic.Image({\r\n      style: {\r\n        width: width,\r\n        height: height,\r\n        x: x,\r\n        y: y,\r\n        image: hmLayer.canvas\r\n      },\r\n      silent: true\r\n    });\r\n    this.group.add(img);\r\n  },\r\n  dispose: function () {}\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar Line = require(\"./Line\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _symbol = require(\"../../util/symbol\");\r\n\r\nvar createSymbol = _symbol.createSymbol;\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\nvar curveUtil = require(\"zrender/lib/core/curve\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Provide effect for line\r\n * @module echarts/chart/helper/EffectLine\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @extends {module:zrender/graphic/Group}\r\n * @alias {module:echarts/chart/helper/Line}\r\n */\r\nfunction EffectLine(lineData, idx, seriesScope) {\r\n  graphic.Group.call(this);\r\n  this.add(this.createLine(lineData, idx, seriesScope));\r\n\r\n  this._updateEffectSymbol(lineData, idx);\r\n}\r\n\r\nvar effectLineProto = EffectLine.prototype;\r\n\r\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\r\n  return new Line(lineData, idx, seriesScope);\r\n};\r\n\r\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\r\n  var itemModel = lineData.getItemModel(idx);\r\n  var effectModel = itemModel.getModel('effect');\r\n  var size = effectModel.get('symbolSize');\r\n  var symbolType = effectModel.get('symbol');\r\n\r\n  if (!zrUtil.isArray(size)) {\r\n    size = [size, size];\r\n  }\r\n\r\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\r\n  var symbol = this.childAt(1);\r\n\r\n  if (this._symbolType !== symbolType) {\r\n    // Remove previous\r\n    this.remove(symbol);\r\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\r\n    symbol.z2 = 100;\r\n    symbol.culling = true;\r\n    this.add(symbol);\r\n  } // Symbol may be removed if loop is false\r\n\r\n\r\n  if (!symbol) {\r\n    return;\r\n  } // Shadow color is same with color in default\r\n\r\n\r\n  symbol.setStyle('shadowColor', color);\r\n  symbol.setStyle(effectModel.getItemStyle(['color']));\r\n  symbol.attr('scale', size);\r\n  symbol.setColor(color);\r\n  symbol.attr('scale', size);\r\n  this._symbolType = symbolType;\r\n  this._symbolScale = size;\r\n\r\n  this._updateEffectAnimation(lineData, effectModel, idx);\r\n};\r\n\r\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\r\n  var symbol = this.childAt(1);\r\n\r\n  if (!symbol) {\r\n    return;\r\n  }\r\n\r\n  var self = this;\r\n  var points = lineData.getItemLayout(idx);\r\n  var period = effectModel.get('period') * 1000;\r\n  var loop = effectModel.get('loop');\r\n  var constantSpeed = effectModel.get('constantSpeed');\r\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\r\n    return idx / lineData.count() * period / 3;\r\n  });\r\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\r\n\r\n  symbol.ignore = true;\r\n  this.updateAnimationPoints(symbol, points);\r\n\r\n  if (constantSpeed > 0) {\r\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\r\n  }\r\n\r\n  if (period !== this._period || loop !== this._loop) {\r\n    symbol.stopAnimation();\r\n    var delay = delayExpr;\r\n\r\n    if (isDelayFunc) {\r\n      delay = delayExpr(idx);\r\n    }\r\n\r\n    if (symbol.__t > 0) {\r\n      delay = -period * symbol.__t;\r\n    }\r\n\r\n    symbol.__t = 0;\r\n    var animator = symbol.animate('', loop).when(period, {\r\n      __t: 1\r\n    }).delay(delay).during(function () {\r\n      self.updateSymbolPosition(symbol);\r\n    });\r\n\r\n    if (!loop) {\r\n      animator.done(function () {\r\n        self.remove(symbol);\r\n      });\r\n    }\r\n\r\n    animator.start();\r\n  }\r\n\r\n  this._period = period;\r\n  this._loop = loop;\r\n};\r\n\r\neffectLineProto.getLineLength = function (symbol) {\r\n  // Not so accurate\r\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\r\n};\r\n\r\neffectLineProto.updateAnimationPoints = function (symbol, points) {\r\n  symbol.__p1 = points[0];\r\n  symbol.__p2 = points[1];\r\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\r\n};\r\n\r\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\r\n  this.childAt(0).updateData(lineData, idx, seriesScope);\r\n\r\n  this._updateEffectSymbol(lineData, idx);\r\n};\r\n\r\neffectLineProto.updateSymbolPosition = function (symbol) {\r\n  var p1 = symbol.__p1;\r\n  var p2 = symbol.__p2;\r\n  var cp1 = symbol.__cp1;\r\n  var t = symbol.__t;\r\n  var pos = symbol.position;\r\n  var lastPos = [pos[0], pos[1]];\r\n  var quadraticAt = curveUtil.quadraticAt;\r\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\r\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\r\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\r\n\r\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\r\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\r\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2; // enable continuity trail for 'line', 'rect', 'roundRect' symbolType\r\n\r\n  if (this._symbolType === 'line' || this._symbolType === 'rect' || this._symbolType === 'roundRect') {\r\n    if (symbol.__lastT !== undefined && symbol.__lastT < symbol.__t) {\r\n      var scaleY = vec2.dist(lastPos, pos) * 1.05;\r\n      symbol.attr('scale', [symbol.scale[0], scaleY]); // make sure the last segment render within endPoint\r\n\r\n      if (t === 1) {\r\n        pos[0] = lastPos[0] + (pos[0] - lastPos[0]) / 2;\r\n        pos[1] = lastPos[1] + (pos[1] - lastPos[1]) / 2;\r\n      }\r\n    } else if (symbol.__lastT === 1) {\r\n      // After first loop, symbol.__t does NOT start with 0, so connect p1 to pos directly.\r\n      var scaleY = 2 * vec2.dist(p1, pos);\r\n      symbol.attr('scale', [symbol.scale[0], scaleY]);\r\n    } else {\r\n      symbol.attr('scale', this._symbolScale);\r\n    }\r\n  }\r\n\r\n  symbol.__lastT = symbol.__t;\r\n  symbol.ignore = false;\r\n};\r\n\r\neffectLineProto.updateLayout = function (lineData, idx) {\r\n  this.childAt(0).updateLayout(lineData, idx);\r\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\r\n\r\n  this._updateEffectAnimation(lineData, effectModel, idx);\r\n};\r\n\r\nzrUtil.inherits(EffectLine, graphic.Group);\r\nvar _default = EffectLine;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Polyline = require(\"./Polyline\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar EffectLine = require(\"./EffectLine\");\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Provide effect for line\r\n * @module echarts/chart/helper/EffectLine\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @extends {module:echarts/chart/helper/EffectLine}\r\n * @alias {module:echarts/chart/helper/Polyline}\r\n */\r\nfunction EffectPolyline(lineData, idx, seriesScope) {\r\n  EffectLine.call(this, lineData, idx, seriesScope);\r\n  this._lastFrame = 0;\r\n  this._lastFramePercent = 0;\r\n}\r\n\r\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\r\n\r\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\r\n  return new Polyline(lineData, idx, seriesScope);\r\n}; // Overwrite\r\n\r\n\r\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\r\n  this._points = points;\r\n  var accLenArr = [0];\r\n  var len = 0;\r\n\r\n  for (var i = 1; i < points.length; i++) {\r\n    var p1 = points[i - 1];\r\n    var p2 = points[i];\r\n    len += vec2.dist(p1, p2);\r\n    accLenArr.push(len);\r\n  }\r\n\r\n  if (len === 0) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0; i < accLenArr.length; i++) {\r\n    accLenArr[i] /= len;\r\n  }\r\n\r\n  this._offsets = accLenArr;\r\n  this._length = len;\r\n}; // Overwrite\r\n\r\n\r\neffectPolylineProto.getLineLength = function (symbol) {\r\n  return this._length;\r\n}; // Overwrite\r\n\r\n\r\neffectPolylineProto.updateSymbolPosition = function (symbol) {\r\n  var t = symbol.__t;\r\n  var points = this._points;\r\n  var offsets = this._offsets;\r\n  var len = points.length;\r\n\r\n  if (!offsets) {\r\n    // Has length 0\r\n    return;\r\n  }\r\n\r\n  var lastFrame = this._lastFrame;\r\n  var frame;\r\n\r\n  if (t < this._lastFramePercent) {\r\n    // Start from the next frame\r\n    // PENDING start from lastFrame ?\r\n    var start = Math.min(lastFrame + 1, len - 1);\r\n\r\n    for (frame = start; frame >= 0; frame--) {\r\n      if (offsets[frame] <= t) {\r\n        break;\r\n      }\r\n    } // PENDING really need to do this ?\r\n\r\n\r\n    frame = Math.min(frame, len - 2);\r\n  } else {\r\n    for (var frame = lastFrame; frame < len; frame++) {\r\n      if (offsets[frame] > t) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    frame = Math.min(frame - 1, len - 2);\r\n  }\r\n\r\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\r\n  var tx = points[frame + 1][0] - points[frame][0];\r\n  var ty = points[frame + 1][1] - points[frame][1];\r\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\r\n  this._lastFrame = frame;\r\n  this._lastFramePercent = t;\r\n  symbol.ignore = false;\r\n};\r\n\r\nzrUtil.inherits(EffectPolyline, EffectLine);\r\nvar _default = EffectPolyline;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _symbol = require(\"../../util/symbol\");\r\n\r\nvar createSymbol = _symbol.createSymbol;\r\n\r\nvar _graphic = require(\"../../util/graphic\");\r\n\r\nvar Group = _graphic.Group;\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\nvar SymbolClz = require(\"./Symbol\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Symbol with ripple effect\r\n * @module echarts/chart/helper/EffectSymbol\r\n */\r\nvar EFFECT_RIPPLE_NUMBER = 3;\r\n\r\nfunction normalizeSymbolSize(symbolSize) {\r\n  if (!zrUtil.isArray(symbolSize)) {\r\n    symbolSize = [+symbolSize, +symbolSize];\r\n  }\r\n\r\n  return symbolSize;\r\n}\r\n\r\nfunction updateRipplePath(rippleGroup, effectCfg) {\r\n  var color = effectCfg.rippleEffectColor || effectCfg.color;\r\n  rippleGroup.eachChild(function (ripplePath) {\r\n    ripplePath.attr({\r\n      z: effectCfg.z,\r\n      zlevel: effectCfg.zlevel,\r\n      style: {\r\n        stroke: effectCfg.brushType === 'stroke' ? color : null,\r\n        fill: effectCfg.brushType === 'fill' ? color : null\r\n      }\r\n    });\r\n  });\r\n}\r\n/**\r\n * @constructor\r\n * @param {module:echarts/data/List} data\r\n * @param {number} idx\r\n * @extends {module:zrender/graphic/Group}\r\n */\r\n\r\n\r\nfunction EffectSymbol(data, idx) {\r\n  Group.call(this);\r\n  var symbol = new SymbolClz(data, idx);\r\n  var rippleGroup = new Group();\r\n  this.add(symbol);\r\n  this.add(rippleGroup);\r\n\r\n  rippleGroup.beforeUpdate = function () {\r\n    this.attr(symbol.getScale());\r\n  };\r\n\r\n  this.updateData(data, idx);\r\n}\r\n\r\nvar effectSymbolProto = EffectSymbol.prototype;\r\n\r\neffectSymbolProto.stopEffectAnimation = function () {\r\n  this.childAt(1).removeAll();\r\n};\r\n\r\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\r\n  var symbolType = effectCfg.symbolType;\r\n  var color = effectCfg.color;\r\n  var rippleGroup = this.childAt(1);\r\n\r\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\r\n    // If width/height are set too small (e.g., set to 1) on ios10\r\n    // and macOS Sierra, a circle stroke become a rect, no matter what\r\n    // the scale is set. So we set width/height as 2. See #4136.\r\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\r\n    ripplePath.attr({\r\n      style: {\r\n        strokeNoScale: true\r\n      },\r\n      z2: 99,\r\n      silent: true,\r\n      scale: [0.5, 0.5]\r\n    });\r\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\r\n\r\n    ripplePath.animate('', true).when(effectCfg.period, {\r\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\r\n    }).delay(delay).start();\r\n    ripplePath.animateStyle(true).when(effectCfg.period, {\r\n      opacity: 0\r\n    }).delay(delay).start();\r\n    rippleGroup.add(ripplePath);\r\n  }\r\n\r\n  updateRipplePath(rippleGroup, effectCfg);\r\n};\r\n/**\r\n * Update effect symbol\r\n */\r\n\r\n\r\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\r\n  var oldEffectCfg = this._effectCfg;\r\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\r\n\r\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\r\n\r\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\r\n    var propName = DIFFICULT_PROPS[i];\r\n\r\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\r\n      this.stopEffectAnimation();\r\n      this.startEffectAnimation(effectCfg);\r\n      return;\r\n    }\r\n  }\r\n\r\n  updateRipplePath(rippleGroup, effectCfg);\r\n};\r\n/**\r\n * Highlight symbol\r\n */\r\n\r\n\r\neffectSymbolProto.highlight = function () {\r\n  this.trigger('emphasis');\r\n};\r\n/**\r\n * Downplay symbol\r\n */\r\n\r\n\r\neffectSymbolProto.downplay = function () {\r\n  this.trigger('normal');\r\n};\r\n/**\r\n * Update symbol properties\r\n * @param  {module:echarts/data/List} data\r\n * @param  {number} idx\r\n */\r\n\r\n\r\neffectSymbolProto.updateData = function (data, idx) {\r\n  var seriesModel = data.hostModel;\r\n  this.childAt(0).updateData(data, idx);\r\n  var rippleGroup = this.childAt(1);\r\n  var itemModel = data.getItemModel(idx);\r\n  var symbolType = data.getItemVisual(idx, 'symbol');\r\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\r\n  var color = data.getItemVisual(idx, 'color');\r\n  rippleGroup.attr('scale', symbolSize);\r\n  rippleGroup.traverse(function (ripplePath) {\r\n    ripplePath.attr({\r\n      fill: color\r\n    });\r\n  });\r\n  var symbolOffset = itemModel.getShallow('symbolOffset');\r\n\r\n  if (symbolOffset) {\r\n    var pos = rippleGroup.position;\r\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\r\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\r\n  }\r\n\r\n  var symbolRotate = data.getItemVisual(idx, 'symbolRotate');\r\n  rippleGroup.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\r\n  var effectCfg = {};\r\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\r\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\r\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\r\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\r\n  effectCfg.effectOffset = idx / data.count();\r\n  effectCfg.z = itemModel.getShallow('z') || 0;\r\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\r\n  effectCfg.symbolType = symbolType;\r\n  effectCfg.color = color;\r\n  effectCfg.rippleEffectColor = itemModel.get('rippleEffect.color');\r\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\r\n\r\n  if (effectCfg.showEffectOn === 'render') {\r\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\r\n    this._effectCfg = effectCfg;\r\n  } else {\r\n    // Not keep old effect config\r\n    this._effectCfg = null;\r\n    this.stopEffectAnimation();\r\n    var symbol = this.childAt(0);\r\n\r\n    var onEmphasis = function () {\r\n      symbol.highlight();\r\n\r\n      if (effectCfg.showEffectOn !== 'render') {\r\n        this.startEffectAnimation(effectCfg);\r\n      }\r\n    };\r\n\r\n    var onNormal = function () {\r\n      symbol.downplay();\r\n\r\n      if (effectCfg.showEffectOn !== 'render') {\r\n        this.stopEffectAnimation();\r\n      }\r\n    };\r\n\r\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\r\n  }\r\n\r\n  this._effectCfg = effectCfg;\r\n};\r\n\r\neffectSymbolProto.fadeOut = function (cb) {\r\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\r\n  cb && cb();\r\n};\r\n\r\nzrUtil.inherits(EffectSymbol, Group);\r\nvar _default = EffectSymbol;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\r\n\r\nvar lineContain = require(\"zrender/lib/contain/line\");\r\n\r\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// TODO Batch by color\r\nvar LargeLineShape = graphic.extendShape({\r\n  shape: {\r\n    polyline: false,\r\n    curveness: 0,\r\n    segs: []\r\n  },\r\n  buildPath: function (path, shape) {\r\n    var segs = shape.segs;\r\n    var curveness = shape.curveness;\r\n\r\n    if (shape.polyline) {\r\n      for (var i = 0; i < segs.length;) {\r\n        var count = segs[i++];\r\n\r\n        if (count > 0) {\r\n          path.moveTo(segs[i++], segs[i++]);\r\n\r\n          for (var k = 1; k < count; k++) {\r\n            path.lineTo(segs[i++], segs[i++]);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (var i = 0; i < segs.length;) {\r\n        var x0 = segs[i++];\r\n        var y0 = segs[i++];\r\n        var x1 = segs[i++];\r\n        var y1 = segs[i++];\r\n        path.moveTo(x0, y0);\r\n\r\n        if (curveness > 0) {\r\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\r\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\r\n          path.quadraticCurveTo(x2, y2, x1, y1);\r\n        } else {\r\n          path.lineTo(x1, y1);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  findDataIndex: function (x, y) {\r\n    var shape = this.shape;\r\n    var segs = shape.segs;\r\n    var curveness = shape.curveness;\r\n\r\n    if (shape.polyline) {\r\n      var dataIndex = 0;\r\n\r\n      for (var i = 0; i < segs.length;) {\r\n        var count = segs[i++];\r\n\r\n        if (count > 0) {\r\n          var x0 = segs[i++];\r\n          var y0 = segs[i++];\r\n\r\n          for (var k = 1; k < count; k++) {\r\n            var x1 = segs[i++];\r\n            var y1 = segs[i++];\r\n\r\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\r\n              return dataIndex;\r\n            }\r\n          }\r\n        }\r\n\r\n        dataIndex++;\r\n      }\r\n    } else {\r\n      var dataIndex = 0;\r\n\r\n      for (var i = 0; i < segs.length;) {\r\n        var x0 = segs[i++];\r\n        var y0 = segs[i++];\r\n        var x1 = segs[i++];\r\n        var y1 = segs[i++];\r\n\r\n        if (curveness > 0) {\r\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\r\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\r\n\r\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\r\n            return dataIndex;\r\n          }\r\n        } else {\r\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\r\n            return dataIndex;\r\n          }\r\n        }\r\n\r\n        dataIndex++;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n});\r\n\r\nfunction LargeLineDraw() {\r\n  this.group = new graphic.Group();\r\n}\r\n\r\nvar largeLineProto = LargeLineDraw.prototype;\r\n\r\nlargeLineProto.isPersistent = function () {\r\n  return !this._incremental;\r\n};\r\n/**\r\n * Update symbols draw by new data\r\n * @param {module:echarts/data/List} data\r\n */\r\n\r\n\r\nlargeLineProto.updateData = function (data) {\r\n  this.group.removeAll();\r\n  var lineEl = new LargeLineShape({\r\n    rectHover: true,\r\n    cursor: 'default'\r\n  });\r\n  lineEl.setShape({\r\n    segs: data.getLayout('linesPoints')\r\n  });\r\n\r\n  this._setCommon(lineEl, data); // Add back\r\n\r\n\r\n  this.group.add(lineEl);\r\n  this._incremental = null;\r\n};\r\n/**\r\n * @override\r\n */\r\n\r\n\r\nlargeLineProto.incrementalPrepareUpdate = function (data) {\r\n  this.group.removeAll();\r\n\r\n  this._clearIncremental();\r\n\r\n  if (data.count() > 5e5) {\r\n    if (!this._incremental) {\r\n      this._incremental = new IncrementalDisplayable({\r\n        silent: true\r\n      });\r\n    }\r\n\r\n    this.group.add(this._incremental);\r\n  } else {\r\n    this._incremental = null;\r\n  }\r\n};\r\n/**\r\n * @override\r\n */\r\n\r\n\r\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\r\n  var lineEl = new LargeLineShape();\r\n  lineEl.setShape({\r\n    segs: data.getLayout('linesPoints')\r\n  });\r\n\r\n  this._setCommon(lineEl, data, !!this._incremental);\r\n\r\n  if (!this._incremental) {\r\n    lineEl.rectHover = true;\r\n    lineEl.cursor = 'default';\r\n    lineEl.__startIndex = taskParams.start;\r\n    this.group.add(lineEl);\r\n  } else {\r\n    this._incremental.addDisplayable(lineEl, true);\r\n  }\r\n};\r\n/**\r\n * @override\r\n */\r\n\r\n\r\nlargeLineProto.remove = function () {\r\n  this._clearIncremental();\r\n\r\n  this._incremental = null;\r\n  this.group.removeAll();\r\n};\r\n\r\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\r\n  var hostModel = data.hostModel;\r\n  lineEl.setShape({\r\n    polyline: hostModel.get('polyline'),\r\n    curveness: hostModel.get('lineStyle.curveness')\r\n  });\r\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\r\n  lineEl.style.strokeNoScale = true;\r\n  var visualColor = data.getVisual('color');\r\n\r\n  if (visualColor) {\r\n    lineEl.setStyle('stroke', visualColor);\r\n  }\r\n\r\n  lineEl.setStyle('fill');\r\n\r\n  if (!isIncremental) {\r\n    // Enable tooltip\r\n    // PENDING May have performance issue when path is extremely large\r\n    lineEl.seriesIndex = hostModel.seriesIndex;\r\n    lineEl.on('mousemove', function (e) {\r\n      lineEl.dataIndex = null;\r\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\r\n\r\n      if (dataIndex > 0) {\r\n        // Provide dataIndex for tooltip\r\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nlargeLineProto._clearIncremental = function () {\r\n  var incremental = this._incremental;\r\n\r\n  if (incremental) {\r\n    incremental.clearDisplaybles();\r\n  }\r\n};\r\n\r\nvar _default = LargeLineDraw;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _symbol = require(\"../../util/symbol\");\r\n\r\nvar createSymbol = _symbol.createSymbol;\r\n\r\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Float32Array */\r\n// TODO Batch by color\r\nvar BOOST_SIZE_THRESHOLD = 4;\r\nvar LargeSymbolPath = graphic.extendShape({\r\n  shape: {\r\n    points: null\r\n  },\r\n  symbolProxy: null,\r\n  softClipShape: null,\r\n  buildPath: function (path, shape) {\r\n    var points = shape.points;\r\n    var size = shape.size;\r\n    var symbolProxy = this.symbolProxy;\r\n    var symbolProxyShape = symbolProxy.shape;\r\n    var ctx = path.getContext ? path.getContext() : path;\r\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\r\n\r\n    if (canBoost) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < points.length;) {\r\n      var x = points[i++];\r\n      var y = points[i++];\r\n\r\n      if (isNaN(x) || isNaN(y)) {\r\n        continue;\r\n      }\r\n\r\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\r\n        continue;\r\n      }\r\n\r\n      symbolProxyShape.x = x - size[0] / 2;\r\n      symbolProxyShape.y = y - size[1] / 2;\r\n      symbolProxyShape.width = size[0];\r\n      symbolProxyShape.height = size[1];\r\n      symbolProxy.buildPath(path, symbolProxyShape, true);\r\n    }\r\n  },\r\n  afterBrush: function (ctx) {\r\n    var shape = this.shape;\r\n    var points = shape.points;\r\n    var size = shape.size;\r\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\r\n\r\n    if (!canBoost) {\r\n      return;\r\n    }\r\n\r\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\r\n\r\n    for (var i = 0; i < points.length;) {\r\n      var x = points[i++];\r\n      var y = points[i++];\r\n\r\n      if (isNaN(x) || isNaN(y)) {\r\n        continue;\r\n      }\r\n\r\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\r\n        continue;\r\n      } // fillRect is faster than building a rect path and draw.\r\n      // And it support light globalCompositeOperation.\r\n\r\n\r\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\r\n    }\r\n\r\n    this.restoreTransform(ctx);\r\n  },\r\n  findDataIndex: function (x, y) {\r\n    // TODO ???\r\n    // Consider transform\r\n    var shape = this.shape;\r\n    var points = shape.points;\r\n    var size = shape.size;\r\n    var w = Math.max(size[0], 4);\r\n    var h = Math.max(size[1], 4); // Not consider transform\r\n    // Treat each element as a rect\r\n    // top down traverse\r\n\r\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\r\n      var i = idx * 2;\r\n      var x0 = points[i] - w / 2;\r\n      var y0 = points[i + 1] - h / 2;\r\n\r\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\r\n        return idx;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n});\r\n\r\nfunction LargeSymbolDraw() {\r\n  this.group = new graphic.Group();\r\n}\r\n\r\nvar largeSymbolProto = LargeSymbolDraw.prototype;\r\n\r\nlargeSymbolProto.isPersistent = function () {\r\n  return !this._incremental;\r\n};\r\n/**\r\n * Update symbols draw by new data\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} opt\r\n * @param {Object} [opt.clipShape]\r\n */\r\n\r\n\r\nlargeSymbolProto.updateData = function (data, opt) {\r\n  this.group.removeAll();\r\n  var symbolEl = new LargeSymbolPath({\r\n    rectHover: true,\r\n    cursor: 'default'\r\n  });\r\n  symbolEl.setShape({\r\n    points: data.getLayout('symbolPoints')\r\n  });\r\n\r\n  this._setCommon(symbolEl, data, false, opt);\r\n\r\n  this.group.add(symbolEl);\r\n  this._incremental = null;\r\n};\r\n\r\nlargeSymbolProto.updateLayout = function (data) {\r\n  if (this._incremental) {\r\n    return;\r\n  }\r\n\r\n  var points = data.getLayout('symbolPoints');\r\n  this.group.eachChild(function (child) {\r\n    if (child.startIndex != null) {\r\n      var len = (child.endIndex - child.startIndex) * 2;\r\n      var byteOffset = child.startIndex * 4 * 2;\r\n      points = new Float32Array(points.buffer, byteOffset, len);\r\n    }\r\n\r\n    child.setShape('points', points);\r\n  });\r\n};\r\n\r\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\r\n  this.group.removeAll();\r\n\r\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\r\n  // PENDING Incremental data?\r\n\r\n\r\n  if (data.count() > 2e6) {\r\n    if (!this._incremental) {\r\n      this._incremental = new IncrementalDisplayable({\r\n        silent: true\r\n      });\r\n    }\r\n\r\n    this.group.add(this._incremental);\r\n  } else {\r\n    this._incremental = null;\r\n  }\r\n};\r\n\r\nlargeSymbolProto.incrementalUpdate = function (taskParams, data, opt) {\r\n  var symbolEl;\r\n\r\n  if (this._incremental) {\r\n    symbolEl = new LargeSymbolPath();\r\n\r\n    this._incremental.addDisplayable(symbolEl, true);\r\n  } else {\r\n    symbolEl = new LargeSymbolPath({\r\n      rectHover: true,\r\n      cursor: 'default',\r\n      startIndex: taskParams.start,\r\n      endIndex: taskParams.end\r\n    });\r\n    symbolEl.incremental = true;\r\n    this.group.add(symbolEl);\r\n  }\r\n\r\n  symbolEl.setShape({\r\n    points: data.getLayout('symbolPoints')\r\n  });\r\n\r\n  this._setCommon(symbolEl, data, !!this._incremental, opt);\r\n};\r\n\r\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental, opt) {\r\n  var hostModel = data.hostModel;\r\n  opt = opt || {}; // TODO\r\n  // if (data.hasItemVisual.symbolSize) {\r\n  //     // TODO typed array?\r\n  //     symbolEl.setShape('sizes', data.mapArray(\r\n  //         function (idx) {\r\n  //             var size = data.getItemVisual(idx, 'symbolSize');\r\n  //             return (size instanceof Array) ? size : [size, size];\r\n  //         }\r\n  //     ));\r\n  // }\r\n  // else {\r\n\r\n  var size = data.getVisual('symbolSize');\r\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\r\n\r\n  symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\r\n\r\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\r\n\r\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\r\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\r\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\r\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\r\n  var visualColor = data.getVisual('color');\r\n\r\n  if (visualColor) {\r\n    symbolEl.setColor(visualColor);\r\n  }\r\n\r\n  if (!isIncremental) {\r\n    // Enable tooltip\r\n    // PENDING May have performance issue when path is extremely large\r\n    symbolEl.seriesIndex = hostModel.seriesIndex;\r\n    symbolEl.on('mousemove', function (e) {\r\n      symbolEl.dataIndex = null;\r\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\r\n\r\n      if (dataIndex >= 0) {\r\n        // Provide dataIndex for tooltip\r\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nlargeSymbolProto.remove = function () {\r\n  this._clearIncremental();\r\n\r\n  this._incremental = null;\r\n  this.group.removeAll();\r\n};\r\n\r\nlargeSymbolProto._clearIncremental = function () {\r\n  var incremental = this._incremental;\r\n\r\n  if (incremental) {\r\n    incremental.clearDisplaybles();\r\n  }\r\n};\r\n\r\nvar _default = LargeSymbolDraw;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar vector = require(\"zrender/lib/core/vector\");\r\n\r\nvar symbolUtil = require(\"../../util/symbol\");\r\n\r\nvar LinePath = require(\"./LinePath\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar round = _number.round;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/chart/helper/Line\r\n */\r\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\r\n\r\nfunction makeSymbolTypeKey(symbolCategory) {\r\n  return '_' + symbolCategory + 'Type';\r\n}\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction createSymbol(name, lineData, idx) {\r\n  var symbolType = lineData.getItemVisual(idx, name);\r\n\r\n  if (!symbolType || symbolType === 'none') {\r\n    return;\r\n  }\r\n\r\n  var color = lineData.getItemVisual(idx, 'color');\r\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\r\n  var symbolRotate = lineData.getItemVisual(idx, name + 'Rotate');\r\n\r\n  if (!zrUtil.isArray(symbolSize)) {\r\n    symbolSize = [symbolSize, symbolSize];\r\n  }\r\n\r\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color); // rotate by default if symbolRotate is not specified or NaN\r\n\r\n  symbolPath.__specifiedRotation = symbolRotate == null || isNaN(symbolRotate) ? void 0 : +symbolRotate * Math.PI / 180 || 0;\r\n  symbolPath.name = name;\r\n  return symbolPath;\r\n}\r\n\r\nfunction createLine(points) {\r\n  var line = new LinePath({\r\n    name: 'line',\r\n    subPixelOptimize: true\r\n  });\r\n  setLinePoints(line.shape, points);\r\n  return line;\r\n}\r\n\r\nfunction setLinePoints(targetShape, points) {\r\n  targetShape.x1 = points[0][0];\r\n  targetShape.y1 = points[0][1];\r\n  targetShape.x2 = points[1][0];\r\n  targetShape.y2 = points[1][1];\r\n  targetShape.percent = 1;\r\n  var cp1 = points[2];\r\n\r\n  if (cp1) {\r\n    targetShape.cpx1 = cp1[0];\r\n    targetShape.cpy1 = cp1[1];\r\n  } else {\r\n    targetShape.cpx1 = NaN;\r\n    targetShape.cpy1 = NaN;\r\n  }\r\n}\r\n\r\nfunction updateSymbolAndLabelBeforeLineUpdate() {\r\n  var lineGroup = this;\r\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\r\n  var symbolTo = lineGroup.childOfName('toSymbol');\r\n  var label = lineGroup.childOfName('label'); // Quick reject\r\n\r\n  if (!symbolFrom && !symbolTo && label.ignore) {\r\n    return;\r\n  }\r\n\r\n  var invScale = 1;\r\n  var parentNode = this.parent;\r\n\r\n  while (parentNode) {\r\n    if (parentNode.scale) {\r\n      invScale /= parentNode.scale[0];\r\n    }\r\n\r\n    parentNode = parentNode.parent;\r\n  }\r\n\r\n  var line = lineGroup.childOfName('line'); // If line not changed\r\n  // FIXME Parent scale changed\r\n\r\n  if (!this.__dirty && !line.__dirty) {\r\n    return;\r\n  }\r\n\r\n  var percent = line.shape.percent;\r\n  var fromPos = line.pointAt(0);\r\n  var toPos = line.pointAt(percent);\r\n  var d = vector.sub([], toPos, fromPos);\r\n  vector.normalize(d, d);\r\n\r\n  if (symbolFrom) {\r\n    symbolFrom.attr('position', fromPos); // Fix #12388\r\n    // when symbol is set to be 'arrow' in markLine,\r\n    // symbolRotate value will be ignored, and compulsively use tangent angle.\r\n    // rotate by default if symbol rotation is not specified\r\n\r\n    var specifiedRotation = symbolFrom.__specifiedRotation;\r\n\r\n    if (specifiedRotation == null) {\r\n      var tangent = line.tangentAt(0);\r\n      symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\r\n    } else {\r\n      symbolFrom.attr('rotation', specifiedRotation);\r\n    }\r\n\r\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\r\n  }\r\n\r\n  if (symbolTo) {\r\n    symbolTo.attr('position', toPos); // Fix #12388\r\n    // when symbol is set to be 'arrow' in markLine,\r\n    // symbolRotate value will be ignored, and compulsively use tangent angle.\r\n    // rotate by default if symbol rotation is not specified\r\n\r\n    var specifiedRotation = symbolTo.__specifiedRotation;\r\n\r\n    if (specifiedRotation == null) {\r\n      var tangent = line.tangentAt(1);\r\n      symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\r\n    } else {\r\n      symbolTo.attr('rotation', specifiedRotation);\r\n    }\r\n\r\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\r\n  }\r\n\r\n  if (!label.ignore) {\r\n    label.attr('position', toPos);\r\n    var textPosition;\r\n    var textAlign;\r\n    var textVerticalAlign;\r\n    var textOrigin;\r\n    var distance = label.__labelDistance;\r\n    var distanceX = distance[0] * invScale;\r\n    var distanceY = distance[1] * invScale;\r\n    var halfPercent = percent / 2;\r\n    var tangent = line.tangentAt(halfPercent);\r\n    var n = [tangent[1], -tangent[0]];\r\n    var cp = line.pointAt(halfPercent);\r\n\r\n    if (n[1] > 0) {\r\n      n[0] = -n[0];\r\n      n[1] = -n[1];\r\n    }\r\n\r\n    var dir = tangent[0] < 0 ? -1 : 1;\r\n\r\n    if (label.__position !== 'start' && label.__position !== 'end') {\r\n      var rotation = -Math.atan2(tangent[1], tangent[0]);\r\n\r\n      if (toPos[0] < fromPos[0]) {\r\n        rotation = Math.PI + rotation;\r\n      }\r\n\r\n      label.attr('rotation', rotation);\r\n    }\r\n\r\n    var dy;\r\n\r\n    switch (label.__position) {\r\n      case 'insideStartTop':\r\n      case 'insideMiddleTop':\r\n      case 'insideEndTop':\r\n      case 'middle':\r\n        dy = -distanceY;\r\n        textVerticalAlign = 'bottom';\r\n        break;\r\n\r\n      case 'insideStartBottom':\r\n      case 'insideMiddleBottom':\r\n      case 'insideEndBottom':\r\n        dy = distanceY;\r\n        textVerticalAlign = 'top';\r\n        break;\r\n\r\n      default:\r\n        dy = 0;\r\n        textVerticalAlign = 'middle';\r\n    }\r\n\r\n    switch (label.__position) {\r\n      case 'end':\r\n        textPosition = [d[0] * distanceX + toPos[0], d[1] * distanceY + toPos[1]];\r\n        textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\r\n        textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\r\n        break;\r\n\r\n      case 'start':\r\n        textPosition = [-d[0] * distanceX + fromPos[0], -d[1] * distanceY + fromPos[1]];\r\n        textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\r\n        textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\r\n        break;\r\n\r\n      case 'insideStartTop':\r\n      case 'insideStart':\r\n      case 'insideStartBottom':\r\n        textPosition = [distanceX * dir + fromPos[0], fromPos[1] + dy];\r\n        textAlign = tangent[0] < 0 ? 'right' : 'left';\r\n        textOrigin = [-distanceX * dir, -dy];\r\n        break;\r\n\r\n      case 'insideMiddleTop':\r\n      case 'insideMiddle':\r\n      case 'insideMiddleBottom':\r\n      case 'middle':\r\n        textPosition = [cp[0], cp[1] + dy];\r\n        textAlign = 'center';\r\n        textOrigin = [0, -dy];\r\n        break;\r\n\r\n      case 'insideEndTop':\r\n      case 'insideEnd':\r\n      case 'insideEndBottom':\r\n        textPosition = [-distanceX * dir + toPos[0], toPos[1] + dy];\r\n        textAlign = tangent[0] >= 0 ? 'right' : 'left';\r\n        textOrigin = [distanceX * dir, -dy];\r\n        break;\r\n    }\r\n\r\n    label.attr({\r\n      style: {\r\n        // Use the user specified text align and baseline first\r\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\r\n        textAlign: label.__textAlign || textAlign\r\n      },\r\n      position: textPosition,\r\n      scale: [invScale, invScale],\r\n      origin: textOrigin\r\n    });\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n * @extends {module:zrender/graphic/Group}\r\n * @alias {module:echarts/chart/helper/Line}\r\n */\r\n\r\n\r\nfunction Line(lineData, idx, seriesScope) {\r\n  graphic.Group.call(this);\r\n\r\n  this._createLine(lineData, idx, seriesScope);\r\n}\r\n\r\nvar lineProto = Line.prototype; // Update symbol position and rotation\r\n\r\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\r\n\r\nlineProto._createLine = function (lineData, idx, seriesScope) {\r\n  var seriesModel = lineData.hostModel;\r\n  var linePoints = lineData.getItemLayout(idx);\r\n  var line = createLine(linePoints);\r\n  line.shape.percent = 0;\r\n  graphic.initProps(line, {\r\n    shape: {\r\n      percent: 1\r\n    }\r\n  }, seriesModel, idx);\r\n  this.add(line);\r\n  var label = new graphic.Text({\r\n    name: 'label',\r\n    // FIXME\r\n    // Temporary solution for `focusNodeAdjacency`.\r\n    // line label do not use the opacity of lineStyle.\r\n    lineLabelOriginalOpacity: 1\r\n  });\r\n  this.add(label);\r\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\r\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\r\n    // it will be updated after line#update.\r\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\r\n\r\n    this.add(symbol);\r\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\r\n  }, this);\r\n\r\n  this._updateCommonStl(lineData, idx, seriesScope);\r\n};\r\n\r\nlineProto.updateData = function (lineData, idx, seriesScope) {\r\n  var seriesModel = lineData.hostModel;\r\n  var line = this.childOfName('line');\r\n  var linePoints = lineData.getItemLayout(idx);\r\n  var target = {\r\n    shape: {}\r\n  };\r\n  setLinePoints(target.shape, linePoints);\r\n  graphic.updateProps(line, target, seriesModel, idx);\r\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\r\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\r\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\r\n\r\n    if (this[key] !== symbolType) {\r\n      this.remove(this.childOfName(symbolCategory));\r\n      var symbol = createSymbol(symbolCategory, lineData, idx);\r\n      this.add(symbol);\r\n    }\r\n\r\n    this[key] = symbolType;\r\n  }, this);\r\n\r\n  this._updateCommonStl(lineData, idx, seriesScope);\r\n};\r\n\r\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\r\n  var seriesModel = lineData.hostModel;\r\n  var line = this.childOfName('line');\r\n  var lineStyle = seriesScope && seriesScope.lineStyle;\r\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\r\n  var labelModel = seriesScope && seriesScope.labelModel;\r\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\r\n\r\n  if (!seriesScope || lineData.hasItemOption) {\r\n    var itemModel = lineData.getItemModel(idx);\r\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\r\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\r\n    labelModel = itemModel.getModel('label');\r\n    hoverLabelModel = itemModel.getModel('emphasis.label');\r\n  }\r\n\r\n  var visualColor = lineData.getItemVisual(idx, 'color');\r\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\r\n  line.useStyle(zrUtil.defaults({\r\n    strokeNoScale: true,\r\n    fill: 'none',\r\n    stroke: visualColor,\r\n    opacity: visualOpacity\r\n  }, lineStyle));\r\n  line.hoverStyle = hoverLineStyle; // Update symbol\r\n\r\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\r\n    var symbol = this.childOfName(symbolCategory);\r\n\r\n    if (symbol) {\r\n      symbol.setColor(visualColor);\r\n      symbol.setStyle({\r\n        opacity: visualOpacity\r\n      });\r\n    }\r\n  }, this);\r\n  var showLabel = labelModel.getShallow('show');\r\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\r\n  var label = this.childOfName('label');\r\n  var defaultLabelColor;\r\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\r\n\r\n  if (showLabel || hoverShowLabel) {\r\n    defaultLabelColor = visualColor || '#000';\r\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\r\n\r\n    if (baseText == null) {\r\n      var rawVal = seriesModel.getRawValue(idx);\r\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\r\n    }\r\n  }\r\n\r\n  var normalText = showLabel ? baseText : null;\r\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\r\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\r\n  // values have to be set on `normalStyle`.\r\n\r\n  if (normalText != null || emphasisText != null) {\r\n    graphic.setTextStyle(label.style, labelModel, {\r\n      text: normalText\r\n    }, {\r\n      autoColor: defaultLabelColor\r\n    });\r\n    label.__textAlign = labelStyle.textAlign;\r\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\r\n\r\n    label.__position = labelModel.get('position') || 'middle';\r\n    var distance = labelModel.get('distance');\r\n\r\n    if (!zrUtil.isArray(distance)) {\r\n      distance = [distance, distance];\r\n    }\r\n\r\n    label.__labelDistance = distance;\r\n  }\r\n\r\n  if (emphasisText != null) {\r\n    // Only these properties supported in this emphasis style here.\r\n    label.hoverStyle = {\r\n      text: emphasisText,\r\n      textFill: hoverLabelModel.getTextColor(true),\r\n      // For merging hover style to normal style, do not use\r\n      // `hoverLabelModel.getFont()` here.\r\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\r\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\r\n      fontSize: hoverLabelModel.getShallow('fontSize'),\r\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\r\n    };\r\n  } else {\r\n    label.hoverStyle = {\r\n      text: null\r\n    };\r\n  }\r\n\r\n  label.ignore = !showLabel && !hoverShowLabel;\r\n  graphic.setHoverStyle(this);\r\n};\r\n\r\nlineProto.highlight = function () {\r\n  this.trigger('emphasis');\r\n};\r\n\r\nlineProto.downplay = function () {\r\n  this.trigger('normal');\r\n};\r\n\r\nlineProto.updateLayout = function (lineData, idx) {\r\n  this.setLinePoints(lineData.getItemLayout(idx));\r\n};\r\n\r\nlineProto.setLinePoints = function (points) {\r\n  var linePath = this.childOfName('line');\r\n  setLinePoints(linePath.shape, points);\r\n  linePath.dirty();\r\n};\r\n\r\nzrUtil.inherits(Line, graphic.Group);\r\nvar _default = Line;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar LineGroup = require(\"./Line\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/chart/helper/LineDraw\r\n */\r\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\r\n\r\n/**\r\n * @alias module:echarts/component/marker/LineDraw\r\n * @constructor\r\n */\r\nfunction LineDraw(ctor) {\r\n  this._ctor = ctor || LineGroup;\r\n  this.group = new graphic.Group();\r\n}\r\n\r\nvar lineDrawProto = LineDraw.prototype;\r\n\r\nlineDrawProto.isPersistent = function () {\r\n  return true;\r\n};\r\n/**\r\n * @param {module:echarts/data/List} lineData\r\n */\r\n\r\n\r\nlineDrawProto.updateData = function (lineData) {\r\n  var lineDraw = this;\r\n  var group = lineDraw.group;\r\n  var oldLineData = lineDraw._lineData;\r\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\r\n  // stream mode to normal mode, where previous elements should be removed.\r\n\r\n  if (!oldLineData) {\r\n    group.removeAll();\r\n  }\r\n\r\n  var seriesScope = makeSeriesScope(lineData);\r\n  lineData.diff(oldLineData).add(function (idx) {\r\n    doAdd(lineDraw, lineData, idx, seriesScope);\r\n  }).update(function (newIdx, oldIdx) {\r\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\r\n  }).remove(function (idx) {\r\n    group.remove(oldLineData.getItemGraphicEl(idx));\r\n  }).execute();\r\n};\r\n\r\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\r\n  var itemLayout = lineData.getItemLayout(idx);\r\n\r\n  if (!lineNeedsDraw(itemLayout)) {\r\n    return;\r\n  }\r\n\r\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\r\n  lineData.setItemGraphicEl(idx, el);\r\n  lineDraw.group.add(el);\r\n}\r\n\r\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\r\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\r\n\r\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\r\n    lineDraw.group.remove(itemEl);\r\n    return;\r\n  }\r\n\r\n  if (!itemEl) {\r\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\r\n  } else {\r\n    itemEl.updateData(newLineData, newIdx, seriesScope);\r\n  }\r\n\r\n  newLineData.setItemGraphicEl(newIdx, itemEl);\r\n  lineDraw.group.add(itemEl);\r\n}\r\n\r\nlineDrawProto.updateLayout = function () {\r\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\r\n\r\n  if (!lineData) {\r\n    return;\r\n  }\r\n\r\n  lineData.eachItemGraphicEl(function (el, idx) {\r\n    el.updateLayout(lineData, idx);\r\n  }, this);\r\n};\r\n\r\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\r\n  this._seriesScope = makeSeriesScope(lineData);\r\n  this._lineData = null;\r\n  this.group.removeAll();\r\n};\r\n\r\nfunction isEffectObject(el) {\r\n  return el.animators && el.animators.length > 0;\r\n}\r\n\r\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\r\n  function updateIncrementalAndHover(el) {\r\n    if (!el.isGroup && !isEffectObject(el)) {\r\n      el.incremental = el.useHoverLayer = true;\r\n    }\r\n  }\r\n\r\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\r\n    var itemLayout = lineData.getItemLayout(idx);\r\n\r\n    if (lineNeedsDraw(itemLayout)) {\r\n      var el = new this._ctor(lineData, idx, this._seriesScope);\r\n      el.traverse(updateIncrementalAndHover);\r\n      this.group.add(el);\r\n      lineData.setItemGraphicEl(idx, el);\r\n    }\r\n  }\r\n};\r\n\r\nfunction makeSeriesScope(lineData) {\r\n  var hostModel = lineData.hostModel;\r\n  return {\r\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\r\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\r\n    labelModel: hostModel.getModel('label'),\r\n    hoverLabelModel: hostModel.getModel('emphasis.label')\r\n  };\r\n}\r\n\r\nlineDrawProto.remove = function () {\r\n  this._clearIncremental();\r\n\r\n  this._incremental = null;\r\n  this.group.removeAll();\r\n};\r\n\r\nlineDrawProto._clearIncremental = function () {\r\n  var incremental = this._incremental;\r\n\r\n  if (incremental) {\r\n    incremental.clearDisplaybles();\r\n  }\r\n};\r\n\r\nfunction isPointNaN(pt) {\r\n  return isNaN(pt[0]) || isNaN(pt[1]);\r\n}\r\n\r\nfunction lineNeedsDraw(pts) {\r\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\r\n}\r\n\r\nvar _default = LineDraw;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Line path for bezier and straight line draw\r\n */\r\nvar straightLineProto = graphic.Line.prototype;\r\nvar bezierCurveProto = graphic.BezierCurve.prototype;\r\n\r\nfunction isLine(shape) {\r\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\r\n}\r\n\r\nvar _default = graphic.extendShape({\r\n  type: 'ec-line',\r\n  style: {\r\n    stroke: '#000',\r\n    fill: null\r\n  },\r\n  shape: {\r\n    x1: 0,\r\n    y1: 0,\r\n    x2: 0,\r\n    y2: 0,\r\n    percent: 1,\r\n    cpx1: null,\r\n    cpy1: null\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    this[isLine(shape) ? '_buildPathLine' : '_buildPathCurve'](ctx, shape);\r\n  },\r\n  _buildPathLine: straightLineProto.buildPath,\r\n  _buildPathCurve: bezierCurveProto.buildPath,\r\n  pointAt: function (t) {\r\n    return this[isLine(this.shape) ? '_pointAtLine' : '_pointAtCurve'](t);\r\n  },\r\n  _pointAtLine: straightLineProto.pointAt,\r\n  _pointAtCurve: bezierCurveProto.pointAt,\r\n  tangentAt: function (t) {\r\n    var shape = this.shape;\r\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : this._tangentAtCurve(t);\r\n    return vec2.normalize(p, p);\r\n  },\r\n  _tangentAtCurve: bezierCurveProto.tangentAt\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/chart/helper/Line\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @extends {module:zrender/graphic/Group}\r\n * @alias {module:echarts/chart/helper/Polyline}\r\n */\r\nfunction Polyline(lineData, idx, seriesScope) {\r\n  graphic.Group.call(this);\r\n\r\n  this._createPolyline(lineData, idx, seriesScope);\r\n}\r\n\r\nvar polylineProto = Polyline.prototype;\r\n\r\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\r\n  // var seriesModel = lineData.hostModel;\r\n  var points = lineData.getItemLayout(idx);\r\n  var line = new graphic.Polyline({\r\n    shape: {\r\n      points: points\r\n    }\r\n  });\r\n  this.add(line);\r\n\r\n  this._updateCommonStl(lineData, idx, seriesScope);\r\n};\r\n\r\npolylineProto.updateData = function (lineData, idx, seriesScope) {\r\n  var seriesModel = lineData.hostModel;\r\n  var line = this.childAt(0);\r\n  var target = {\r\n    shape: {\r\n      points: lineData.getItemLayout(idx)\r\n    }\r\n  };\r\n  graphic.updateProps(line, target, seriesModel, idx);\r\n\r\n  this._updateCommonStl(lineData, idx, seriesScope);\r\n};\r\n\r\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\r\n  var line = this.childAt(0);\r\n  var itemModel = lineData.getItemModel(idx);\r\n  var visualColor = lineData.getItemVisual(idx, 'color');\r\n  var lineStyle = seriesScope && seriesScope.lineStyle;\r\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\r\n\r\n  if (!seriesScope || lineData.hasItemOption) {\r\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\r\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\r\n  }\r\n\r\n  line.useStyle(zrUtil.defaults({\r\n    strokeNoScale: true,\r\n    fill: 'none',\r\n    stroke: visualColor\r\n  }, lineStyle));\r\n  line.hoverStyle = hoverLineStyle;\r\n  graphic.setHoverStyle(this);\r\n};\r\n\r\npolylineProto.updateLayout = function (lineData, idx) {\r\n  var polyline = this.childAt(0);\r\n  polyline.setShape('points', lineData.getItemLayout(idx));\r\n};\r\n\r\nzrUtil.inherits(Polyline, graphic.Group);\r\nvar _default = Polyline;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _symbol = require(\"../../util/symbol\");\r\n\r\nvar createSymbol = _symbol.createSymbol;\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\nvar _labelHelper = require(\"./labelHelper\");\r\n\r\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/chart/helper/Symbol\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @alias {module:echarts/chart/helper/Symbol}\r\n * @param {module:echarts/data/List} data\r\n * @param {number} idx\r\n * @extends {module:zrender/graphic/Group}\r\n */\r\nfunction SymbolClz(data, idx, seriesScope) {\r\n  graphic.Group.call(this);\r\n  this.updateData(data, idx, seriesScope);\r\n}\r\n\r\nvar symbolProto = SymbolClz.prototype;\r\n/**\r\n * @public\r\n * @static\r\n * @param {module:echarts/data/List} data\r\n * @param {number} dataIndex\r\n * @return {Array.<number>} [width, height]\r\n */\r\n\r\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\r\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\r\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\r\n};\r\n\r\nfunction getScale(symbolSize) {\r\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\r\n}\r\n\r\nfunction driftSymbol(dx, dy) {\r\n  this.parent.drift(dx, dy);\r\n}\r\n\r\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\r\n  // Remove paths created before\r\n  this.removeAll();\r\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\r\n  //     symbolType, -0.5, -0.5, 1, 1, color\r\n  // );\r\n  // If width/height are set too small (e.g., set to 1) on ios10\r\n  // and macOS Sierra, a circle stroke become a rect, no matter what\r\n  // the scale is set. So we set width/height as 2. See #4150.\r\n\r\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\r\n  symbolPath.attr({\r\n    z2: 100,\r\n    culling: true,\r\n    scale: getScale(symbolSize)\r\n  }); // Rewrite drift method\r\n\r\n  symbolPath.drift = driftSymbol;\r\n  this._symbolType = symbolType;\r\n  this.add(symbolPath);\r\n};\r\n/**\r\n * Stop animation\r\n * @param {boolean} toLastFrame\r\n */\r\n\r\n\r\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\r\n  this.childAt(0).stopAnimation(toLastFrame);\r\n};\r\n/**\r\n * FIXME:\r\n * Caution: This method breaks the encapsulation of this module,\r\n * but it indeed brings convenience. So do not use the method\r\n * unless you detailedly know all the implements of `Symbol`,\r\n * especially animation.\r\n *\r\n * Get symbol path element.\r\n */\r\n\r\n\r\nsymbolProto.getSymbolPath = function () {\r\n  return this.childAt(0);\r\n};\r\n/**\r\n * Get scale(aka, current symbol size).\r\n * Including the change caused by animation\r\n */\r\n\r\n\r\nsymbolProto.getScale = function () {\r\n  return this.childAt(0).scale;\r\n};\r\n/**\r\n * Highlight symbol\r\n */\r\n\r\n\r\nsymbolProto.highlight = function () {\r\n  this.childAt(0).trigger('emphasis');\r\n};\r\n/**\r\n * Downplay symbol\r\n */\r\n\r\n\r\nsymbolProto.downplay = function () {\r\n  this.childAt(0).trigger('normal');\r\n};\r\n/**\r\n * @param {number} zlevel\r\n * @param {number} z\r\n */\r\n\r\n\r\nsymbolProto.setZ = function (zlevel, z) {\r\n  var symbolPath = this.childAt(0);\r\n  symbolPath.zlevel = zlevel;\r\n  symbolPath.z = z;\r\n};\r\n\r\nsymbolProto.setDraggable = function (draggable) {\r\n  var symbolPath = this.childAt(0);\r\n  symbolPath.draggable = draggable;\r\n  symbolPath.cursor = draggable ? 'move' : symbolPath.cursor;\r\n};\r\n/**\r\n * Update symbol properties\r\n * @param {module:echarts/data/List} data\r\n * @param {number} idx\r\n * @param {Object} [seriesScope]\r\n * @param {Object} [seriesScope.itemStyle]\r\n * @param {Object} [seriesScope.hoverItemStyle]\r\n * @param {Object} [seriesScope.symbolRotate]\r\n * @param {Object} [seriesScope.symbolOffset]\r\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\r\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\r\n * @param {boolean} [seriesScope.hoverAnimation]\r\n * @param {Object} [seriesScope.cursorStyle]\r\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\r\n * @param {string} [seriesScope.symbolInnerColor]\r\n * @param {Object} [seriesScope.fadeIn=false]\r\n */\r\n\r\n\r\nsymbolProto.updateData = function (data, idx, seriesScope) {\r\n  this.silent = false;\r\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\r\n  var seriesModel = data.hostModel;\r\n  var symbolSize = getSymbolSize(data, idx);\r\n  var isInit = symbolType !== this._symbolType;\r\n\r\n  if (isInit) {\r\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\r\n\r\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\r\n  } else {\r\n    var symbolPath = this.childAt(0);\r\n    symbolPath.silent = false;\r\n    graphic.updateProps(symbolPath, {\r\n      scale: getScale(symbolSize)\r\n    }, seriesModel, idx);\r\n  }\r\n\r\n  this._updateCommon(data, idx, symbolSize, seriesScope);\r\n\r\n  if (isInit) {\r\n    var symbolPath = this.childAt(0);\r\n    var fadeIn = seriesScope && seriesScope.fadeIn;\r\n    var target = {\r\n      scale: symbolPath.scale.slice()\r\n    };\r\n    fadeIn && (target.style = {\r\n      opacity: symbolPath.style.opacity\r\n    });\r\n    symbolPath.scale = [0, 0];\r\n    fadeIn && (symbolPath.style.opacity = 0);\r\n    graphic.initProps(symbolPath, target, seriesModel, idx);\r\n  }\r\n\r\n  this._seriesModel = seriesModel;\r\n}; // Update common properties\r\n\r\n\r\nvar normalStyleAccessPath = ['itemStyle'];\r\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\r\nvar normalLabelAccessPath = ['label'];\r\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\r\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {number} idx\r\n * @param {Array.<number>} symbolSize\r\n * @param {Object} [seriesScope]\r\n */\r\n\r\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\r\n  var symbolPath = this.childAt(0);\r\n  var seriesModel = data.hostModel;\r\n  var color = data.getItemVisual(idx, 'color'); // Reset style\r\n\r\n  if (symbolPath.type !== 'image') {\r\n    symbolPath.useStyle({\r\n      strokeNoScale: true\r\n    });\r\n  } else {\r\n    symbolPath.setStyle({\r\n      opacity: 1,\r\n      shadowBlur: null,\r\n      shadowOffsetX: null,\r\n      shadowOffsetY: null,\r\n      shadowColor: null\r\n    });\r\n  }\r\n\r\n  var itemStyle = seriesScope && seriesScope.itemStyle;\r\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\r\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\r\n  var labelModel = seriesScope && seriesScope.labelModel;\r\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\r\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\r\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\r\n\r\n  if (!seriesScope || data.hasItemOption) {\r\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\r\n    // Because symbol provide setColor individually to set fill and stroke\r\n\r\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\r\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\r\n    symbolOffset = itemModel.getShallow('symbolOffset');\r\n    labelModel = itemModel.getModel(normalLabelAccessPath);\r\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\r\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\r\n    cursorStyle = itemModel.getShallow('cursor');\r\n  } else {\r\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\r\n  }\r\n\r\n  var elStyle = symbolPath.style;\r\n  var symbolRotate = data.getItemVisual(idx, 'symbolRotate');\r\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\r\n\r\n  if (symbolOffset) {\r\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\r\n  }\r\n\r\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\r\n\r\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\r\n  symbolPath.setStyle(itemStyle);\r\n  var opacity = data.getItemVisual(idx, 'opacity');\r\n\r\n  if (opacity != null) {\r\n    elStyle.opacity = opacity;\r\n  }\r\n\r\n  var liftZ = data.getItemVisual(idx, 'liftZ');\r\n  var z2Origin = symbolPath.__z2Origin;\r\n\r\n  if (liftZ != null) {\r\n    if (z2Origin == null) {\r\n      symbolPath.__z2Origin = symbolPath.z2;\r\n      symbolPath.z2 += liftZ;\r\n    }\r\n  } else if (z2Origin != null) {\r\n    symbolPath.z2 = z2Origin;\r\n    symbolPath.__z2Origin = null;\r\n  }\r\n\r\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\r\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\r\n    labelFetcher: seriesModel,\r\n    labelDataIndex: idx,\r\n    defaultText: getLabelDefaultText,\r\n    isRectText: true,\r\n    autoColor: color\r\n  }); // Do not execute util needed.\r\n\r\n  function getLabelDefaultText(idx, opt) {\r\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\r\n  }\r\n\r\n  symbolPath.__symbolOriginalScale = getScale(symbolSize);\r\n  symbolPath.hoverStyle = hoverItemStyle;\r\n  symbolPath.highDownOnUpdate = hoverAnimation && seriesModel.isAnimationEnabled() ? highDownOnUpdate : null;\r\n  graphic.setHoverStyle(symbolPath);\r\n};\r\n\r\nfunction highDownOnUpdate(fromState, toState) {\r\n  // Do not support this hover animation util some scenario required.\r\n  // Animation can only be supported in hover layer when using `el.incremetal`.\r\n  if (this.incremental || this.useHoverLayer) {\r\n    return;\r\n  }\r\n\r\n  if (toState === 'emphasis') {\r\n    var scale = this.__symbolOriginalScale;\r\n    var ratio = scale[1] / scale[0];\r\n    var emphasisOpt = {\r\n      scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\r\n    }; // FIXME\r\n    // modify it after support stop specified animation.\r\n    // toState === fromState\r\n    //     ? (this.stopAnimation(), this.attr(emphasisOpt))\r\n\r\n    this.animateTo(emphasisOpt, 400, 'elasticOut');\r\n  } else if (toState === 'normal') {\r\n    this.animateTo({\r\n      scale: this.__symbolOriginalScale\r\n    }, 400, 'elasticOut');\r\n  }\r\n}\r\n/**\r\n * @param {Function} cb\r\n * @param {Object} [opt]\r\n * @param {Object} [opt.keepLabel=true]\r\n */\r\n\r\n\r\nsymbolProto.fadeOut = function (cb, opt) {\r\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\r\n\r\n  this.silent = symbolPath.silent = true; // Not show text when animating\r\n\r\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\r\n  graphic.updateProps(symbolPath, {\r\n    style: {\r\n      opacity: 0\r\n    },\r\n    scale: [0, 0]\r\n  }, this._seriesModel, this.dataIndex, cb);\r\n};\r\n\r\nzrUtil.inherits(SymbolClz, graphic.Group);\r\nvar _default = SymbolClz;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar SymbolClz = require(\"./Symbol\");\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar isObject = _util.isObject;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/chart/helper/SymbolDraw\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @alias module:echarts/chart/helper/SymbolDraw\r\n * @param {module:zrender/graphic/Group} [symbolCtor]\r\n */\r\nfunction SymbolDraw(symbolCtor) {\r\n  this.group = new graphic.Group();\r\n  this._symbolCtor = symbolCtor || SymbolClz;\r\n}\r\n\r\nvar symbolDrawProto = SymbolDraw.prototype;\r\n\r\nfunction symbolNeedsDraw(data, point, idx, opt) {\r\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\r\n  // the symbol element shape. We use the same clip shape here as\r\n  // the line clip.\r\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\r\n}\r\n/**\r\n * Update symbols draw by new data\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} [opt] Or isIgnore\r\n * @param {Function} [opt.isIgnore]\r\n * @param {Object} [opt.clipShape]\r\n */\r\n\r\n\r\nsymbolDrawProto.updateData = function (data, opt) {\r\n  opt = normalizeUpdateOpt(opt);\r\n  var group = this.group;\r\n  var seriesModel = data.hostModel;\r\n  var oldData = this._data;\r\n  var SymbolCtor = this._symbolCtor;\r\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\r\n  // stream mode to normal mode, where previous elements should be removed.\r\n\r\n  if (!oldData) {\r\n    group.removeAll();\r\n  }\r\n\r\n  data.diff(oldData).add(function (newIdx) {\r\n    var point = data.getItemLayout(newIdx);\r\n\r\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\r\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\r\n      symbolEl.attr('position', point);\r\n      data.setItemGraphicEl(newIdx, symbolEl);\r\n      group.add(symbolEl);\r\n    }\r\n  }).update(function (newIdx, oldIdx) {\r\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\r\n    var point = data.getItemLayout(newIdx);\r\n\r\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\r\n      group.remove(symbolEl);\r\n      return;\r\n    }\r\n\r\n    if (!symbolEl) {\r\n      symbolEl = new SymbolCtor(data, newIdx);\r\n      symbolEl.attr('position', point);\r\n    } else {\r\n      symbolEl.updateData(data, newIdx, seriesScope);\r\n      graphic.updateProps(symbolEl, {\r\n        position: point\r\n      }, seriesModel);\r\n    } // Add back\r\n\r\n\r\n    group.add(symbolEl);\r\n    data.setItemGraphicEl(newIdx, symbolEl);\r\n  }).remove(function (oldIdx) {\r\n    var el = oldData.getItemGraphicEl(oldIdx);\r\n    el && el.fadeOut(function () {\r\n      group.remove(el);\r\n    });\r\n  }).execute();\r\n  this._data = data;\r\n};\r\n\r\nsymbolDrawProto.isPersistent = function () {\r\n  return true;\r\n};\r\n\r\nsymbolDrawProto.updateLayout = function () {\r\n  var data = this._data;\r\n\r\n  if (data) {\r\n    // Not use animation\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      var point = data.getItemLayout(idx);\r\n      el.attr('position', point);\r\n    });\r\n  }\r\n};\r\n\r\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\r\n  this._seriesScope = makeSeriesScope(data);\r\n  this._data = null;\r\n  this.group.removeAll();\r\n};\r\n/**\r\n * Update symbols draw by new data\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} [opt] Or isIgnore\r\n * @param {Function} [opt.isIgnore]\r\n * @param {Object} [opt.clipShape]\r\n */\r\n\r\n\r\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\r\n  opt = normalizeUpdateOpt(opt);\r\n\r\n  function updateIncrementalAndHover(el) {\r\n    if (!el.isGroup) {\r\n      el.incremental = el.useHoverLayer = true;\r\n    }\r\n  }\r\n\r\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\r\n    var point = data.getItemLayout(idx);\r\n\r\n    if (symbolNeedsDraw(data, point, idx, opt)) {\r\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\r\n      el.traverse(updateIncrementalAndHover);\r\n      el.attr('position', point);\r\n      this.group.add(el);\r\n      data.setItemGraphicEl(idx, el);\r\n    }\r\n  }\r\n};\r\n\r\nfunction normalizeUpdateOpt(opt) {\r\n  if (opt != null && !isObject(opt)) {\r\n    opt = {\r\n      isIgnore: opt\r\n    };\r\n  }\r\n\r\n  return opt || {};\r\n}\r\n\r\nsymbolDrawProto.remove = function (enableAnimation) {\r\n  var group = this.group;\r\n  var data = this._data; // Incremental model do not have this._data.\r\n\r\n  if (data && enableAnimation) {\r\n    data.eachItemGraphicEl(function (el) {\r\n      el.fadeOut(function () {\r\n        group.remove(el);\r\n      });\r\n    });\r\n  } else {\r\n    group.removeAll();\r\n  }\r\n};\r\n\r\nfunction makeSeriesScope(data) {\r\n  var seriesModel = data.hostModel;\r\n  return {\r\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\r\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\r\n    symbolRotate: seriesModel.get('symbolRotate'),\r\n    symbolOffset: seriesModel.get('symbolOffset'),\r\n    hoverAnimation: seriesModel.get('hoverAnimation'),\r\n    labelModel: seriesModel.getModel('label'),\r\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\r\n    cursorStyle: seriesModel.get('cursor')\r\n  };\r\n}\r\n\r\nvar _default = SymbolDraw;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar round = _number.round;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel) {\r\n  var rect = cartesian.getArea();\r\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\r\n  var x = rect.x;\r\n  var y = rect.y;\r\n  var width = rect.width;\r\n  var height = rect.height;\r\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\r\n\r\n  x -= lineWidth / 2;\r\n  y -= lineWidth / 2;\r\n  width += lineWidth;\r\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\r\n\r\n  x = Math.floor(x);\r\n  width = Math.round(width);\r\n  var clipPath = new graphic.Rect({\r\n    shape: {\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n  });\r\n\r\n  if (hasAnimation) {\r\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\r\n    graphic.initProps(clipPath, {\r\n      shape: {\r\n        width: width,\r\n        height: height\r\n      }\r\n    }, seriesModel);\r\n  }\r\n\r\n  return clipPath;\r\n}\r\n\r\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\r\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\r\n\r\n  var clipPath = new graphic.Sector({\r\n    shape: {\r\n      cx: round(polar.cx, 1),\r\n      cy: round(polar.cy, 1),\r\n      r0: round(sectorArea.r0, 1),\r\n      r: round(sectorArea.r, 1),\r\n      startAngle: sectorArea.startAngle,\r\n      endAngle: sectorArea.endAngle,\r\n      clockwise: sectorArea.clockwise\r\n    }\r\n  });\r\n\r\n  if (hasAnimation) {\r\n    clipPath.shape.endAngle = sectorArea.startAngle;\r\n    graphic.initProps(clipPath, {\r\n      shape: {\r\n        endAngle: sectorArea.endAngle\r\n      }\r\n    }, seriesModel);\r\n  }\r\n\r\n  return clipPath;\r\n}\r\n\r\nfunction createClipPath(coordSys, hasAnimation, seriesModel) {\r\n  if (!coordSys) {\r\n    return null;\r\n  } else if (coordSys.type === 'polar') {\r\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\r\n  } else if (coordSys.type === 'cartesian2d') {\r\n    return createGridClipPath(coordSys, hasAnimation, seriesModel);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexports.createGridClipPath = createGridClipPath;\r\nexports.createPolarClipPath = createPolarClipPath;\r\nexports.createClipPath = createClipPath;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar Graph = require(\"../../data/Graph\");\r\n\r\nvar linkList = require(\"../../data/helper/linkList\");\r\n\r\nvar createDimensions = require(\"../../data/helper/createDimensions\");\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\nvar createListFromArray = require(\"./createListFromArray\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\r\n  // ??? TODO\r\n  // support dataset?\r\n  var graph = new Graph(directed);\r\n\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\r\n    nodes[i].id, nodes[i].name, i), i);\r\n  }\r\n\r\n  var linkNameList = [];\r\n  var validEdges = [];\r\n  var linkCount = 0;\r\n\r\n  for (var i = 0; i < edges.length; i++) {\r\n    var link = edges[i];\r\n    var source = link.source;\r\n    var target = link.target; // addEdge may fail when source or target not exists\r\n\r\n    if (graph.addEdge(source, target, linkCount)) {\r\n      validEdges.push(link);\r\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\r\n      linkCount++;\r\n    }\r\n  }\r\n\r\n  var coordSys = seriesModel.get('coordinateSystem');\r\n  var nodeData;\r\n\r\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\r\n    nodeData = createListFromArray(nodes, seriesModel);\r\n  } else {\r\n    var coordSysCtor = CoordinateSystem.get(coordSys);\r\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\r\n    // `value` dimension, but graph need `value` dimension. It's better to\r\n    // uniform this behavior.\r\n\r\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\r\n      coordDimensions.concat(['value']);\r\n    }\r\n\r\n    var dimensionNames = createDimensions(nodes, {\r\n      coordDimensions: coordDimensions\r\n    });\r\n    nodeData = new List(dimensionNames, seriesModel);\r\n    nodeData.initData(nodes);\r\n  }\r\n\r\n  var edgeData = new List(['value'], seriesModel);\r\n  edgeData.initData(validEdges, linkNameList);\r\n  beforeLink && beforeLink(nodeData, edgeData);\r\n  linkList({\r\n    mainData: nodeData,\r\n    struct: graph,\r\n    structAttr: 'graph',\r\n    datas: {\r\n      node: nodeData,\r\n      edge: edgeData\r\n    },\r\n    datasAttr: {\r\n      node: 'data',\r\n      edge: 'edgeData'\r\n    }\r\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\r\n\r\n  graph.update();\r\n  return graph;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar createDimensions = require(\"../../data/helper/createDimensions\");\r\n\r\nvar _sourceType = require(\"../../data/helper/sourceType\");\r\n\r\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\r\n\r\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\r\n\r\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar getDataItemValue = _model.getDataItemValue;\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\nvar _referHelper = require(\"../../model/referHelper\");\r\n\r\nvar getCoordSysInfoBySeries = _referHelper.getCoordSysInfoBySeries;\r\n\r\nvar Source = require(\"../../data/Source\");\r\n\r\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\r\n\r\nvar enableDataStack = _dataStackHelper.enableDataStack;\r\n\r\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\r\n\r\nvar makeSeriesEncodeForAxisCoordSys = _sourceHelper.makeSeriesEncodeForAxisCoordSys;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {module:echarts/data/Source|Array} source Or raw data.\r\n * @param {module:echarts/model/Series} seriesModel\r\n * @param {Object} [opt]\r\n * @param {string} [opt.generateCoord]\r\n * @param {boolean} [opt.useEncodeDefaulter]\r\n */\r\nfunction createListFromArray(source, seriesModel, opt) {\r\n  opt = opt || {};\r\n\r\n  if (!Source.isInstance(source)) {\r\n    source = Source.seriesDataToSource(source);\r\n  }\r\n\r\n  var coordSysName = seriesModel.get('coordinateSystem');\r\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\r\n  var coordSysInfo = getCoordSysInfoBySeries(seriesModel);\r\n  var coordSysDimDefs;\r\n\r\n  if (coordSysInfo) {\r\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\r\n      var dimInfo = {\r\n        name: dim\r\n      };\r\n      var axisModel = coordSysInfo.axisMap.get(dim);\r\n\r\n      if (axisModel) {\r\n        var axisType = axisModel.get('type');\r\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\r\n      }\r\n\r\n      return dimInfo;\r\n    });\r\n  }\r\n\r\n  if (!coordSysDimDefs) {\r\n    // Get dimensions from registered coordinate system\r\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\r\n  }\r\n\r\n  var dimInfoList = createDimensions(source, {\r\n    coordDimensions: coordSysDimDefs,\r\n    generateCoord: opt.generateCoord,\r\n    encodeDefaulter: opt.useEncodeDefaulter ? zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null\r\n  });\r\n  var firstCategoryDimIndex;\r\n  var hasNameEncode;\r\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\r\n    var coordDim = dimInfo.coordDim;\r\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\r\n\r\n    if (categoryAxisModel) {\r\n      if (firstCategoryDimIndex == null) {\r\n        firstCategoryDimIndex = dimIndex;\r\n      }\r\n\r\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\r\n    }\r\n\r\n    if (dimInfo.otherDims.itemName != null) {\r\n      hasNameEncode = true;\r\n    }\r\n  });\r\n\r\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\r\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\r\n  }\r\n\r\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\r\n  var list = new List(dimInfoList, seriesModel);\r\n  list.setCalculationInfo(stackCalculationInfo);\r\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\r\n    // Use dataIndex as ordinal value in categoryAxis\r\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\r\n  } : null;\r\n  list.hasItemOption = false;\r\n  list.initData(source, null, dimValueGetter);\r\n  return list;\r\n}\r\n\r\nfunction isNeedCompleteOrdinalData(source) {\r\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\r\n    var sampleItem = firstDataNotNull(source.data || []);\r\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\r\n  }\r\n}\r\n\r\nfunction firstDataNotNull(data) {\r\n  var i = 0;\r\n\r\n  while (i < data.length && data[i] == null) {\r\n    i++;\r\n  }\r\n\r\n  return data[i];\r\n}\r\n\r\nvar _default = createListFromArray;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar createDimensions = require(\"../../data/helper/createDimensions\");\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar extend = _util.extend;\r\nvar isArray = _util.isArray;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * [Usage]:\r\n * (1)\r\n * createListSimply(seriesModel, ['value']);\r\n * (2)\r\n * createListSimply(seriesModel, {\r\n *     coordDimensions: ['value'],\r\n *     dimensionsCount: 5\r\n * });\r\n *\r\n * @param {module:echarts/model/Series} seriesModel\r\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\r\n *        The options in opt, see `echarts/data/helper/createDimensions`\r\n * @param {Array.<string>} [nameList]\r\n * @return {module:echarts/data/List}\r\n */\r\nfunction _default(seriesModel, opt, nameList) {\r\n  opt = isArray(opt) && {\r\n    coordDimensions: opt\r\n  } || extend({}, opt);\r\n  var source = seriesModel.getSource();\r\n  var dimensionsInfo = createDimensions(source, opt);\r\n  var list = new List(dimensionsInfo, seriesModel);\r\n  list.initData(source, nameList);\r\n  return list;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @return {string} If large mode changed, return string 'reset';\r\n */\r\nfunction _default() {\r\n  var inner = makeInner();\r\n  return function (seriesModel) {\r\n    var fields = inner(seriesModel);\r\n    var pipelineContext = seriesModel.pipelineContext;\r\n    var originalLarge = fields.large;\r\n    var originalProgressive = fields.progressiveRender; // FIXME: if the planner works on a filtered series, `pipelineContext` does not\r\n    // exists. See #11611 . Probably we need to modify this structure, see the comment\r\n    // on `performRawSeries` in `Schedular.js`.\r\n\r\n    var large = fields.large = pipelineContext && pipelineContext.large;\r\n    var progressive = fields.progressiveRender = pipelineContext && pipelineContext.progressiveRender;\r\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @payload\r\n * @property {number} [seriesIndex]\r\n * @property {string} [seriesId]\r\n * @property {string} [seriesName]\r\n * @property {number} [dataIndex]\r\n */\r\necharts.registerAction({\r\n  type: 'focusNodeAdjacency',\r\n  event: 'focusNodeAdjacency',\r\n  update: 'series:focusNodeAdjacency'\r\n}, function () {});\r\n/**\r\n * @payload\r\n * @property {number} [seriesIndex]\r\n * @property {string} [seriesId]\r\n * @property {string} [seriesName]\r\n */\r\n\r\necharts.registerAction({\r\n  type: 'unfocusNodeAdjacency',\r\n  event: 'unfocusNodeAdjacency',\r\n  update: 'series:unfocusNodeAdjacency'\r\n}, function () {});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\r\n\r\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {number} dataIndex\r\n * @return {string} label string. Not null/undefined\r\n */\r\nfunction getDefaultLabel(data, dataIndex) {\r\n  var labelDims = data.mapDimension('defaultedLabel', true);\r\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\r\n\r\n  if (len === 1) {\r\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\r\n  } else if (len) {\r\n    var vals = [];\r\n\r\n    for (var i = 0; i < labelDims.length; i++) {\r\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\r\n      vals.push(val);\r\n    }\r\n\r\n    return vals.join(' ');\r\n  }\r\n}\r\n\r\nexports.getDefaultLabel = getDefaultLabel;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar KEY_DELIMITER = '-->';\r\n/**\r\n * params handler\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @returns {*}\r\n */\r\n\r\nvar getAutoCurvenessParams = function (seriesModel) {\r\n  return seriesModel.get('autoCurveness') || null;\r\n};\r\n/**\r\n * Generate a list of edge curvatures, 20 is the default\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @param {number} appendLength\r\n * @return  20 => [0, -0.2, 0.2, -0.4, 0.4, -0.6, 0.6, -0.8, 0.8, -1, 1, -1.2, 1.2, -1.4, 1.4, -1.6, 1.6, -1.8, 1.8, -2]\r\n */\r\n\r\n\r\nvar createCurveness = function (seriesModel, appendLength) {\r\n  var autoCurvenessParmas = getAutoCurvenessParams(seriesModel);\r\n  var length = 20;\r\n  var curvenessList = []; // handler the function set\r\n\r\n  if (typeof autoCurvenessParmas === 'number') {\r\n    length = autoCurvenessParmas;\r\n  } else if (zrUtil.isArray(autoCurvenessParmas)) {\r\n    seriesModel.__curvenessList = autoCurvenessParmas;\r\n    return;\r\n  } // append length\r\n\r\n\r\n  if (appendLength > length) {\r\n    length = appendLength;\r\n  } // make sure the length is even\r\n\r\n\r\n  var len = length % 2 ? length + 2 : length + 3;\r\n  curvenessList = [];\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    curvenessList.push((i % 2 ? i + 1 : i) / 10 * (i % 2 ? -1 : 1));\r\n  }\r\n\r\n  seriesModel.__curvenessList = curvenessList;\r\n};\r\n/**\r\n * Create different cache key data in the positive and negative directions, in order to set the curvature later\r\n * @param {number|string|module:echarts/data/Graph.Node} n1\r\n * @param {number|string|module:echarts/data/Graph.Node} n2\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @returns {string} key\r\n */\r\n\r\n\r\nvar getKeyOfEdges = function (n1, n2, seriesModel) {\r\n  var source = [n1.id, n1.dataIndex].join('.');\r\n  var target = [n2.id, n2.dataIndex].join('.');\r\n  return [seriesModel.uid, source, target].join(KEY_DELIMITER);\r\n};\r\n/**\r\n * get opposite key\r\n * @param {string} key\r\n * @returns {string}\r\n */\r\n\r\n\r\nvar getOppositeKey = function (key) {\r\n  var keys = key.split(KEY_DELIMITER);\r\n  return [keys[0], keys[2], keys[1]].join(KEY_DELIMITER);\r\n};\r\n/**\r\n * get edgeMap with key\r\n * @param edge\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n */\r\n\r\n\r\nvar getEdgeFromMap = function (edge, seriesModel) {\r\n  var key = getKeyOfEdges(edge.node1, edge.node2, seriesModel);\r\n  return seriesModel.__edgeMap[key];\r\n};\r\n/**\r\n * calculate all cases total length\r\n * @param edge\r\n * @param seriesModel\r\n * @returns {number}\r\n */\r\n\r\n\r\nvar getTotalLengthBetweenNodes = function (edge, seriesModel) {\r\n  var len = getEdgeMapLengthWithKey(getKeyOfEdges(edge.node1, edge.node2, seriesModel), seriesModel);\r\n  var lenV = getEdgeMapLengthWithKey(getKeyOfEdges(edge.node2, edge.node1, seriesModel), seriesModel);\r\n  return len + lenV;\r\n};\r\n/**\r\n *\r\n * @param key\r\n */\r\n\r\n\r\nvar getEdgeMapLengthWithKey = function (key, seriesModel) {\r\n  var edgeMap = seriesModel.__edgeMap;\r\n  return edgeMap[key] ? edgeMap[key].length : 0;\r\n};\r\n/**\r\n * Count the number of edges between the same two points, used to obtain the curvature table and the parity of the edge\r\n * @see /graph/GraphSeries.js@getInitialData\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n */\r\n\r\n\r\nfunction initCurvenessList(seriesModel) {\r\n  if (!getAutoCurvenessParams(seriesModel)) {\r\n    return;\r\n  }\r\n\r\n  seriesModel.__curvenessList = [];\r\n  seriesModel.__edgeMap = {}; // calc the array of curveness List\r\n\r\n  createCurveness(seriesModel);\r\n}\r\n/**\r\n * set edgeMap with key\r\n * @param {number|string|module:echarts/data/Graph.Node} n1\r\n * @param {number|string|module:echarts/data/Graph.Node} n2\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @param {number} index\r\n */\r\n\r\n\r\nfunction createEdgeMapForCurveness(n1, n2, seriesModel, index) {\r\n  if (!getAutoCurvenessParams(seriesModel)) {\r\n    return;\r\n  }\r\n\r\n  var key = getKeyOfEdges(n1, n2, seriesModel);\r\n  var edgeMap = seriesModel.__edgeMap;\r\n  var oppositeEdges = edgeMap[getOppositeKey(key)]; // set direction\r\n\r\n  if (edgeMap[key] && !oppositeEdges) {\r\n    edgeMap[key].isForward = true;\r\n  } else if (oppositeEdges && edgeMap[key]) {\r\n    oppositeEdges.isForward = true;\r\n    edgeMap[key].isForward = false;\r\n  }\r\n\r\n  edgeMap[key] = edgeMap[key] || [];\r\n  edgeMap[key].push(index);\r\n}\r\n/**\r\n * get curvature for edge\r\n * @param edge\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @param index\r\n */\r\n\r\n\r\nfunction getCurvenessForEdge(edge, seriesModel, index, needReverse) {\r\n  var autoCurvenessParams = getAutoCurvenessParams(seriesModel);\r\n  var isArrayParam = zrUtil.isArray(autoCurvenessParams);\r\n\r\n  if (!autoCurvenessParams) {\r\n    return null;\r\n  }\r\n\r\n  var edgeArray = getEdgeFromMap(edge, seriesModel);\r\n\r\n  if (!edgeArray) {\r\n    return null;\r\n  }\r\n\r\n  var edgeIndex = -1;\r\n\r\n  for (var i = 0; i < edgeArray.length; i++) {\r\n    if (edgeArray[i] === index) {\r\n      edgeIndex = i;\r\n      break;\r\n    }\r\n  } // if totalLen is Longer createCurveness\r\n\r\n\r\n  var totalLen = getTotalLengthBetweenNodes(edge, seriesModel);\r\n  createCurveness(seriesModel, totalLen);\r\n  edge.lineStyle = edge.lineStyle || {}; // if is opposite edge, must set curvenss to opposite number\r\n\r\n  var curKey = getKeyOfEdges(edge.node1, edge.node2, seriesModel);\r\n  var curvenessList = seriesModel.__curvenessList; // if pass array no need parity\r\n\r\n  var parityCorrection = isArrayParam ? 0 : totalLen % 2 ? 0 : 1;\r\n\r\n  if (!edgeArray.isForward) {\r\n    // the opposite edge show outside\r\n    var oppositeKey = getOppositeKey(curKey);\r\n    var len = getEdgeMapLengthWithKey(oppositeKey, seriesModel);\r\n    var resValue = curvenessList[edgeIndex + len + parityCorrection]; // isNeedReverse, simple, force type need reverse the curveness in the junction of the forword and the opposite\r\n\r\n    if (needReverse) {\r\n      // set as array may make the parity handle with the len of opposite\r\n      if (isArrayParam) {\r\n        if (autoCurvenessParams && autoCurvenessParams[0] === 0) {\r\n          return (len + parityCorrection) % 2 ? resValue : -resValue;\r\n        } else {\r\n          return ((len % 2 ? 0 : 1) + parityCorrection) % 2 ? resValue : -resValue;\r\n        }\r\n      } else {\r\n        return (len + parityCorrection) % 2 ? resValue : -resValue;\r\n      }\r\n    } else {\r\n      return curvenessList[edgeIndex + len + parityCorrection];\r\n    }\r\n  } else {\r\n    return curvenessList[parityCorrection + edgeIndex];\r\n  }\r\n}\r\n\r\nexports.initCurvenessList = initCurvenessList;\r\nexports.createEdgeMapForCurveness = createEdgeMapForCurveness;\r\nexports.getCurvenessForEdge = getCurvenessForEdge;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\r\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\r\n    var root = seriesModel.getData().tree.root;\r\n    var targetNode = payload.targetNode;\r\n\r\n    if (typeof targetNode === 'string') {\r\n      targetNode = root.getNodeById(targetNode);\r\n    }\r\n\r\n    if (targetNode && root.contains(targetNode)) {\r\n      return {\r\n        node: targetNode\r\n      };\r\n    }\r\n\r\n    var targetNodeId = payload.targetNodeId;\r\n\r\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\r\n      return {\r\n        node: targetNode\r\n      };\r\n    }\r\n  }\r\n} // Not includes the given node at the last item.\r\n\r\n\r\nfunction getPathToRoot(node) {\r\n  var path = [];\r\n\r\n  while (node) {\r\n    node = node.parentNode;\r\n    node && path.push(node);\r\n  }\r\n\r\n  return path.reverse();\r\n}\r\n\r\nfunction aboveViewRoot(viewRoot, node) {\r\n  var viewPath = getPathToRoot(viewRoot);\r\n  return zrUtil.indexOf(viewPath, node) >= 0;\r\n} // From root to the input node (the input node will be included).\r\n\r\n\r\nfunction wrapTreePathInfo(node, seriesModel) {\r\n  var treePathInfo = [];\r\n\r\n  while (node) {\r\n    var nodeDataIndex = node.dataIndex;\r\n    treePathInfo.push({\r\n      name: node.name,\r\n      dataIndex: nodeDataIndex,\r\n      value: seriesModel.getRawValue(nodeDataIndex)\r\n    });\r\n    node = node.parentNode;\r\n  }\r\n\r\n  treePathInfo.reverse();\r\n  return treePathInfo;\r\n}\r\n\r\nexports.retrieveTargetInfo = retrieveTargetInfo;\r\nexports.getPathToRoot = getPathToRoot;\r\nexports.aboveViewRoot = aboveViewRoot;\r\nexports.wrapTreePathInfo = wrapTreePathInfo;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar createListSimply = require(\"../helper/createListSimply\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\r\n\r\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\r\n\r\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\r\n\r\nvar makeSeriesEncodeForAxisCoordSys = _sourceHelper.makeSeriesEncodeForAxisCoordSys;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar seriesModelMixin = {\r\n  /**\r\n   * @private\r\n   * @type {string}\r\n   */\r\n  _baseAxisDim: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getInitialData: function (option, ecModel) {\r\n    // When both types of xAxis and yAxis are 'value', layout is\r\n    // needed to be specified by user. Otherwise, layout can be\r\n    // judged by which axis is category.\r\n    var ordinalMeta;\r\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\r\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\r\n    var xAxisType = xAxisModel.get('type');\r\n    var yAxisType = yAxisModel.get('type');\r\n    var addOrdinal; // FIXME\r\n    // Consider time axis.\r\n\r\n    if (xAxisType === 'category') {\r\n      option.layout = 'horizontal';\r\n      ordinalMeta = xAxisModel.getOrdinalMeta();\r\n      addOrdinal = true;\r\n    } else if (yAxisType === 'category') {\r\n      option.layout = 'vertical';\r\n      ordinalMeta = yAxisModel.getOrdinalMeta();\r\n      addOrdinal = true;\r\n    } else {\r\n      option.layout = option.layout || 'horizontal';\r\n    }\r\n\r\n    var coordDims = ['x', 'y'];\r\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\r\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\r\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\r\n    var axisModels = [xAxisModel, yAxisModel];\r\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\r\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\r\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\r\n    // MUST create a new data, consider setOption({}) again.\r\n\r\n    if (data && addOrdinal) {\r\n      var newOptionData = [];\r\n      zrUtil.each(data, function (item, index) {\r\n        var newItem;\r\n\r\n        if (item.value && zrUtil.isArray(item.value)) {\r\n          newItem = item.value.slice();\r\n          item.value.unshift(index);\r\n        } else if (zrUtil.isArray(item)) {\r\n          newItem = item.slice();\r\n          item.unshift(index);\r\n        } else {\r\n          newItem = item;\r\n        }\r\n\r\n        newOptionData.push(newItem);\r\n      });\r\n      option.data = newOptionData;\r\n    }\r\n\r\n    var defaultValueDimensions = this.defaultValueDimensions;\r\n    var coordDimensions = [{\r\n      name: baseAxisDim,\r\n      type: getDimensionTypeByAxis(baseAxisType),\r\n      ordinalMeta: ordinalMeta,\r\n      otherDims: {\r\n        tooltip: false,\r\n        itemName: 0\r\n      },\r\n      dimsDef: ['base']\r\n    }, {\r\n      name: otherAxisDim,\r\n      type: getDimensionTypeByAxis(otherAxisType),\r\n      dimsDef: defaultValueDimensions.slice()\r\n    }];\r\n    return createListSimply(this, {\r\n      coordDimensions: coordDimensions,\r\n      dimensionsCount: defaultValueDimensions.length + 1,\r\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordDimensions, this)\r\n    });\r\n  },\r\n\r\n  /**\r\n   * If horizontal, base axis is x, otherwise y.\r\n   * @override\r\n   */\r\n  getBaseAxis: function () {\r\n    var dim = this._baseAxisDim;\r\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\r\n  }\r\n};\r\nexports.seriesModelMixin = seriesModelMixin;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./line/LineSeries\");\r\n\r\nrequire(\"./line/LineView\");\r\n\r\nvar visualSymbol = require(\"../visual/symbol\");\r\n\r\nvar layoutPoints = require(\"../layout/points\");\r\n\r\nvar dataSample = require(\"../processor/dataSample\");\r\n\r\nrequire(\"../component/gridSimple\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// In case developer forget to include grid component\r\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\r\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\r\n\r\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar createListFromArray = require(\"../helper/createListFromArray\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = SeriesModel.extend({\r\n  type: 'series.line',\r\n  dependencies: ['grid', 'polar'],\r\n  getInitialData: function (option, ecModel) {\r\n    return createListFromArray(this.getSource(), this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    hoverAnimation: true,\r\n    // stack: null\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // polarIndex: 0,\r\n    // If clip the overflow value\r\n    clip: true,\r\n    // cursor: null,\r\n    label: {\r\n      position: 'top'\r\n    },\r\n    // itemStyle: {\r\n    // },\r\n    lineStyle: {\r\n      width: 2,\r\n      type: 'solid'\r\n    },\r\n    // areaStyle: {\r\n    // origin of areaStyle. Valid values:\r\n    // `'auto'/null/undefined`: from axisLine to data\r\n    // `'start'`: from min to data\r\n    // `'end'`: from data to max\r\n    // origin: 'auto'\r\n    // },\r\n    // false, 'start', 'end', 'middle'\r\n    step: false,\r\n    // Disabled if step is true\r\n    smooth: false,\r\n    smoothMonotone: null,\r\n    symbol: 'emptyCircle',\r\n    symbolSize: 4,\r\n    symbolRotate: null,\r\n    showSymbol: true,\r\n    // `false`: follow the label interval strategy.\r\n    // `true`: show all symbols.\r\n    // `'auto'`: If possible, show all symbols, otherwise\r\n    //           follow the label interval strategy.\r\n    showAllSymbol: 'auto',\r\n    // Whether to connect break point.\r\n    connectNulls: false,\r\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\r\n    sampling: 'none',\r\n    animationEasing: 'linear',\r\n    // Disable progressive\r\n    progressive: 0,\r\n    hoverLayerThreshold: Infinity\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _bbox = require(\"zrender/lib/core/bbox\");\r\n\r\nvar fromPoints = _bbox.fromPoints;\r\n\r\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\r\n\r\nvar SymbolClz = require(\"../helper/Symbol\");\r\n\r\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\nvar _poly = require(\"./poly\");\r\n\r\nvar Polyline = _poly.Polyline;\r\nvar Polygon = _poly.Polygon;\r\n\r\nvar ChartView = require(\"../../view/Chart\");\r\n\r\nvar _helper = require(\"./helper\");\r\n\r\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\r\nvar getStackedOnPoint = _helper.getStackedOnPoint;\r\n\r\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\r\n\r\nvar createGridClipPath = _createClipPathFromCoordSys.createGridClipPath;\r\nvar createPolarClipPath = _createClipPathFromCoordSys.createPolarClipPath;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME step not support polar\r\nfunction isPointsSame(points1, points2) {\r\n  if (points1.length !== points2.length) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0; i < points1.length; i++) {\r\n    var p1 = points1[i];\r\n    var p2 = points2[i];\r\n\r\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction getBoundingDiff(points1, points2) {\r\n  var min1 = [];\r\n  var max1 = [];\r\n  var min2 = [];\r\n  var max2 = [];\r\n  fromPoints(points1, min1, max1);\r\n  fromPoints(points2, min2, max2); // Get a max value from each corner of two boundings.\r\n\r\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\r\n}\r\n\r\nfunction getSmooth(smooth) {\r\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\r\n}\r\n/**\r\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} dataCoordInfo\r\n * @param {Array.<Array.<number>>} points\r\n */\r\n\r\n\r\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\r\n  if (!dataCoordInfo.valueDim) {\r\n    return [];\r\n  }\r\n\r\n  var points = [];\r\n\r\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\r\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\r\n  var baseAxis = coordSys.getBaseAxis();\r\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\r\n  var stepPoints = [];\r\n\r\n  for (var i = 0; i < points.length - 1; i++) {\r\n    var nextPt = points[i + 1];\r\n    var pt = points[i];\r\n    stepPoints.push(pt);\r\n    var stepPt = [];\r\n\r\n    switch (stepTurnAt) {\r\n      case 'end':\r\n        stepPt[baseIndex] = nextPt[baseIndex];\r\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\r\n\r\n        stepPoints.push(stepPt);\r\n        break;\r\n\r\n      case 'middle':\r\n        // default is start\r\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\r\n        var stepPt2 = [];\r\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\r\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\r\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\r\n        stepPoints.push(stepPt);\r\n        stepPoints.push(stepPt2);\r\n        break;\r\n\r\n      default:\r\n        stepPt[baseIndex] = pt[baseIndex];\r\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\r\n\r\n        stepPoints.push(stepPt);\r\n    }\r\n  } // Last points\r\n\r\n\r\n  points[i] && stepPoints.push(points[i]);\r\n  return stepPoints;\r\n}\r\n\r\nfunction getVisualGradient(data, coordSys) {\r\n  var visualMetaList = data.getVisual('visualMeta');\r\n\r\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\r\n    // When data.count() is 0, gradient range can not be calculated.\r\n    return;\r\n  }\r\n\r\n  if (coordSys.type !== 'cartesian2d') {\r\n    return;\r\n  }\r\n\r\n  var coordDim;\r\n  var visualMeta;\r\n\r\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\r\n    var dimIndex = visualMetaList[i].dimension;\r\n    var dimName = data.dimensions[dimIndex];\r\n    var dimInfo = data.getDimensionInfo(dimName);\r\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\r\n\r\n    if (coordDim === 'x' || coordDim === 'y') {\r\n      visualMeta = visualMetaList[i];\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!visualMeta) {\r\n    return;\r\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\r\n  // the canvas spec prescribes that the color of the first stop and the last\r\n  // stop should be used. But if two stops are added at offset 0, in effect\r\n  // browsers use the color of the second stop to render area outside\r\n  // LinearGradient. So we can only infinitesimally extend area defined in\r\n  // LinearGradient to render `outerColors`.\r\n\r\n\r\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\r\n\r\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\r\n    return {\r\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\r\n      color: stop.color\r\n    };\r\n  });\r\n  var stopLen = colorStops.length;\r\n  var outerColors = visualMeta.outerColors.slice();\r\n\r\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\r\n    colorStops.reverse();\r\n    outerColors.reverse();\r\n  }\r\n\r\n  var tinyExtent = 10; // Arbitrary value: 10px\r\n\r\n  var minCoord = colorStops[0].coord - tinyExtent;\r\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\r\n  var coordSpan = maxCoord - minCoord;\r\n\r\n  if (coordSpan < 1e-3) {\r\n    return 'transparent';\r\n  }\r\n\r\n  zrUtil.each(colorStops, function (stop) {\r\n    stop.offset = (stop.coord - minCoord) / coordSpan;\r\n  });\r\n  colorStops.push({\r\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\r\n    color: outerColors[1] || 'transparent'\r\n  });\r\n  colorStops.unshift({\r\n    // notice colorStops.length have been changed.\r\n    offset: stopLen ? colorStops[0].offset : 0.5,\r\n    color: outerColors[0] || 'transparent'\r\n  }); // zrUtil.each(colorStops, function (colorStop) {\r\n  //     // Make sure each offset has rounded px to avoid not sharp edge\r\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\r\n  // });\r\n\r\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\r\n  gradient[coordDim] = minCoord;\r\n  gradient[coordDim + '2'] = maxCoord;\r\n  return gradient;\r\n}\r\n\r\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\r\n  var showAllSymbol = seriesModel.get('showAllSymbol');\r\n  var isAuto = showAllSymbol === 'auto';\r\n\r\n  if (showAllSymbol && !isAuto) {\r\n    return;\r\n  }\r\n\r\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\r\n\r\n  if (!categoryAxis) {\r\n    return;\r\n  } // Note that category label interval strategy might bring some weird effect\r\n  // in some scenario: users may wonder why some of the symbols are not\r\n  // displayed. So we show all symbols as possible as we can.\r\n\r\n\r\n  if (isAuto // Simplify the logic, do not determine label overlap here.\r\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\r\n    return;\r\n  } // Otherwise follow the label interval strategy on category axis.\r\n\r\n\r\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\r\n  var labelMap = {};\r\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\r\n    labelMap[labelItem.tickValue] = 1;\r\n  });\r\n  return function (dataIndex) {\r\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\r\n  };\r\n}\r\n\r\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\r\n  // In mose cases, line is monotonous on category axis, and the label size\r\n  // is close with each other. So we check the symbol size and some of the\r\n  // label size alone with the category axis to estimate whether all symbol\r\n  // can be shown without overlap.\r\n  var axisExtent = categoryAxis.getExtent();\r\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\r\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\r\n  // Sampling some points, max 5.\r\n\r\n  var dataLen = data.count();\r\n  var step = Math.max(1, Math.round(dataLen / 5));\r\n\r\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\r\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\r\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\r\n    * 1.5 > availSize) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction createLineClipPath(coordSys, hasAnimation, seriesModel) {\r\n  if (coordSys.type === 'cartesian2d') {\r\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\r\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel); // Expand clip shape to avoid clipping when line value exceeds axis\r\n\r\n    if (!seriesModel.get('clip', true)) {\r\n      var rectShape = clipPath.shape;\r\n      var expandSize = Math.max(rectShape.width, rectShape.height);\r\n\r\n      if (isHorizontal) {\r\n        rectShape.y -= expandSize;\r\n        rectShape.height += expandSize * 2;\r\n      } else {\r\n        rectShape.x -= expandSize;\r\n        rectShape.width += expandSize * 2;\r\n      }\r\n    }\r\n\r\n    return clipPath;\r\n  } else {\r\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\r\n  }\r\n}\r\n\r\nvar _default = ChartView.extend({\r\n  type: 'line',\r\n  init: function () {\r\n    var lineGroup = new graphic.Group();\r\n    var symbolDraw = new SymbolDraw();\r\n    this.group.add(symbolDraw.group);\r\n    this._symbolDraw = symbolDraw;\r\n    this._lineGroup = lineGroup;\r\n  },\r\n  render: function (seriesModel, ecModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var lineStyleModel = seriesModel.getModel('lineStyle');\r\n    var areaStyleModel = seriesModel.getModel('areaStyle');\r\n    var points = data.mapArray(data.getItemLayout);\r\n    var isCoordSysPolar = coordSys.type === 'polar';\r\n    var prevCoordSys = this._coordSys;\r\n    var symbolDraw = this._symbolDraw;\r\n    var polyline = this._polyline;\r\n    var polygon = this._polygon;\r\n    var lineGroup = this._lineGroup;\r\n    var hasAnimation = seriesModel.get('animation');\r\n    var isAreaChart = !areaStyleModel.isEmpty();\r\n    var valueOrigin = areaStyleModel.get('origin');\r\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\r\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\r\n    var showSymbol = seriesModel.get('showSymbol');\r\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\r\n\r\n    var oldData = this._data;\r\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\r\n      if (el.__temp) {\r\n        group.remove(el);\r\n        oldData.setItemGraphicEl(idx, null);\r\n      }\r\n    }); // Remove previous created symbols if showSymbol changed to false\r\n\r\n    if (!showSymbol) {\r\n      symbolDraw.remove();\r\n    }\r\n\r\n    group.add(lineGroup); // FIXME step not support polar\r\n\r\n    var step = !isCoordSysPolar && seriesModel.get('step');\r\n    var clipShapeForSymbol;\r\n\r\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\r\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\r\n      // See #7913 and `test/dataZoom-clip.html`.\r\n\r\n      if (clipShapeForSymbol.width != null) {\r\n        clipShapeForSymbol.x -= 0.1;\r\n        clipShapeForSymbol.y -= 0.1;\r\n        clipShapeForSymbol.width += 0.2;\r\n        clipShapeForSymbol.height += 0.2;\r\n      } else if (clipShapeForSymbol.r0) {\r\n        clipShapeForSymbol.r0 -= 0.5;\r\n        clipShapeForSymbol.r1 += 0.5;\r\n      }\r\n    }\r\n\r\n    this._clipShapeForSymbol = clipShapeForSymbol; // Initialization animation or coordinate system changed\r\n\r\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\r\n      showSymbol && symbolDraw.updateData(data, {\r\n        isIgnore: isIgnoreFunc,\r\n        clipShape: clipShapeForSymbol\r\n      });\r\n\r\n      if (step) {\r\n        // TODO If stacked series is not step\r\n        points = turnPointsIntoStep(points, coordSys, step);\r\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\r\n      }\r\n\r\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\r\n\r\n      if (isAreaChart) {\r\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\r\n      }\r\n\r\n      lineGroup.setClipPath(createLineClipPath(coordSys, true, seriesModel));\r\n    } else {\r\n      if (isAreaChart && !polygon) {\r\n        // If areaStyle is added\r\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\r\n      } else if (polygon && !isAreaChart) {\r\n        // If areaStyle is removed\r\n        lineGroup.remove(polygon);\r\n        polygon = this._polygon = null;\r\n      } // Update clipPath\r\n\r\n\r\n      lineGroup.setClipPath(createLineClipPath(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\r\n      // because points are not changed\r\n\r\n      showSymbol && symbolDraw.updateData(data, {\r\n        isIgnore: isIgnoreFunc,\r\n        clipShape: clipShapeForSymbol\r\n      }); // Stop symbol animation and sync with line points\r\n      // FIXME performance?\r\n\r\n      data.eachItemGraphicEl(function (el) {\r\n        el.stopAnimation(true);\r\n      }); // In the case data zoom triggerred refreshing frequently\r\n      // Data may not change if line has a category axis. So it should animate nothing\r\n\r\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\r\n        if (hasAnimation) {\r\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\r\n        } else {\r\n          // Not do it in update with animation\r\n          if (step) {\r\n            // TODO If stacked series is not step\r\n            points = turnPointsIntoStep(points, coordSys, step);\r\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\r\n          }\r\n\r\n          polyline.setShape({\r\n            points: points\r\n          });\r\n          polygon && polygon.setShape({\r\n            points: points,\r\n            stackedOnPoints: stackedOnPoints\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\r\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\r\n    lineStyleModel.getLineStyle(), {\r\n      fill: 'none',\r\n      stroke: visualColor,\r\n      lineJoin: 'bevel'\r\n    }));\r\n    var smooth = seriesModel.get('smooth');\r\n    smooth = getSmooth(seriesModel.get('smooth'));\r\n    polyline.setShape({\r\n      smooth: smooth,\r\n      smoothMonotone: seriesModel.get('smoothMonotone'),\r\n      connectNulls: seriesModel.get('connectNulls')\r\n    });\r\n\r\n    if (polygon) {\r\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\r\n      var stackedOnSmooth = 0;\r\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\r\n        fill: visualColor,\r\n        opacity: 0.7,\r\n        lineJoin: 'bevel'\r\n      }));\r\n\r\n      if (stackedOnSeries) {\r\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\r\n      }\r\n\r\n      polygon.setShape({\r\n        smooth: smooth,\r\n        stackedOnSmooth: stackedOnSmooth,\r\n        smoothMonotone: seriesModel.get('smoothMonotone'),\r\n        connectNulls: seriesModel.get('connectNulls')\r\n      });\r\n    }\r\n\r\n    this._data = data; // Save the coordinate system for transition animation when data changed\r\n\r\n    this._coordSys = coordSys;\r\n    this._stackedOnPoints = stackedOnPoints;\r\n    this._points = points;\r\n    this._step = step;\r\n    this._valueOrigin = valueOrigin;\r\n  },\r\n  dispose: function () {},\r\n  highlight: function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\r\n\r\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\r\n      var symbol = data.getItemGraphicEl(dataIndex);\r\n\r\n      if (!symbol) {\r\n        // Create a temporary symbol if it is not exists\r\n        var pt = data.getItemLayout(dataIndex);\r\n\r\n        if (!pt) {\r\n          // Null data\r\n          return;\r\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\r\n\r\n\r\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(pt[0], pt[1])) {\r\n          return;\r\n        }\r\n\r\n        symbol = new SymbolClz(data, dataIndex);\r\n        symbol.position = pt;\r\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\r\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\r\n        symbol.__temp = true;\r\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\r\n\r\n        symbol.stopSymbolAnimation(true);\r\n        this.group.add(symbol);\r\n      }\r\n\r\n      symbol.highlight();\r\n    } else {\r\n      // Highlight whole series\r\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\r\n    }\r\n  },\r\n  downplay: function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\r\n\r\n    if (dataIndex != null && dataIndex >= 0) {\r\n      var symbol = data.getItemGraphicEl(dataIndex);\r\n\r\n      if (symbol) {\r\n        if (symbol.__temp) {\r\n          data.setItemGraphicEl(dataIndex, null);\r\n          this.group.remove(symbol);\r\n        } else {\r\n          symbol.downplay();\r\n        }\r\n      }\r\n    } else {\r\n      // FIXME\r\n      // can not downplay completely.\r\n      // Downplay whole series\r\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {module:zrender/container/Group} group\r\n   * @param {Array.<Array.<number>>} points\r\n   * @private\r\n   */\r\n  _newPolyline: function (points) {\r\n    var polyline = this._polyline; // Remove previous created polyline\r\n\r\n    if (polyline) {\r\n      this._lineGroup.remove(polyline);\r\n    }\r\n\r\n    polyline = new Polyline({\r\n      shape: {\r\n        points: points\r\n      },\r\n      silent: true,\r\n      z2: 10\r\n    });\r\n\r\n    this._lineGroup.add(polyline);\r\n\r\n    this._polyline = polyline;\r\n    return polyline;\r\n  },\r\n\r\n  /**\r\n   * @param {module:zrender/container/Group} group\r\n   * @param {Array.<Array.<number>>} stackedOnPoints\r\n   * @param {Array.<Array.<number>>} points\r\n   * @private\r\n   */\r\n  _newPolygon: function (points, stackedOnPoints) {\r\n    var polygon = this._polygon; // Remove previous created polygon\r\n\r\n    if (polygon) {\r\n      this._lineGroup.remove(polygon);\r\n    }\r\n\r\n    polygon = new Polygon({\r\n      shape: {\r\n        points: points,\r\n        stackedOnPoints: stackedOnPoints\r\n      },\r\n      silent: true\r\n    });\r\n\r\n    this._lineGroup.add(polygon);\r\n\r\n    this._polygon = polygon;\r\n    return polygon;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  // FIXME Two value axis\r\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\r\n    var polyline = this._polyline;\r\n    var polygon = this._polygon;\r\n    var seriesModel = data.hostModel;\r\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\r\n    var current = diff.current;\r\n    var stackedOnCurrent = diff.stackedOnCurrent;\r\n    var next = diff.next;\r\n    var stackedOnNext = diff.stackedOnNext;\r\n\r\n    if (step) {\r\n      // TODO If stacked series is not step\r\n      current = turnPointsIntoStep(diff.current, coordSys, step);\r\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\r\n      next = turnPointsIntoStep(diff.next, coordSys, step);\r\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\r\n    } // Don't apply animation if diff is large.\r\n    // For better result and avoid memory explosion problems like\r\n    // https://github.com/apache/incubator-echarts/issues/12229\r\n\r\n\r\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\r\n      polyline.setShape({\r\n        points: next\r\n      });\r\n\r\n      if (polygon) {\r\n        polygon.setShape({\r\n          points: next,\r\n          stackedOnPoints: stackedOnNext\r\n        });\r\n      }\r\n\r\n      return;\r\n    } // `diff.current` is subset of `current` (which should be ensured by\r\n    // turnPointsIntoStep), so points in `__points` can be updated when\r\n    // points in `current` are update during animation.\r\n\r\n\r\n    polyline.shape.__points = diff.current;\r\n    polyline.shape.points = current;\r\n    graphic.updateProps(polyline, {\r\n      shape: {\r\n        points: next\r\n      }\r\n    }, seriesModel);\r\n\r\n    if (polygon) {\r\n      polygon.setShape({\r\n        points: current,\r\n        stackedOnPoints: stackedOnCurrent\r\n      });\r\n      graphic.updateProps(polygon, {\r\n        shape: {\r\n          points: next,\r\n          stackedOnPoints: stackedOnNext\r\n        }\r\n      }, seriesModel);\r\n    }\r\n\r\n    var updatedDataInfo = [];\r\n    var diffStatus = diff.status;\r\n\r\n    for (var i = 0; i < diffStatus.length; i++) {\r\n      var cmd = diffStatus[i].cmd;\r\n\r\n      if (cmd === '=') {\r\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\r\n\r\n        if (el) {\r\n          updatedDataInfo.push({\r\n            el: el,\r\n            ptIdx: i // Index of points\r\n\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (polyline.animators && polyline.animators.length) {\r\n      polyline.animators[0].during(function () {\r\n        for (var i = 0; i < updatedDataInfo.length; i++) {\r\n          var el = updatedDataInfo[i].el;\r\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\r\n        }\r\n      });\r\n    }\r\n  },\r\n  remove: function (ecModel) {\r\n    var group = this.group;\r\n    var oldData = this._data;\r\n\r\n    this._lineGroup.removeAll();\r\n\r\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\r\n\r\n\r\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\r\n      if (el.__temp) {\r\n        group.remove(el);\r\n        oldData.setItemGraphicEl(idx, null);\r\n      }\r\n    });\r\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\r\n\r\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar map = _util.map;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {Object} coordSys\r\n * @param {module:echarts/data/List} data\r\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\r\n */\r\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\r\n  var baseAxis = coordSys.getBaseAxis();\r\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n  var valueStart = getValueStart(valueAxis, valueOrigin);\r\n  var baseAxisDim = baseAxis.dim;\r\n  var valueAxisDim = valueAxis.dim;\r\n  var valueDim = data.mapDimension(valueAxisDim);\r\n  var baseDim = data.mapDimension(baseAxisDim);\r\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\r\n  var dims = map(coordSys.dimensions, function (coordDim) {\r\n    return data.mapDimension(coordDim);\r\n  });\r\n  var stacked;\r\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\r\n\r\n  if (stacked |= isDimensionStacked(data, dims[0]\r\n  /*, dims[1]*/\r\n  )) {\r\n    // jshint ignore:line\r\n    dims[0] = stackResultDim;\r\n  }\r\n\r\n  if (stacked |= isDimensionStacked(data, dims[1]\r\n  /*, dims[0]*/\r\n  )) {\r\n    // jshint ignore:line\r\n    dims[1] = stackResultDim;\r\n  }\r\n\r\n  return {\r\n    dataDimsForPoint: dims,\r\n    valueStart: valueStart,\r\n    valueAxisDim: valueAxisDim,\r\n    baseAxisDim: baseAxisDim,\r\n    stacked: !!stacked,\r\n    valueDim: valueDim,\r\n    baseDim: baseDim,\r\n    baseDataOffset: baseDataOffset,\r\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\r\n  };\r\n}\r\n\r\nfunction getValueStart(valueAxis, valueOrigin) {\r\n  var valueStart = 0;\r\n  var extent = valueAxis.scale.getExtent();\r\n\r\n  if (valueOrigin === 'start') {\r\n    valueStart = extent[0];\r\n  } else if (valueOrigin === 'end') {\r\n    valueStart = extent[1];\r\n  } // auto\r\n  else {\r\n      // Both positive\r\n      if (extent[0] > 0) {\r\n        valueStart = extent[0];\r\n      } // Both negative\r\n      else if (extent[1] < 0) {\r\n          valueStart = extent[1];\r\n        } // If is one positive, and one negative, onZero shall be true\r\n\r\n    }\r\n\r\n  return valueStart;\r\n}\r\n\r\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\r\n  var value = NaN;\r\n\r\n  if (dataCoordInfo.stacked) {\r\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\r\n  }\r\n\r\n  if (isNaN(value)) {\r\n    value = dataCoordInfo.valueStart;\r\n  }\r\n\r\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\r\n  var stackedData = [];\r\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\r\n  stackedData[1 - baseDataOffset] = value;\r\n  return coordSys.dataToPoint(stackedData);\r\n}\r\n\r\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\r\nexports.getStackedOnPoint = getStackedOnPoint;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _helper = require(\"./helper\");\r\n\r\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\r\nvar getStackedOnPoint = _helper.getStackedOnPoint;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// var arrayDiff = require('zrender/src/core/arrayDiff');\r\n// 'zrender/src/core/arrayDiff' has been used before, but it did\r\n// not do well in performance when roam with fixed dataZoom window.\r\n// function convertToIntId(newIdList, oldIdList) {\r\n//     // Generate int id instead of string id.\r\n//     // Compare string maybe slow in score function of arrDiff\r\n//     // Assume id in idList are all unique\r\n//     var idIndicesMap = {};\r\n//     var idx = 0;\r\n//     for (var i = 0; i < newIdList.length; i++) {\r\n//         idIndicesMap[newIdList[i]] = idx;\r\n//         newIdList[i] = idx++;\r\n//     }\r\n//     for (var i = 0; i < oldIdList.length; i++) {\r\n//         var oldId = oldIdList[i];\r\n//         // Same with newIdList\r\n//         if (idIndicesMap[oldId]) {\r\n//             oldIdList[i] = idIndicesMap[oldId];\r\n//         }\r\n//         else {\r\n//             oldIdList[i] = idx++;\r\n//         }\r\n//     }\r\n// }\r\nfunction diffData(oldData, newData) {\r\n  var diffResult = [];\r\n  newData.diff(oldData).add(function (idx) {\r\n    diffResult.push({\r\n      cmd: '+',\r\n      idx: idx\r\n    });\r\n  }).update(function (newIdx, oldIdx) {\r\n    diffResult.push({\r\n      cmd: '=',\r\n      idx: oldIdx,\r\n      idx1: newIdx\r\n    });\r\n  }).remove(function (idx) {\r\n    diffResult.push({\r\n      cmd: '-',\r\n      idx: idx\r\n    });\r\n  }).execute();\r\n  return diffResult;\r\n}\r\n\r\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\r\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\r\n  // var oldIdList = oldData.mapArray(oldData.getId);\r\n  // convertToIntId(newIdList, oldIdList);\r\n  // // FIXME One data ?\r\n  // diff = arrayDiff(oldIdList, newIdList);\r\n\r\n  var currPoints = [];\r\n  var nextPoints = []; // Points for stacking base line\r\n\r\n  var currStackedPoints = [];\r\n  var nextStackedPoints = [];\r\n  var status = [];\r\n  var sortedIndices = [];\r\n  var rawIndices = [];\r\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\r\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\r\n\r\n  for (var i = 0; i < diff.length; i++) {\r\n    var diffItem = diff[i];\r\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\r\n    // Which is in case remvoing or add more than one data in the tail or head\r\n\r\n    switch (diffItem.cmd) {\r\n      case '=':\r\n        var currentPt = oldData.getItemLayout(diffItem.idx);\r\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\r\n\r\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\r\n          currentPt = nextPt.slice();\r\n        }\r\n\r\n        currPoints.push(currentPt);\r\n        nextPoints.push(nextPt);\r\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\r\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\r\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\r\n        break;\r\n\r\n      case '+':\r\n        var idx = diffItem.idx;\r\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\r\n        nextPoints.push(newData.getItemLayout(idx).slice());\r\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\r\n        nextStackedPoints.push(newStackedOnPoints[idx]);\r\n        rawIndices.push(newData.getRawIndex(idx));\r\n        break;\r\n\r\n      case '-':\r\n        var idx = diffItem.idx;\r\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\r\n        // FIXME FIXME FIXME\r\n\r\n        if (rawIndex !== idx) {\r\n          currPoints.push(oldData.getItemLayout(idx));\r\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\r\n          currStackedPoints.push(oldStackedOnPoints[idx]);\r\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\r\n          rawIndices.push(rawIndex);\r\n        } else {\r\n          pointAdded = false;\r\n        }\r\n\r\n    } // Original indices\r\n\r\n\r\n    if (pointAdded) {\r\n      status.push(diffItem);\r\n      sortedIndices.push(sortedIndices.length);\r\n    }\r\n  } // Diff result may be crossed if all items are changed\r\n  // Sort by data index\r\n\r\n\r\n  sortedIndices.sort(function (a, b) {\r\n    return rawIndices[a] - rawIndices[b];\r\n  });\r\n  var sortedCurrPoints = [];\r\n  var sortedNextPoints = [];\r\n  var sortedCurrStackedPoints = [];\r\n  var sortedNextStackedPoints = [];\r\n  var sortedStatus = [];\r\n\r\n  for (var i = 0; i < sortedIndices.length; i++) {\r\n    var idx = sortedIndices[i];\r\n    sortedCurrPoints[i] = currPoints[idx];\r\n    sortedNextPoints[i] = nextPoints[idx];\r\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\r\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\r\n    sortedStatus[i] = status[idx];\r\n  }\r\n\r\n  return {\r\n    current: sortedCurrPoints,\r\n    next: sortedNextPoints,\r\n    stackedOnCurrent: sortedCurrStackedPoints,\r\n    stackedOnNext: sortedNextStackedPoints,\r\n    status: sortedStatus\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Path = require(\"zrender/lib/graphic/Path\");\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Poly path support NaN point\r\nvar vec2Min = vec2.min;\r\nvar vec2Max = vec2.max;\r\nvar scaleAndAdd = vec2.scaleAndAdd;\r\nvar v2Copy = vec2.copy; // Temporary variable\r\n\r\nvar v = [];\r\nvar cp0 = [];\r\nvar cp1 = [];\r\n\r\nfunction isPointNull(p) {\r\n  return isNaN(p[0]) || isNaN(p[1]);\r\n}\r\n\r\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\r\n  // if (smoothMonotone == null) {\r\n  //     if (isMono(points, 'x')) {\r\n  //         return drawMono(ctx, points, start, segLen, allLen,\r\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\r\n  //     }\r\n  //     else if (isMono(points, 'y')) {\r\n  //         return drawMono(ctx, points, start, segLen, allLen,\r\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\r\n  //     }\r\n  //     else {\r\n  //         return drawNonMono.apply(this, arguments);\r\n  //     }\r\n  // }\r\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\r\n  //     return drawMono.apply(this, arguments);\r\n  // }\r\n  // else {\r\n  //     return drawNonMono.apply(this, arguments);\r\n  // }\r\n  if (smoothMonotone === 'none' || !smoothMonotone) {\r\n    return drawNonMono.apply(this, arguments);\r\n  } else {\r\n    return drawMono.apply(this, arguments);\r\n  }\r\n}\r\n/**\r\n * Check if points is in monotone.\r\n *\r\n * @param {number[][]} points         Array of points which is in [x, y] form\r\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\r\n *                                    dimension that is checking.\r\n *                                    If is 'none', `drawNonMono` should be\r\n *                                    called.\r\n *                                    If is undefined, either being monotone\r\n *                                    in 'x' or 'y' will call `drawMono`.\r\n */\r\n// function isMono(points, smoothMonotone) {\r\n//     if (points.length <= 1) {\r\n//         return true;\r\n//     }\r\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\r\n//     var last = points[0][dim];\r\n//     var lastDiff = 0;\r\n//     for (var i = 1; i < points.length; ++i) {\r\n//         var diff = points[i][dim] - last;\r\n//         if (!isNaN(diff) && !isNaN(lastDiff)\r\n//             && diff !== 0 && lastDiff !== 0\r\n//             && ((diff >= 0) !== (lastDiff >= 0))\r\n//         ) {\r\n//             return false;\r\n//         }\r\n//         if (!isNaN(diff) && diff !== 0) {\r\n//             lastDiff = diff;\r\n//             last = points[i][dim];\r\n//         }\r\n//     }\r\n//     return true;\r\n// }\r\n\r\n/**\r\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\r\n * control points will be used. This should be used when points are monotone\r\n * either in x or y dimension.\r\n */\r\n\r\n\r\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\r\n  var prevIdx = 0;\r\n  var idx = start;\r\n\r\n  for (var k = 0; k < segLen; k++) {\r\n    var p = points[idx];\r\n\r\n    if (idx >= allLen || idx < 0) {\r\n      break;\r\n    }\r\n\r\n    if (isPointNull(p)) {\r\n      if (connectNulls) {\r\n        idx += dir;\r\n        continue;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    if (idx === start) {\r\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\r\n    } else {\r\n      if (smooth > 0) {\r\n        var prevP = points[prevIdx];\r\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\r\n\r\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\r\n        v2Copy(cp0, prevP);\r\n        cp0[dim] = prevP[dim] + ctrlLen;\r\n        v2Copy(cp1, p);\r\n        cp1[dim] = p[dim] - ctrlLen;\r\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\r\n      } else {\r\n        ctx.lineTo(p[0], p[1]);\r\n      }\r\n    }\r\n\r\n    prevIdx = idx;\r\n    idx += dir;\r\n  }\r\n\r\n  return k;\r\n}\r\n/**\r\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\r\n * situations. This should be used when points are non-monotone neither in x or\r\n * y dimension.\r\n */\r\n\r\n\r\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\r\n  var prevIdx = 0;\r\n  var idx = start;\r\n\r\n  for (var k = 0; k < segLen; k++) {\r\n    var p = points[idx];\r\n\r\n    if (idx >= allLen || idx < 0) {\r\n      break;\r\n    }\r\n\r\n    if (isPointNull(p)) {\r\n      if (connectNulls) {\r\n        idx += dir;\r\n        continue;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    if (idx === start) {\r\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\r\n      v2Copy(cp0, p);\r\n    } else {\r\n      if (smooth > 0) {\r\n        var nextIdx = idx + dir;\r\n        var nextP = points[nextIdx];\r\n\r\n        if (connectNulls) {\r\n          // Find next point not null\r\n          while (nextP && isPointNull(points[nextIdx])) {\r\n            nextIdx += dir;\r\n            nextP = points[nextIdx];\r\n          }\r\n        }\r\n\r\n        var ratioNextSeg = 0.5;\r\n        var prevP = points[prevIdx];\r\n        var nextP = points[nextIdx]; // Last point\r\n\r\n        if (!nextP || isPointNull(nextP)) {\r\n          v2Copy(cp1, p);\r\n        } else {\r\n          // If next data is null in not connect case\r\n          if (isPointNull(nextP) && !connectNulls) {\r\n            nextP = p;\r\n          }\r\n\r\n          vec2.sub(v, nextP, prevP);\r\n          var lenPrevSeg;\r\n          var lenNextSeg;\r\n\r\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\r\n            var dim = smoothMonotone === 'x' ? 0 : 1;\r\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\r\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\r\n          } else {\r\n            lenPrevSeg = vec2.dist(p, prevP);\r\n            lenNextSeg = vec2.dist(p, nextP);\r\n          } // Use ratio of seg length\r\n\r\n\r\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\r\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\r\n        } // Smooth constraint\r\n\r\n\r\n        vec2Min(cp0, cp0, smoothMax);\r\n        vec2Max(cp0, cp0, smoothMin);\r\n        vec2Min(cp1, cp1, smoothMax);\r\n        vec2Max(cp1, cp1, smoothMin);\r\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\r\n\r\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\r\n      } else {\r\n        ctx.lineTo(p[0], p[1]);\r\n      }\r\n    }\r\n\r\n    prevIdx = idx;\r\n    idx += dir;\r\n  }\r\n\r\n  return k;\r\n}\r\n\r\nfunction getBoundingBox(points, smoothConstraint) {\r\n  var ptMin = [Infinity, Infinity];\r\n  var ptMax = [-Infinity, -Infinity];\r\n\r\n  if (smoothConstraint) {\r\n    for (var i = 0; i < points.length; i++) {\r\n      var pt = points[i];\r\n\r\n      if (pt[0] < ptMin[0]) {\r\n        ptMin[0] = pt[0];\r\n      }\r\n\r\n      if (pt[1] < ptMin[1]) {\r\n        ptMin[1] = pt[1];\r\n      }\r\n\r\n      if (pt[0] > ptMax[0]) {\r\n        ptMax[0] = pt[0];\r\n      }\r\n\r\n      if (pt[1] > ptMax[1]) {\r\n        ptMax[1] = pt[1];\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    min: smoothConstraint ? ptMin : ptMax,\r\n    max: smoothConstraint ? ptMax : ptMin\r\n  };\r\n}\r\n\r\nvar Polyline = Path.extend({\r\n  type: 'ec-polyline',\r\n  shape: {\r\n    points: [],\r\n    smooth: 0,\r\n    smoothConstraint: true,\r\n    smoothMonotone: null,\r\n    connectNulls: false\r\n  },\r\n  style: {\r\n    fill: null,\r\n    stroke: '#000'\r\n  },\r\n  brush: fixClipWithShadow(Path.prototype.brush),\r\n  buildPath: function (ctx, shape) {\r\n    var points = shape.points;\r\n    var i = 0;\r\n    var len = points.length;\r\n    var result = getBoundingBox(points, shape.smoothConstraint);\r\n\r\n    if (shape.connectNulls) {\r\n      // Must remove first and last null values avoid draw error in polygon\r\n      for (; len > 0; len--) {\r\n        if (!isPointNull(points[len - 1])) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (; i < len; i++) {\r\n        if (!isPointNull(points[i])) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    while (i < len) {\r\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\r\n    }\r\n  }\r\n});\r\nvar Polygon = Path.extend({\r\n  type: 'ec-polygon',\r\n  shape: {\r\n    points: [],\r\n    // Offset between stacked base points and points\r\n    stackedOnPoints: [],\r\n    smooth: 0,\r\n    stackedOnSmooth: 0,\r\n    smoothConstraint: true,\r\n    smoothMonotone: null,\r\n    connectNulls: false\r\n  },\r\n  brush: fixClipWithShadow(Path.prototype.brush),\r\n  buildPath: function (ctx, shape) {\r\n    var points = shape.points;\r\n    var stackedOnPoints = shape.stackedOnPoints;\r\n    var i = 0;\r\n    var len = points.length;\r\n    var smoothMonotone = shape.smoothMonotone;\r\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\r\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\r\n\r\n    if (shape.connectNulls) {\r\n      // Must remove first and last null values avoid draw error in polygon\r\n      for (; len > 0; len--) {\r\n        if (!isPointNull(points[len - 1])) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (; i < len; i++) {\r\n        if (!isPointNull(points[i])) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    while (i < len) {\r\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\r\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\r\n      i += k + 1;\r\n      ctx.closePath();\r\n    }\r\n  }\r\n});\r\nexports.Polyline = Polyline;\r\nexports.Polygon = Polygon;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./lines/LinesSeries\");\r\n\r\nrequire(\"./lines/LinesView\");\r\n\r\nvar linesLayout = require(\"./lines/linesLayout\");\r\n\r\nvar linesVisual = require(\"./lines/linesVisual\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerLayout(linesLayout);\r\necharts.registerVisual(linesVisual);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar concatArray = _util.concatArray;\r\nvar mergeAll = _util.mergeAll;\r\nvar map = _util.map;\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Uint32Array, Float64Array, Float32Array */\r\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\r\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\r\n\r\nfunction compatEc2(seriesOpt) {\r\n  var data = seriesOpt.data;\r\n\r\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\r\n    seriesOpt.data = map(data, function (itemOpt) {\r\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\r\n      var target = {\r\n        coords: coords\r\n      };\r\n\r\n      if (itemOpt[0].name) {\r\n        target.fromName = itemOpt[0].name;\r\n      }\r\n\r\n      if (itemOpt[1].name) {\r\n        target.toName = itemOpt[1].name;\r\n      }\r\n\r\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\r\n    });\r\n  }\r\n}\r\n\r\nvar LinesSeries = SeriesModel.extend({\r\n  type: 'series.lines',\r\n  dependencies: ['grid', 'polar'],\r\n  visualColorAccessPath: 'lineStyle.color',\r\n  init: function (option) {\r\n    // The input data may be null/undefined.\r\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\r\n\r\n    compatEc2(option);\r\n\r\n    var result = this._processFlatCoordsArray(option.data);\r\n\r\n    this._flatCoords = result.flatCoords;\r\n    this._flatCoordsOffset = result.flatCoordsOffset;\r\n\r\n    if (result.flatCoords) {\r\n      option.data = new Float32Array(result.count);\r\n    }\r\n\r\n    LinesSeries.superApply(this, 'init', arguments);\r\n  },\r\n  mergeOption: function (option) {\r\n    compatEc2(option);\r\n\r\n    if (option.data) {\r\n      // Only update when have option data to merge.\r\n      var result = this._processFlatCoordsArray(option.data);\r\n\r\n      this._flatCoords = result.flatCoords;\r\n      this._flatCoordsOffset = result.flatCoordsOffset;\r\n\r\n      if (result.flatCoords) {\r\n        option.data = new Float32Array(result.count);\r\n      }\r\n    }\r\n\r\n    LinesSeries.superApply(this, 'mergeOption', arguments);\r\n  },\r\n  appendData: function (params) {\r\n    var result = this._processFlatCoordsArray(params.data);\r\n\r\n    if (result.flatCoords) {\r\n      if (!this._flatCoords) {\r\n        this._flatCoords = result.flatCoords;\r\n        this._flatCoordsOffset = result.flatCoordsOffset;\r\n      } else {\r\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\r\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\r\n      }\r\n\r\n      params.data = new Float32Array(result.count);\r\n    }\r\n\r\n    this.getRawData().appendData(params.data);\r\n  },\r\n  _getCoordsFromItemModel: function (idx) {\r\n    var itemModel = this.getData().getItemModel(idx);\r\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\r\n    return coords;\r\n  },\r\n  getLineCoordsCount: function (idx) {\r\n    if (this._flatCoordsOffset) {\r\n      return this._flatCoordsOffset[idx * 2 + 1];\r\n    } else {\r\n      return this._getCoordsFromItemModel(idx).length;\r\n    }\r\n  },\r\n  getLineCoords: function (idx, out) {\r\n    if (this._flatCoordsOffset) {\r\n      var offset = this._flatCoordsOffset[idx * 2];\r\n      var len = this._flatCoordsOffset[idx * 2 + 1];\r\n\r\n      for (var i = 0; i < len; i++) {\r\n        out[i] = out[i] || [];\r\n        out[i][0] = this._flatCoords[offset + i * 2];\r\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\r\n      }\r\n\r\n      return len;\r\n    } else {\r\n      var coords = this._getCoordsFromItemModel(idx);\r\n\r\n      for (var i = 0; i < coords.length; i++) {\r\n        out[i] = out[i] || [];\r\n        out[i][0] = coords[i][0];\r\n        out[i][1] = coords[i][1];\r\n      }\r\n\r\n      return coords.length;\r\n    }\r\n  },\r\n  _processFlatCoordsArray: function (data) {\r\n    var startOffset = 0;\r\n\r\n    if (this._flatCoords) {\r\n      startOffset = this._flatCoords.length;\r\n    } // Stored as a typed array. In format\r\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\r\n\r\n\r\n    if (typeof data[0] === 'number') {\r\n      var len = data.length; // Store offset and len of each segment\r\n\r\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\r\n      var coordsStorage = new Float64Arr(len);\r\n      var coordsCursor = 0;\r\n      var offsetCursor = 0;\r\n      var dataCount = 0;\r\n\r\n      for (var i = 0; i < len;) {\r\n        dataCount++;\r\n        var count = data[i++]; // Offset\r\n\r\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\r\n\r\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\r\n\r\n        for (var k = 0; k < count; k++) {\r\n          var x = data[i++];\r\n          var y = data[i++];\r\n          coordsStorage[coordsCursor++] = x;\r\n          coordsStorage[coordsCursor++] = y;\r\n\r\n          if (i > len) {}\r\n        }\r\n      }\r\n\r\n      return {\r\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\r\n        flatCoords: coordsStorage,\r\n        count: dataCount\r\n      };\r\n    }\r\n\r\n    return {\r\n      flatCoordsOffset: null,\r\n      flatCoords: null,\r\n      count: data.length\r\n    };\r\n  },\r\n  getInitialData: function (option, ecModel) {\r\n    var lineData = new List(['value'], this);\r\n    lineData.hasItemOption = false;\r\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\r\n      // dataItem is simply coords\r\n      if (dataItem instanceof Array) {\r\n        return NaN;\r\n      } else {\r\n        lineData.hasItemOption = true;\r\n        var value = dataItem.value;\r\n\r\n        if (value != null) {\r\n          return value instanceof Array ? value[dimIndex] : value;\r\n        }\r\n      }\r\n    });\r\n    return lineData;\r\n  },\r\n  formatTooltip: function (dataIndex) {\r\n    var data = this.getData();\r\n    var itemModel = data.getItemModel(dataIndex);\r\n    var name = itemModel.get('name');\r\n\r\n    if (name) {\r\n      return name;\r\n    }\r\n\r\n    var fromName = itemModel.get('fromName');\r\n    var toName = itemModel.get('toName');\r\n    var html = [];\r\n    fromName != null && html.push(fromName);\r\n    toName != null && html.push(toName);\r\n    return encodeHTML(html.join(' > '));\r\n  },\r\n  preventIncremental: function () {\r\n    return !!this.get('effect.show');\r\n  },\r\n  getProgressive: function () {\r\n    var progressive = this.option.progressive;\r\n\r\n    if (progressive == null) {\r\n      return this.option.large ? 1e4 : this.get('progressive');\r\n    }\r\n\r\n    return progressive;\r\n  },\r\n  getProgressiveThreshold: function () {\r\n    var progressiveThreshold = this.option.progressiveThreshold;\r\n\r\n    if (progressiveThreshold == null) {\r\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\r\n    }\r\n\r\n    return progressiveThreshold;\r\n  },\r\n  defaultOption: {\r\n    coordinateSystem: 'geo',\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    hoverAnimation: true,\r\n    // Cartesian coordinate system\r\n    xAxisIndex: 0,\r\n    yAxisIndex: 0,\r\n    symbol: ['none', 'none'],\r\n    symbolSize: [10, 10],\r\n    // Geo coordinate system\r\n    geoIndex: 0,\r\n    effect: {\r\n      show: false,\r\n      period: 4,\r\n      // Animation delay. support callback\r\n      // delay: 0,\r\n      // If move with constant speed px/sec\r\n      // period will be ignored if this property is > 0,\r\n      constantSpeed: 0,\r\n      symbol: 'circle',\r\n      symbolSize: 3,\r\n      loop: true,\r\n      // Length of trail, 0 - 1\r\n      trailLength: 0.2 // Same with lineStyle.color\r\n      // color\r\n\r\n    },\r\n    large: false,\r\n    // Available when large is true\r\n    largeThreshold: 2000,\r\n    // If lines are polyline\r\n    // polyline not support curveness, label, animation\r\n    polyline: false,\r\n    // If clip the overflow.\r\n    // Available when coordinateSystem is cartesian or polar.\r\n    clip: true,\r\n    label: {\r\n      show: false,\r\n      position: 'end' // distance: 5,\r\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n\r\n    },\r\n    lineStyle: {\r\n      opacity: 0.5\r\n    }\r\n  }\r\n});\r\nvar _default = LinesSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar LineDraw = require(\"../helper/LineDraw\");\r\n\r\nvar EffectLine = require(\"../helper/EffectLine\");\r\n\r\nvar Line = require(\"../helper/Line\");\r\n\r\nvar Polyline = require(\"../helper/Polyline\");\r\n\r\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\r\n\r\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\r\n\r\nvar linesLayout = require(\"./linesLayout\");\r\n\r\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\r\n\r\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendChartView({\r\n  type: 'lines',\r\n  init: function () {},\r\n  render: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var lineDraw = this._updateLineDraw(data, seriesModel);\r\n\r\n    var zlevel = seriesModel.get('zlevel');\r\n    var trailLength = seriesModel.get('effect.trailLength');\r\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\r\n    // FIXME Better way ?\r\n    // SVG doesn't support\r\n\r\n    var isSvg = zr.painter.getType() === 'svg';\r\n\r\n    if (!isSvg) {\r\n      zr.painter.getLayer(zlevel).clear(true);\r\n    } // Config layer with motion blur\r\n\r\n\r\n    if (this._lastZlevel != null && !isSvg) {\r\n      zr.configLayer(this._lastZlevel, {\r\n        motionBlur: false\r\n      });\r\n    }\r\n\r\n    if (this._showEffect(seriesModel) && trailLength) {\r\n      if (!isSvg) {\r\n        zr.configLayer(zlevel, {\r\n          motionBlur: true,\r\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\r\n        });\r\n      }\r\n    }\r\n\r\n    lineDraw.updateData(data);\r\n    var clipPath = seriesModel.get('clip', true) && createClipPath(seriesModel.coordinateSystem, false, seriesModel);\r\n\r\n    if (clipPath) {\r\n      this.group.setClipPath(clipPath);\r\n    } else {\r\n      this.group.removeClipPath();\r\n    }\r\n\r\n    this._lastZlevel = zlevel;\r\n    this._finished = true;\r\n  },\r\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var lineDraw = this._updateLineDraw(data, seriesModel);\r\n\r\n    lineDraw.incrementalPrepareUpdate(data);\r\n\r\n    this._clearLayer(api);\r\n\r\n    this._finished = false;\r\n  },\r\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\r\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\r\n\r\n    this._finished = taskParams.end === seriesModel.getData().count();\r\n  },\r\n  updateTransform: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var pipelineContext = seriesModel.pipelineContext;\r\n\r\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\r\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\r\n      return {\r\n        update: true\r\n      };\r\n    } else {\r\n      // TODO Use same logic with ScatterView.\r\n      // Manually update layout\r\n      var res = linesLayout.reset(seriesModel);\r\n\r\n      if (res.progress) {\r\n        res.progress({\r\n          start: 0,\r\n          end: data.count()\r\n        }, data);\r\n      }\r\n\r\n      this._lineDraw.updateLayout();\r\n\r\n      this._clearLayer(api);\r\n    }\r\n  },\r\n  _updateLineDraw: function (data, seriesModel) {\r\n    var lineDraw = this._lineDraw;\r\n\r\n    var hasEffect = this._showEffect(seriesModel);\r\n\r\n    var isPolyline = !!seriesModel.get('polyline');\r\n    var pipelineContext = seriesModel.pipelineContext;\r\n    var isLargeDraw = pipelineContext.large;\r\n\r\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\r\n      if (lineDraw) {\r\n        lineDraw.remove();\r\n      }\r\n\r\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\r\n      this._hasEffet = hasEffect;\r\n      this._isPolyline = isPolyline;\r\n      this._isLargeDraw = isLargeDraw;\r\n      this.group.removeAll();\r\n    }\r\n\r\n    this.group.add(lineDraw.group);\r\n    return lineDraw;\r\n  },\r\n  _showEffect: function (seriesModel) {\r\n    return !!seriesModel.get('effect.show');\r\n  },\r\n  _clearLayer: function (api) {\r\n    // Not use motion when dragging or zooming\r\n    var zr = api.getZr();\r\n    var isSvg = zr.painter.getType() === 'svg';\r\n\r\n    if (!isSvg && this._lastZlevel != null) {\r\n      zr.painter.getLayer(this._lastZlevel).clear(true);\r\n    }\r\n  },\r\n  remove: function (ecModel, api) {\r\n    this._lineDraw && this._lineDraw.remove();\r\n    this._lineDraw = null; // Clear motion when lineDraw is removed\r\n\r\n    this._clearLayer(api);\r\n  },\r\n  dispose: function () {}\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Float32Array */\r\nvar _default = {\r\n  seriesType: 'lines',\r\n  plan: createRenderPlanner(),\r\n  reset: function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var isPolyline = seriesModel.get('polyline');\r\n    var isLarge = seriesModel.pipelineContext.large;\r\n\r\n    function progress(params, lineData) {\r\n      var lineCoords = [];\r\n\r\n      if (isLarge) {\r\n        var points;\r\n        var segCount = params.end - params.start;\r\n\r\n        if (isPolyline) {\r\n          var totalCoordsCount = 0;\r\n\r\n          for (var i = params.start; i < params.end; i++) {\r\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\r\n          }\r\n\r\n          points = new Float32Array(segCount + totalCoordsCount * 2);\r\n        } else {\r\n          points = new Float32Array(segCount * 4);\r\n        }\r\n\r\n        var offset = 0;\r\n        var pt = [];\r\n\r\n        for (var i = params.start; i < params.end; i++) {\r\n          var len = seriesModel.getLineCoords(i, lineCoords);\r\n\r\n          if (isPolyline) {\r\n            points[offset++] = len;\r\n          }\r\n\r\n          for (var k = 0; k < len; k++) {\r\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\r\n            points[offset++] = pt[0];\r\n            points[offset++] = pt[1];\r\n          }\r\n        }\r\n\r\n        lineData.setLayout('linesPoints', points);\r\n      } else {\r\n        for (var i = params.start; i < params.end; i++) {\r\n          var itemModel = lineData.getItemModel(i);\r\n          var len = seriesModel.getLineCoords(i, lineCoords);\r\n          var pts = [];\r\n\r\n          if (isPolyline) {\r\n            for (var j = 0; j < len; j++) {\r\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\r\n            }\r\n          } else {\r\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\r\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\r\n            var curveness = itemModel.get('lineStyle.curveness');\r\n\r\n            if (+curveness) {\r\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\r\n            }\r\n          }\r\n\r\n          lineData.setItemLayout(i, pts);\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      progress: progress\r\n    };\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction normalize(a) {\r\n  if (!(a instanceof Array)) {\r\n    a = [a, a];\r\n  }\r\n\r\n  return a;\r\n}\r\n\r\nvar opacityQuery = 'lineStyle.opacity'.split('.');\r\nvar _default = {\r\n  seriesType: 'lines',\r\n  reset: function (seriesModel, ecModel, api) {\r\n    var symbolType = normalize(seriesModel.get('symbol'));\r\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\r\n    var data = seriesModel.getData();\r\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\r\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\r\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\r\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\r\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\r\n\r\n    function dataEach(data, idx) {\r\n      var itemModel = data.getItemModel(idx);\r\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\r\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\r\n      var opacity = itemModel.get(opacityQuery);\r\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\r\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\r\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\r\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\r\n      data.setItemVisual(idx, 'opacity', opacity);\r\n    }\r\n\r\n    return {\r\n      dataEach: data.hasItemOption ? dataEach : null\r\n    };\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./map/MapSeries\");\r\n\r\nrequire(\"./map/MapView\");\r\n\r\nrequire(\"../action/geoRoam\");\r\n\r\nrequire(\"../coord/geo/geoCreator\");\r\n\r\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\r\n\r\nvar mapVisual = require(\"./map/mapVisual\");\r\n\r\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\r\n\r\nvar backwardCompat = require(\"./map/backwardCompat\");\r\n\r\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerLayout(mapSymbolLayout);\r\necharts.registerVisual(mapVisual);\r\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\r\necharts.registerPreprocessor(backwardCompat);\r\ncreateDataSelectAction('map', [{\r\n  type: 'mapToggleSelect',\r\n  event: 'mapselectchanged',\r\n  method: 'toggleSelected'\r\n}, {\r\n  type: 'mapSelect',\r\n  event: 'mapselected',\r\n  method: 'select'\r\n}, {\r\n  type: 'mapUnSelect',\r\n  event: 'mapunselected',\r\n  method: 'unSelect'\r\n}]);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar createListSimply = require(\"../helper/createListSimply\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\nvar addCommas = _format.addCommas;\r\n\r\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\r\n\r\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\r\n\r\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\r\n\r\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\r\n\r\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\r\n\r\nvar makeSeriesEncodeForNameBased = _sourceHelper.makeSeriesEncodeForNameBased;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar MapSeries = SeriesModel.extend({\r\n  type: 'series.map',\r\n  dependencies: ['geo'],\r\n  layoutMode: 'box',\r\n\r\n  /**\r\n   * Only first map series of same mapType will drawMap\r\n   * @type {boolean}\r\n   */\r\n  needsDrawMap: false,\r\n\r\n  /**\r\n   * Group of all map series with same mapType\r\n   * @type {boolean}\r\n   */\r\n  seriesGroup: [],\r\n  getInitialData: function (option) {\r\n    var data = createListSimply(this, {\r\n      coordDimensions: ['value'],\r\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\r\n    });\r\n    var valueDim = data.mapDimension('value');\r\n    var dataNameMap = zrUtil.createHashMap();\r\n    var selectTargetList = [];\r\n    var toAppendNames = [];\r\n\r\n    for (var i = 0, len = data.count(); i < len; i++) {\r\n      var name = data.getName(i);\r\n      dataNameMap.set(name, true);\r\n      selectTargetList.push({\r\n        name: name,\r\n        value: data.get(valueDim, i),\r\n        selected: retrieveRawAttr(data, i, 'selected')\r\n      });\r\n    }\r\n\r\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);\r\n    zrUtil.each(geoSource.regions, function (region) {\r\n      var name = region.name;\r\n\r\n      if (!dataNameMap.get(name)) {\r\n        selectTargetList.push({\r\n          name: name\r\n        });\r\n        toAppendNames.push(name);\r\n      }\r\n    });\r\n    this.updateSelectedMap(selectTargetList); // Complete data with missing regions. The consequent processes (like visual\r\n    // map and render) can not be performed without a \"full data\". For example,\r\n    // find `dataIndex` by name.\r\n\r\n    data.appendValues([], toAppendNames);\r\n    return data;\r\n  },\r\n\r\n  /**\r\n   * If no host geo model, return null, which means using a\r\n   * inner exclusive geo model.\r\n   */\r\n  getHostGeoModel: function () {\r\n    var geoIndex = this.option.geoIndex;\r\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\r\n  },\r\n  getMapType: function () {\r\n    return (this.getHostGeoModel() || this).option.map;\r\n  },\r\n  // _fillOption: function (option, mapName) {\r\n  // Shallow clone\r\n  // option = zrUtil.extend({}, option);\r\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\r\n  // return option;\r\n  // },\r\n  getRawValue: function (dataIndex) {\r\n    // Use value stored in data instead because it is calculated from multiple series\r\n    // FIXME Provide all value of multiple series ?\r\n    var data = this.getData();\r\n    return data.get(data.mapDimension('value'), dataIndex);\r\n  },\r\n\r\n  /**\r\n   * Get model of region\r\n   * @param  {string} name\r\n   * @return {module:echarts/model/Model}\r\n   */\r\n  getRegionModel: function (regionName) {\r\n    var data = this.getData();\r\n    return data.getItemModel(data.indexOfName(regionName));\r\n  },\r\n\r\n  /**\r\n   * Map tooltip formatter\r\n   *\r\n   * @param {number} dataIndex\r\n   */\r\n  formatTooltip: function (dataIndex, multipleSeries, dataType, renderMode) {\r\n    // FIXME orignalData and data is a bit confusing\r\n    var data = this.getData();\r\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\r\n    var name = data.getName(dataIndex);\r\n    var seriesGroup = this.seriesGroup;\r\n    var seriesNames = [];\r\n\r\n    for (var i = 0; i < seriesGroup.length; i++) {\r\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\r\n      var valueDim = data.mapDimension('value');\r\n\r\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\r\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\r\n      }\r\n    }\r\n\r\n    var newLine = renderMode === 'html' ? '<br/>' : '\\n';\r\n    return seriesNames.join(', ') + newLine + encodeHTML(name + ' : ' + formattedValue);\r\n  },\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  getTooltipPosition: function (dataIndex) {\r\n    if (dataIndex != null) {\r\n      var name = this.getData().getName(dataIndex);\r\n      var geo = this.coordinateSystem;\r\n      var region = geo.getRegion(name);\r\n      return region && geo.dataToPoint(region.center);\r\n    }\r\n  },\r\n  setZoom: function (zoom) {\r\n    this.option.zoom = zoom;\r\n  },\r\n  setCenter: function (center) {\r\n    this.option.center = center;\r\n  },\r\n  defaultOption: {\r\n    // 一级层叠\r\n    zlevel: 0,\r\n    // 二级层叠\r\n    z: 2,\r\n    coordinateSystem: 'geo',\r\n    // map should be explicitly specified since ec3.\r\n    map: '',\r\n    // If `geoIndex` is not specified, a exclusive geo will be\r\n    // created. Otherwise use the specified geo component, and\r\n    // `map` and `mapType` are ignored.\r\n    // geoIndex: 0,\r\n    // 'center' | 'left' | 'right' | 'x%' | {number}\r\n    left: 'center',\r\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\r\n    top: 'center',\r\n    // right\r\n    // bottom\r\n    // width:\r\n    // height\r\n    // Aspect is width / height. Inited to be geoJson bbox aspect\r\n    // This parameter is used for scale this aspect\r\n    aspectScale: 0.75,\r\n    ///// Layout with center and size\r\n    // If you wan't to put map in a fixed size box with right aspect ratio\r\n    // This two properties may more conveninet\r\n    // layoutCenter: [50%, 50%]\r\n    // layoutSize: 100\r\n    // 数值合并方式，默认加和，可选为：\r\n    // 'sum' | 'average' | 'max' | 'min'\r\n    // mapValueCalculation: 'sum',\r\n    // 地图数值计算结果小数精度\r\n    // mapValuePrecision: 0,\r\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\r\n    showLegendSymbol: true,\r\n    // 选择模式，默认关闭，可选single，multiple\r\n    // selectedMode: false,\r\n    dataRangeHoverLink: true,\r\n    // 是否开启缩放及漫游模式\r\n    // roam: false,\r\n    // Define left-top, right-bottom coords to control view\r\n    // For example, [ [180, 90], [-180, -90] ],\r\n    // higher priority than center and zoom\r\n    boundingCoords: null,\r\n    // Default on center of map\r\n    center: null,\r\n    zoom: 1,\r\n    scaleLimit: null,\r\n    label: {\r\n      show: false,\r\n      color: '#000'\r\n    },\r\n    // scaleLimit: null,\r\n    itemStyle: {\r\n      borderWidth: 0.5,\r\n      borderColor: '#444',\r\n      areaColor: '#eee'\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        color: 'rgb(100,0,0)'\r\n      },\r\n      itemStyle: {\r\n        areaColor: 'rgba(255,215,0,0.8)'\r\n      }\r\n    },\r\n    nameProperty: 'name'\r\n  }\r\n});\r\nzrUtil.mixin(MapSeries, dataSelectableMixin);\r\nvar _default = MapSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar MapDraw = require(\"../../component/helper/MapDraw\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar HIGH_DOWN_PROP = '__seriesMapHighDown';\r\nvar RECORD_VERSION_PROP = '__seriesMapCallKey';\r\n\r\nvar _default = echarts.extendChartView({\r\n  type: 'map',\r\n  render: function (mapModel, ecModel, api, payload) {\r\n    // Not render if it is an toggleSelect action from self\r\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\r\n      return;\r\n    }\r\n\r\n    var group = this.group;\r\n    group.removeAll();\r\n\r\n    if (mapModel.getHostGeoModel()) {\r\n      return;\r\n    } // Not update map if it is an roam action from self\r\n\r\n\r\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\r\n      if (mapModel.needsDrawMap) {\r\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\r\n        group.add(mapDraw.group);\r\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\r\n        this._mapDraw = mapDraw;\r\n      } else {\r\n        // Remove drawed map\r\n        this._mapDraw && this._mapDraw.remove();\r\n        this._mapDraw = null;\r\n      }\r\n    } else {\r\n      var mapDraw = this._mapDraw;\r\n      mapDraw && group.add(mapDraw.group);\r\n    }\r\n\r\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\r\n  },\r\n  remove: function () {\r\n    this._mapDraw && this._mapDraw.remove();\r\n    this._mapDraw = null;\r\n    this.group.removeAll();\r\n  },\r\n  dispose: function () {\r\n    this._mapDraw && this._mapDraw.remove();\r\n    this._mapDraw = null;\r\n  },\r\n  _renderSymbols: function (mapModel, ecModel, api) {\r\n    var originalData = mapModel.originalData;\r\n    var group = this.group;\r\n    originalData.each(originalData.mapDimension('value'), function (value, originalDataIndex) {\r\n      if (isNaN(value)) {\r\n        return;\r\n      }\r\n\r\n      var layout = originalData.getItemLayout(originalDataIndex);\r\n\r\n      if (!layout || !layout.point) {\r\n        // Not exists in map\r\n        return;\r\n      }\r\n\r\n      var point = layout.point;\r\n      var offset = layout.offset;\r\n      var circle = new graphic.Circle({\r\n        style: {\r\n          // Because the special of map draw.\r\n          // Which needs statistic of multiple series and draw on one map.\r\n          // And each series also need a symbol with legend color\r\n          //\r\n          // Layout and visual are put one the different data\r\n          fill: mapModel.getData().getVisual('color')\r\n        },\r\n        shape: {\r\n          cx: point[0] + offset * 9,\r\n          cy: point[1],\r\n          r: 3\r\n        },\r\n        silent: true,\r\n        // Do not overlap the first series, on which labels are displayed.\r\n        z2: 8 + (!offset ? graphic.Z2_EMPHASIS_LIFT + 1 : 0)\r\n      }); // Only the series that has the first value on the same region is in charge of rendering the label.\r\n      // But consider the case:\r\n      // series: [\r\n      //     {id: 'X', type: 'map', map: 'm', {data: [{name: 'A', value: 11}, {name: 'B', {value: 22}]},\r\n      //     {id: 'Y', type: 'map', map: 'm', {data: [{name: 'A', value: 21}, {name: 'C', {value: 33}]}\r\n      // ]\r\n      // The offset `0` of item `A` is at series `X`, but of item `C` is at series `Y`.\r\n      // For backward compatibility, we follow the rule that render label `A` by the\r\n      // settings on series `X` but render label `C` by the settings on series `Y`.\r\n\r\n      if (!offset) {\r\n        var fullData = mapModel.mainSeries.getData();\r\n        var name = originalData.getName(originalDataIndex);\r\n        var fullIndex = fullData.indexOfName(name);\r\n        var itemModel = originalData.getItemModel(originalDataIndex);\r\n        var labelModel = itemModel.getModel('label');\r\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\r\n        var regionGroup = fullData.getItemGraphicEl(fullIndex); // `getFormattedLabel` needs to use `getData` inside. Here\r\n        // `mapModel.getData()` is shallow cloned from `mainSeries.getData()`.\r\n        // FIXME\r\n        // If this is not the `mainSeries`, the item model (like label formatter)\r\n        // set on original data item will never get. But it has been working\r\n        // like that from the begining, and this scenario is rarely encountered.\r\n        // So it won't be fixed until have to.\r\n\r\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(fullIndex, 'normal'), name);\r\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(fullIndex, 'emphasis'), normalText);\r\n        var highDownRecord = regionGroup[HIGH_DOWN_PROP];\r\n        var recordVersion = Math.random(); // Prevent from register listeners duplicatedly when roaming.\r\n\r\n        if (!highDownRecord) {\r\n          highDownRecord = regionGroup[HIGH_DOWN_PROP] = {};\r\n          var onEmphasis = zrUtil.curry(onRegionHighDown, true);\r\n          var onNormal = zrUtil.curry(onRegionHighDown, false);\r\n          regionGroup.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\r\n        } // Prevent removed regions effect current grapics.\r\n\r\n\r\n        regionGroup[RECORD_VERSION_PROP] = recordVersion;\r\n        zrUtil.extend(highDownRecord, {\r\n          recordVersion: recordVersion,\r\n          circle: circle,\r\n          labelModel: labelModel,\r\n          hoverLabelModel: hoverLabelModel,\r\n          emphasisText: emphasisText,\r\n          normalText: normalText\r\n        }); // FIXME\r\n        // Consider set option when emphasis.\r\n\r\n        enterRegionHighDown(highDownRecord, false);\r\n      }\r\n\r\n      group.add(circle);\r\n    });\r\n  }\r\n});\r\n\r\nfunction onRegionHighDown(toHighOrDown) {\r\n  var highDownRecord = this[HIGH_DOWN_PROP];\r\n\r\n  if (highDownRecord && highDownRecord.recordVersion === this[RECORD_VERSION_PROP]) {\r\n    enterRegionHighDown(highDownRecord, toHighOrDown);\r\n  }\r\n}\r\n\r\nfunction enterRegionHighDown(highDownRecord, toHighOrDown) {\r\n  var circle = highDownRecord.circle;\r\n  var labelModel = highDownRecord.labelModel;\r\n  var hoverLabelModel = highDownRecord.hoverLabelModel;\r\n  var emphasisText = highDownRecord.emphasisText;\r\n  var normalText = highDownRecord.normalText;\r\n\r\n  if (toHighOrDown) {\r\n    circle.style.extendFrom(graphic.setTextStyle({}, hoverLabelModel, {\r\n      text: hoverLabelModel.get('show') ? emphasisText : null\r\n    }, {\r\n      isRectText: true,\r\n      useInsideStyle: false\r\n    }, true)); // Make label upper than others if overlaps.\r\n\r\n    circle.__mapOriginalZ2 = circle.z2;\r\n    circle.z2 += graphic.Z2_EMPHASIS_LIFT;\r\n  } else {\r\n    graphic.setTextStyle(circle.style, labelModel, {\r\n      text: labelModel.get('show') ? normalText : null,\r\n      textPosition: labelModel.getShallow('position') || 'bottom'\r\n    }, {\r\n      isRectText: true,\r\n      useInsideStyle: false\r\n    }); // Trigger normalize style like padding.\r\n\r\n    circle.dirty(false);\r\n\r\n    if (circle.__mapOriginalZ2 != null) {\r\n      circle.z2 = circle.__mapOriginalZ2;\r\n      circle.__mapOriginalZ2 = null;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(option) {\r\n  // Save geoCoord\r\n  var mapSeries = [];\r\n  zrUtil.each(option.series, function (seriesOpt) {\r\n    if (seriesOpt && seriesOpt.type === 'map') {\r\n      mapSeries.push(seriesOpt);\r\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\r\n\r\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME 公用？\r\n\r\n/**\r\n * @param {Array.<module:echarts/data/List>} datas\r\n * @param {string} statisticType 'average' 'sum'\r\n * @inner\r\n */\r\nfunction dataStatistics(datas, statisticType) {\r\n  var dataNameMap = {};\r\n  zrUtil.each(datas, function (data) {\r\n    data.each(data.mapDimension('value'), function (value, idx) {\r\n      // Add prefix to avoid conflict with Object.prototype.\r\n      var mapKey = 'ec-' + data.getName(idx);\r\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\r\n\r\n      if (!isNaN(value)) {\r\n        dataNameMap[mapKey].push(value);\r\n      }\r\n    });\r\n  });\r\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\r\n    var mapKey = 'ec-' + datas[0].getName(idx);\r\n    var sum = 0;\r\n    var min = Infinity;\r\n    var max = -Infinity;\r\n    var len = dataNameMap[mapKey].length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      min = Math.min(min, dataNameMap[mapKey][i]);\r\n      max = Math.max(max, dataNameMap[mapKey][i]);\r\n      sum += dataNameMap[mapKey][i];\r\n    }\r\n\r\n    var result;\r\n\r\n    if (statisticType === 'min') {\r\n      result = min;\r\n    } else if (statisticType === 'max') {\r\n      result = max;\r\n    } else if (statisticType === 'average') {\r\n      result = sum / len;\r\n    } else {\r\n      result = sum;\r\n    }\r\n\r\n    return len === 0 ? NaN : result;\r\n  });\r\n}\r\n\r\nfunction _default(ecModel) {\r\n  var seriesGroups = {};\r\n  ecModel.eachSeriesByType('map', function (seriesModel) {\r\n    var hostGeoModel = seriesModel.getHostGeoModel();\r\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\r\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\r\n  });\r\n  zrUtil.each(seriesGroups, function (seriesList, key) {\r\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\r\n      return seriesModel.getData();\r\n    }), seriesList[0].get('mapValueCalculation'));\r\n\r\n    for (var i = 0; i < seriesList.length; i++) {\r\n      seriesList[i].originalData = seriesList[i].getData();\r\n    } // FIXME Put where?\r\n\r\n\r\n    for (var i = 0; i < seriesList.length; i++) {\r\n      seriesList[i].seriesGroup = seriesList;\r\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\r\n      seriesList[i].setData(data.cloneShallow());\r\n      seriesList[i].mainSeries = seriesList[0];\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel) {\r\n  var processedMapType = {};\r\n  ecModel.eachSeriesByType('map', function (mapSeries) {\r\n    var mapType = mapSeries.getMapType();\r\n\r\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\r\n      return;\r\n    }\r\n\r\n    var mapSymbolOffsets = {};\r\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\r\n      var geo = subMapSeries.coordinateSystem;\r\n      var data = subMapSeries.originalData;\r\n\r\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\r\n        data.each(data.mapDimension('value'), function (value, idx) {\r\n          var name = data.getName(idx);\r\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\r\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\r\n          // not be drawn. So here must validate if value is NaN.\r\n\r\n          if (!region || isNaN(value)) {\r\n            return;\r\n          }\r\n\r\n          var offset = mapSymbolOffsets[name] || 0;\r\n          var point = geo.dataToPoint(region.center);\r\n          mapSymbolOffsets[name] = offset + 1;\r\n          data.setItemLayout(idx, {\r\n            point: point,\r\n            offset: offset\r\n          });\r\n        });\r\n      }\r\n    }); // Show label of those region not has legendSymbol(which is offset 0)\r\n\r\n    var data = mapSeries.getData();\r\n    data.each(function (idx) {\r\n      var name = data.getName(idx);\r\n      var layout = data.getItemLayout(idx) || {};\r\n      layout.showLabel = !mapSymbolOffsets[name];\r\n      data.setItemLayout(idx, layout);\r\n    });\r\n    processedMapType[mapType] = true;\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel) {\r\n  ecModel.eachSeriesByType('map', function (seriesModel) {\r\n    var colorList = seriesModel.get('color');\r\n    var itemStyleModel = seriesModel.getModel('itemStyle');\r\n    var areaColor = itemStyleModel.get('areaColor');\r\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\r\n    seriesModel.getData().setVisual({\r\n      'areaColor': areaColor,\r\n      'color': color\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"../component/parallel\");\r\n\r\nrequire(\"./parallel/ParallelSeries\");\r\n\r\nrequire(\"./parallel/ParallelView\");\r\n\r\nvar parallelVisual = require(\"./parallel/parallelVisual\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerVisual(parallelVisual);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\nvar createHashMap = _util.createHashMap;\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar createListFromArray = require(\"../helper/createListFromArray\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = SeriesModel.extend({\r\n  type: 'series.parallel',\r\n  dependencies: ['parallel'],\r\n  visualColorAccessPath: 'lineStyle.color',\r\n  getInitialData: function (option, ecModel) {\r\n    var source = this.getSource();\r\n    setEncodeAndDimensions(source, this);\r\n    return createListFromArray(source, this);\r\n  },\r\n\r\n  /**\r\n   * User can get data raw indices on 'axisAreaSelected' event received.\r\n   *\r\n   * @public\r\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\r\n   * @return {Array.<number>} Raw indices\r\n   */\r\n  getRawIndicesByActiveState: function (activeState) {\r\n    var coordSys = this.coordinateSystem;\r\n    var data = this.getData();\r\n    var indices = [];\r\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\r\n      if (activeState === theActiveState) {\r\n        indices.push(data.getRawIndex(dataIndex));\r\n      }\r\n    });\r\n    return indices;\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    // 一级层叠\r\n    z: 2,\r\n    // 二级层叠\r\n    coordinateSystem: 'parallel',\r\n    parallelIndex: 0,\r\n    label: {\r\n      show: false\r\n    },\r\n    inactiveOpacity: 0.05,\r\n    activeOpacity: 1,\r\n    lineStyle: {\r\n      width: 1,\r\n      opacity: 0.45,\r\n      type: 'solid'\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: false\r\n      }\r\n    },\r\n    progressive: 500,\r\n    smooth: false,\r\n    // true | false | number\r\n    animationEasing: 'linear'\r\n  }\r\n});\r\n\r\nfunction setEncodeAndDimensions(source, seriesModel) {\r\n  // The mapping of parallelAxis dimension to data dimension can\r\n  // be specified in parallelAxis.option.dim. For example, if\r\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\r\n  // dimension of data. But `data.encode` has higher priority.\r\n  // Moreover, parallelModel.dimension should not be regarded as data\r\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\r\n  if (source.encodeDefine) {\r\n    return;\r\n  }\r\n\r\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\r\n\r\n  if (!parallelModel) {\r\n    return;\r\n  }\r\n\r\n  var encodeDefine = source.encodeDefine = createHashMap();\r\n  each(parallelModel.dimensions, function (axisDim) {\r\n    var dataDimIndex = convertDimNameToNumber(axisDim);\r\n    encodeDefine.set(axisDim, dataDimIndex);\r\n  });\r\n}\r\n\r\nfunction convertDimNameToNumber(dimName) {\r\n  return +dimName.replace('dim', '');\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar ChartView = require(\"../../view/Chart\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar DEFAULT_SMOOTH = 0.3;\r\nvar ParallelView = ChartView.extend({\r\n  type: 'parallel',\r\n  init: function () {\r\n    /**\r\n     * @type {module:zrender/container/Group}\r\n     * @private\r\n     */\r\n    this._dataGroup = new graphic.Group();\r\n    this.group.add(this._dataGroup);\r\n    /**\r\n     * @type {module:echarts/data/List}\r\n     */\r\n\r\n    this._data;\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n\r\n    this._initialized;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (seriesModel, ecModel, api, payload) {\r\n    var dataGroup = this._dataGroup;\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var dimensions = coordSys.dimensions;\r\n    var seriesScope = makeSeriesScope(seriesModel);\r\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\r\n\r\n    function add(newDataIndex) {\r\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\r\n      updateElCommon(line, data, newDataIndex, seriesScope);\r\n    }\r\n\r\n    function update(newDataIndex, oldDataIndex) {\r\n      var line = oldData.getItemGraphicEl(oldDataIndex);\r\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\r\n      data.setItemGraphicEl(newDataIndex, line);\r\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\r\n      graphic.updateProps(line, {\r\n        shape: {\r\n          points: points\r\n        }\r\n      }, animationModel, newDataIndex);\r\n      updateElCommon(line, data, newDataIndex, seriesScope);\r\n    }\r\n\r\n    function remove(oldDataIndex) {\r\n      var line = oldData.getItemGraphicEl(oldDataIndex);\r\n      dataGroup.remove(line);\r\n    } // First create\r\n\r\n\r\n    if (!this._initialized) {\r\n      this._initialized = true;\r\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\r\n        // Callback will be invoked immediately if there is no animation\r\n        setTimeout(function () {\r\n          dataGroup.removeClipPath();\r\n        });\r\n      });\r\n      dataGroup.setClipPath(clipPath);\r\n    }\r\n\r\n    this._data = data;\r\n  },\r\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\r\n    this._initialized = true;\r\n    this._data = null;\r\n\r\n    this._dataGroup.removeAll();\r\n  },\r\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\r\n    var data = seriesModel.getData();\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var dimensions = coordSys.dimensions;\r\n    var seriesScope = makeSeriesScope(seriesModel);\r\n\r\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\r\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\r\n      line.incremental = true;\r\n      updateElCommon(line, data, dataIndex, seriesScope);\r\n    }\r\n  },\r\n  dispose: function () {},\r\n  // _renderForProgressive: function (seriesModel) {\r\n  //     var dataGroup = this._dataGroup;\r\n  //     var data = seriesModel.getData();\r\n  //     var oldData = this._data;\r\n  //     var coordSys = seriesModel.coordinateSystem;\r\n  //     var dimensions = coordSys.dimensions;\r\n  //     var option = seriesModel.option;\r\n  //     var progressive = option.progressive;\r\n  //     var smooth = option.smooth ? SMOOTH : null;\r\n  //     // In progressive animation is disabled, so use simple data diff,\r\n  //     // which effects performance less.\r\n  //     // (Typically performance for data with length 7000+ like:\r\n  //     // simpleDiff: 60ms, addEl: 184ms,\r\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\r\n  //     if (simpleDiff(oldData, data, dimensions)) {\r\n  //         dataGroup.removeAll();\r\n  //         data.each(function (dataIndex) {\r\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\r\n  //         });\r\n  //     }\r\n  //     updateElCommon(data, progressive, smooth);\r\n  //     // Consider switch between progressive and not.\r\n  //     data.__plProgressive = true;\r\n  //     this._data = data;\r\n  // },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  remove: function () {\r\n    this._dataGroup && this._dataGroup.removeAll();\r\n    this._data = null;\r\n  }\r\n});\r\n\r\nfunction createGridClipShape(coordSys, seriesModel, cb) {\r\n  var parallelModel = coordSys.model;\r\n  var rect = coordSys.getRect();\r\n  var rectEl = new graphic.Rect({\r\n    shape: {\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height\r\n    }\r\n  });\r\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\r\n  rectEl.setShape(dim, 0);\r\n  graphic.initProps(rectEl, {\r\n    shape: {\r\n      width: rect.width,\r\n      height: rect.height\r\n    }\r\n  }, seriesModel, cb);\r\n  return rectEl;\r\n}\r\n\r\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\r\n  var points = [];\r\n\r\n  for (var i = 0; i < dimensions.length; i++) {\r\n    var dimName = dimensions[i];\r\n    var value = data.get(data.mapDimension(dimName), dataIndex);\r\n\r\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\r\n      points.push(coordSys.dataToPoint(value, dimName));\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\r\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\r\n  var line = new graphic.Polyline({\r\n    shape: {\r\n      points: points\r\n    },\r\n    silent: true,\r\n    z2: 10\r\n  });\r\n  dataGroup.add(line);\r\n  data.setItemGraphicEl(dataIndex, line);\r\n  return line;\r\n}\r\n\r\nfunction makeSeriesScope(seriesModel) {\r\n  var smooth = seriesModel.get('smooth', true);\r\n  smooth === true && (smooth = DEFAULT_SMOOTH);\r\n  return {\r\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\r\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\r\n  };\r\n}\r\n\r\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\r\n  var lineStyle = seriesScope.lineStyle;\r\n\r\n  if (data.hasItemOption) {\r\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\r\n    lineStyle = lineStyleModel.getLineStyle();\r\n  }\r\n\r\n  el.useStyle(lineStyle);\r\n  var elStyle = el.style;\r\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\r\n\r\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\r\n\r\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\r\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\r\n} // function simpleDiff(oldData, newData, dimensions) {\r\n//     var oldLen;\r\n//     if (!oldData\r\n//         || !oldData.__plProgressive\r\n//         || (oldLen = oldData.count()) !== newData.count()\r\n//     ) {\r\n//         return true;\r\n//     }\r\n//     var dimLen = dimensions.length;\r\n//     for (var i = 0; i < oldLen; i++) {\r\n//         for (var j = 0; j < dimLen; j++) {\r\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\r\n//                 return true;\r\n//             }\r\n//         }\r\n//     }\r\n//     return false;\r\n// }\r\n// FIXME\r\n// 公用方法?\r\n\r\n\r\nfunction isEmptyValue(val, axisType) {\r\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\r\n}\r\n\r\nvar _default = ParallelView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\r\nvar _default = {\r\n  seriesType: 'parallel',\r\n  reset: function (seriesModel, ecModel, api) {\r\n    var itemStyleModel = seriesModel.getModel('itemStyle');\r\n    var lineStyleModel = seriesModel.getModel('lineStyle');\r\n    var globalColors = ecModel.get('color');\r\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\r\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\r\n    var activeOpacity = seriesModel.get('activeOpacity');\r\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var data = seriesModel.getData();\r\n    var opacityMap = {\r\n      normal: lineStyle.opacity,\r\n      active: activeOpacity,\r\n      inactive: inactiveOpacity\r\n    };\r\n    data.setVisual('color', color);\r\n\r\n    function progress(params, data) {\r\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\r\n        var opacity = opacityMap[activeState];\r\n\r\n        if (activeState === 'normal' && data.hasItemOption) {\r\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\r\n          itemOpacity != null && (opacity = itemOpacity);\r\n        }\r\n\r\n        data.setItemVisual(dataIndex, 'opacity', opacity);\r\n      }, params.start, params.end);\r\n    }\r\n\r\n    return {\r\n      progress: progress\r\n    };\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nrequire(\"../coord/cartesian/Grid\");\r\n\r\nrequire(\"./bar/PictorialBarSeries\");\r\n\r\nrequire(\"./bar/PictorialBarView\");\r\n\r\nvar _barGrid = require(\"../layout/barGrid\");\r\n\r\nvar layout = _barGrid.layout;\r\n\r\nvar visualSymbol = require(\"../visual/symbol\");\r\n\r\nrequire(\"../component/gridSimple\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// In case developer forget to include grid component\r\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\r\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nrequire(\"./pie/PieSeries\");\r\n\r\nrequire(\"./pie/PieView\");\r\n\r\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\r\n\r\nvar dataColor = require(\"../visual/dataColor\");\r\n\r\nvar pieLayout = require(\"./pie/pieLayout\");\r\n\r\nvar dataFilter = require(\"../processor/dataFilter\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\ncreateDataSelectAction('pie', [{\r\n  type: 'pieToggleSelect',\r\n  event: 'pieselectchanged',\r\n  method: 'toggleSelected'\r\n}, {\r\n  type: 'pieSelect',\r\n  event: 'pieselected',\r\n  method: 'select'\r\n}, {\r\n  type: 'pieUnSelect',\r\n  event: 'pieunselected',\r\n  method: 'unSelect'\r\n}]);\r\necharts.registerVisual(dataColor('pie'));\r\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\r\necharts.registerProcessor(dataFilter('pie'));","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar createListSimply = require(\"../helper/createListSimply\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\r\n\r\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\r\n\r\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\r\n\r\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\r\n\r\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\r\n\r\nvar makeSeriesEncodeForNameBased = _sourceHelper.makeSeriesEncodeForNameBased;\r\n\r\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PieSeries = echarts.extendSeriesModel({\r\n  type: 'series.pie',\r\n  // Overwrite\r\n  init: function (option) {\r\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\r\n    this.updateSelectedMap(this._createSelectableList());\r\n\r\n    this._defaultLabelLine(option);\r\n  },\r\n  // Overwrite\r\n  mergeOption: function (newOption) {\r\n    PieSeries.superCall(this, 'mergeOption', newOption);\r\n    this.updateSelectedMap(this._createSelectableList());\r\n  },\r\n  getInitialData: function (option, ecModel) {\r\n    return createListSimply(this, {\r\n      coordDimensions: ['value'],\r\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\r\n    });\r\n  },\r\n  _createSelectableList: function () {\r\n    var data = this.getRawData();\r\n    var valueDim = data.mapDimension('value');\r\n    var targetList = [];\r\n\r\n    for (var i = 0, len = data.count(); i < len; i++) {\r\n      targetList.push({\r\n        name: data.getName(i),\r\n        value: data.get(valueDim, i),\r\n        selected: retrieveRawAttr(data, i, 'selected')\r\n      });\r\n    }\r\n\r\n    return targetList;\r\n  },\r\n  // Overwrite\r\n  getDataParams: function (dataIndex) {\r\n    var data = this.getData();\r\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\r\n\r\n    var valueList = [];\r\n    data.each(data.mapDimension('value'), function (value) {\r\n      valueList.push(value);\r\n    });\r\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\r\n    params.$vars.push('percent');\r\n    return params;\r\n  },\r\n  _defaultLabelLine: function (option) {\r\n    // Extend labelLine emphasis\r\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\r\n    var labelLineNormalOpt = option.labelLine;\r\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\r\n\r\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\r\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    hoverAnimation: true,\r\n    // 默认全局居中\r\n    center: ['50%', '50%'],\r\n    radius: [0, '75%'],\r\n    // 默认顺时针\r\n    clockwise: true,\r\n    startAngle: 90,\r\n    // 最小角度改为0\r\n    minAngle: 0,\r\n    // If the angle of a sector less than `minShowLabelAngle`,\r\n    // the label will not be displayed.\r\n    minShowLabelAngle: 0,\r\n    // 选中时扇区偏移量\r\n    selectedOffset: 10,\r\n    // 高亮扇区偏移量\r\n    hoverOffset: 10,\r\n    // If use strategy to avoid label overlapping\r\n    avoidLabelOverlap: true,\r\n    // 选择模式，默认关闭，可选single，multiple\r\n    // selectedMode: false,\r\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\r\n    // roseType: null,\r\n    percentPrecision: 2,\r\n    // If still show when all data zero.\r\n    stillShowZeroSum: true,\r\n    // cursor: null,\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: null,\r\n    height: null,\r\n    label: {\r\n      // If rotate around circle\r\n      rotate: false,\r\n      show: true,\r\n      // 'outer', 'inside', 'center'\r\n      position: 'outer',\r\n      // 'none', 'labelLine', 'edge'. Works only when position is 'outer'\r\n      alignTo: 'none',\r\n      // Closest distance between label and chart edge.\r\n      // Works only position is 'outer' and alignTo is 'edge'.\r\n      margin: '25%',\r\n      // Works only position is 'outer' and alignTo is not 'edge'.\r\n      bleedMargin: 10,\r\n      // Distance between text and label line.\r\n      distanceToLabelLine: 5 // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n      // 默认使用全局文本样式，详见TEXTSTYLE\r\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\r\n\r\n    },\r\n    // Enabled when label.normal.position is 'outer'\r\n    labelLine: {\r\n      show: true,\r\n      // 引导线两段中的第一段长度\r\n      length: 15,\r\n      // 引导线两段中的第二段长度\r\n      length2: 15,\r\n      smooth: false,\r\n      lineStyle: {\r\n        // color: 各异,\r\n        width: 1,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    itemStyle: {\r\n      borderWidth: 1\r\n    },\r\n    // Animation type. Valid values: expansion, scale\r\n    animationType: 'expansion',\r\n    // Animation type when update. Valid values: transition, expansion\r\n    animationTypeUpdate: 'transition',\r\n    animationEasing: 'cubicOut'\r\n  }\r\n});\r\nzrUtil.mixin(PieSeries, dataSelectableMixin);\r\nvar _default = PieSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar ChartView = require(\"../../view/Chart\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {module:echarts/model/Series} seriesModel\r\n * @param {boolean} hasAnimation\r\n * @inner\r\n */\r\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\r\n  var data = seriesModel.getData();\r\n  var dataIndex = this.dataIndex;\r\n  var name = data.getName(dataIndex);\r\n  var selectedOffset = seriesModel.get('selectedOffset');\r\n  api.dispatchAction({\r\n    type: 'pieToggleSelect',\r\n    from: uid,\r\n    name: name,\r\n    seriesId: seriesModel.id\r\n  });\r\n  data.each(function (idx) {\r\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\r\n  });\r\n}\r\n/**\r\n * @param {module:zrender/graphic/Sector} el\r\n * @param {Object} layout\r\n * @param {boolean} isSelected\r\n * @param {number} selectedOffset\r\n * @param {boolean} hasAnimation\r\n * @inner\r\n */\r\n\r\n\r\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\r\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\r\n  var dx = Math.cos(midAngle);\r\n  var dy = Math.sin(midAngle);\r\n  var offset = isSelected ? selectedOffset : 0;\r\n  var position = [dx * offset, dy * offset];\r\n  hasAnimation // animateTo will stop revious animation like update transition\r\n  ? el.animate().when(200, {\r\n    position: position\r\n  }).start('bounceOut') : el.attr('position', position);\r\n}\r\n/**\r\n * Piece of pie including Sector, Label, LabelLine\r\n * @constructor\r\n * @extends {module:zrender/graphic/Group}\r\n */\r\n\r\n\r\nfunction PiePiece(data, idx) {\r\n  graphic.Group.call(this);\r\n  var sector = new graphic.Sector({\r\n    z2: 2\r\n  });\r\n  var polyline = new graphic.Polyline();\r\n  var text = new graphic.Text();\r\n  this.add(sector);\r\n  this.add(polyline);\r\n  this.add(text);\r\n  this.updateData(data, idx, true);\r\n}\r\n\r\nvar piePieceProto = PiePiece.prototype;\r\n\r\npiePieceProto.updateData = function (data, idx, firstCreate) {\r\n  var sector = this.childAt(0);\r\n  var labelLine = this.childAt(1);\r\n  var labelText = this.childAt(2);\r\n  var seriesModel = data.hostModel;\r\n  var itemModel = data.getItemModel(idx);\r\n  var layout = data.getItemLayout(idx);\r\n  var sectorShape = zrUtil.extend({}, layout);\r\n  sectorShape.label = null;\r\n  var animationTypeUpdate = seriesModel.getShallow('animationTypeUpdate');\r\n\r\n  if (firstCreate) {\r\n    sector.setShape(sectorShape);\r\n    var animationType = seriesModel.getShallow('animationType');\r\n\r\n    if (animationType === 'scale') {\r\n      sector.shape.r = layout.r0;\r\n      graphic.initProps(sector, {\r\n        shape: {\r\n          r: layout.r\r\n        }\r\n      }, seriesModel, idx);\r\n    } // Expansion\r\n    else {\r\n        sector.shape.endAngle = layout.startAngle;\r\n        graphic.updateProps(sector, {\r\n          shape: {\r\n            endAngle: layout.endAngle\r\n          }\r\n        }, seriesModel, idx);\r\n      }\r\n  } else {\r\n    if (animationTypeUpdate === 'expansion') {\r\n      // Sectors are set to be target shape and an overlaying clipPath is used for animation\r\n      sector.setShape(sectorShape);\r\n    } else {\r\n      // Transition animation from the old shape\r\n      graphic.updateProps(sector, {\r\n        shape: sectorShape\r\n      }, seriesModel, idx);\r\n    }\r\n  } // Update common style\r\n\r\n\r\n  var visualColor = data.getItemVisual(idx, 'color');\r\n  sector.useStyle(zrUtil.defaults({\r\n    lineJoin: 'bevel',\r\n    fill: visualColor\r\n  }, itemModel.getModel('itemStyle').getItemStyle()));\r\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\r\n  var cursorStyle = itemModel.getShallow('cursor');\r\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\r\n\r\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), seriesModel.get('selectedOffset'), seriesModel.get('animation')); // Label and text animation should be applied only for transition type animation when update\r\n\r\n  var withAnimation = !firstCreate && animationTypeUpdate === 'transition';\r\n\r\n  this._updateLabel(data, idx, withAnimation);\r\n\r\n  this.highDownOnUpdate = !seriesModel.get('silent') ? function (fromState, toState) {\r\n    var hasAnimation = seriesModel.isAnimationEnabled() && itemModel.get('hoverAnimation');\r\n\r\n    if (toState === 'emphasis') {\r\n      labelLine.ignore = labelLine.hoverIgnore;\r\n      labelText.ignore = labelText.hoverIgnore; // Sector may has animation of updating data. Force to move to the last frame\r\n      // Or it may stopped on the wrong shape\r\n\r\n      if (hasAnimation) {\r\n        sector.stopAnimation(true);\r\n        sector.animateTo({\r\n          shape: {\r\n            r: layout.r + seriesModel.get('hoverOffset')\r\n          }\r\n        }, 300, 'elasticOut');\r\n      }\r\n    } else {\r\n      labelLine.ignore = labelLine.normalIgnore;\r\n      labelText.ignore = labelText.normalIgnore;\r\n\r\n      if (hasAnimation) {\r\n        sector.stopAnimation(true);\r\n        sector.animateTo({\r\n          shape: {\r\n            r: layout.r\r\n          }\r\n        }, 300, 'elasticOut');\r\n      }\r\n    }\r\n  } : null;\r\n  graphic.setHoverStyle(this);\r\n};\r\n\r\npiePieceProto._updateLabel = function (data, idx, withAnimation) {\r\n  var labelLine = this.childAt(1);\r\n  var labelText = this.childAt(2);\r\n  var seriesModel = data.hostModel;\r\n  var itemModel = data.getItemModel(idx);\r\n  var layout = data.getItemLayout(idx);\r\n  var labelLayout = layout.label;\r\n  var visualColor = data.getItemVisual(idx, 'color');\r\n\r\n  if (!labelLayout || isNaN(labelLayout.x) || isNaN(labelLayout.y)) {\r\n    labelText.ignore = labelText.normalIgnore = labelText.hoverIgnore = labelLine.ignore = labelLine.normalIgnore = labelLine.hoverIgnore = true;\r\n    return;\r\n  }\r\n\r\n  var targetLineShape = {\r\n    points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\r\n  };\r\n  var targetTextStyle = {\r\n    x: labelLayout.x,\r\n    y: labelLayout.y\r\n  };\r\n\r\n  if (withAnimation) {\r\n    graphic.updateProps(labelLine, {\r\n      shape: targetLineShape\r\n    }, seriesModel, idx);\r\n    graphic.updateProps(labelText, {\r\n      style: targetTextStyle\r\n    }, seriesModel, idx);\r\n  } else {\r\n    labelLine.attr({\r\n      shape: targetLineShape\r\n    });\r\n    labelText.attr({\r\n      style: targetTextStyle\r\n    });\r\n  }\r\n\r\n  labelText.attr({\r\n    rotation: labelLayout.rotation,\r\n    origin: [labelLayout.x, labelLayout.y],\r\n    z2: 10\r\n  });\r\n  var labelModel = itemModel.getModel('label');\r\n  var labelHoverModel = itemModel.getModel('emphasis.label');\r\n  var labelLineModel = itemModel.getModel('labelLine');\r\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\r\n  var visualColor = data.getItemVisual(idx, 'color');\r\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\r\n    labelFetcher: data.hostModel,\r\n    labelDataIndex: idx,\r\n    defaultText: labelLayout.text,\r\n    autoColor: visualColor,\r\n    useInsideStyle: !!labelLayout.inside\r\n  }, {\r\n    textAlign: labelLayout.textAlign,\r\n    textVerticalAlign: labelLayout.verticalAlign,\r\n    opacity: data.getItemVisual(idx, 'opacity')\r\n  });\r\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\r\n  labelText.hoverIgnore = !labelHoverModel.get('show');\r\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\r\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\r\n\r\n  labelLine.setStyle({\r\n    stroke: visualColor,\r\n    opacity: data.getItemVisual(idx, 'opacity')\r\n  });\r\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\r\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\r\n  var smooth = labelLineModel.get('smooth');\r\n\r\n  if (smooth && smooth === true) {\r\n    smooth = 0.4;\r\n  }\r\n\r\n  labelLine.setShape({\r\n    smooth: smooth\r\n  });\r\n};\r\n\r\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\r\n\r\nvar PieView = ChartView.extend({\r\n  type: 'pie',\r\n  init: function () {\r\n    var sectorGroup = new graphic.Group();\r\n    this._sectorGroup = sectorGroup;\r\n  },\r\n  render: function (seriesModel, ecModel, api, payload) {\r\n    if (payload && payload.from === this.uid) {\r\n      return;\r\n    }\r\n\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var group = this.group;\r\n    var hasAnimation = ecModel.get('animation');\r\n    var isFirstRender = !oldData;\r\n    var animationType = seriesModel.get('animationType');\r\n    var animationTypeUpdate = seriesModel.get('animationTypeUpdate');\r\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\r\n    var selectedMode = seriesModel.get('selectedMode');\r\n    data.diff(oldData).add(function (idx) {\r\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\r\n\r\n      if (isFirstRender && animationType !== 'scale') {\r\n        piePiece.eachChild(function (child) {\r\n          child.stopAnimation(true);\r\n        });\r\n      }\r\n\r\n      selectedMode && piePiece.on('click', onSectorClick);\r\n      data.setItemGraphicEl(idx, piePiece);\r\n      group.add(piePiece);\r\n    }).update(function (newIdx, oldIdx) {\r\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\r\n\r\n      if (!isFirstRender && animationTypeUpdate !== 'transition') {\r\n        piePiece.eachChild(function (child) {\r\n          child.stopAnimation(true);\r\n        });\r\n      }\r\n\r\n      piePiece.updateData(data, newIdx);\r\n      piePiece.off('click');\r\n      selectedMode && piePiece.on('click', onSectorClick);\r\n      group.add(piePiece);\r\n      data.setItemGraphicEl(newIdx, piePiece);\r\n    }).remove(function (idx) {\r\n      var piePiece = oldData.getItemGraphicEl(idx);\r\n      group.remove(piePiece);\r\n    }).execute();\r\n\r\n    if (hasAnimation && data.count() > 0 && (isFirstRender ? animationType !== 'scale' : animationTypeUpdate !== 'transition')) {\r\n      var shape = data.getItemLayout(0);\r\n\r\n      for (var s = 1; isNaN(shape.startAngle) && s < data.count(); ++s) {\r\n        shape = data.getItemLayout(s);\r\n      }\r\n\r\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\r\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\r\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel, isFirstRender));\r\n    } else {\r\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\r\n      group.removeClipPath();\r\n    }\r\n\r\n    this._data = data;\r\n  },\r\n  dispose: function () {},\r\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel, isFirstRender) {\r\n    var clipPath = new graphic.Sector({\r\n      shape: {\r\n        cx: cx,\r\n        cy: cy,\r\n        r0: 0,\r\n        r: r,\r\n        startAngle: startAngle,\r\n        endAngle: startAngle,\r\n        clockwise: clockwise\r\n      }\r\n    });\r\n    var initOrUpdate = isFirstRender ? graphic.initProps : graphic.updateProps;\r\n    initOrUpdate(clipPath, {\r\n      shape: {\r\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\r\n      }\r\n    }, seriesModel, cb);\r\n    return clipPath;\r\n  },\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  containPoint: function (point, seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var itemLayout = data.getItemLayout(0);\r\n\r\n    if (itemLayout) {\r\n      var dx = point[0] - itemLayout.cx;\r\n      var dy = point[1] - itemLayout.cy;\r\n      var radius = Math.sqrt(dx * dx + dy * dy);\r\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\r\n    }\r\n  }\r\n});\r\nvar _default = PieView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar textContain = require(\"zrender/lib/contain/text\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME emphasis label position is not same with normal label position\r\nvar RADIAN = Math.PI / 180;\r\n\r\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\r\n  list.sort(function (a, b) {\r\n    return a.y - b.y;\r\n  });\r\n\r\n  function shiftDown(start, end, delta, dir) {\r\n    for (var j = start; j < end; j++) {\r\n      if (list[j].y + delta > viewTop + viewHeight) {\r\n        break;\r\n      }\r\n\r\n      list[j].y += delta;\r\n\r\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\r\n        shiftUp(j, delta / 2);\r\n        return;\r\n      }\r\n    }\r\n\r\n    shiftUp(end - 1, delta / 2);\r\n  }\r\n\r\n  function shiftUp(end, delta) {\r\n    for (var j = end; j >= 0; j--) {\r\n      if (list[j].y - delta < viewTop) {\r\n        break;\r\n      }\r\n\r\n      list[j].y -= delta;\r\n\r\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function changeX(list, isDownList, cx, cy, r, dir) {\r\n    var lastDeltaX = dir > 0 ? isDownList // right-side\r\n    ? Number.MAX_VALUE // down\r\n    : 0 // up\r\n    : isDownList // left-side\r\n    ? Number.MAX_VALUE // down\r\n    : 0; // up\r\n\r\n    for (var i = 0, l = list.length; i < l; i++) {\r\n      if (list[i].labelAlignTo !== 'none') {\r\n        continue;\r\n      }\r\n\r\n      var deltaY = Math.abs(list[i].y - cy);\r\n      var length = list[i].len;\r\n      var length2 = list[i].len2;\r\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\r\n\r\n      if (isDownList && deltaX >= lastDeltaX) {\r\n        // right-down, left-down\r\n        deltaX = lastDeltaX - 10;\r\n      }\r\n\r\n      if (!isDownList && deltaX <= lastDeltaX) {\r\n        // right-up, left-up\r\n        deltaX = lastDeltaX + 10;\r\n      }\r\n\r\n      list[i].x = cx + deltaX * dir;\r\n      lastDeltaX = deltaX;\r\n    }\r\n  }\r\n\r\n  var lastY = 0;\r\n  var delta;\r\n  var len = list.length;\r\n  var upList = [];\r\n  var downList = [];\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\r\n      var dx = list[i].x - farthestX;\r\n      list[i].linePoints[1][0] += dx;\r\n      list[i].x = farthestX;\r\n    }\r\n\r\n    delta = list[i].y - lastY;\r\n\r\n    if (delta < 0) {\r\n      shiftDown(i, len, -delta, dir);\r\n    }\r\n\r\n    lastY = list[i].y + list[i].height;\r\n  }\r\n\r\n  if (viewHeight - lastY < 0) {\r\n    shiftUp(len - 1, lastY - viewHeight);\r\n  }\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    if (list[i].y >= cy) {\r\n      downList.push(list[i]);\r\n    } else {\r\n      upList.push(list[i]);\r\n    }\r\n  }\r\n\r\n  changeX(upList, false, cx, cy, r, dir);\r\n  changeX(downList, true, cx, cy, r, dir);\r\n}\r\n\r\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\r\n  var leftList = [];\r\n  var rightList = [];\r\n  var leftmostX = Number.MAX_VALUE;\r\n  var rightmostX = -Number.MAX_VALUE;\r\n\r\n  for (var i = 0; i < labelLayoutList.length; i++) {\r\n    if (isPositionCenter(labelLayoutList[i])) {\r\n      continue;\r\n    }\r\n\r\n    if (labelLayoutList[i].x < cx) {\r\n      leftmostX = Math.min(leftmostX, labelLayoutList[i].x);\r\n      leftList.push(labelLayoutList[i]);\r\n    } else {\r\n      rightmostX = Math.max(rightmostX, labelLayoutList[i].x);\r\n      rightList.push(labelLayoutList[i]);\r\n    }\r\n  }\r\n\r\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\r\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\r\n\r\n  for (var i = 0; i < labelLayoutList.length; i++) {\r\n    var layout = labelLayoutList[i];\r\n\r\n    if (isPositionCenter(layout)) {\r\n      continue;\r\n    }\r\n\r\n    var linePoints = layout.linePoints;\r\n\r\n    if (linePoints) {\r\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\r\n      var realTextWidth = layout.textRect.width;\r\n      var targetTextWidth;\r\n\r\n      if (isAlignToEdge) {\r\n        if (layout.x < cx) {\r\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.labelMargin;\r\n        } else {\r\n          targetTextWidth = viewLeft + viewWidth - layout.labelMargin - linePoints[2][0] - layout.labelDistance;\r\n        }\r\n      } else {\r\n        if (layout.x < cx) {\r\n          targetTextWidth = layout.x - viewLeft - layout.bleedMargin;\r\n        } else {\r\n          targetTextWidth = viewLeft + viewWidth - layout.x - layout.bleedMargin;\r\n        }\r\n      }\r\n\r\n      if (targetTextWidth < layout.textRect.width) {\r\n        layout.text = textContain.truncateText(layout.text, targetTextWidth, layout.font);\r\n\r\n        if (layout.labelAlignTo === 'edge') {\r\n          realTextWidth = textContain.getWidth(layout.text, layout.font);\r\n        }\r\n      }\r\n\r\n      var dist = linePoints[1][0] - linePoints[2][0];\r\n\r\n      if (isAlignToEdge) {\r\n        if (layout.x < cx) {\r\n          linePoints[2][0] = viewLeft + layout.labelMargin + realTextWidth + layout.labelDistance;\r\n        } else {\r\n          linePoints[2][0] = viewLeft + viewWidth - layout.labelMargin - realTextWidth - layout.labelDistance;\r\n        }\r\n      } else {\r\n        if (layout.x < cx) {\r\n          linePoints[2][0] = layout.x + layout.labelDistance;\r\n        } else {\r\n          linePoints[2][0] = layout.x - layout.labelDistance;\r\n        }\r\n\r\n        linePoints[1][0] = linePoints[2][0] + dist;\r\n      }\r\n\r\n      linePoints[1][1] = linePoints[2][1] = layout.y;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isPositionCenter(layout) {\r\n  // Not change x for center label\r\n  return layout.position === 'center';\r\n}\r\n\r\nfunction _default(seriesModel, r, viewWidth, viewHeight, viewLeft, viewTop) {\r\n  var data = seriesModel.getData();\r\n  var labelLayoutList = [];\r\n  var cx;\r\n  var cy;\r\n  var hasLabelRotate = false;\r\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\r\n  data.each(function (idx) {\r\n    var layout = data.getItemLayout(idx);\r\n    var itemModel = data.getItemModel(idx);\r\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\r\n\r\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\r\n    var labelDistance = labelModel.get('distanceToLabelLine');\r\n    var labelAlignTo = labelModel.get('alignTo');\r\n    var labelMargin = parsePercent(labelModel.get('margin'), viewWidth);\r\n    var bleedMargin = labelModel.get('bleedMargin');\r\n    var font = labelModel.getFont();\r\n    var labelLineModel = itemModel.getModel('labelLine');\r\n    var labelLineLen = labelLineModel.get('length');\r\n    labelLineLen = parsePercent(labelLineLen, viewWidth);\r\n    var labelLineLen2 = labelLineModel.get('length2');\r\n    labelLineLen2 = parsePercent(labelLineLen2, viewWidth);\r\n\r\n    if (layout.angle < minShowLabelRadian) {\r\n      return;\r\n    }\r\n\r\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\r\n    var dx = Math.cos(midAngle);\r\n    var dy = Math.sin(midAngle);\r\n    var textX;\r\n    var textY;\r\n    var linePoints;\r\n    var textAlign;\r\n    cx = layout.cx;\r\n    cy = layout.cy;\r\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\r\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\r\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\r\n\r\n    if (labelPosition === 'center') {\r\n      textX = layout.cx;\r\n      textY = layout.cy;\r\n      textAlign = 'center';\r\n    } else {\r\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\r\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\r\n      textX = x1 + dx * 3;\r\n      textY = y1 + dy * 3;\r\n\r\n      if (!isLabelInside) {\r\n        // For roseType\r\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\r\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\r\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\r\n        var y3 = y2;\r\n\r\n        if (labelAlignTo === 'edge') {\r\n          // Adjust textX because text align of edge is opposite\r\n          textX = dx < 0 ? viewLeft + labelMargin : viewLeft + viewWidth - labelMargin;\r\n        } else {\r\n          textX = x3 + (dx < 0 ? -labelDistance : labelDistance);\r\n        }\r\n\r\n        textY = y3;\r\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\r\n      }\r\n\r\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? dx > 0 ? 'right' : 'left' : dx > 0 ? 'left' : 'right';\r\n    }\r\n\r\n    var labelRotate;\r\n    var rotate = labelModel.get('rotate');\r\n\r\n    if (typeof rotate === 'number') {\r\n      labelRotate = rotate * (Math.PI / 180);\r\n    } else {\r\n      labelRotate = rotate ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\r\n    }\r\n\r\n    hasLabelRotate = !!labelRotate;\r\n    layout.label = {\r\n      x: textX,\r\n      y: textY,\r\n      position: labelPosition,\r\n      height: textRect.height,\r\n      len: labelLineLen,\r\n      len2: labelLineLen2,\r\n      linePoints: linePoints,\r\n      textAlign: textAlign,\r\n      verticalAlign: 'middle',\r\n      rotation: labelRotate,\r\n      inside: isLabelInside,\r\n      labelDistance: labelDistance,\r\n      labelAlignTo: labelAlignTo,\r\n      labelMargin: labelMargin,\r\n      bleedMargin: bleedMargin,\r\n      textRect: textRect,\r\n      text: text,\r\n      font: font\r\n    }; // Not layout the inside label\r\n\r\n    if (!isLabelInside) {\r\n      labelLayoutList.push(layout.label);\r\n    }\r\n  });\r\n\r\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\r\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\nvar linearMap = _number.linearMap;\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar labelLayout = require(\"./labelLayout\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PI2 = Math.PI * 2;\r\nvar RADIAN = Math.PI / 180;\r\n\r\nfunction getViewRect(seriesModel, api) {\r\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n\r\nfunction _default(seriesType, ecModel, api, payload) {\r\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var valueDim = data.mapDimension('value');\r\n    var viewRect = getViewRect(seriesModel, api);\r\n    var center = seriesModel.get('center');\r\n    var radius = seriesModel.get('radius');\r\n\r\n    if (!zrUtil.isArray(radius)) {\r\n      radius = [0, radius];\r\n    }\r\n\r\n    if (!zrUtil.isArray(center)) {\r\n      center = [center, center];\r\n    }\r\n\r\n    var width = parsePercent(viewRect.width, api.getWidth());\r\n    var height = parsePercent(viewRect.height, api.getHeight());\r\n    var size = Math.min(width, height);\r\n    var cx = parsePercent(center[0], width) + viewRect.x;\r\n    var cy = parsePercent(center[1], height) + viewRect.y;\r\n    var r0 = parsePercent(radius[0], size / 2);\r\n    var r = parsePercent(radius[1], size / 2);\r\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\r\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\r\n    var validDataCount = 0;\r\n    data.each(valueDim, function (value) {\r\n      !isNaN(value) && validDataCount++;\r\n    });\r\n    var sum = data.getSum(valueDim); // Sum may be 0\r\n\r\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\r\n    var clockwise = seriesModel.get('clockwise');\r\n    var roseType = seriesModel.get('roseType');\r\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\r\n\r\n    var extent = data.getDataExtent(valueDim);\r\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\r\n\r\n    var restAngle = PI2;\r\n    var valueSumLargerThanMinAngle = 0;\r\n    var currentAngle = startAngle;\r\n    var dir = clockwise ? 1 : -1;\r\n    data.each(valueDim, function (value, idx) {\r\n      var angle;\r\n\r\n      if (isNaN(value)) {\r\n        data.setItemLayout(idx, {\r\n          angle: NaN,\r\n          startAngle: NaN,\r\n          endAngle: NaN,\r\n          clockwise: clockwise,\r\n          cx: cx,\r\n          cy: cy,\r\n          r0: r0,\r\n          r: roseType ? NaN : r,\r\n          viewRect: viewRect\r\n        });\r\n        return;\r\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\r\n\r\n\r\n      if (roseType !== 'area') {\r\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\r\n      } else {\r\n        angle = PI2 / validDataCount;\r\n      }\r\n\r\n      if (angle < minAngle) {\r\n        angle = minAngle;\r\n        restAngle -= minAngle;\r\n      } else {\r\n        valueSumLargerThanMinAngle += value;\r\n      }\r\n\r\n      var endAngle = currentAngle + dir * angle;\r\n      data.setItemLayout(idx, {\r\n        angle: angle,\r\n        startAngle: currentAngle,\r\n        endAngle: endAngle,\r\n        clockwise: clockwise,\r\n        cx: cx,\r\n        cy: cy,\r\n        r0: r0,\r\n        r: roseType ? linearMap(value, extent, [r0, r]) : r,\r\n        viewRect: viewRect\r\n      });\r\n      currentAngle = endAngle;\r\n    }); // Some sector is constrained by minAngle\r\n    // Rest sectors needs recalculate angle\r\n\r\n    if (restAngle < PI2 && validDataCount) {\r\n      // Average the angle if rest angle is not enough after all angles is\r\n      // Constrained by minAngle\r\n      if (restAngle <= 1e-3) {\r\n        var angle = PI2 / validDataCount;\r\n        data.each(valueDim, function (value, idx) {\r\n          if (!isNaN(value)) {\r\n            var layout = data.getItemLayout(idx);\r\n            layout.angle = angle;\r\n            layout.startAngle = startAngle + dir * idx * angle;\r\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\r\n          }\r\n        });\r\n      } else {\r\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\r\n        currentAngle = startAngle;\r\n        data.each(valueDim, function (value, idx) {\r\n          if (!isNaN(value)) {\r\n            var layout = data.getItemLayout(idx);\r\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\r\n            layout.startAngle = currentAngle;\r\n            layout.endAngle = currentAngle + dir * angle;\r\n            currentAngle += dir * angle;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    labelLayout(seriesModel, r, viewRect.width, viewRect.height, viewRect.x, viewRect.y);\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"../component/radar\");\r\n\r\nrequire(\"./radar/RadarSeries\");\r\n\r\nrequire(\"./radar/RadarView\");\r\n\r\nvar dataColor = require(\"../visual/dataColor\");\r\n\r\nvar visualSymbol = require(\"../visual/symbol\");\r\n\r\nvar radarLayout = require(\"./radar/radarLayout\");\r\n\r\nvar dataFilter = require(\"../processor/dataFilter\");\r\n\r\nvar backwardCompat = require(\"./radar/backwardCompat\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Must use radar component\r\necharts.registerVisual(dataColor('radar'));\r\necharts.registerVisual(visualSymbol('radar', 'circle'));\r\necharts.registerLayout(radarLayout);\r\necharts.registerProcessor(dataFilter('radar'));\r\necharts.registerPreprocessor(backwardCompat);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar createListSimply = require(\"../helper/createListSimply\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\n\r\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar RadarSeries = SeriesModel.extend({\r\n  type: 'series.radar',\r\n  dependencies: ['radar'],\r\n  // Overwrite\r\n  init: function (option) {\r\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\r\n  },\r\n  getInitialData: function (option, ecModel) {\r\n    return createListSimply(this, {\r\n      generateCoord: 'indicator_',\r\n      generateCoordCount: Infinity\r\n    });\r\n  },\r\n  formatTooltip: function (dataIndex, multipleSeries, dataType, renderMode) {\r\n    var data = this.getData();\r\n    var coordSys = this.coordinateSystem;\r\n    var indicatorAxes = coordSys.getIndicatorAxes();\r\n    var name = this.getData().getName(dataIndex);\r\n    var newLine = renderMode === 'html' ? '<br/>' : '\\n';\r\n    return encodeHTML(name === '' ? this.name : name) + newLine + zrUtil.map(indicatorAxes, function (axis, idx) {\r\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\r\n      return encodeHTML(axis.name + ' : ' + val);\r\n    }).join(newLine);\r\n  },\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  getTooltipPosition: function (dataIndex) {\r\n    if (dataIndex != null) {\r\n      var data = this.getData();\r\n      var coordSys = this.coordinateSystem;\r\n      var values = data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\r\n        return data.mapDimension(dim);\r\n      }), dataIndex, true);\r\n\r\n      for (var i = 0, len = values.length; i < len; i++) {\r\n        if (!isNaN(values[i])) {\r\n          var indicatorAxes = coordSys.getIndicatorAxes();\r\n          return coordSys.coordToPoint(indicatorAxes[i].dataToCoord(values[i]), i);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'radar',\r\n    legendHoverLink: true,\r\n    radarIndex: 0,\r\n    lineStyle: {\r\n      width: 2,\r\n      type: 'solid'\r\n    },\r\n    label: {\r\n      position: 'top'\r\n    },\r\n    // areaStyle: {\r\n    // },\r\n    // itemStyle: {}\r\n    symbol: 'emptyCircle',\r\n    symbolSize: 4 // symbolRotate: null\r\n\r\n  }\r\n});\r\nvar _default = RadarSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar symbolUtil = require(\"../../util/symbol\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction normalizeSymbolSize(symbolSize) {\r\n  if (!zrUtil.isArray(symbolSize)) {\r\n    symbolSize = [+symbolSize, +symbolSize];\r\n  }\r\n\r\n  return symbolSize;\r\n}\r\n\r\nvar _default = echarts.extendChartView({\r\n  type: 'radar',\r\n  render: function (seriesModel, ecModel, api) {\r\n    var polar = seriesModel.coordinateSystem;\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n\r\n    function createSymbol(data, idx) {\r\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\r\n      var color = data.getItemVisual(idx, 'color');\r\n\r\n      if (symbolType === 'none') {\r\n        return;\r\n      }\r\n\r\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\r\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\r\n      var symbolRotate = data.getItemVisual(idx, 'symbolRotate') || 0;\r\n      symbolPath.attr({\r\n        style: {\r\n          strokeNoScale: true\r\n        },\r\n        z2: 100,\r\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2],\r\n        rotation: symbolRotate * Math.PI / 180 || 0\r\n      });\r\n      return symbolPath;\r\n    }\r\n\r\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\r\n      // Simply rerender all\r\n      symbolGroup.removeAll();\r\n\r\n      for (var i = 0; i < newPoints.length - 1; i++) {\r\n        var symbolPath = createSymbol(data, idx);\r\n\r\n        if (symbolPath) {\r\n          symbolPath.__dimIdx = i;\r\n\r\n          if (oldPoints[i]) {\r\n            symbolPath.attr('position', oldPoints[i]);\r\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\r\n              position: newPoints[i]\r\n            }, seriesModel, idx);\r\n          } else {\r\n            symbolPath.attr('position', newPoints[i]);\r\n          }\r\n\r\n          symbolGroup.add(symbolPath);\r\n        }\r\n      }\r\n    }\r\n\r\n    function getInitialPoints(points) {\r\n      return zrUtil.map(points, function (pt) {\r\n        return [polar.cx, polar.cy];\r\n      });\r\n    }\r\n\r\n    data.diff(oldData).add(function (idx) {\r\n      var points = data.getItemLayout(idx);\r\n\r\n      if (!points) {\r\n        return;\r\n      }\r\n\r\n      var polygon = new graphic.Polygon();\r\n      var polyline = new graphic.Polyline();\r\n      var target = {\r\n        shape: {\r\n          points: points\r\n        }\r\n      };\r\n      polygon.shape.points = getInitialPoints(points);\r\n      polyline.shape.points = getInitialPoints(points);\r\n      graphic.initProps(polygon, target, seriesModel, idx);\r\n      graphic.initProps(polyline, target, seriesModel, idx);\r\n      var itemGroup = new graphic.Group();\r\n      var symbolGroup = new graphic.Group();\r\n      itemGroup.add(polyline);\r\n      itemGroup.add(polygon);\r\n      itemGroup.add(symbolGroup);\r\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\r\n      data.setItemGraphicEl(idx, itemGroup);\r\n    }).update(function (newIdx, oldIdx) {\r\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\r\n      var polyline = itemGroup.childAt(0);\r\n      var polygon = itemGroup.childAt(1);\r\n      var symbolGroup = itemGroup.childAt(2);\r\n      var target = {\r\n        shape: {\r\n          points: data.getItemLayout(newIdx)\r\n        }\r\n      };\r\n\r\n      if (!target.shape.points) {\r\n        return;\r\n      }\r\n\r\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\r\n      graphic.updateProps(polyline, target, seriesModel);\r\n      graphic.updateProps(polygon, target, seriesModel);\r\n      data.setItemGraphicEl(newIdx, itemGroup);\r\n    }).remove(function (idx) {\r\n      group.remove(oldData.getItemGraphicEl(idx));\r\n    }).execute();\r\n    data.eachItemGraphicEl(function (itemGroup, idx) {\r\n      var itemModel = data.getItemModel(idx);\r\n      var polyline = itemGroup.childAt(0);\r\n      var polygon = itemGroup.childAt(1);\r\n      var symbolGroup = itemGroup.childAt(2);\r\n      var color = data.getItemVisual(idx, 'color');\r\n      group.add(itemGroup);\r\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\r\n        fill: 'none',\r\n        stroke: color\r\n      }));\r\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\r\n      var areaStyleModel = itemModel.getModel('areaStyle');\r\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\r\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\r\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\r\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\r\n      polygon.ignore = polygonIgnore;\r\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\r\n        fill: color,\r\n        opacity: 0.7\r\n      }));\r\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\r\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\r\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\r\n      var labelModel = itemModel.getModel('label');\r\n      var labelHoverModel = itemModel.getModel('emphasis.label');\r\n      symbolGroup.eachChild(function (symbolPath) {\r\n        symbolPath.setStyle(itemStyle);\r\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\r\n        var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\r\n        (defaultText == null || isNaN(defaultText)) && (defaultText = '');\r\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\r\n          labelFetcher: data.hostModel,\r\n          labelDataIndex: idx,\r\n          labelDimIndex: symbolPath.__dimIdx,\r\n          defaultText: defaultText,\r\n          autoColor: color,\r\n          isRectText: true\r\n        });\r\n      });\r\n\r\n      itemGroup.highDownOnUpdate = function (fromState, toState) {\r\n        polygon.attr('ignore', toState === 'emphasis' ? hoverPolygonIgnore : polygonIgnore);\r\n      };\r\n\r\n      graphic.setHoverStyle(itemGroup);\r\n    });\r\n    this._data = data;\r\n  },\r\n  remove: function () {\r\n    this.group.removeAll();\r\n    this._data = null;\r\n  },\r\n  dispose: function () {}\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Backward compat for radar chart in 2\r\nfunction _default(option) {\r\n  var polarOptArr = option.polar;\r\n\r\n  if (polarOptArr) {\r\n    if (!zrUtil.isArray(polarOptArr)) {\r\n      polarOptArr = [polarOptArr];\r\n    }\r\n\r\n    var polarNotRadar = [];\r\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\r\n      if (polarOpt.indicator) {\r\n        if (polarOpt.type && !polarOpt.shape) {\r\n          polarOpt.shape = polarOpt.type;\r\n        }\r\n\r\n        option.radar = option.radar || [];\r\n\r\n        if (!zrUtil.isArray(option.radar)) {\r\n          option.radar = [option.radar];\r\n        }\r\n\r\n        option.radar.push(polarOpt);\r\n      } else {\r\n        polarNotRadar.push(polarOpt);\r\n      }\r\n    });\r\n    option.polar = polarNotRadar;\r\n  }\r\n\r\n  zrUtil.each(option.series, function (seriesOpt) {\r\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\r\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel) {\r\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var points = [];\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (!coordSys) {\r\n      return;\r\n    }\r\n\r\n    var axes = coordSys.getIndicatorAxes();\r\n    zrUtil.each(axes, function (axis, axisIndex) {\r\n      data.each(data.mapDimension(axes[axisIndex].dim), function (val, dataIndex) {\r\n        points[dataIndex] = points[dataIndex] || [];\r\n        var point = coordSys.dataToPoint(val, axisIndex);\r\n        points[dataIndex][axisIndex] = isValidPoint(point) ? point : getValueMissingPoint(coordSys);\r\n      });\r\n    }); // Close polygon\r\n\r\n    data.each(function (idx) {\r\n      // TODO\r\n      // Is it appropriate to connect to the next data when some data is missing?\r\n      // Or, should trade it like `connectNull` in line chart?\r\n      var firstPoint = zrUtil.find(points[idx], function (point) {\r\n        return isValidPoint(point);\r\n      }) || getValueMissingPoint(coordSys); // Copy the first actual point to the end of the array\r\n\r\n      points[idx].push(firstPoint.slice());\r\n      data.setItemLayout(idx, points[idx]);\r\n    });\r\n  });\r\n}\r\n\r\nfunction isValidPoint(point) {\r\n  return !isNaN(point[0]) && !isNaN(point[1]);\r\n}\r\n\r\nfunction getValueMissingPoint(coordSys) {\r\n  // It is error-prone to input [NaN, NaN] into polygon, polygon.\r\n  // (probably cause problem when refreshing or animating)\r\n  return [coordSys.cx, coordSys.cy];\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./sankey/SankeySeries\");\r\n\r\nrequire(\"./sankey/SankeyView\");\r\n\r\nrequire(\"./sankey/sankeyAction\");\r\n\r\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\r\n\r\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerLayout(sankeyLayout);\r\necharts.registerVisual(sankeyVisual);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar SankeySeries = SeriesModel.extend({\r\n  type: 'series.sankey',\r\n  layoutInfo: null,\r\n  levelModels: null,\r\n\r\n  /**\r\n   * Init a graph data structure from data in option series\r\n   *\r\n   * @param  {Object} option  the object used to config echarts view\r\n   * @return {module:echarts/data/List} storage initial data\r\n   */\r\n  getInitialData: function (option, ecModel) {\r\n    var links = option.edges || option.links;\r\n    var nodes = option.data || option.nodes;\r\n    var levels = option.levels;\r\n    var levelModels = this.levelModels = {};\r\n\r\n    for (var i = 0; i < levels.length; i++) {\r\n      if (levels[i].depth != null && levels[i].depth >= 0) {\r\n        levelModels[levels[i].depth] = new Model(levels[i], this, ecModel);\r\n      } else {}\r\n    }\r\n\r\n    if (nodes && links) {\r\n      var graph = createGraphFromNodeEdge(nodes, links, this, true, beforeLink);\r\n      return graph.data;\r\n    }\r\n\r\n    function beforeLink(nodeData, edgeData) {\r\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\r\n        model.customizeGetParent(function (path) {\r\n          var parentModel = this.parentModel;\r\n          var nodeDepth = parentModel.getData().getItemLayout(idx).depth;\r\n          var levelModel = parentModel.levelModels[nodeDepth];\r\n          return levelModel || this.parentModel;\r\n        });\r\n        return model;\r\n      });\r\n      edgeData.wrapMethod('getItemModel', function (model, idx) {\r\n        model.customizeGetParent(function (path) {\r\n          var parentModel = this.parentModel;\r\n          var edge = parentModel.getGraph().getEdgeByIndex(idx);\r\n          var depth = edge.node1.getLayout().depth;\r\n          var levelModel = parentModel.levelModels[depth];\r\n          return levelModel || this.parentModel;\r\n        });\r\n        return model;\r\n      });\r\n    }\r\n  },\r\n  setNodePosition: function (dataIndex, localPosition) {\r\n    var dataItem = this.option.data[dataIndex];\r\n    dataItem.localX = localPosition[0];\r\n    dataItem.localY = localPosition[1];\r\n  },\r\n\r\n  /**\r\n   * Return the graphic data structure\r\n   *\r\n   * @return {module:echarts/data/Graph} graphic data structure\r\n   */\r\n  getGraph: function () {\r\n    return this.getData().graph;\r\n  },\r\n\r\n  /**\r\n   * Get edge data of graphic data structure\r\n   *\r\n   * @return {module:echarts/data/List} data structure of list\r\n   */\r\n  getEdgeData: function () {\r\n    return this.getGraph().edgeData;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\r\n    // dataType === 'node' or empty do not show tooltip by default\r\n    if (dataType === 'edge') {\r\n      var params = this.getDataParams(dataIndex, dataType);\r\n      var rawDataOpt = params.data;\r\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\r\n\r\n      if (params.value) {\r\n        html += ' : ' + params.value;\r\n      }\r\n\r\n      return encodeHTML(html);\r\n    } else if (dataType === 'node') {\r\n      var node = this.getGraph().getNodeByIndex(dataIndex);\r\n      var value = node.getLayout().value;\r\n      var name = this.getDataParams(dataIndex, dataType).data.name;\r\n\r\n      if (value) {\r\n        var html = name + ' : ' + value;\r\n      }\r\n\r\n      return encodeHTML(html);\r\n    }\r\n\r\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\r\n  },\r\n  optionUpdated: function () {\r\n    var option = this.option;\r\n\r\n    if (option.focusNodeAdjacency === true) {\r\n      option.focusNodeAdjacency = 'allEdges';\r\n    }\r\n  },\r\n  // Override Series.getDataParams()\r\n  getDataParams: function (dataIndex, dataType) {\r\n    var params = SankeySeries.superCall(this, 'getDataParams', dataIndex, dataType);\r\n\r\n    if (params.value == null && dataType === 'node') {\r\n      var node = this.getGraph().getNodeByIndex(dataIndex);\r\n      var nodeValue = node.getLayout().value;\r\n      params.value = nodeValue;\r\n    }\r\n\r\n    return params;\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'view',\r\n    layout: null,\r\n    // The position of the whole view\r\n    left: '5%',\r\n    top: '5%',\r\n    right: '20%',\r\n    bottom: '5%',\r\n    // Value can be 'vertical'\r\n    orient: 'horizontal',\r\n    // The dx of the node\r\n    nodeWidth: 20,\r\n    // The vertical distance between two nodes\r\n    nodeGap: 8,\r\n    // Control if the node can move or not\r\n    draggable: true,\r\n    // Value can be 'inEdges', 'outEdges', 'allEdges', true (the same as 'allEdges').\r\n    focusNodeAdjacency: false,\r\n    // The number of iterations to change the position of the node\r\n    layoutIterations: 32,\r\n    label: {\r\n      show: true,\r\n      position: 'right',\r\n      color: '#000',\r\n      fontSize: 12\r\n    },\r\n    levels: [],\r\n    // Value can be 'left' or 'right'\r\n    nodeAlign: 'justify',\r\n    itemStyle: {\r\n      borderWidth: 1,\r\n      borderColor: '#333'\r\n    },\r\n    lineStyle: {\r\n      color: '#314656',\r\n      opacity: 0.2,\r\n      curveness: 0.5\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      },\r\n      lineStyle: {\r\n        opacity: 0.5\r\n      }\r\n    },\r\n    animationEasing: 'linear',\r\n    animationDuration: 1000\r\n  }\r\n});\r\nvar _default = SankeySeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\r\nvar hoverNodeOpacityPath = ['emphasis', 'itemStyle', 'opacity'];\r\nvar lineOpacityPath = ['lineStyle', 'opacity'];\r\nvar hoverLineOpacityPath = ['emphasis', 'lineStyle', 'opacity'];\r\n\r\nfunction getItemOpacity(item, opacityPath) {\r\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\r\n}\r\n\r\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\r\n  var el = item.getGraphicEl();\r\n  var opacity = getItemOpacity(item, opacityPath);\r\n\r\n  if (opacityRatio != null) {\r\n    opacity == null && (opacity = 1);\r\n    opacity *= opacityRatio;\r\n  }\r\n\r\n  el.downplay && el.downplay();\r\n  el.traverse(function (child) {\r\n    if (child.type !== 'group') {\r\n      child.setStyle('opacity', opacity);\r\n    }\r\n  });\r\n}\r\n\r\nfunction fadeInItem(item, opacityPath) {\r\n  var opacity = getItemOpacity(item, opacityPath);\r\n  var el = item.getGraphicEl();\r\n  el.traverse(function (child) {\r\n    if (child.type !== 'group') {\r\n      child.setStyle('opacity', opacity);\r\n    }\r\n  }); // Support emphasis here.\r\n\r\n  el.highlight && el.highlight();\r\n}\r\n\r\nvar SankeyShape = graphic.extendShape({\r\n  shape: {\r\n    x1: 0,\r\n    y1: 0,\r\n    x2: 0,\r\n    y2: 0,\r\n    cpx1: 0,\r\n    cpy1: 0,\r\n    cpx2: 0,\r\n    cpy2: 0,\r\n    extent: 0,\r\n    orient: ''\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var extent = shape.extent;\r\n    ctx.moveTo(shape.x1, shape.y1);\r\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\r\n\r\n    if (shape.orient === 'vertical') {\r\n      ctx.lineTo(shape.x2 + extent, shape.y2);\r\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\r\n    } else {\r\n      ctx.lineTo(shape.x2, shape.y2 + extent);\r\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\r\n    }\r\n\r\n    ctx.closePath();\r\n  },\r\n  highlight: function () {\r\n    this.trigger('emphasis');\r\n  },\r\n  downplay: function () {\r\n    this.trigger('normal');\r\n  }\r\n});\r\n\r\nvar _default = echarts.extendChartView({\r\n  type: 'sankey',\r\n\r\n  /**\r\n   * @private\r\n   * @type {module:echarts/chart/sankey/SankeySeries}\r\n   */\r\n  _model: null,\r\n\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n  _focusAdjacencyDisabled: false,\r\n  render: function (seriesModel, ecModel, api) {\r\n    var sankeyView = this;\r\n    var graph = seriesModel.getGraph();\r\n    var group = this.group;\r\n    var layoutInfo = seriesModel.layoutInfo; // view width\r\n\r\n    var width = layoutInfo.width; // view height\r\n\r\n    var height = layoutInfo.height;\r\n    var nodeData = seriesModel.getData();\r\n    var edgeData = seriesModel.getData('edge');\r\n    var orient = seriesModel.get('orient');\r\n    this._model = seriesModel;\r\n    group.removeAll();\r\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\r\n\r\n    graph.eachEdge(function (edge) {\r\n      var curve = new SankeyShape();\r\n      curve.dataIndex = edge.dataIndex;\r\n      curve.seriesIndex = seriesModel.seriesIndex;\r\n      curve.dataType = 'edge';\r\n      var lineStyleModel = edge.getModel('lineStyle');\r\n      var curvature = lineStyleModel.get('curveness');\r\n      var n1Layout = edge.node1.getLayout();\r\n      var node1Model = edge.node1.getModel();\r\n      var dragX1 = node1Model.get('localX');\r\n      var dragY1 = node1Model.get('localY');\r\n      var n2Layout = edge.node2.getLayout();\r\n      var node2Model = edge.node2.getModel();\r\n      var dragX2 = node2Model.get('localX');\r\n      var dragY2 = node2Model.get('localY');\r\n      var edgeLayout = edge.getLayout();\r\n      var x1;\r\n      var y1;\r\n      var x2;\r\n      var y2;\r\n      var cpx1;\r\n      var cpy1;\r\n      var cpx2;\r\n      var cpy2;\r\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\r\n      curve.shape.orient = orient;\r\n\r\n      if (orient === 'vertical') {\r\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\r\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\r\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\r\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\r\n        cpx1 = x1;\r\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\r\n        cpx2 = x2;\r\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\r\n      } else {\r\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\r\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\r\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\r\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\r\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\r\n        cpy1 = y1;\r\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\r\n        cpy2 = y2;\r\n      }\r\n\r\n      curve.setShape({\r\n        x1: x1,\r\n        y1: y1,\r\n        x2: x2,\r\n        y2: y2,\r\n        cpx1: cpx1,\r\n        cpy1: cpy1,\r\n        cpx2: cpx2,\r\n        cpy2: cpy2\r\n      });\r\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\r\n\r\n      switch (curve.style.fill) {\r\n        case 'source':\r\n          curve.style.fill = edge.node1.getVisual('color');\r\n          break;\r\n\r\n        case 'target':\r\n          curve.style.fill = edge.node2.getVisual('color');\r\n          break;\r\n      }\r\n\r\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\r\n      group.add(curve);\r\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\r\n    }); // Generate a rect for each node\r\n\r\n    graph.eachNode(function (node) {\r\n      var layout = node.getLayout();\r\n      var itemModel = node.getModel();\r\n      var dragX = itemModel.get('localX');\r\n      var dragY = itemModel.get('localY');\r\n      var labelModel = itemModel.getModel('label');\r\n      var labelHoverModel = itemModel.getModel('emphasis.label');\r\n      var rect = new graphic.Rect({\r\n        shape: {\r\n          x: dragX != null ? dragX * width : layout.x,\r\n          y: dragY != null ? dragY * height : layout.y,\r\n          width: layout.dx,\r\n          height: layout.dy\r\n        },\r\n        style: itemModel.getModel('itemStyle').getItemStyle()\r\n      });\r\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\r\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\r\n        labelFetcher: seriesModel,\r\n        labelDataIndex: node.dataIndex,\r\n        defaultText: node.id,\r\n        isRectText: true\r\n      });\r\n      rect.setStyle('fill', node.getVisual('color'));\r\n      graphic.setHoverStyle(rect, hoverStyle);\r\n      group.add(rect);\r\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\r\n      rect.dataType = 'node';\r\n    });\r\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\r\n      var itemModel = nodeData.getItemModel(dataIndex);\r\n\r\n      if (itemModel.get('draggable')) {\r\n        el.drift = function (dx, dy) {\r\n          sankeyView._focusAdjacencyDisabled = true;\r\n          this.shape.x += dx;\r\n          this.shape.y += dy;\r\n          this.dirty();\r\n          api.dispatchAction({\r\n            type: 'dragNode',\r\n            seriesId: seriesModel.id,\r\n            dataIndex: nodeData.getRawIndex(dataIndex),\r\n            localX: this.shape.x / width,\r\n            localY: this.shape.y / height\r\n          });\r\n        };\r\n\r\n        el.ondragend = function () {\r\n          sankeyView._focusAdjacencyDisabled = false;\r\n        };\r\n\r\n        el.draggable = true;\r\n        el.cursor = 'move';\r\n      }\r\n\r\n      el.highlight = function () {\r\n        this.trigger('emphasis');\r\n      };\r\n\r\n      el.downplay = function () {\r\n        this.trigger('normal');\r\n      };\r\n\r\n      el.focusNodeAdjHandler && el.off('mouseover', el.focusNodeAdjHandler);\r\n      el.unfocusNodeAdjHandler && el.off('mouseout', el.unfocusNodeAdjHandler);\r\n\r\n      if (itemModel.get('focusNodeAdjacency')) {\r\n        el.on('mouseover', el.focusNodeAdjHandler = function () {\r\n          if (!sankeyView._focusAdjacencyDisabled) {\r\n            sankeyView._clearTimer();\r\n\r\n            api.dispatchAction({\r\n              type: 'focusNodeAdjacency',\r\n              seriesId: seriesModel.id,\r\n              dataIndex: el.dataIndex\r\n            });\r\n          }\r\n        });\r\n        el.on('mouseout', el.unfocusNodeAdjHandler = function () {\r\n          if (!sankeyView._focusAdjacencyDisabled) {\r\n            sankeyView._dispatchUnfocus(api);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    edgeData.eachItemGraphicEl(function (el, dataIndex) {\r\n      var edgeModel = edgeData.getItemModel(dataIndex);\r\n      el.focusNodeAdjHandler && el.off('mouseover', el.focusNodeAdjHandler);\r\n      el.unfocusNodeAdjHandler && el.off('mouseout', el.unfocusNodeAdjHandler);\r\n\r\n      if (edgeModel.get('focusNodeAdjacency')) {\r\n        el.on('mouseover', el.focusNodeAdjHandler = function () {\r\n          if (!sankeyView._focusAdjacencyDisabled) {\r\n            sankeyView._clearTimer();\r\n\r\n            api.dispatchAction({\r\n              type: 'focusNodeAdjacency',\r\n              seriesId: seriesModel.id,\r\n              edgeDataIndex: el.dataIndex\r\n            });\r\n          }\r\n        });\r\n        el.on('mouseout', el.unfocusNodeAdjHandler = function () {\r\n          if (!sankeyView._focusAdjacencyDisabled) {\r\n            sankeyView._dispatchUnfocus(api);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    if (!this._data && seriesModel.get('animation')) {\r\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\r\n        group.removeClipPath();\r\n      }));\r\n    }\r\n\r\n    this._data = seriesModel.getData();\r\n  },\r\n  dispose: function () {\r\n    this._clearTimer();\r\n  },\r\n  _dispatchUnfocus: function (api) {\r\n    var self = this;\r\n\r\n    this._clearTimer();\r\n\r\n    this._unfocusDelayTimer = setTimeout(function () {\r\n      self._unfocusDelayTimer = null;\r\n      api.dispatchAction({\r\n        type: 'unfocusNodeAdjacency',\r\n        seriesId: self._model.id\r\n      });\r\n    }, 500);\r\n  },\r\n  _clearTimer: function () {\r\n    if (this._unfocusDelayTimer) {\r\n      clearTimeout(this._unfocusDelayTimer);\r\n      this._unfocusDelayTimer = null;\r\n    }\r\n  },\r\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var graph = data.graph;\r\n    var dataIndex = payload.dataIndex;\r\n    var itemModel = data.getItemModel(dataIndex);\r\n    var edgeDataIndex = payload.edgeDataIndex;\r\n\r\n    if (dataIndex == null && edgeDataIndex == null) {\r\n      return;\r\n    }\r\n\r\n    var node = graph.getNodeByIndex(dataIndex);\r\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\r\n    graph.eachNode(function (node) {\r\n      fadeOutItem(node, nodeOpacityPath, 0.1);\r\n    });\r\n    graph.eachEdge(function (edge) {\r\n      fadeOutItem(edge, lineOpacityPath, 0.1);\r\n    });\r\n\r\n    if (node) {\r\n      fadeInItem(node, hoverNodeOpacityPath);\r\n      var focusNodeAdj = itemModel.get('focusNodeAdjacency');\r\n\r\n      if (focusNodeAdj === 'outEdges') {\r\n        zrUtil.each(node.outEdges, function (edge) {\r\n          if (edge.dataIndex < 0) {\r\n            return;\r\n          }\r\n\r\n          fadeInItem(edge, hoverLineOpacityPath);\r\n          fadeInItem(edge.node2, hoverNodeOpacityPath);\r\n        });\r\n      } else if (focusNodeAdj === 'inEdges') {\r\n        zrUtil.each(node.inEdges, function (edge) {\r\n          if (edge.dataIndex < 0) {\r\n            return;\r\n          }\r\n\r\n          fadeInItem(edge, hoverLineOpacityPath);\r\n          fadeInItem(edge.node1, hoverNodeOpacityPath);\r\n        });\r\n      } else if (focusNodeAdj === 'allEdges') {\r\n        zrUtil.each(node.edges, function (edge) {\r\n          if (edge.dataIndex < 0) {\r\n            return;\r\n          }\r\n\r\n          fadeInItem(edge, hoverLineOpacityPath);\r\n          edge.node1 !== node && fadeInItem(edge.node1, hoverNodeOpacityPath);\r\n          edge.node2 !== node && fadeInItem(edge.node2, hoverNodeOpacityPath);\r\n        });\r\n      }\r\n    }\r\n\r\n    if (edge) {\r\n      fadeInItem(edge, hoverLineOpacityPath);\r\n      fadeInItem(edge.node1, hoverNodeOpacityPath);\r\n      fadeInItem(edge.node2, hoverNodeOpacityPath);\r\n    }\r\n  },\r\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\r\n    var graph = seriesModel.getGraph();\r\n    graph.eachNode(function (node) {\r\n      fadeOutItem(node, nodeOpacityPath);\r\n    });\r\n    graph.eachEdge(function (edge) {\r\n      fadeOutItem(edge, lineOpacityPath);\r\n    });\r\n  }\r\n}); // Add animation to the view\r\n\r\n\r\nfunction createGridClipShape(rect, seriesModel, cb) {\r\n  var rectEl = new graphic.Rect({\r\n    shape: {\r\n      x: rect.x - 10,\r\n      y: rect.y - 10,\r\n      width: 0,\r\n      height: rect.height + 20\r\n    }\r\n  });\r\n  graphic.initProps(rectEl, {\r\n    shape: {\r\n      width: rect.width + 20\r\n    }\r\n  }, seriesModel, cb);\r\n  return rectEl;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nrequire(\"../helper/focusNodeAdjacencyAction\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerAction({\r\n  type: 'dragNode',\r\n  event: 'dragnode',\r\n  // here can only use 'update' now, other value is not support in echarts.\r\n  update: 'update'\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    subType: 'sankey',\r\n    query: payload\r\n  }, function (seriesModel) {\r\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\r\n  });\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar groupData = _model.groupData;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel, api, payload) {\r\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\r\n    var nodeWidth = seriesModel.get('nodeWidth');\r\n    var nodeGap = seriesModel.get('nodeGap');\r\n    var layoutInfo = getViewRect(seriesModel, api);\r\n    seriesModel.layoutInfo = layoutInfo;\r\n    var width = layoutInfo.width;\r\n    var height = layoutInfo.height;\r\n    var graph = seriesModel.getGraph();\r\n    var nodes = graph.nodes;\r\n    var edges = graph.edges;\r\n    computeNodeValues(nodes);\r\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\r\n      return node.getLayout().value === 0;\r\n    });\r\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\r\n    var orient = seriesModel.get('orient');\r\n    var nodeAlign = seriesModel.get('nodeAlign');\r\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign);\r\n  });\r\n}\r\n/**\r\n * Get the layout position of the whole view\r\n *\r\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\r\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\r\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\r\n */\r\n\r\n\r\nfunction getViewRect(seriesModel, api) {\r\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n\r\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign) {\r\n  computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign);\r\n  computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient);\r\n  computeEdgeDepths(nodes, orient);\r\n}\r\n/**\r\n * Compute the value of each node by summing the associated edge's value\r\n *\r\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\r\n */\r\n\r\n\r\nfunction computeNodeValues(nodes) {\r\n  zrUtil.each(nodes, function (node) {\r\n    var value1 = sum(node.outEdges, getEdgeValue);\r\n    var value2 = sum(node.inEdges, getEdgeValue);\r\n    var nodeRawValue = node.getValue() || 0;\r\n    var value = Math.max(value1, value2, nodeRawValue);\r\n    node.setLayout({\r\n      value: value\r\n    }, true);\r\n  });\r\n}\r\n/**\r\n * Compute the x-position for each node.\r\n *\r\n * Here we use Kahn algorithm to detect cycle when we traverse\r\n * the node to computer the initial x position.\r\n *\r\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\r\n * @param  {number} nodeWidth  the dx of the node\r\n * @param  {number} width  the whole width of the area to draw the view\r\n */\r\n\r\n\r\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign) {\r\n  // Used to mark whether the edge is deleted. if it is deleted,\r\n  // the value is 0, otherwise it is 1.\r\n  var remainEdges = []; // Storage each node's indegree.\r\n\r\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\r\n\r\n  var zeroIndegrees = [];\r\n  var nextTargetNode = [];\r\n  var x = 0;\r\n  var kx = 0;\r\n\r\n  for (var i = 0; i < edges.length; i++) {\r\n    remainEdges[i] = 1;\r\n  }\r\n\r\n  for (i = 0; i < nodes.length; i++) {\r\n    indegreeArr[i] = nodes[i].inEdges.length;\r\n\r\n    if (indegreeArr[i] === 0) {\r\n      zeroIndegrees.push(nodes[i]);\r\n    }\r\n  }\r\n\r\n  var maxNodeDepth = -1; // Traversing nodes using topological sorting to calculate the\r\n  // horizontal(if orient === 'horizontal') or vertical(if orient === 'vertical')\r\n  // position of the nodes.\r\n\r\n  while (zeroIndegrees.length) {\r\n    for (var idx = 0; idx < zeroIndegrees.length; idx++) {\r\n      var node = zeroIndegrees[idx];\r\n      var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\r\n      var isItemDepth = item.depth != null && item.depth >= 0;\r\n\r\n      if (isItemDepth && item.depth > maxNodeDepth) {\r\n        maxNodeDepth = item.depth;\r\n      }\r\n\r\n      node.setLayout({\r\n        depth: isItemDepth ? item.depth : x\r\n      }, true);\r\n      orient === 'vertical' ? node.setLayout({\r\n        dy: nodeWidth\r\n      }, true) : node.setLayout({\r\n        dx: nodeWidth\r\n      }, true);\r\n\r\n      for (var edgeIdx = 0; edgeIdx < node.outEdges.length; edgeIdx++) {\r\n        var edge = node.outEdges[edgeIdx];\r\n        var indexEdge = edges.indexOf(edge);\r\n        remainEdges[indexEdge] = 0;\r\n        var targetNode = edge.node2;\r\n        var nodeIndex = nodes.indexOf(targetNode);\r\n\r\n        if (--indegreeArr[nodeIndex] === 0 && nextTargetNode.indexOf(targetNode) < 0) {\r\n          nextTargetNode.push(targetNode);\r\n        }\r\n      }\r\n    }\r\n\r\n    ++x;\r\n    zeroIndegrees = nextTargetNode;\r\n    nextTargetNode = [];\r\n  }\r\n\r\n  for (i = 0; i < remainEdges.length; i++) {\r\n    if (remainEdges[i] === 1) {\r\n      throw new Error('Sankey is a DAG, the original data has cycle!');\r\n    }\r\n  }\r\n\r\n  var maxDepth = maxNodeDepth > x - 1 ? maxNodeDepth : x - 1;\r\n\r\n  if (nodeAlign && nodeAlign !== 'left') {\r\n    adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth);\r\n  }\r\n\r\n  var kx = orient === 'vertical' ? (height - nodeWidth) / maxDepth : (width - nodeWidth) / maxDepth;\r\n  scaleNodeBreadths(nodes, kx, orient);\r\n}\r\n\r\nfunction isNodeDepth(node) {\r\n  var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\r\n  return item.depth != null && item.depth >= 0;\r\n}\r\n\r\nfunction adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth) {\r\n  if (nodeAlign === 'right') {\r\n    var nextSourceNode = [];\r\n    var remainNodes = nodes;\r\n    var nodeHeight = 0;\r\n\r\n    while (remainNodes.length) {\r\n      for (var i = 0; i < remainNodes.length; i++) {\r\n        var node = remainNodes[i];\r\n        node.setLayout({\r\n          skNodeHeight: nodeHeight\r\n        }, true);\r\n\r\n        for (var j = 0; j < node.inEdges.length; j++) {\r\n          var edge = node.inEdges[j];\r\n\r\n          if (nextSourceNode.indexOf(edge.node1) < 0) {\r\n            nextSourceNode.push(edge.node1);\r\n          }\r\n        }\r\n      }\r\n\r\n      remainNodes = nextSourceNode;\r\n      nextSourceNode = [];\r\n      ++nodeHeight;\r\n    }\r\n\r\n    zrUtil.each(nodes, function (node) {\r\n      if (!isNodeDepth(node)) {\r\n        node.setLayout({\r\n          depth: Math.max(0, maxDepth - node.getLayout().skNodeHeight)\r\n        }, true);\r\n      }\r\n    });\r\n  } else if (nodeAlign === 'justify') {\r\n    moveSinksRight(nodes, maxDepth);\r\n  }\r\n}\r\n/**\r\n * All the node without outEgdes are assigned maximum x-position and\r\n *     be aligned in the last column.\r\n *\r\n * @param {module:echarts/data/Graph~Node} nodes.  node of sankey view.\r\n * @param {number} maxDepth.  use to assign to node without outEdges as x-position.\r\n */\r\n\r\n\r\nfunction moveSinksRight(nodes, maxDepth) {\r\n  zrUtil.each(nodes, function (node) {\r\n    if (!isNodeDepth(node) && !node.outEdges.length) {\r\n      node.setLayout({\r\n        depth: maxDepth\r\n      }, true);\r\n    }\r\n  });\r\n}\r\n/**\r\n * Scale node x-position to the width\r\n *\r\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\r\n * @param {number} kx   multiple used to scale nodes\r\n */\r\n\r\n\r\nfunction scaleNodeBreadths(nodes, kx, orient) {\r\n  zrUtil.each(nodes, function (node) {\r\n    var nodeDepth = node.getLayout().depth * kx;\r\n    orient === 'vertical' ? node.setLayout({\r\n      y: nodeDepth\r\n    }, true) : node.setLayout({\r\n      x: nodeDepth\r\n    }, true);\r\n  });\r\n}\r\n/**\r\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\r\n *\r\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\r\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\r\n * @param {number} height  the whole height of the area to draw the view\r\n * @param {number} nodeGap  the vertical distance between two nodes\r\n *     in the same column.\r\n * @param {number} iterations  the number of iterations for the algorithm\r\n */\r\n\r\n\r\nfunction computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient) {\r\n  var nodesByBreadth = prepareNodesByBreadth(nodes, orient);\r\n  initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient);\r\n  resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\r\n\r\n  for (var alpha = 1; iterations > 0; iterations--) {\r\n    // 0.99 is a experience parameter, ensure that each iterations of\r\n    // changes as small as possible.\r\n    alpha *= 0.99;\r\n    relaxRightToLeft(nodesByBreadth, alpha, orient);\r\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\r\n    relaxLeftToRight(nodesByBreadth, alpha, orient);\r\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\r\n  }\r\n}\r\n\r\nfunction prepareNodesByBreadth(nodes, orient) {\r\n  var nodesByBreadth = [];\r\n  var keyAttr = orient === 'vertical' ? 'y' : 'x';\r\n  var groupResult = groupData(nodes, function (node) {\r\n    return node.getLayout()[keyAttr];\r\n  });\r\n  groupResult.keys.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n  zrUtil.each(groupResult.keys, function (key) {\r\n    nodesByBreadth.push(groupResult.buckets.get(key));\r\n  });\r\n  return nodesByBreadth;\r\n}\r\n/**\r\n * Compute the original y-position for each node\r\n *\r\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\r\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\r\n *     group by the array of all sankey nodes based on the nodes x-position.\r\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\r\n * @param {number} height  the whole height of the area to draw the view\r\n * @param {number} nodeGap  the vertical distance between two nodes\r\n */\r\n\r\n\r\nfunction initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient) {\r\n  var minKy = Infinity;\r\n  zrUtil.each(nodesByBreadth, function (nodes) {\r\n    var n = nodes.length;\r\n    var sum = 0;\r\n    zrUtil.each(nodes, function (node) {\r\n      sum += node.getLayout().value;\r\n    });\r\n    var ky = orient === 'vertical' ? (width - (n - 1) * nodeGap) / sum : (height - (n - 1) * nodeGap) / sum;\r\n\r\n    if (ky < minKy) {\r\n      minKy = ky;\r\n    }\r\n  });\r\n  zrUtil.each(nodesByBreadth, function (nodes) {\r\n    zrUtil.each(nodes, function (node, i) {\r\n      var nodeDy = node.getLayout().value * minKy;\r\n\r\n      if (orient === 'vertical') {\r\n        node.setLayout({\r\n          x: i\r\n        }, true);\r\n        node.setLayout({\r\n          dx: nodeDy\r\n        }, true);\r\n      } else {\r\n        node.setLayout({\r\n          y: i\r\n        }, true);\r\n        node.setLayout({\r\n          dy: nodeDy\r\n        }, true);\r\n      }\r\n    });\r\n  });\r\n  zrUtil.each(edges, function (edge) {\r\n    var edgeDy = +edge.getValue() * minKy;\r\n    edge.setLayout({\r\n      dy: edgeDy\r\n    }, true);\r\n  });\r\n}\r\n/**\r\n * Resolve the collision of initialized depth (y-position)\r\n *\r\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\r\n *     group by the array of all sankey nodes based on the nodes x-position.\r\n * @param {number} nodeGap  the vertical distance between two nodes\r\n * @param {number} height  the whole height of the area to draw the view\r\n */\r\n\r\n\r\nfunction resolveCollisions(nodesByBreadth, nodeGap, height, width, orient) {\r\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\r\n  zrUtil.each(nodesByBreadth, function (nodes) {\r\n    nodes.sort(function (a, b) {\r\n      return a.getLayout()[keyAttr] - b.getLayout()[keyAttr];\r\n    });\r\n    var nodeX;\r\n    var node;\r\n    var dy;\r\n    var y0 = 0;\r\n    var n = nodes.length;\r\n    var nodeDyAttr = orient === 'vertical' ? 'dx' : 'dy';\r\n\r\n    for (var i = 0; i < n; i++) {\r\n      node = nodes[i];\r\n      dy = y0 - node.getLayout()[keyAttr];\r\n\r\n      if (dy > 0) {\r\n        nodeX = node.getLayout()[keyAttr] + dy;\r\n        orient === 'vertical' ? node.setLayout({\r\n          x: nodeX\r\n        }, true) : node.setLayout({\r\n          y: nodeX\r\n        }, true);\r\n      }\r\n\r\n      y0 = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap;\r\n    }\r\n\r\n    var viewWidth = orient === 'vertical' ? width : height; // If the bottommost node goes outside the bounds, push it back up\r\n\r\n    dy = y0 - nodeGap - viewWidth;\r\n\r\n    if (dy > 0) {\r\n      nodeX = node.getLayout()[keyAttr] - dy;\r\n      orient === 'vertical' ? node.setLayout({\r\n        x: nodeX\r\n      }, true) : node.setLayout({\r\n        y: nodeX\r\n      }, true);\r\n      y0 = nodeX;\r\n\r\n      for (i = n - 2; i >= 0; --i) {\r\n        node = nodes[i];\r\n        dy = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap - y0;\r\n\r\n        if (dy > 0) {\r\n          nodeX = node.getLayout()[keyAttr] - dy;\r\n          orient === 'vertical' ? node.setLayout({\r\n            x: nodeX\r\n          }, true) : node.setLayout({\r\n            y: nodeX\r\n          }, true);\r\n        }\r\n\r\n        y0 = node.getLayout()[keyAttr];\r\n      }\r\n    }\r\n  });\r\n}\r\n/**\r\n * Change the y-position of the nodes, except most the right side nodes\r\n *\r\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\r\n *     group by the array of all sankey nodes based on the node x-position.\r\n * @param {number} alpha  parameter used to adjust the nodes y-position\r\n */\r\n\r\n\r\nfunction relaxRightToLeft(nodesByBreadth, alpha, orient) {\r\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\r\n    zrUtil.each(nodes, function (node) {\r\n      if (node.outEdges.length) {\r\n        var y = sum(node.outEdges, weightedTarget, orient) / sum(node.outEdges, getEdgeValue, orient);\r\n\r\n        if (isNaN(y)) {\r\n          var len = node.outEdges.length;\r\n          y = len ? sum(node.outEdges, centerTarget, orient) / len : 0;\r\n        }\r\n\r\n        if (orient === 'vertical') {\r\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\r\n          node.setLayout({\r\n            x: nodeX\r\n          }, true);\r\n        } else {\r\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\r\n          node.setLayout({\r\n            y: nodeY\r\n          }, true);\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction weightedTarget(edge, orient) {\r\n  return center(edge.node2, orient) * edge.getValue();\r\n}\r\n\r\nfunction centerTarget(edge, orient) {\r\n  return center(edge.node2, orient);\r\n}\r\n\r\nfunction weightedSource(edge, orient) {\r\n  return center(edge.node1, orient) * edge.getValue();\r\n}\r\n\r\nfunction centerSource(edge, orient) {\r\n  return center(edge.node1, orient);\r\n}\r\n\r\nfunction center(node, orient) {\r\n  return orient === 'vertical' ? node.getLayout().x + node.getLayout().dx / 2 : node.getLayout().y + node.getLayout().dy / 2;\r\n}\r\n\r\nfunction getEdgeValue(edge) {\r\n  return edge.getValue();\r\n}\r\n\r\nfunction sum(array, cb, orient) {\r\n  var sum = 0;\r\n  var len = array.length;\r\n  var i = -1;\r\n\r\n  while (++i < len) {\r\n    var value = +cb.call(array, array[i], orient);\r\n\r\n    if (!isNaN(value)) {\r\n      sum += value;\r\n    }\r\n  }\r\n\r\n  return sum;\r\n}\r\n/**\r\n * Change the y-position of the nodes, except most the left side nodes\r\n *\r\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\r\n *     group by the array of all sankey nodes based on the node x-position.\r\n * @param {number} alpha  parameter used to adjust the nodes y-position\r\n */\r\n\r\n\r\nfunction relaxLeftToRight(nodesByBreadth, alpha, orient) {\r\n  zrUtil.each(nodesByBreadth, function (nodes) {\r\n    zrUtil.each(nodes, function (node) {\r\n      if (node.inEdges.length) {\r\n        var y = sum(node.inEdges, weightedSource, orient) / sum(node.inEdges, getEdgeValue, orient);\r\n\r\n        if (isNaN(y)) {\r\n          var len = node.inEdges.length;\r\n          y = len ? sum(node.inEdges, centerSource, orient) / len : 0;\r\n        }\r\n\r\n        if (orient === 'vertical') {\r\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\r\n          node.setLayout({\r\n            x: nodeX\r\n          }, true);\r\n        } else {\r\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\r\n          node.setLayout({\r\n            y: nodeY\r\n          }, true);\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n/**\r\n * Compute the depth(y-position) of each edge\r\n *\r\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\r\n */\r\n\r\n\r\nfunction computeEdgeDepths(nodes, orient) {\r\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\r\n  zrUtil.each(nodes, function (node) {\r\n    node.outEdges.sort(function (a, b) {\r\n      return a.node2.getLayout()[keyAttr] - b.node2.getLayout()[keyAttr];\r\n    });\r\n    node.inEdges.sort(function (a, b) {\r\n      return a.node1.getLayout()[keyAttr] - b.node1.getLayout()[keyAttr];\r\n    });\r\n  });\r\n  zrUtil.each(nodes, function (node) {\r\n    var sy = 0;\r\n    var ty = 0;\r\n    zrUtil.each(node.outEdges, function (edge) {\r\n      edge.setLayout({\r\n        sy: sy\r\n      }, true);\r\n      sy += edge.getLayout().dy;\r\n    });\r\n    zrUtil.each(node.inEdges, function (edge) {\r\n      edge.setLayout({\r\n        ty: ty\r\n      }, true);\r\n      ty += edge.getLayout().dy;\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar VisualMapping = require(\"../../visual/VisualMapping\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel, payload) {\r\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\r\n    var graph = seriesModel.getGraph();\r\n    var nodes = graph.nodes;\r\n\r\n    if (nodes.length) {\r\n      var minValue = Infinity;\r\n      var maxValue = -Infinity;\r\n      zrUtil.each(nodes, function (node) {\r\n        var nodeValue = node.getLayout().value;\r\n\r\n        if (nodeValue < minValue) {\r\n          minValue = nodeValue;\r\n        }\r\n\r\n        if (nodeValue > maxValue) {\r\n          maxValue = nodeValue;\r\n        }\r\n      });\r\n      zrUtil.each(nodes, function (node) {\r\n        var mapping = new VisualMapping({\r\n          type: 'color',\r\n          mappingMethod: 'linear',\r\n          dataExtent: [minValue, maxValue],\r\n          visual: seriesModel.get('color')\r\n        });\r\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\r\n        var customColor = node.getModel().get('itemStyle.color');\r\n        customColor != null ? node.setVisual('color', customColor) : node.setVisual('color', mapValueToColor);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./scatter/ScatterSeries\");\r\n\r\nrequire(\"./scatter/ScatterView\");\r\n\r\nvar visualSymbol = require(\"../visual/symbol\");\r\n\r\nvar layoutPoints = require(\"../layout/points\");\r\n\r\nrequire(\"../component/gridSimple\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// import * as zrUtil from 'zrender/src/core/util';\r\n// In case developer forget to include grid component\r\necharts.registerVisual(visualSymbol('scatter', 'circle'));\r\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\r\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\r\n//         var data = seriesModel.getData();\r\n//         var coordSys = seriesModel.coordinateSystem;\r\n//         if (coordSys.type !== 'geo') {\r\n//             return;\r\n//         }\r\n//         var startPt = coordSys.pointToData([0, 0]);\r\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\r\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\r\n//             return data.mapDimension(dim);\r\n//         });\r\n//         var range = {};\r\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\r\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\r\n//         data.selectRange(range);\r\n//     });\r\n// });","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar createListFromArray = require(\"../helper/createListFromArray\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = SeriesModel.extend({\r\n  type: 'series.scatter',\r\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\r\n  getInitialData: function (option, ecModel) {\r\n    return createListFromArray(this.getSource(), this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  },\r\n  brushSelector: 'point',\r\n  getProgressive: function () {\r\n    var progressive = this.option.progressive;\r\n\r\n    if (progressive == null) {\r\n      // PENDING\r\n      return this.option.large ? 5e3 : this.get('progressive');\r\n    }\r\n\r\n    return progressive;\r\n  },\r\n  getProgressiveThreshold: function () {\r\n    var progressiveThreshold = this.option.progressiveThreshold;\r\n\r\n    if (progressiveThreshold == null) {\r\n      // PENDING\r\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\r\n    }\r\n\r\n    return progressiveThreshold;\r\n  },\r\n  defaultOption: {\r\n    coordinateSystem: 'cartesian2d',\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    hoverAnimation: true,\r\n    // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // Polar coordinate system\r\n    // polarIndex: 0,\r\n    // Geo coordinate system\r\n    // geoIndex: 0,\r\n    // symbol: null,        // 图形类型\r\n    symbolSize: 10,\r\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n    // symbolRotate: null,  // 图形旋转控制\r\n    large: false,\r\n    // Available when large is true\r\n    largeThreshold: 2000,\r\n    // cursor: null,\r\n    // label: {\r\n    // show: false\r\n    // distance: 5,\r\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\r\n    //           'inside'|'left'|'right'|'top'|'bottom'\r\n    // 默认使用全局文本样式，详见TEXTSTYLE\r\n    // },\r\n    itemStyle: {\r\n      opacity: 0.8 // color: 各异\r\n\r\n    },\r\n    // If clip the overflow graphics\r\n    // Works on cartesian / polar series\r\n    clip: true // progressive: null\r\n\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\r\n\r\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\r\n\r\nvar pointsLayout = require(\"../../layout/points\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.extendChartView({\r\n  type: 'scatter',\r\n  render: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\r\n\r\n    symbolDraw.updateData(data, {\r\n      // TODO\r\n      // If this parameter should be a shape or a bounding volume\r\n      // shape will be more general.\r\n      // But bounding volume like bounding rect will be much faster in the contain calculation\r\n      clipShape: this._getClipShape(seriesModel)\r\n    });\r\n    this._finished = true;\r\n  },\r\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\r\n\r\n    symbolDraw.incrementalPrepareUpdate(data);\r\n    this._finished = false;\r\n  },\r\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\r\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\r\n      clipShape: this._getClipShape(seriesModel)\r\n    });\r\n\r\n    this._finished = taskParams.end === seriesModel.getData().count();\r\n  },\r\n  updateTransform: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\r\n    // PENDING\r\n\r\n    this.group.dirty();\r\n\r\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\r\n      return {\r\n        update: true\r\n      };\r\n    } else {\r\n      var res = pointsLayout().reset(seriesModel);\r\n\r\n      if (res.progress) {\r\n        res.progress({\r\n          start: 0,\r\n          end: data.count()\r\n        }, data);\r\n      }\r\n\r\n      this._symbolDraw.updateLayout(data);\r\n    }\r\n  },\r\n  _getClipShape: function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\r\n    return seriesModel.get('clip', true) ? clipArea : null;\r\n  },\r\n  _updateSymbolDraw: function (data, seriesModel) {\r\n    var symbolDraw = this._symbolDraw;\r\n    var pipelineContext = seriesModel.pipelineContext;\r\n    var isLargeDraw = pipelineContext.large;\r\n\r\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\r\n      symbolDraw && symbolDraw.remove();\r\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\r\n      this._isLargeDraw = isLargeDraw;\r\n      this.group.removeAll();\r\n    }\r\n\r\n    this.group.add(symbolDraw.group);\r\n    return symbolDraw;\r\n  },\r\n  remove: function (ecModel, api) {\r\n    this._symbolDraw && this._symbolDraw.remove(true);\r\n    this._symbolDraw = null;\r\n  },\r\n  dispose: function () {}\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nrequire(\"./sunburst/SunburstSeries\");\r\n\r\nrequire(\"./sunburst/SunburstView\");\r\n\r\nrequire(\"./sunburst/sunburstAction\");\r\n\r\nvar dataColor = require(\"../visual/dataColor\");\r\n\r\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\r\n\r\nvar dataFilter = require(\"../processor/dataFilter\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\r\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\r\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar NodeHighlightPolicy = {\r\n  NONE: 'none',\r\n  // not downplay others\r\n  DESCENDANT: 'descendant',\r\n  ANCESTOR: 'ancestor',\r\n  SELF: 'self'\r\n};\r\nvar DEFAULT_SECTOR_Z = 2;\r\nvar DEFAULT_TEXT_Z = 4;\r\n/**\r\n * Sunburstce of Sunburst including Sector, Label, LabelLine\r\n * @constructor\r\n * @extends {module:zrender/graphic/Group}\r\n */\r\n\r\nfunction SunburstPiece(node, seriesModel, ecModel) {\r\n  graphic.Group.call(this);\r\n  var sector = new graphic.Sector({\r\n    z2: DEFAULT_SECTOR_Z\r\n  });\r\n  sector.seriesIndex = seriesModel.seriesIndex;\r\n  var text = new graphic.Text({\r\n    z2: DEFAULT_TEXT_Z,\r\n    silent: node.getModel('label').get('silent')\r\n  });\r\n  this.add(sector);\r\n  this.add(text);\r\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\r\n\r\n  function onEmphasis() {\r\n    text.ignore = text.hoverIgnore;\r\n  }\r\n\r\n  function onNormal() {\r\n    text.ignore = text.normalIgnore;\r\n  }\r\n\r\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\r\n}\r\n\r\nvar SunburstPieceProto = SunburstPiece.prototype;\r\n\r\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\r\n  this.node = node;\r\n  node.piece = this;\r\n  seriesModel = seriesModel || this._seriesModel;\r\n  ecModel = ecModel || this._ecModel;\r\n  var sector = this.childAt(0);\r\n  sector.dataIndex = node.dataIndex;\r\n  var itemModel = node.getModel();\r\n  var layout = node.getLayout(); // if (!layout) {\r\n  //     console.log(node.getLayout());\r\n  // }\r\n\r\n  var sectorShape = zrUtil.extend({}, layout);\r\n  sectorShape.label = null;\r\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\r\n  fillDefaultColor(node, seriesModel, visualColor);\r\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\r\n  var style;\r\n\r\n  if (state === 'normal') {\r\n    style = normalStyle;\r\n  } else {\r\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\r\n    style = zrUtil.merge(stateStyle, normalStyle);\r\n  }\r\n\r\n  style = zrUtil.defaults({\r\n    lineJoin: 'bevel',\r\n    fill: style.fill || visualColor\r\n  }, style);\r\n\r\n  if (firstCreate) {\r\n    sector.setShape(sectorShape);\r\n    sector.shape.r = layout.r0;\r\n    graphic.updateProps(sector, {\r\n      shape: {\r\n        r: layout.r\r\n      }\r\n    }, seriesModel, node.dataIndex);\r\n    sector.useStyle(style);\r\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\r\n    // Disable animation for gradient since no interpolation method\r\n    // is supported for gradient\r\n    graphic.updateProps(sector, {\r\n      shape: sectorShape\r\n    }, seriesModel);\r\n    sector.useStyle(style);\r\n  } else {\r\n    graphic.updateProps(sector, {\r\n      shape: sectorShape,\r\n      style: style\r\n    }, seriesModel);\r\n  }\r\n\r\n  this._updateLabel(seriesModel, visualColor, state);\r\n\r\n  var cursorStyle = itemModel.getShallow('cursor');\r\n  cursorStyle && sector.attr('cursor', cursorStyle);\r\n\r\n  if (firstCreate) {\r\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\r\n\r\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\r\n  }\r\n\r\n  this._seriesModel = seriesModel || this._seriesModel;\r\n  this._ecModel = ecModel || this._ecModel;\r\n  graphic.setHoverStyle(this);\r\n};\r\n\r\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\r\n  var that = this;\r\n  this.node.hostTree.root.eachNode(function (n) {\r\n    if (n.piece) {\r\n      if (that.node === n) {\r\n        n.piece.updateData(false, n, 'emphasis');\r\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\r\n        n.piece.childAt(0).trigger('highlight');\r\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\r\n        n.piece.childAt(0).trigger('downplay');\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nSunburstPieceProto.onNormal = function () {\r\n  this.node.hostTree.root.eachNode(function (n) {\r\n    if (n.piece) {\r\n      n.piece.updateData(false, n, 'normal');\r\n    }\r\n  });\r\n};\r\n\r\nSunburstPieceProto.onHighlight = function () {\r\n  this.updateData(false, this.node, 'highlight');\r\n};\r\n\r\nSunburstPieceProto.onDownplay = function () {\r\n  this.updateData(false, this.node, 'downplay');\r\n};\r\n\r\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\r\n  var itemModel = this.node.getModel();\r\n  var normalModel = itemModel.getModel('label');\r\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\r\n  var labelHoverModel = itemModel.getModel('emphasis.label');\r\n  var labelFormatter = labelModel.get('formatter'); // Use normal formatter if no state formatter is defined\r\n\r\n  var labelState = labelFormatter ? state : 'normal';\r\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, labelState, null, null, 'label'), this.node.name);\r\n\r\n  if (getLabelAttr('show') === false) {\r\n    text = '';\r\n  }\r\n\r\n  var layout = this.node.getLayout();\r\n  var labelMinAngle = labelModel.get('minAngle');\r\n\r\n  if (labelMinAngle == null) {\r\n    labelMinAngle = normalModel.get('minAngle');\r\n  }\r\n\r\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\r\n  var angle = layout.endAngle - layout.startAngle;\r\n\r\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\r\n    // Not displaying text when angle is too small\r\n    text = '';\r\n  }\r\n\r\n  var label = this.childAt(1);\r\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\r\n    defaultText: labelModel.getShallow('show') ? text : null,\r\n    autoColor: visualColor,\r\n    useInsideStyle: true\r\n  });\r\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\r\n  var dx = Math.cos(midAngle);\r\n  var dy = Math.sin(midAngle);\r\n  var r;\r\n  var labelPosition = getLabelAttr('position');\r\n  var labelPadding = getLabelAttr('distance') || 0;\r\n  var textAlign = getLabelAttr('align');\r\n\r\n  if (labelPosition === 'outside') {\r\n    r = layout.r + labelPadding;\r\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\r\n  } else {\r\n    if (!textAlign || textAlign === 'center') {\r\n      r = (layout.r + layout.r0) / 2;\r\n      textAlign = 'center';\r\n    } else if (textAlign === 'left') {\r\n      r = layout.r0 + labelPadding;\r\n\r\n      if (midAngle > Math.PI / 2) {\r\n        textAlign = 'right';\r\n      }\r\n    } else if (textAlign === 'right') {\r\n      r = layout.r - labelPadding;\r\n\r\n      if (midAngle > Math.PI / 2) {\r\n        textAlign = 'left';\r\n      }\r\n    }\r\n  }\r\n\r\n  label.attr('style', {\r\n    text: text,\r\n    textAlign: textAlign,\r\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\r\n    opacity: getLabelAttr('opacity')\r\n  });\r\n  var textX = r * dx + layout.cx;\r\n  var textY = r * dy + layout.cy;\r\n  label.attr('position', [textX, textY]);\r\n  var rotateType = getLabelAttr('rotate');\r\n  var rotate = 0;\r\n\r\n  if (rotateType === 'radial') {\r\n    rotate = -midAngle;\r\n\r\n    if (rotate < -Math.PI / 2) {\r\n      rotate += Math.PI;\r\n    }\r\n  } else if (rotateType === 'tangential') {\r\n    rotate = Math.PI / 2 - midAngle;\r\n\r\n    if (rotate > Math.PI / 2) {\r\n      rotate -= Math.PI;\r\n    } else if (rotate < -Math.PI / 2) {\r\n      rotate += Math.PI;\r\n    }\r\n  } else if (typeof rotateType === 'number') {\r\n    rotate = rotateType * Math.PI / 180;\r\n  }\r\n\r\n  label.attr('rotation', rotate);\r\n\r\n  function getLabelAttr(name) {\r\n    var stateAttr = labelModel.get(name);\r\n\r\n    if (stateAttr == null) {\r\n      return normalModel.get(name);\r\n    } else {\r\n      return stateAttr;\r\n    }\r\n  }\r\n};\r\n\r\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\r\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\r\n  var that = this;\r\n\r\n  var onEmphasis = function () {\r\n    that.onEmphasis(highlightPolicy);\r\n  };\r\n\r\n  var onNormal = function () {\r\n    that.onNormal();\r\n  };\r\n\r\n  var onDownplay = function () {\r\n    that.onDownplay();\r\n  };\r\n\r\n  var onHighlight = function () {\r\n    that.onHighlight();\r\n  };\r\n\r\n  if (seriesModel.isAnimationEnabled()) {\r\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\r\n  }\r\n};\r\n\r\nzrUtil.inherits(SunburstPiece, graphic.Group);\r\nvar _default = SunburstPiece;\r\n/**\r\n * Get node color\r\n *\r\n * @param {TreeNode} node the node to get color\r\n * @param {module:echarts/model/Series} seriesModel series\r\n * @param {module:echarts/model/Global} ecModel echarts defaults\r\n */\r\n\r\nfunction getNodeColor(node, seriesModel, ecModel) {\r\n  // Color from visualMap\r\n  var visualColor = node.getVisual('color');\r\n  var visualMetaList = node.getVisual('visualMeta');\r\n\r\n  if (!visualMetaList || visualMetaList.length === 0) {\r\n    // Use first-generation color if has no visualMap\r\n    visualColor = null;\r\n  } // Self color or level color\r\n\r\n\r\n  var color = node.getModel('itemStyle').get('color');\r\n\r\n  if (color) {\r\n    return color;\r\n  } else if (visualColor) {\r\n    // Color mapping\r\n    return visualColor;\r\n  } else if (node.depth === 0) {\r\n    // Virtual root node\r\n    return ecModel.option.color[0];\r\n  } else {\r\n    // First-generation color\r\n    var length = ecModel.option.color.length;\r\n    color = ecModel.option.color[getRootId(node) % length];\r\n  }\r\n\r\n  return color;\r\n}\r\n/**\r\n * Get index of root in sorted order\r\n *\r\n * @param {TreeNode} node current node\r\n * @return {number} index in root\r\n */\r\n\r\n\r\nfunction getRootId(node) {\r\n  var ancestor = node;\r\n\r\n  while (ancestor.depth > 1) {\r\n    ancestor = ancestor.parentNode;\r\n  }\r\n\r\n  var virtualRoot = node.getAncestors()[0];\r\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\r\n}\r\n\r\nfunction isNodeHighlighted(node, activeNode, policy) {\r\n  if (policy === NodeHighlightPolicy.NONE) {\r\n    return false;\r\n  } else if (policy === NodeHighlightPolicy.SELF) {\r\n    return node === activeNode;\r\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\r\n    return node === activeNode || node.isAncestorOf(activeNode);\r\n  } else {\r\n    return node === activeNode || node.isDescendantOf(activeNode);\r\n  }\r\n} // Fix tooltip callback function params.color incorrect when pick a default color\r\n\r\n\r\nfunction fillDefaultColor(node, seriesModel, color) {\r\n  var data = seriesModel.getData();\r\n  data.setItemVisual(node.dataIndex, 'color', color);\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar Tree = require(\"../../data/Tree\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar _treeHelper = require(\"../helper/treeHelper\");\r\n\r\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = SeriesModel.extend({\r\n  type: 'series.sunburst',\r\n\r\n  /**\r\n   * @type {module:echarts/data/Tree~Node}\r\n   */\r\n  _viewRoot: null,\r\n  getInitialData: function (option, ecModel) {\r\n    // Create a virtual root.\r\n    var root = {\r\n      name: option.name,\r\n      children: option.data\r\n    };\r\n    completeTreeValue(root);\r\n    var levelModels = zrUtil.map(option.levels || [], function (levelDefine) {\r\n      return new Model(levelDefine, this, ecModel);\r\n    }, this); // Make sure always a new tree is created when setOption,\r\n    // in TreemapView, we check whether oldTree === newTree\r\n    // to choose mappings approach among old shapes and new shapes.\r\n\r\n    var tree = Tree.createTree(root, this, beforeLink);\r\n\r\n    function beforeLink(nodeData) {\r\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\r\n        var node = tree.getNodeByDataIndex(idx);\r\n        var levelModel = levelModels[node.depth];\r\n        levelModel && (model.parentModel = levelModel);\r\n        return model;\r\n      });\r\n    }\r\n\r\n    return tree.data;\r\n  },\r\n  optionUpdated: function () {\r\n    this.resetViewRoot();\r\n  },\r\n\r\n  /*\r\n   * @override\r\n   */\r\n  getDataParams: function (dataIndex) {\r\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\r\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\r\n    params.treePathInfo = wrapTreePathInfo(node, this);\r\n    return params;\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    // 默认全局居中\r\n    center: ['50%', '50%'],\r\n    radius: [0, '75%'],\r\n    // 默认顺时针\r\n    clockwise: true,\r\n    startAngle: 90,\r\n    // 最小角度改为0\r\n    minAngle: 0,\r\n    percentPrecision: 2,\r\n    // If still show when all data zero.\r\n    stillShowZeroSum: true,\r\n    // Policy of highlighting pieces when hover on one\r\n    // Valid values: 'none' (for not downplay others), 'descendant',\r\n    // 'ancestor', 'self'\r\n    highlightPolicy: 'descendant',\r\n    // 'rootToNode', 'link', or false\r\n    nodeClick: 'rootToNode',\r\n    renderLabelForZeroData: false,\r\n    label: {\r\n      // could be: 'radial', 'tangential', or 'none'\r\n      rotate: 'radial',\r\n      show: true,\r\n      opacity: 1,\r\n      // 'left' is for inner side of inside, and 'right' is for outter\r\n      // side for inside\r\n      align: 'center',\r\n      position: 'inside',\r\n      distance: 5,\r\n      silent: true\r\n    },\r\n    itemStyle: {\r\n      borderWidth: 1,\r\n      borderColor: 'white',\r\n      borderType: 'solid',\r\n      shadowBlur: 0,\r\n      shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n      shadowOffsetX: 0,\r\n      shadowOffsetY: 0,\r\n      opacity: 1\r\n    },\r\n    highlight: {\r\n      itemStyle: {\r\n        opacity: 1\r\n      }\r\n    },\r\n    downplay: {\r\n      itemStyle: {\r\n        opacity: 0.5\r\n      },\r\n      label: {\r\n        opacity: 0.6\r\n      }\r\n    },\r\n    // Animation type canbe expansion, scale\r\n    animationType: 'expansion',\r\n    animationDuration: 1000,\r\n    animationDurationUpdate: 500,\r\n    animationEasing: 'cubicOut',\r\n    data: [],\r\n    levels: [],\r\n\r\n    /**\r\n     * Sort order.\r\n     *\r\n     * Valid values: 'desc', 'asc', null, or callback function.\r\n     * 'desc' and 'asc' for descend and ascendant order;\r\n     * null for not sorting;\r\n     * example of callback function:\r\n     * function(nodeA, nodeB) {\r\n     *     return nodeA.getValue() - nodeB.getValue();\r\n     * }\r\n     */\r\n    sort: 'desc'\r\n  },\r\n  getViewRoot: function () {\r\n    return this._viewRoot;\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\r\n   */\r\n  resetViewRoot: function (viewRoot) {\r\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\r\n    var root = this.getRawData().tree.root;\r\n\r\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\r\n      this._viewRoot = root;\r\n    }\r\n  }\r\n});\r\n/**\r\n * @param {Object} dataNode\r\n */\r\n\r\n\r\nfunction completeTreeValue(dataNode) {\r\n  // Postorder travel tree.\r\n  // If value of none-leaf node is not set,\r\n  // calculate it by suming up the value of all children.\r\n  var sum = 0;\r\n  zrUtil.each(dataNode.children, function (child) {\r\n    completeTreeValue(child);\r\n    var childValue = child.value;\r\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\r\n    sum += childValue;\r\n  });\r\n  var thisValue = dataNode.value;\r\n\r\n  if (zrUtil.isArray(thisValue)) {\r\n    thisValue = thisValue[0];\r\n  }\r\n\r\n  if (thisValue == null || isNaN(thisValue)) {\r\n    thisValue = sum;\r\n  } // Value should not less than 0.\r\n\r\n\r\n  if (thisValue < 0) {\r\n    thisValue = 0;\r\n  }\r\n\r\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ChartView = require(\"../../view/Chart\");\r\n\r\nvar SunburstPiece = require(\"./SunburstPiece\");\r\n\r\nvar DataDiffer = require(\"../../data/DataDiffer\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar windowOpen = _format.windowOpen;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\r\nvar SunburstView = ChartView.extend({\r\n  type: 'sunburst',\r\n  init: function () {},\r\n  render: function (seriesModel, ecModel, api, payload) {\r\n    var that = this;\r\n    this.seriesModel = seriesModel;\r\n    this.api = api;\r\n    this.ecModel = ecModel;\r\n    var data = seriesModel.getData();\r\n    var virtualRoot = data.tree.root;\r\n    var newRoot = seriesModel.getViewRoot();\r\n    var group = this.group;\r\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\r\n    var newChildren = [];\r\n    newRoot.eachNode(function (node) {\r\n      newChildren.push(node);\r\n    });\r\n    var oldChildren = this._oldChildren || [];\r\n    dualTravel(newChildren, oldChildren);\r\n    renderRollUp(virtualRoot, newRoot);\r\n\r\n    if (payload && payload.highlight && payload.highlight.piece) {\r\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\r\n      payload.highlight.piece.onEmphasis(highlightPolicy);\r\n    } else if (payload && payload.unhighlight) {\r\n      var piece = this.virtualPiece;\r\n\r\n      if (!piece && virtualRoot.children.length) {\r\n        piece = virtualRoot.children[0].piece;\r\n      }\r\n\r\n      if (piece) {\r\n        piece.onNormal();\r\n      }\r\n    }\r\n\r\n    this._initEvents();\r\n\r\n    this._oldChildren = newChildren;\r\n\r\n    function dualTravel(newChildren, oldChildren) {\r\n      if (newChildren.length === 0 && oldChildren.length === 0) {\r\n        return;\r\n      }\r\n\r\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\r\n\r\n      function getKey(node) {\r\n        return node.getId();\r\n      }\r\n\r\n      function processNode(newId, oldId) {\r\n        var newNode = newId == null ? null : newChildren[newId];\r\n        var oldNode = oldId == null ? null : oldChildren[oldId];\r\n        doRenderNode(newNode, oldNode);\r\n      }\r\n    }\r\n\r\n    function doRenderNode(newNode, oldNode) {\r\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\r\n        // Not render data with value 0\r\n        newNode = null;\r\n      }\r\n\r\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\r\n        if (oldNode && oldNode.piece) {\r\n          if (newNode) {\r\n            // Update\r\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\r\n\r\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\r\n          } else {\r\n            // Remove\r\n            removeNode(oldNode);\r\n          }\r\n        } else if (newNode) {\r\n          // Add\r\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\r\n          group.add(piece); // For tooltip\r\n\r\n          data.setItemGraphicEl(newNode.dataIndex, piece);\r\n        }\r\n      }\r\n    }\r\n\r\n    function removeNode(node) {\r\n      if (!node) {\r\n        return;\r\n      }\r\n\r\n      if (node.piece) {\r\n        group.remove(node.piece);\r\n        node.piece = null;\r\n      }\r\n    }\r\n\r\n    function renderRollUp(virtualRoot, viewRoot) {\r\n      if (viewRoot.depth > 0) {\r\n        // Render\r\n        if (that.virtualPiece) {\r\n          // Update\r\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\r\n        } else {\r\n          // Add\r\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\r\n          group.add(that.virtualPiece);\r\n        }\r\n\r\n        if (viewRoot.piece._onclickEvent) {\r\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\r\n        }\r\n\r\n        var event = function (e) {\r\n          that._rootToNode(viewRoot.parentNode);\r\n        };\r\n\r\n        viewRoot.piece._onclickEvent = event;\r\n        that.virtualPiece.on('click', event);\r\n      } else if (that.virtualPiece) {\r\n        // Remove\r\n        group.remove(that.virtualPiece);\r\n        that.virtualPiece = null;\r\n      }\r\n    }\r\n  },\r\n  dispose: function () {},\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _initEvents: function () {\r\n    var that = this;\r\n\r\n    var event = function (e) {\r\n      var targetFound = false;\r\n      var viewRoot = that.seriesModel.getViewRoot();\r\n      viewRoot.eachNode(function (node) {\r\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\r\n          var nodeClick = node.getModel().get('nodeClick');\r\n\r\n          if (nodeClick === 'rootToNode') {\r\n            that._rootToNode(node);\r\n          } else if (nodeClick === 'link') {\r\n            var itemModel = node.getModel();\r\n            var link = itemModel.get('link');\r\n\r\n            if (link) {\r\n              var linkTarget = itemModel.get('target', true) || '_blank';\r\n              windowOpen(link, linkTarget);\r\n            }\r\n          }\r\n\r\n          targetFound = true;\r\n        }\r\n      });\r\n    };\r\n\r\n    if (this.group._onclickEvent) {\r\n      this.group.off('click', this.group._onclickEvent);\r\n    }\r\n\r\n    this.group.on('click', event);\r\n    this.group._onclickEvent = event;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rootToNode: function (node) {\r\n    if (node !== this.seriesModel.getViewRoot()) {\r\n      this.api.dispatchAction({\r\n        type: ROOT_TO_NODE_ACTION,\r\n        from: this.uid,\r\n        seriesId: this.seriesModel.id,\r\n        targetNode: node\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  containPoint: function (point, seriesModel) {\r\n    var treeRoot = seriesModel.getData();\r\n    var itemLayout = treeRoot.getItemLayout(0);\r\n\r\n    if (itemLayout) {\r\n      var dx = point[0] - itemLayout.cx;\r\n      var dy = point[1] - itemLayout.cy;\r\n      var radius = Math.sqrt(dx * dx + dy * dy);\r\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\r\n    }\r\n  }\r\n});\r\nvar _default = SunburstView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar helper = require(\"../helper/treeHelper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @file Sunburst action\r\n */\r\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\r\necharts.registerAction({\r\n  type: ROOT_TO_NODE_ACTION,\r\n  update: 'updateView'\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    subType: 'sunburst',\r\n    query: payload\r\n  }, handleRootToNode);\r\n\r\n  function handleRootToNode(model, index) {\r\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\r\n\r\n    if (targetInfo) {\r\n      var originViewRoot = model.getViewRoot();\r\n\r\n      if (originViewRoot) {\r\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\r\n      }\r\n\r\n      model.resetViewRoot(targetInfo.node);\r\n    }\r\n  }\r\n});\r\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\r\necharts.registerAction({\r\n  type: HIGHLIGHT_ACTION,\r\n  update: 'updateView'\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    subType: 'sunburst',\r\n    query: payload\r\n  }, handleHighlight);\r\n\r\n  function handleHighlight(model, index) {\r\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\r\n\r\n    if (targetInfo) {\r\n      payload.highlight = targetInfo.node;\r\n    }\r\n  }\r\n});\r\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\r\necharts.registerAction({\r\n  type: UNHIGHLIGHT_ACTION,\r\n  update: 'updateView'\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    subType: 'sunburst',\r\n    query: payload\r\n  }, handleUnhighlight);\r\n\r\n  function handleUnhighlight(model, index) {\r\n    payload.unhighlight = true;\r\n  }\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// var PI2 = Math.PI * 2;\r\nvar RADIAN = Math.PI / 180;\r\n\r\nfunction _default(seriesType, ecModel, api, payload) {\r\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n    var center = seriesModel.get('center');\r\n    var radius = seriesModel.get('radius');\r\n\r\n    if (!zrUtil.isArray(radius)) {\r\n      radius = [0, radius];\r\n    }\r\n\r\n    if (!zrUtil.isArray(center)) {\r\n      center = [center, center];\r\n    }\r\n\r\n    var width = api.getWidth();\r\n    var height = api.getHeight();\r\n    var size = Math.min(width, height);\r\n    var cx = parsePercent(center[0], width);\r\n    var cy = parsePercent(center[1], height);\r\n    var r0 = parsePercent(radius[0], size / 2);\r\n    var r = parsePercent(radius[1], size / 2);\r\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\r\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\r\n    var virtualRoot = seriesModel.getData().tree.root;\r\n    var treeRoot = seriesModel.getViewRoot();\r\n    var rootDepth = treeRoot.depth;\r\n    var sort = seriesModel.get('sort');\r\n\r\n    if (sort != null) {\r\n      initChildren(treeRoot, sort);\r\n    }\r\n\r\n    var validDataCount = 0;\r\n    zrUtil.each(treeRoot.children, function (child) {\r\n      !isNaN(child.getValue()) && validDataCount++;\r\n    });\r\n    var sum = treeRoot.getValue(); // Sum may be 0\r\n\r\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\r\n    var renderRollupNode = treeRoot.depth > 0;\r\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\r\n    var rPerLevel = (r - r0) / (levels || 1);\r\n    var clockwise = seriesModel.get('clockwise');\r\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\r\n    // var restAngle = PI2;\r\n    // var valueSumLargerThanMinAngle = 0;\r\n\r\n    var dir = clockwise ? 1 : -1;\r\n    /**\r\n     * Render a tree\r\n     * @return increased angle\r\n     */\r\n\r\n    var renderNode = function (node, startAngle) {\r\n      if (!node) {\r\n        return;\r\n      }\r\n\r\n      var endAngle = startAngle; // Render self\r\n\r\n      if (node !== virtualRoot) {\r\n        // Tree node is virtual, so it doesn't need to be drawn\r\n        var value = node.getValue();\r\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\r\n\r\n        if (angle < minAngle) {\r\n          angle = minAngle; // restAngle -= minAngle;\r\n        } // else {\r\n        //     valueSumLargerThanMinAngle += value;\r\n        // }\r\n\r\n\r\n        endAngle = startAngle + dir * angle;\r\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\r\n        var rStart = r0 + rPerLevel * depth;\r\n        var rEnd = r0 + rPerLevel * (depth + 1);\r\n        var itemModel = node.getModel();\r\n\r\n        if (itemModel.get('r0') != null) {\r\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\r\n        }\r\n\r\n        if (itemModel.get('r') != null) {\r\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\r\n        }\r\n\r\n        node.setLayout({\r\n          angle: angle,\r\n          startAngle: startAngle,\r\n          endAngle: endAngle,\r\n          clockwise: clockwise,\r\n          cx: cx,\r\n          cy: cy,\r\n          r0: rStart,\r\n          r: rEnd\r\n        });\r\n      } // Render children\r\n\r\n\r\n      if (node.children && node.children.length) {\r\n        // currentAngle = startAngle;\r\n        var siblingAngle = 0;\r\n        zrUtil.each(node.children, function (node) {\r\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\r\n        });\r\n      }\r\n\r\n      return endAngle - startAngle;\r\n    }; // Virtual root node for roll up\r\n\r\n\r\n    if (renderRollupNode) {\r\n      var rStart = r0;\r\n      var rEnd = r0 + rPerLevel;\r\n      var angle = Math.PI * 2;\r\n      virtualRoot.setLayout({\r\n        angle: angle,\r\n        startAngle: startAngle,\r\n        endAngle: startAngle + angle,\r\n        clockwise: clockwise,\r\n        cx: cx,\r\n        cy: cy,\r\n        r0: rStart,\r\n        r: rEnd\r\n      });\r\n    }\r\n\r\n    renderNode(treeRoot, startAngle);\r\n  });\r\n}\r\n/**\r\n * Init node children by order and update visual\r\n *\r\n * @param {TreeNode} node  root node\r\n * @param {boolean}  isAsc if is in ascendant order\r\n */\r\n\r\n\r\nfunction initChildren(node, isAsc) {\r\n  var children = node.children || [];\r\n  node.children = sort(children, isAsc); // Init children recursively\r\n\r\n  if (children.length) {\r\n    zrUtil.each(node.children, function (child) {\r\n      initChildren(child, isAsc);\r\n    });\r\n  }\r\n}\r\n/**\r\n * Sort children nodes\r\n *\r\n * @param {TreeNode[]}               children children of node to be sorted\r\n * @param {string | function | null} sort sort method\r\n *                                   See SunburstSeries.js for details.\r\n */\r\n\r\n\r\nfunction sort(children, sortOrder) {\r\n  if (typeof sortOrder === 'function') {\r\n    return children.sort(sortOrder);\r\n  } else {\r\n    var isAsc = sortOrder === 'asc';\r\n    return children.sort(function (a, b) {\r\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\r\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"../component/singleAxis\");\r\n\r\nrequire(\"./themeRiver/ThemeRiverSeries\");\r\n\r\nrequire(\"./themeRiver/ThemeRiverView\");\r\n\r\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\r\n\r\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\r\n\r\nvar dataFilter = require(\"../processor/dataFilter\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerLayout(themeRiverLayout);\r\necharts.registerVisual(themeRiverVisual);\r\necharts.registerProcessor(dataFilter('themeRiver'));","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar createDimensions = require(\"../../data/helper/createDimensions\");\r\n\r\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\r\n\r\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar groupData = _model.groupData;\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\n\r\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar DATA_NAME_INDEX = 2;\r\nvar ThemeRiverSeries = SeriesModel.extend({\r\n  type: 'series.themeRiver',\r\n  dependencies: ['singleAxis'],\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {module:zrender/core/util#HashMap}\r\n   */\r\n  nameMap: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (option) {\r\n    // eslint-disable-next-line\r\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\r\n    // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\r\n  },\r\n\r\n  /**\r\n   * If there is no value of a certain point in the time for some event,set it value to 0.\r\n   *\r\n   * @param {Array} data  initial data in the option\r\n   * @return {Array}\r\n   */\r\n  fixData: function (data) {\r\n    var rawDataLength = data.length;\r\n    /**\r\n     * Make sure every layer data get the same keys.\r\n     * The value index tells which layer has visited.\r\n     * {\r\n     *  2014/01/01: -1\r\n     * }\r\n     */\r\n\r\n    var timeValueKeys = {}; // grouped data by name\r\n\r\n    var groupResult = groupData(data, function (item) {\r\n      if (!timeValueKeys.hasOwnProperty(item[0])) {\r\n        timeValueKeys[item[0]] = -1;\r\n      }\r\n\r\n      return item[2];\r\n    });\r\n    var layData = [];\r\n    groupResult.buckets.each(function (items, key) {\r\n      layData.push({\r\n        name: key,\r\n        dataList: items\r\n      });\r\n    });\r\n    var layerNum = layData.length;\r\n\r\n    for (var k = 0; k < layerNum; ++k) {\r\n      var name = layData[k].name;\r\n\r\n      for (var j = 0; j < layData[k].dataList.length; ++j) {\r\n        var timeValue = layData[k].dataList[j][0];\r\n        timeValueKeys[timeValue] = k;\r\n      }\r\n\r\n      for (var timeValue in timeValueKeys) {\r\n        if (timeValueKeys.hasOwnProperty(timeValue) && timeValueKeys[timeValue] !== k) {\r\n          timeValueKeys[timeValue] = k;\r\n          data[rawDataLength] = [];\r\n          data[rawDataLength][0] = timeValue;\r\n          data[rawDataLength][1] = 0;\r\n          data[rawDataLength][2] = name;\r\n          rawDataLength++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   * @param  {Object} option  the initial option that user gived\r\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\r\n   * @return {module:echarts/data/List}\r\n   */\r\n  getInitialData: function (option, ecModel) {\r\n    var singleAxisModel = ecModel.queryComponents({\r\n      mainType: 'singleAxis',\r\n      index: this.get('singleAxisIndex'),\r\n      id: this.get('singleAxisId')\r\n    })[0];\r\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\r\n\r\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\r\n      return dataItem[2] !== undefined;\r\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\r\n\r\n    var data = this.fixData(filterData || []);\r\n    var nameList = [];\r\n    var nameMap = this.nameMap = zrUtil.createHashMap();\r\n    var count = 0;\r\n\r\n    for (var i = 0; i < data.length; ++i) {\r\n      nameList.push(data[i][DATA_NAME_INDEX]);\r\n\r\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\r\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\r\n        count++;\r\n      }\r\n    }\r\n\r\n    var dimensionsInfo = createDimensions(data, {\r\n      coordDimensions: ['single'],\r\n      dimensionsDefine: [{\r\n        name: 'time',\r\n        type: getDimensionTypeByAxis(axisType)\r\n      }, {\r\n        name: 'value',\r\n        type: 'float'\r\n      }, {\r\n        name: 'name',\r\n        type: 'ordinal'\r\n      }],\r\n      encodeDefine: {\r\n        single: 0,\r\n        value: 1,\r\n        itemName: 2\r\n      }\r\n    });\r\n    var list = new List(dimensionsInfo, this);\r\n    list.initData(data);\r\n    return list;\r\n  },\r\n\r\n  /**\r\n   * The raw data is divided into multiple layers and each layer\r\n   *     has same name.\r\n   *\r\n   * @return {Array.<Array.<number>>}\r\n   */\r\n  getLayerSeries: function () {\r\n    var data = this.getData();\r\n    var lenCount = data.count();\r\n    var indexArr = [];\r\n\r\n    for (var i = 0; i < lenCount; ++i) {\r\n      indexArr[i] = i;\r\n    }\r\n\r\n    var timeDim = data.mapDimension('single'); // data group by name\r\n\r\n    var groupResult = groupData(indexArr, function (index) {\r\n      return data.get('name', index);\r\n    });\r\n    var layerSeries = [];\r\n    groupResult.buckets.each(function (items, key) {\r\n      items.sort(function (index1, index2) {\r\n        return data.get(timeDim, index1) - data.get(timeDim, index2);\r\n      });\r\n      layerSeries.push({\r\n        name: key,\r\n        indices: items\r\n      });\r\n    });\r\n    return layerSeries;\r\n  },\r\n\r\n  /**\r\n   * Get data indices for show tooltip content\r\n    * @param {Array.<string>|string} dim  single coordinate dimension\r\n   * @param {number} value axis value\r\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\r\n   *     the themeRiver.\r\n   * @return {Object} {dataIndices, nestestValue}\r\n   */\r\n  getAxisTooltipData: function (dim, value, baseAxis) {\r\n    if (!zrUtil.isArray(dim)) {\r\n      dim = dim ? [dim] : [];\r\n    }\r\n\r\n    var data = this.getData();\r\n    var layerSeries = this.getLayerSeries();\r\n    var indices = [];\r\n    var layerNum = layerSeries.length;\r\n    var nestestValue;\r\n\r\n    for (var i = 0; i < layerNum; ++i) {\r\n      var minDist = Number.MAX_VALUE;\r\n      var nearestIdx = -1;\r\n      var pointNum = layerSeries[i].indices.length;\r\n\r\n      for (var j = 0; j < pointNum; ++j) {\r\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\r\n        var dist = Math.abs(theValue - value);\r\n\r\n        if (dist <= minDist) {\r\n          nestestValue = theValue;\r\n          minDist = dist;\r\n          nearestIdx = layerSeries[i].indices[j];\r\n        }\r\n      }\r\n\r\n      indices.push(nearestIdx);\r\n    }\r\n\r\n    return {\r\n      dataIndices: indices,\r\n      nestestValue: nestestValue\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   * @param {number} dataIndex  index of data\r\n   */\r\n  formatTooltip: function (dataIndex) {\r\n    var data = this.getData();\r\n    var htmlName = data.getName(dataIndex);\r\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\r\n\r\n    if (isNaN(htmlValue) || htmlValue == null) {\r\n      htmlValue = '-';\r\n    }\r\n\r\n    return encodeHTML(htmlName + ' : ' + htmlValue);\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'singleAxis',\r\n    // gap in axis's orthogonal orientation\r\n    boundaryGap: ['10%', '10%'],\r\n    // legendHoverLink: true,\r\n    singleAxisIndex: 0,\r\n    animationEasing: 'linear',\r\n    label: {\r\n      margin: 4,\r\n      show: true,\r\n      position: 'left',\r\n      color: '#000',\r\n      fontSize: 11\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      }\r\n    }\r\n  }\r\n});\r\nvar _default = ThemeRiverSeries;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar _poly = require(\"../line/poly\");\r\n\r\nvar Polygon = _poly.Polygon;\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar bind = _util.bind;\r\nvar extend = _util.extend;\r\n\r\nvar DataDiffer = require(\"../../data/DataDiffer\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendChartView({\r\n  type: 'themeRiver',\r\n  init: function () {\r\n    this._layers = [];\r\n  },\r\n  render: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var group = this.group;\r\n    var layerSeries = seriesModel.getLayerSeries();\r\n    var layoutInfo = data.getLayout('layoutInfo');\r\n    var rect = layoutInfo.rect;\r\n    var boundaryGap = layoutInfo.boundaryGap;\r\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\r\n\r\n    function keyGetter(item) {\r\n      return item.name;\r\n    }\r\n\r\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\r\n    var newLayersGroups = {};\r\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\r\n\r\n    function process(status, idx, oldIdx) {\r\n      var oldLayersGroups = this._layers;\r\n\r\n      if (status === 'remove') {\r\n        group.remove(oldLayersGroups[idx]);\r\n        return;\r\n      }\r\n\r\n      var points0 = [];\r\n      var points1 = [];\r\n      var color;\r\n      var indices = layerSeries[idx].indices;\r\n\r\n      for (var j = 0; j < indices.length; j++) {\r\n        var layout = data.getItemLayout(indices[j]);\r\n        var x = layout.x;\r\n        var y0 = layout.y0;\r\n        var y = layout.y;\r\n        points0.push([x, y0]);\r\n        points1.push([x, y0 + y]);\r\n        color = data.getItemVisual(indices[j], 'color');\r\n      }\r\n\r\n      var polygon;\r\n      var text;\r\n      var textLayout = data.getItemLayout(indices[0]);\r\n      var itemModel = data.getItemModel(indices[j - 1]);\r\n      var labelModel = itemModel.getModel('label');\r\n      var margin = labelModel.get('margin');\r\n\r\n      if (status === 'add') {\r\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\r\n        polygon = new Polygon({\r\n          shape: {\r\n            points: points0,\r\n            stackedOnPoints: points1,\r\n            smooth: 0.4,\r\n            stackedOnSmooth: 0.4,\r\n            smoothConstraint: false\r\n          },\r\n          z2: 0\r\n        });\r\n        text = new graphic.Text({\r\n          style: {\r\n            x: textLayout.x - margin,\r\n            y: textLayout.y0 + textLayout.y / 2\r\n          }\r\n        });\r\n        layerGroup.add(polygon);\r\n        layerGroup.add(text);\r\n        group.add(layerGroup);\r\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\r\n          polygon.removeClipPath();\r\n        }));\r\n      } else {\r\n        var layerGroup = oldLayersGroups[oldIdx];\r\n        polygon = layerGroup.childAt(0);\r\n        text = layerGroup.childAt(1);\r\n        group.add(layerGroup);\r\n        newLayersGroups[idx] = layerGroup;\r\n        graphic.updateProps(polygon, {\r\n          shape: {\r\n            points: points0,\r\n            stackedOnPoints: points1\r\n          }\r\n        }, seriesModel);\r\n        graphic.updateProps(text, {\r\n          style: {\r\n            x: textLayout.x - margin,\r\n            y: textLayout.y0 + textLayout.y / 2\r\n          }\r\n        }, seriesModel);\r\n      }\r\n\r\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\r\n      var itemStyleModel = itemModel.getModel('itemStyle');\r\n      graphic.setTextStyle(text.style, labelModel, {\r\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\r\n        textVerticalAlign: 'middle'\r\n      });\r\n      polygon.setStyle(extend({\r\n        fill: color\r\n      }, itemStyleModel.getItemStyle(['color'])));\r\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\r\n    }\r\n\r\n    this._layersSeries = layerSeries;\r\n    this._layers = newLayersGroups;\r\n  },\r\n  dispose: function () {}\r\n}); // add animation to the view\r\n\r\n\r\nfunction createGridClipShape(rect, seriesModel, cb) {\r\n  var rectEl = new graphic.Rect({\r\n    shape: {\r\n      x: rect.x - 10,\r\n      y: rect.y - 10,\r\n      width: 0,\r\n      height: rect.height + 20\r\n    }\r\n  });\r\n  graphic.initProps(rectEl, {\r\n    shape: {\r\n      width: rect.width + 20,\r\n      height: rect.height + 20\r\n    }\r\n  }, seriesModel, cb);\r\n  return rectEl;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel, api) {\r\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var single = seriesModel.coordinateSystem;\r\n    var layoutInfo = {}; // use the axis boundingRect for view\r\n\r\n    var rect = single.getRect();\r\n    layoutInfo.rect = rect;\r\n    var boundaryGap = seriesModel.get('boundaryGap');\r\n    var axis = single.getAxis();\r\n    layoutInfo.boundaryGap = boundaryGap;\r\n\r\n    if (axis.orient === 'horizontal') {\r\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\r\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\r\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\r\n      themeRiverLayout(data, seriesModel, height);\r\n    } else {\r\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\r\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\r\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\r\n      themeRiverLayout(data, seriesModel, width);\r\n    }\r\n\r\n    data.setLayout('layoutInfo', layoutInfo);\r\n  });\r\n}\r\n/**\r\n * The layout information about themeriver\r\n *\r\n * @param {module:echarts/data/List} data  data in the series\r\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\r\n * @param {number} height  value used to compute every series height\r\n */\r\n\r\n\r\nfunction themeRiverLayout(data, seriesModel, height) {\r\n  if (!data.count()) {\r\n    return;\r\n  }\r\n\r\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\r\n\r\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\r\n\r\n  var timeDim = data.mapDimension('single');\r\n  var valueDim = data.mapDimension('value');\r\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\r\n    return zrUtil.map(singleLayer.indices, function (idx) {\r\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\r\n      pt[1] = data.get(valueDim, idx);\r\n      return pt;\r\n    });\r\n  });\r\n  var base = computeBaseline(layerPoints);\r\n  var baseLine = base.y0;\r\n  var ky = height / base.max; // set layout information for each item.\r\n\r\n  var n = layerSeries.length;\r\n  var m = layerSeries[0].indices.length;\r\n  var baseY0;\r\n\r\n  for (var j = 0; j < m; ++j) {\r\n    baseY0 = baseLine[j] * ky;\r\n    data.setItemLayout(layerSeries[0].indices[j], {\r\n      layerIndex: 0,\r\n      x: layerPoints[0][j][0],\r\n      y0: baseY0,\r\n      y: layerPoints[0][j][1] * ky\r\n    });\r\n\r\n    for (var i = 1; i < n; ++i) {\r\n      baseY0 += layerPoints[i - 1][j][1] * ky;\r\n      data.setItemLayout(layerSeries[i].indices[j], {\r\n        layerIndex: i,\r\n        x: layerPoints[i][j][0],\r\n        y0: baseY0,\r\n        y: layerPoints[i][j][1] * ky\r\n      });\r\n    }\r\n  }\r\n}\r\n/**\r\n * Compute the baseLine of the rawdata\r\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\r\n *\r\n * @param  {Array.<Array>} data  the points in each layer\r\n * @return {Object}\r\n */\r\n\r\n\r\nfunction computeBaseline(data) {\r\n  var layerNum = data.length;\r\n  var pointNum = data[0].length;\r\n  var sums = [];\r\n  var y0 = [];\r\n  var max = 0;\r\n  var temp;\r\n  var base = {};\r\n\r\n  for (var i = 0; i < pointNum; ++i) {\r\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\r\n      temp += data[j][i][1];\r\n    }\r\n\r\n    if (temp > max) {\r\n      max = temp;\r\n    }\r\n\r\n    sums.push(temp);\r\n  }\r\n\r\n  for (var k = 0; k < pointNum; ++k) {\r\n    y0[k] = (max - sums[k]) / 2;\r\n  }\r\n\r\n  max = 0;\r\n\r\n  for (var l = 0; l < pointNum; ++l) {\r\n    var sum = sums[l] + y0[l];\r\n\r\n    if (sum > max) {\r\n      max = sum;\r\n    }\r\n  }\r\n\r\n  base.y0 = y0;\r\n  base.max = max;\r\n  return base;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel) {\r\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var rawData = seriesModel.getRawData();\r\n    var colorList = seriesModel.get('color');\r\n    var idxMap = createHashMap();\r\n    data.each(function (idx) {\r\n      idxMap.set(data.getRawIndex(idx), idx);\r\n    });\r\n    rawData.each(function (rawIndex) {\r\n      var name = rawData.getName(rawIndex);\r\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\r\n      rawData.setItemVisual(rawIndex, 'color', color);\r\n      var idx = idxMap.get(rawIndex);\r\n\r\n      if (idx != null) {\r\n        data.setItemVisual(idx, 'color', color);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./tree/TreeSeries\");\r\n\r\nrequire(\"./tree/TreeView\");\r\n\r\nrequire(\"./tree/treeAction\");\r\n\r\nvar visualSymbol = require(\"../visual/symbol\");\r\n\r\nvar treeLayout = require(\"./tree/treeLayout\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerVisual(visualSymbol('tree', 'circle'));\r\necharts.registerLayout(treeLayout);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar Tree = require(\"../../data/Tree\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = SeriesModel.extend({\r\n  type: 'series.tree',\r\n  layoutInfo: null,\r\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\r\n  // 'height' in the setOption() with 'merge' mode normal.\r\n  layoutMode: 'box',\r\n\r\n  /**\r\n   * Init a tree data structure from data in option series\r\n   * @param  {Object} option  the object used to config echarts view\r\n   * @return {module:echarts/data/List} storage initial data\r\n   */\r\n  getInitialData: function (option) {\r\n    //create an virtual root\r\n    var root = {\r\n      name: option.name,\r\n      children: option.data\r\n    };\r\n    var leaves = option.leaves || {};\r\n    var leavesModel = new Model(leaves, this, this.ecModel);\r\n    var tree = Tree.createTree(root, this, beforeLink);\r\n\r\n    function beforeLink(nodeData) {\r\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\r\n        var node = tree.getNodeByDataIndex(idx);\r\n\r\n        if (!node.children.length || !node.isExpand) {\r\n          model.parentModel = leavesModel;\r\n        }\r\n\r\n        return model;\r\n      });\r\n    }\r\n\r\n    var treeDepth = 0;\r\n    tree.eachNode('preorder', function (node) {\r\n      if (node.depth > treeDepth) {\r\n        treeDepth = node.depth;\r\n      }\r\n    });\r\n    var expandAndCollapse = option.expandAndCollapse;\r\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\r\n    tree.root.eachNode('preorder', function (node) {\r\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // Add item.collapsed != null, because users can collapse node original in the series.data.\r\n\r\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\r\n    });\r\n    return tree.data;\r\n  },\r\n\r\n  /**\r\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\r\n   * @returns {string} orient\r\n   */\r\n  getOrient: function () {\r\n    var orient = this.get('orient');\r\n\r\n    if (orient === 'horizontal') {\r\n      orient = 'LR';\r\n    } else if (orient === 'vertical') {\r\n      orient = 'TB';\r\n    }\r\n\r\n    return orient;\r\n  },\r\n  setZoom: function (zoom) {\r\n    this.option.zoom = zoom;\r\n  },\r\n  setCenter: function (center) {\r\n    this.option.center = center;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   * @param {number} dataIndex\r\n   */\r\n  formatTooltip: function (dataIndex) {\r\n    var tree = this.getData().tree;\r\n    var realRoot = tree.root.children[0];\r\n    var node = tree.getNodeByDataIndex(dataIndex);\r\n    var value = node.getValue();\r\n    var name = node.name;\r\n\r\n    while (node && node !== realRoot) {\r\n      name = node.parentNode.name + '.' + name;\r\n      node = node.parentNode;\r\n    }\r\n\r\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'view',\r\n    // the position of the whole view\r\n    left: '12%',\r\n    top: '12%',\r\n    right: '12%',\r\n    bottom: '12%',\r\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\r\n    layout: 'orthogonal',\r\n    // value can be 'polyline'\r\n    edgeShape: 'curve',\r\n    edgeForkPosition: '50%',\r\n    // true | false | 'move' | 'scale', see module:component/helper/RoamController.\r\n    roam: false,\r\n    // Symbol size scale ratio in roam\r\n    nodeScaleRatio: 0.4,\r\n    // Default on center of graph\r\n    center: null,\r\n    zoom: 1,\r\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\r\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\r\n    orient: 'LR',\r\n    symbol: 'emptyCircle',\r\n    symbolSize: 7,\r\n    expandAndCollapse: true,\r\n    initialTreeDepth: 2,\r\n    lineStyle: {\r\n      color: '#ccc',\r\n      width: 1.5,\r\n      curveness: 0.5\r\n    },\r\n    itemStyle: {\r\n      color: 'lightsteelblue',\r\n      borderColor: '#c23531',\r\n      borderWidth: 1.5\r\n    },\r\n    label: {\r\n      show: true,\r\n      color: '#555'\r\n    },\r\n    leaves: {\r\n      label: {\r\n        show: true\r\n      }\r\n    },\r\n    animationEasing: 'linear',\r\n    animationDuration: 700,\r\n    animationDurationUpdate: 1000\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar SymbolClz = require(\"../helper/Symbol\");\r\n\r\nvar _layoutHelper = require(\"./layoutHelper\");\r\n\r\nvar radialCoordinate = _layoutHelper.radialCoordinate;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar bbox = require(\"zrender/lib/core/bbox\");\r\n\r\nvar View = require(\"../../coord/View\");\r\n\r\nvar roamHelper = require(\"../../component/helper/roamHelper\");\r\n\r\nvar RoamController = require(\"../../component/helper/RoamController\");\r\n\r\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\r\n\r\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar TreeShape = graphic.extendShape({\r\n  shape: {\r\n    parentPoint: [],\r\n    childPoints: [],\r\n    orient: '',\r\n    forkPosition: ''\r\n  },\r\n  style: {\r\n    stroke: '#000',\r\n    fill: null\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var childPoints = shape.childPoints;\r\n    var childLen = childPoints.length;\r\n    var parentPoint = shape.parentPoint;\r\n    var firstChildPos = childPoints[0];\r\n    var lastChildPos = childPoints[childLen - 1];\r\n\r\n    if (childLen === 1) {\r\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\r\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\r\n      return;\r\n    }\r\n\r\n    var orient = shape.orient;\r\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\r\n    var otherDim = 1 - forkDim;\r\n    var forkPosition = parsePercent(shape.forkPosition, 1);\r\n    var tmpPoint = [];\r\n    tmpPoint[forkDim] = parentPoint[forkDim];\r\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\r\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\r\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\r\n    tmpPoint[forkDim] = firstChildPos[forkDim];\r\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    tmpPoint[forkDim] = lastChildPos[forkDim];\r\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\r\n\r\n    for (var i = 1; i < childLen - 1; i++) {\r\n      var point = childPoints[i];\r\n      ctx.moveTo(point[0], point[1]);\r\n      tmpPoint[forkDim] = point[forkDim];\r\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    }\r\n  }\r\n});\r\n\r\nvar _default = echarts.extendChartView({\r\n  type: 'tree',\r\n\r\n  /**\r\n   * Init the chart\r\n   * @override\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  init: function (ecModel, api) {\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/data/Tree}\r\n     */\r\n    this._oldTree;\r\n    /**\r\n     * @private\r\n     * @type {module:zrender/container/Group}\r\n     */\r\n\r\n    this._mainGroup = new graphic.Group();\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/componet/helper/RoamController}\r\n     */\r\n\r\n    this._controller = new RoamController(api.getZr());\r\n    this._controllerHost = {\r\n      target: this.group\r\n    };\r\n    this.group.add(this._mainGroup);\r\n  },\r\n  render: function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var layoutInfo = seriesModel.layoutInfo;\r\n    var group = this._mainGroup;\r\n    var layout = seriesModel.get('layout');\r\n\r\n    if (layout === 'radial') {\r\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\r\n    } else {\r\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\r\n    }\r\n\r\n    this._updateViewCoordSys(seriesModel, layoutInfo, layout);\r\n\r\n    this._updateController(seriesModel, ecModel, api);\r\n\r\n    var oldData = this._data;\r\n    var seriesScope = {\r\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\r\n      layout: layout,\r\n      edgeShape: seriesModel.get('edgeShape'),\r\n      edgeForkPosition: seriesModel.get('edgeForkPosition'),\r\n      orient: seriesModel.getOrient(),\r\n      curvature: seriesModel.get('lineStyle.curveness'),\r\n      symbolRotate: seriesModel.get('symbolRotate'),\r\n      symbolOffset: seriesModel.get('symbolOffset'),\r\n      hoverAnimation: seriesModel.get('hoverAnimation'),\r\n      useNameLabel: true,\r\n      fadeIn: true\r\n    };\r\n    data.diff(oldData).add(function (newIdx) {\r\n      if (symbolNeedsDraw(data, newIdx)) {\r\n        // Create node and edge\r\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\r\n\r\n      if (!symbolNeedsDraw(data, newIdx)) {\r\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\r\n        return;\r\n      } // Update node and edge\r\n\r\n\r\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\r\n    }).remove(function (oldIdx) {\r\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\r\n      // node haven't been initialized with a symbol element,\r\n      // you can't found it's symbol element through index.\r\n      // so if we want to remove the symbol element we should insure\r\n      // that the symbol element is not null.\r\n\r\n      if (symbolEl) {\r\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\r\n      }\r\n    }).execute();\r\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\r\n\r\n    this._updateNodeAndLinkScale(seriesModel);\r\n\r\n    if (seriesScope.expandAndCollapse === true) {\r\n      data.eachItemGraphicEl(function (el, dataIndex) {\r\n        el.off('click').on('click', function () {\r\n          api.dispatchAction({\r\n            type: 'treeExpandAndCollapse',\r\n            seriesId: seriesModel.id,\r\n            dataIndex: dataIndex\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    this._data = data;\r\n  },\r\n  _updateViewCoordSys: function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var points = [];\r\n    data.each(function (idx) {\r\n      var layout = data.getItemLayout(idx);\r\n\r\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\r\n        points.push([+layout.x, +layout.y]);\r\n      }\r\n    });\r\n    var min = [];\r\n    var max = [];\r\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\r\n    // the root node will disappear.\r\n\r\n    var oldMin = this._min;\r\n    var oldMax = this._max; // If width or height is 0\r\n\r\n    if (max[0] - min[0] === 0) {\r\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\r\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\r\n    }\r\n\r\n    if (max[1] - min[1] === 0) {\r\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\r\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\r\n    }\r\n\r\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\r\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\r\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\r\n    viewCoordSys.setCenter(seriesModel.get('center'));\r\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\r\n\r\n    this.group.attr({\r\n      position: viewCoordSys.position,\r\n      scale: viewCoordSys.scale\r\n    });\r\n    this._viewCoordSys = viewCoordSys;\r\n    this._min = min;\r\n    this._max = max;\r\n  },\r\n  _updateController: function (seriesModel, ecModel, api) {\r\n    var controller = this._controller;\r\n    var controllerHost = this._controllerHost;\r\n    var group = this.group;\r\n    controller.setPointerChecker(function (e, x, y) {\r\n      var rect = group.getBoundingRect();\r\n      rect.applyTransform(group.transform);\r\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\r\n    });\r\n    controller.enable(seriesModel.get('roam'));\r\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\r\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\r\n    controller.off('pan').off('zoom').on('pan', function (e) {\r\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'treeRoam',\r\n        dx: e.dx,\r\n        dy: e.dy\r\n      });\r\n    }, this).on('zoom', function (e) {\r\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'treeRoam',\r\n        zoom: e.scale,\r\n        originX: e.originX,\r\n        originY: e.originY\r\n      });\r\n\r\n      this._updateNodeAndLinkScale(seriesModel);\r\n    }, this);\r\n  },\r\n  _updateNodeAndLinkScale: function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n\r\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\r\n\r\n    var invScale = [nodeScale, nodeScale];\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      el.attr('scale', invScale);\r\n    });\r\n  },\r\n  _getNodeGlobalScale: function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys.type !== 'view') {\r\n      return 1;\r\n    }\r\n\r\n    var nodeScaleRatio = this._nodeScaleRatio;\r\n    var groupScale = coordSys.scale;\r\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\r\n\r\n    var roamZoom = coordSys.getZoom();\r\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\r\n    return nodeScale / groupZoom;\r\n  },\r\n  dispose: function () {\r\n    this._controller && this._controller.dispose();\r\n    this._controllerHost = {};\r\n  },\r\n  remove: function () {\r\n    this._mainGroup.removeAll();\r\n\r\n    this._data = null;\r\n  }\r\n});\r\n\r\nfunction symbolNeedsDraw(data, dataIndex) {\r\n  var layout = data.getItemLayout(dataIndex);\r\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\r\n}\r\n\r\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\r\n  seriesScope.itemModel = itemModel;\r\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\r\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\r\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\r\n  seriesScope.labelModel = itemModel.getModel('label');\r\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\r\n\r\n  if (node.isExpand === false && node.children.length !== 0) {\r\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\r\n  } else {\r\n    seriesScope.symbolInnerColor = '#fff';\r\n  }\r\n\r\n  return seriesScope;\r\n}\r\n\r\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\r\n  var isInit = !symbolEl;\r\n  var node = data.tree.getNodeByDataIndex(dataIndex);\r\n  var itemModel = node.getModel();\r\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\r\n  var virtualRoot = data.tree.root;\r\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\r\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\r\n  var sourceLayout = source.getLayout();\r\n  var sourceOldLayout = sourceSymbolEl ? {\r\n    x: sourceSymbolEl.position[0],\r\n    y: sourceSymbolEl.position[1],\r\n    rawX: sourceSymbolEl.__radialOldRawX,\r\n    rawY: sourceSymbolEl.__radialOldRawY\r\n  } : sourceLayout;\r\n  var targetLayout = node.getLayout();\r\n\r\n  if (isInit) {\r\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\r\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\r\n  } else {\r\n    symbolEl.updateData(data, dataIndex, seriesScope);\r\n  }\r\n\r\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\r\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\r\n  symbolEl.__radialRawX = targetLayout.rawX;\r\n  symbolEl.__radialRawY = targetLayout.rawY;\r\n  group.add(symbolEl);\r\n  data.setItemGraphicEl(dataIndex, symbolEl);\r\n  graphic.updateProps(symbolEl, {\r\n    position: [targetLayout.x, targetLayout.y]\r\n  }, seriesModel);\r\n  var symbolPath = symbolEl.getSymbolPath();\r\n\r\n  if (seriesScope.layout === 'radial') {\r\n    var realRoot = virtualRoot.children[0];\r\n    var rootLayout = realRoot.getLayout();\r\n    var length = realRoot.children.length;\r\n    var rad;\r\n    var isLeft;\r\n\r\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\r\n      var center = {};\r\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\r\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\r\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\r\n\r\n      if (rad < 0) {\r\n        rad = Math.PI * 2 + rad;\r\n      }\r\n\r\n      isLeft = center.x < rootLayout.x;\r\n\r\n      if (isLeft) {\r\n        rad = rad - Math.PI;\r\n      }\r\n    } else {\r\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\r\n\r\n      if (rad < 0) {\r\n        rad = Math.PI * 2 + rad;\r\n      }\r\n\r\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\r\n        isLeft = targetLayout.x < rootLayout.x;\r\n\r\n        if (isLeft) {\r\n          rad = rad - Math.PI;\r\n        }\r\n      } else {\r\n        isLeft = targetLayout.x > rootLayout.x;\r\n\r\n        if (!isLeft) {\r\n          rad = rad - Math.PI;\r\n        }\r\n      }\r\n    }\r\n\r\n    var textPosition = isLeft ? 'left' : 'right';\r\n    var rotate = seriesScope.labelModel.get('rotate');\r\n    var labelRotateRadian = rotate * (Math.PI / 180);\r\n    symbolPath.setStyle({\r\n      textPosition: seriesScope.labelModel.get('position') || textPosition,\r\n      textRotation: rotate == null ? -rad : labelRotateRadian,\r\n      textOrigin: 'center',\r\n      verticalAlign: 'middle'\r\n    });\r\n  }\r\n\r\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope);\r\n}\r\n\r\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope) {\r\n  var edgeShape = seriesScope.edgeShape;\r\n  var edge = symbolEl.__edge;\r\n\r\n  if (edgeShape === 'curve') {\r\n    if (node.parentNode && node.parentNode !== virtualRoot) {\r\n      if (!edge) {\r\n        edge = symbolEl.__edge = new graphic.BezierCurve({\r\n          shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\r\n          style: zrUtil.defaults({\r\n            opacity: 0,\r\n            strokeNoScale: true\r\n          }, seriesScope.lineStyle)\r\n        });\r\n      }\r\n\r\n      graphic.updateProps(edge, {\r\n        shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\r\n        style: zrUtil.defaults({\r\n          opacity: 1\r\n        }, seriesScope.lineStyle)\r\n      }, seriesModel);\r\n    }\r\n  } else if (edgeShape === 'polyline') {\r\n    if (seriesScope.layout === 'orthogonal') {\r\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\r\n        var children = node.children;\r\n        var childPoints = [];\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n          var childLayout = children[i].getLayout();\r\n          childPoints.push([childLayout.x, childLayout.y]);\r\n        }\r\n\r\n        if (!edge) {\r\n          edge = symbolEl.__edge = new TreeShape({\r\n            shape: {\r\n              parentPoint: [targetLayout.x, targetLayout.y],\r\n              childPoints: [[targetLayout.x, targetLayout.y]],\r\n              orient: seriesScope.orient,\r\n              forkPosition: seriesScope.edgeForkPosition\r\n            },\r\n            style: zrUtil.defaults({\r\n              opacity: 0,\r\n              strokeNoScale: true\r\n            }, seriesScope.lineStyle)\r\n          });\r\n        }\r\n\r\n        graphic.updateProps(edge, {\r\n          shape: {\r\n            parentPoint: [targetLayout.x, targetLayout.y],\r\n            childPoints: childPoints\r\n          },\r\n          style: zrUtil.defaults({\r\n            opacity: 1\r\n          }, seriesScope.lineStyle)\r\n        }, seriesModel);\r\n      }\r\n    } else {}\r\n  }\r\n\r\n  group.add(edge);\r\n}\r\n\r\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\r\n  var node = data.tree.getNodeByDataIndex(dataIndex);\r\n  var virtualRoot = data.tree.root;\r\n  var itemModel = node.getModel();\r\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\r\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\r\n  var edgeShape = seriesScope.edgeShape;\r\n  var sourceLayout;\r\n\r\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\r\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\r\n  }\r\n\r\n  graphic.updateProps(symbolEl, {\r\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\r\n  }, seriesModel, function () {\r\n    group.remove(symbolEl);\r\n    data.setItemGraphicEl(dataIndex, null);\r\n  });\r\n  symbolEl.fadeOut(null, {\r\n    keepLabel: true\r\n  });\r\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\r\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\r\n  // the source at the same time. because the polyline edge shape is only owned by the source.\r\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\r\n  // the source at the same time. the same reason as above.\r\n\r\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\r\n  var edgeShape = seriesScope.edgeShape;\r\n\r\n  if (edge) {\r\n    if (edgeShape === 'curve') {\r\n      graphic.updateProps(edge, {\r\n        shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\r\n        style: {\r\n          opacity: 0\r\n        }\r\n      }, seriesModel, function () {\r\n        group.remove(edge);\r\n      });\r\n    } else if (edgeShape === 'polyline' && seriesScope.layout === 'orthogonal') {\r\n      graphic.updateProps(edge, {\r\n        shape: {\r\n          parentPoint: [sourceLayout.x, sourceLayout.y],\r\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\r\n        },\r\n        style: {\r\n          opacity: 0\r\n        }\r\n      }, seriesModel, function () {\r\n        group.remove(edge);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\r\n  var cpx1;\r\n  var cpy1;\r\n  var cpx2;\r\n  var cpy2;\r\n  var orient = seriesScope.orient;\r\n  var x1;\r\n  var x2;\r\n  var y1;\r\n  var y2;\r\n\r\n  if (seriesScope.layout === 'radial') {\r\n    x1 = sourceLayout.rawX;\r\n    y1 = sourceLayout.rawY;\r\n    x2 = targetLayout.rawX;\r\n    y2 = targetLayout.rawY;\r\n    var radialCoor1 = radialCoordinate(x1, y1);\r\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\r\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\r\n    var radialCoor4 = radialCoordinate(x2, y2);\r\n    return {\r\n      x1: radialCoor1.x,\r\n      y1: radialCoor1.y,\r\n      x2: radialCoor4.x,\r\n      y2: radialCoor4.y,\r\n      cpx1: radialCoor2.x,\r\n      cpy1: radialCoor2.y,\r\n      cpx2: radialCoor3.x,\r\n      cpy2: radialCoor3.y\r\n    };\r\n  } else {\r\n    x1 = sourceLayout.x;\r\n    y1 = sourceLayout.y;\r\n    x2 = targetLayout.x;\r\n    y2 = targetLayout.y;\r\n\r\n    if (orient === 'LR' || orient === 'RL') {\r\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\r\n      cpy1 = y1;\r\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\r\n      cpy2 = y2;\r\n    }\r\n\r\n    if (orient === 'TB' || orient === 'BT') {\r\n      cpx1 = x1;\r\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\r\n      cpx2 = x2;\r\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x1: x1,\r\n    y1: y1,\r\n    x2: x2,\r\n    y2: y2,\r\n    cpx1: cpx1,\r\n    cpy1: cpy1,\r\n    cpx2: cpx2,\r\n    cpy2: cpy2\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* A third-party license is embeded for some of the code in this file:\r\n* The tree layoutHelper implementation was originally copied from\r\n* \"d3.js\"(https://github.com/d3/d3-hierarchy) with\r\n* some modifications made for this project.\r\n* (see more details in the comment of the specific method below.)\r\n* The use of the source code of this file is also subject to the terms\r\n* and consitions of the licence of \"d3.js\" (BSD-3Clause, see\r\n* </licenses/LICENSE-d3>).\r\n*/\r\n\r\n/**\r\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\r\n *       the tree.\r\n */\r\n\r\n/**\r\n * Initialize all computational message for following algorithm.\r\n *\r\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree.\r\n */\r\nfunction init(root) {\r\n  root.hierNode = {\r\n    defaultAncestor: null,\r\n    ancestor: root,\r\n    prelim: 0,\r\n    modifier: 0,\r\n    change: 0,\r\n    shift: 0,\r\n    i: 0,\r\n    thread: null\r\n  };\r\n  var nodes = [root];\r\n  var node;\r\n  var children;\r\n\r\n  while (node = nodes.pop()) {\r\n    // jshint ignore:line\r\n    children = node.children;\r\n\r\n    if (node.isExpand && children.length) {\r\n      var n = children.length;\r\n\r\n      for (var i = n - 1; i >= 0; i--) {\r\n        var child = children[i];\r\n        child.hierNode = {\r\n          defaultAncestor: null,\r\n          ancestor: child,\r\n          prelim: 0,\r\n          modifier: 0,\r\n          change: 0,\r\n          shift: 0,\r\n          i: i,\r\n          thread: null\r\n        };\r\n        nodes.push(child);\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * Computes a preliminary x coordinate for node. Before that, this function is\r\n * applied recursively to the children of node, as well as the function\r\n * apportion(). After spacing out the children by calling executeShifts(), the\r\n * node is placed to the midpoint of its outermost children.\r\n *\r\n * @param  {module:echarts/data/Tree~TreeNode} node\r\n * @param {Function} separation\r\n */\r\n\r\n\r\nfunction firstWalk(node, separation) {\r\n  var children = node.isExpand ? node.children : [];\r\n  var siblings = node.parentNode.children;\r\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\r\n\r\n  if (children.length) {\r\n    executeShifts(node);\r\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\r\n\r\n    if (subtreeW) {\r\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\r\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\r\n    } else {\r\n      node.hierNode.prelim = midPoint;\r\n    }\r\n  } else if (subtreeW) {\r\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\r\n  }\r\n\r\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * Computes all real x-coordinates by summing up the modifiers recursively.\r\n *\r\n * @param  {module:echarts/data/Tree~TreeNode} node\r\n */\r\n\r\n\r\nfunction secondWalk(node) {\r\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\r\n  node.setLayout({\r\n    x: nodeX\r\n  }, true);\r\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\r\n}\r\n\r\nfunction separation(cb) {\r\n  return arguments.length ? cb : defaultSeparation;\r\n}\r\n/**\r\n * Transform the common coordinate to radial coordinate.\r\n *\r\n * @param  {number} x\r\n * @param  {number} y\r\n * @return {Object}\r\n */\r\n\r\n\r\nfunction radialCoordinate(x, y) {\r\n  var radialCoor = {};\r\n  x -= Math.PI / 2;\r\n  radialCoor.x = y * Math.cos(x);\r\n  radialCoor.y = y * Math.sin(x);\r\n  return radialCoor;\r\n}\r\n/**\r\n * Get the layout position of the whole view.\r\n *\r\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\r\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\r\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\r\n */\r\n\r\n\r\nfunction getViewRect(seriesModel, api) {\r\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n/**\r\n * All other shifts, applied to the smaller subtrees between w- and w+, are\r\n * performed by this function.\r\n *\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * @param  {module:echarts/data/Tree~TreeNode} node\r\n */\r\n\r\n\r\nfunction executeShifts(node) {\r\n  var children = node.children;\r\n  var n = children.length;\r\n  var shift = 0;\r\n  var change = 0;\r\n\r\n  while (--n >= 0) {\r\n    var child = children[n];\r\n    child.hierNode.prelim += shift;\r\n    child.hierNode.modifier += shift;\r\n    change += child.hierNode.change;\r\n    shift += child.hierNode.shift + change;\r\n  }\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * The core of the algorithm. Here, a new subtree is combined with the\r\n * previous subtrees. Threads are used to traverse the inside and outside\r\n * contours of the left and right subtree up to the highest common level.\r\n * Whenever two nodes of the inside contours conflict, we compute the left\r\n * one of the greatest uncommon ancestors using the function nextAncestor()\r\n * and call moveSubtree() to shift the subtree and prepare the shifts of\r\n * smaller subtrees. Finally, we add a new thread (if necessary).\r\n *\r\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\r\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\r\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\r\n * @param  {Function} separation\r\n * @return {module:echarts/data/Tree~TreeNode}\r\n */\r\n\r\n\r\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\r\n  if (subtreeW) {\r\n    var nodeOutRight = subtreeV;\r\n    var nodeInRight = subtreeV;\r\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\r\n    var nodeInLeft = subtreeW;\r\n    var sumOutRight = nodeOutRight.hierNode.modifier;\r\n    var sumInRight = nodeInRight.hierNode.modifier;\r\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\r\n    var sumInLeft = nodeInLeft.hierNode.modifier;\r\n\r\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\r\n      nodeOutRight = nextRight(nodeOutRight);\r\n      nodeOutLeft = nextLeft(nodeOutLeft);\r\n      nodeOutRight.hierNode.ancestor = subtreeV;\r\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\r\n\r\n      if (shift > 0) {\r\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\r\n        sumInRight += shift;\r\n        sumOutRight += shift;\r\n      }\r\n\r\n      sumInLeft += nodeInLeft.hierNode.modifier;\r\n      sumInRight += nodeInRight.hierNode.modifier;\r\n      sumOutRight += nodeOutRight.hierNode.modifier;\r\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\r\n    }\r\n\r\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\r\n      nodeOutRight.hierNode.thread = nodeInLeft;\r\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\r\n    }\r\n\r\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\r\n      nodeOutLeft.hierNode.thread = nodeInRight;\r\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\r\n      ancestor = subtreeV;\r\n    }\r\n  }\r\n\r\n  return ancestor;\r\n}\r\n/**\r\n * This function is used to traverse the right contour of a subtree.\r\n * It returns the rightmost child of node or the thread of node. The function\r\n * returns null if and only if node is on the highest depth of its subtree.\r\n *\r\n * @param  {module:echarts/data/Tree~TreeNode} node\r\n * @return {module:echarts/data/Tree~TreeNode}\r\n */\r\n\r\n\r\nfunction nextRight(node) {\r\n  var children = node.children;\r\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\r\n}\r\n/**\r\n * This function is used to traverse the left contour of a subtree (or a subforest).\r\n * It returns the leftmost child of node or the thread of node. The function\r\n * returns null if and only if node is on the highest depth of its subtree.\r\n *\r\n * @param  {module:echarts/data/Tree~TreeNode} node\r\n * @return {module:echarts/data/Tree~TreeNode}\r\n */\r\n\r\n\r\nfunction nextLeft(node) {\r\n  var children = node.children;\r\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\r\n}\r\n/**\r\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\r\n * Otherwise, returns the specified ancestor.\r\n *\r\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\r\n * @param  {module:echarts/data/Tree~TreeNode} node\r\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\r\n * @return {module:echarts/data/Tree~TreeNode}\r\n */\r\n\r\n\r\nfunction nextAncestor(nodeInLeft, node, ancestor) {\r\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * Shifts the current subtree rooted at wr.\r\n * This is done by increasing prelim(w+) and modifier(w+) by shift.\r\n *\r\n * @param  {module:echarts/data/Tree~TreeNode} wl\r\n * @param  {module:echarts/data/Tree~TreeNode} wr\r\n * @param  {number} shift [description]\r\n */\r\n\r\n\r\nfunction moveSubtree(wl, wr, shift) {\r\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\r\n  wr.hierNode.change -= change;\r\n  wr.hierNode.shift += shift;\r\n  wr.hierNode.modifier += shift;\r\n  wr.hierNode.prelim += shift;\r\n  wl.hierNode.change += change;\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n */\r\n\r\n\r\nfunction defaultSeparation(node1, node2) {\r\n  return node1.parentNode === node2.parentNode ? 1 : 2;\r\n}\r\n\r\nexports.init = init;\r\nexports.firstWalk = firstWalk;\r\nexports.secondWalk = secondWalk;\r\nexports.separation = separation;\r\nexports.radialCoordinate = radialCoordinate;\r\nexports.getViewRect = getViewRect;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Traverse the tree from bottom to top and do something\r\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\r\n * @param  {Function} callback\r\n */\r\nfunction eachAfter(root, callback, separation) {\r\n  var nodes = [root];\r\n  var next = [];\r\n  var node;\r\n\r\n  while (node = nodes.pop()) {\r\n    // jshint ignore:line\r\n    next.push(node);\r\n\r\n    if (node.isExpand) {\r\n      var children = node.children;\r\n\r\n      if (children.length) {\r\n        for (var i = 0; i < children.length; i++) {\r\n          nodes.push(children[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  while (node = next.pop()) {\r\n    // jshint ignore:line\r\n    callback(node, separation);\r\n  }\r\n}\r\n/**\r\n * Traverse the tree from top to bottom and do something\r\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\r\n * @param  {Function} callback\r\n */\r\n\r\n\r\nfunction eachBefore(root, callback) {\r\n  var nodes = [root];\r\n  var node;\r\n\r\n  while (node = nodes.pop()) {\r\n    // jshint ignore:line\r\n    callback(node);\r\n\r\n    if (node.isExpand) {\r\n      var children = node.children;\r\n\r\n      if (children.length) {\r\n        for (var i = children.length - 1; i >= 0; i--) {\r\n          nodes.push(children[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexports.eachAfter = eachAfter;\r\nexports.eachBefore = eachBefore;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar _roamHelper = require(\"../../action/roamHelper\");\r\n\r\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerAction({\r\n  type: 'treeExpandAndCollapse',\r\n  event: 'treeExpandAndCollapse',\r\n  update: 'update'\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    subType: 'tree',\r\n    query: payload\r\n  }, function (seriesModel) {\r\n    var dataIndex = payload.dataIndex;\r\n    var tree = seriesModel.getData().tree;\r\n    var node = tree.getNodeByDataIndex(dataIndex);\r\n    node.isExpand = !node.isExpand;\r\n  });\r\n});\r\necharts.registerAction({\r\n  type: 'treeRoam',\r\n  event: 'treeRoam',\r\n  // Here we set 'none' instead of 'update', because roam action\r\n  // just need to update the transform matrix without having to recalculate\r\n  // the layout. So don't need to go through the whole update process, such\r\n  // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\r\n  update: 'none'\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    subType: 'tree',\r\n    query: payload\r\n  }, function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var res = updateCenterAndZoom(coordSys, payload);\r\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\r\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\r\n  });\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _traversalHelper = require(\"./traversalHelper\");\r\n\r\nvar eachAfter = _traversalHelper.eachAfter;\r\nvar eachBefore = _traversalHelper.eachBefore;\r\n\r\nvar _layoutHelper = require(\"./layoutHelper\");\r\n\r\nvar init = _layoutHelper.init;\r\nvar firstWalk = _layoutHelper.firstWalk;\r\nvar secondWalk = _layoutHelper.secondWalk;\r\nvar sep = _layoutHelper.separation;\r\nvar radialCoordinate = _layoutHelper.radialCoordinate;\r\nvar getViewRect = _layoutHelper.getViewRect;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel, api) {\r\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\r\n    commonLayout(seriesModel, api);\r\n  });\r\n}\r\n\r\nfunction commonLayout(seriesModel, api) {\r\n  var layoutInfo = getViewRect(seriesModel, api);\r\n  seriesModel.layoutInfo = layoutInfo;\r\n  var layout = seriesModel.get('layout');\r\n  var width = 0;\r\n  var height = 0;\r\n  var separation = null;\r\n\r\n  if (layout === 'radial') {\r\n    width = 2 * Math.PI;\r\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\r\n    separation = sep(function (node1, node2) {\r\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\r\n    });\r\n  } else {\r\n    width = layoutInfo.width;\r\n    height = layoutInfo.height;\r\n    separation = sep();\r\n  }\r\n\r\n  var virtualRoot = seriesModel.getData().tree.root;\r\n  var realRoot = virtualRoot.children[0];\r\n\r\n  if (realRoot) {\r\n    init(virtualRoot);\r\n    eachAfter(realRoot, firstWalk, separation);\r\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\r\n    eachBefore(realRoot, secondWalk);\r\n    var left = realRoot;\r\n    var right = realRoot;\r\n    var bottom = realRoot;\r\n    eachBefore(realRoot, function (node) {\r\n      var x = node.getLayout().x;\r\n\r\n      if (x < left.getLayout().x) {\r\n        left = node;\r\n      }\r\n\r\n      if (x > right.getLayout().x) {\r\n        right = node;\r\n      }\r\n\r\n      if (node.depth > bottom.depth) {\r\n        bottom = node;\r\n      }\r\n    });\r\n    var delta = left === right ? 1 : separation(left, right) / 2;\r\n    var tx = delta - left.getLayout().x;\r\n    var kx = 0;\r\n    var ky = 0;\r\n    var coorX = 0;\r\n    var coorY = 0;\r\n\r\n    if (layout === 'radial') {\r\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\r\n\r\n      ky = height / (bottom.depth - 1 || 1);\r\n      eachBefore(realRoot, function (node) {\r\n        coorX = (node.getLayout().x + tx) * kx;\r\n        coorY = (node.depth - 1) * ky;\r\n        var finalCoor = radialCoordinate(coorX, coorY);\r\n        node.setLayout({\r\n          x: finalCoor.x,\r\n          y: finalCoor.y,\r\n          rawX: coorX,\r\n          rawY: coorY\r\n        }, true);\r\n      });\r\n    } else {\r\n      var orient = seriesModel.getOrient();\r\n\r\n      if (orient === 'RL' || orient === 'LR') {\r\n        ky = height / (right.getLayout().x + delta + tx);\r\n        kx = width / (bottom.depth - 1 || 1);\r\n        eachBefore(realRoot, function (node) {\r\n          coorY = (node.getLayout().x + tx) * ky;\r\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\r\n          node.setLayout({\r\n            x: coorX,\r\n            y: coorY\r\n          }, true);\r\n        });\r\n      } else if (orient === 'TB' || orient === 'BT') {\r\n        kx = width / (right.getLayout().x + delta + tx);\r\n        ky = height / (bottom.depth - 1 || 1);\r\n        eachBefore(realRoot, function (node) {\r\n          coorX = (node.getLayout().x + tx) * kx;\r\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\r\n          node.setLayout({\r\n            x: coorX,\r\n            y: coorY\r\n          }, true);\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./treemap/TreemapSeries\");\r\n\r\nrequire(\"./treemap/TreemapView\");\r\n\r\nrequire(\"./treemap/treemapAction\");\r\n\r\nvar treemapVisual = require(\"./treemap/treemapVisual\");\r\n\r\nvar treemapLayout = require(\"./treemap/treemapLayout\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerVisual(treemapVisual);\r\necharts.registerLayout(treemapLayout);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _treeHelper = require(\"../helper/treeHelper\");\r\n\r\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar TEXT_PADDING = 8;\r\nvar ITEM_GAP = 8;\r\nvar ARRAY_LENGTH = 5;\r\n\r\nfunction Breadcrumb(containerGroup) {\r\n  /**\r\n   * @private\r\n   * @type {module:zrender/container/Group}\r\n   */\r\n  this.group = new graphic.Group();\r\n  containerGroup.add(this.group);\r\n}\r\n\r\nBreadcrumb.prototype = {\r\n  constructor: Breadcrumb,\r\n  render: function (seriesModel, api, targetNode, onSelect) {\r\n    var model = seriesModel.getModel('breadcrumb');\r\n    var thisGroup = this.group;\r\n    thisGroup.removeAll();\r\n\r\n    if (!model.get('show') || !targetNode) {\r\n      return;\r\n    }\r\n\r\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\r\n\r\n    var textStyleModel = normalStyleModel.getModel('textStyle');\r\n    var layoutParam = {\r\n      pos: {\r\n        left: model.get('left'),\r\n        right: model.get('right'),\r\n        top: model.get('top'),\r\n        bottom: model.get('bottom')\r\n      },\r\n      box: {\r\n        width: api.getWidth(),\r\n        height: api.getHeight()\r\n      },\r\n      emptyItemWidth: model.get('emptyItemWidth'),\r\n      totalWidth: 0,\r\n      renderList: []\r\n    };\r\n\r\n    this._prepare(targetNode, layoutParam, textStyleModel);\r\n\r\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\r\n\r\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\r\n  },\r\n\r\n  /**\r\n   * Prepare render list and total width\r\n   * @private\r\n   */\r\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\r\n    for (var node = targetNode; node; node = node.parentNode) {\r\n      var text = node.getModel().get('name');\r\n      var textRect = textStyleModel.getTextRect(text);\r\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\r\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\r\n      layoutParam.renderList.push({\r\n        node: node,\r\n        text: text,\r\n        width: itemWidth\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\r\n    // Start rendering.\r\n    var lastX = 0;\r\n    var emptyItemWidth = layoutParam.emptyItemWidth;\r\n    var height = seriesModel.get('breadcrumb.height');\r\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\r\n    var totalWidth = layoutParam.totalWidth;\r\n    var renderList = layoutParam.renderList;\r\n\r\n    for (var i = renderList.length - 1; i >= 0; i--) {\r\n      var item = renderList[i];\r\n      var itemNode = item.node;\r\n      var itemWidth = item.width;\r\n      var text = item.text; // Hdie text and shorten width if necessary.\r\n\r\n      if (totalWidth > availableSize.width) {\r\n        totalWidth -= itemWidth - emptyItemWidth;\r\n        itemWidth = emptyItemWidth;\r\n        text = null;\r\n      }\r\n\r\n      var el = new graphic.Polygon({\r\n        shape: {\r\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\r\n        },\r\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\r\n          lineJoin: 'bevel',\r\n          text: text,\r\n          textFill: textStyleModel.getTextColor(),\r\n          textFont: textStyleModel.getFont()\r\n        }),\r\n        z: 10,\r\n        onclick: zrUtil.curry(onSelect, itemNode)\r\n      });\r\n      this.group.add(el);\r\n      packEventData(el, seriesModel, itemNode);\r\n      lastX += itemWidth + ITEM_GAP;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  remove: function () {\r\n    this.group.removeAll();\r\n  }\r\n};\r\n\r\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\r\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\r\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\r\n  !head && points.push([x, y + itemHeight / 2]);\r\n  return points;\r\n} // Package custom mouse event.\r\n\r\n\r\nfunction packEventData(el, seriesModel, itemNode) {\r\n  el.eventData = {\r\n    componentType: 'series',\r\n    componentSubType: 'treemap',\r\n    componentIndex: seriesModel.componentIndex,\r\n    seriesIndex: seriesModel.componentIndex,\r\n    seriesName: seriesModel.name,\r\n    seriesType: 'treemap',\r\n    selfType: 'breadcrumb',\r\n    // Distinguish with click event on treemap node.\r\n    nodeData: {\r\n      dataIndex: itemNode && itemNode.dataIndex,\r\n      name: itemNode && itemNode.name\r\n    },\r\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\r\n  };\r\n}\r\n\r\nvar _default = Breadcrumb;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar Tree = require(\"../../data/Tree\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\nvar addCommas = _format.addCommas;\r\n\r\nvar _treeHelper = require(\"../helper/treeHelper\");\r\n\r\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = SeriesModel.extend({\r\n  type: 'series.treemap',\r\n  layoutMode: 'box',\r\n  dependencies: ['grid', 'polar'],\r\n  preventUsingHoverLayer: true,\r\n\r\n  /**\r\n   * @type {module:echarts/data/Tree~Node}\r\n   */\r\n  _viewRoot: null,\r\n  defaultOption: {\r\n    // Disable progressive rendering\r\n    progressive: 0,\r\n    // center: ['50%', '50%'],          // not supported in ec3.\r\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\r\n    left: 'center',\r\n    top: 'middle',\r\n    right: null,\r\n    bottom: null,\r\n    width: '80%',\r\n    height: '80%',\r\n    sort: true,\r\n    // Can be null or false or true\r\n    // (order by desc default, asc not supported yet (strange effect))\r\n    clipWindow: 'origin',\r\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\r\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\r\n    // golden ratio\r\n    leafDepth: null,\r\n    // Nodes on depth from root are regarded as leaves.\r\n    // Count from zero (zero represents only view root).\r\n    drillDownIcon: '▶',\r\n    // Use html character temporarily because it is complicated\r\n    // to align specialized icon. ▷▶❒❐▼✚\r\n    zoomToNodeRatio: 0.32 * 0.32,\r\n    // Be effective when using zoomToNode. Specify the proportion of the\r\n    // target node area in the view area.\r\n    roam: true,\r\n    // true, false, 'scale' or 'zoom', 'move'.\r\n    nodeClick: 'zoomToNode',\r\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\r\n    // If leafDepth is set and clicking a node which has children but\r\n    // be on left depth, the behaviour would be changing root. Otherwise\r\n    // use behavious defined above.\r\n    animation: true,\r\n    animationDurationUpdate: 900,\r\n    animationEasing: 'quinticInOut',\r\n    breadcrumb: {\r\n      show: true,\r\n      height: 22,\r\n      left: 'center',\r\n      top: 'bottom',\r\n      // right\r\n      // bottom\r\n      emptyItemWidth: 25,\r\n      // Width of empty node.\r\n      itemStyle: {\r\n        color: 'rgba(0,0,0,0.7)',\r\n        //'#5793f3',\r\n        borderColor: 'rgba(255,255,255,0.7)',\r\n        borderWidth: 1,\r\n        shadowColor: 'rgba(150,150,150,1)',\r\n        shadowBlur: 3,\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        textStyle: {\r\n          color: '#fff'\r\n        }\r\n      },\r\n      emphasis: {\r\n        textStyle: {}\r\n      }\r\n    },\r\n    label: {\r\n      show: true,\r\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\r\n      distance: 0,\r\n      padding: 5,\r\n      position: 'inside',\r\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\r\n      // formatter: null,\r\n      color: '#fff',\r\n      ellipsis: true // align\r\n      // verticalAlign\r\n\r\n    },\r\n    upperLabel: {\r\n      // Label when node is parent.\r\n      show: false,\r\n      position: [0, '50%'],\r\n      height: 20,\r\n      // formatter: null,\r\n      color: '#fff',\r\n      ellipsis: true,\r\n      // align: null,\r\n      verticalAlign: 'middle'\r\n    },\r\n    itemStyle: {\r\n      color: null,\r\n      // Can be 'none' if not necessary.\r\n      colorAlpha: null,\r\n      // Can be 'none' if not necessary.\r\n      colorSaturation: null,\r\n      // Can be 'none' if not necessary.\r\n      borderWidth: 0,\r\n      gapWidth: 0,\r\n      borderColor: '#fff',\r\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\r\n      // border color is evaluated by color of current node and\r\n      // borderColorSaturation.\r\n\r\n    },\r\n    emphasis: {\r\n      upperLabel: {\r\n        show: true,\r\n        position: [0, '50%'],\r\n        color: '#fff',\r\n        ellipsis: true,\r\n        verticalAlign: 'middle'\r\n      }\r\n    },\r\n    visualDimension: 0,\r\n    // Can be 0, 1, 2, 3.\r\n    visualMin: null,\r\n    visualMax: null,\r\n    color: [],\r\n    // + treemapSeries.color should not be modified. Please only modified\r\n    // level[n].color (if necessary).\r\n    // + Specify color list of each level. level[0].color would be global\r\n    // color list if not specified. (see method `setDefault`).\r\n    // + But set as a empty array to forbid fetch color from global palette\r\n    // when using nodeModel.get('color'), otherwise nodes on deep level\r\n    // will always has color palette set and are not able to inherit color\r\n    // from parent node.\r\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\r\n    // legend color fetching (see seriesColor.js).\r\n    colorAlpha: null,\r\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\r\n    colorSaturation: null,\r\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\r\n    colorMappingBy: 'index',\r\n    // 'value' or 'index' or 'id'.\r\n    visibleMin: 10,\r\n    // If area less than this threshold (unit: pixel^2), node will not\r\n    // be rendered. Only works when sort is 'asc' or 'desc'.\r\n    childrenVisibleMin: null,\r\n    // If area of a node less than this threshold (unit: pixel^2),\r\n    // grandchildren will not show.\r\n    // Why grandchildren? If not grandchildren but children,\r\n    // some siblings show children and some not,\r\n    // the appearance may be mess and not consistent,\r\n    levels: [] // Each item: {\r\n    //     visibleMin, itemStyle, visualDimension, label\r\n    // }\r\n    // data: {\r\n    //      value: [],\r\n    //      children: [],\r\n    //      link: 'http://xxx.xxx.xxx',\r\n    //      target: 'blank' or 'self'\r\n    // }\r\n\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getInitialData: function (option, ecModel) {\r\n    // Create a virtual root.\r\n    var root = {\r\n      name: option.name,\r\n      children: option.data\r\n    };\r\n    completeTreeValue(root);\r\n    var levels = option.levels || []; // Used in \"visual priority\" in `treemapVisual.js`.\r\n    // This way is a little tricky, must satisfy the precondition:\r\n    //   1. There is no `treeNode.getModel('itemStyle.xxx')` used.\r\n    //   2. The `Model.prototype.getModel()` will not use any clone-like way.\r\n\r\n    var designatedVisualItemStyle = this.designatedVisualItemStyle = {};\r\n    var designatedVisualModel = new Model({\r\n      itemStyle: designatedVisualItemStyle\r\n    }, this, ecModel);\r\n    levels = option.levels = setDefault(levels, ecModel);\r\n    var levelModels = zrUtil.map(levels || [], function (levelDefine) {\r\n      return new Model(levelDefine, designatedVisualModel, ecModel);\r\n    }, this); // Make sure always a new tree is created when setOption,\r\n    // in TreemapView, we check whether oldTree === newTree\r\n    // to choose mappings approach among old shapes and new shapes.\r\n\r\n    var tree = Tree.createTree(root, this, beforeLink);\r\n\r\n    function beforeLink(nodeData) {\r\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\r\n        var node = tree.getNodeByDataIndex(idx);\r\n        var levelModel = levelModels[node.depth]; // If no levelModel, we also need `designatedVisualModel`.\r\n\r\n        model.parentModel = levelModel || designatedVisualModel;\r\n        return model;\r\n      });\r\n    }\r\n\r\n    return tree.data;\r\n  },\r\n  optionUpdated: function () {\r\n    this.resetViewRoot();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   * @param {number} dataIndex\r\n   * @param {boolean} [mutipleSeries=false]\r\n   */\r\n  formatTooltip: function (dataIndex) {\r\n    var data = this.getData();\r\n    var value = this.getRawValue(dataIndex);\r\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\r\n    var name = data.getName(dataIndex);\r\n    return encodeHTML(name + ': ' + formattedValue);\r\n  },\r\n\r\n  /**\r\n   * Add tree path to tooltip param\r\n   *\r\n   * @override\r\n   * @param {number} dataIndex\r\n   * @return {Object}\r\n   */\r\n  getDataParams: function (dataIndex) {\r\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\r\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\r\n    params.treePathInfo = wrapTreePathInfo(node, this);\r\n    return params;\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @param {Object} layoutInfo {\r\n   *                                x: containerGroup x\r\n   *                                y: containerGroup y\r\n   *                                width: containerGroup width\r\n   *                                height: containerGroup height\r\n   *                            }\r\n   */\r\n  setLayoutInfo: function (layoutInfo) {\r\n    /**\r\n     * @readOnly\r\n     * @type {Object}\r\n     */\r\n    this.layoutInfo = this.layoutInfo || {};\r\n    zrUtil.extend(this.layoutInfo, layoutInfo);\r\n  },\r\n\r\n  /**\r\n   * @param  {string} id\r\n   * @return {number} index\r\n   */\r\n  mapIdToIndex: function (id) {\r\n    // A feature is implemented:\r\n    // index is monotone increasing with the sequence of\r\n    // input id at the first time.\r\n    // This feature can make sure that each data item and its\r\n    // mapped color have the same index between data list and\r\n    // color list at the beginning, which is useful for user\r\n    // to adjust data-color mapping.\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    var idIndexMap = this._idIndexMap;\r\n\r\n    if (!idIndexMap) {\r\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\r\n      /**\r\n       * @private\r\n       * @type {number}\r\n       */\r\n\r\n      this._idIndexMapCount = 0;\r\n    }\r\n\r\n    var index = idIndexMap.get(id);\r\n\r\n    if (index == null) {\r\n      idIndexMap.set(id, index = this._idIndexMapCount++);\r\n    }\r\n\r\n    return index;\r\n  },\r\n  getViewRoot: function () {\r\n    return this._viewRoot;\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\r\n   */\r\n  resetViewRoot: function (viewRoot) {\r\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\r\n    var root = this.getRawData().tree.root;\r\n\r\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\r\n      this._viewRoot = root;\r\n    }\r\n  }\r\n});\r\n/**\r\n * @param {Object} dataNode\r\n */\r\n\r\n\r\nfunction completeTreeValue(dataNode) {\r\n  // Postorder travel tree.\r\n  // If value of none-leaf node is not set,\r\n  // calculate it by suming up the value of all children.\r\n  var sum = 0;\r\n  zrUtil.each(dataNode.children, function (child) {\r\n    completeTreeValue(child);\r\n    var childValue = child.value;\r\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\r\n    sum += childValue;\r\n  });\r\n  var thisValue = dataNode.value;\r\n\r\n  if (zrUtil.isArray(thisValue)) {\r\n    thisValue = thisValue[0];\r\n  }\r\n\r\n  if (thisValue == null || isNaN(thisValue)) {\r\n    thisValue = sum;\r\n  } // Value should not less than 0.\r\n\r\n\r\n  if (thisValue < 0) {\r\n    thisValue = 0;\r\n  }\r\n\r\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\r\n}\r\n/**\r\n * set default to level configuration\r\n */\r\n\r\n\r\nfunction setDefault(levels, ecModel) {\r\n  var globalColorList = ecModel.get('color');\r\n\r\n  if (!globalColorList) {\r\n    return;\r\n  }\r\n\r\n  levels = levels || [];\r\n  var hasColorDefine;\r\n  zrUtil.each(levels, function (levelDefine) {\r\n    var model = new Model(levelDefine);\r\n    var modelColor = model.get('color');\r\n\r\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\r\n      hasColorDefine = true;\r\n    }\r\n  });\r\n\r\n  if (!hasColorDefine) {\r\n    var level0 = levels[0] || (levels[0] = {});\r\n    level0.color = globalColorList.slice();\r\n  }\r\n\r\n  return levels;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar DataDiffer = require(\"../../data/DataDiffer\");\r\n\r\nvar helper = require(\"../helper/treeHelper\");\r\n\r\nvar Breadcrumb = require(\"./Breadcrumb\");\r\n\r\nvar RoamController = require(\"../../component/helper/RoamController\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar animationUtil = require(\"../../util/animation\");\r\n\r\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar windowOpen = _format.windowOpen;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar bind = zrUtil.bind;\r\nvar Group = graphic.Group;\r\nvar Rect = graphic.Rect;\r\nvar each = zrUtil.each;\r\nvar DRAG_THRESHOLD = 3;\r\nvar PATH_LABEL_NOAMAL = ['label'];\r\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\r\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\r\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\r\nvar Z_BASE = 10; // Should bigger than every z.\r\n\r\nvar Z_BG = 1;\r\nvar Z_CONTENT = 2;\r\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\r\n// so use `stroke` to indicate the stroke of the rect.\r\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\r\n\r\nvar getItemStyleNormal = function (model) {\r\n  // Normal style props should include emphasis style props.\r\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\r\n\r\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\r\n  return itemStyle;\r\n};\r\n\r\nvar _default = echarts.extendChartView({\r\n  type: 'treemap',\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (o, api) {\r\n    /**\r\n     * @private\r\n     * @type {module:zrender/container/Group}\r\n     */\r\n    this._containerGroup;\r\n    /**\r\n     * @private\r\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\r\n     */\r\n\r\n    this._storage = createStorage();\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/data/Tree}\r\n     */\r\n\r\n    this._oldTree;\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/chart/treemap/Breadcrumb}\r\n     */\r\n\r\n    this._breadcrumb;\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/component/helper/RoamController}\r\n     */\r\n\r\n    this._controller;\r\n    /**\r\n     * 'ready', 'animating'\r\n     * @private\r\n     */\r\n\r\n    this._state = 'ready';\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (seriesModel, ecModel, api, payload) {\r\n    var models = ecModel.findComponents({\r\n      mainType: 'series',\r\n      subType: 'treemap',\r\n      query: payload\r\n    });\r\n\r\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\r\n      return;\r\n    }\r\n\r\n    this.seriesModel = seriesModel;\r\n    this.api = api;\r\n    this.ecModel = ecModel;\r\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\r\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\r\n    var payloadType = payload && payload.type;\r\n    var layoutInfo = seriesModel.layoutInfo;\r\n    var isInit = !this._oldTree;\r\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\r\n\r\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\r\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\r\n      direction: payload.direction\r\n    } : null;\r\n\r\n    var containerGroup = this._giveContainerGroup(layoutInfo);\r\n\r\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\r\n\r\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\r\n\r\n    this._resetController(api);\r\n\r\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _giveContainerGroup: function (layoutInfo) {\r\n    var containerGroup = this._containerGroup;\r\n\r\n    if (!containerGroup) {\r\n      // FIXME\r\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\r\n      containerGroup = this._containerGroup = new Group();\r\n\r\n      this._initEvents(containerGroup);\r\n\r\n      this.group.add(containerGroup);\r\n    }\r\n\r\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\r\n    return containerGroup;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _doRender: function (containerGroup, seriesModel, reRoot) {\r\n    var thisTree = seriesModel.getData().tree;\r\n    var oldTree = this._oldTree; // Clear last shape records.\r\n\r\n    var lastsForAnimation = createStorage();\r\n    var thisStorage = createStorage();\r\n    var oldStorage = this._storage;\r\n    var willInvisibleEls = [];\r\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\r\n    // the oldTree is actually losted, so we can not find all of the old graphic\r\n    // elements from tree. So we use this stragegy: make element storage, move\r\n    // from old storage to new storage, clear old storage.\r\n\r\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\r\n\r\n    var willDeleteEls = clearStorage(oldStorage);\r\n    this._oldTree = thisTree;\r\n    this._storage = thisStorage;\r\n    return {\r\n      lastsForAnimation: lastsForAnimation,\r\n      willDeleteEls: willDeleteEls,\r\n      renderFinally: renderFinally\r\n    };\r\n\r\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\r\n      // When 'render' is triggered by action,\r\n      // 'this' and 'old' may be the same tree,\r\n      // we use rawIndex in that case.\r\n      if (sameTree) {\r\n        oldViewChildren = thisViewChildren;\r\n        each(thisViewChildren, function (child, index) {\r\n          !child.isRemoved() && processNode(index, index);\r\n        });\r\n      } // Diff hierarchically (diff only in each subtree, but not whole).\r\n      // because, consistency of view is important.\r\n      else {\r\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\r\n        }\r\n\r\n      function getKey(node) {\r\n        // Identify by name or raw index.\r\n        return node.getId();\r\n      }\r\n\r\n      function processNode(newIndex, oldIndex) {\r\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\r\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\r\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\r\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\r\n      }\r\n    }\r\n\r\n    function clearStorage(storage) {\r\n      var willDeleteEls = createStorage();\r\n      storage && each(storage, function (store, storageName) {\r\n        var delEls = willDeleteEls[storageName];\r\n        each(store, function (el) {\r\n          el && (delEls.push(el), el.__tmWillDelete = 1);\r\n        });\r\n      });\r\n      return willDeleteEls;\r\n    }\r\n\r\n    function renderFinally() {\r\n      each(willDeleteEls, function (els) {\r\n        each(els, function (el) {\r\n          el.parent && el.parent.remove(el);\r\n        });\r\n      });\r\n      each(willInvisibleEls, function (el) {\r\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\r\n        // just mark as invisible.\r\n\r\n        el.dirty();\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\r\n    if (!seriesModel.get('animation')) {\r\n      return;\r\n    }\r\n\r\n    var duration = seriesModel.get('animationDurationUpdate');\r\n    var easing = seriesModel.get('animationEasing');\r\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\r\n\r\n    each(renderResult.willDeleteEls, function (store, storageName) {\r\n      each(store, function (el, rawIndex) {\r\n        if (el.invisible) {\r\n          return;\r\n        }\r\n\r\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\r\n\r\n        var target;\r\n\r\n        if (reRoot && reRoot.direction === 'drillDown') {\r\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\r\n          // Only `content` will enter this branch, because\r\n          // `background` and `nodeGroup` will not be deleted.\r\n          ? {\r\n            shape: {\r\n              x: 0,\r\n              y: 0,\r\n              width: parent.__tmNodeWidth,\r\n              height: parent.__tmNodeHeight\r\n            },\r\n            style: {\r\n              opacity: 0\r\n            } // Others.\r\n\r\n          } : {\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          };\r\n        } else {\r\n          var targetX = 0;\r\n          var targetY = 0;\r\n\r\n          if (!parent.__tmWillDelete) {\r\n            // Let node animate to right-bottom corner, cooperating with fadeout,\r\n            // which is appropriate for user understanding.\r\n            // Divided by 2 for reRoot rolling up effect.\r\n            targetX = parent.__tmNodeWidth / 2;\r\n            targetY = parent.__tmNodeHeight / 2;\r\n          }\r\n\r\n          target = storageName === 'nodeGroup' ? {\r\n            position: [targetX, targetY],\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          } : {\r\n            shape: {\r\n              x: targetX,\r\n              y: targetY,\r\n              width: 0,\r\n              height: 0\r\n            },\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          };\r\n        }\r\n\r\n        target && animationWrap.add(el, target, duration, easing);\r\n      });\r\n    }); // Make other animations\r\n\r\n    each(this._storage, function (store, storageName) {\r\n      each(store, function (el, rawIndex) {\r\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\r\n        var target = {};\r\n\r\n        if (!last) {\r\n          return;\r\n        }\r\n\r\n        if (storageName === 'nodeGroup') {\r\n          if (last.old) {\r\n            target.position = el.position.slice();\r\n            el.attr('position', last.old);\r\n          }\r\n        } else {\r\n          if (last.old) {\r\n            target.shape = zrUtil.extend({}, el.shape);\r\n            el.setShape(last.old);\r\n          }\r\n\r\n          if (last.fadein) {\r\n            el.setStyle('opacity', 0);\r\n            target.style = {\r\n              opacity: 1\r\n            };\r\n          } // When animation is stopped for succedent animation starting,\r\n          // el.style.opacity might not be 1\r\n          else if (el.style.opacity !== 1) {\r\n              target.style = {\r\n                opacity: 1\r\n              };\r\n            }\r\n        }\r\n\r\n        animationWrap.add(el, target, duration, easing);\r\n      });\r\n    }, this);\r\n    this._state = 'animating';\r\n    animationWrap.done(bind(function () {\r\n      this._state = 'ready';\r\n      renderResult.renderFinally();\r\n    }, this)).start();\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _resetController: function (api) {\r\n    var controller = this._controller; // Init controller.\r\n\r\n    if (!controller) {\r\n      controller = this._controller = new RoamController(api.getZr());\r\n      controller.enable(this.seriesModel.get('roam'));\r\n      controller.on('pan', bind(this._onPan, this));\r\n      controller.on('zoom', bind(this._onZoom, this));\r\n    }\r\n\r\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\r\n    controller.setPointerChecker(function (e, x, y) {\r\n      return rect.contain(x, y);\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearController: function () {\r\n    var controller = this._controller;\r\n\r\n    if (controller) {\r\n      controller.dispose();\r\n      controller = null;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _onPan: function (e) {\r\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\r\n      // These param must not be cached.\r\n      var root = this.seriesModel.getData().tree.root;\r\n\r\n      if (!root) {\r\n        return;\r\n      }\r\n\r\n      var rootLayout = root.getLayout();\r\n\r\n      if (!rootLayout) {\r\n        return;\r\n      }\r\n\r\n      this.api.dispatchAction({\r\n        type: 'treemapMove',\r\n        from: this.uid,\r\n        seriesId: this.seriesModel.id,\r\n        rootRect: {\r\n          x: rootLayout.x + e.dx,\r\n          y: rootLayout.y + e.dy,\r\n          width: rootLayout.width,\r\n          height: rootLayout.height\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _onZoom: function (e) {\r\n    var mouseX = e.originX;\r\n    var mouseY = e.originY;\r\n\r\n    if (this._state !== 'animating') {\r\n      // These param must not be cached.\r\n      var root = this.seriesModel.getData().tree.root;\r\n\r\n      if (!root) {\r\n        return;\r\n      }\r\n\r\n      var rootLayout = root.getLayout();\r\n\r\n      if (!rootLayout) {\r\n        return;\r\n      }\r\n\r\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\r\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\r\n\r\n      mouseX -= layoutInfo.x;\r\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\r\n\r\n      var m = matrix.create();\r\n      matrix.translate(m, m, [-mouseX, -mouseY]);\r\n      matrix.scale(m, m, [e.scale, e.scale]);\r\n      matrix.translate(m, m, [mouseX, mouseY]);\r\n      rect.applyTransform(m);\r\n      this.api.dispatchAction({\r\n        type: 'treemapRender',\r\n        from: this.uid,\r\n        seriesId: this.seriesModel.id,\r\n        rootRect: {\r\n          x: rect.x,\r\n          y: rect.y,\r\n          width: rect.width,\r\n          height: rect.height\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _initEvents: function (containerGroup) {\r\n    containerGroup.on('click', function (e) {\r\n      if (this._state !== 'ready') {\r\n        return;\r\n      }\r\n\r\n      var nodeClick = this.seriesModel.get('nodeClick', true);\r\n\r\n      if (!nodeClick) {\r\n        return;\r\n      }\r\n\r\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\r\n\r\n      if (!targetInfo) {\r\n        return;\r\n      }\r\n\r\n      var node = targetInfo.node;\r\n\r\n      if (node.getLayout().isLeafRoot) {\r\n        this._rootToNode(targetInfo);\r\n      } else {\r\n        if (nodeClick === 'zoomToNode') {\r\n          this._zoomToNode(targetInfo);\r\n        } else if (nodeClick === 'link') {\r\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\r\n          var link = itemModel.get('link', true);\r\n          var linkTarget = itemModel.get('target', true) || 'blank';\r\n          link && windowOpen(link, linkTarget);\r\n        }\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\r\n    if (!targetInfo) {\r\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\r\n        node: seriesModel.getViewRoot() // FIXME\r\n        // better way?\r\n        // Find breadcrumb tail on center of containerGroup.\r\n\r\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\r\n\r\n      if (!targetInfo) {\r\n        targetInfo = {\r\n          node: seriesModel.getData().tree.root\r\n        };\r\n      }\r\n    }\r\n\r\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\r\n\r\n    function onSelect(node) {\r\n      if (this._state !== 'animating') {\r\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\r\n          node: node\r\n        }) : this._zoomToNode({\r\n          node: node\r\n        });\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  remove: function () {\r\n    this._clearController();\r\n\r\n    this._containerGroup && this._containerGroup.removeAll();\r\n    this._storage = createStorage();\r\n    this._state = 'ready';\r\n    this._breadcrumb && this._breadcrumb.remove();\r\n  },\r\n  dispose: function () {\r\n    this._clearController();\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _zoomToNode: function (targetInfo) {\r\n    this.api.dispatchAction({\r\n      type: 'treemapZoomToNode',\r\n      from: this.uid,\r\n      seriesId: this.seriesModel.id,\r\n      targetNode: targetInfo.node\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rootToNode: function (targetInfo) {\r\n    this.api.dispatchAction({\r\n      type: 'treemapRootToNode',\r\n      from: this.uid,\r\n      seriesId: this.seriesModel.id,\r\n      targetNode: targetInfo.node\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @param {number} x Global coord x.\r\n   * @param {number} y Global coord y.\r\n   * @return {Object} info If not found, return undefined;\r\n   * @return {number} info.node Target node.\r\n   * @return {number} info.offsetX x refer to target node.\r\n   * @return {number} info.offsetY y refer to target node.\r\n   */\r\n  findTarget: function (x, y) {\r\n    var targetInfo;\r\n    var viewRoot = this.seriesModel.getViewRoot();\r\n    viewRoot.eachNode({\r\n      attr: 'viewChildren',\r\n      order: 'preorder'\r\n    }, function (node) {\r\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\r\n\r\n\r\n      if (bgEl) {\r\n        var point = bgEl.transformCoordToLocal(x, y);\r\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\r\n\r\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\r\n          targetInfo = {\r\n            node: node,\r\n            offsetX: point[0],\r\n            offsetY: point[1]\r\n          };\r\n        } else {\r\n          return false; // Suppress visit subtree.\r\n        }\r\n      }\r\n    }, this);\r\n    return targetInfo;\r\n  }\r\n});\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction createStorage() {\r\n  return {\r\n    nodeGroup: [],\r\n    background: [],\r\n    content: []\r\n  };\r\n}\r\n/**\r\n * @inner\r\n * @return Return undefined means do not travel further.\r\n */\r\n\r\n\r\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\r\n  // Whether under viewRoot.\r\n  if (!thisNode) {\r\n    // Deleting nodes will be performed finally. This method just find\r\n    // element from old storage, or create new element, set them to new\r\n    // storage, and set styles.\r\n    return;\r\n  } // -------------------------------------------------------------------\r\n  // Start of closure variables available in \"Procedures in renderNode\".\r\n\r\n\r\n  var thisLayout = thisNode.getLayout();\r\n  var data = seriesModel.getData(); // Only for enabling highlight/downplay. Clear firstly.\r\n  // Because some node will not be rendered.\r\n\r\n  data.setItemGraphicEl(thisNode.dataIndex, null);\r\n\r\n  if (!thisLayout || !thisLayout.isInView) {\r\n    return;\r\n  }\r\n\r\n  var thisWidth = thisLayout.width;\r\n  var thisHeight = thisLayout.height;\r\n  var borderWidth = thisLayout.borderWidth;\r\n  var thisInvisible = thisLayout.invisible;\r\n  var thisRawIndex = thisNode.getRawIndex();\r\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\r\n  var thisViewChildren = thisNode.viewChildren;\r\n  var upperHeight = thisLayout.upperHeight;\r\n  var isParent = thisViewChildren && thisViewChildren.length;\r\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\r\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\r\n  // -----------------------------------------------------------------\r\n  // Node group\r\n\r\n  var group = giveGraphic('nodeGroup', Group);\r\n\r\n  if (!group) {\r\n    return;\r\n  }\r\n\r\n  parentGroup.add(group); // x,y are not set when el is above view root.\r\n\r\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\r\n  group.__tmNodeWidth = thisWidth;\r\n  group.__tmNodeHeight = thisHeight;\r\n\r\n  if (thisLayout.isAboveViewRoot) {\r\n    return group;\r\n  }\r\n\r\n  var nodeModel = thisNode.getModel(); // Background\r\n\r\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\r\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight); // No children, render content.\r\n\r\n  if (isParent) {\r\n    // Because of the implementation about \"traverse\" in graphic hover style, we\r\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\r\n    // hover event from the descendents will be listenered.\r\n    if (graphic.isHighDownDispatcher(group)) {\r\n      graphic.setAsHighDownDispatcher(group, false);\r\n    }\r\n\r\n    if (bg) {\r\n      graphic.setAsHighDownDispatcher(bg, true); // Only for enabling highlight/downplay.\r\n\r\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\r\n    }\r\n  } else {\r\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\r\n    content && renderContent(group, content);\r\n\r\n    if (bg && graphic.isHighDownDispatcher(bg)) {\r\n      graphic.setAsHighDownDispatcher(bg, false);\r\n    }\r\n\r\n    graphic.setAsHighDownDispatcher(group, true); // Only for enabling highlight/downplay.\r\n\r\n    data.setItemGraphicEl(thisNode.dataIndex, group);\r\n  }\r\n\r\n  return group; // ----------------------------\r\n  // | Procedures in renderNode |\r\n  // ----------------------------\r\n\r\n  function renderBackground(group, bg, useUpperLabel) {\r\n    // For tooltip.\r\n    bg.dataIndex = thisNode.dataIndex;\r\n    bg.seriesIndex = seriesModel.seriesIndex;\r\n    bg.setShape({\r\n      x: 0,\r\n      y: 0,\r\n      width: thisWidth,\r\n      height: thisHeight\r\n    });\r\n\r\n    if (thisInvisible) {\r\n      // If invisible, do not set visual, otherwise the element will\r\n      // change immediately before animation. We think it is OK to\r\n      // remain its origin color when moving out of the view window.\r\n      processInvisible(bg);\r\n    } else {\r\n      bg.invisible = false;\r\n      var visualBorderColor = thisNode.getVisual('borderColor', true);\r\n      var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\r\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\r\n      normalStyle.fill = visualBorderColor;\r\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\r\n      emphasisStyle.fill = emphasisBorderColor;\r\n\r\n      if (useUpperLabel) {\r\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\r\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\r\n          x: borderWidth,\r\n          y: 0,\r\n          width: upperLabelWidth,\r\n          height: upperHeight\r\n        });\r\n      } // For old bg.\r\n      else {\r\n          normalStyle.text = emphasisStyle.text = null;\r\n        }\r\n\r\n      bg.setStyle(normalStyle);\r\n      graphic.setElementHoverStyle(bg, emphasisStyle);\r\n    }\r\n\r\n    group.add(bg);\r\n  }\r\n\r\n  function renderContent(group, content) {\r\n    // For tooltip.\r\n    content.dataIndex = thisNode.dataIndex;\r\n    content.seriesIndex = seriesModel.seriesIndex;\r\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\r\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\r\n    content.culling = true;\r\n    content.setShape({\r\n      x: borderWidth,\r\n      y: borderWidth,\r\n      width: contentWidth,\r\n      height: contentHeight\r\n    });\r\n\r\n    if (thisInvisible) {\r\n      // If invisible, do not set visual, otherwise the element will\r\n      // change immediately before animation. We think it is OK to\r\n      // remain its origin color when moving out of the view window.\r\n      processInvisible(content);\r\n    } else {\r\n      content.invisible = false;\r\n      var visualColor = thisNode.getVisual('color', true);\r\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\r\n      normalStyle.fill = visualColor;\r\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\r\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\r\n      content.setStyle(normalStyle);\r\n      graphic.setElementHoverStyle(content, emphasisStyle);\r\n    }\r\n\r\n    group.add(content);\r\n  }\r\n\r\n  function processInvisible(element) {\r\n    // Delay invisible setting utill animation finished,\r\n    // avoid element vanish suddenly before animation.\r\n    !element.invisible && willInvisibleEls.push(element);\r\n  }\r\n\r\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\r\n    var defaultText = nodeModel.get('name');\r\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\r\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\r\n    var isShow = normalLabelModel.getShallow('show');\r\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\r\n      defaultText: isShow ? defaultText : null,\r\n      autoColor: visualColor,\r\n      isRectText: true,\r\n      labelFetcher: seriesModel,\r\n      labelDataIndex: thisNode.dataIndex,\r\n      labelProp: upperLabelRect ? 'upperLabel' : 'label'\r\n    });\r\n    addDrillDownIcon(normalStyle, upperLabelRect, thisLayout);\r\n    addDrillDownIcon(emphasisStyle, upperLabelRect, thisLayout);\r\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\r\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      minChar: 2\r\n    } : null;\r\n  }\r\n\r\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\r\n    var text = style.text;\r\n\r\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\r\n      var iconChar = seriesModel.get('drillDownIcon', true);\r\n      style.text = iconChar ? iconChar + ' ' + text : text;\r\n    }\r\n  }\r\n\r\n  function giveGraphic(storageName, Ctor, depth, z) {\r\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\r\n    var lasts = lastsForAnimation[storageName];\r\n\r\n    if (element) {\r\n      // Remove from oldStorage\r\n      oldStorage[storageName][oldRawIndex] = null;\r\n      prepareAnimationWhenHasOld(lasts, element, storageName);\r\n    } // If invisible and no old element, do not create new element (for optimizing).\r\n    else if (!thisInvisible) {\r\n        element = new Ctor({\r\n          z: calculateZ(depth, z)\r\n        });\r\n        element.__tmDepth = depth;\r\n        element.__tmStorageName = storageName;\r\n        prepareAnimationWhenNoOld(lasts, element, storageName);\r\n      } // Set to thisStorage\r\n\r\n\r\n    return thisStorage[storageName][thisRawIndex] = element;\r\n  }\r\n\r\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\r\n    var lastCfg = lasts[thisRawIndex] = {};\r\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\r\n  } // If a element is new, we need to find the animation start point carefully,\r\n  // otherwise it will looks strange when 'zoomToNode'.\r\n\r\n\r\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\r\n    var lastCfg = lasts[thisRawIndex] = {};\r\n    var parentNode = thisNode.parentNode;\r\n\r\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\r\n      var parentOldX = 0;\r\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\r\n      // For convenience, get old bounding rect from background.\r\n\r\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\r\n\r\n      if (!reRoot && parentOldBg && parentOldBg.old) {\r\n        parentOldX = parentOldBg.old.width;\r\n        parentOldY = parentOldBg.old.height;\r\n      } // When no parent old shape found, its parent is new too,\r\n      // so we can just use {x:0, y:0}.\r\n\r\n\r\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\r\n        x: parentOldX,\r\n        y: parentOldY,\r\n        width: 0,\r\n        height: 0\r\n      };\r\n    } // Fade in, user can be aware that these nodes are new.\r\n\r\n\r\n    lastCfg.fadein = storageName !== 'nodeGroup';\r\n  }\r\n} // We can not set all backgroud with the same z, Because the behaviour of\r\n// drill down and roll up differ background creation sequence from tree\r\n// hierarchy sequence, which cause that lowser background element overlap\r\n// upper ones. So we calculate z based on depth.\r\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\r\n// treemap with large z overlaps other components.\r\n\r\n\r\nfunction calculateZ(depth, zInLevel) {\r\n  var zb = depth * Z_BASE + zInLevel;\r\n  return (zb - 1) / zb;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar helper = require(\"../helper/treeHelper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @file Treemap action\r\n */\r\nvar noop = function () {};\r\n\r\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\r\n\r\nfor (var i = 0; i < actionTypes.length; i++) {\r\n  echarts.registerAction({\r\n    type: actionTypes[i],\r\n    update: 'updateView'\r\n  }, noop);\r\n}\r\n\r\necharts.registerAction({\r\n  type: 'treemapRootToNode',\r\n  update: 'updateView'\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    subType: 'treemap',\r\n    query: payload\r\n  }, handleRootToNode);\r\n\r\n  function handleRootToNode(model, index) {\r\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\r\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\r\n\r\n    if (targetInfo) {\r\n      var originViewRoot = model.getViewRoot();\r\n\r\n      if (originViewRoot) {\r\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\r\n      }\r\n\r\n      model.resetViewRoot(targetInfo.node);\r\n    }\r\n  }\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar helper = require(\"../helper/treeHelper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* A third-party license is embeded for some of the code in this file:\r\n* The treemap layout implementation was originally copied from\r\n* \"d3.js\" with some modifications made for this project.\r\n* (See more details in the comment of the method \"squarify\" below.)\r\n* The use of the source code of this file is also subject to the terms\r\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n* </licenses/LICENSE-d3>).\r\n*/\r\nvar mathMax = Math.max;\r\nvar mathMin = Math.min;\r\nvar retrieveValue = zrUtil.retrieve;\r\nvar each = zrUtil.each;\r\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\r\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\r\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\r\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\r\n/**\r\n * @public\r\n */\r\n\r\nvar _default = {\r\n  seriesType: 'treemap',\r\n  reset: function (seriesModel, ecModel, api, payload) {\r\n    // Layout result in each node:\r\n    // {x, y, width, height, area, borderWidth}\r\n    var ecWidth = api.getWidth();\r\n    var ecHeight = api.getHeight();\r\n    var seriesOption = seriesModel.option;\r\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n    var size = seriesOption.size || []; // Compatible with ec2.\r\n\r\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\r\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\r\n\r\n    var payloadType = payload && payload.type;\r\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\r\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\r\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\r\n    var viewRoot = seriesModel.getViewRoot();\r\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\r\n\r\n    if (payloadType !== 'treemapMove') {\r\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\r\n      var sort = seriesOption.sort;\r\n\r\n      if (sort && sort !== 'asc' && sort !== 'desc') {\r\n        sort = 'desc';\r\n      }\r\n\r\n      var options = {\r\n        squareRatio: seriesOption.squareRatio,\r\n        sort: sort,\r\n        leafDepth: seriesOption.leafDepth\r\n      }; // layout should be cleared because using updateView but not update.\r\n\r\n      viewRoot.hostTree.clearLayouts(); // TODO\r\n      // optimize: if out of view clip, do not layout.\r\n      // But take care that if do not render node out of view clip,\r\n      // how to calculate start po\r\n\r\n      var viewRootLayout = {\r\n        x: 0,\r\n        y: 0,\r\n        width: rootSize[0],\r\n        height: rootSize[1],\r\n        area: rootSize[0] * rootSize[1]\r\n      };\r\n      viewRoot.setLayout(viewRootLayout);\r\n      squarify(viewRoot, options, false, 0); // Supplement layout.\r\n\r\n      var viewRootLayout = viewRoot.getLayout();\r\n      each(viewAbovePath, function (node, index) {\r\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\r\n        node.setLayout(zrUtil.extend({\r\n          dataExtent: [childValue, childValue],\r\n          borderWidth: 0,\r\n          upperHeight: 0\r\n        }, viewRootLayout));\r\n      });\r\n    }\r\n\r\n    var treeRoot = seriesModel.getData().tree.root;\r\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\r\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\r\n    // 现在没有clip功能，暂时取ec高宽。\r\n\r\n    prunning(treeRoot, // Transform to base element coordinate system.\r\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\r\n  }\r\n};\r\n/**\r\n * Layout treemap with squarify algorithm.\r\n * The original presentation of this algorithm\r\n * was made by Mark Bruls, Kees Huizing, and Jarke J. van Wijk\r\n * <https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf>.\r\n * The implementation of this algorithm was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/layout/treemap.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * @protected\r\n * @param {module:echarts/data/Tree~TreeNode} node\r\n * @param {Object} options\r\n * @param {string} options.sort 'asc' or 'desc'\r\n * @param {number} options.squareRatio\r\n * @param {boolean} hideChildren\r\n * @param {number} depth\r\n */\r\n\r\nfunction squarify(node, options, hideChildren, depth) {\r\n  var width;\r\n  var height;\r\n\r\n  if (node.isRemoved()) {\r\n    return;\r\n  }\r\n\r\n  var thisLayout = node.getLayout();\r\n  width = thisLayout.width;\r\n  height = thisLayout.height; // Considering border and gap\r\n\r\n  var nodeModel = node.getModel();\r\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\r\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\r\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\r\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\r\n  var layoutOffset = borderWidth - halfGapWidth;\r\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\r\n  var nodeModel = node.getModel();\r\n  node.setLayout({\r\n    borderWidth: borderWidth,\r\n    upperHeight: upperHeight,\r\n    upperLabelHeight: upperLabelHeight\r\n  }, true);\r\n  width = mathMax(width - 2 * layoutOffset, 0);\r\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\r\n  var totalArea = width * height;\r\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\r\n\r\n  if (!viewChildren.length) {\r\n    return;\r\n  }\r\n\r\n  var rect = {\r\n    x: layoutOffset,\r\n    y: layoutOffsetUpper,\r\n    width: width,\r\n    height: height\r\n  };\r\n  var rowFixedLength = mathMin(width, height);\r\n  var best = Infinity; // the best row score so far\r\n\r\n  var row = [];\r\n  row.area = 0;\r\n\r\n  for (var i = 0, len = viewChildren.length; i < len;) {\r\n    var child = viewChildren[i];\r\n    row.push(child);\r\n    row.area += child.getLayout().area;\r\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\r\n\r\n    if (score <= best) {\r\n      i++;\r\n      best = score;\r\n    } // abort, and try a different orientation\r\n    else {\r\n        row.area -= row.pop().getLayout().area;\r\n        position(row, rowFixedLength, rect, halfGapWidth, false);\r\n        rowFixedLength = mathMin(rect.width, rect.height);\r\n        row.length = row.area = 0;\r\n        best = Infinity;\r\n      }\r\n  }\r\n\r\n  if (row.length) {\r\n    position(row, rowFixedLength, rect, halfGapWidth, true);\r\n  }\r\n\r\n  if (!hideChildren) {\r\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\r\n\r\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\r\n      hideChildren = true;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\r\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\r\n  }\r\n}\r\n/**\r\n * Set area to each child, and calculate data extent for visual coding.\r\n */\r\n\r\n\r\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\r\n  var viewChildren = node.children || [];\r\n  var orderBy = options.sort;\r\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\r\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\r\n\r\n  if (hideChildren && !overLeafDepth) {\r\n    return node.viewChildren = [];\r\n  } // Sort children, order by desc.\r\n\r\n\r\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\r\n    return !child.isRemoved();\r\n  });\r\n  sort(viewChildren, orderBy);\r\n  var info = statistic(nodeModel, viewChildren, orderBy);\r\n\r\n  if (info.sum === 0) {\r\n    return node.viewChildren = [];\r\n  }\r\n\r\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\r\n\r\n  if (info.sum === 0) {\r\n    return node.viewChildren = [];\r\n  } // Set area to each child.\r\n\r\n\r\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\r\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\r\n\r\n    viewChildren[i].setLayout({\r\n      area: area\r\n    });\r\n  }\r\n\r\n  if (overLeafDepth) {\r\n    viewChildren.length && node.setLayout({\r\n      isLeafRoot: true\r\n    }, true);\r\n    viewChildren.length = 0;\r\n  }\r\n\r\n  node.viewChildren = viewChildren;\r\n  node.setLayout({\r\n    dataExtent: info.dataExtent\r\n  }, true);\r\n  return viewChildren;\r\n}\r\n/**\r\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\r\n */\r\n\r\n\r\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\r\n  // visibleMin is not supported yet when no option.sort.\r\n  if (!orderBy) {\r\n    return sum;\r\n  }\r\n\r\n  var visibleMin = nodeModel.get('visibleMin');\r\n  var len = orderedChildren.length;\r\n  var deletePoint = len; // Always travel from little value to big value.\r\n\r\n  for (var i = len - 1; i >= 0; i--) {\r\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\r\n\r\n    if (value / sum * totalArea < visibleMin) {\r\n      deletePoint = i;\r\n      sum -= value;\r\n    }\r\n  }\r\n\r\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\r\n  return sum;\r\n}\r\n/**\r\n * Sort\r\n */\r\n\r\n\r\nfunction sort(viewChildren, orderBy) {\r\n  if (orderBy) {\r\n    viewChildren.sort(function (a, b) {\r\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\r\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\r\n    });\r\n  }\r\n\r\n  return viewChildren;\r\n}\r\n/**\r\n * Statistic\r\n */\r\n\r\n\r\nfunction statistic(nodeModel, children, orderBy) {\r\n  // Calculate sum.\r\n  var sum = 0;\r\n\r\n  for (var i = 0, len = children.length; i < len; i++) {\r\n    sum += children[i].getValue();\r\n  } // Statistic data extent for latter visual coding.\r\n  // Notice: data extent should be calculate based on raw children\r\n  // but not filtered view children, otherwise visual mapping will not\r\n  // be stable when zoom (where children is filtered by visibleMin).\r\n\r\n\r\n  var dimension = nodeModel.get('visualDimension');\r\n  var dataExtent; // The same as area dimension.\r\n\r\n  if (!children || !children.length) {\r\n    dataExtent = [NaN, NaN];\r\n  } else if (dimension === 'value' && orderBy) {\r\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\r\n    orderBy === 'asc' && dataExtent.reverse();\r\n  } // Other dimension.\r\n  else {\r\n      var dataExtent = [Infinity, -Infinity];\r\n      each(children, function (child) {\r\n        var value = child.getValue(dimension);\r\n        value < dataExtent[0] && (dataExtent[0] = value);\r\n        value > dataExtent[1] && (dataExtent[1] = value);\r\n      });\r\n    }\r\n\r\n  return {\r\n    sum: sum,\r\n    dataExtent: dataExtent\r\n  };\r\n}\r\n/**\r\n * Computes the score for the specified row,\r\n * as the worst aspect ratio.\r\n */\r\n\r\n\r\nfunction worst(row, rowFixedLength, ratio) {\r\n  var areaMax = 0;\r\n  var areaMin = Infinity;\r\n\r\n  for (var i = 0, area, len = row.length; i < len; i++) {\r\n    area = row[i].getLayout().area;\r\n\r\n    if (area) {\r\n      area < areaMin && (areaMin = area);\r\n      area > areaMax && (areaMax = area);\r\n    }\r\n  }\r\n\r\n  var squareArea = row.area * row.area;\r\n  var f = rowFixedLength * rowFixedLength * ratio;\r\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\r\n}\r\n/**\r\n * Positions the specified row of nodes. Modifies `rect`.\r\n */\r\n\r\n\r\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\r\n  // When rowFixedLength === rect.width,\r\n  // it is horizontal subdivision,\r\n  // rowFixedLength is the width of the subdivision,\r\n  // rowOtherLength is the height of the subdivision,\r\n  // and nodes will be positioned from left to right.\r\n  // wh[idx0WhenH] means: when horizontal,\r\n  //      wh[idx0WhenH] => wh[0] => 'width'.\r\n  //      xy[idx1WhenH] => xy[1] => 'y'.\r\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\r\n  var idx1WhenH = 1 - idx0WhenH;\r\n  var xy = ['x', 'y'];\r\n  var wh = ['width', 'height'];\r\n  var last = rect[xy[idx0WhenH]];\r\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\r\n\r\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\r\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\r\n  }\r\n\r\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\r\n    var node = row[i];\r\n    var nodeLayout = {};\r\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\r\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\r\n\r\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\r\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\r\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\r\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\r\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\r\n    last += modWH;\r\n    node.setLayout(nodeLayout, true);\r\n  }\r\n\r\n  rect[xy[idx1WhenH]] += rowOtherLength;\r\n  rect[wh[idx1WhenH]] -= rowOtherLength;\r\n} // Return [containerWidth, containerHeight] as default.\r\n\r\n\r\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\r\n  // If targetInfo.node exists, we zoom to the node,\r\n  // so estimate whold width and heigth by target node.\r\n  var currNode = (targetInfo || {}).node;\r\n  var defaultSize = [containerWidth, containerHeight];\r\n\r\n  if (!currNode || currNode === viewRoot) {\r\n    return defaultSize;\r\n  }\r\n\r\n  var parent;\r\n  var viewArea = containerWidth * containerHeight;\r\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\r\n\r\n  while (parent = currNode.parentNode) {\r\n    // jshint ignore:line\r\n    var sum = 0;\r\n    var siblings = parent.children;\r\n\r\n    for (var i = 0, len = siblings.length; i < len; i++) {\r\n      sum += siblings[i].getValue();\r\n    }\r\n\r\n    var currNodeValue = currNode.getValue();\r\n\r\n    if (currNodeValue === 0) {\r\n      return defaultSize;\r\n    }\r\n\r\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\r\n\r\n    var parentModel = parent.getModel();\r\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\r\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\r\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\r\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\r\n    currNode = parent;\r\n  }\r\n\r\n  area < viewArea && (area = viewArea);\r\n  var scale = Math.pow(area / viewArea, 0.5);\r\n  return [containerWidth * scale, containerHeight * scale];\r\n} // Root postion base on coord of containerGroup\r\n\r\n\r\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\r\n  if (rootRect) {\r\n    return {\r\n      x: rootRect.x,\r\n      y: rootRect.y\r\n    };\r\n  }\r\n\r\n  var defaultPosition = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  if (!targetInfo) {\r\n    return defaultPosition;\r\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\r\n  // old tree and new tree are the same tree,\r\n  // so the node still exists and we can visit it.\r\n\r\n\r\n  var targetNode = targetInfo.node;\r\n  var layout = targetNode.getLayout();\r\n\r\n  if (!layout) {\r\n    return defaultPosition;\r\n  } // Transform coord from local to container.\r\n\r\n\r\n  var targetCenter = [layout.width / 2, layout.height / 2];\r\n  var node = targetNode;\r\n\r\n  while (node) {\r\n    var nodeLayout = node.getLayout();\r\n    targetCenter[0] += nodeLayout.x;\r\n    targetCenter[1] += nodeLayout.y;\r\n    node = node.parentNode;\r\n  }\r\n\r\n  return {\r\n    x: layoutInfo.width / 2 - targetCenter[0],\r\n    y: layoutInfo.height / 2 - targetCenter[1]\r\n  };\r\n} // Mark nodes visible for prunning when visual coding and rendering.\r\n// Prunning depends on layout and root position, so we have to do it after layout.\r\n\r\n\r\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\r\n  var nodeLayout = node.getLayout();\r\n  var nodeInViewAbovePath = viewAbovePath[depth];\r\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\r\n\r\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\r\n    return;\r\n  }\r\n\r\n  node.setLayout({\r\n    // isInView means: viewRoot sub tree + viewAbovePath\r\n    isInView: true,\r\n    // invisible only means: outside view clip so that the node can not\r\n    // see but still layout for animation preparation but not render.\r\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\r\n    isAboveViewRoot: isAboveViewRoot\r\n  }, true); // Transform to child coordinate.\r\n\r\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\r\n  each(node.viewChildren || [], function (child) {\r\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\r\n  });\r\n}\r\n\r\nfunction getUpperLabelHeight(model) {\r\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar VisualMapping = require(\"../../visual/VisualMapping\");\r\n\r\nvar zrColor = require(\"zrender/lib/tool/color\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar isArray = zrUtil.isArray;\r\nvar ITEM_STYLE_NORMAL = 'itemStyle';\r\nvar _default = {\r\n  seriesType: 'treemap',\r\n  reset: function (seriesModel, ecModel, api, payload) {\r\n    var tree = seriesModel.getData().tree;\r\n    var root = tree.root;\r\n\r\n    if (root.isRemoved()) {\r\n      return;\r\n    }\r\n\r\n    travelTree(root, // Visual should calculate from tree root but not view root.\r\n    {}, seriesModel.getViewRoot().getAncestors(), seriesModel);\r\n  }\r\n};\r\n\r\nfunction travelTree(node, designatedVisual, viewRootAncestors, seriesModel) {\r\n  var nodeModel = node.getModel();\r\n  var nodeLayout = node.getLayout(); // Optimize\r\n\r\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\r\n    return;\r\n  }\r\n\r\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\r\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel); // calculate border color\r\n\r\n  var borderColor = nodeItemStyleModel.get('borderColor');\r\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\r\n  var thisNodeColor;\r\n\r\n  if (borderColorSaturation != null) {\r\n    // For performance, do not always execute 'calculateColor'.\r\n    thisNodeColor = calculateColor(visuals, node);\r\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\r\n  }\r\n\r\n  node.setVisual('borderColor', borderColor);\r\n  var viewChildren = node.viewChildren;\r\n\r\n  if (!viewChildren || !viewChildren.length) {\r\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\r\n\r\n    node.setVisual('color', thisNodeColor);\r\n  } else {\r\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\r\n\r\n    zrUtil.each(viewChildren, function (child, index) {\r\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\r\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\r\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\r\n        travelTree(child, childVisual, viewRootAncestors, seriesModel);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel) {\r\n  var visuals = zrUtil.extend({}, designatedVisual);\r\n  var designatedVisualItemStyle = seriesModel.designatedVisualItemStyle;\r\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\r\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\r\n    designatedVisualItemStyle[visualName] = designatedVisual[visualName];\r\n    var val = nodeItemStyleModel.get(visualName);\r\n    designatedVisualItemStyle[visualName] = null;\r\n    val != null && (visuals[visualName] = val);\r\n  });\r\n  return visuals;\r\n}\r\n\r\nfunction calculateColor(visuals) {\r\n  var color = getValueVisualDefine(visuals, 'color');\r\n\r\n  if (color) {\r\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\r\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\r\n\r\n    if (colorSaturation) {\r\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\r\n    }\r\n\r\n    if (colorAlpha) {\r\n      color = zrColor.modifyAlpha(color, colorAlpha);\r\n    }\r\n\r\n    return color;\r\n  }\r\n}\r\n\r\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\r\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\r\n}\r\n\r\nfunction getValueVisualDefine(visuals, name) {\r\n  var value = visuals[name];\r\n\r\n  if (value != null && value !== 'none') {\r\n    return value;\r\n  }\r\n}\r\n\r\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\r\n  if (!viewChildren || !viewChildren.length) {\r\n    return;\r\n  }\r\n\r\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\r\n\r\n  if (!rangeVisual) {\r\n    return;\r\n  }\r\n\r\n  var visualMin = nodeModel.get('visualMin');\r\n  var visualMax = nodeModel.get('visualMax');\r\n  var dataExtent = nodeLayout.dataExtent.slice();\r\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\r\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\r\n  var colorMappingBy = nodeModel.get('colorMappingBy');\r\n  var opt = {\r\n    type: rangeVisual.name,\r\n    dataExtent: dataExtent,\r\n    visual: rangeVisual.range\r\n  };\r\n\r\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\r\n    opt.mappingMethod = 'category';\r\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\r\n  } else {\r\n    opt.mappingMethod = 'linear';\r\n  }\r\n\r\n  var mapping = new VisualMapping(opt);\r\n  mapping.__drColorMappingBy = colorMappingBy;\r\n  return mapping;\r\n} // Notice: If we dont have the attribute 'colorRange', but only use\r\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\r\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\r\n// this problem will be encountered:\r\n// If a level-1 node dont have children, and its siblings has children,\r\n// and colorRange is set on level-1, then the node can not be colored.\r\n// So we separate 'colorRange' and 'color' to different attributes.\r\n\r\n\r\nfunction getRangeVisual(nodeModel, name) {\r\n  // 'colorRange', 'colorARange', 'colorSRange'.\r\n  // If not exsits on this node, fetch from levels and series.\r\n  var range = nodeModel.get(name);\r\n  return isArray(range) && range.length ? {\r\n    name: name,\r\n    range: range\r\n  } : null;\r\n}\r\n\r\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\r\n  var childVisuals = zrUtil.extend({}, visuals);\r\n\r\n  if (mapping) {\r\n    var mappingType = mapping.type;\r\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\r\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\r\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\r\n  }\r\n\r\n  return childVisuals;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"../coord/polar/polarCreator\");\r\n\r\nrequire(\"./axis/AngleAxisView\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"../coord/cartesian/AxisModel\");\r\n\r\nrequire(\"./axis/CartesianAxisView\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\r\n\r\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\r\n\r\nrequire(\"./axisPointer/AxisPointerModel\");\r\n\r\nrequire(\"./axisPointer/AxisPointerView\");\r\n\r\nrequire(\"./axisPointer/CartesianAxisPointer\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// CartesianAxisPointer is not supposed to be required here. But consider\r\n// echarts.simple.js and online build tooltip, which only require gridSimple,\r\n// CartesianAxisPointer should be able to required somewhere.\r\necharts.registerPreprocessor(function (option) {\r\n  // Always has a global axisPointerModel for default setting.\r\n  if (option) {\r\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\r\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\r\n    // is not set, remain null/undefined, otherwise it will\r\n    // override existent link setting.\r\n\r\n    if (link && !zrUtil.isArray(link)) {\r\n      option.axisPointer.link = [link];\r\n    }\r\n  }\r\n}); // This process should proformed after coordinate systems created\r\n// and series data processed. So put it on statistic processing stage.\r\n\r\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\r\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\r\n  // allAxesInfo should be updated when setOption performed.\r\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\r\n}); // Broadcast to all views.\r\n\r\necharts.registerAction({\r\n  type: 'updateAxisPointer',\r\n  event: 'updateAxisPointer',\r\n  update: ':updateAxisPointer'\r\n}, axisTrigger);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar AxisPointerModel = echarts.extendComponentModel({\r\n  type: 'axisPointer',\r\n  coordSysAxesInfo: null,\r\n  defaultOption: {\r\n    // 'auto' means that show when triggered by tooltip or handle.\r\n    show: 'auto',\r\n    // 'click' | 'mousemove' | 'none'\r\n    triggerOn: null,\r\n    // set default in AxisPonterView.js\r\n    zlevel: 0,\r\n    z: 50,\r\n    type: 'line',\r\n    // 'line' 'shadow' 'cross' 'none'.\r\n    // axispointer triggered by tootip determine snap automatically,\r\n    // see `modelHelper`.\r\n    snap: false,\r\n    triggerTooltip: true,\r\n    value: null,\r\n    status: null,\r\n    // Init value depends on whether handle is used.\r\n    // [group0, group1, ...]\r\n    // Each group can be: {\r\n    //      mapper: function () {},\r\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\r\n    //      xAxisId: ...,\r\n    //      yAxisName: ...,\r\n    //      angleAxisIndex: ...\r\n    // }\r\n    // mapper: can be ignored.\r\n    //      input: {axisInfo, value}\r\n    //      output: {axisInfo, value}\r\n    link: [],\r\n    // Do not set 'auto' here, otherwise global animation: false\r\n    // will not effect at this axispointer.\r\n    animation: null,\r\n    animationDurationUpdate: 200,\r\n    lineStyle: {\r\n      color: '#aaa',\r\n      width: 1,\r\n      type: 'solid'\r\n    },\r\n    shadowStyle: {\r\n      color: 'rgba(150,150,150,0.3)'\r\n    },\r\n    label: {\r\n      show: true,\r\n      formatter: null,\r\n      // string | Function\r\n      precision: 'auto',\r\n      // Or a number like 0, 1, 2 ...\r\n      margin: 3,\r\n      color: '#fff',\r\n      padding: [5, 7, 5, 7],\r\n      backgroundColor: 'auto',\r\n      // default: axis line color\r\n      borderColor: null,\r\n      borderWidth: 0,\r\n      shadowBlur: 3,\r\n      shadowColor: '#aaa' // Considering applicability, common style should\r\n      // better not have shadowOffset.\r\n      // shadowOffsetX: 0,\r\n      // shadowOffsetY: 2\r\n\r\n    },\r\n    handle: {\r\n      show: false,\r\n\r\n      /* eslint-disable */\r\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\r\n      // jshint ignore:line\r\n\r\n      /* eslint-enable */\r\n      size: 45,\r\n      // handle margin is from symbol center to axis, which is stable when circular move.\r\n      margin: 50,\r\n      // color: '#1b8bbd'\r\n      // color: '#2f4554'\r\n      color: '#333',\r\n      shadowBlur: 3,\r\n      shadowColor: '#aaa',\r\n      shadowOffsetX: 0,\r\n      shadowOffsetY: 2,\r\n      // For mobile performance\r\n      throttle: 40\r\n    }\r\n  }\r\n});\r\nvar _default = AxisPointerModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar globalListener = require(\"./globalListener\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar AxisPointerView = echarts.extendComponentView({\r\n  type: 'axisPointer',\r\n  render: function (globalAxisPointerModel, ecModel, api) {\r\n    var globalTooltipModel = ecModel.getComponent('tooltip');\r\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\r\n    // AxisPointerView to be independent to Tooltip.\r\n\r\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\r\n      // If 'none', it is not controlled by mouse totally.\r\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\r\n        dispatchAction({\r\n          type: 'updateAxisPointer',\r\n          currTrigger: currTrigger,\r\n          x: e && e.offsetX,\r\n          y: e && e.offsetY\r\n        });\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  remove: function (ecModel, api) {\r\n    globalListener.unregister(api.getZr(), 'axisPointer');\r\n    AxisPointerView.superApply(this._model, 'remove', arguments);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: function (ecModel, api) {\r\n    globalListener.unregister('axisPointer', api);\r\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\r\n  }\r\n});\r\nvar _default = AxisPointerView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar clazzUtil = require(\"../../util/clazz\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar axisPointerModelHelper = require(\"./modelHelper\");\r\n\r\nvar eventTool = require(\"zrender/lib/core/event\");\r\n\r\nvar throttleUtil = require(\"../../util/throttle\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = makeInner();\r\nvar clone = zrUtil.clone;\r\nvar bind = zrUtil.bind;\r\n/**\r\n * Base axis pointer class in 2D.\r\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\r\n */\r\n\r\nfunction BaseAxisPointer() {}\r\n\r\nBaseAxisPointer.prototype = {\r\n  /**\r\n   * @private\r\n   */\r\n  _group: null,\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _lastGraphicKey: null,\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _handle: null,\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _dragging: false,\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _lastValue: null,\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _lastStatus: null,\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _payloadInfo: null,\r\n\r\n  /**\r\n   * In px, arbitrary value. Do not set too small,\r\n   * no animation is ok for most cases.\r\n   * @protected\r\n   */\r\n  animationThreshold: 15,\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  render: function (axisModel, axisPointerModel, api, forceRender) {\r\n    var value = axisPointerModel.get('value');\r\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\r\n    // be replaced when user calling setOption in not merge mode.\r\n\r\n    this._axisModel = axisModel;\r\n    this._axisPointerModel = axisPointerModel;\r\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\r\n    // So it is power consuming if performing `render` each time,\r\n    // especially on mobile device.\r\n\r\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\r\n      return;\r\n    }\r\n\r\n    this._lastValue = value;\r\n    this._lastStatus = status;\r\n    var group = this._group;\r\n    var handle = this._handle;\r\n\r\n    if (!status || status === 'hide') {\r\n      // Do not clear here, for animation better.\r\n      group && group.hide();\r\n      handle && handle.hide();\r\n      return;\r\n    }\r\n\r\n    group && group.show();\r\n    handle && handle.show(); // Otherwise status is 'show'\r\n\r\n    var elOption = {};\r\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\r\n\r\n    var graphicKey = elOption.graphicKey;\r\n\r\n    if (graphicKey !== this._lastGraphicKey) {\r\n      this.clear(api);\r\n    }\r\n\r\n    this._lastGraphicKey = graphicKey;\r\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\r\n\r\n    if (!group) {\r\n      group = this._group = new graphic.Group();\r\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\r\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\r\n      api.getZr().add(group);\r\n    } else {\r\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\r\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\r\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\r\n    }\r\n\r\n    updateMandatoryProps(group, axisPointerModel, true);\r\n\r\n    this._renderHandle(value);\r\n  },\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  remove: function (api) {\r\n    this.clear(api);\r\n  },\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  dispose: function (api) {\r\n    this.clear(api);\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  determineAnimation: function (axisModel, axisPointerModel) {\r\n    var animation = axisPointerModel.get('animation');\r\n    var axis = axisModel.axis;\r\n    var isCategoryAxis = axis.type === 'category';\r\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\r\n\r\n    if (!useSnap && !isCategoryAxis) {\r\n      return false;\r\n    }\r\n\r\n    if (animation === 'auto' || animation == null) {\r\n      var animationThreshold = this.animationThreshold;\r\n\r\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\r\n        return true;\r\n      } // It is important to auto animation when snap used. Consider if there is\r\n      // a dataZoom, animation will be disabled when too many points exist, while\r\n      // it will be enabled for better visual effect when little points exist.\r\n\r\n\r\n      if (useSnap) {\r\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\r\n        var axisExtent = axis.getExtent(); // Approximate band width\r\n\r\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    return animation === true;\r\n  },\r\n\r\n  /**\r\n   * add {pointer, label, graphicKey} to elOption\r\n   * @protected\r\n   */\r\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\r\n    var pointerOption = elOption.pointer;\r\n\r\n    if (pointerOption) {\r\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\r\n      group.add(pointerEl);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\r\n    if (elOption.label) {\r\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\r\n      group.add(labelEl);\r\n      updateLabelShowHide(labelEl, axisPointerModel);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  updatePointerEl: function (group, elOption, updateProps) {\r\n    var pointerEl = inner(group).pointerEl;\r\n\r\n    if (pointerEl && elOption.pointer) {\r\n      pointerEl.setStyle(elOption.pointer.style);\r\n      updateProps(pointerEl, {\r\n        shape: elOption.pointer.shape\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\r\n    var labelEl = inner(group).labelEl;\r\n\r\n    if (labelEl) {\r\n      labelEl.setStyle(elOption.label.style);\r\n      updateProps(labelEl, {\r\n        // Consider text length change in vertical axis, animation should\r\n        // be used on shape, otherwise the effect will be weird.\r\n        shape: elOption.label.shape,\r\n        position: elOption.label.position\r\n      });\r\n      updateLabelShowHide(labelEl, axisPointerModel);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _renderHandle: function (value) {\r\n    if (this._dragging || !this.updateHandleTransform) {\r\n      return;\r\n    }\r\n\r\n    var axisPointerModel = this._axisPointerModel;\r\n\r\n    var zr = this._api.getZr();\r\n\r\n    var handle = this._handle;\r\n    var handleModel = axisPointerModel.getModel('handle');\r\n    var status = axisPointerModel.get('status');\r\n\r\n    if (!handleModel.get('show') || !status || status === 'hide') {\r\n      handle && zr.remove(handle);\r\n      this._handle = null;\r\n      return;\r\n    }\r\n\r\n    var isInit;\r\n\r\n    if (!this._handle) {\r\n      isInit = true;\r\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\r\n        cursor: 'move',\r\n        draggable: true,\r\n        onmousemove: function (e) {\r\n          // Fot mobile devicem, prevent screen slider on the button.\r\n          eventTool.stop(e.event);\r\n        },\r\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\r\n        drift: bind(this._onHandleDragMove, this),\r\n        ondragend: bind(this._onHandleDragEnd, this)\r\n      });\r\n      zr.add(handle);\r\n    }\r\n\r\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\r\n\r\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\r\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\r\n\r\n    var handleSize = handleModel.get('size');\r\n\r\n    if (!zrUtil.isArray(handleSize)) {\r\n      handleSize = [handleSize, handleSize];\r\n    }\r\n\r\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\r\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\r\n\r\n    this._moveHandleToValue(value, isInit);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _moveHandleToValue: function (value, isInit) {\r\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _onHandleDragMove: function (dx, dy) {\r\n    var handle = this._handle;\r\n\r\n    if (!handle) {\r\n      return;\r\n    }\r\n\r\n    this._dragging = true; // Persistent for throttle.\r\n\r\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\r\n    this._payloadInfo = trans;\r\n    handle.stopAnimation();\r\n    handle.attr(getHandleTransProps(trans));\r\n    inner(handle).lastProp = null;\r\n\r\n    this._doDispatchAxisPointer();\r\n  },\r\n\r\n  /**\r\n   * Throttled method.\r\n   * @private\r\n   */\r\n  _doDispatchAxisPointer: function () {\r\n    var handle = this._handle;\r\n\r\n    if (!handle) {\r\n      return;\r\n    }\r\n\r\n    var payloadInfo = this._payloadInfo;\r\n    var axisModel = this._axisModel;\r\n\r\n    this._api.dispatchAction({\r\n      type: 'updateAxisPointer',\r\n      x: payloadInfo.cursorPoint[0],\r\n      y: payloadInfo.cursorPoint[1],\r\n      tooltipOption: payloadInfo.tooltipOption,\r\n      axesInfo: [{\r\n        axisDim: axisModel.axis.dim,\r\n        axisIndex: axisModel.componentIndex\r\n      }]\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _onHandleDragEnd: function (moveAnimation) {\r\n    this._dragging = false;\r\n    var handle = this._handle;\r\n\r\n    if (!handle) {\r\n      return;\r\n    }\r\n\r\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\r\n    // axisPointer. So move handle to align the exact value position when\r\n    // drag ended.\r\n\r\n\r\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\r\n    // button, and will be hidden after finger left handle button.\r\n\r\n\r\n    this._api.dispatchAction({\r\n      type: 'hideTip'\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Should be implemenented by sub-class if support `handle`.\r\n   * @protected\r\n   * @param {number} value\r\n   * @param {module:echarts/model/Model} axisModel\r\n   * @param {module:echarts/model/Model} axisPointerModel\r\n   * @return {Object} {position: [x, y], rotation: 0}\r\n   */\r\n  getHandleTransform: null,\r\n\r\n  /**\r\n   * * Should be implemenented by sub-class if support `handle`.\r\n   * @protected\r\n   * @param {Object} transform {position, rotation}\r\n   * @param {Array.<number>} delta [dx, dy]\r\n   * @param {module:echarts/model/Model} axisModel\r\n   * @param {module:echarts/model/Model} axisPointerModel\r\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\r\n   */\r\n  updateHandleTransform: null,\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  clear: function (api) {\r\n    this._lastValue = null;\r\n    this._lastStatus = null;\r\n    var zr = api.getZr();\r\n    var group = this._group;\r\n    var handle = this._handle;\r\n\r\n    if (zr && group) {\r\n      this._lastGraphicKey = null;\r\n      group && zr.remove(group);\r\n      handle && zr.remove(handle);\r\n      this._group = null;\r\n      this._handle = null;\r\n      this._payloadInfo = null;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  doClear: function () {// Implemented by sub-class if necessary.\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Array.<number>} xy\r\n   * @param {Array.<number>} wh\r\n   * @param {number} [xDimIndex=0] or 1\r\n   */\r\n  buildLabel: function (xy, wh, xDimIndex) {\r\n    xDimIndex = xDimIndex || 0;\r\n    return {\r\n      x: xy[xDimIndex],\r\n      y: xy[1 - xDimIndex],\r\n      width: wh[xDimIndex],\r\n      height: wh[1 - xDimIndex]\r\n    };\r\n  }\r\n};\r\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\r\n\r\nfunction updateProps(animationModel, moveAnimation, el, props) {\r\n  // Animation optimize.\r\n  if (!propsEqual(inner(el).lastProp, props)) {\r\n    inner(el).lastProp = props;\r\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\r\n  }\r\n}\r\n\r\nfunction propsEqual(lastProps, newProps) {\r\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\r\n    var equals = true;\r\n    zrUtil.each(newProps, function (item, key) {\r\n      equals = equals && propsEqual(lastProps[key], item);\r\n    });\r\n    return !!equals;\r\n  } else {\r\n    return lastProps === newProps;\r\n  }\r\n}\r\n\r\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\r\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\r\n}\r\n\r\nfunction getHandleTransProps(trans) {\r\n  return {\r\n    position: trans.position.slice(),\r\n    rotation: trans.rotation || 0\r\n  };\r\n}\r\n\r\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\r\n  var z = axisPointerModel.get('z');\r\n  var zlevel = axisPointerModel.get('zlevel');\r\n  group && group.traverse(function (el) {\r\n    if (el.type !== 'group') {\r\n      z != null && (el.z = z);\r\n      zlevel != null && (el.zlevel = zlevel);\r\n      el.silent = silent;\r\n    }\r\n  });\r\n}\r\n\r\nclazzUtil.enableClassExtend(BaseAxisPointer);\r\nvar _default = BaseAxisPointer;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\r\n\r\nvar viewHelper = require(\"./viewHelper\");\r\n\r\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\r\n\r\nvar AxisView = require(\"../axis/AxisView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar CartesianAxisPointer = BaseAxisPointer.extend({\r\n  /**\r\n   * @override\r\n   */\r\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\r\n    var axis = axisModel.axis;\r\n    var grid = axis.grid;\r\n    var axisPointerType = axisPointerModel.get('type');\r\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\r\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\r\n\r\n    if (axisPointerType && axisPointerType !== 'none') {\r\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\r\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\r\n      pointerOption.style = elStyle;\r\n      elOption.graphicKey = pointerOption.type;\r\n      elOption.pointer = pointerOption;\r\n    }\r\n\r\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\r\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\r\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\r\n      labelInside: false\r\n    });\r\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\r\n    return {\r\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\r\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\r\n    var axis = axisModel.axis;\r\n    var grid = axis.grid;\r\n    var axisExtent = axis.getGlobalExtent(true);\r\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\r\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\r\n    var currPosition = transform.position;\r\n    currPosition[dimIndex] += delta[dimIndex];\r\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\r\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\r\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\r\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\r\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\r\n\r\n    var tooltipOptions = [{\r\n      verticalAlign: 'middle'\r\n    }, {\r\n      align: 'center'\r\n    }];\r\n    return {\r\n      position: currPosition,\r\n      rotation: transform.rotation,\r\n      cursorPoint: cursorPoint,\r\n      tooltipOption: tooltipOptions[dimIndex]\r\n    };\r\n  }\r\n});\r\n\r\nfunction getCartesian(grid, axis) {\r\n  var opt = {};\r\n  opt[axis.dim + 'AxisIndex'] = axis.index;\r\n  return grid.getCartesian(opt);\r\n}\r\n\r\nvar pointerShapeBuilder = {\r\n  line: function (axis, pixelValue, otherExtent) {\r\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\r\n    return {\r\n      type: 'Line',\r\n      subPixelOptimize: true,\r\n      shape: targetShape\r\n    };\r\n  },\r\n  shadow: function (axis, pixelValue, otherExtent) {\r\n    var bandWidth = Math.max(1, axis.getBandWidth());\r\n    var span = otherExtent[1] - otherExtent[0];\r\n    return {\r\n      type: 'Rect',\r\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\r\n    };\r\n  }\r\n};\r\n\r\nfunction getAxisDimIndex(axis) {\r\n  return axis.dim === 'x' ? 0 : 1;\r\n}\r\n\r\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\r\nvar _default = CartesianAxisPointer;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar viewHelper = require(\"./viewHelper\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\r\n\r\nvar AxisView = require(\"../axis/AxisView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PolarAxisPointer = BaseAxisPointer.extend({\r\n  /**\r\n   * @override\r\n   */\r\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\r\n    var axis = axisModel.axis;\r\n\r\n    if (axis.dim === 'angle') {\r\n      this.animationThreshold = Math.PI / 18;\r\n    }\r\n\r\n    var polar = axis.polar;\r\n    var otherAxis = polar.getOtherAxis(axis);\r\n    var otherExtent = otherAxis.getExtent();\r\n    var coordValue;\r\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\r\n    var axisPointerType = axisPointerModel.get('type');\r\n\r\n    if (axisPointerType && axisPointerType !== 'none') {\r\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\r\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\r\n      pointerOption.style = elStyle;\r\n      elOption.graphicKey = pointerOption.type;\r\n      elOption.pointer = pointerOption;\r\n    }\r\n\r\n    var labelMargin = axisPointerModel.get('label.margin');\r\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\r\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\r\n  } // Do not support handle, utill any user requires it.\r\n\r\n});\r\n\r\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\r\n  var axis = axisModel.axis;\r\n  var coord = axis.dataToCoord(value);\r\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\r\n  axisAngle = axisAngle / 180 * Math.PI;\r\n  var radiusExtent = polar.getRadiusAxis().getExtent();\r\n  var position;\r\n  var align;\r\n  var verticalAlign;\r\n\r\n  if (axis.dim === 'radius') {\r\n    var transform = matrix.create();\r\n    matrix.rotate(transform, transform, axisAngle);\r\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\r\n    position = graphic.applyTransform([coord, -labelMargin], transform);\r\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\r\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\r\n    align = labelLayout.textAlign;\r\n    verticalAlign = labelLayout.textVerticalAlign;\r\n  } else {\r\n    // angle axis\r\n    var r = radiusExtent[1];\r\n    position = polar.coordToPoint([r + labelMargin, coord]);\r\n    var cx = polar.cx;\r\n    var cy = polar.cy;\r\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\r\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\r\n  }\r\n\r\n  return {\r\n    position: position,\r\n    align: align,\r\n    verticalAlign: verticalAlign\r\n  };\r\n}\r\n\r\nvar pointerShapeBuilder = {\r\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\r\n    return axis.dim === 'angle' ? {\r\n      type: 'Line',\r\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\r\n    } : {\r\n      type: 'Circle',\r\n      shape: {\r\n        cx: polar.cx,\r\n        cy: polar.cy,\r\n        r: coordValue\r\n      }\r\n    };\r\n  },\r\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\r\n    var bandWidth = Math.max(1, axis.getBandWidth());\r\n    var radian = Math.PI / 180;\r\n    return axis.dim === 'angle' ? {\r\n      type: 'Sector',\r\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\r\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\r\n    } : {\r\n      type: 'Sector',\r\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\r\n    };\r\n  }\r\n};\r\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\r\nvar _default = PolarAxisPointer;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\r\n\r\nvar viewHelper = require(\"./viewHelper\");\r\n\r\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\r\n\r\nvar AxisView = require(\"../axis/AxisView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar XY = ['x', 'y'];\r\nvar WH = ['width', 'height'];\r\nvar SingleAxisPointer = BaseAxisPointer.extend({\r\n  /**\r\n   * @override\r\n   */\r\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\r\n    var axis = axisModel.axis;\r\n    var coordSys = axis.coordinateSystem;\r\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\r\n    var pixelValue = coordSys.dataToPoint(value)[0];\r\n    var axisPointerType = axisPointerModel.get('type');\r\n\r\n    if (axisPointerType && axisPointerType !== 'none') {\r\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\r\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\r\n      pointerOption.style = elStyle;\r\n      elOption.graphicKey = pointerOption.type;\r\n      elOption.pointer = pointerOption;\r\n    }\r\n\r\n    var layoutInfo = singleAxisHelper.layout(axisModel);\r\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\r\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\r\n      labelInside: false\r\n    });\r\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\r\n    return {\r\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\r\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\r\n    var axis = axisModel.axis;\r\n    var coordSys = axis.coordinateSystem;\r\n    var dimIndex = getPointDimIndex(axis);\r\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\r\n    var currPosition = transform.position;\r\n    currPosition[dimIndex] += delta[dimIndex];\r\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\r\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\r\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\r\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\r\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\r\n    cursorPoint[dimIndex] = currPosition[dimIndex];\r\n    return {\r\n      position: currPosition,\r\n      rotation: transform.rotation,\r\n      cursorPoint: cursorPoint,\r\n      tooltipOption: {\r\n        verticalAlign: 'middle'\r\n      }\r\n    };\r\n  }\r\n});\r\nvar pointerShapeBuilder = {\r\n  line: function (axis, pixelValue, otherExtent) {\r\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\r\n    return {\r\n      type: 'Line',\r\n      subPixelOptimize: true,\r\n      shape: targetShape\r\n    };\r\n  },\r\n  shadow: function (axis, pixelValue, otherExtent) {\r\n    var bandWidth = axis.getBandWidth();\r\n    var span = otherExtent[1] - otherExtent[0];\r\n    return {\r\n      type: 'Rect',\r\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\r\n    };\r\n  }\r\n};\r\n\r\nfunction getPointDimIndex(axis) {\r\n  return axis.isHorizontal() ? 0 : 1;\r\n}\r\n\r\nfunction getGlobalExtent(coordSys, dimIndex) {\r\n  var rect = coordSys.getRect();\r\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\r\n}\r\n\r\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\r\nvar _default = SingleAxisPointer;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\nvar modelHelper = require(\"./modelHelper\");\r\n\r\nvar findPointFromSeries = require(\"./findPointFromSeries\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar curry = zrUtil.curry;\r\nvar inner = makeInner();\r\n/**\r\n * Basic logic: check all axis, if they do not demand show/highlight,\r\n * then hide/downplay them.\r\n *\r\n * @param {Object} coordSysAxesInfo\r\n * @param {Object} payload\r\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\r\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\r\n *              trigger axisPointer and tooltip.\r\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\r\n *              trigger axisPointer and tooltip.\r\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\r\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\r\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\r\n *        [{\r\n *          axisDim: 'x'|'y'|'angle'|...,\r\n *          axisIndex: ...,\r\n *          value: ...\r\n *        }, ...]\r\n * @param {Function} [payload.dispatchAction]\r\n * @param {Object} [payload.tooltipOption]\r\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\r\n *        which can be specified in dispatchAction\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {module:echarts/ExtensionAPI} api\r\n * @return {Object} content of event obj for echarts.connect.\r\n */\r\n\r\nfunction _default(payload, ecModel, api) {\r\n  var currTrigger = payload.currTrigger;\r\n  var point = [payload.x, payload.y];\r\n  var finder = payload;\r\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\r\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\r\n  // See #6121. But we are not able to reproduce it yet.\r\n\r\n  if (!coordSysAxesInfo) {\r\n    return;\r\n  }\r\n\r\n  if (illegalPoint(point)) {\r\n    // Used in the default behavior of `connection`: use the sample seriesIndex\r\n    // and dataIndex. And also used in the tooltipView trigger.\r\n    point = findPointFromSeries({\r\n      seriesIndex: finder.seriesIndex,\r\n      // Do not use dataIndexInside from other ec instance.\r\n      // FIXME: auto detect it?\r\n      dataIndex: finder.dataIndex\r\n    }, ecModel).point;\r\n  }\r\n\r\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\r\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\r\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\r\n  // and dataIndex.\r\n\r\n  var inputAxesInfo = finder.axesInfo;\r\n  var axesInfo = coordSysAxesInfo.axesInfo;\r\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\r\n  var outputFinder = {};\r\n  var showValueMap = {};\r\n  var dataByCoordSys = {\r\n    list: [],\r\n    map: {}\r\n  };\r\n  var updaters = {\r\n    showPointer: curry(showPointer, showValueMap),\r\n    showTooltip: curry(showTooltip, dataByCoordSys)\r\n  }; // Process for triggered axes.\r\n\r\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\r\n    // If a point given, it must be contained by the coordinate system.\r\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\r\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\r\n      var axis = axisInfo.axis;\r\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\r\n\r\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\r\n        var val = inputAxisInfo && inputAxisInfo.value;\r\n\r\n        if (val == null && !isIllegalPoint) {\r\n          val = axis.pointToData(point);\r\n        }\r\n\r\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\r\n      }\r\n    });\r\n  }); // Process for linked axes.\r\n\r\n  var linkTriggers = {};\r\n  each(axesInfo, function (tarAxisInfo, tarKey) {\r\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\r\n\r\n    if (linkGroup && !showValueMap[tarKey]) {\r\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\r\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\r\n\r\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\r\n          var val = srcValItem.value;\r\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\r\n          linkTriggers[tarAxisInfo.key] = val;\r\n        }\r\n      });\r\n    }\r\n  });\r\n  each(linkTriggers, function (val, tarKey) {\r\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\r\n  });\r\n  updateModelActually(showValueMap, axesInfo, outputFinder);\r\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\r\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\r\n  return outputFinder;\r\n}\r\n\r\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\r\n  var axis = axisInfo.axis;\r\n\r\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\r\n    return;\r\n  }\r\n\r\n  if (!axisInfo.involveSeries) {\r\n    updaters.showPointer(axisInfo, newValue);\r\n    return;\r\n  } // Heavy calculation. So put it after axis.containData checking.\r\n\r\n\r\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\r\n  var payloadBatch = payloadInfo.payloadBatch;\r\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\r\n  // By default use the first involved series data as a sample to connect.\r\n\r\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\r\n    zrUtil.extend(outputFinder, payloadBatch[0]);\r\n  } // If no linkSource input, this process is for collecting link\r\n  // target, where snap should not be accepted.\r\n\r\n\r\n  if (!dontSnap && axisInfo.snap) {\r\n    if (axis.containData(snapToValue) && snapToValue != null) {\r\n      newValue = snapToValue;\r\n    }\r\n  }\r\n\r\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\r\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\r\n\r\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\r\n}\r\n\r\nfunction buildPayloadsBySeries(value, axisInfo) {\r\n  var axis = axisInfo.axis;\r\n  var dim = axis.dim;\r\n  var snapToValue = value;\r\n  var payloadBatch = [];\r\n  var minDist = Number.MAX_VALUE;\r\n  var minDiff = -1;\r\n  each(axisInfo.seriesModels, function (series, idx) {\r\n    var dataDim = series.getData().mapDimension(dim, true);\r\n    var seriesNestestValue;\r\n    var dataIndices;\r\n\r\n    if (series.getAxisTooltipData) {\r\n      var result = series.getAxisTooltipData(dataDim, value, axis);\r\n      dataIndices = result.dataIndices;\r\n      seriesNestestValue = result.nestestValue;\r\n    } else {\r\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\r\n      // when data length is not same.\r\n      // false,\r\n      axis.type === 'category' ? 0.5 : null);\r\n\r\n      if (!dataIndices.length) {\r\n        return;\r\n      }\r\n\r\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\r\n    }\r\n\r\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\r\n      return;\r\n    }\r\n\r\n    var diff = value - seriesNestestValue;\r\n    var dist = Math.abs(diff); // Consider category case\r\n\r\n    if (dist <= minDist) {\r\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\r\n        minDist = dist;\r\n        minDiff = diff;\r\n        snapToValue = seriesNestestValue;\r\n        payloadBatch.length = 0;\r\n      }\r\n\r\n      each(dataIndices, function (dataIndex) {\r\n        payloadBatch.push({\r\n          seriesIndex: series.seriesIndex,\r\n          dataIndexInside: dataIndex,\r\n          dataIndex: series.getData().getRawIndex(dataIndex)\r\n        });\r\n      });\r\n    }\r\n  });\r\n  return {\r\n    payloadBatch: payloadBatch,\r\n    snapToValue: snapToValue\r\n  };\r\n}\r\n\r\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\r\n  showValueMap[axisInfo.key] = {\r\n    value: value,\r\n    payloadBatch: payloadBatch\r\n  };\r\n}\r\n\r\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\r\n  var payloadBatch = payloadInfo.payloadBatch;\r\n  var axis = axisInfo.axis;\r\n  var axisModel = axis.model;\r\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\r\n  // whose length will be used to judge whether dispatch action.\r\n\r\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\r\n    return;\r\n  }\r\n\r\n  var coordSysModel = axisInfo.coordSys.model;\r\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\r\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\r\n\r\n  if (!coordSysItem) {\r\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\r\n      coordSysId: coordSysModel.id,\r\n      coordSysIndex: coordSysModel.componentIndex,\r\n      coordSysType: coordSysModel.type,\r\n      coordSysMainType: coordSysModel.mainType,\r\n      dataByAxis: []\r\n    };\r\n    dataByCoordSys.list.push(coordSysItem);\r\n  }\r\n\r\n  coordSysItem.dataByAxis.push({\r\n    axisDim: axis.dim,\r\n    axisIndex: axisModel.componentIndex,\r\n    axisType: axisModel.type,\r\n    axisId: axisModel.id,\r\n    value: value,\r\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\r\n    // depends that all models have been updated. So it should not be performed\r\n    // here. Considering axisPointerModel used here is volatile, which is hard\r\n    // to be retrieve in TooltipView, we prepare parameters here.\r\n    valueLabelOpt: {\r\n      precision: axisPointerModel.get('label.precision'),\r\n      formatter: axisPointerModel.get('label.formatter')\r\n    },\r\n    seriesDataIndices: payloadBatch.slice()\r\n  });\r\n}\r\n\r\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\r\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\r\n\r\n  each(axesInfo, function (axisInfo, key) {\r\n    var option = axisInfo.axisPointerModel.option;\r\n    var valItem = showValueMap[key];\r\n\r\n    if (valItem) {\r\n      !axisInfo.useHandle && (option.status = 'show');\r\n      option.value = valItem.value; // For label formatter param and highlight.\r\n\r\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\r\n    } // When always show (e.g., handle used), remain\r\n    // original value and status.\r\n    else {\r\n        // If hide, value still need to be set, consider\r\n        // click legend to toggle axis blank.\r\n        !axisInfo.useHandle && (option.status = 'hide');\r\n      } // If status is 'hide', should be no info in payload.\r\n\r\n\r\n    option.status === 'show' && outputAxesInfo.push({\r\n      axisDim: axisInfo.axis.dim,\r\n      axisIndex: axisInfo.axis.model.componentIndex,\r\n      value: option.value\r\n    });\r\n  });\r\n}\r\n\r\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\r\n  // Basic logic: If no showTip required, hideTip will be dispatched.\r\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\r\n    dispatchAction({\r\n      type: 'hideTip'\r\n    });\r\n    return;\r\n  } // In most case only one axis (or event one series is used). It is\r\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\r\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\r\n  // axis on the payload.\r\n\r\n\r\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\r\n  dispatchAction({\r\n    type: 'showTip',\r\n    escapeConnect: true,\r\n    x: point[0],\r\n    y: point[1],\r\n    tooltipOption: payload.tooltipOption,\r\n    position: payload.position,\r\n    dataIndexInside: sampleItem.dataIndexInside,\r\n    dataIndex: sampleItem.dataIndex,\r\n    seriesIndex: sampleItem.seriesIndex,\r\n    dataByCoordSys: dataByCoordSys.list\r\n  });\r\n}\r\n\r\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\r\n  // FIXME\r\n  // highlight status modification shoule be a stage of main process?\r\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\r\n  var zr = api.getZr();\r\n  var highDownKey = 'axisPointerLastHighlights';\r\n  var lastHighlights = inner(zr)[highDownKey] || {};\r\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\r\n  // Build hash map and remove duplicate incidentally.\r\n\r\n  each(axesInfo, function (axisInfo, key) {\r\n    var option = axisInfo.axisPointerModel.option;\r\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\r\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\r\n      newHighlights[key] = batchItem;\r\n    });\r\n  }); // Diff.\r\n\r\n  var toHighlight = [];\r\n  var toDownplay = [];\r\n  zrUtil.each(lastHighlights, function (batchItem, key) {\r\n    !newHighlights[key] && toDownplay.push(batchItem);\r\n  });\r\n  zrUtil.each(newHighlights, function (batchItem, key) {\r\n    !lastHighlights[key] && toHighlight.push(batchItem);\r\n  });\r\n  toDownplay.length && api.dispatchAction({\r\n    type: 'downplay',\r\n    escapeConnect: true,\r\n    batch: toDownplay\r\n  });\r\n  toHighlight.length && api.dispatchAction({\r\n    type: 'highlight',\r\n    escapeConnect: true,\r\n    batch: toHighlight\r\n  });\r\n}\r\n\r\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\r\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\r\n    var inputAxisInfo = inputAxesInfo[i];\r\n\r\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\r\n      return inputAxisInfo;\r\n    }\r\n  }\r\n}\r\n\r\nfunction makeMapperParam(axisInfo) {\r\n  var axisModel = axisInfo.axis.model;\r\n  var item = {};\r\n  var dim = item.axisDim = axisInfo.axis.dim;\r\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\r\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\r\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\r\n  return item;\r\n}\r\n\r\nfunction illegalPoint(point) {\r\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\r\n * @param {module:echarts/model/Global} ecModel\r\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\r\n */\r\nfunction _default(finder, ecModel) {\r\n  var point = [];\r\n  var seriesIndex = finder.seriesIndex;\r\n  var seriesModel;\r\n\r\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\r\n    return {\r\n      point: []\r\n    };\r\n  }\r\n\r\n  var data = seriesModel.getData();\r\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\r\n\r\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\r\n    return {\r\n      point: []\r\n    };\r\n  }\r\n\r\n  var el = data.getItemGraphicEl(dataIndex);\r\n  var coordSys = seriesModel.coordinateSystem;\r\n\r\n  if (seriesModel.getTooltipPosition) {\r\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\r\n  } else if (coordSys && coordSys.dataToPoint) {\r\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\r\n      return data.mapDimension(dim);\r\n    }), dataIndex, true)) || [];\r\n  } else if (el) {\r\n    // Use graphic bounding rect\r\n    var rect = el.getBoundingRect().clone();\r\n    rect.applyTransform(el.transform);\r\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\r\n  }\r\n\r\n  return {\r\n    point: point,\r\n    el: el\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = makeInner();\r\nvar each = zrUtil.each;\r\n/**\r\n * @param {string} key\r\n * @param {module:echarts/ExtensionAPI} api\r\n * @param {Function} handler\r\n *      param: {string} currTrigger\r\n *      param: {Array.<number>} point\r\n */\r\n\r\nfunction register(key, api, handler) {\r\n  if (env.node) {\r\n    return;\r\n  }\r\n\r\n  var zr = api.getZr();\r\n  inner(zr).records || (inner(zr).records = {});\r\n  initGlobalListeners(zr, api);\r\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\r\n  record.handler = handler;\r\n}\r\n\r\nfunction initGlobalListeners(zr, api) {\r\n  if (inner(zr).initialized) {\r\n    return;\r\n  }\r\n\r\n  inner(zr).initialized = true;\r\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\r\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\r\n\r\n  useHandler('globalout', onLeave);\r\n\r\n  function useHandler(eventType, cb) {\r\n    zr.on(eventType, function (e) {\r\n      var dis = makeDispatchAction(api);\r\n      each(inner(zr).records, function (record) {\r\n        record && cb(record, e, dis.dispatchAction);\r\n      });\r\n      dispatchTooltipFinally(dis.pendings, api);\r\n    });\r\n  }\r\n}\r\n\r\nfunction dispatchTooltipFinally(pendings, api) {\r\n  var showLen = pendings.showTip.length;\r\n  var hideLen = pendings.hideTip.length;\r\n  var actuallyPayload;\r\n\r\n  if (showLen) {\r\n    actuallyPayload = pendings.showTip[showLen - 1];\r\n  } else if (hideLen) {\r\n    actuallyPayload = pendings.hideTip[hideLen - 1];\r\n  }\r\n\r\n  if (actuallyPayload) {\r\n    actuallyPayload.dispatchAction = null;\r\n    api.dispatchAction(actuallyPayload);\r\n  }\r\n}\r\n\r\nfunction onLeave(record, e, dispatchAction) {\r\n  record.handler('leave', null, dispatchAction);\r\n}\r\n\r\nfunction doEnter(currTrigger, record, e, dispatchAction) {\r\n  record.handler(currTrigger, e, dispatchAction);\r\n}\r\n\r\nfunction makeDispatchAction(api) {\r\n  var pendings = {\r\n    showTip: [],\r\n    hideTip: []\r\n  }; // FIXME\r\n  // better approach?\r\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\r\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\r\n  // So we have to add \"final stage\" to merge those dispatched actions.\r\n\r\n  var dispatchAction = function (payload) {\r\n    var pendingList = pendings[payload.type];\r\n\r\n    if (pendingList) {\r\n      pendingList.push(payload);\r\n    } else {\r\n      payload.dispatchAction = dispatchAction;\r\n      api.dispatchAction(payload);\r\n    }\r\n  };\r\n\r\n  return {\r\n    dispatchAction: dispatchAction,\r\n    pendings: pendings\r\n  };\r\n}\r\n/**\r\n * @param {string} key\r\n * @param {module:echarts/ExtensionAPI} api\r\n */\r\n\r\n\r\nfunction unregister(key, api) {\r\n  if (env.node) {\r\n    return;\r\n  }\r\n\r\n  var zr = api.getZr();\r\n  var record = (inner(zr).records || {})[key];\r\n\r\n  if (record) {\r\n    inner(zr).records[key] = null;\r\n  }\r\n}\r\n\r\nexports.register = register;\r\nexports.unregister = unregister;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\r\n// allAxesInfo should be updated when setOption performed.\r\n\r\nfunction collect(ecModel, api) {\r\n  var result = {\r\n    /**\r\n     * key: makeKey(axis.model)\r\n     * value: {\r\n     *      axis,\r\n     *      coordSys,\r\n     *      axisPointerModel,\r\n     *      triggerTooltip,\r\n     *      involveSeries,\r\n     *      snap,\r\n     *      seriesModels,\r\n     *      seriesDataCount\r\n     * }\r\n     */\r\n    axesInfo: {},\r\n    seriesInvolved: false,\r\n\r\n    /**\r\n     * key: makeKey(coordSys.model)\r\n     * value: Object: key makeKey(axis.model), value: axisInfo\r\n     */\r\n    coordSysAxesInfo: {},\r\n    coordSysMap: {}\r\n  };\r\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\r\n\r\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\r\n  return result;\r\n}\r\n\r\nfunction collectAxesInfo(result, ecModel, api) {\r\n  var globalTooltipModel = ecModel.getComponent('tooltip');\r\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\r\n\r\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\r\n  var linkGroups = []; // Collect axes info.\r\n\r\n  each(api.getCoordinateSystems(), function (coordSys) {\r\n    // Some coordinate system do not support axes, like geo.\r\n    if (!coordSys.axisPointerEnabled) {\r\n      return;\r\n    }\r\n\r\n    var coordSysKey = makeKey(coordSys.model);\r\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\r\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\r\n    // for user. So we enable seting tooltip on coordSys model.\r\n\r\n    var coordSysModel = coordSys.model;\r\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\r\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\r\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\r\n\r\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\r\n    // show but axisPointer will show as normal.\r\n    && baseTooltipModel.get('show')) {\r\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\r\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\r\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\r\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\r\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\r\n\r\n      if (triggerAxis || cross) {\r\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\r\n      }\r\n\r\n      if (cross) {\r\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\r\n      }\r\n    } // fromTooltip: true | false | 'cross'\r\n    // triggerTooltip: true | false | null\r\n\r\n\r\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\r\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\r\n      var axisPointerShow = axisPointerModel.get('show');\r\n\r\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\r\n        return;\r\n      }\r\n\r\n      if (triggerTooltip == null) {\r\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\r\n      }\r\n\r\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\r\n      var snap = axisPointerModel.get('snap');\r\n      var key = makeKey(axis.model);\r\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\r\n\r\n      var axisInfo = result.axesInfo[key] = {\r\n        key: key,\r\n        axis: axis,\r\n        coordSys: coordSys,\r\n        axisPointerModel: axisPointerModel,\r\n        triggerTooltip: triggerTooltip,\r\n        involveSeries: involveSeries,\r\n        snap: snap,\r\n        useHandle: isHandleTrigger(axisPointerModel),\r\n        seriesModels: []\r\n      };\r\n      axesInfoInCoordSys[key] = axisInfo;\r\n      result.seriesInvolved |= involveSeries;\r\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\r\n\r\n      if (groupIndex != null) {\r\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\r\n          axesInfo: {}\r\n        });\r\n        linkGroup.axesInfo[key] = axisInfo;\r\n        linkGroup.mapper = linksOption[groupIndex].mapper;\r\n        axisInfo.linkGroup = linkGroup;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\r\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\r\n  var volatileOption = {};\r\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\r\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\r\n  }); // category axis do not auto snap, otherwise some tick that do not\r\n  // has value can not be hovered. value/time/log axis default snap if\r\n  // triggered from tooltip and trigger tooltip.\r\n\r\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\r\n  // Only these properties can be overrided from tooltip to axisPointer.\r\n\r\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\r\n    volatileOption.type = 'line';\r\n  }\r\n\r\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\r\n\r\n  labelOption.show == null && (labelOption.show = false);\r\n\r\n  if (fromTooltip === 'cross') {\r\n    // When 'cross', both axes show labels.\r\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\r\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\r\n    // (cross style is dashed by default)\r\n\r\n    if (!triggerTooltip) {\r\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\r\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\r\n    }\r\n  }\r\n\r\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\r\n}\r\n\r\nfunction collectSeriesInfo(result, ecModel) {\r\n  // Prepare data for axis trigger\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\r\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\r\n\r\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\r\n      return;\r\n    }\r\n\r\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\r\n      var axis = axisInfo.axis;\r\n\r\n      if (coordSys.getAxis(axis.dim) === axis) {\r\n        axisInfo.seriesModels.push(seriesModel);\r\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\r\n        axisInfo.seriesDataCount += seriesModel.getData().count();\r\n      }\r\n    });\r\n  }, this);\r\n}\r\n/**\r\n * For example:\r\n * {\r\n *     axisPointer: {\r\n *         links: [{\r\n *             xAxisIndex: [2, 4],\r\n *             yAxisIndex: 'all'\r\n *         }, {\r\n *             xAxisId: ['a5', 'a7'],\r\n *             xAxisName: 'xxx'\r\n *         }]\r\n *     }\r\n * }\r\n */\r\n\r\n\r\nfunction getLinkGroupIndex(linksOption, axis) {\r\n  var axisModel = axis.model;\r\n  var dim = axis.dim;\r\n\r\n  for (var i = 0; i < linksOption.length; i++) {\r\n    var linkOption = linksOption[i] || {};\r\n\r\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\r\n      return i;\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkPropInLink(linkPropValue, axisPropValue) {\r\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\r\n}\r\n\r\nfunction fixValue(axisModel) {\r\n  var axisInfo = getAxisInfo(axisModel);\r\n\r\n  if (!axisInfo) {\r\n    return;\r\n  }\r\n\r\n  var axisPointerModel = axisInfo.axisPointerModel;\r\n  var scale = axisInfo.axis.scale;\r\n  var option = axisPointerModel.option;\r\n  var status = axisPointerModel.get('status');\r\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\r\n\r\n  if (value != null) {\r\n    value = scale.parse(value);\r\n  }\r\n\r\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\r\n  // and status should be initialized.\r\n\r\n  if (status == null) {\r\n    option.status = useHandle ? 'show' : 'hide';\r\n  }\r\n\r\n  var extent = scale.getExtent().slice();\r\n  extent[0] > extent[1] && extent.reverse();\r\n\r\n  if ( // Pick a value on axis when initializing.\r\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\r\n  // where we should re-pick a value to keep `handle` displaying normally.\r\n  || value > extent[1]) {\r\n    // Make handle displayed on the end of the axis when init, which looks better.\r\n    value = extent[1];\r\n  }\r\n\r\n  if (value < extent[0]) {\r\n    value = extent[0];\r\n  }\r\n\r\n  option.value = value;\r\n\r\n  if (useHandle) {\r\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\r\n  }\r\n}\r\n\r\nfunction getAxisInfo(axisModel) {\r\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\r\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\r\n}\r\n\r\nfunction getAxisPointerModel(axisModel) {\r\n  var axisInfo = getAxisInfo(axisModel);\r\n  return axisInfo && axisInfo.axisPointerModel;\r\n}\r\n\r\nfunction isHandleTrigger(axisPointerModel) {\r\n  return !!axisPointerModel.get('handle.show');\r\n}\r\n/**\r\n * @param {module:echarts/model/Model} model\r\n * @return {string} unique key\r\n */\r\n\r\n\r\nfunction makeKey(model) {\r\n  return model.type + '||' + model.id;\r\n}\r\n\r\nexports.collect = collect;\r\nexports.fixValue = fixValue;\r\nexports.getAxisInfo = getAxisInfo;\r\nexports.getAxisPointerModel = getAxisPointerModel;\r\nexports.makeKey = makeKey;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar textContain = require(\"zrender/lib/contain/text\");\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar axisHelper = require(\"../../coord/axisHelper\");\r\n\r\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {module:echarts/model/Model} axisPointerModel\r\n */\r\nfunction buildElStyle(axisPointerModel) {\r\n  var axisPointerType = axisPointerModel.get('type');\r\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\r\n  var style;\r\n\r\n  if (axisPointerType === 'line') {\r\n    style = styleModel.getLineStyle();\r\n    style.fill = null;\r\n  } else if (axisPointerType === 'shadow') {\r\n    style = styleModel.getAreaStyle();\r\n    style.stroke = null;\r\n  }\r\n\r\n  return style;\r\n}\r\n/**\r\n * @param {Function} labelPos {align, verticalAlign, position}\r\n */\r\n\r\n\r\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\r\n  var value = axisPointerModel.get('value');\r\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\r\n    precision: axisPointerModel.get('label.precision'),\r\n    formatter: axisPointerModel.get('label.formatter')\r\n  });\r\n  var labelModel = axisPointerModel.getModel('label');\r\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\r\n  var font = labelModel.getFont();\r\n  var textRect = textContain.getBoundingRect(text, font);\r\n  var position = labelPos.position;\r\n  var width = textRect.width + paddings[1] + paddings[3];\r\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\r\n\r\n  var align = labelPos.align;\r\n  align === 'right' && (position[0] -= width);\r\n  align === 'center' && (position[0] -= width / 2);\r\n  var verticalAlign = labelPos.verticalAlign;\r\n  verticalAlign === 'bottom' && (position[1] -= height);\r\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\r\n\r\n  confineInContainer(position, width, height, api);\r\n  var bgColor = labelModel.get('backgroundColor');\r\n\r\n  if (!bgColor || bgColor === 'auto') {\r\n    bgColor = axisModel.get('axisLine.lineStyle.color');\r\n  }\r\n\r\n  elOption.label = {\r\n    shape: {\r\n      x: 0,\r\n      y: 0,\r\n      width: width,\r\n      height: height,\r\n      r: labelModel.get('borderRadius')\r\n    },\r\n    position: position.slice(),\r\n    // TODO: rich\r\n    style: {\r\n      text: text,\r\n      textFont: font,\r\n      textFill: labelModel.getTextColor(),\r\n      textPosition: 'inside',\r\n      textPadding: paddings,\r\n      fill: bgColor,\r\n      stroke: labelModel.get('borderColor') || 'transparent',\r\n      lineWidth: labelModel.get('borderWidth') || 0,\r\n      shadowBlur: labelModel.get('shadowBlur'),\r\n      shadowColor: labelModel.get('shadowColor'),\r\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\r\n      shadowOffsetY: labelModel.get('shadowOffsetY')\r\n    },\r\n    // Lable should be over axisPointer.\r\n    z2: 10\r\n  };\r\n} // Do not overflow ec container\r\n\r\n\r\nfunction confineInContainer(position, width, height, api) {\r\n  var viewWidth = api.getWidth();\r\n  var viewHeight = api.getHeight();\r\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\r\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\r\n  position[0] = Math.max(position[0], 0);\r\n  position[1] = Math.max(position[1], 0);\r\n}\r\n/**\r\n * @param {number} value\r\n * @param {module:echarts/coord/Axis} axis\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {Object} opt\r\n * @param {Array.<Object>} seriesDataIndices\r\n * @param {number|string} opt.precision 'auto' or a number\r\n * @param {string|Function} opt.formatter label formatter\r\n */\r\n\r\n\r\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\r\n  value = axis.scale.parse(value);\r\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\r\n  // helps to debounce when when moving label.\r\n  value, {\r\n    precision: opt.precision\r\n  });\r\n  var formatter = opt.formatter;\r\n\r\n  if (formatter) {\r\n    var params = {\r\n      value: axisHelper.getAxisRawValue(axis, value),\r\n      axisDimension: axis.dim,\r\n      axisIndex: axis.index,\r\n      seriesData: []\r\n    };\r\n    zrUtil.each(seriesDataIndices, function (idxItem) {\r\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\r\n      var dataIndex = idxItem.dataIndexInside;\r\n      var dataParams = series && series.getDataParams(dataIndex);\r\n      dataParams && params.seriesData.push(dataParams);\r\n    });\r\n\r\n    if (zrUtil.isString(formatter)) {\r\n      text = formatter.replace('{value}', text);\r\n    } else if (zrUtil.isFunction(formatter)) {\r\n      text = formatter(params);\r\n    }\r\n  }\r\n\r\n  return text;\r\n}\r\n/**\r\n * @param {module:echarts/coord/Axis} axis\r\n * @param {number} value\r\n * @param {Object} layoutInfo {\r\n *  rotation, position, labelOffset, labelDirection, labelMargin\r\n * }\r\n */\r\n\r\n\r\nfunction getTransformedPosition(axis, value, layoutInfo) {\r\n  var transform = matrix.create();\r\n  matrix.rotate(transform, transform, layoutInfo.rotation);\r\n  matrix.translate(transform, transform, layoutInfo.position);\r\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\r\n}\r\n\r\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\r\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\r\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\r\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\r\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\r\n    align: textLayout.textAlign,\r\n    verticalAlign: textLayout.textVerticalAlign\r\n  });\r\n}\r\n/**\r\n * @param {Array.<number>} p1\r\n * @param {Array.<number>} p2\r\n * @param {number} [xDimIndex=0] or 1\r\n */\r\n\r\n\r\nfunction makeLineShape(p1, p2, xDimIndex) {\r\n  xDimIndex = xDimIndex || 0;\r\n  return {\r\n    x1: p1[xDimIndex],\r\n    y1: p1[1 - xDimIndex],\r\n    x2: p2[xDimIndex],\r\n    y2: p2[1 - xDimIndex]\r\n  };\r\n}\r\n/**\r\n * @param {Array.<number>} xy\r\n * @param {Array.<number>} wh\r\n * @param {number} [xDimIndex=0] or 1\r\n */\r\n\r\n\r\nfunction makeRectShape(xy, wh, xDimIndex) {\r\n  xDimIndex = xDimIndex || 0;\r\n  return {\r\n    x: xy[xDimIndex],\r\n    y: xy[1 - xDimIndex],\r\n    width: wh[xDimIndex],\r\n    height: wh[1 - xDimIndex]\r\n  };\r\n}\r\n\r\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\r\n  return {\r\n    cx: cx,\r\n    cy: cy,\r\n    r0: r0,\r\n    r: r,\r\n    startAngle: startAngle,\r\n    endAngle: endAngle,\r\n    clockwise: true\r\n  };\r\n}\r\n\r\nexports.buildElStyle = buildElStyle;\r\nexports.buildLabelElOption = buildLabelElOption;\r\nexports.getValueLabel = getValueLabel;\r\nexports.getTransformedPosition = getTransformedPosition;\r\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\r\nexports.makeLineShape = makeLineShape;\r\nexports.makeRectShape = makeRectShape;\r\nexports.makeSectorShape = makeSectorShape;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar AxisView = require(\"./AxisView\");\r\n\r\nvar AxisBuilder = require(\"./AxisBuilder\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'minorTick', 'splitLine', 'minorSplitLine', 'splitArea'];\r\n\r\nfunction getAxisLineShape(polar, rExtent, angle) {\r\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\r\n  var start = polar.coordToPoint([rExtent[0], angle]);\r\n  var end = polar.coordToPoint([rExtent[1], angle]);\r\n  return {\r\n    x1: start[0],\r\n    y1: start[1],\r\n    x2: end[0],\r\n    y2: end[1]\r\n  };\r\n}\r\n\r\nfunction getRadiusIdx(polar) {\r\n  var radiusAxis = polar.getRadiusAxis();\r\n  return radiusAxis.inverse ? 0 : 1;\r\n} // Remove the last tick which will overlap the first tick\r\n\r\n\r\nfunction fixAngleOverlap(list) {\r\n  var firstItem = list[0];\r\n  var lastItem = list[list.length - 1];\r\n\r\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\r\n    list.pop();\r\n  }\r\n}\r\n\r\nvar _default = AxisView.extend({\r\n  type: 'angleAxis',\r\n  axisPointerClass: 'PolarAxisPointer',\r\n  render: function (angleAxisModel, ecModel) {\r\n    this.group.removeAll();\r\n\r\n    if (!angleAxisModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var angleAxis = angleAxisModel.axis;\r\n    var polar = angleAxis.polar;\r\n    var radiusExtent = polar.getRadiusAxis().getExtent();\r\n    var ticksAngles = angleAxis.getTicksCoords();\r\n    var minorTickAngles = angleAxis.getMinorTicksCoords();\r\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\r\n      var labelItem = zrUtil.clone(labelItem);\r\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\r\n      return labelItem;\r\n    });\r\n    fixAngleOverlap(labels);\r\n    fixAngleOverlap(ticksAngles);\r\n    zrUtil.each(elementList, function (name) {\r\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\r\n        this['_' + name](angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels);\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _axisLine: function (angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle'); // extent id of the axis radius (r0 and r)\r\n\r\n    var rId = getRadiusIdx(polar);\r\n    var r0Id = rId ? 0 : 1;\r\n    var shape;\r\n\r\n    if (radiusExtent[r0Id] === 0) {\r\n      shape = new graphic.Circle({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r: radiusExtent[rId]\r\n        },\r\n        style: lineStyleModel.getLineStyle(),\r\n        z2: 1,\r\n        silent: true\r\n      });\r\n    } else {\r\n      shape = new graphic.Ring({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r: radiusExtent[rId],\r\n          r0: radiusExtent[r0Id]\r\n        },\r\n        style: lineStyleModel.getLineStyle(),\r\n        z2: 1,\r\n        silent: true\r\n      });\r\n    }\r\n\r\n    shape.style.fill = null;\r\n    this.group.add(shape);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _axisTick: function (angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    var tickModel = angleAxisModel.getModel('axisTick');\r\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\r\n    var radius = radiusExtent[getRadiusIdx(polar)];\r\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\r\n      return new graphic.Line({\r\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\r\n      });\r\n    });\r\n    this.group.add(graphic.mergePath(lines, {\r\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\r\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\r\n      })\r\n    }));\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _minorTick: function (angleAxisModel, polar, tickAngles, minorTickAngles, radiusExtent) {\r\n    if (!minorTickAngles.length) {\r\n      return;\r\n    }\r\n\r\n    var tickModel = angleAxisModel.getModel('axisTick');\r\n    var minorTickModel = angleAxisModel.getModel('minorTick');\r\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * minorTickModel.get('length');\r\n    var radius = radiusExtent[getRadiusIdx(polar)];\r\n    var lines = [];\r\n\r\n    for (var i = 0; i < minorTickAngles.length; i++) {\r\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\r\n        lines.push(new graphic.Line({\r\n          shape: getAxisLineShape(polar, [radius, radius + tickLen], minorTickAngles[i][k].coord)\r\n        }));\r\n      }\r\n    }\r\n\r\n    this.group.add(graphic.mergePath(lines, {\r\n      style: zrUtil.defaults(minorTickModel.getModel('lineStyle').getLineStyle(), zrUtil.defaults(tickModel.getLineStyle(), {\r\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\r\n      }))\r\n    }));\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels) {\r\n    var rawCategoryData = angleAxisModel.getCategories(true);\r\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\r\n    var labelMargin = commonLabelModel.get('margin');\r\n    var triggerEvent = angleAxisModel.get('triggerEvent'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\r\n\r\n    zrUtil.each(labels, function (labelItem, idx) {\r\n      var labelModel = commonLabelModel;\r\n      var tickValue = labelItem.tickValue;\r\n      var r = radiusExtent[getRadiusIdx(polar)];\r\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\r\n      var cx = polar.cx;\r\n      var cy = polar.cy;\r\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\r\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\r\n\r\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\r\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\r\n      }\r\n\r\n      var textEl = new graphic.Text({\r\n        silent: AxisBuilder.isLabelSilent(angleAxisModel)\r\n      });\r\n      this.group.add(textEl);\r\n      graphic.setTextStyle(textEl.style, labelModel, {\r\n        x: p[0],\r\n        y: p[1],\r\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\r\n        text: labelItem.formattedLabel,\r\n        textAlign: labelTextAlign,\r\n        textVerticalAlign: labelTextVerticalAlign\r\n      }); // Pack data for mouse event\r\n\r\n      if (triggerEvent) {\r\n        textEl.eventData = AxisBuilder.makeAxisEventDataBase(angleAxisModel);\r\n        textEl.eventData.targetType = 'axisLabel';\r\n        textEl.eventData.value = labelItem.rawLabel;\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _splitLine: function (angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    var splitLineModel = angleAxisModel.getModel('splitLine');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var lineColors = lineStyleModel.get('color');\r\n    var lineCount = 0;\r\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\r\n    var splitLines = [];\r\n\r\n    for (var i = 0; i < ticksAngles.length; i++) {\r\n      var colorIndex = lineCount++ % lineColors.length;\r\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\r\n      splitLines[colorIndex].push(new graphic.Line({\r\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\r\n      }));\r\n    } // Simple optimization\r\n    // Batching the lines if color are the same\r\n\r\n\r\n    for (var i = 0; i < splitLines.length; i++) {\r\n      this.group.add(graphic.mergePath(splitLines[i], {\r\n        style: zrUtil.defaults({\r\n          stroke: lineColors[i % lineColors.length]\r\n        }, lineStyleModel.getLineStyle()),\r\n        silent: true,\r\n        z: angleAxisModel.get('z')\r\n      }));\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _minorSplitLine: function (angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    if (!minorTickAngles.length) {\r\n      return;\r\n    }\r\n\r\n    var minorSplitLineModel = angleAxisModel.getModel('minorSplitLine');\r\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\r\n    var lines = [];\r\n\r\n    for (var i = 0; i < minorTickAngles.length; i++) {\r\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\r\n        lines.push(new graphic.Line({\r\n          shape: getAxisLineShape(polar, radiusExtent, minorTickAngles[i][k].coord)\r\n        }));\r\n      }\r\n    }\r\n\r\n    this.group.add(graphic.mergePath(lines, {\r\n      style: lineStyleModel.getLineStyle(),\r\n      silent: true,\r\n      z: angleAxisModel.get('z')\r\n    }));\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _splitArea: function (angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    if (!ticksAngles.length) {\r\n      return;\r\n    }\r\n\r\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\r\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n    var areaColors = areaStyleModel.get('color');\r\n    var lineCount = 0;\r\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\r\n    var splitAreas = [];\r\n    var RADIAN = Math.PI / 180;\r\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\r\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\r\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\r\n    var clockwise = angleAxisModel.get('clockwise');\r\n\r\n    for (var i = 1; i < ticksAngles.length; i++) {\r\n      var colorIndex = lineCount++ % areaColors.length;\r\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\r\n      splitAreas[colorIndex].push(new graphic.Sector({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r0: r0,\r\n          r: r1,\r\n          startAngle: prevAngle,\r\n          endAngle: -ticksAngles[i].coord * RADIAN,\r\n          clockwise: clockwise\r\n        },\r\n        silent: true\r\n      }));\r\n      prevAngle = -ticksAngles[i].coord * RADIAN;\r\n    } // Simple optimization\r\n    // Batching the lines if color are the same\r\n\r\n\r\n    for (var i = 0; i < splitAreas.length; i++) {\r\n      this.group.add(graphic.mergePath(splitAreas[i], {\r\n        style: zrUtil.defaults({\r\n          fill: areaColors[i % areaColors.length]\r\n        }, areaStyleModel.getAreaStyle()),\r\n        silent: true\r\n      }));\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar retrieve = _util.retrieve;\r\nvar defaults = _util.defaults;\r\nvar extend = _util.extend;\r\nvar each = _util.each;\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar isRadianAroundZero = _number.isRadianAroundZero;\r\nvar remRadian = _number.remRadian;\r\n\r\nvar _symbol = require(\"../../util/symbol\");\r\n\r\nvar createSymbol = _symbol.createSymbol;\r\n\r\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\r\n\r\nvar _vector = require(\"zrender/lib/core/vector\");\r\n\r\nvar v2ApplyTransform = _vector.applyTransform;\r\n\r\nvar _axisHelper = require(\"../../coord/axisHelper\");\r\n\r\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PI = Math.PI;\r\n/**\r\n * A final axis is translated and rotated from a \"standard axis\".\r\n * So opt.position and opt.rotation is required.\r\n *\r\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\r\n * for example: (0, 0) ------------> (0, 50)\r\n *\r\n * nameDirection or tickDirection or labelDirection is 1 means tick\r\n * or label is below the standard axis, whereas is -1 means above\r\n * the standard axis. labelOffset means offset between label and axis,\r\n * which is useful when 'onZero', where axisLabel is in the grid and\r\n * label in outside grid.\r\n *\r\n * Tips: like always,\r\n * positive rotation represents anticlockwise, and negative rotation\r\n * represents clockwise.\r\n * The direction of position coordinate is the same as the direction\r\n * of screen coordinate.\r\n *\r\n * Do not need to consider axis 'inverse', which is auto processed by\r\n * axis extent.\r\n *\r\n * @param {module:zrender/container/Group} group\r\n * @param {Object} axisModel\r\n * @param {Object} opt Standard axis parameters.\r\n * @param {Array.<number>} opt.position [x, y]\r\n * @param {number} opt.rotation by radian\r\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\r\n * @param {number} [opt.tickDirection=1] 1 or -1\r\n * @param {number} [opt.labelDirection=1] 1 or -1\r\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\r\n * @param {string} [opt.axisLabelShow] default get from axisModel.\r\n * @param {string} [opt.axisName] default get from axisModel.\r\n * @param {number} [opt.axisNameAvailableWidth]\r\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\r\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\r\n * @param {number} [opt.nameTruncateMaxWidth]\r\n */\r\n\r\nvar AxisBuilder = function (axisModel, opt) {\r\n  /**\r\n   * @readOnly\r\n   */\r\n  this.opt = opt;\r\n  /**\r\n   * @readOnly\r\n   */\r\n\r\n  this.axisModel = axisModel; // Default value\r\n\r\n  defaults(opt, {\r\n    labelOffset: 0,\r\n    nameDirection: 1,\r\n    tickDirection: 1,\r\n    labelDirection: 1,\r\n    silent: true\r\n  });\r\n  /**\r\n   * @readOnly\r\n   */\r\n\r\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\r\n\r\n  var dumbGroup = new graphic.Group({\r\n    position: opt.position.slice(),\r\n    rotation: opt.rotation\r\n  }); // this.group.add(dumbGroup);\r\n  // this._dumbGroup = dumbGroup;\r\n\r\n  dumbGroup.updateTransform();\r\n  this._transform = dumbGroup.transform;\r\n  this._dumbGroup = dumbGroup;\r\n};\r\n\r\nAxisBuilder.prototype = {\r\n  constructor: AxisBuilder,\r\n  hasBuilder: function (name) {\r\n    return !!builders[name];\r\n  },\r\n  add: function (name) {\r\n    builders[name].call(this);\r\n  },\r\n  getGroup: function () {\r\n    return this.group;\r\n  }\r\n};\r\nvar builders = {\r\n  /**\r\n   * @private\r\n   */\r\n  axisLine: function () {\r\n    var opt = this.opt;\r\n    var axisModel = this.axisModel;\r\n\r\n    if (!axisModel.get('axisLine.show')) {\r\n      return;\r\n    }\r\n\r\n    var extent = this.axisModel.axis.getExtent();\r\n    var matrix = this._transform;\r\n    var pt1 = [extent[0], 0];\r\n    var pt2 = [extent[1], 0];\r\n\r\n    if (matrix) {\r\n      v2ApplyTransform(pt1, pt1, matrix);\r\n      v2ApplyTransform(pt2, pt2, matrix);\r\n    }\r\n\r\n    var lineStyle = extend({\r\n      lineCap: 'round'\r\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\r\n    this.group.add(new graphic.Line({\r\n      // Id for animation\r\n      anid: 'line',\r\n      subPixelOptimize: true,\r\n      shape: {\r\n        x1: pt1[0],\r\n        y1: pt1[1],\r\n        x2: pt2[0],\r\n        y2: pt2[1]\r\n      },\r\n      style: lineStyle,\r\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\r\n      silent: true,\r\n      z2: 1\r\n    }));\r\n    var arrows = axisModel.get('axisLine.symbol');\r\n    var arrowSize = axisModel.get('axisLine.symbolSize');\r\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\r\n\r\n    if (typeof arrowOffset === 'number') {\r\n      arrowOffset = [arrowOffset, arrowOffset];\r\n    }\r\n\r\n    if (arrows != null) {\r\n      if (typeof arrows === 'string') {\r\n        // Use the same arrow for start and end point\r\n        arrows = [arrows, arrows];\r\n      }\r\n\r\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\r\n        // Use the same size for width and height\r\n        arrowSize = [arrowSize, arrowSize];\r\n      }\r\n\r\n      var symbolWidth = arrowSize[0];\r\n      var symbolHeight = arrowSize[1];\r\n      each([{\r\n        rotate: opt.rotation + Math.PI / 2,\r\n        offset: arrowOffset[0],\r\n        r: 0\r\n      }, {\r\n        rotate: opt.rotation - Math.PI / 2,\r\n        offset: arrowOffset[1],\r\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\r\n      }], function (point, index) {\r\n        if (arrows[index] !== 'none' && arrows[index] != null) {\r\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\r\n\r\n          var r = point.r + point.offset;\r\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\r\n          symbol.attr({\r\n            rotation: point.rotate,\r\n            position: pos,\r\n            silent: true,\r\n            z2: 11\r\n          });\r\n          this.group.add(symbol);\r\n        }\r\n      }, this);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  axisTickLabel: function () {\r\n    var axisModel = this.axisModel;\r\n    var opt = this.opt;\r\n    var ticksEls = buildAxisMajorTicks(this, axisModel, opt);\r\n    var labelEls = buildAxisLabel(this, axisModel, opt);\r\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\r\n    buildAxisMinorTicks(this, axisModel, opt);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  axisName: function () {\r\n    var opt = this.opt;\r\n    var axisModel = this.axisModel;\r\n    var name = retrieve(opt.axisName, axisModel.get('name'));\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    var nameLocation = axisModel.get('nameLocation');\r\n    var nameDirection = opt.nameDirection;\r\n    var textStyleModel = axisModel.getModel('nameTextStyle');\r\n    var gap = axisModel.get('nameGap') || 0;\r\n    var extent = this.axisModel.axis.getExtent();\r\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\r\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\r\n    // Reuse labelOffset.\r\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\r\n    var labelLayout;\r\n    var nameRotation = axisModel.get('nameRotate');\r\n\r\n    if (nameRotation != null) {\r\n      nameRotation = nameRotation * PI / 180; // To radian.\r\n    }\r\n\r\n    var axisNameAvailableWidth;\r\n\r\n    if (isNameLocationCenter(nameLocation)) {\r\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\r\n      nameDirection);\r\n    } else {\r\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\r\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\r\n\r\n      if (axisNameAvailableWidth != null) {\r\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\r\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\r\n      }\r\n    }\r\n\r\n    var textFont = textStyleModel.getFont();\r\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\r\n    var ellipsis = truncateOpt.ellipsis;\r\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\r\n    // truncate rich text? (consider performance)\r\n\r\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\r\n      minChar: 2,\r\n      placeholder: truncateOpt.placeholder\r\n    }) : name;\r\n    var tooltipOpt = axisModel.get('tooltip', true);\r\n    var mainType = axisModel.mainType;\r\n    var formatterParams = {\r\n      componentType: mainType,\r\n      name: name,\r\n      $vars: ['name']\r\n    };\r\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\r\n    var textEl = new graphic.Text({\r\n      // Id for animation\r\n      anid: 'name',\r\n      __fullText: name,\r\n      __truncatedText: truncatedText,\r\n      position: pos,\r\n      rotation: labelLayout.rotation,\r\n      silent: isLabelSilent(axisModel),\r\n      z2: 1,\r\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\r\n        content: name,\r\n        formatter: function () {\r\n          return name;\r\n        },\r\n        formatterParams: formatterParams\r\n      }, tooltipOpt) : null\r\n    });\r\n    graphic.setTextStyle(textEl.style, textStyleModel, {\r\n      text: truncatedText,\r\n      textFont: textFont,\r\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\r\n      textAlign: textStyleModel.get('align') || labelLayout.textAlign,\r\n      textVerticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\r\n    });\r\n\r\n    if (axisModel.get('triggerEvent')) {\r\n      textEl.eventData = makeAxisEventDataBase(axisModel);\r\n      textEl.eventData.targetType = 'axisName';\r\n      textEl.eventData.name = name;\r\n    } // FIXME\r\n\r\n\r\n    this._dumbGroup.add(textEl);\r\n\r\n    textEl.updateTransform();\r\n    this.group.add(textEl);\r\n    textEl.decomposeTransform();\r\n  }\r\n};\r\n\r\nvar makeAxisEventDataBase = AxisBuilder.makeAxisEventDataBase = function (axisModel) {\r\n  var eventData = {\r\n    componentType: axisModel.mainType,\r\n    componentIndex: axisModel.componentIndex\r\n  };\r\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\r\n  return eventData;\r\n};\r\n/**\r\n * @public\r\n * @static\r\n * @param {Object} opt\r\n * @param {number} axisRotation in radian\r\n * @param {number} textRotation in radian\r\n * @param {number} direction\r\n * @return {Object} {\r\n *  rotation, // according to axis\r\n *  textAlign,\r\n *  textVerticalAlign\r\n * }\r\n */\r\n\r\n\r\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\r\n  var rotationDiff = remRadian(textRotation - axisRotation);\r\n  var textAlign;\r\n  var textVerticalAlign;\r\n\r\n  if (isRadianAroundZero(rotationDiff)) {\r\n    // Label is parallel with axis line.\r\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\r\n    textAlign = 'center';\r\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\r\n    // Label is inverse parallel with axis line.\r\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\r\n    textAlign = 'center';\r\n  } else {\r\n    textVerticalAlign = 'middle';\r\n\r\n    if (rotationDiff > 0 && rotationDiff < PI) {\r\n      textAlign = direction > 0 ? 'right' : 'left';\r\n    } else {\r\n      textAlign = direction > 0 ? 'left' : 'right';\r\n    }\r\n  }\r\n\r\n  return {\r\n    rotation: rotationDiff,\r\n    textAlign: textAlign,\r\n    textVerticalAlign: textVerticalAlign\r\n  };\r\n};\r\n\r\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\r\n  var rotationDiff = remRadian(textRotate - opt.rotation);\r\n  var textAlign;\r\n  var textVerticalAlign;\r\n  var inverse = extent[0] > extent[1];\r\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\r\n\r\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\r\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\r\n    textAlign = 'center';\r\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\r\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\r\n    textAlign = 'center';\r\n  } else {\r\n    textVerticalAlign = 'middle';\r\n\r\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\r\n      textAlign = onLeft ? 'left' : 'right';\r\n    } else {\r\n      textAlign = onLeft ? 'right' : 'left';\r\n    }\r\n  }\r\n\r\n  return {\r\n    rotation: rotationDiff,\r\n    textAlign: textAlign,\r\n    textVerticalAlign: textVerticalAlign\r\n  };\r\n}\r\n\r\nvar isLabelSilent = AxisBuilder.isLabelSilent = function (axisModel) {\r\n  var tooltipOpt = axisModel.get('tooltip');\r\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\r\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\r\n};\r\n\r\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\r\n  if (shouldShowAllLabels(axisModel.axis)) {\r\n    return;\r\n  } // If min or max are user set, we need to check\r\n  // If the tick on min(max) are overlap on their neighbour tick\r\n  // If they are overlapped, we need to hide the min(max) tick label\r\n\r\n\r\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\r\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\r\n  // Have not consider onBand yet, where tick els is more than label els.\r\n\r\n  labelEls = labelEls || [];\r\n  tickEls = tickEls || [];\r\n  var firstLabel = labelEls[0];\r\n  var nextLabel = labelEls[1];\r\n  var lastLabel = labelEls[labelEls.length - 1];\r\n  var prevLabel = labelEls[labelEls.length - 2];\r\n  var firstTick = tickEls[0];\r\n  var nextTick = tickEls[1];\r\n  var lastTick = tickEls[tickEls.length - 1];\r\n  var prevTick = tickEls[tickEls.length - 2];\r\n\r\n  if (showMinLabel === false) {\r\n    ignoreEl(firstLabel);\r\n    ignoreEl(firstTick);\r\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\r\n    if (showMinLabel) {\r\n      ignoreEl(nextLabel);\r\n      ignoreEl(nextTick);\r\n    } else {\r\n      ignoreEl(firstLabel);\r\n      ignoreEl(firstTick);\r\n    }\r\n  }\r\n\r\n  if (showMaxLabel === false) {\r\n    ignoreEl(lastLabel);\r\n    ignoreEl(lastTick);\r\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\r\n    if (showMaxLabel) {\r\n      ignoreEl(prevLabel);\r\n      ignoreEl(prevTick);\r\n    } else {\r\n      ignoreEl(lastLabel);\r\n      ignoreEl(lastTick);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ignoreEl(el) {\r\n  el && (el.ignore = true);\r\n}\r\n\r\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\r\n  // current and next has the same rotation.\r\n  var firstRect = current && current.getBoundingRect().clone();\r\n  var nextRect = next && next.getBoundingRect().clone();\r\n\r\n  if (!firstRect || !nextRect) {\r\n    return;\r\n  } // When checking intersect of two rotated labels, we use mRotationBack\r\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\r\n\r\n\r\n  var mRotationBack = matrixUtil.identity([]);\r\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\r\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\r\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\r\n  return firstRect.intersect(nextRect);\r\n}\r\n\r\nfunction isNameLocationCenter(nameLocation) {\r\n  return nameLocation === 'middle' || nameLocation === 'center';\r\n}\r\n\r\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, aniid) {\r\n  var tickEls = [];\r\n  var pt1 = [];\r\n  var pt2 = [];\r\n\r\n  for (var i = 0; i < ticksCoords.length; i++) {\r\n    var tickCoord = ticksCoords[i].coord;\r\n    pt1[0] = tickCoord;\r\n    pt1[1] = 0;\r\n    pt2[0] = tickCoord;\r\n    pt2[1] = tickEndCoord;\r\n\r\n    if (tickTransform) {\r\n      v2ApplyTransform(pt1, pt1, tickTransform);\r\n      v2ApplyTransform(pt2, pt2, tickTransform);\r\n    } // Tick line, Not use group transform to have better line draw\r\n\r\n\r\n    var tickEl = new graphic.Line({\r\n      // Id for animation\r\n      anid: aniid + '_' + ticksCoords[i].tickValue,\r\n      subPixelOptimize: true,\r\n      shape: {\r\n        x1: pt1[0],\r\n        y1: pt1[1],\r\n        x2: pt2[0],\r\n        y2: pt2[1]\r\n      },\r\n      style: tickLineStyle,\r\n      z2: 2,\r\n      silent: true\r\n    });\r\n    tickEls.push(tickEl);\r\n  }\r\n\r\n  return tickEls;\r\n}\r\n\r\nfunction buildAxisMajorTicks(axisBuilder, axisModel, opt) {\r\n  var axis = axisModel.axis;\r\n  var tickModel = axisModel.getModel('axisTick');\r\n\r\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\r\n    return;\r\n  }\r\n\r\n  var lineStyleModel = tickModel.getModel('lineStyle');\r\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\r\n  var ticksCoords = axis.getTicksCoords();\r\n  var ticksEls = createTicks(ticksCoords, axisBuilder._transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\r\n    stroke: axisModel.get('axisLine.lineStyle.color')\r\n  }), 'ticks');\r\n\r\n  for (var i = 0; i < ticksEls.length; i++) {\r\n    axisBuilder.group.add(ticksEls[i]);\r\n  }\r\n\r\n  return ticksEls;\r\n}\r\n\r\nfunction buildAxisMinorTicks(axisBuilder, axisModel, opt) {\r\n  var axis = axisModel.axis;\r\n  var minorTickModel = axisModel.getModel('minorTick');\r\n\r\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\r\n    return;\r\n  }\r\n\r\n  var minorTicksCoords = axis.getMinorTicksCoords();\r\n\r\n  if (!minorTicksCoords.length) {\r\n    return;\r\n  }\r\n\r\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\r\n  var tickEndCoord = opt.tickDirection * minorTickModel.get('length');\r\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\r\n    stroke: axisModel.get('axisLine.lineStyle.color')\r\n  }));\r\n\r\n  for (var i = 0; i < minorTicksCoords.length; i++) {\r\n    var minorTicksEls = createTicks(minorTicksCoords[i], axisBuilder._transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\r\n\r\n    for (var k = 0; k < minorTicksEls.length; k++) {\r\n      axisBuilder.group.add(minorTicksEls[k]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\r\n  var axis = axisModel.axis;\r\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\r\n\r\n  if (!show || axis.scale.isBlank()) {\r\n    return;\r\n  }\r\n\r\n  var labelModel = axisModel.getModel('axisLabel');\r\n  var labelMargin = labelModel.get('margin');\r\n  var labels = axis.getViewLabels(); // Special label rotate.\r\n\r\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\r\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\r\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\r\n  var labelEls = [];\r\n  var silent = isLabelSilent(axisModel);\r\n  var triggerEvent = axisModel.get('triggerEvent');\r\n  each(labels, function (labelItem, index) {\r\n    var tickValue = labelItem.tickValue;\r\n    var formattedLabel = labelItem.formattedLabel;\r\n    var rawLabel = labelItem.rawLabel;\r\n    var itemLabelModel = labelModel;\r\n\r\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\r\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\r\n    }\r\n\r\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\r\n    var tickCoord = axis.dataToCoord(tickValue);\r\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\r\n    var textEl = new graphic.Text({\r\n      // Id for animation\r\n      anid: 'label_' + tickValue,\r\n      position: pos,\r\n      rotation: labelLayout.rotation,\r\n      silent: silent,\r\n      z2: 10\r\n    });\r\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\r\n      text: formattedLabel,\r\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\r\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\r\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\r\n      // index of axis.data. So tick should not be exposed to user\r\n      // in category axis.\r\n      // (2) Compatible with previous version, which always use formatted label as\r\n      // input. But in interval scale the formatted label is like '223,445', which\r\n      // maked user repalce ','. So we modify it to return original val but remain\r\n      // it as 'string' to avoid error in replacing.\r\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\r\n    }); // Pack data for mouse event\r\n\r\n    if (triggerEvent) {\r\n      textEl.eventData = makeAxisEventDataBase(axisModel);\r\n      textEl.eventData.targetType = 'axisLabel';\r\n      textEl.eventData.value = rawLabel;\r\n    } // FIXME\r\n\r\n\r\n    axisBuilder._dumbGroup.add(textEl);\r\n\r\n    textEl.updateTransform();\r\n    labelEls.push(textEl);\r\n    axisBuilder.group.add(textEl);\r\n    textEl.decomposeTransform();\r\n  });\r\n  return labelEls;\r\n}\r\n\r\nvar _default = AxisBuilder;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Base class of AxisView.\r\n */\r\nvar AxisView = echarts.extendComponentView({\r\n  type: 'axis',\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _axisPointer: null,\r\n\r\n  /**\r\n   * @protected\r\n   * @type {string}\r\n   */\r\n  axisPointerClass: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (axisModel, ecModel, api, payload) {\r\n    // FIXME\r\n    // This process should proformed after coordinate systems updated\r\n    // (axis scale updated), and should be performed each time update.\r\n    // So put it here temporarily, although it is not appropriate to\r\n    // put a model-writing procedure in `view`.\r\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\r\n    AxisView.superApply(this, 'render', arguments);\r\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\r\n  },\r\n\r\n  /**\r\n   * Action handler.\r\n   * @public\r\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n   * @param {module:echarts/model/Global} ecModel\r\n   * @param {module:echarts/ExtensionAPI} api\r\n   * @param {Object} payload\r\n   */\r\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\r\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  remove: function (ecModel, api) {\r\n    var axisPointer = this._axisPointer;\r\n    axisPointer && axisPointer.remove(api);\r\n    AxisView.superApply(this, 'remove', arguments);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: function (ecModel, api) {\r\n    disposeAxisPointer(this, api);\r\n    AxisView.superApply(this, 'dispose', arguments);\r\n  }\r\n});\r\n\r\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\r\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\r\n\r\n  if (!Clazz) {\r\n    return;\r\n  }\r\n\r\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\r\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\r\n}\r\n\r\nfunction disposeAxisPointer(axisView, ecModel, api) {\r\n  var axisPointer = axisView._axisPointer;\r\n  axisPointer && axisPointer.dispose(ecModel, api);\r\n  axisView._axisPointer = null;\r\n}\r\n\r\nvar axisPointerClazz = [];\r\n\r\nAxisView.registerAxisPointerClass = function (type, clazz) {\r\n  axisPointerClazz[type] = clazz;\r\n};\r\n\r\nAxisView.getAxisPointerClass = function (type) {\r\n  return type && axisPointerClazz[type];\r\n};\r\n\r\nvar _default = AxisView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar AxisBuilder = require(\"./AxisBuilder\");\r\n\r\nvar AxisView = require(\"./AxisView\");\r\n\r\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\r\n\r\nvar _axisSplitHelper = require(\"./axisSplitHelper\");\r\n\r\nvar rectCoordAxisBuildSplitArea = _axisSplitHelper.rectCoordAxisBuildSplitArea;\r\nvar rectCoordAxisHandleRemove = _axisSplitHelper.rectCoordAxisHandleRemove;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\r\nvar selfBuilderAttrs = ['splitArea', 'splitLine', 'minorSplitLine'];\r\nvar CartesianAxisView = AxisView.extend({\r\n  type: 'cartesianAxis',\r\n  axisPointerClass: 'CartesianAxisPointer',\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (axisModel, ecModel, api, payload) {\r\n    this.group.removeAll();\r\n    var oldAxisGroup = this._axisGroup;\r\n    this._axisGroup = new graphic.Group();\r\n    this.group.add(this._axisGroup);\r\n\r\n    if (!axisModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var gridModel = axisModel.getCoordSysModel();\r\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\r\n    var axisBuilder = new AxisBuilder(axisModel, layout);\r\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n\r\n    this._axisGroup.add(axisBuilder.getGroup());\r\n\r\n    zrUtil.each(selfBuilderAttrs, function (name) {\r\n      if (axisModel.get(name + '.show')) {\r\n        this['_' + name](axisModel, gridModel);\r\n      }\r\n    }, this);\r\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\r\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\r\n  },\r\n  remove: function () {\r\n    rectCoordAxisHandleRemove(this);\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n   * @private\r\n   */\r\n  _splitLine: function (axisModel, gridModel) {\r\n    var axis = axisModel.axis;\r\n\r\n    if (axis.scale.isBlank()) {\r\n      return;\r\n    }\r\n\r\n    var splitLineModel = axisModel.getModel('splitLine');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var lineColors = lineStyleModel.get('color');\r\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\r\n    var gridRect = gridModel.coordinateSystem.getRect();\r\n    var isHorizontal = axis.isHorizontal();\r\n    var lineCount = 0;\r\n    var ticksCoords = axis.getTicksCoords({\r\n      tickModel: splitLineModel\r\n    });\r\n    var p1 = [];\r\n    var p2 = [];\r\n    var lineStyle = lineStyleModel.getLineStyle();\r\n\r\n    for (var i = 0; i < ticksCoords.length; i++) {\r\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\r\n\r\n      if (isHorizontal) {\r\n        p1[0] = tickCoord;\r\n        p1[1] = gridRect.y;\r\n        p2[0] = tickCoord;\r\n        p2[1] = gridRect.y + gridRect.height;\r\n      } else {\r\n        p1[0] = gridRect.x;\r\n        p1[1] = tickCoord;\r\n        p2[0] = gridRect.x + gridRect.width;\r\n        p2[1] = tickCoord;\r\n      }\r\n\r\n      var colorIndex = lineCount++ % lineColors.length;\r\n      var tickValue = ticksCoords[i].tickValue;\r\n\r\n      this._axisGroup.add(new graphic.Line({\r\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\r\n        subPixelOptimize: true,\r\n        shape: {\r\n          x1: p1[0],\r\n          y1: p1[1],\r\n          x2: p2[0],\r\n          y2: p2[1]\r\n        },\r\n        style: zrUtil.defaults({\r\n          stroke: lineColors[colorIndex]\r\n        }, lineStyle),\r\n        silent: true\r\n      }));\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n   * @private\r\n   */\r\n  _minorSplitLine: function (axisModel, gridModel) {\r\n    var axis = axisModel.axis;\r\n    var minorSplitLineModel = axisModel.getModel('minorSplitLine');\r\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\r\n    var gridRect = gridModel.coordinateSystem.getRect();\r\n    var isHorizontal = axis.isHorizontal();\r\n    var minorTicksCoords = axis.getMinorTicksCoords();\r\n\r\n    if (!minorTicksCoords.length) {\r\n      return;\r\n    }\r\n\r\n    var p1 = [];\r\n    var p2 = [];\r\n    var lineStyle = lineStyleModel.getLineStyle();\r\n\r\n    for (var i = 0; i < minorTicksCoords.length; i++) {\r\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\r\n        var tickCoord = axis.toGlobalCoord(minorTicksCoords[i][k].coord);\r\n\r\n        if (isHorizontal) {\r\n          p1[0] = tickCoord;\r\n          p1[1] = gridRect.y;\r\n          p2[0] = tickCoord;\r\n          p2[1] = gridRect.y + gridRect.height;\r\n        } else {\r\n          p1[0] = gridRect.x;\r\n          p1[1] = tickCoord;\r\n          p2[0] = gridRect.x + gridRect.width;\r\n          p2[1] = tickCoord;\r\n        }\r\n\r\n        this._axisGroup.add(new graphic.Line({\r\n          anid: 'minor_line_' + minorTicksCoords[i][k].tickValue,\r\n          subPixelOptimize: true,\r\n          shape: {\r\n            x1: p1[0],\r\n            y1: p1[1],\r\n            x2: p2[0],\r\n            y2: p2[1]\r\n          },\r\n          style: lineStyle,\r\n          silent: true\r\n        }));\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n   * @private\r\n   */\r\n  _splitArea: function (axisModel, gridModel) {\r\n    rectCoordAxisBuildSplitArea(this, this._axisGroup, axisModel, gridModel);\r\n  }\r\n});\r\nCartesianAxisView.extend({\r\n  type: 'xAxis'\r\n});\r\nCartesianAxisView.extend({\r\n  type: 'yAxis'\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar AxisBuilder = require(\"./AxisBuilder\");\r\n\r\nvar BrushController = require(\"../helper/BrushController\");\r\n\r\nvar brushHelper = require(\"../helper/brushHelper\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\r\nvar AxisView = echarts.extendComponentView({\r\n  type: 'parallelAxis',\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (ecModel, api) {\r\n    AxisView.superApply(this, 'init', arguments);\r\n    /**\r\n     * @type {module:echarts/component/helper/BrushController}\r\n     */\r\n\r\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (axisModel, ecModel, api, payload) {\r\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\r\n      return;\r\n    }\r\n\r\n    this.axisModel = axisModel;\r\n    this.api = api;\r\n    this.group.removeAll();\r\n    var oldAxisGroup = this._axisGroup;\r\n    this._axisGroup = new graphic.Group();\r\n    this.group.add(this._axisGroup);\r\n\r\n    if (!axisModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\r\n    var coordSys = coordSysModel.coordinateSystem;\r\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\r\n    var areaWidth = areaSelectStyle.width;\r\n    var dim = axisModel.axis.dim;\r\n    var axisLayout = coordSys.getAxisLayout(dim);\r\n    var builderOpt = zrUtil.extend({\r\n      strokeContainThreshold: areaWidth\r\n    }, axisLayout);\r\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\r\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\r\n\r\n    this._axisGroup.add(axisBuilder.getGroup());\r\n\r\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\r\n\r\n    var animationModel = payload && payload.animation === false ? null : axisModel;\r\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\r\n  },\r\n  // /**\r\n  //  * @override\r\n  //  */\r\n  // updateVisual: function (axisModel, ecModel, api, payload) {\r\n  //     this._brushController && this._brushController\r\n  //         .updateCovers(getCoverInfoList(axisModel));\r\n  // },\r\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\r\n    // After filtering, axis may change, select area needs to be update.\r\n    var extent = axisModel.axis.getExtent();\r\n    var extentLen = extent[1] - extent[0];\r\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\r\n    // width/height might be negative, which will be\r\n    // normalized in BoundingRect.\r\n\r\n    var rect = graphic.BoundingRect.create({\r\n      x: extent[0],\r\n      y: -areaWidth / 2,\r\n      width: extentLen,\r\n      height: areaWidth\r\n    });\r\n    rect.x -= extra;\r\n    rect.width += 2 * extra;\r\n\r\n    this._brushController.mount({\r\n      enableGlobalPan: true,\r\n      rotation: builderOpt.rotation,\r\n      position: builderOpt.position\r\n    }).setPanels([{\r\n      panelId: 'pl',\r\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\r\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\r\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\r\n    }]).enableBrush({\r\n      brushType: 'lineX',\r\n      brushStyle: areaSelectStyle,\r\n      removeOnClick: true\r\n    }).updateCovers(getCoverInfoList(axisModel));\r\n  },\r\n  _onBrush: function (coverInfoList, opt) {\r\n    // Do not cache these object, because the mey be changed.\r\n    var axisModel = this.axisModel;\r\n    var axis = axisModel.axis;\r\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\r\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\r\n    }); // If realtime is true, action is not dispatched on drag end, because\r\n    // the drag end emits the same params with the last drag move event,\r\n    // and may have some delay when using touch pad.\r\n\r\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\r\n      // jshint ignore:line\r\n      this.api.dispatchAction({\r\n        type: 'axisAreaSelect',\r\n        parallelAxisId: axisModel.id,\r\n        intervals: intervals\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: function () {\r\n    this._brushController.dispose();\r\n  }\r\n});\r\n\r\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\r\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\r\n    mainType: 'parallelAxis',\r\n    query: payload\r\n  })[0] === axisModel;\r\n}\r\n\r\nfunction getCoverInfoList(axisModel) {\r\n  var axis = axisModel.axis;\r\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\r\n    return {\r\n      brushType: 'lineX',\r\n      panelId: 'pl',\r\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\r\n    };\r\n  });\r\n}\r\n\r\nfunction getCoordSysModel(axisModel, ecModel) {\r\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\r\n}\r\n\r\nvar _default = AxisView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar AxisBuilder = require(\"./AxisBuilder\");\r\n\r\nvar AxisView = require(\"./AxisView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\r\nvar selfBuilderAttrs = ['splitLine', 'splitArea', 'minorSplitLine'];\r\n\r\nvar _default = AxisView.extend({\r\n  type: 'radiusAxis',\r\n  axisPointerClass: 'PolarAxisPointer',\r\n  render: function (radiusAxisModel, ecModel) {\r\n    this.group.removeAll();\r\n\r\n    if (!radiusAxisModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var radiusAxis = radiusAxisModel.axis;\r\n    var polar = radiusAxis.polar;\r\n    var angleAxis = polar.getAngleAxis();\r\n    var ticksCoords = radiusAxis.getTicksCoords();\r\n    var minorTicksCoords = radiusAxis.getMinorTicksCoords();\r\n    var axisAngle = angleAxis.getExtent()[0];\r\n    var radiusExtent = radiusAxis.getExtent();\r\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\r\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\r\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n    this.group.add(axisBuilder.getGroup());\r\n    zrUtil.each(selfBuilderAttrs, function (name) {\r\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\r\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords);\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\r\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var lineColors = lineStyleModel.get('color');\r\n    var lineCount = 0;\r\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\r\n    var splitLines = [];\r\n\r\n    for (var i = 0; i < ticksCoords.length; i++) {\r\n      var colorIndex = lineCount++ % lineColors.length;\r\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\r\n      splitLines[colorIndex].push(new graphic.Circle({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r: ticksCoords[i].coord\r\n        }\r\n      }));\r\n    } // Simple optimization\r\n    // Batching the lines if color are the same\r\n\r\n\r\n    for (var i = 0; i < splitLines.length; i++) {\r\n      this.group.add(graphic.mergePath(splitLines[i], {\r\n        style: zrUtil.defaults({\r\n          stroke: lineColors[i % lineColors.length],\r\n          fill: null\r\n        }, lineStyleModel.getLineStyle()),\r\n        silent: true\r\n      }));\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _minorSplitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords) {\r\n    if (!minorTicksCoords.length) {\r\n      return;\r\n    }\r\n\r\n    var minorSplitLineModel = radiusAxisModel.getModel('minorSplitLine');\r\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\r\n    var lines = [];\r\n\r\n    for (var i = 0; i < minorTicksCoords.length; i++) {\r\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\r\n        lines.push(new graphic.Circle({\r\n          shape: {\r\n            cx: polar.cx,\r\n            cy: polar.cy,\r\n            r: minorTicksCoords[i][k].coord\r\n          }\r\n        }));\r\n      }\r\n    }\r\n\r\n    this.group.add(graphic.mergePath(lines, {\r\n      style: zrUtil.defaults({\r\n        fill: null\r\n      }, lineStyleModel.getLineStyle()),\r\n      silent: true\r\n    }));\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\r\n    if (!ticksCoords.length) {\r\n      return;\r\n    }\r\n\r\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\r\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n    var areaColors = areaStyleModel.get('color');\r\n    var lineCount = 0;\r\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\r\n    var splitAreas = [];\r\n    var prevRadius = ticksCoords[0].coord;\r\n\r\n    for (var i = 1; i < ticksCoords.length; i++) {\r\n      var colorIndex = lineCount++ % areaColors.length;\r\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\r\n      splitAreas[colorIndex].push(new graphic.Sector({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r0: prevRadius,\r\n          r: ticksCoords[i].coord,\r\n          startAngle: 0,\r\n          endAngle: Math.PI * 2\r\n        },\r\n        silent: true\r\n      }));\r\n      prevRadius = ticksCoords[i].coord;\r\n    } // Simple optimization\r\n    // Batching the lines if color are the same\r\n\r\n\r\n    for (var i = 0; i < splitAreas.length; i++) {\r\n      this.group.add(graphic.mergePath(splitAreas[i], {\r\n        style: zrUtil.defaults({\r\n          fill: areaColors[i % areaColors.length]\r\n        }, areaStyleModel.getAreaStyle()),\r\n        silent: true\r\n      }));\r\n    }\r\n  }\r\n});\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\r\n  return {\r\n    position: [polar.cx, polar.cy],\r\n    rotation: axisAngle / 180 * Math.PI,\r\n    labelDirection: -1,\r\n    tickDirection: -1,\r\n    nameDirection: 1,\r\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\r\n    // Over splitLine and splitArea\r\n    z2: 1\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar AxisBuilder = require(\"./AxisBuilder\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\r\n\r\nvar AxisView = require(\"./AxisView\");\r\n\r\nvar _axisSplitHelper = require(\"./axisSplitHelper\");\r\n\r\nvar rectCoordAxisBuildSplitArea = _axisSplitHelper.rectCoordAxisBuildSplitArea;\r\nvar rectCoordAxisHandleRemove = _axisSplitHelper.rectCoordAxisHandleRemove;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\r\nvar selfBuilderAttrs = ['splitArea', 'splitLine'];\r\nvar SingleAxisView = AxisView.extend({\r\n  type: 'singleAxis',\r\n  axisPointerClass: 'SingleAxisPointer',\r\n  render: function (axisModel, ecModel, api, payload) {\r\n    var group = this.group;\r\n    group.removeAll();\r\n    var oldAxisGroup = this._axisGroup;\r\n    this._axisGroup = new graphic.Group();\r\n    var layout = singleAxisHelper.layout(axisModel);\r\n    var axisBuilder = new AxisBuilder(axisModel, layout);\r\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n    group.add(this._axisGroup);\r\n    group.add(axisBuilder.getGroup());\r\n    zrUtil.each(selfBuilderAttrs, function (name) {\r\n      if (axisModel.get(name + '.show')) {\r\n        this['_' + name](axisModel);\r\n      }\r\n    }, this);\r\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\r\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\r\n  },\r\n  remove: function () {\r\n    rectCoordAxisHandleRemove(this);\r\n  },\r\n  _splitLine: function (axisModel) {\r\n    var axis = axisModel.axis;\r\n\r\n    if (axis.scale.isBlank()) {\r\n      return;\r\n    }\r\n\r\n    var splitLineModel = axisModel.getModel('splitLine');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var lineWidth = lineStyleModel.get('width');\r\n    var lineColors = lineStyleModel.get('color');\r\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\r\n    var gridRect = axisModel.coordinateSystem.getRect();\r\n    var isHorizontal = axis.isHorizontal();\r\n    var splitLines = [];\r\n    var lineCount = 0;\r\n    var ticksCoords = axis.getTicksCoords({\r\n      tickModel: splitLineModel\r\n    });\r\n    var p1 = [];\r\n    var p2 = [];\r\n\r\n    for (var i = 0; i < ticksCoords.length; ++i) {\r\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\r\n\r\n      if (isHorizontal) {\r\n        p1[0] = tickCoord;\r\n        p1[1] = gridRect.y;\r\n        p2[0] = tickCoord;\r\n        p2[1] = gridRect.y + gridRect.height;\r\n      } else {\r\n        p1[0] = gridRect.x;\r\n        p1[1] = tickCoord;\r\n        p2[0] = gridRect.x + gridRect.width;\r\n        p2[1] = tickCoord;\r\n      }\r\n\r\n      var colorIndex = lineCount++ % lineColors.length;\r\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\r\n      splitLines[colorIndex].push(new graphic.Line({\r\n        subPixelOptimize: true,\r\n        shape: {\r\n          x1: p1[0],\r\n          y1: p1[1],\r\n          x2: p2[0],\r\n          y2: p2[1]\r\n        },\r\n        style: {\r\n          lineWidth: lineWidth\r\n        },\r\n        silent: true\r\n      }));\r\n    }\r\n\r\n    for (var i = 0; i < splitLines.length; ++i) {\r\n      this.group.add(graphic.mergePath(splitLines[i], {\r\n        style: {\r\n          stroke: lineColors[i % lineColors.length],\r\n          lineDash: lineStyleModel.getLineDash(lineWidth),\r\n          lineWidth: lineWidth\r\n        },\r\n        silent: true\r\n      }));\r\n    }\r\n  },\r\n  _splitArea: function (axisModel) {\r\n    rectCoordAxisBuildSplitArea(this, this._axisGroup, axisModel, axisModel);\r\n  }\r\n});\r\nvar _default = SingleAxisView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\r\n  var axis = axisModel.axis;\r\n\r\n  if (axis.scale.isBlank()) {\r\n    return;\r\n  }\r\n\r\n  var splitAreaModel = axisModel.getModel('splitArea');\r\n  var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n  var areaColors = areaStyleModel.get('color');\r\n  var gridRect = gridModel.coordinateSystem.getRect();\r\n  var ticksCoords = axis.getTicksCoords({\r\n    tickModel: splitAreaModel,\r\n    clamp: true\r\n  });\r\n\r\n  if (!ticksCoords.length) {\r\n    return;\r\n  } // For Making appropriate splitArea animation, the color and anid\r\n  // should be corresponding to previous one if possible.\r\n\r\n\r\n  var areaColorsLen = areaColors.length;\r\n  var lastSplitAreaColors = axisView.__splitAreaColors;\r\n  var newSplitAreaColors = zrUtil.createHashMap();\r\n  var colorIndex = 0;\r\n\r\n  if (lastSplitAreaColors) {\r\n    for (var i = 0; i < ticksCoords.length; i++) {\r\n      var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\r\n\r\n      if (cIndex != null) {\r\n        colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  var prev = axis.toGlobalCoord(ticksCoords[0].coord);\r\n  var areaStyle = areaStyleModel.getAreaStyle();\r\n  areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\r\n\r\n  for (var i = 1; i < ticksCoords.length; i++) {\r\n    var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\r\n    var x;\r\n    var y;\r\n    var width;\r\n    var height;\r\n\r\n    if (axis.isHorizontal()) {\r\n      x = prev;\r\n      y = gridRect.y;\r\n      width = tickCoord - x;\r\n      height = gridRect.height;\r\n      prev = x + width;\r\n    } else {\r\n      x = gridRect.x;\r\n      y = prev;\r\n      width = gridRect.width;\r\n      height = tickCoord - y;\r\n      prev = y + height;\r\n    }\r\n\r\n    var tickValue = ticksCoords[i - 1].tickValue;\r\n    tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\r\n    axisGroup.add(new graphic.Rect({\r\n      anid: tickValue != null ? 'area_' + tickValue : null,\r\n      shape: {\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height\r\n      },\r\n      style: zrUtil.defaults({\r\n        fill: areaColors[colorIndex]\r\n      }, areaStyle),\r\n      silent: true\r\n    }));\r\n    colorIndex = (colorIndex + 1) % areaColorsLen;\r\n  }\r\n\r\n  axisView.__splitAreaColors = newSplitAreaColors;\r\n}\r\n\r\nfunction rectCoordAxisHandleRemove(axisView) {\r\n  axisView.__splitAreaColors = null;\r\n}\r\n\r\nexports.rectCoordAxisBuildSplitArea = rectCoordAxisBuildSplitArea;\r\nexports.rectCoordAxisHandleRemove = rectCoordAxisHandleRemove;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @payload\r\n * @property {string} parallelAxisId\r\n * @property {Array.<Array.<number>>} intervals\r\n */\r\nvar actionInfo = {\r\n  type: 'axisAreaSelect',\r\n  event: 'axisAreaSelected' // update: 'updateVisual'\r\n\r\n};\r\necharts.registerAction(actionInfo, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'parallelAxis',\r\n    query: payload\r\n  }, function (parallelAxisModel) {\r\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\r\n  });\r\n});\r\n/**\r\n * @payload\r\n */\r\n\r\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'parallel',\r\n    query: payload\r\n  }, function (parallelModel) {\r\n    parallelModel.setAxisExpand(payload);\r\n  });\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar preprocessor = require(\"./brush/preprocessor\");\r\n\r\nrequire(\"./brush/visualEncoding\");\r\n\r\nrequire(\"./brush/BrushModel\");\r\n\r\nrequire(\"./brush/BrushView\");\r\n\r\nrequire(\"./brush/brushAction\");\r\n\r\nrequire(\"./toolbox/feature/Brush\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Brush component entry\r\n */\r\necharts.registerPreprocessor(preprocessor);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar visualSolution = require(\"../../visual/visualSolution\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\r\nvar BrushModel = echarts.extendComponentModel({\r\n  type: 'brush',\r\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    // inBrush: null,\r\n    // outOfBrush: null,\r\n    toolbox: null,\r\n    // Default value see preprocessor.\r\n    brushLink: null,\r\n    // Series indices array, broadcast using dataIndex.\r\n    // or 'all', which means all series. 'none' or null means no series.\r\n    seriesIndex: 'all',\r\n    // seriesIndex array, specify series controlled by this brush component.\r\n    geoIndex: null,\r\n    //\r\n    xAxisIndex: null,\r\n    yAxisIndex: null,\r\n    brushType: 'rect',\r\n    // Default brushType, see BrushController.\r\n    brushMode: 'single',\r\n    // Default brushMode, 'single' or 'multiple'\r\n    transformable: true,\r\n    // Default transformable.\r\n    brushStyle: {\r\n      // Default brushStyle\r\n      borderWidth: 1,\r\n      color: 'rgba(120,140,180,0.3)',\r\n      borderColor: 'rgba(120,140,180,0.8)'\r\n    },\r\n    throttleType: 'fixRate',\r\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\r\n    // If null, no throttle. Valid only in the first brush component\r\n    throttleDelay: 0,\r\n    // Unit: ms, 0 means every event will be triggered.\r\n    // FIXME\r\n    // 试验效果\r\n    removeOnClick: true,\r\n    z: 10000\r\n  },\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {Array.<Object>}\r\n   */\r\n  areas: [],\r\n\r\n  /**\r\n   * Current activated brush type.\r\n   * If null, brush is inactived.\r\n   * see module:echarts/component/helper/BrushController\r\n   * @readOnly\r\n   * @type {string}\r\n   */\r\n  brushType: null,\r\n\r\n  /**\r\n   * Current brush opt.\r\n   * see module:echarts/component/helper/BrushController\r\n   * @readOnly\r\n   * @type {Object}\r\n   */\r\n  brushOption: {},\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {Array.<Object>}\r\n   */\r\n  coordInfoList: [],\r\n  optionUpdated: function (newOption, isInit) {\r\n    var thisOption = this.option;\r\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\r\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\r\n\r\n    thisOption.outOfBrush = thisOption.outOfBrush || {\r\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\r\n    };\r\n\r\n    if (!inBrush.hasOwnProperty('liftZ')) {\r\n      // Bigger than the highlight z lift, otherwise it will\r\n      // be effected by the highlight z when brush.\r\n      inBrush.liftZ = 5;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * If ranges is null/undefined, range state remain.\r\n   *\r\n   * @param {Array.<Object>} [ranges]\r\n   */\r\n  setAreas: function (areas) {\r\n    // If ranges is null/undefined, range state remain.\r\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\r\n    // set but just want to get the current brush select info from a `brush` event.\r\n    if (!areas) {\r\n      return;\r\n    }\r\n\r\n    this.areas = zrUtil.map(areas, function (area) {\r\n      return generateBrushOption(this.option, area);\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * see module:echarts/component/helper/BrushController\r\n   * @param {Object} brushOption\r\n   */\r\n  setBrushOption: function (brushOption) {\r\n    this.brushOption = generateBrushOption(this.option, brushOption);\r\n    this.brushType = this.brushOption.brushType;\r\n  }\r\n});\r\n\r\nfunction generateBrushOption(option, brushOption) {\r\n  return zrUtil.merge({\r\n    brushType: option.brushType,\r\n    brushMode: option.brushMode,\r\n    transformable: option.transformable,\r\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\r\n    removeOnClick: option.removeOnClick,\r\n    z: option.z\r\n  }, brushOption, true);\r\n}\r\n\r\nvar _default = BrushModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar BrushController = require(\"../helper/BrushController\");\r\n\r\nvar _visualEncoding = require(\"./visualEncoding\");\r\n\r\nvar layoutCovers = _visualEncoding.layoutCovers;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendComponentView({\r\n  type: 'brush',\r\n  init: function (ecModel, api) {\r\n    /**\r\n     * @readOnly\r\n     * @type {module:echarts/model/Global}\r\n     */\r\n    this.ecModel = ecModel;\r\n    /**\r\n     * @readOnly\r\n     * @type {module:echarts/ExtensionAPI}\r\n     */\r\n\r\n    this.api = api;\r\n    /**\r\n     * @readOnly\r\n     * @type {module:echarts/component/brush/BrushModel}\r\n     */\r\n\r\n    this.model;\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/component/helper/BrushController}\r\n     */\r\n\r\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (brushModel) {\r\n    this.model = brushModel;\r\n    return updateController.apply(this, arguments);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  updateTransform: function (brushModel, ecModel) {\r\n    // PENDING: `updateTransform` is a little tricky, whose layout need\r\n    // to be calculate mandatorily and other stages will not be performed.\r\n    // Take care the correctness of the logic. See #11754 .\r\n    layoutCovers(ecModel);\r\n    return updateController.apply(this, arguments);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  updateView: updateController,\r\n  // /**\r\n  //  * @override\r\n  //  */\r\n  // updateLayout: updateController,\r\n  // /**\r\n  //  * @override\r\n  //  */\r\n  // updateVisual: updateController,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: function () {\r\n    this._brushController.dispose();\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _onBrush: function (areas, opt) {\r\n    var modelId = this.model.id;\r\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\r\n    // emits the same params with the last drag move event, and\r\n    // may have some delay when using touch pad, which makes\r\n    // animation not smooth (when using debounce).\r\n\r\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\r\n      type: 'brush',\r\n      brushId: modelId,\r\n      areas: zrUtil.clone(areas),\r\n      $from: modelId\r\n    });\r\n    opt.isEnd && this.api.dispatchAction({\r\n      type: 'brushEnd',\r\n      brushId: modelId,\r\n      areas: zrUtil.clone(areas),\r\n      $from: modelId\r\n    });\r\n  }\r\n});\r\n\r\nfunction updateController(brushModel, ecModel, api, payload) {\r\n  // Do not update controller when drawing.\r\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * payload: {\r\n *      brushIndex: number, or,\r\n *      brushId: string, or,\r\n *      brushName: string,\r\n *      globalRanges: Array\r\n * }\r\n */\r\necharts.registerAction({\r\n  type: 'brush',\r\n  event: 'brush'\r\n  /*, update: 'updateView' */\r\n\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'brush',\r\n    query: payload\r\n  }, function (brushModel) {\r\n    brushModel.setAreas(payload.areas);\r\n  });\r\n});\r\n/**\r\n * payload: {\r\n *      brushComponents: [\r\n *          {\r\n *              brushId,\r\n *              brushIndex,\r\n *              brushName,\r\n *              series: [\r\n *                  {\r\n *                      seriesId,\r\n *                      seriesIndex,\r\n *                      seriesName,\r\n *                      rawIndices: [21, 34, ...]\r\n *                  },\r\n *                  ...\r\n *              ]\r\n *          },\r\n *          ...\r\n *      ]\r\n * }\r\n */\r\n\r\necharts.registerAction({\r\n  type: 'brushSelect',\r\n  event: 'brushSelected',\r\n  update: 'none'\r\n}, function () {});\r\necharts.registerAction({\r\n  type: 'brushEnd',\r\n  event: 'brushEnd',\r\n  update: 'none'\r\n}, function () {});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\r\n\r\nfunction _default(option, isNew) {\r\n  var brushComponents = option && option.brush;\r\n\r\n  if (!zrUtil.isArray(brushComponents)) {\r\n    brushComponents = brushComponents ? [brushComponents] : [];\r\n  }\r\n\r\n  if (!brushComponents.length) {\r\n    return;\r\n  }\r\n\r\n  var brushComponentSpecifiedBtns = [];\r\n  zrUtil.each(brushComponents, function (brushOpt) {\r\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\r\n\r\n    if (tbs instanceof Array) {\r\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\r\n    }\r\n  });\r\n  var toolbox = option && option.toolbox;\r\n\r\n  if (zrUtil.isArray(toolbox)) {\r\n    toolbox = toolbox[0];\r\n  }\r\n\r\n  if (!toolbox) {\r\n    toolbox = {\r\n      feature: {}\r\n    };\r\n    option.toolbox = [toolbox];\r\n  }\r\n\r\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\r\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\r\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\r\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\r\n  removeDuplicate(brushTypes);\r\n\r\n  if (isNew && !brushTypes.length) {\r\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\r\n  }\r\n}\r\n\r\nfunction removeDuplicate(arr) {\r\n  var map = {};\r\n  zrUtil.each(arr, function (val) {\r\n    map[val] = 1;\r\n  });\r\n  arr.length = 0;\r\n  zrUtil.each(map, function (flag, val) {\r\n    arr.push(val);\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar _graphic = require(\"../../util/graphic\");\r\n\r\nvar linePolygonIntersect = _graphic.linePolygonIntersect;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\r\n// Key of the second level is chart element type: `point`, `rect`.\r\n// See moudule:echarts/component/helper/BrushController\r\n// function param:\r\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\r\n//      {Object} selectors {point: selector, rect: selector, ...}\r\n//      {Object} area {range: [[], [], ..], boudingRect}\r\n// function return:\r\n//      {boolean} Whether in the given brush.\r\nvar selector = {\r\n  lineX: getLineSelectors(0),\r\n  lineY: getLineSelectors(1),\r\n  rect: {\r\n    point: function (itemLayout, selectors, area) {\r\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\r\n    },\r\n    rect: function (itemLayout, selectors, area) {\r\n      return itemLayout && area.boundingRect.intersect(itemLayout);\r\n    }\r\n  },\r\n  polygon: {\r\n    point: function (itemLayout, selectors, area) {\r\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\r\n    },\r\n    rect: function (itemLayout, selectors, area) {\r\n      var points = area.range;\r\n\r\n      if (!itemLayout || points.length <= 1) {\r\n        return false;\r\n      }\r\n\r\n      var x = itemLayout.x;\r\n      var y = itemLayout.y;\r\n      var width = itemLayout.width;\r\n      var height = itemLayout.height;\r\n      var p = points[0];\r\n\r\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || linePolygonIntersect(x, y, x + width, y, points) || linePolygonIntersect(x, y, x, y + height, points) || linePolygonIntersect(x + width, y, x + width, y + height, points) || linePolygonIntersect(x, y + height, x + width, y + height, points)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getLineSelectors(xyIndex) {\r\n  var xy = ['x', 'y'];\r\n  var wh = ['width', 'height'];\r\n  return {\r\n    point: function (itemLayout, selectors, area) {\r\n      if (itemLayout) {\r\n        var range = area.range;\r\n        var p = itemLayout[xyIndex];\r\n        return inLineRange(p, range);\r\n      }\r\n    },\r\n    rect: function (itemLayout, selectors, area) {\r\n      if (itemLayout) {\r\n        var range = area.range;\r\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\r\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\r\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfunction inLineRange(p, range) {\r\n  return range[0] <= p && p <= range[1];\r\n}\r\n\r\nvar _default = selector;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar visualSolution = require(\"../../visual/visualSolution\");\r\n\r\nvar selector = require(\"./selector\");\r\n\r\nvar throttleUtil = require(\"../../util/throttle\");\r\n\r\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\r\nvar DISPATCH_METHOD = '__ecBrushSelect';\r\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\r\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\r\n/**\r\n * Layout for visual, the priority higher than other layout, and before brush visual.\r\n */\r\n\r\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel) {\r\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\r\n      brushType: false\r\n    });\r\n  });\r\n  layoutCovers(ecModel);\r\n});\r\n\r\nfunction layoutCovers(ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel) {\r\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\r\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\r\n  });\r\n}\r\n/**\r\n * Register the visual encoding if this modules required.\r\n */\r\n\r\n\r\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\r\n  var brushSelected = [];\r\n  var throttleType;\r\n  var throttleDelay;\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel, brushIndex) {\r\n    var thisBrushSelected = {\r\n      brushId: brushModel.id,\r\n      brushIndex: brushIndex,\r\n      brushName: brushModel.name,\r\n      areas: zrUtil.clone(brushModel.areas),\r\n      selected: []\r\n    }; // Every brush component exists in event params, convenient\r\n    // for user to find by index.\r\n\r\n    brushSelected.push(thisBrushSelected);\r\n    var brushOption = brushModel.option;\r\n    var brushLink = brushOption.brushLink;\r\n    var linkedSeriesMap = [];\r\n    var selectedDataIndexForLink = [];\r\n    var rangeInfoBySeries = [];\r\n    var hasBrushExists = 0;\r\n\r\n    if (!brushIndex) {\r\n      // Only the first throttle setting works.\r\n      throttleType = brushOption.throttleType;\r\n      throttleDelay = brushOption.throttleDelay;\r\n    } // Add boundingRect and selectors to range.\r\n\r\n\r\n    var areas = zrUtil.map(brushModel.areas, function (area) {\r\n      return bindSelector(zrUtil.defaults({\r\n        boundingRect: boundingRectBuilders[area.brushType](area)\r\n      }, area));\r\n    });\r\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\r\n      mappingOption.mappingMethod = 'fixed';\r\n    });\r\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\r\n      linkedSeriesMap[seriesIndex] = 1;\r\n    });\r\n\r\n    function linkOthers(seriesIndex) {\r\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\r\n    } // If no supported brush or no brush on the series,\r\n    // all visuals should be in original state.\r\n\r\n\r\n    function brushed(rangeInfoList) {\r\n      return !!rangeInfoList.length;\r\n    }\r\n    /**\r\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\r\n     *\r\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\r\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\r\n     *                └!hasBrushExist┘                                              └nothing.\r\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\r\n     *                └!hasBrushExist┘                                              └nothing.\r\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\r\n     *   !brushed┘                                                                  └nothing.\r\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\r\n     */\r\n    // Step A\r\n\r\n\r\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\r\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\r\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\r\n    });\r\n\r\n    function stepAParallel(seriesModel, seriesIndex) {\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      hasBrushExists |= coordSys.hasAxisBrushed();\r\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\r\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\r\n      });\r\n    }\r\n\r\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\r\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\r\n\r\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\r\n        return;\r\n      }\r\n\r\n      zrUtil.each(areas, function (area) {\r\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\r\n        hasBrushExists |= brushed(rangeInfoList);\r\n      });\r\n\r\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\r\n        var data = seriesModel.getData();\r\n        data.each(function (dataIndex) {\r\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\r\n            selectedDataIndexForLink[dataIndex] = 1;\r\n          }\r\n        });\r\n      }\r\n    } // Step B\r\n\r\n\r\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\r\n      var seriesBrushSelected = {\r\n        seriesId: seriesModel.id,\r\n        seriesIndex: seriesIndex,\r\n        seriesName: seriesModel.name,\r\n        dataIndex: []\r\n      }; // Every series exists in event params, convenient\r\n      // for user to find series by seriesIndex.\r\n\r\n      thisBrushSelected.selected.push(seriesBrushSelected);\r\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\r\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\r\n      var data = seriesModel.getData();\r\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\r\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\r\n      } : function (dataIndex) {\r\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\r\n      }; // If no supported brush or no brush, all visuals are in original state.\r\n\r\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\r\n    });\r\n  });\r\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\r\n});\r\n\r\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\r\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\r\n  // triggered when do `setOption` in event listener, which we do not find\r\n  // satisfactory way to solve yet. Some considered resolutions:\r\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\r\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\r\n  // also detect value changes in selected data) might bring complexity or fragility.\r\n  // (b) Use spectial param like `silent` to suppress event triggering.\r\n  // But such kind of volatile param may be weird in `setOption`.\r\n  if (!payload) {\r\n    return;\r\n  }\r\n\r\n  var zr = api.getZr();\r\n\r\n  if (zr[DISPATCH_FLAG]) {\r\n    return;\r\n  }\r\n\r\n  if (!zr[DISPATCH_METHOD]) {\r\n    zr[DISPATCH_METHOD] = doDispatch;\r\n  }\r\n\r\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\r\n  fn(api, brushSelected);\r\n}\r\n\r\nfunction doDispatch(api, brushSelected) {\r\n  if (!api.isDisposed()) {\r\n    var zr = api.getZr();\r\n    zr[DISPATCH_FLAG] = true;\r\n    api.dispatchAction({\r\n      type: 'brushSelect',\r\n      batch: brushSelected\r\n    });\r\n    zr[DISPATCH_FLAG] = false;\r\n  }\r\n}\r\n\r\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\r\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\r\n    var area = rangeInfoList[i];\r\n\r\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getSelectorsByBrushType(seriesModel) {\r\n  var brushSelector = seriesModel.brushSelector;\r\n\r\n  if (zrUtil.isString(brushSelector)) {\r\n    var sels = [];\r\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\r\n      sels[brushType] = function (dataIndex, data, selectors, area) {\r\n        var itemLayout = data.getItemLayout(dataIndex);\r\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\r\n      };\r\n    });\r\n    return sels;\r\n  } else if (zrUtil.isFunction(brushSelector)) {\r\n    var bSelector = {};\r\n    zrUtil.each(selector, function (sel, brushType) {\r\n      bSelector[brushType] = brushSelector;\r\n    });\r\n    return bSelector;\r\n  }\r\n\r\n  return brushSelector;\r\n}\r\n\r\nfunction brushModelNotControll(brushModel, seriesIndex) {\r\n  var seriesIndices = brushModel.option.seriesIndex;\r\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\r\n}\r\n\r\nfunction bindSelector(area) {\r\n  var selectors = area.selectors = {};\r\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\r\n    // Do not use function binding or curry for performance.\r\n    selectors[elType] = function (itemLayout) {\r\n      return selFn(itemLayout, selectors, area);\r\n    };\r\n  });\r\n  return area;\r\n}\r\n\r\nvar boundingRectBuilders = {\r\n  lineX: zrUtil.noop,\r\n  lineY: zrUtil.noop,\r\n  rect: function (area) {\r\n    return getBoundingRectFromMinMax(area.range);\r\n  },\r\n  polygon: function (area) {\r\n    var minMax;\r\n    var range = area.range;\r\n\r\n    for (var i = 0, len = range.length; i < len; i++) {\r\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\r\n      var rg = range[i];\r\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\r\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\r\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\r\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\r\n    }\r\n\r\n    return minMax && getBoundingRectFromMinMax(minMax);\r\n  }\r\n};\r\n\r\nfunction getBoundingRectFromMinMax(minMax) {\r\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\r\n}\r\n\r\nexports.layoutCovers = layoutCovers;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"../coord/calendar/Calendar\");\r\n\r\nrequire(\"../coord/calendar/CalendarModel\");\r\n\r\nrequire(\"./calendar/CalendarView\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar MONTH_TEXT = {\r\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\r\n};\r\nvar WEEK_TEXT = {\r\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n  CN: ['日', '一', '二', '三', '四', '五', '六']\r\n};\r\n\r\nvar _default = echarts.extendComponentView({\r\n  type: 'calendar',\r\n\r\n  /**\r\n   * top/left line points\r\n   *  @private\r\n   */\r\n  _tlpoints: null,\r\n\r\n  /**\r\n   * bottom/right line points\r\n   *  @private\r\n   */\r\n  _blpoints: null,\r\n\r\n  /**\r\n   * first day of month\r\n   *  @private\r\n   */\r\n  _firstDayOfMonth: null,\r\n\r\n  /**\r\n   * first day point of month\r\n   *  @private\r\n   */\r\n  _firstDayPoints: null,\r\n  render: function (calendarModel, ecModel, api) {\r\n    var group = this.group;\r\n    group.removeAll();\r\n    var coordSys = calendarModel.coordinateSystem; // range info\r\n\r\n    var rangeData = coordSys.getRangeInfo();\r\n    var orient = coordSys.getOrient();\r\n\r\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\r\n\r\n\r\n    this._renderLines(calendarModel, rangeData, orient, group);\r\n\r\n    this._renderYearText(calendarModel, rangeData, orient, group);\r\n\r\n    this._renderMonthText(calendarModel, orient, group);\r\n\r\n    this._renderWeekText(calendarModel, rangeData, orient, group);\r\n  },\r\n  // render day rect\r\n  _renderDayRect: function (calendarModel, rangeData, group) {\r\n    var coordSys = calendarModel.coordinateSystem;\r\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\r\n    var sw = coordSys.getCellWidth();\r\n    var sh = coordSys.getCellHeight();\r\n\r\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\r\n      var point = coordSys.dataToRect([i], false).tl; // every rect\r\n\r\n      var rect = new graphic.Rect({\r\n        shape: {\r\n          x: point[0],\r\n          y: point[1],\r\n          width: sw,\r\n          height: sh\r\n        },\r\n        cursor: 'default',\r\n        style: itemRectStyleModel\r\n      });\r\n      group.add(rect);\r\n    }\r\n  },\r\n  // render separate line\r\n  _renderLines: function (calendarModel, rangeData, orient, group) {\r\n    var self = this;\r\n    var coordSys = calendarModel.coordinateSystem;\r\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\r\n    var show = calendarModel.get('splitLine.show');\r\n    var lineWidth = lineStyleModel.lineWidth;\r\n    this._tlpoints = [];\r\n    this._blpoints = [];\r\n    this._firstDayOfMonth = [];\r\n    this._firstDayPoints = [];\r\n    var firstDay = rangeData.start;\r\n\r\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\r\n      addPoints(firstDay.formatedDate);\r\n\r\n      if (i === 0) {\r\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\r\n      }\r\n\r\n      var date = firstDay.date;\r\n      date.setMonth(date.getMonth() + 1);\r\n      firstDay = coordSys.getDateInfo(date);\r\n    }\r\n\r\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\r\n\r\n    function addPoints(date) {\r\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\r\n\r\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\r\n\r\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\r\n\r\n      self._tlpoints.push(points[0]);\r\n\r\n      self._blpoints.push(points[points.length - 1]);\r\n\r\n      show && self._drawSplitline(points, lineStyleModel, group);\r\n    } // render top/left line\r\n\r\n\r\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\r\n\r\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\r\n  },\r\n  // get points at both ends\r\n  _getEdgesPoints: function (points, lineWidth, orient) {\r\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\r\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\r\n\r\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\r\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\r\n    return rs;\r\n  },\r\n  // render split line\r\n  _drawSplitline: function (points, lineStyleModel, group) {\r\n    var poyline = new graphic.Polyline({\r\n      z2: 20,\r\n      shape: {\r\n        points: points\r\n      },\r\n      style: lineStyleModel\r\n    });\r\n    group.add(poyline);\r\n  },\r\n  // render month line of one week points\r\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\r\n    var coordSys = calendarModel.coordinateSystem;\r\n    date = coordSys.getDateInfo(date);\r\n    var points = [];\r\n\r\n    for (var i = 0; i < 7; i++) {\r\n      var tmpD = coordSys.getNextNDay(date.time, i);\r\n      var point = coordSys.dataToRect([tmpD.time], false);\r\n      points[2 * tmpD.day] = point.tl;\r\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\r\n    }\r\n\r\n    return points;\r\n  },\r\n  _formatterLabel: function (formatter, params) {\r\n    if (typeof formatter === 'string' && formatter) {\r\n      return formatUtil.formatTplSimple(formatter, params);\r\n    }\r\n\r\n    if (typeof formatter === 'function') {\r\n      return formatter(params);\r\n    }\r\n\r\n    return params.nameMap;\r\n  },\r\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\r\n    point = point.slice();\r\n    var aligns = ['center', 'bottom'];\r\n\r\n    if (position === 'bottom') {\r\n      point[1] += margin;\r\n      aligns = ['center', 'top'];\r\n    } else if (position === 'left') {\r\n      point[0] -= margin;\r\n    } else if (position === 'right') {\r\n      point[0] += margin;\r\n      aligns = ['center', 'top'];\r\n    } else {\r\n      // top\r\n      point[1] -= margin;\r\n    }\r\n\r\n    var rotate = 0;\r\n\r\n    if (position === 'left' || position === 'right') {\r\n      rotate = Math.PI / 2;\r\n    }\r\n\r\n    return {\r\n      rotation: rotate,\r\n      position: point,\r\n      style: {\r\n        textAlign: aligns[0],\r\n        textVerticalAlign: aligns[1]\r\n      }\r\n    };\r\n  },\r\n  // render year\r\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\r\n    var yearLabel = calendarModel.getModel('yearLabel');\r\n\r\n    if (!yearLabel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var margin = yearLabel.get('margin');\r\n    var pos = yearLabel.get('position');\r\n\r\n    if (!pos) {\r\n      pos = orient !== 'horizontal' ? 'top' : 'left';\r\n    }\r\n\r\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\r\n    var xc = (points[0][0] + points[1][0]) / 2;\r\n    var yc = (points[0][1] + points[1][1]) / 2;\r\n    var idx = orient === 'horizontal' ? 0 : 1;\r\n    var posPoints = {\r\n      top: [xc, points[idx][1]],\r\n      bottom: [xc, points[1 - idx][1]],\r\n      left: [points[1 - idx][0], yc],\r\n      right: [points[idx][0], yc]\r\n    };\r\n    var name = rangeData.start.y;\r\n\r\n    if (+rangeData.end.y > +rangeData.start.y) {\r\n      name = name + '-' + rangeData.end.y;\r\n    }\r\n\r\n    var formatter = yearLabel.get('formatter');\r\n    var params = {\r\n      start: rangeData.start.y,\r\n      end: rangeData.end.y,\r\n      nameMap: name\r\n    };\r\n\r\n    var content = this._formatterLabel(formatter, params);\r\n\r\n    var yearText = new graphic.Text({\r\n      z2: 30\r\n    });\r\n    graphic.setTextStyle(yearText.style, yearLabel, {\r\n      text: content\r\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\r\n    group.add(yearText);\r\n  },\r\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\r\n    var align = 'left';\r\n    var vAlign = 'top';\r\n    var x = point[0];\r\n    var y = point[1];\r\n\r\n    if (orient === 'horizontal') {\r\n      y = y + margin;\r\n\r\n      if (isCenter) {\r\n        align = 'center';\r\n      }\r\n\r\n      if (position === 'start') {\r\n        vAlign = 'bottom';\r\n      }\r\n    } else {\r\n      x = x + margin;\r\n\r\n      if (isCenter) {\r\n        vAlign = 'middle';\r\n      }\r\n\r\n      if (position === 'start') {\r\n        align = 'right';\r\n      }\r\n    }\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      textAlign: align,\r\n      textVerticalAlign: vAlign\r\n    };\r\n  },\r\n  // render month and year text\r\n  _renderMonthText: function (calendarModel, orient, group) {\r\n    var monthLabel = calendarModel.getModel('monthLabel');\r\n\r\n    if (!monthLabel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var nameMap = monthLabel.get('nameMap');\r\n    var margin = monthLabel.get('margin');\r\n    var pos = monthLabel.get('position');\r\n    var align = monthLabel.get('align');\r\n    var termPoints = [this._tlpoints, this._blpoints];\r\n\r\n    if (zrUtil.isString(nameMap)) {\r\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\r\n    }\r\n\r\n    var idx = pos === 'start' ? 0 : 1;\r\n    var axis = orient === 'horizontal' ? 0 : 1;\r\n    margin = pos === 'start' ? -margin : margin;\r\n    var isCenter = align === 'center';\r\n\r\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\r\n      var tmp = termPoints[idx][i].slice();\r\n      var firstDay = this._firstDayOfMonth[i];\r\n\r\n      if (isCenter) {\r\n        var firstDayPoints = this._firstDayPoints[i];\r\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\r\n      }\r\n\r\n      var formatter = monthLabel.get('formatter');\r\n      var name = nameMap[+firstDay.m - 1];\r\n      var params = {\r\n        yyyy: firstDay.y,\r\n        yy: (firstDay.y + '').slice(2),\r\n        MM: firstDay.m,\r\n        M: +firstDay.m,\r\n        nameMap: name\r\n      };\r\n\r\n      var content = this._formatterLabel(formatter, params);\r\n\r\n      var monthText = new graphic.Text({\r\n        z2: 30\r\n      });\r\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\r\n        text: content\r\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\r\n      group.add(monthText);\r\n    }\r\n  },\r\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\r\n    var align = 'center';\r\n    var vAlign = 'middle';\r\n    var x = point[0];\r\n    var y = point[1];\r\n    var isStart = position === 'start';\r\n\r\n    if (orient === 'horizontal') {\r\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\r\n      align = isStart ? 'right' : 'left';\r\n    } else {\r\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\r\n      vAlign = isStart ? 'bottom' : 'top';\r\n    }\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      textAlign: align,\r\n      textVerticalAlign: vAlign\r\n    };\r\n  },\r\n  // render weeks\r\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\r\n    var dayLabel = calendarModel.getModel('dayLabel');\r\n\r\n    if (!dayLabel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var coordSys = calendarModel.coordinateSystem;\r\n    var pos = dayLabel.get('position');\r\n    var nameMap = dayLabel.get('nameMap');\r\n    var margin = dayLabel.get('margin');\r\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\r\n\r\n    if (zrUtil.isString(nameMap)) {\r\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\r\n    }\r\n\r\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\r\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\r\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\r\n\r\n    if (pos === 'start') {\r\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\r\n      margin = -margin;\r\n    }\r\n\r\n    for (var i = 0; i < 7; i++) {\r\n      var tmpD = coordSys.getNextNDay(start, i);\r\n      var point = coordSys.dataToRect([tmpD.time], false).center;\r\n      var day = i;\r\n      day = Math.abs((i + firstDayOfWeek) % 7);\r\n      var weekText = new graphic.Text({\r\n        z2: 30\r\n      });\r\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\r\n        text: nameMap[day]\r\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\r\n      group.add(weekText);\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./dataZoomSlider\");\r\n\r\nrequire(\"./dataZoomInside\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./dataZoom/typeDefaulter\");\r\n\r\nrequire(\"./dataZoom/DataZoomModel\");\r\n\r\nrequire(\"./dataZoom/DataZoomView\");\r\n\r\nrequire(\"./dataZoom/InsideZoomModel\");\r\n\r\nrequire(\"./dataZoom/InsideZoomView\");\r\n\r\nrequire(\"./dataZoom/dataZoomProcessor\");\r\n\r\nrequire(\"./dataZoom/dataZoomAction\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./dataZoom/typeDefaulter\");\r\n\r\nrequire(\"./dataZoom/DataZoomModel\");\r\n\r\nrequire(\"./dataZoom/DataZoomView\");\r\n\r\nrequire(\"./dataZoom/SelectZoomModel\");\r\n\r\nrequire(\"./dataZoom/SelectZoomView\");\r\n\r\nrequire(\"./dataZoom/dataZoomProcessor\");\r\n\r\nrequire(\"./dataZoom/dataZoomAction\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./dataZoom/typeDefaulter\");\r\n\r\nrequire(\"./dataZoom/DataZoomModel\");\r\n\r\nrequire(\"./dataZoom/DataZoomView\");\r\n\r\nrequire(\"./dataZoom/SliderZoomModel\");\r\n\r\nrequire(\"./dataZoom/SliderZoomView\");\r\n\r\nrequire(\"./dataZoom/dataZoomProcessor\");\r\n\r\nrequire(\"./dataZoom/dataZoomAction\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar helper = require(\"./helper\");\r\n\r\nvar sliderMove = require(\"../helper/sliderMove\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar asc = numberUtil.asc;\r\n/**\r\n * Operate single axis.\r\n * One axis can only operated by one axis operator.\r\n * Different dataZoomModels may be defined to operate the same axis.\r\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\r\n * So dataZoomModels share one axisProxy in that case.\r\n *\r\n * @class\r\n */\r\n\r\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\r\n  /**\r\n   * @private\r\n   * @type {string}\r\n   */\r\n  this._dimName = dimName;\r\n  /**\r\n   * @private\r\n   */\r\n\r\n  this._axisIndex = axisIndex;\r\n  /**\r\n   * @private\r\n   * @type {Array.<number>}\r\n   */\r\n\r\n  this._valueWindow;\r\n  /**\r\n   * @private\r\n   * @type {Array.<number>}\r\n   */\r\n\r\n  this._percentWindow;\r\n  /**\r\n   * @private\r\n   * @type {Array.<number>}\r\n   */\r\n\r\n  this._dataExtent;\r\n  /**\r\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\r\n   * @private\r\n   * @type {Object}\r\n   */\r\n\r\n  this._minMaxSpan;\r\n  /**\r\n   * @readOnly\r\n   * @type {module: echarts/model/Global}\r\n   */\r\n\r\n  this.ecModel = ecModel;\r\n  /**\r\n   * @private\r\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\r\n   */\r\n\r\n  this._dataZoomModel = dataZoomModel; // /**\r\n  //  * @readOnly\r\n  //  * @private\r\n  //  */\r\n  // this.hasSeriesStacked;\r\n};\r\n\r\nAxisProxy.prototype = {\r\n  constructor: AxisProxy,\r\n\r\n  /**\r\n   * Whether the axisProxy is hosted by dataZoomModel.\r\n   *\r\n   * @public\r\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\r\n   * @return {boolean}\r\n   */\r\n  hostedBy: function (dataZoomModel) {\r\n    return this._dataZoomModel === dataZoomModel;\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<number>} Value can only be NaN or finite value.\r\n   */\r\n  getDataValueWindow: function () {\r\n    return this._valueWindow.slice();\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<number>}\r\n   */\r\n  getDataPercentWindow: function () {\r\n    return this._percentWindow.slice();\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @param {number} axisIndex\r\n   * @return {Array} seriesModels\r\n   */\r\n  getTargetSeriesModels: function () {\r\n    var seriesModels = [];\r\n    var ecModel = this.ecModel;\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\r\n        var dimName = this._dimName;\r\n        var axisModel = ecModel.queryComponents({\r\n          mainType: dimName + 'Axis',\r\n          index: seriesModel.get(dimName + 'AxisIndex'),\r\n          id: seriesModel.get(dimName + 'AxisId')\r\n        })[0];\r\n\r\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\r\n          seriesModels.push(seriesModel);\r\n        }\r\n      }\r\n    }, this);\r\n    return seriesModels;\r\n  },\r\n  getAxisModel: function () {\r\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\r\n  },\r\n  getOtherAxisModel: function () {\r\n    var axisDim = this._dimName;\r\n    var ecModel = this.ecModel;\r\n    var axisModel = this.getAxisModel();\r\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\r\n    var otherAxisDim;\r\n    var coordSysIndexName;\r\n\r\n    if (isCartesian) {\r\n      coordSysIndexName = 'gridIndex';\r\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\r\n    } else {\r\n      coordSysIndexName = 'polarIndex';\r\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\r\n    }\r\n\r\n    var foundOtherAxisModel;\r\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\r\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\r\n        foundOtherAxisModel = otherAxisModel;\r\n      }\r\n    });\r\n    return foundOtherAxisModel;\r\n  },\r\n  getMinMaxSpan: function () {\r\n    return zrUtil.clone(this._minMaxSpan);\r\n  },\r\n\r\n  /**\r\n   * Only calculate by given range and this._dataExtent, do not change anything.\r\n   *\r\n   * @param {Object} opt\r\n   * @param {number} [opt.start]\r\n   * @param {number} [opt.end]\r\n   * @param {number} [opt.startValue]\r\n   * @param {number} [opt.endValue]\r\n   */\r\n  calculateDataWindow: function (opt) {\r\n    var dataExtent = this._dataExtent;\r\n    var axisModel = this.getAxisModel();\r\n    var scale = axisModel.axis.scale;\r\n\r\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\r\n\r\n    var percentExtent = [0, 100];\r\n    var percentWindow = [];\r\n    var valueWindow = [];\r\n    var hasPropModeValue;\r\n    each(['start', 'end'], function (prop, idx) {\r\n      var boundPercent = opt[prop];\r\n      var boundValue = opt[prop + 'Value']; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\r\n      // on `valueProp` ('startValue', 'endValue'). (They are based on the data extent\r\n      // but not min/max of axis, which will be calculated by data window then).\r\n      // The former one is suitable for cases that a dataZoom component controls multiple\r\n      // axes with different unit or extent, and the latter one is suitable for accurate\r\n      // zoom by pixel (e.g., in dataZoomSelect).\r\n      // we use `getRangePropMode()` to mark which prop is used. `rangePropMode` is updated\r\n      // only when setOption or dispatchAction, otherwise it remains its original value.\r\n      // (Why not only record `percentProp` and always map to `valueProp`? Because\r\n      // the map `valueProp` -> `percentProp` -> `valueProp` probably not the original\r\n      // `valueProp`. consider two axes constrolled by one dataZoom. They have different\r\n      // data extent. All of values that are overflow the `dataExtent` will be calculated\r\n      // to percent '100%').\r\n\r\n      if (rangePropMode[idx] === 'percent') {\r\n        boundPercent == null && (boundPercent = percentExtent[idx]); // Use scale.parse to math round for category or time axis.\r\n\r\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent));\r\n      } else {\r\n        hasPropModeValue = true;\r\n        boundValue = boundValue == null ? dataExtent[idx] : scale.parse(boundValue); // Calculating `percent` from `value` may be not accurate, because\r\n        // This calculation can not be inversed, because all of values that\r\n        // are overflow the `dataExtent` will be calculated to percent '100%'\r\n\r\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent);\r\n      } // valueWindow[idx] = round(boundValue);\r\n      // percentWindow[idx] = round(boundPercent);\r\n\r\n\r\n      valueWindow[idx] = boundValue;\r\n      percentWindow[idx] = boundPercent;\r\n    });\r\n    asc(valueWindow);\r\n    asc(percentWindow); // The windows from user calling of `dispatchAction` might be out of the extent,\r\n    // or do not obey the `min/maxSpan`, `min/maxValueSpan`. But we dont restrict window\r\n    // by `zoomLock` here, because we see `zoomLock` just as a interaction constraint,\r\n    // where API is able to initialize/modify the window size even though `zoomLock`\r\n    // specified.\r\n\r\n    var spans = this._minMaxSpan;\r\n    hasPropModeValue ? restrictSet(valueWindow, percentWindow, dataExtent, percentExtent, false) : restrictSet(percentWindow, valueWindow, percentExtent, dataExtent, true);\r\n\r\n    function restrictSet(fromWindow, toWindow, fromExtent, toExtent, toValue) {\r\n      var suffix = toValue ? 'Span' : 'ValueSpan';\r\n      sliderMove(0, fromWindow, fromExtent, 'all', spans['min' + suffix], spans['max' + suffix]);\r\n\r\n      for (var i = 0; i < 2; i++) {\r\n        toWindow[i] = numberUtil.linearMap(fromWindow[i], fromExtent, toExtent, true);\r\n        toValue && (toWindow[i] = scale.parse(toWindow[i]));\r\n      }\r\n    }\r\n\r\n    return {\r\n      valueWindow: valueWindow,\r\n      percentWindow: percentWindow\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Notice: reset should not be called before series.restoreData() called,\r\n   * so it is recommanded to be called in \"process stage\" but not \"model init\r\n   * stage\".\r\n   *\r\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\r\n   */\r\n  reset: function (dataZoomModel) {\r\n    if (dataZoomModel !== this._dataZoomModel) {\r\n      return;\r\n    }\r\n\r\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\r\n\r\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\r\n    // each(targetSeries, function (series) {\r\n    // var data = series.getData();\r\n    // var dataDim = data.mapDimension(this._dimName);\r\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\r\n    // if (stackedDimension && stackedDimension === dataDim) {\r\n    // this.hasSeriesStacked = true;\r\n    // }\r\n    // }, this);\r\n    // `calculateDataWindow` uses min/maxSpan.\r\n\r\n    setMinMaxSpan(this);\r\n    var dataWindow = this.calculateDataWindow(dataZoomModel.settledOption);\r\n    this._valueWindow = dataWindow.valueWindow;\r\n    this._percentWindow = dataWindow.percentWindow; // Update axis setting then.\r\n\r\n    setAxisModel(this);\r\n  },\r\n\r\n  /**\r\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\r\n   */\r\n  restore: function (dataZoomModel) {\r\n    if (dataZoomModel !== this._dataZoomModel) {\r\n      return;\r\n    }\r\n\r\n    this._valueWindow = this._percentWindow = null;\r\n    setAxisModel(this, true);\r\n  },\r\n\r\n  /**\r\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\r\n   */\r\n  filterData: function (dataZoomModel, api) {\r\n    if (dataZoomModel !== this._dataZoomModel) {\r\n      return;\r\n    }\r\n\r\n    var axisDim = this._dimName;\r\n    var seriesModels = this.getTargetSeriesModels();\r\n    var filterMode = dataZoomModel.get('filterMode');\r\n    var valueWindow = this._valueWindow;\r\n\r\n    if (filterMode === 'none') {\r\n      return;\r\n    } // FIXME\r\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\r\n    // with NaN data, NaN will be filtered and stack will be wrong.\r\n    // So we need to force the mode to be set empty.\r\n    // In fect, it is not a big deal that do not support filterMode-'filter'\r\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\r\n    // selection\" some day, which might need \"adapt to data extent on the\r\n    // otherAxis\", which is disabled by filterMode-'empty'.\r\n    // But currently, stack has been fixed to based on value but not index,\r\n    // so this is not an issue any more.\r\n    // var otherAxisModel = this.getOtherAxisModel();\r\n    // if (dataZoomModel.get('$fromToolbox')\r\n    //     && otherAxisModel\r\n    //     && otherAxisModel.hasSeriesStacked\r\n    // ) {\r\n    //     filterMode = 'empty';\r\n    // }\r\n    // TODO\r\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\r\n\r\n\r\n    each(seriesModels, function (seriesModel) {\r\n      var seriesData = seriesModel.getData();\r\n      var dataDims = seriesData.mapDimension(axisDim, true);\r\n\r\n      if (!dataDims.length) {\r\n        return;\r\n      }\r\n\r\n      if (filterMode === 'weakFilter') {\r\n        seriesData.filterSelf(function (dataIndex) {\r\n          var leftOut;\r\n          var rightOut;\r\n          var hasValue;\r\n\r\n          for (var i = 0; i < dataDims.length; i++) {\r\n            var value = seriesData.get(dataDims[i], dataIndex);\r\n            var thisHasValue = !isNaN(value);\r\n            var thisLeftOut = value < valueWindow[0];\r\n            var thisRightOut = value > valueWindow[1];\r\n\r\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\r\n              return true;\r\n            }\r\n\r\n            thisHasValue && (hasValue = true);\r\n            thisLeftOut && (leftOut = true);\r\n            thisRightOut && (rightOut = true);\r\n          } // If both left out and right out, do not filter.\r\n\r\n\r\n          return hasValue && leftOut && rightOut;\r\n        });\r\n      } else {\r\n        each(dataDims, function (dim) {\r\n          if (filterMode === 'empty') {\r\n            seriesModel.setData(seriesData = seriesData.map(dim, function (value) {\r\n              return !isInWindow(value) ? NaN : value;\r\n            }));\r\n          } else {\r\n            var range = {};\r\n            range[dim] = valueWindow; // console.time('select');\r\n\r\n            seriesData.selectRange(range); // console.timeEnd('select');\r\n          }\r\n        });\r\n      }\r\n\r\n      each(dataDims, function (dim) {\r\n        seriesData.setApproximateExtent(valueWindow, dim);\r\n      });\r\n    });\r\n\r\n    function isInWindow(value) {\r\n      return value >= valueWindow[0] && value <= valueWindow[1];\r\n    }\r\n  }\r\n};\r\n\r\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\r\n  var dataExtent = [Infinity, -Infinity];\r\n  each(seriesModels, function (seriesModel) {\r\n    var seriesData = seriesModel.getData();\r\n\r\n    if (seriesData) {\r\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\r\n        var seriesExtent = seriesData.getApproximateExtent(dim);\r\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\r\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\r\n      });\r\n    }\r\n  });\r\n\r\n  if (dataExtent[1] < dataExtent[0]) {\r\n    dataExtent = [NaN, NaN];\r\n  } // It is important to get \"consistent\" extent when more then one axes is\r\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\r\n  // when zooming. But it is difficult to know what is \"consistent\", considering\r\n  // axes have different type or even different meanings (For example, two\r\n  // time axes are used to compare data of the same date in different years).\r\n  // So basically dataZoom just obtains extent by series.data (in category axis\r\n  // extent can be obtained from axis.data).\r\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\r\n  // consistent.\r\n\r\n\r\n  fixExtentByAxis(axisProxy, dataExtent);\r\n  return dataExtent;\r\n}\r\n\r\nfunction fixExtentByAxis(axisProxy, dataExtent) {\r\n  var axisModel = axisProxy.getAxisModel();\r\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\r\n  // by axis.data by default.\r\n\r\n  var isCategoryAxis = axisModel.get('type') === 'category';\r\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\r\n\r\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\r\n    dataExtent[0] = min;\r\n  } else if (isCategoryAxis) {\r\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\r\n  }\r\n\r\n  var max = axisModel.getMax(true);\r\n\r\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\r\n    dataExtent[1] = max;\r\n  } else if (isCategoryAxis) {\r\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\r\n  }\r\n\r\n  if (!axisModel.get('scale', true)) {\r\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\r\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\r\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\r\n  // by series data, which may be a little different from the extent calculated by\r\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\r\n  // little when zooming. So it will not be fixed until some users require it strongly.\r\n\r\n\r\n  return dataExtent;\r\n}\r\n\r\nfunction setAxisModel(axisProxy, isRestore) {\r\n  var axisModel = axisProxy.getAxisModel();\r\n  var percentWindow = axisProxy._percentWindow;\r\n  var valueWindow = axisProxy._valueWindow;\r\n\r\n  if (!percentWindow) {\r\n    return;\r\n  } // [0, 500]: arbitrary value, guess axis extent.\r\n\r\n\r\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\r\n  precision = Math.min(precision, 20); // isRestore or isFull\r\n\r\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\r\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\r\n}\r\n\r\nfunction setMinMaxSpan(axisProxy) {\r\n  var minMaxSpan = axisProxy._minMaxSpan = {};\r\n  var dataZoomModel = axisProxy._dataZoomModel;\r\n  var dataExtent = axisProxy._dataExtent;\r\n  each(['min', 'max'], function (minMax) {\r\n    var percentSpan = dataZoomModel.get(minMax + 'Span');\r\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\r\n    valueSpan != null && (valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan)); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\r\n\r\n    if (valueSpan != null) {\r\n      percentSpan = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\r\n    } else if (percentSpan != null) {\r\n      valueSpan = numberUtil.linearMap(percentSpan, [0, 100], dataExtent, true) - dataExtent[0];\r\n    }\r\n\r\n    minMaxSpan[minMax + 'Span'] = percentSpan;\r\n    minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\r\n  });\r\n}\r\n\r\nvar _default = AxisProxy;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\nvar helper = require(\"./helper\");\r\n\r\nvar AxisProxy = require(\"./AxisProxy\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar eachAxisDim = helper.eachAxisDim;\r\nvar DataZoomModel = echarts.extendComponentModel({\r\n  type: 'dataZoom',\r\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 4,\r\n    // Higher than normal component (z: 2).\r\n    orient: null,\r\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\r\n    xAxisIndex: null,\r\n    // Default the first horizontal category axis.\r\n    yAxisIndex: null,\r\n    // Default the first vertical category axis.\r\n    filterMode: 'filter',\r\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\r\n    // 'filter': data items which are out of window will be removed. This option is\r\n    //          applicable when filtering outliers. For each data item, it will be\r\n    //          filtered if one of the relevant dimensions is out of the window.\r\n    // 'weakFilter': data items which are out of window will be removed. This option\r\n    //          is applicable when filtering outliers. For each data item, it will be\r\n    //          filtered only if all  of the relevant dimensions are out of the same\r\n    //          side of the window.\r\n    // 'empty': data items which are out of window will be set to empty.\r\n    //          This option is applicable when user should not neglect\r\n    //          that there are some data items out of window.\r\n    // 'none': Do not filter.\r\n    // Taking line chart as an example, line will be broken in\r\n    // the filtered points when filterModel is set to 'empty', but\r\n    // be connected when set to 'filter'.\r\n    throttle: null,\r\n    // Dispatch action by the fixed rate, avoid frequency.\r\n    // default 100. Do not throttle when use null/undefined.\r\n    // If animation === true and animationDurationUpdate > 0,\r\n    // default value is 100, otherwise 20.\r\n    start: 0,\r\n    // Start percent. 0 ~ 100\r\n    end: 100,\r\n    // End percent. 0 ~ 100\r\n    startValue: null,\r\n    // Start value. If startValue specified, start is ignored.\r\n    endValue: null,\r\n    // End value. If endValue specified, end is ignored.\r\n    minSpan: null,\r\n    // 0 ~ 100\r\n    maxSpan: null,\r\n    // 0 ~ 100\r\n    minValueSpan: null,\r\n    // The range of dataZoom can not be smaller than that.\r\n    maxValueSpan: null,\r\n    // The range of dataZoom can not be larger than that.\r\n    rangeMode: null // Array, can be 'value' or 'percent'.\r\n\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (option, parentModel, ecModel) {\r\n    /**\r\n     * key like x_0, y_1\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this._dataIntervalByAxis = {};\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._dataInfo = {};\r\n    /**\r\n     * key like x_0, y_1\r\n     * @private\r\n     */\r\n\r\n    this._axisProxies = {};\r\n    /**\r\n     * @readOnly\r\n     */\r\n\r\n    this.textStyleModel;\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._autoThrottle = true;\r\n    /**\r\n     * It is `[rangeModeForMin, rangeModeForMax]`.\r\n     * The optional values for `rangeMode`:\r\n     * + `'value'` mode: the axis extent will always be determined by\r\n     *     `dataZoom.startValue` and `dataZoom.endValue`, despite\r\n     *     how data like and how `axis.min` and `axis.max` are.\r\n     * + `'percent'` mode: `100` represents 100% of the `[dMin, dMax]`,\r\n     *     where `dMin` is `axis.min` if `axis.min` specified, otherwise `data.extent[0]`,\r\n     *     and `dMax` is `axis.max` if `axis.max` specified, otherwise `data.extent[1]`.\r\n     *     Axis extent will be determined by the result of the percent of `[dMin, dMax]`.\r\n     *\r\n     * For example, when users are using dynamic data (update data periodically via `setOption`),\r\n     * if in `'value`' mode, the window will be kept in a fixed value range despite how\r\n     * data are appended, while if in `'percent'` mode, whe window range will be changed alone with\r\n     * the appended data (suppose `axis.min` and `axis.max` are not specified).\r\n     *\r\n     * @private\r\n     */\r\n\r\n    this._rangePropMode = ['percent', 'percent'];\r\n    var inputRawOption = retrieveRawOption(option);\r\n    /**\r\n     * Suppose a \"main process\" start at the point that model prepared (that is,\r\n     * model initialized or merged or method called in `action`).\r\n     * We should keep the `main process` idempotent, that is, given a set of values\r\n     * on `option`, we get the same result.\r\n     *\r\n     * But sometimes, values on `option` will be updated for providing users\r\n     * a \"final calculated value\" (`dataZoomProcessor` will do that). Those value\r\n     * should not be the base/input of the `main process`.\r\n     *\r\n     * So in that case we should save and keep the input of the `main process`\r\n     * separately, called `settledOption`.\r\n     *\r\n     * For example, consider the case:\r\n     * (Step_1) brush zoom the grid by `toolbox.dataZoom`,\r\n     *     where the original input `option.startValue`, `option.endValue` are earsed by\r\n     *     calculated value.\r\n     * (Step)2) click the legend to hide and show a series,\r\n     *     where the new range is calculated by the earsed `startValue` and `endValue`,\r\n     *     which brings incorrect result.\r\n     *\r\n     * @readOnly\r\n     */\r\n\r\n    this.settledOption = inputRawOption;\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n    this.doInit(inputRawOption);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  mergeOption: function (newOption) {\r\n    var inputRawOption = retrieveRawOption(newOption); //FIX #2591\r\n\r\n    zrUtil.merge(this.option, newOption, true);\r\n    zrUtil.merge(this.settledOption, inputRawOption, true);\r\n    this.doInit(inputRawOption);\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  doInit: function (inputRawOption) {\r\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\r\n\r\n    if (!env.canvasSupported) {\r\n      thisOption.realtime = false;\r\n    }\r\n\r\n    this._setDefaultThrottle(inputRawOption);\r\n\r\n    updateRangeUse(this, inputRawOption);\r\n    var settledOption = this.settledOption;\r\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\r\n      // start/end has higher priority over startValue/endValue if they\r\n      // both set, but we should make chart.setOption({endValue: 1000})\r\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\r\n      if (this._rangePropMode[index] === 'value') {\r\n        thisOption[names[0]] = settledOption[names[0]] = null;\r\n      } // Otherwise do nothing and use the merge result.\r\n\r\n    }, this);\r\n    this.textStyleModel = this.getModel('textStyle');\r\n\r\n    this._resetTarget();\r\n\r\n    this._giveAxisProxies();\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _giveAxisProxies: function () {\r\n    var axisProxies = this._axisProxies;\r\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\r\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\r\n\r\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\r\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\r\n      // dispose __dzAxisProxy\r\n\r\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _resetTarget: function () {\r\n    var thisOption = this.option;\r\n\r\n    var autoMode = this._judgeAutoMode();\r\n\r\n    eachAxisDim(function (dimNames) {\r\n      var axisIndexName = dimNames.axisIndex;\r\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\r\n    }, this);\r\n\r\n    if (autoMode === 'axisIndex') {\r\n      this._autoSetAxisIndex();\r\n    } else if (autoMode === 'orient') {\r\n      this._autoSetOrient();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _judgeAutoMode: function () {\r\n    // Auto set only works for setOption at the first time.\r\n    // The following is user's reponsibility. So using merged\r\n    // option is OK.\r\n    var thisOption = this.option;\r\n    var hasIndexSpecified = false;\r\n    eachAxisDim(function (dimNames) {\r\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\r\n      // but do not want use auto mode. Because empty array may be encountered when\r\n      // some error occured.\r\n      if (thisOption[dimNames.axisIndex] != null) {\r\n        hasIndexSpecified = true;\r\n      }\r\n    }, this);\r\n    var orient = thisOption.orient;\r\n\r\n    if (orient == null && hasIndexSpecified) {\r\n      return 'orient';\r\n    } else if (!hasIndexSpecified) {\r\n      if (orient == null) {\r\n        thisOption.orient = 'horizontal';\r\n      }\r\n\r\n      return 'axisIndex';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _autoSetAxisIndex: function () {\r\n    var autoAxisIndex = true;\r\n    var orient = this.get('orient', true);\r\n    var thisOption = this.option;\r\n    var dependentModels = this.dependentModels;\r\n\r\n    if (autoAxisIndex) {\r\n      // Find axis that parallel to dataZoom as default.\r\n      var dimName = orient === 'vertical' ? 'y' : 'x';\r\n\r\n      if (dependentModels[dimName + 'Axis'].length) {\r\n        thisOption[dimName + 'AxisIndex'] = [0];\r\n        autoAxisIndex = false;\r\n      } else {\r\n        each(dependentModels.singleAxis, function (singleAxisModel) {\r\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\r\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\r\n            autoAxisIndex = false;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (autoAxisIndex) {\r\n      // Find the first category axis as default. (consider polar)\r\n      eachAxisDim(function (dimNames) {\r\n        if (!autoAxisIndex) {\r\n          return;\r\n        }\r\n\r\n        var axisIndices = [];\r\n        var axisModels = this.dependentModels[dimNames.axis];\r\n\r\n        if (axisModels.length && !axisIndices.length) {\r\n          for (var i = 0, len = axisModels.length; i < len; i++) {\r\n            if (axisModels[i].get('type') === 'category') {\r\n              axisIndices.push(i);\r\n            }\r\n          }\r\n        }\r\n\r\n        thisOption[dimNames.axisIndex] = axisIndices;\r\n\r\n        if (axisIndices.length) {\r\n          autoAxisIndex = false;\r\n        }\r\n      }, this);\r\n    }\r\n\r\n    if (autoAxisIndex) {\r\n      // FIXME\r\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\r\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\r\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\r\n      // dataZoom component auto adopts series that reference to\r\n      // both xAxis and yAxis which type is 'value'.\r\n      this.ecModel.eachSeries(function (seriesModel) {\r\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\r\n          eachAxisDim(function (dimNames) {\r\n            var axisIndices = thisOption[dimNames.axisIndex];\r\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\r\n            var axisId = seriesModel.get(dimNames.axisId);\r\n            var axisModel = seriesModel.ecModel.queryComponents({\r\n              mainType: dimNames.axis,\r\n              index: axisIndex,\r\n              id: axisId\r\n            })[0];\r\n            axisIndex = axisModel.componentIndex;\r\n\r\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\r\n              axisIndices.push(axisIndex);\r\n            }\r\n          });\r\n        }\r\n      }, this);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _autoSetOrient: function () {\r\n    var dim; // Find the first axis\r\n\r\n    this.eachTargetAxis(function (dimNames) {\r\n      !dim && (dim = dimNames.name);\r\n    }, this);\r\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\r\n    // FIXME\r\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\r\n    // 例如series.type === scatter时。\r\n    var is = true;\r\n    eachAxisDim(function (dimNames) {\r\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\r\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\r\n\r\n      if (!axisModel || axisModel.get('type') !== axisType) {\r\n        is = false;\r\n      }\r\n    }, this);\r\n    return is;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _setDefaultThrottle: function (inputRawOption) {\r\n    // When first time user set throttle, auto throttle ends.\r\n    if (inputRawOption.hasOwnProperty('throttle')) {\r\n      this._autoThrottle = false;\r\n    }\r\n\r\n    if (this._autoThrottle) {\r\n      var globalOption = this.ecModel.option;\r\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  getFirstTargetAxisModel: function () {\r\n    var firstAxisModel;\r\n    eachAxisDim(function (dimNames) {\r\n      if (firstAxisModel == null) {\r\n        var indices = this.get(dimNames.axisIndex);\r\n\r\n        if (indices.length) {\r\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\r\n        }\r\n      }\r\n    }, this);\r\n    return firstAxisModel;\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\r\n   */\r\n  eachTargetAxis: function (callback, context) {\r\n    var ecModel = this.ecModel;\r\n    eachAxisDim(function (dimNames) {\r\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\r\n        callback.call(context, dimNames, axisIndex, this, ecModel);\r\n      }, this);\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @param {string} dimName\r\n   * @param {number} axisIndex\r\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\r\n   */\r\n  getAxisProxy: function (dimName, axisIndex) {\r\n    return this._axisProxies[dimName + '_' + axisIndex];\r\n  },\r\n\r\n  /**\r\n   * @param {string} dimName\r\n   * @param {number} axisIndex\r\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\r\n   */\r\n  getAxisModel: function (dimName, axisIndex) {\r\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\r\n    return axisProxy && axisProxy.getAxisModel();\r\n  },\r\n\r\n  /**\r\n   * If not specified, set to undefined.\r\n   *\r\n   * @public\r\n   * @param {Object} opt\r\n   * @param {number} [opt.start]\r\n   * @param {number} [opt.end]\r\n   * @param {number} [opt.startValue]\r\n   * @param {number} [opt.endValue]\r\n   */\r\n  setRawRange: function (opt) {\r\n    var thisOption = this.option;\r\n    var settledOption = this.settledOption;\r\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\r\n      // Consider the pair <start, startValue>:\r\n      // If one has value and the other one is `null/undefined`, we both set them\r\n      // to `settledOption`. This strategy enables the feature to clear the original\r\n      // value in `settledOption` to `null/undefined`.\r\n      // But if both of them are `null/undefined`, we do not set them to `settledOption`\r\n      // and keep `settledOption` with the original value. This strategy enables users to\r\n      // only set <end or endValue> but not set <start or startValue> when calling\r\n      // `dispatchAction`.\r\n      // The pair <end, endValue> is treated in the same way.\r\n      if (opt[names[0]] != null || opt[names[1]] != null) {\r\n        thisOption[names[0]] = settledOption[names[0]] = opt[names[0]];\r\n        thisOption[names[1]] = settledOption[names[1]] = opt[names[1]];\r\n      }\r\n    }, this);\r\n    updateRangeUse(this, opt);\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @param {Object} opt\r\n   * @param {number} [opt.start]\r\n   * @param {number} [opt.end]\r\n   * @param {number} [opt.startValue]\r\n   * @param {number} [opt.endValue]\r\n   */\r\n  setCalculatedRange: function (opt) {\r\n    var option = this.option;\r\n    each(['start', 'startValue', 'end', 'endValue'], function (name) {\r\n      option[name] = opt[name];\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @return {Array.<number>} [startPercent, endPercent]\r\n   */\r\n  getPercentRange: function () {\r\n    var axisProxy = this.findRepresentativeAxisProxy();\r\n\r\n    if (axisProxy) {\r\n      return axisProxy.getDataPercentWindow();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\r\n   *\r\n   * @param {string} [axisDimName]\r\n   * @param {number} [axisIndex]\r\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\r\n   */\r\n  getValueRange: function (axisDimName, axisIndex) {\r\n    if (axisDimName == null && axisIndex == null) {\r\n      var axisProxy = this.findRepresentativeAxisProxy();\r\n\r\n      if (axisProxy) {\r\n        return axisProxy.getDataValueWindow();\r\n      }\r\n    } else {\r\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\r\n   *      corresponding to the axisModel\r\n   * @return {module:echarts/component/dataZoom/AxisProxy}\r\n   */\r\n  findRepresentativeAxisProxy: function (axisModel) {\r\n    if (axisModel) {\r\n      return axisModel.__dzAxisProxy;\r\n    } // Find the first hosted axisProxy\r\n\r\n\r\n    var axisProxies = this._axisProxies;\r\n\r\n    for (var key in axisProxies) {\r\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\r\n        return axisProxies[key];\r\n      }\r\n    } // If no hosted axis find not hosted axisProxy.\r\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\r\n    // and the option.start or option.end settings are different. The percentRange\r\n    // should follow axisProxy.\r\n    // (We encounter this problem in toolbox data zoom.)\r\n\r\n\r\n    for (var key in axisProxies) {\r\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\r\n        return axisProxies[key];\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<string>}\r\n   */\r\n  getRangePropMode: function () {\r\n    return this._rangePropMode.slice();\r\n  }\r\n});\r\n/**\r\n * Retrieve the those raw params from option, which will be cached separately.\r\n * becasue they will be overwritten by normalized/calculated values in the main\r\n * process.\r\n */\r\n\r\nfunction retrieveRawOption(option) {\r\n  var ret = {};\r\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\r\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\r\n  });\r\n  return ret;\r\n}\r\n\r\nfunction updateRangeUse(dataZoomModel, inputRawOption) {\r\n  var rangePropMode = dataZoomModel._rangePropMode;\r\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\r\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\r\n    var percentSpecified = inputRawOption[names[0]] != null;\r\n    var valueSpecified = inputRawOption[names[1]] != null;\r\n\r\n    if (percentSpecified && !valueSpecified) {\r\n      rangePropMode[index] = 'percent';\r\n    } else if (!percentSpecified && valueSpecified) {\r\n      rangePropMode[index] = 'value';\r\n    } else if (rangeModeInOption) {\r\n      rangePropMode[index] = rangeModeInOption[index];\r\n    } else if (percentSpecified) {\r\n      // percentSpecified && valueSpecified\r\n      rangePropMode[index] = 'percent';\r\n    } // else remain its original setting.\r\n\r\n  });\r\n}\r\n\r\nvar _default = DataZoomModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar ComponentView = require(\"../../view/Component\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = ComponentView.extend({\r\n  type: 'dataZoom',\r\n  render: function (dataZoomModel, ecModel, api, payload) {\r\n    this.dataZoomModel = dataZoomModel;\r\n    this.ecModel = ecModel;\r\n    this.api = api;\r\n  },\r\n\r\n  /**\r\n   * Find the first target coordinate system.\r\n   *\r\n   * @protected\r\n   * @return {Object} {\r\n   *                   grid: [\r\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\r\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\r\n   *                       ...\r\n   *                   ],  // cartesians must not be null/undefined.\r\n   *                   polar: [\r\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\r\n   *                       ...\r\n   *                   ],  // polars must not be null/undefined.\r\n   *                   singleAxis: [\r\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\r\n   *                   ]\r\n   */\r\n  getTargetCoordInfo: function () {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var ecModel = this.ecModel;\r\n    var coordSysLists = {};\r\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\r\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\r\n\r\n      if (axisModel) {\r\n        var coordModel = axisModel.getCoordSysModel();\r\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\r\n      }\r\n    }, this);\r\n\r\n    function save(coordModel, axisModel, store, coordIndex) {\r\n      var item;\r\n\r\n      for (var i = 0; i < store.length; i++) {\r\n        if (store[i].model === coordModel) {\r\n          item = store[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!item) {\r\n        store.push(item = {\r\n          model: coordModel,\r\n          axisModels: [],\r\n          coordIndex: coordIndex\r\n        });\r\n      }\r\n\r\n      item.axisModels.push(axisModel);\r\n    }\r\n\r\n    return coordSysLists;\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar DataZoomModel = require(\"./DataZoomModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = DataZoomModel.extend({\r\n  type: 'dataZoom.inside',\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    disabled: false,\r\n    // Whether disable this inside zoom.\r\n    zoomLock: false,\r\n    // Whether disable zoom but only pan.\r\n    zoomOnMouseWheel: true,\r\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n    moveOnMouseMove: true,\r\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n    moveOnMouseWheel: false,\r\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n    preventDefaultMouseMove: true\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar DataZoomView = require(\"./DataZoomView\");\r\n\r\nvar sliderMove = require(\"../helper/sliderMove\");\r\n\r\nvar roams = require(\"./roams\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar bind = zrUtil.bind;\r\nvar InsideZoomView = DataZoomView.extend({\r\n  type: 'dataZoom.inside',\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (ecModel, api) {\r\n    /**\r\n     * 'throttle' is used in this.dispatchAction, so we save range\r\n     * to avoid missing some 'pan' info.\r\n     * @private\r\n     * @type {Array.<number>}\r\n     */\r\n    this._range;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (dataZoomModel, ecModel, api, payload) {\r\n    InsideZoomView.superApply(this, 'render', arguments); // Hence the `throttle` util ensures to preserve command order,\r\n    // here simply updating range all the time will not cause missing\r\n    // any of the the roam change.\r\n\r\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\r\n\r\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\r\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\r\n        return roams.generateCoordId(coordInfo.model);\r\n      });\r\n      zrUtil.each(coordInfoList, function (coordInfo) {\r\n        var coordModel = coordInfo.model;\r\n        var getRange = {};\r\n        zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\r\n          getRange[eventName] = bind(roamHandlers[eventName], this, coordInfo, coordSysName);\r\n        }, this);\r\n        roams.register(api, {\r\n          coordId: roams.generateCoordId(coordModel),\r\n          allCoordIds: allCoordIds,\r\n          containsPoint: function (e, x, y) {\r\n            return coordModel.coordinateSystem.containPoint([x, y]);\r\n          },\r\n          dataZoomId: dataZoomModel.id,\r\n          dataZoomModel: dataZoomModel,\r\n          getRange: getRange\r\n        });\r\n      }, this);\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: function () {\r\n    roams.unregister(this.api, this.dataZoomModel.id);\r\n    InsideZoomView.superApply(this, 'dispose', arguments);\r\n    this._range = null;\r\n  }\r\n});\r\nvar roamHandlers = {\r\n  /**\r\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\r\n   */\r\n  zoom: function (coordInfo, coordSysName, controller, e) {\r\n    var lastRange = this._range;\r\n    var range = lastRange.slice(); // Calculate transform by the first axis.\r\n\r\n    var axisModel = coordInfo.axisModels[0];\r\n\r\n    if (!axisModel) {\r\n      return;\r\n    }\r\n\r\n    var directionInfo = getDirectionInfo[coordSysName](null, [e.originX, e.originY], axisModel, controller, coordInfo);\r\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\r\n    var scale = Math.max(1 / e.scale, 0);\r\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\r\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\r\n\r\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\r\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\r\n    this._range = range;\r\n\r\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\r\n      return range;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\r\n   */\r\n  pan: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\r\n    var directionInfo = getDirectionInfo[coordSysName]([e.oldX, e.oldY], [e.newX, e.newY], axisModel, controller, coordInfo);\r\n    return directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\r\n  }),\r\n\r\n  /**\r\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\r\n   */\r\n  scrollMove: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\r\n    var directionInfo = getDirectionInfo[coordSysName]([0, 0], [e.scrollDelta, e.scrollDelta], axisModel, controller, coordInfo);\r\n    return directionInfo.signal * (range[1] - range[0]) * e.scrollDelta;\r\n  })\r\n};\r\n\r\nfunction makeMover(getPercentDelta) {\r\n  return function (coordInfo, coordSysName, controller, e) {\r\n    var lastRange = this._range;\r\n    var range = lastRange.slice(); // Calculate transform by the first axis.\r\n\r\n    var axisModel = coordInfo.axisModels[0];\r\n\r\n    if (!axisModel) {\r\n      return;\r\n    }\r\n\r\n    var percentDelta = getPercentDelta(range, axisModel, coordInfo, coordSysName, controller, e);\r\n    sliderMove(percentDelta, range, [0, 100], 'all');\r\n    this._range = range;\r\n\r\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\r\n      return range;\r\n    }\r\n  };\r\n}\r\n\r\nvar getDirectionInfo = {\r\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\r\n    var axis = axisModel.axis;\r\n    var ret = {};\r\n    var rect = coordInfo.model.coordinateSystem.getRect();\r\n    oldPoint = oldPoint || [0, 0];\r\n\r\n    if (axis.dim === 'x') {\r\n      ret.pixel = newPoint[0] - oldPoint[0];\r\n      ret.pixelLength = rect.width;\r\n      ret.pixelStart = rect.x;\r\n      ret.signal = axis.inverse ? 1 : -1;\r\n    } else {\r\n      // axis.dim === 'y'\r\n      ret.pixel = newPoint[1] - oldPoint[1];\r\n      ret.pixelLength = rect.height;\r\n      ret.pixelStart = rect.y;\r\n      ret.signal = axis.inverse ? -1 : 1;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\r\n    var axis = axisModel.axis;\r\n    var ret = {};\r\n    var polar = coordInfo.model.coordinateSystem;\r\n    var radiusExtent = polar.getRadiusAxis().getExtent();\r\n    var angleExtent = polar.getAngleAxis().getExtent();\r\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\r\n    newPoint = polar.pointToCoord(newPoint);\r\n\r\n    if (axisModel.mainType === 'radiusAxis') {\r\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\r\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\r\n\r\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\r\n      ret.pixelStart = radiusExtent[0];\r\n      ret.signal = axis.inverse ? 1 : -1;\r\n    } else {\r\n      // 'angleAxis'\r\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\r\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\r\n\r\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\r\n      ret.pixelStart = angleExtent[0];\r\n      ret.signal = axis.inverse ? -1 : 1;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\r\n    var axis = axisModel.axis;\r\n    var rect = coordInfo.model.coordinateSystem.getRect();\r\n    var ret = {};\r\n    oldPoint = oldPoint || [0, 0];\r\n\r\n    if (axis.orient === 'horizontal') {\r\n      ret.pixel = newPoint[0] - oldPoint[0];\r\n      ret.pixelLength = rect.width;\r\n      ret.pixelStart = rect.x;\r\n      ret.signal = axis.inverse ? 1 : -1;\r\n    } else {\r\n      // 'vertical'\r\n      ret.pixel = newPoint[1] - oldPoint[1];\r\n      ret.pixelLength = rect.height;\r\n      ret.pixelStart = rect.y;\r\n      ret.signal = axis.inverse ? -1 : 1;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n};\r\nvar _default = InsideZoomView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar DataZoomModel = require(\"./DataZoomModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = DataZoomModel.extend({\r\n  type: 'dataZoom.select'\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar DataZoomView = require(\"./DataZoomView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = DataZoomView.extend({\r\n  type: 'dataZoom.select'\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar DataZoomModel = require(\"./DataZoomModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar SliderZoomModel = DataZoomModel.extend({\r\n  type: 'dataZoom.slider',\r\n  layoutMode: 'box',\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    show: true,\r\n    // ph => placeholder. Using placehoder here because\r\n    // deault value can only be drived in view stage.\r\n    right: 'ph',\r\n    // Default align to grid rect.\r\n    top: 'ph',\r\n    // Default align to grid rect.\r\n    width: 'ph',\r\n    // Default align to grid rect.\r\n    height: 'ph',\r\n    // Default align to grid rect.\r\n    left: null,\r\n    // Default align to grid rect.\r\n    bottom: null,\r\n    // Default align to grid rect.\r\n    backgroundColor: 'rgba(47,69,84,0)',\r\n    // Background of slider zoom component.\r\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\r\n    // highest priority, remain for compatibility of\r\n    // previous version, but not recommended any more.\r\n    dataBackground: {\r\n      lineStyle: {\r\n        color: '#2f4554',\r\n        width: 0.5,\r\n        opacity: 0.3\r\n      },\r\n      areaStyle: {\r\n        color: 'rgba(47,69,84,0.3)',\r\n        opacity: 0.3\r\n      }\r\n    },\r\n    borderColor: '#ddd',\r\n    // border color of the box. For compatibility,\r\n    // if dataBackgroundColor is set, borderColor\r\n    // is ignored.\r\n    fillerColor: 'rgba(167,183,204,0.4)',\r\n    // Color of selected area.\r\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\r\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\r\n\r\n    /* eslint-disable */\r\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\r\n\r\n    /* eslint-enable */\r\n    // Percent of the slider height\r\n    handleSize: '100%',\r\n    handleStyle: {\r\n      color: '#a7b7cc'\r\n    },\r\n    labelPrecision: null,\r\n    labelFormatter: null,\r\n    showDetail: true,\r\n    showDataShadow: 'auto',\r\n    // Default auto decision.\r\n    realtime: true,\r\n    zoomLock: false,\r\n    // Whether disable zoom.\r\n    textStyle: {\r\n      color: '#333'\r\n    }\r\n  }\r\n});\r\nvar _default = SliderZoomModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar eventTool = require(\"zrender/lib/core/event\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar throttle = require(\"../../util/throttle\");\r\n\r\nvar DataZoomView = require(\"./DataZoomView\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar sliderMove = require(\"../helper/sliderMove\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar Rect = graphic.Rect;\r\nvar linearMap = numberUtil.linearMap;\r\nvar asc = numberUtil.asc;\r\nvar bind = zrUtil.bind;\r\nvar each = zrUtil.each; // Constants\r\n\r\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\r\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\r\nvar DEFAULT_FILLER_SIZE = 30;\r\nvar HORIZONTAL = 'horizontal';\r\nvar VERTICAL = 'vertical';\r\nvar LABEL_GAP = 5;\r\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\r\nvar SliderZoomView = DataZoomView.extend({\r\n  type: 'dataZoom.slider',\r\n  init: function (ecModel, api) {\r\n    /**\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this._displayables = {};\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n\r\n    this._orient;\r\n    /**\r\n     * [0, 100]\r\n     * @private\r\n     */\r\n\r\n    this._range;\r\n    /**\r\n     * [coord of the first handle, coord of the second handle]\r\n     * @private\r\n     */\r\n\r\n    this._handleEnds;\r\n    /**\r\n     * [length, thick]\r\n     * @private\r\n     * @type {Array.<number>}\r\n     */\r\n\r\n    this._size;\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n\r\n    this._handleWidth;\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n\r\n    this._handleHeight;\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._location;\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._dragging;\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._dataShadowInfo;\r\n    this.api = api;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (dataZoomModel, ecModel, api, payload) {\r\n    SliderZoomView.superApply(this, 'render', arguments);\r\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\r\n    this._orient = dataZoomModel.get('orient');\r\n\r\n    if (this.dataZoomModel.get('show') === false) {\r\n      this.group.removeAll();\r\n      return;\r\n    } // Notice: this._resetInterval() should not be executed when payload.type\r\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\r\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\r\n\r\n\r\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\r\n      this._buildView();\r\n    }\r\n\r\n    this._updateView();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  remove: function () {\r\n    SliderZoomView.superApply(this, 'remove', arguments);\r\n    throttle.clear(this, '_dispatchZoomAction');\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: function () {\r\n    SliderZoomView.superApply(this, 'dispose', arguments);\r\n    throttle.clear(this, '_dispatchZoomAction');\r\n  },\r\n  _buildView: function () {\r\n    var thisGroup = this.group;\r\n    thisGroup.removeAll();\r\n\r\n    this._resetLocation();\r\n\r\n    this._resetInterval();\r\n\r\n    var barGroup = this._displayables.barGroup = new graphic.Group();\r\n\r\n    this._renderBackground();\r\n\r\n    this._renderHandle();\r\n\r\n    this._renderDataShadow();\r\n\r\n    thisGroup.add(barGroup);\r\n\r\n    this._positionGroup();\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _resetLocation: function () {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var api = this.api; // If some of x/y/width/height are not specified,\r\n    // auto-adapt according to target grid.\r\n\r\n    var coordRect = this._findCoordRect();\r\n\r\n    var ecSize = {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    }; // Default align by coordinate system rect.\r\n\r\n    var positionInfo = this._orient === HORIZONTAL ? {\r\n      // Why using 'right', because right should be used in vertical,\r\n      // and it is better to be consistent for dealing with position param merge.\r\n      right: ecSize.width - coordRect.x - coordRect.width,\r\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\r\n      width: coordRect.width,\r\n      height: DEFAULT_FILLER_SIZE\r\n    } : {\r\n      // vertical\r\n      right: DEFAULT_LOCATION_EDGE_GAP,\r\n      top: coordRect.y,\r\n      width: DEFAULT_FILLER_SIZE,\r\n      height: coordRect.height\r\n    }; // Do not write back to option and replace value 'ph', because\r\n    // the 'ph' value should be recalculated when resize.\r\n\r\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\r\n\r\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\r\n      if (layoutParams[name] === 'ph') {\r\n        layoutParams[name] = positionInfo[name];\r\n      }\r\n    });\r\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\r\n    this._location = {\r\n      x: layoutRect.x,\r\n      y: layoutRect.y\r\n    };\r\n    this._size = [layoutRect.width, layoutRect.height];\r\n    this._orient === VERTICAL && this._size.reverse();\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _positionGroup: function () {\r\n    var thisGroup = this.group;\r\n    var location = this._location;\r\n    var orient = this._orient; // Just use the first axis to determine mapping.\r\n\r\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\r\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\r\n    var barGroup = this._displayables.barGroup;\r\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\r\n\r\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\r\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\r\n    } : orient === HORIZONTAL && inverse ? {\r\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\r\n    } : orient === VERTICAL && !inverse ? {\r\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\r\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\r\n\r\n    } : {\r\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\r\n      rotation: Math.PI / 2\r\n    }); // Position barGroup\r\n\r\n    var rect = thisGroup.getBoundingRect([barGroup]);\r\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _getViewExtent: function () {\r\n    return [0, this._size[0]];\r\n  },\r\n  _renderBackground: function () {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var size = this._size;\r\n    var barGroup = this._displayables.barGroup;\r\n    barGroup.add(new Rect({\r\n      silent: true,\r\n      shape: {\r\n        x: 0,\r\n        y: 0,\r\n        width: size[0],\r\n        height: size[1]\r\n      },\r\n      style: {\r\n        fill: dataZoomModel.get('backgroundColor')\r\n      },\r\n      z2: -40\r\n    })); // Click panel, over shadow, below handles.\r\n\r\n    barGroup.add(new Rect({\r\n      shape: {\r\n        x: 0,\r\n        y: 0,\r\n        width: size[0],\r\n        height: size[1]\r\n      },\r\n      style: {\r\n        fill: 'transparent'\r\n      },\r\n      z2: 0,\r\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\r\n    }));\r\n  },\r\n  _renderDataShadow: function () {\r\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\r\n\r\n    if (!info) {\r\n      return;\r\n    }\r\n\r\n    var size = this._size;\r\n    var seriesModel = info.series;\r\n    var data = seriesModel.getRawData();\r\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\r\n    : info.otherDim;\r\n\r\n    if (otherDim == null) {\r\n      return;\r\n    }\r\n\r\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\r\n\r\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\r\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\r\n    var otherShadowExtent = [0, size[1]];\r\n    var thisShadowExtent = [0, size[0]];\r\n    var areaPoints = [[size[0], 0], [0, 0]];\r\n    var linePoints = [];\r\n    var step = thisShadowExtent[1] / (data.count() - 1);\r\n    var thisCoord = 0; // Optimize for large data shadow\r\n\r\n    var stride = Math.round(data.count() / size[0]);\r\n    var lastIsEmpty;\r\n    data.each([otherDim], function (value, index) {\r\n      if (stride > 0 && index % stride) {\r\n        thisCoord += step;\r\n        return;\r\n      } // FIXME\r\n      // Should consider axis.min/axis.max when drawing dataShadow.\r\n      // FIXME\r\n      // 应该使用统一的空判断？还是在list里进行空判断？\r\n\r\n\r\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\r\n\r\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\r\n\r\n      if (isEmpty && !lastIsEmpty && index) {\r\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\r\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\r\n      } else if (!isEmpty && lastIsEmpty) {\r\n        areaPoints.push([thisCoord, 0]);\r\n        linePoints.push([thisCoord, 0]);\r\n      }\r\n\r\n      areaPoints.push([thisCoord, otherCoord]);\r\n      linePoints.push([thisCoord, otherCoord]);\r\n      thisCoord += step;\r\n      lastIsEmpty = isEmpty;\r\n    });\r\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\r\n\r\n    this._displayables.barGroup.add(new graphic.Polygon({\r\n      shape: {\r\n        points: areaPoints\r\n      },\r\n      style: zrUtil.defaults({\r\n        fill: dataZoomModel.get('dataBackgroundColor')\r\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\r\n      silent: true,\r\n      z2: -20\r\n    }));\r\n\r\n    this._displayables.barGroup.add(new graphic.Polyline({\r\n      shape: {\r\n        points: linePoints\r\n      },\r\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\r\n      silent: true,\r\n      z2: -19\r\n    }));\r\n  },\r\n  _prepareDataShadowInfo: function () {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var showDataShadow = dataZoomModel.get('showDataShadow');\r\n\r\n    if (showDataShadow === false) {\r\n      return;\r\n    } // Find a representative series.\r\n\r\n\r\n    var result;\r\n    var ecModel = this.ecModel;\r\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\r\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\r\n      zrUtil.each(seriesModels, function (seriesModel) {\r\n        if (result) {\r\n          return;\r\n        }\r\n\r\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\r\n          return;\r\n        }\r\n\r\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\r\n        var otherDim = getOtherDim(dimNames.name);\r\n        var otherAxisInverse;\r\n        var coordSys = seriesModel.coordinateSystem;\r\n\r\n        if (otherDim != null && coordSys.getOtherAxis) {\r\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\r\n        }\r\n\r\n        otherDim = seriesModel.getData().mapDimension(otherDim);\r\n        result = {\r\n          thisAxis: thisAxis,\r\n          series: seriesModel,\r\n          thisDim: dimNames.name,\r\n          otherDim: otherDim,\r\n          otherAxisInverse: otherAxisInverse\r\n        };\r\n      }, this);\r\n    }, this);\r\n    return result;\r\n  },\r\n  _renderHandle: function () {\r\n    var displaybles = this._displayables;\r\n    var handles = displaybles.handles = [];\r\n    var handleLabels = displaybles.handleLabels = [];\r\n    var barGroup = this._displayables.barGroup;\r\n    var size = this._size;\r\n    var dataZoomModel = this.dataZoomModel;\r\n    barGroup.add(displaybles.filler = new Rect({\r\n      draggable: true,\r\n      cursor: getCursor(this._orient),\r\n      drift: bind(this._onDragMove, this, 'all'),\r\n      ondragstart: bind(this._showDataInfo, this, true),\r\n      ondragend: bind(this._onDragEnd, this),\r\n      onmouseover: bind(this._showDataInfo, this, true),\r\n      onmouseout: bind(this._showDataInfo, this, false),\r\n      style: {\r\n        fill: dataZoomModel.get('fillerColor'),\r\n        textPosition: 'inside'\r\n      }\r\n    })); // Frame border.\r\n\r\n    barGroup.add(new Rect({\r\n      silent: true,\r\n      subPixelOptimize: true,\r\n      shape: {\r\n        x: 0,\r\n        y: 0,\r\n        width: size[0],\r\n        height: size[1]\r\n      },\r\n      style: {\r\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\r\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\r\n        fill: 'rgba(0,0,0,0)'\r\n      }\r\n    }));\r\n    each([0, 1], function (handleIndex) {\r\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\r\n        cursor: getCursor(this._orient),\r\n        draggable: true,\r\n        drift: bind(this._onDragMove, this, handleIndex),\r\n        ondragend: bind(this._onDragEnd, this),\r\n        onmouseover: bind(this._showDataInfo, this, true),\r\n        onmouseout: bind(this._showDataInfo, this, false)\r\n      }, {\r\n        x: -1,\r\n        y: 0,\r\n        width: 2,\r\n        height: 2\r\n      });\r\n      var bRect = path.getBoundingRect();\r\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\r\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\r\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\r\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\r\n\r\n      if (handleColor != null) {\r\n        path.style.fill = handleColor;\r\n      }\r\n\r\n      barGroup.add(handles[handleIndex] = path);\r\n      var textStyleModel = dataZoomModel.textStyleModel;\r\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\r\n        silent: true,\r\n        invisible: true,\r\n        style: {\r\n          x: 0,\r\n          y: 0,\r\n          text: '',\r\n          textVerticalAlign: 'middle',\r\n          textAlign: 'center',\r\n          textFill: textStyleModel.getTextColor(),\r\n          textFont: textStyleModel.getFont()\r\n        },\r\n        z2: 10\r\n      }));\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _resetInterval: function () {\r\n    var range = this._range = this.dataZoomModel.getPercentRange();\r\n\r\n    var viewExtent = this._getViewExtent();\r\n\r\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\r\n   * @param {number} delta\r\n   * @return {boolean} changed\r\n   */\r\n  _updateInterval: function (handleIndex, delta) {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var handleEnds = this._handleEnds;\r\n\r\n    var viewExtend = this._getViewExtent();\r\n\r\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\r\n    var percentExtent = [0, 100];\r\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\r\n    var lastRange = this._range;\r\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\r\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _updateView: function (nonRealtime) {\r\n    var displaybles = this._displayables;\r\n    var handleEnds = this._handleEnds;\r\n    var handleInterval = asc(handleEnds.slice());\r\n    var size = this._size;\r\n    each([0, 1], function (handleIndex) {\r\n      // Handles\r\n      var handle = displaybles.handles[handleIndex];\r\n      var handleHeight = this._handleHeight;\r\n      handle.attr({\r\n        scale: [handleHeight / 2, handleHeight / 2],\r\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\r\n      });\r\n    }, this); // Filler\r\n\r\n    displaybles.filler.setShape({\r\n      x: handleInterval[0],\r\n      y: 0,\r\n      width: handleInterval[1] - handleInterval[0],\r\n      height: size[1]\r\n    });\r\n\r\n    this._updateDataInfo(nonRealtime);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _updateDataInfo: function (nonRealtime) {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var displaybles = this._displayables;\r\n    var handleLabels = displaybles.handleLabels;\r\n    var orient = this._orient;\r\n    var labelTexts = ['', '']; // FIXME\r\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\r\n\r\n    if (dataZoomModel.get('showDetail')) {\r\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\r\n\r\n      if (axisProxy) {\r\n        var axis = axisProxy.getAxisModel().axis;\r\n        var range = this._range;\r\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\r\n        ? axisProxy.calculateDataWindow({\r\n          start: range[0],\r\n          end: range[1]\r\n        }).valueWindow : axisProxy.getDataValueWindow();\r\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\r\n      }\r\n    }\r\n\r\n    var orderedHandleEnds = asc(this._handleEnds.slice());\r\n    setLabel.call(this, 0);\r\n    setLabel.call(this, 1);\r\n\r\n    function setLabel(handleIndex) {\r\n      // Label\r\n      // Text should not transform by barGroup.\r\n      // Ignore handlers transform\r\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\r\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\r\n      var offset = this._handleWidth / 2 + LABEL_GAP;\r\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\r\n      handleLabels[handleIndex].setStyle({\r\n        x: textPoint[0],\r\n        y: textPoint[1],\r\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\r\n        textAlign: orient === HORIZONTAL ? direction : 'center',\r\n        text: labelTexts[handleIndex]\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _formatLabel: function (value, axis) {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var labelFormatter = dataZoomModel.get('labelFormatter');\r\n    var labelPrecision = dataZoomModel.get('labelPrecision');\r\n\r\n    if (labelPrecision == null || labelPrecision === 'auto') {\r\n      labelPrecision = axis.getPixelPrecision();\r\n    }\r\n\r\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\r\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\r\n    : value.toFixed(Math.min(labelPrecision, 20));\r\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {boolean} showOrHide true: show, false: hide\r\n   */\r\n  _showDataInfo: function (showOrHide) {\r\n    // Always show when drgging.\r\n    showOrHide = this._dragging || showOrHide;\r\n    var handleLabels = this._displayables.handleLabels;\r\n    handleLabels[0].attr('invisible', !showOrHide);\r\n    handleLabels[1].attr('invisible', !showOrHide);\r\n  },\r\n  _onDragMove: function (handleIndex, dx, dy, event) {\r\n    this._dragging = true; // For mobile device, prevent screen slider on the button.\r\n\r\n    eventTool.stop(event.event); // Transform dx, dy to bar coordination.\r\n\r\n    var barTransform = this._displayables.barGroup.getLocalTransform();\r\n\r\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\r\n\r\n    var changed = this._updateInterval(handleIndex, vertex[0]);\r\n\r\n    var realtime = this.dataZoomModel.get('realtime');\r\n\r\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\r\n    // which cause bad visual effect when progressive enabled.\r\n\r\n\r\n    changed && realtime && this._dispatchZoomAction();\r\n  },\r\n  _onDragEnd: function () {\r\n    this._dragging = false;\r\n\r\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\r\n    // drag end will cause the whole view rerender, which is unnecessary.\r\n\r\n\r\n    var realtime = this.dataZoomModel.get('realtime');\r\n    !realtime && this._dispatchZoomAction();\r\n  },\r\n  _onClickPanelClick: function (e) {\r\n    var size = this._size;\r\n\r\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\r\n\r\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\r\n      return;\r\n    }\r\n\r\n    var handleEnds = this._handleEnds;\r\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\r\n\r\n    var changed = this._updateInterval('all', localPoint[0] - center);\r\n\r\n    this._updateView();\r\n\r\n    changed && this._dispatchZoomAction();\r\n  },\r\n\r\n  /**\r\n   * This action will be throttled.\r\n   * @private\r\n   */\r\n  _dispatchZoomAction: function () {\r\n    var range = this._range;\r\n    this.api.dispatchAction({\r\n      type: 'dataZoom',\r\n      from: this.uid,\r\n      dataZoomId: this.dataZoomModel.id,\r\n      start: range[0],\r\n      end: range[1]\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _findCoordRect: function () {\r\n    // Find the grid coresponding to the first axis referred by dataZoom.\r\n    var rect;\r\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\r\n      if (!rect && coordInfoList.length) {\r\n        var coordSys = coordInfoList[0].model.coordinateSystem;\r\n        rect = coordSys.getRect && coordSys.getRect();\r\n      }\r\n    });\r\n\r\n    if (!rect) {\r\n      var width = this.api.getWidth();\r\n      var height = this.api.getHeight();\r\n      rect = {\r\n        x: width * 0.2,\r\n        y: height * 0.2,\r\n        width: width * 0.6,\r\n        height: height * 0.6\r\n      };\r\n    }\r\n\r\n    return rect;\r\n  }\r\n});\r\n\r\nfunction getOtherDim(thisDim) {\r\n  // FIXME\r\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\r\n  var map = {\r\n    x: 'y',\r\n    y: 'x',\r\n    radius: 'angle',\r\n    angle: 'radius'\r\n  };\r\n  return map[thisDim];\r\n}\r\n\r\nfunction getCursor(orient) {\r\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\r\n}\r\n\r\nvar _default = SliderZoomView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar helper = require(\"./helper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerAction('dataZoom', function (payload, ecModel) {\r\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\r\n    return model.get(dimNames.axisIndex);\r\n  });\r\n  var effectedModels = [];\r\n  ecModel.eachComponent({\r\n    mainType: 'dataZoom',\r\n    query: payload\r\n  }, function (model, index) {\r\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\r\n  });\r\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\r\n    dataZoomModel.setRawRange({\r\n      start: payload.start,\r\n      end: payload.end,\r\n      startValue: payload.startValue,\r\n      endValue: payload.endValue\r\n    });\r\n  });\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar each = _util.each;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerProcessor({\r\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\r\n  // there is a line series and a pie series, it is better not to update the\r\n  // line series if only pie series is needed to be updated.\r\n  getTargetSeries: function (ecModel) {\r\n    var seriesModelMap = createHashMap();\r\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\r\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\r\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\r\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\r\n          seriesModelMap.set(seriesModel.uid, seriesModel);\r\n        });\r\n      });\r\n    });\r\n    return seriesModelMap;\r\n  },\r\n  modifyOutputEnd: true,\r\n  // Consider appendData, where filter should be performed. Because data process is\r\n  // in block mode currently, it is not need to worry about that the overallProgress\r\n  // execute every frame.\r\n  overallReset: function (ecModel, api) {\r\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\r\n      // We calculate window and reset axis here but not in model\r\n      // init stage and not after action dispatch handler, because\r\n      // reset should be called after seriesData.restoreData.\r\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\r\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\r\n      }); // Caution: data zoom filtering is order sensitive when using\r\n      // percent range and no min/max/scale set on axis.\r\n      // For example, we have dataZoom definition:\r\n      // [\r\n      //      {xAxisIndex: 0, start: 30, end: 70},\r\n      //      {yAxisIndex: 0, start: 20, end: 80}\r\n      // ]\r\n      // In this case, [20, 80] of y-dataZoom should be based on data\r\n      // that have filtered by x-dataZoom using range of [30, 70],\r\n      // but should not be based on full raw data. Thus sliding\r\n      // x-dataZoom will change both ranges of xAxis and yAxis,\r\n      // while sliding y-dataZoom will only change the range of yAxis.\r\n      // So we should filter x-axis after reset x-axis immediately,\r\n      // and then reset y-axis and filter y-axis.\r\n\r\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\r\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\r\n      });\r\n    });\r\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\r\n      // Fullfill all of the range props so that user\r\n      // is able to get them from chart.getOption().\r\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\r\n      var percentRange = axisProxy.getDataPercentWindow();\r\n      var valueRange = axisProxy.getDataValueWindow();\r\n      dataZoomModel.setCalculatedRange({\r\n        start: percentRange[0],\r\n        end: percentRange[1],\r\n        startValue: valueRange[0],\r\n        endValue: valueRange[1]\r\n      });\r\n    });\r\n  }\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\r\n\r\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\r\n/**\r\n * @param {string} coordType\r\n * @return {boolean}\r\n */\r\n\r\nfunction isCoordSupported(coordType) {\r\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\r\n}\r\n/**\r\n * Create \"each\" method to iterate names.\r\n *\r\n * @pubilc\r\n * @param  {Array.<string>} names\r\n * @param  {Array.<string>=} attrs\r\n * @return {Function}\r\n */\r\n\r\n\r\nfunction createNameEach(names, attrs) {\r\n  names = names.slice();\r\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\r\n  attrs = (attrs || []).slice();\r\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\r\n  return function (callback, context) {\r\n    zrUtil.each(names, function (name, index) {\r\n      var nameObj = {\r\n        name: name,\r\n        capital: capitalNames[index]\r\n      };\r\n\r\n      for (var j = 0; j < attrs.length; j++) {\r\n        nameObj[attrs[j]] = name + capitalAttrs[j];\r\n      }\r\n\r\n      callback.call(context, nameObj);\r\n    });\r\n  };\r\n}\r\n/**\r\n * Iterate each dimension name.\r\n *\r\n * @public\r\n * @param {Function} callback The parameter is like:\r\n *                            {\r\n *                                name: 'angle',\r\n *                                capital: 'Angle',\r\n *                                axis: 'angleAxis',\r\n *                                axisIndex: 'angleAixs',\r\n *                                index: 'angleIndex'\r\n *                            }\r\n * @param {Object} context\r\n */\r\n\r\n\r\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\r\n/**\r\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\r\n * dataZoomModels and 'links' make up one or more graphics.\r\n * This function finds the graphic where the source dataZoomModel is in.\r\n *\r\n * @public\r\n * @param {Function} forEachNode Node iterator.\r\n * @param {Function} forEachEdgeType edgeType iterator\r\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\r\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\r\n */\r\n\r\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\r\n  return function (sourceNode) {\r\n    var result = {\r\n      nodes: [],\r\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\r\n\r\n    };\r\n    forEachEdgeType(function (edgeType) {\r\n      result.records[edgeType.name] = {};\r\n    });\r\n\r\n    if (!sourceNode) {\r\n      return result;\r\n    }\r\n\r\n    absorb(sourceNode, result);\r\n    var existsLink;\r\n\r\n    do {\r\n      existsLink = false;\r\n      forEachNode(processSingleNode);\r\n    } while (existsLink);\r\n\r\n    function processSingleNode(node) {\r\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\r\n        absorb(node, result);\r\n        existsLink = true;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  function isNodeAbsorded(node, result) {\r\n    return zrUtil.indexOf(result.nodes, node) >= 0;\r\n  }\r\n\r\n  function isLinked(node, result) {\r\n    var hasLink = false;\r\n    forEachEdgeType(function (edgeType) {\r\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\r\n        result.records[edgeType.name][edgeId] && (hasLink = true);\r\n      });\r\n    });\r\n    return hasLink;\r\n  }\r\n\r\n  function absorb(node, result) {\r\n    result.nodes.push(node);\r\n    forEachEdgeType(function (edgeType) {\r\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\r\n        result.records[edgeType.name][edgeId] = true;\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexports.isCoordSupported = isCoordSupported;\r\nexports.createNameEach = createNameEach;\r\nexports.eachAxisDim = eachAxisDim;\r\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar ATTR = '\\0_ec_hist_store';\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\r\n */\r\n\r\nfunction push(ecModel, newSnapshot) {\r\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\r\n  // complete an range with current range.\r\n\r\n  each(newSnapshot, function (batchItem, dataZoomId) {\r\n    var i = store.length - 1;\r\n\r\n    for (; i >= 0; i--) {\r\n      var snapshot = store[i];\r\n\r\n      if (snapshot[dataZoomId]) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (i < 0) {\r\n      // No origin range set, create one by current range.\r\n      var dataZoomModel = ecModel.queryComponents({\r\n        mainType: 'dataZoom',\r\n        subType: 'select',\r\n        id: dataZoomId\r\n      })[0];\r\n\r\n      if (dataZoomModel) {\r\n        var percentRange = dataZoomModel.getPercentRange();\r\n        store[0][dataZoomId] = {\r\n          dataZoomId: dataZoomId,\r\n          start: percentRange[0],\r\n          end: percentRange[1]\r\n        };\r\n      }\r\n    }\r\n  });\r\n  store.push(newSnapshot);\r\n}\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @return {Object} snapshot\r\n */\r\n\r\n\r\nfunction pop(ecModel) {\r\n  var store = giveStore(ecModel);\r\n  var head = store[store.length - 1];\r\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\r\n\r\n  var snapshot = {};\r\n  each(head, function (batchItem, dataZoomId) {\r\n    for (var i = store.length - 1; i >= 0; i--) {\r\n      var batchItem = store[i][dataZoomId];\r\n\r\n      if (batchItem) {\r\n        snapshot[dataZoomId] = batchItem;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n  return snapshot;\r\n}\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n */\r\n\r\n\r\nfunction clear(ecModel) {\r\n  ecModel[ATTR] = null;\r\n}\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @return {number} records. always >= 1.\r\n */\r\n\r\n\r\nfunction count(ecModel) {\r\n  return giveStore(ecModel).length;\r\n}\r\n/**\r\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\r\n * History length of each dataZoom may be different.\r\n * this._history[0] is used to store origin range.\r\n * @type {Array.<Object>}\r\n */\r\n\r\n\r\nfunction giveStore(ecModel) {\r\n  var store = ecModel[ATTR];\r\n\r\n  if (!store) {\r\n    store = ecModel[ATTR] = [{}];\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nexports.push = push;\r\nexports.pop = pop;\r\nexports.clear = clear;\r\nexports.count = count;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar RoamController = require(\"../../component/helper/RoamController\");\r\n\r\nvar throttleUtil = require(\"../../util/throttle\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Only create one roam controller for each coordinate system.\r\n// one roam controller might be refered by two inside data zoom\r\n// components (for example, one for x and one for y). When user\r\n// pan or zoom, only dispatch one action for those data zoom\r\n// components.\r\nvar ATTR = '\\0_ec_dataZoom_roams';\r\n/**\r\n * @public\r\n * @param {module:echarts/ExtensionAPI} api\r\n * @param {Object} dataZoomInfo\r\n * @param {string} dataZoomInfo.coordId\r\n * @param {Function} dataZoomInfo.containsPoint\r\n * @param {Array.<string>} dataZoomInfo.allCoordIds\r\n * @param {string} dataZoomInfo.dataZoomId\r\n * @param {Object} dataZoomInfo.getRange\r\n * @param {Function} dataZoomInfo.getRange.pan\r\n * @param {Function} dataZoomInfo.getRange.zoom\r\n * @param {Function} dataZoomInfo.getRange.scrollMove\r\n * @param {boolean} dataZoomInfo.dataZoomModel\r\n */\r\n\r\nfunction register(api, dataZoomInfo) {\r\n  var store = giveStore(api);\r\n  var theDataZoomId = dataZoomInfo.dataZoomId;\r\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\r\n  // Avoid memory leak, dispose all not-used-registered.\r\n\r\n  zrUtil.each(store, function (record, coordId) {\r\n    var dataZoomInfos = record.dataZoomInfos;\r\n\r\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\r\n      delete dataZoomInfos[theDataZoomId];\r\n      record.count--;\r\n    }\r\n  });\r\n  cleanStore(store);\r\n  var record = store[theCoordId]; // Create if needed.\r\n\r\n  if (!record) {\r\n    record = store[theCoordId] = {\r\n      coordId: theCoordId,\r\n      dataZoomInfos: {},\r\n      count: 0\r\n    };\r\n    record.controller = createController(api, record);\r\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\r\n  } // Update reference of dataZoom.\r\n\r\n\r\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\r\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\r\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\r\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\r\n\r\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\r\n\r\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.dataZoomModel.get('throttle', true), 'fixRate');\r\n}\r\n/**\r\n * @public\r\n * @param {module:echarts/ExtensionAPI} api\r\n * @param {string} dataZoomId\r\n */\r\n\r\n\r\nfunction unregister(api, dataZoomId) {\r\n  var store = giveStore(api);\r\n  zrUtil.each(store, function (record) {\r\n    record.controller.dispose();\r\n    var dataZoomInfos = record.dataZoomInfos;\r\n\r\n    if (dataZoomInfos[dataZoomId]) {\r\n      delete dataZoomInfos[dataZoomId];\r\n      record.count--;\r\n    }\r\n  });\r\n  cleanStore(store);\r\n}\r\n/**\r\n * @public\r\n */\r\n\r\n\r\nfunction generateCoordId(coordModel) {\r\n  return coordModel.type + '\\0_' + coordModel.id;\r\n}\r\n/**\r\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\r\n * @type {Array.<Object>}\r\n */\r\n\r\n\r\nfunction giveStore(api) {\r\n  // Mount store on zrender instance, so that we do not\r\n  // need to worry about dispose.\r\n  var zr = api.getZr();\r\n  return zr[ATTR] || (zr[ATTR] = {});\r\n}\r\n\r\nfunction createController(api, newRecord) {\r\n  var controller = new RoamController(api.getZr());\r\n  zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\r\n    controller.on(eventName, function (event) {\r\n      var batch = [];\r\n      zrUtil.each(newRecord.dataZoomInfos, function (info) {\r\n        // Check whether the behaviors (zoomOnMouseWheel, moveOnMouseMove,\r\n        // moveOnMouseWheel, ...) enabled.\r\n        if (!event.isAvailableBehavior(info.dataZoomModel.option)) {\r\n          return;\r\n        }\r\n\r\n        var method = (info.getRange || {})[eventName];\r\n        var range = method && method(newRecord.controller, event);\r\n        !info.dataZoomModel.get('disabled', true) && range && batch.push({\r\n          dataZoomId: info.dataZoomId,\r\n          start: range[0],\r\n          end: range[1]\r\n        });\r\n      });\r\n      batch.length && newRecord.dispatchAction(batch);\r\n    });\r\n  });\r\n  return controller;\r\n}\r\n\r\nfunction cleanStore(store) {\r\n  zrUtil.each(store, function (record, coordId) {\r\n    if (!record.count) {\r\n      record.controller.dispose();\r\n      delete store[coordId];\r\n    }\r\n  });\r\n}\r\n/**\r\n * This action will be throttled.\r\n */\r\n\r\n\r\nfunction dispatchAction(api, batch) {\r\n  api.dispatchAction({\r\n    type: 'dataZoom',\r\n    batch: batch\r\n  });\r\n}\r\n/**\r\n * Merge roamController settings when multiple dataZooms share one roamController.\r\n */\r\n\r\n\r\nfunction mergeControllerParams(dataZoomInfos) {\r\n  var controlType; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\r\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\r\n\r\n  var prefix = 'type_';\r\n  var typePriority = {\r\n    'type_true': 2,\r\n    'type_move': 1,\r\n    'type_false': 0,\r\n    'type_undefined': -1\r\n  };\r\n  var preventDefaultMouseMove = true;\r\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\r\n    var dataZoomModel = dataZoomInfo.dataZoomModel;\r\n    var oneType = dataZoomModel.get('disabled', true) ? false : dataZoomModel.get('zoomLock', true) ? 'move' : true;\r\n\r\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\r\n      controlType = oneType;\r\n    } // Prevent default move event by default. If one false, do not prevent. Otherwise\r\n    // users may be confused why it does not work when multiple insideZooms exist.\r\n\r\n\r\n    preventDefaultMouseMove &= dataZoomModel.get('preventDefaultMouseMove', true);\r\n  });\r\n  return {\r\n    controlType: controlType,\r\n    opt: {\r\n      // RoamController will enable all of these functionalities,\r\n      // and the final behavior is determined by its event listener\r\n      // provided by each inside zoom.\r\n      zoomOnMouseWheel: true,\r\n      moveOnMouseMove: true,\r\n      moveOnMouseWheel: true,\r\n      preventDefaultMouseMove: !!preventDefaultMouseMove\r\n    }\r\n  };\r\n}\r\n\r\nexports.register = register;\r\nexports.unregister = unregister;\r\nexports.generateCoordId = generateCoordId;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Component = require(\"../../model/Component\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nComponent.registerSubTypeDefaulter('dataZoom', function () {\r\n  // Default 'slider' when no type specified.\r\n  return 'slider';\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar ComponentModel = require(\"../model/Component\");\r\n\r\nvar ComponentView = require(\"../view/Component\");\r\n\r\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\r\n\r\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\r\n\r\nvar _sourceType = require(\"../data/helper/sourceType\");\r\n\r\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * This module is imported by echarts directly.\r\n *\r\n * Notice:\r\n * Always keep this file exists for backward compatibility.\r\n * Because before 4.1.0, dataset is an optional component,\r\n * some users may import this module manually.\r\n */\r\nComponentModel.extend({\r\n  type: 'dataset',\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    // 'row', 'column'\r\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\r\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\r\n    sourceHeader: null,\r\n    dimensions: null,\r\n    source: null\r\n  },\r\n  optionUpdated: function () {\r\n    detectSourceFormat(this);\r\n  }\r\n});\r\nComponentView.extend({\r\n  type: 'dataset'\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nrequire(\"../coord/geo/GeoModel\");\r\n\r\nrequire(\"../coord/geo/geoCreator\");\r\n\r\nrequire(\"./geo/GeoView\");\r\n\r\nrequire(\"../action/geoRoam\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction makeAction(method, actionInfo) {\r\n  actionInfo.update = 'updateView';\r\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\r\n    var selected = {};\r\n    ecModel.eachComponent({\r\n      mainType: 'geo',\r\n      query: payload\r\n    }, function (geoModel) {\r\n      geoModel[method](payload.name);\r\n      var geo = geoModel.coordinateSystem;\r\n      zrUtil.each(geo.regions, function (region) {\r\n        selected[region.name] = geoModel.isSelected(region.name) || false;\r\n      });\r\n    });\r\n    return {\r\n      selected: selected,\r\n      name: payload.name\r\n    };\r\n  });\r\n}\r\n\r\nmakeAction('toggleSelected', {\r\n  type: 'geoToggleSelect',\r\n  event: 'geoselectchanged'\r\n});\r\nmakeAction('select', {\r\n  type: 'geoSelect',\r\n  event: 'geoselected'\r\n});\r\nmakeAction('unSelect', {\r\n  type: 'geoUnSelect',\r\n  event: 'geounselected'\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar MapDraw = require(\"../helper/MapDraw\");\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendComponentView({\r\n  type: 'geo',\r\n  init: function (ecModel, api) {\r\n    var mapDraw = new MapDraw(api, true);\r\n    this._mapDraw = mapDraw;\r\n    this.group.add(mapDraw.group);\r\n  },\r\n  render: function (geoModel, ecModel, api, payload) {\r\n    // Not render if it is an toggleSelect action from self\r\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\r\n      return;\r\n    }\r\n\r\n    var mapDraw = this._mapDraw;\r\n\r\n    if (geoModel.get('show')) {\r\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\r\n    } else {\r\n      this._mapDraw.group.removeAll();\r\n    }\r\n\r\n    this.group.silent = geoModel.get('silent');\r\n  },\r\n  dispose: function () {\r\n    this._mapDraw && this._mapDraw.remove();\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar modelUtil = require(\"../util/model\");\r\n\r\nvar graphicUtil = require(\"../util/graphic\");\r\n\r\nvar layoutUtil = require(\"../util/layout\");\r\n\r\nvar _number = require(\"../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _nonShapeGraphicElements = {\r\n  // Reserved but not supported in graphic component.\r\n  path: null,\r\n  compoundPath: null,\r\n  // Supported in graphic component.\r\n  group: graphicUtil.Group,\r\n  image: graphicUtil.Image,\r\n  text: graphicUtil.Text\r\n}; // -------------\r\n// Preprocessor\r\n// -------------\r\n\r\necharts.registerPreprocessor(function (option) {\r\n  var graphicOption = option.graphic; // Convert\r\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\r\n  // or\r\n  // {graphic: {left: 10, type: 'circle'}}\r\n  // to\r\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\r\n\r\n  if (zrUtil.isArray(graphicOption)) {\r\n    if (!graphicOption[0] || !graphicOption[0].elements) {\r\n      option.graphic = [{\r\n        elements: graphicOption\r\n      }];\r\n    } else {\r\n      // Only one graphic instance can be instantiated. (We dont\r\n      // want that too many views are created in echarts._viewMap)\r\n      option.graphic = [option.graphic[0]];\r\n    }\r\n  } else if (graphicOption && !graphicOption.elements) {\r\n    option.graphic = [{\r\n      elements: [graphicOption]\r\n    }];\r\n  }\r\n}); // ------\r\n// Model\r\n// ------\r\n\r\nvar GraphicModel = echarts.extendComponentModel({\r\n  type: 'graphic',\r\n  defaultOption: {\r\n    // Extra properties for each elements:\r\n    //\r\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\r\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\r\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\r\n    //      This mechanism is useful when you want to position a group/element\r\n    //      against the right side or the center of this container.\r\n    //\r\n    // width/height: (can only be pixel value, default 0)\r\n    //      Only be used to specify contianer(group) size, if needed. And\r\n    //      can not be percentage value (like '33%'). See the reason in the\r\n    //      layout algorithm below.\r\n    //\r\n    // bounding: (enum: 'all' (default) | 'raw')\r\n    //      Specify how to calculate boundingRect when locating.\r\n    //      'all': Get uioned and transformed boundingRect\r\n    //          from both itself and its descendants.\r\n    //          This mode simplies confining a group of elements in the bounding\r\n    //          of their ancester container (e.g., using 'right: 0').\r\n    //      'raw': Only use the boundingRect of itself and before transformed.\r\n    //          This mode is similar to css behavior, which is useful when you\r\n    //          want an element to be able to overflow its container. (Consider\r\n    //          a rotated circle needs to be located in a corner.)\r\n    // info: custom info. enables user to mount some info on elements and use them\r\n    //      in event handlers. Update them only when user specified, otherwise, remain.\r\n    // Note: elements is always behind its ancestors in this elements array.\r\n    elements: [],\r\n    parentId: null\r\n  },\r\n\r\n  /**\r\n   * Save el options for the sake of the performance (only update modified graphics).\r\n   * The order is the same as those in option. (ancesters -> descendants)\r\n   *\r\n   * @private\r\n   * @type {Array.<Object>}\r\n   */\r\n  _elOptionsToUpdate: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  mergeOption: function (option) {\r\n    // Prevent default merge to elements\r\n    var elements = this.option.elements;\r\n    this.option.elements = null;\r\n    GraphicModel.superApply(this, 'mergeOption', arguments);\r\n    this.option.elements = elements;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  optionUpdated: function (newOption, isInit) {\r\n    var thisOption = this.option;\r\n    var newList = (isInit ? thisOption : newOption).elements;\r\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\r\n    var flattenedList = [];\r\n\r\n    this._flatten(newList, flattenedList);\r\n\r\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\r\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\r\n\r\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\r\n    zrUtil.each(mappingResult, function (resultItem, index) {\r\n      var newElOption = resultItem.option;\r\n\r\n      if (!newElOption) {\r\n        return;\r\n      }\r\n\r\n      elOptionsToUpdate.push(newElOption);\r\n      setKeyInfoToNewElOption(resultItem, newElOption);\r\n      mergeNewElOptionToExist(existList, index, newElOption);\r\n      setLayoutInfoToExist(existList[index], newElOption);\r\n    }, this); // Clean\r\n\r\n    for (var i = existList.length - 1; i >= 0; i--) {\r\n      if (existList[i] == null) {\r\n        existList.splice(i, 1);\r\n      } else {\r\n        // $action should be volatile, otherwise option gotten from\r\n        // `getOption` will contain unexpected $action.\r\n        delete existList[i].$action;\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Convert\r\n   * [{\r\n   *  type: 'group',\r\n   *  id: 'xx',\r\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\r\n   * }]\r\n   * to\r\n   * [\r\n   *  {type: 'group', id: 'xx'},\r\n   *  {type: 'circle', parentId: 'xx'},\r\n   *  {type: 'polygon', parentId: 'xx'}\r\n   * ]\r\n   *\r\n   * @private\r\n   * @param {Array.<Object>} optionList option list\r\n   * @param {Array.<Object>} result result of flatten\r\n   * @param {Object} parentOption parent option\r\n   */\r\n  _flatten: function (optionList, result, parentOption) {\r\n    zrUtil.each(optionList, function (option) {\r\n      if (!option) {\r\n        return;\r\n      }\r\n\r\n      if (parentOption) {\r\n        option.parentOption = parentOption;\r\n      }\r\n\r\n      result.push(option);\r\n      var children = option.children;\r\n\r\n      if (option.type === 'group' && children) {\r\n        this._flatten(children, result, option);\r\n      } // Deleting for JSON output, and for not affecting group creation.\r\n\r\n\r\n      delete option.children;\r\n    }, this);\r\n  },\r\n  // FIXME\r\n  // Pass to view using payload? setOption has a payload?\r\n  useElOptionsToUpdate: function () {\r\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\r\n\r\n    this._elOptionsToUpdate = null;\r\n    return els;\r\n  }\r\n}); // -----\r\n// View\r\n// -----\r\n\r\necharts.extendComponentView({\r\n  type: 'graphic',\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (ecModel, api) {\r\n    /**\r\n     * @private\r\n     * @type {module:zrender/core/util.HashMap}\r\n     */\r\n    this._elMap = zrUtil.createHashMap();\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/graphic/GraphicModel}\r\n     */\r\n\r\n    this._lastGraphicModel;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (graphicModel, ecModel, api) {\r\n    // Having leveraged between use cases and algorithm complexity, a very\r\n    // simple layout mechanism is used:\r\n    // The size(width/height) can be determined by itself or its parent (not\r\n    // implemented yet), but can not by its children. (Top-down travel)\r\n    // The location(x/y) can be determined by the bounding rect of itself\r\n    // (can including its descendants or not) and the size of its parent.\r\n    // (Bottom-up travel)\r\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\r\n    // view will be reused.\r\n    if (graphicModel !== this._lastGraphicModel) {\r\n      this._clear();\r\n    }\r\n\r\n    this._lastGraphicModel = graphicModel;\r\n\r\n    this._updateElements(graphicModel);\r\n\r\n    this._relocate(graphicModel, api);\r\n  },\r\n\r\n  /**\r\n   * Update graphic elements.\r\n   *\r\n   * @private\r\n   * @param {Object} graphicModel graphic model\r\n   */\r\n  _updateElements: function (graphicModel) {\r\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\r\n\r\n    if (!elOptionsToUpdate) {\r\n      return;\r\n    }\r\n\r\n    var elMap = this._elMap;\r\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\r\n\r\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\r\n      var $action = elOption.$action;\r\n      var id = elOption.id;\r\n      var existEl = elMap.get(id);\r\n      var parentId = elOption.parentId;\r\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\r\n      var elOptionStyle = elOption.style;\r\n\r\n      if (elOption.type === 'text' && elOptionStyle) {\r\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\r\n        // inaccurately locating.\r\n        if (elOption.hv && elOption.hv[1]) {\r\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\r\n        } // Compatible with previous setting: both support fill and textFill,\r\n        // stroke and textStroke.\r\n\r\n\r\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\r\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\r\n      } // Remove unnecessary props to avoid potential problems.\r\n\r\n\r\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\r\n\r\n      if (!$action || $action === 'merge') {\r\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\r\n      } else if ($action === 'replace') {\r\n        removeEl(existEl, elMap);\r\n        createEl(id, targetElParent, elOptionCleaned, elMap);\r\n      } else if ($action === 'remove') {\r\n        removeEl(existEl, elMap);\r\n      }\r\n\r\n      var el = elMap.get(id);\r\n\r\n      if (el) {\r\n        el.__ecGraphicWidthOption = elOption.width;\r\n        el.__ecGraphicHeightOption = elOption.height;\r\n        setEventData(el, graphicModel, elOption);\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Locate graphic elements.\r\n   *\r\n   * @private\r\n   * @param {Object} graphicModel graphic model\r\n   * @param {module:echarts/ExtensionAPI} api extension API\r\n   */\r\n  _relocate: function (graphicModel, api) {\r\n    var elOptions = graphicModel.option.elements;\r\n    var rootGroup = this.group;\r\n    var elMap = this._elMap;\r\n    var apiWidth = api.getWidth();\r\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\r\n\r\n    for (var i = 0; i < elOptions.length; i++) {\r\n      var elOption = elOptions[i];\r\n      var el = elMap.get(elOption.id);\r\n\r\n      if (!el || !el.isGroup) {\r\n        continue;\r\n      }\r\n\r\n      var parentEl = el.parent;\r\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\r\n\r\n      el.__ecGraphicWidth = parsePercent(el.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentEl.__ecGraphicWidth) || 0;\r\n      el.__ecGraphicHeight = parsePercent(el.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentEl.__ecGraphicHeight) || 0;\r\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\r\n\r\n\r\n    for (var i = elOptions.length - 1; i >= 0; i--) {\r\n      var elOption = elOptions[i];\r\n      var el = elMap.get(elOption.id);\r\n\r\n      if (!el) {\r\n        continue;\r\n      }\r\n\r\n      var parentEl = el.parent;\r\n      var containerInfo = parentEl === rootGroup ? {\r\n        width: apiWidth,\r\n        height: apiHeight\r\n      } : {\r\n        width: parentEl.__ecGraphicWidth,\r\n        height: parentEl.__ecGraphicHeight\r\n      }; // PENDING\r\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\r\n      // does not include the rect of [0, 0, group.width, group.height], which\r\n      // is probably weird for users. Should we make a break change for it?\r\n\r\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\r\n        hv: elOption.hv,\r\n        boundingMode: elOption.bounding\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Clear all elements.\r\n   *\r\n   * @private\r\n   */\r\n  _clear: function () {\r\n    var elMap = this._elMap;\r\n    elMap.each(function (el) {\r\n      removeEl(el, elMap);\r\n    });\r\n    this._elMap = zrUtil.createHashMap();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: function () {\r\n    this._clear();\r\n  }\r\n});\r\n\r\nfunction createEl(id, targetElParent, elOption, elMap) {\r\n  var graphicType = elOption.type;\r\n  var Clz = _nonShapeGraphicElements.hasOwnProperty(graphicType) // Those graphic elements are not shapes. They should not be\r\n  // overwritten by users, so do them first.\r\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\r\n  var el = new Clz(elOption);\r\n  targetElParent.add(el);\r\n  elMap.set(id, el);\r\n  el.__ecGraphicId = id;\r\n}\r\n\r\nfunction removeEl(existEl, elMap) {\r\n  var existElParent = existEl && existEl.parent;\r\n\r\n  if (existElParent) {\r\n    existEl.type === 'group' && existEl.traverse(function (el) {\r\n      removeEl(el, elMap);\r\n    });\r\n    elMap.removeKey(existEl.__ecGraphicId);\r\n    existElParent.remove(existEl);\r\n  }\r\n} // Remove unnecessary props to avoid potential problems.\r\n\r\n\r\nfunction getCleanedElOption(elOption) {\r\n  elOption = zrUtil.extend({}, elOption);\r\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\r\n    delete elOption[name];\r\n  });\r\n  return elOption;\r\n}\r\n\r\nfunction isSetLoc(obj, props) {\r\n  var isSet;\r\n  zrUtil.each(props, function (prop) {\r\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\r\n  });\r\n  return isSet;\r\n}\r\n\r\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\r\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\r\n\r\n  newElOption.id = resultItem.keyInfo.id;\r\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\r\n\r\n  if (newElOption.parentId == null) {\r\n    var newElParentOption = newElOption.parentOption;\r\n\r\n    if (newElParentOption) {\r\n      newElOption.parentId = newElParentOption.id;\r\n    } else if (existElOption) {\r\n      newElOption.parentId = existElOption.parentId;\r\n    }\r\n  } // Clear\r\n\r\n\r\n  newElOption.parentOption = null;\r\n}\r\n\r\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\r\n  // Update existing options, for `getOption` feature.\r\n  var newElOptCopy = zrUtil.extend({}, newElOption);\r\n  var existElOption = existList[index];\r\n  var $action = newElOption.$action || 'merge';\r\n\r\n  if ($action === 'merge') {\r\n    if (existElOption) {\r\n      // We can ensure that newElOptCopy and existElOption are not\r\n      // the same object, so `merge` will not change newElOptCopy.\r\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\r\n\r\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\r\n        ignoreSize: true\r\n      }); // Will be used in render.\r\n\r\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\r\n    } else {\r\n      existList[index] = newElOptCopy;\r\n    }\r\n  } else if ($action === 'replace') {\r\n    existList[index] = newElOptCopy;\r\n  } else if ($action === 'remove') {\r\n    // null will be cleaned later.\r\n    existElOption && (existList[index] = null);\r\n  }\r\n}\r\n\r\nfunction setLayoutInfoToExist(existItem, newElOption) {\r\n  if (!existItem) {\r\n    return;\r\n  }\r\n\r\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\r\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\r\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\r\n\r\n  if (existItem.type === 'group') {\r\n    existItem.width == null && (existItem.width = newElOption.width = 0);\r\n    existItem.height == null && (existItem.height = newElOption.height = 0);\r\n  }\r\n}\r\n\r\nfunction setEventData(el, graphicModel, elOption) {\r\n  var eventData = el.eventData; // Simple optimize for large amount of elements that no need event.\r\n\r\n  if (!el.silent && !el.ignore && !eventData) {\r\n    eventData = el.eventData = {\r\n      componentType: 'graphic',\r\n      componentIndex: graphicModel.componentIndex,\r\n      name: el.name\r\n    };\r\n  } // `elOption.info` enables user to mount some info on\r\n  // elements and use them in event handlers.\r\n\r\n\r\n  if (eventData) {\r\n    eventData.info = el.info;\r\n  }\r\n}","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./gridSimple\");\r\n\r\nrequire(\"./axisPointer/CartesianAxisPointer\");\r\n\r\nrequire(\"./axisPointer\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../util/graphic\");\r\n\r\nrequire(\"../coord/cartesian/Grid\");\r\n\r\nrequire(\"./axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Grid view\r\necharts.extendComponentView({\r\n  type: 'grid',\r\n  render: function (gridModel, ecModel) {\r\n    this.group.removeAll();\r\n\r\n    if (gridModel.get('show')) {\r\n      this.group.add(new graphic.Rect({\r\n        shape: gridModel.coordinateSystem.getRect(),\r\n        style: zrUtil.defaults({\r\n          fill: gridModel.get('backgroundColor')\r\n        }, gridModel.getItemStyle()),\r\n        silent: true,\r\n        z2: -1\r\n      }));\r\n    }\r\n  }\r\n});\r\necharts.registerPreprocessor(function (option) {\r\n  // Only create grid when need\r\n  if (option.xAxis && option.yAxis && !option.grid) {\r\n    option.grid = {};\r\n  }\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar interactionMutex = require(\"./interactionMutex\");\r\n\r\nvar DataDiffer = require(\"../../data/DataDiffer\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar curry = zrUtil.curry;\r\nvar each = zrUtil.each;\r\nvar map = zrUtil.map;\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max;\r\nvar mathPow = Math.pow;\r\nvar COVER_Z = 10000;\r\nvar UNSELECT_THRESHOLD = 6;\r\nvar MIN_RESIZE_LINE_WIDTH = 6;\r\nvar MUTEX_RESOURCE_KEY = 'globalPan';\r\nvar DIRECTION_MAP = {\r\n  w: [0, 0],\r\n  e: [0, 1],\r\n  n: [1, 0],\r\n  s: [1, 1]\r\n};\r\nvar CURSOR_MAP = {\r\n  w: 'ew',\r\n  e: 'ew',\r\n  n: 'ns',\r\n  s: 'ns',\r\n  ne: 'nesw',\r\n  sw: 'nesw',\r\n  nw: 'nwse',\r\n  se: 'nwse'\r\n};\r\nvar DEFAULT_BRUSH_OPT = {\r\n  brushStyle: {\r\n    lineWidth: 2,\r\n    stroke: 'rgba(0,0,0,0.3)',\r\n    fill: 'rgba(0,0,0,0.1)'\r\n  },\r\n  transformable: true,\r\n  brushMode: 'single',\r\n  removeOnClick: false\r\n};\r\nvar baseUID = 0;\r\n/**\r\n * @alias module:echarts/component/helper/BrushController\r\n * @constructor\r\n * @mixin {module:zrender/mixin/Eventful}\r\n * @event module:echarts/component/helper/BrushController#brush\r\n *        params:\r\n *            areas: Array.<Array>, coord relates to container group,\r\n *                                    If no container specified, to global.\r\n *            opt {\r\n *                isEnd: boolean,\r\n *                removeOnClick: boolean\r\n *            }\r\n *\r\n * @param {module:zrender/zrender~ZRender} zr\r\n */\r\n\r\nfunction BrushController(zr) {\r\n  Eventful.call(this);\r\n  /**\r\n   * @type {module:zrender/zrender~ZRender}\r\n   * @private\r\n   */\r\n\r\n  this._zr = zr;\r\n  /**\r\n   * @type {module:zrender/container/Group}\r\n   * @readOnly\r\n   */\r\n\r\n  this.group = new graphic.Group();\r\n  /**\r\n   * Only for drawing (after enabledBrush).\r\n   *     'line', 'rect', 'polygon' or false\r\n   *     If passing false/null/undefined, disable brush.\r\n   *     If passing 'auto', determined by panel.defaultBrushType\r\n   * @private\r\n   * @type {string}\r\n   */\r\n\r\n  this._brushType;\r\n  /**\r\n   * Only for drawing (after enabledBrush).\r\n   *\r\n   * @private\r\n   * @type {Object}\r\n   */\r\n\r\n  this._brushOption;\r\n  /**\r\n   * @private\r\n   * @type {Object}\r\n   */\r\n\r\n  this._panels;\r\n  /**\r\n   * @private\r\n   * @type {Array.<nubmer>}\r\n   */\r\n\r\n  this._track = [];\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._dragging;\r\n  /**\r\n   * @private\r\n   * @type {Array}\r\n   */\r\n\r\n  this._covers = [];\r\n  /**\r\n   * @private\r\n   * @type {moudule:zrender/container/Group}\r\n   */\r\n\r\n  this._creatingCover;\r\n  /**\r\n   * `true` means global panel\r\n   * @private\r\n   * @type {module:zrender/container/Group|boolean}\r\n   */\r\n\r\n  this._creatingPanel;\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._enableGlobalPan;\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  /**\r\n   * @private\r\n   * @type {string}\r\n   */\r\n  this._uid = 'brushController_' + baseUID++;\r\n  /**\r\n   * @private\r\n   * @type {Object}\r\n   */\r\n\r\n  this._handlers = {};\r\n  each(pointerHandlers, function (handler, eventName) {\r\n    this._handlers[eventName] = zrUtil.bind(handler, this);\r\n  }, this);\r\n}\r\n\r\nBrushController.prototype = {\r\n  constructor: BrushController,\r\n\r\n  /**\r\n   * If set to null/undefined/false, select disabled.\r\n   * @param {Object} brushOption\r\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\r\n   *                          If passing false/null/undefined, disable brush.\r\n   *                          If passing 'auto', determined by panel.defaultBrushType.\r\n   *                              ('auto' can not be used in global panel)\r\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\r\n   * @param {boolean} [brushOption.transformable=true]\r\n   * @param {boolean} [brushOption.removeOnClick=false]\r\n   * @param {Object} [brushOption.brushStyle]\r\n   * @param {number} [brushOption.brushStyle.width]\r\n   * @param {number} [brushOption.brushStyle.lineWidth]\r\n   * @param {string} [brushOption.brushStyle.stroke]\r\n   * @param {string} [brushOption.brushStyle.fill]\r\n   * @param {number} [brushOption.z]\r\n   */\r\n  enableBrush: function (brushOption) {\r\n    this._brushType && doDisableBrush(this);\r\n    brushOption.brushType && doEnableBrush(this, brushOption);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\r\n   *        Each items: {\r\n   *            panelId, // mandatory.\r\n   *            clipPath, // mandatory. function.\r\n   *            isTargetByCursor, // mandatory. function.\r\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\r\n   *            getLinearBrushOtherExtent, // optional. function.\r\n   *        }\r\n   */\r\n  setPanels: function (panelOpts) {\r\n    if (panelOpts && panelOpts.length) {\r\n      var panels = this._panels = {};\r\n      zrUtil.each(panelOpts, function (panelOpts) {\r\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\r\n      });\r\n    } else {\r\n      this._panels = null;\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @param {Object} [opt]\r\n   * @return {boolean} [opt.enableGlobalPan=false]\r\n   */\r\n  mount: function (opt) {\r\n    opt = opt || {};\r\n    this._enableGlobalPan = opt.enableGlobalPan;\r\n    var thisGroup = this.group;\r\n\r\n    this._zr.add(thisGroup);\r\n\r\n    thisGroup.attr({\r\n      position: opt.position || [0, 0],\r\n      rotation: opt.rotation || 0,\r\n      scale: opt.scale || [1, 1]\r\n    });\r\n    this._transform = thisGroup.getLocalTransform();\r\n    return this;\r\n  },\r\n  eachCover: function (cb, context) {\r\n    each(this._covers, cb, context);\r\n  },\r\n\r\n  /**\r\n   * Update covers.\r\n   * @param {Array.<Object>} brushOptionList Like:\r\n   *        [\r\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\r\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\r\n   *            ...\r\n   *        ]\r\n   *        `brushType` is required in each cover info. (can not be 'auto')\r\n   *        `id` is not mandatory.\r\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\r\n   *        If brushOptionList is null/undefined, all covers removed.\r\n   */\r\n  updateCovers: function (brushOptionList) {\r\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\r\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\r\n    });\r\n    var tmpIdPrefix = '\\0-brush-index-';\r\n    var oldCovers = this._covers;\r\n    var newCovers = this._covers = [];\r\n    var controller = this;\r\n    var creatingCover = this._creatingCover;\r\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\r\n    return this;\r\n\r\n    function getKey(brushOption, index) {\r\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\r\n    }\r\n\r\n    function oldGetKey(cover, index) {\r\n      return getKey(cover.__brushOption, index);\r\n    }\r\n\r\n    function addOrUpdate(newIndex, oldIndex) {\r\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\r\n      // where updating cover when creating should be forbiden.\r\n\r\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\r\n        newCovers[newIndex] = oldCovers[oldIndex];\r\n      } else {\r\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\r\n        updateCoverAfterCreation(controller, cover);\r\n      }\r\n    }\r\n\r\n    function remove(oldIndex) {\r\n      if (oldCovers[oldIndex] !== creatingCover) {\r\n        controller.group.remove(oldCovers[oldIndex]);\r\n      }\r\n    }\r\n  },\r\n  unmount: function () {\r\n    this.enableBrush(false); // container may 'removeAll' outside.\r\n\r\n    clearCovers(this);\r\n\r\n    this._zr.remove(this.group);\r\n\r\n    return this;\r\n  },\r\n  dispose: function () {\r\n    this.unmount();\r\n    this.off();\r\n  }\r\n};\r\nzrUtil.mixin(BrushController, Eventful);\r\n\r\nfunction doEnableBrush(controller, brushOption) {\r\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\r\n\r\n  if (!controller._enableGlobalPan) {\r\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\r\n  }\r\n\r\n  mountHandlers(zr, controller._handlers);\r\n  controller._brushType = brushOption.brushType;\r\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\r\n}\r\n\r\nfunction doDisableBrush(controller) {\r\n  var zr = controller._zr;\r\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\r\n  unmountHandlers(zr, controller._handlers);\r\n  controller._brushType = controller._brushOption = null;\r\n}\r\n\r\nfunction mountHandlers(zr, handlers) {\r\n  each(handlers, function (handler, eventName) {\r\n    zr.on(eventName, handler);\r\n  });\r\n}\r\n\r\nfunction unmountHandlers(zr, handlers) {\r\n  each(handlers, function (handler, eventName) {\r\n    zr.off(eventName, handler);\r\n  });\r\n}\r\n\r\nfunction createCover(controller, brushOption) {\r\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\r\n  cover.__brushOption = brushOption;\r\n  updateZ(cover, brushOption);\r\n  controller.group.add(cover);\r\n  return cover;\r\n}\r\n\r\nfunction endCreating(controller, creatingCover) {\r\n  var coverRenderer = getCoverRenderer(creatingCover);\r\n\r\n  if (coverRenderer.endCreating) {\r\n    coverRenderer.endCreating(controller, creatingCover);\r\n    updateZ(creatingCover, creatingCover.__brushOption);\r\n  }\r\n\r\n  return creatingCover;\r\n}\r\n\r\nfunction updateCoverShape(controller, cover) {\r\n  var brushOption = cover.__brushOption;\r\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\r\n}\r\n\r\nfunction updateZ(cover, brushOption) {\r\n  var z = brushOption.z;\r\n  z == null && (z = COVER_Z);\r\n  cover.traverse(function (el) {\r\n    el.z = z;\r\n    el.z2 = z; // Consider in given container.\r\n  });\r\n}\r\n\r\nfunction updateCoverAfterCreation(controller, cover) {\r\n  getCoverRenderer(cover).updateCommon(controller, cover);\r\n  updateCoverShape(controller, cover);\r\n}\r\n\r\nfunction getCoverRenderer(cover) {\r\n  return coverRenderers[cover.__brushOption.brushType];\r\n} // return target panel or `true` (means global panel)\r\n\r\n\r\nfunction getPanelByPoint(controller, e, localCursorPoint) {\r\n  var panels = controller._panels;\r\n\r\n  if (!panels) {\r\n    return true; // Global panel\r\n  }\r\n\r\n  var panel;\r\n  var transform = controller._transform;\r\n  each(panels, function (pn) {\r\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\r\n  });\r\n  return panel;\r\n} // Return a panel or true\r\n\r\n\r\nfunction getPanelByCover(controller, cover) {\r\n  var panels = controller._panels;\r\n\r\n  if (!panels) {\r\n    return true; // Global panel\r\n  }\r\n\r\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\r\n  // which is then treated as global panel.\r\n\r\n  return panelId != null ? panels[panelId] : true;\r\n}\r\n\r\nfunction clearCovers(controller) {\r\n  var covers = controller._covers;\r\n  var originalLength = covers.length;\r\n  each(covers, function (cover) {\r\n    controller.group.remove(cover);\r\n  }, controller);\r\n  covers.length = 0;\r\n  return !!originalLength;\r\n}\r\n\r\nfunction trigger(controller, opt) {\r\n  var areas = map(controller._covers, function (cover) {\r\n    var brushOption = cover.__brushOption;\r\n    var range = zrUtil.clone(brushOption.range);\r\n    return {\r\n      brushType: brushOption.brushType,\r\n      panelId: brushOption.panelId,\r\n      range: range\r\n    };\r\n  });\r\n  controller.trigger('brush', areas, {\r\n    isEnd: !!opt.isEnd,\r\n    removeOnClick: !!opt.removeOnClick\r\n  });\r\n}\r\n\r\nfunction shouldShowCover(controller) {\r\n  var track = controller._track;\r\n\r\n  if (!track.length) {\r\n    return false;\r\n  }\r\n\r\n  var p2 = track[track.length - 1];\r\n  var p1 = track[0];\r\n  var dx = p2[0] - p1[0];\r\n  var dy = p2[1] - p1[1];\r\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\r\n  return dist > UNSELECT_THRESHOLD;\r\n}\r\n\r\nfunction getTrackEnds(track) {\r\n  var tail = track.length - 1;\r\n  tail < 0 && (tail = 0);\r\n  return [track[0], track[tail]];\r\n}\r\n\r\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\r\n  var cover = new graphic.Group();\r\n  cover.add(new graphic.Rect({\r\n    name: 'main',\r\n    style: makeStyle(brushOption),\r\n    silent: true,\r\n    draggable: true,\r\n    cursor: 'move',\r\n    drift: curry(doDrift, controller, cover, 'nswe'),\r\n    ondragend: curry(trigger, controller, {\r\n      isEnd: true\r\n    })\r\n  }));\r\n  each(edgeNames, function (name) {\r\n    cover.add(new graphic.Rect({\r\n      name: name,\r\n      style: {\r\n        opacity: 0\r\n      },\r\n      draggable: true,\r\n      silent: true,\r\n      invisible: true,\r\n      drift: curry(doDrift, controller, cover, name),\r\n      ondragend: curry(trigger, controller, {\r\n        isEnd: true\r\n      })\r\n    }));\r\n  });\r\n  return cover;\r\n}\r\n\r\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\r\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\r\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\r\n  var x = localRange[0][0];\r\n  var y = localRange[1][0];\r\n  var xa = x - lineWidth / 2;\r\n  var ya = y - lineWidth / 2;\r\n  var x2 = localRange[0][1];\r\n  var y2 = localRange[1][1];\r\n  var x2a = x2 - handleSize + lineWidth / 2;\r\n  var y2a = y2 - handleSize + lineWidth / 2;\r\n  var width = x2 - x;\r\n  var height = y2 - y;\r\n  var widtha = width + lineWidth;\r\n  var heighta = height + lineWidth;\r\n  updateRectShape(controller, cover, 'main', x, y, width, height);\r\n\r\n  if (brushOption.transformable) {\r\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\r\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\r\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\r\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\r\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\r\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\r\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\r\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\r\n  }\r\n}\r\n\r\nfunction updateCommon(controller, cover) {\r\n  var brushOption = cover.__brushOption;\r\n  var transformable = brushOption.transformable;\r\n  var mainEl = cover.childAt(0);\r\n  mainEl.useStyle(makeStyle(brushOption));\r\n  mainEl.attr({\r\n    silent: !transformable,\r\n    cursor: transformable ? 'move' : 'default'\r\n  });\r\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\r\n    var el = cover.childOfName(name);\r\n    var globalDir = getGlobalDirection(controller, name);\r\n    el && el.attr({\r\n      silent: !transformable,\r\n      invisible: !transformable,\r\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\r\n    });\r\n  });\r\n}\r\n\r\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\r\n  var el = cover.childOfName(name);\r\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\r\n}\r\n\r\nfunction makeStyle(brushOption) {\r\n  return zrUtil.defaults({\r\n    strokeNoScale: true\r\n  }, brushOption.brushStyle);\r\n}\r\n\r\nfunction formatRectRange(x, y, x2, y2) {\r\n  var min = [mathMin(x, x2), mathMin(y, y2)];\r\n  var max = [mathMax(x, x2), mathMax(y, y2)];\r\n  return [[min[0], max[0]], // x range\r\n  [min[1], max[1]] // y range\r\n  ];\r\n}\r\n\r\nfunction getTransform(controller) {\r\n  return graphic.getTransform(controller.group);\r\n}\r\n\r\nfunction getGlobalDirection(controller, localDirection) {\r\n  if (localDirection.length > 1) {\r\n    localDirection = localDirection.split('');\r\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\r\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\r\n    return globalDir.join('');\r\n  } else {\r\n    var map = {\r\n      w: 'left',\r\n      e: 'right',\r\n      n: 'top',\r\n      s: 'bottom'\r\n    };\r\n    var inverseMap = {\r\n      left: 'w',\r\n      right: 'e',\r\n      top: 'n',\r\n      bottom: 's'\r\n    };\r\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\r\n    return inverseMap[globalDir];\r\n  }\r\n}\r\n\r\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\r\n  var brushOption = cover.__brushOption;\r\n  var rectRange = toRectRange(brushOption.range);\r\n  var localDelta = toLocalDelta(controller, dx, dy);\r\n  each(name.split(''), function (namePart) {\r\n    var ind = DIRECTION_MAP[namePart];\r\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\r\n  });\r\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\r\n  updateCoverAfterCreation(controller, cover);\r\n  trigger(controller, {\r\n    isEnd: false\r\n  });\r\n}\r\n\r\nfunction driftPolygon(controller, cover, dx, dy, e) {\r\n  var range = cover.__brushOption.range;\r\n  var localDelta = toLocalDelta(controller, dx, dy);\r\n  each(range, function (point) {\r\n    point[0] += localDelta[0];\r\n    point[1] += localDelta[1];\r\n  });\r\n  updateCoverAfterCreation(controller, cover);\r\n  trigger(controller, {\r\n    isEnd: false\r\n  });\r\n}\r\n\r\nfunction toLocalDelta(controller, dx, dy) {\r\n  var thisGroup = controller.group;\r\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\r\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\r\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\r\n}\r\n\r\nfunction clipByPanel(controller, cover, data) {\r\n  var panel = getPanelByCover(controller, cover);\r\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\r\n}\r\n\r\nfunction pointsToRect(points) {\r\n  var xmin = mathMin(points[0][0], points[1][0]);\r\n  var ymin = mathMin(points[0][1], points[1][1]);\r\n  var xmax = mathMax(points[0][0], points[1][0]);\r\n  var ymax = mathMax(points[0][1], points[1][1]);\r\n  return {\r\n    x: xmin,\r\n    y: ymin,\r\n    width: xmax - xmin,\r\n    height: ymax - ymin\r\n  };\r\n}\r\n\r\nfunction resetCursor(controller, e, localCursorPoint) {\r\n  if ( // Check active\r\n  !controller._brushType // resetCursor should be always called when mouse is in zr area,\r\n  // but not called when mouse is out of zr area to avoid bad influence\r\n  // if `mousemove`, `mouseup` are triggered from `document` event.\r\n  || isOutsideZrArea(controller, e)) {\r\n    return;\r\n  }\r\n\r\n  var zr = controller._zr;\r\n  var covers = controller._covers;\r\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\r\n\r\n  if (!controller._dragging) {\r\n    for (var i = 0; i < covers.length; i++) {\r\n      var brushOption = covers[i].__brushOption;\r\n\r\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\r\n        // Use cursor style set on cover.\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  currPanel && zr.setCursorStyle('crosshair');\r\n}\r\n\r\nfunction preventDefault(e) {\r\n  var rawE = e.event;\r\n  rawE.preventDefault && rawE.preventDefault();\r\n}\r\n\r\nfunction mainShapeContain(cover, x, y) {\r\n  return cover.childOfName('main').contain(x, y);\r\n}\r\n\r\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\r\n  var creatingCover = controller._creatingCover;\r\n  var panel = controller._creatingPanel;\r\n  var thisBrushOption = controller._brushOption;\r\n  var eventParams;\r\n\r\n  controller._track.push(localCursorPoint.slice());\r\n\r\n  if (shouldShowCover(controller) || creatingCover) {\r\n    if (panel && !creatingCover) {\r\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\r\n      var brushOption = zrUtil.clone(thisBrushOption);\r\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\r\n      brushOption.panelId = panel === true ? null : panel.panelId;\r\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\r\n\r\n      controller._covers.push(creatingCover);\r\n    }\r\n\r\n    if (creatingCover) {\r\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\r\n      var coverBrushOption = creatingCover.__brushOption;\r\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\r\n\r\n      if (isEnd) {\r\n        endCreating(controller, creatingCover);\r\n        coverRenderer.updateCommon(controller, creatingCover);\r\n      }\r\n\r\n      updateCoverShape(controller, creatingCover);\r\n      eventParams = {\r\n        isEnd: isEnd\r\n      };\r\n    }\r\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\r\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\r\n    // But a single click do not clear covers, because user may have casual\r\n    // clicks (for example, click on other component and do not expect covers\r\n    // disappear).\r\n    // Only some cover removed, trigger action, but not every click trigger action.\r\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\r\n      eventParams = {\r\n        isEnd: isEnd,\r\n        removeOnClick: true\r\n      };\r\n    }\r\n  }\r\n\r\n  return eventParams;\r\n}\r\n\r\nfunction determineBrushType(brushType, panel) {\r\n  if (brushType === 'auto') {\r\n    return panel.defaultBrushType;\r\n  }\r\n\r\n  return brushType;\r\n}\r\n\r\nvar pointerHandlers = {\r\n  mousedown: function (e) {\r\n    if (this._dragging) {\r\n      // In case some browser do not support globalOut,\r\n      // and release mose out side the browser.\r\n      handleDragEnd(this, e);\r\n    } else if (!e.target || !e.target.draggable) {\r\n      preventDefault(e);\r\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\r\n      this._creatingCover = null;\r\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\r\n\r\n      if (panel) {\r\n        this._dragging = true;\r\n        this._track = [localCursorPoint.slice()];\r\n      }\r\n    }\r\n  },\r\n  mousemove: function (e) {\r\n    var x = e.offsetX;\r\n    var y = e.offsetY;\r\n    var localCursorPoint = this.group.transformCoordToLocal(x, y);\r\n    resetCursor(this, e, localCursorPoint);\r\n\r\n    if (this._dragging) {\r\n      preventDefault(e);\r\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\r\n      eventParams && trigger(this, eventParams);\r\n    }\r\n  },\r\n  mouseup: function (e) {\r\n    handleDragEnd(this, e);\r\n  }\r\n};\r\n\r\nfunction handleDragEnd(controller, e) {\r\n  if (controller._dragging) {\r\n    preventDefault(e);\r\n    var x = e.offsetX;\r\n    var y = e.offsetY;\r\n    var localCursorPoint = controller.group.transformCoordToLocal(x, y);\r\n    var eventParams = updateCoverByMouse(controller, e, localCursorPoint, true);\r\n    controller._dragging = false;\r\n    controller._track = [];\r\n    controller._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\r\n\r\n    eventParams && trigger(controller, eventParams);\r\n  }\r\n}\r\n\r\nfunction isOutsideZrArea(controller, x, y) {\r\n  var zr = controller._zr;\r\n  return x < 0 || x > zr.getWidth() || y < 0 || y > zr.getHeight();\r\n}\r\n/**\r\n * key: brushType\r\n * @type {Object}\r\n */\r\n\r\n\r\nvar coverRenderers = {\r\n  lineX: getLineRenderer(0),\r\n  lineY: getLineRenderer(1),\r\n  rect: {\r\n    createCover: function (controller, brushOption) {\r\n      return createBaseRectCover(curry(driftRect, function (range) {\r\n        return range;\r\n      }, function (range) {\r\n        return range;\r\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\r\n    },\r\n    getCreatingRange: function (localTrack) {\r\n      var ends = getTrackEnds(localTrack);\r\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\r\n    },\r\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\r\n      updateBaseRect(controller, cover, localRange, brushOption);\r\n    },\r\n    updateCommon: updateCommon,\r\n    contain: mainShapeContain\r\n  },\r\n  polygon: {\r\n    createCover: function (controller, brushOption) {\r\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\r\n      // border of the shape when drawing, which is a better experience for user.\r\n\r\n      cover.add(new graphic.Polyline({\r\n        name: 'main',\r\n        style: makeStyle(brushOption),\r\n        silent: true\r\n      }));\r\n      return cover;\r\n    },\r\n    getCreatingRange: function (localTrack) {\r\n      return localTrack;\r\n    },\r\n    endCreating: function (controller, cover) {\r\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\r\n\r\n      cover.add(new graphic.Polygon({\r\n        name: 'main',\r\n        draggable: true,\r\n        drift: curry(driftPolygon, controller, cover),\r\n        ondragend: curry(trigger, controller, {\r\n          isEnd: true\r\n        })\r\n      }));\r\n    },\r\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\r\n      cover.childAt(0).setShape({\r\n        points: clipByPanel(controller, cover, localRange)\r\n      });\r\n    },\r\n    updateCommon: updateCommon,\r\n    contain: mainShapeContain\r\n  }\r\n};\r\n\r\nfunction getLineRenderer(xyIndex) {\r\n  return {\r\n    createCover: function (controller, brushOption) {\r\n      return createBaseRectCover(curry(driftRect, function (range) {\r\n        var rectRange = [range, [0, 100]];\r\n        xyIndex && rectRange.reverse();\r\n        return rectRange;\r\n      }, function (rectRange) {\r\n        return rectRange[xyIndex];\r\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\r\n    },\r\n    getCreatingRange: function (localTrack) {\r\n      var ends = getTrackEnds(localTrack);\r\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\r\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\r\n      return [min, max];\r\n    },\r\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\r\n      var otherExtent; // If brushWidth not specified, fit the panel.\r\n\r\n      var panel = getPanelByCover(controller, cover);\r\n\r\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\r\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\r\n      } else {\r\n        var zr = controller._zr;\r\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\r\n      }\r\n\r\n      var rectRange = [localRange, otherExtent];\r\n      xyIndex && rectRange.reverse();\r\n      updateBaseRect(controller, cover, rectRange, brushOption);\r\n    },\r\n    updateCommon: updateCommon,\r\n    contain: mainShapeContain\r\n  };\r\n}\r\n\r\nvar _default = BrushController;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\nvar brushHelper = require(\"./brushHelper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar indexOf = zrUtil.indexOf;\r\nvar curry = zrUtil.curry;\r\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\r\n// how to genarialize to more coordinate systems.\r\n\r\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\r\n/**\r\n * [option in constructor]:\r\n * {\r\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\r\n * }\r\n *\r\n *\r\n * [targetInfo]:\r\n *\r\n * There can be multiple axes in a single targetInfo. Consider the case\r\n * of `grid` component, a targetInfo represents a grid which contains one or more\r\n * cartesian and one or more axes. And consider the case of parallel system,\r\n * which has multiple axes in a coordinate system.\r\n * Can be {\r\n *     panelId: ...,\r\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\r\n *     coordSyses: all cartesians.\r\n *     gridModel: <grid component>\r\n *     xAxes: correspond to coordSyses on index\r\n *     yAxes: correspond to coordSyses on index\r\n * }\r\n * or {\r\n *     panelId: ...,\r\n *     coordSys: <geo coord sys>\r\n *     coordSyses: [<geo coord sys>]\r\n *     geoModel: <geo component>\r\n * }\r\n *\r\n *\r\n * [panelOpt]:\r\n *\r\n * Make from targetInfo. Input to BrushController.\r\n * {\r\n *     panelId: ...,\r\n *     rect: ...\r\n * }\r\n *\r\n *\r\n * [area]:\r\n *\r\n * Generated by BrushController or user input.\r\n * {\r\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\r\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\r\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\r\n *     range: pixel range.\r\n *     coordRange: representitive coord range (the first one of coordRanges).\r\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\r\n * }\r\n */\r\n\r\n/**\r\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\r\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {Object} [opt]\r\n * @param {Array.<string>} [opt.include] include coordinate system types.\r\n */\r\n\r\nfunction BrushTargetManager(option, ecModel, opt) {\r\n  /**\r\n   * @private\r\n   * @type {Array.<Object>}\r\n   */\r\n  var targetInfoList = this._targetInfoList = [];\r\n  var info = {};\r\n  var foundCpts = parseFinder(ecModel, option);\r\n  each(targetInfoBuilders, function (builder, type) {\r\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\r\n      builder(foundCpts, targetInfoList, info);\r\n    }\r\n  });\r\n}\r\n\r\nvar proto = BrushTargetManager.prototype;\r\n\r\nproto.setOutputRanges = function (areas, ecModel) {\r\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\r\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\r\n\r\n    if (!area.coordRange) {\r\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\r\n      // rebuild range by coordRange accrately, which may bring trouble when\r\n      // brushing only one item. So we use __rangeOffset to rebuilding range\r\n      // by coordRange. And this it only used in brush component so it is no\r\n      // need to be adapted to coordRanges.\r\n\r\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\r\n      area.__rangeOffset = {\r\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\r\n        xyMinMax: result.xyMinMax\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nproto.matchOutputRanges = function (areas, ecModel, cb) {\r\n  each(areas, function (area) {\r\n    var targetInfo = this.findTargetInfo(area, ecModel);\r\n\r\n    if (targetInfo && targetInfo !== true) {\r\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\r\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\r\n        cb(area, result.values, coordSys, ecModel);\r\n      });\r\n    }\r\n  }, this);\r\n};\r\n\r\nproto.setInputRanges = function (areas, ecModel) {\r\n  each(areas, function (area) {\r\n    var targetInfo = this.findTargetInfo(area, ecModel);\r\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\r\n\r\n    if (targetInfo && targetInfo !== true) {\r\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\r\n      // not keep its original value, for the sake of the dataZoom scenario,\r\n      // where area.coordRange remains unchanged but area.range may be changed.\r\n      // (2) Only support converting one coordRange to pixel range in brush\r\n      // component. So do not consider `coordRanges`.\r\n      // (3) About __rangeOffset, see comment above.\r\n\r\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\r\n      var rangeOffset = area.__rangeOffset;\r\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\r\n    }\r\n  }, this);\r\n};\r\n\r\nproto.makePanelOpts = function (api, getDefaultBrushType) {\r\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\r\n    var rect = targetInfo.getPanelRect();\r\n    return {\r\n      panelId: targetInfo.panelId,\r\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\r\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\r\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\r\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\r\n    };\r\n  });\r\n};\r\n\r\nproto.controlSeries = function (area, seriesModel, ecModel) {\r\n  // Check whether area is bound in coord, and series do not belong to that coord.\r\n  // If do not do this check, some brush (like lineX) will controll all axes.\r\n  var targetInfo = this.findTargetInfo(area, ecModel);\r\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\r\n};\r\n/**\r\n * If return Object, a coord found.\r\n * If reutrn true, global found.\r\n * Otherwise nothing found.\r\n *\r\n * @param {Object} area\r\n * @param {Array} targetInfoList\r\n * @return {Object|boolean}\r\n */\r\n\r\n\r\nproto.findTargetInfo = function (area, ecModel) {\r\n  var targetInfoList = this._targetInfoList;\r\n  var foundCpts = parseFinder(ecModel, area);\r\n\r\n  for (var i = 0; i < targetInfoList.length; i++) {\r\n    var targetInfo = targetInfoList[i];\r\n    var areaPanelId = area.panelId;\r\n\r\n    if (areaPanelId) {\r\n      if (targetInfo.panelId === areaPanelId) {\r\n        return targetInfo;\r\n      }\r\n    } else {\r\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\r\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\r\n          return targetInfo;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction formatMinMax(minMax) {\r\n  minMax[0] > minMax[1] && minMax.reverse();\r\n  return minMax;\r\n}\r\n\r\nfunction parseFinder(ecModel, option) {\r\n  return modelUtil.parseFinder(ecModel, option, {\r\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\r\n  });\r\n}\r\n\r\nvar targetInfoBuilders = {\r\n  grid: function (foundCpts, targetInfoList) {\r\n    var xAxisModels = foundCpts.xAxisModels;\r\n    var yAxisModels = foundCpts.yAxisModels;\r\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\r\n\r\n    var gridModelMap = zrUtil.createHashMap();\r\n    var xAxesHas = {};\r\n    var yAxesHas = {};\r\n\r\n    if (!xAxisModels && !yAxisModels && !gridModels) {\r\n      return;\r\n    }\r\n\r\n    each(xAxisModels, function (axisModel) {\r\n      var gridModel = axisModel.axis.grid.model;\r\n      gridModelMap.set(gridModel.id, gridModel);\r\n      xAxesHas[gridModel.id] = true;\r\n    });\r\n    each(yAxisModels, function (axisModel) {\r\n      var gridModel = axisModel.axis.grid.model;\r\n      gridModelMap.set(gridModel.id, gridModel);\r\n      yAxesHas[gridModel.id] = true;\r\n    });\r\n    each(gridModels, function (gridModel) {\r\n      gridModelMap.set(gridModel.id, gridModel);\r\n      xAxesHas[gridModel.id] = true;\r\n      yAxesHas[gridModel.id] = true;\r\n    });\r\n    gridModelMap.each(function (gridModel) {\r\n      var grid = gridModel.coordinateSystem;\r\n      var cartesians = [];\r\n      each(grid.getCartesians(), function (cartesian, index) {\r\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\r\n          cartesians.push(cartesian);\r\n        }\r\n      });\r\n      targetInfoList.push({\r\n        panelId: 'grid--' + gridModel.id,\r\n        gridModel: gridModel,\r\n        coordSysModel: gridModel,\r\n        // Use the first one as the representitive coordSys.\r\n        coordSys: cartesians[0],\r\n        coordSyses: cartesians,\r\n        getPanelRect: panelRectBuilder.grid,\r\n        xAxisDeclared: xAxesHas[gridModel.id],\r\n        yAxisDeclared: yAxesHas[gridModel.id]\r\n      });\r\n    });\r\n  },\r\n  geo: function (foundCpts, targetInfoList) {\r\n    each(foundCpts.geoModels, function (geoModel) {\r\n      var coordSys = geoModel.coordinateSystem;\r\n      targetInfoList.push({\r\n        panelId: 'geo--' + geoModel.id,\r\n        geoModel: geoModel,\r\n        coordSysModel: geoModel,\r\n        coordSys: coordSys,\r\n        coordSyses: [coordSys],\r\n        getPanelRect: panelRectBuilder.geo\r\n      });\r\n    });\r\n  }\r\n};\r\nvar targetInfoMatchers = [// grid\r\nfunction (foundCpts, targetInfo) {\r\n  var xAxisModel = foundCpts.xAxisModel;\r\n  var yAxisModel = foundCpts.yAxisModel;\r\n  var gridModel = foundCpts.gridModel;\r\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\r\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\r\n  return gridModel && gridModel === targetInfo.gridModel;\r\n}, // geo\r\nfunction (foundCpts, targetInfo) {\r\n  var geoModel = foundCpts.geoModel;\r\n  return geoModel && geoModel === targetInfo.geoModel;\r\n}];\r\nvar panelRectBuilder = {\r\n  grid: function () {\r\n    // grid is not Transformable.\r\n    return this.coordSys.grid.getRect().clone();\r\n  },\r\n  geo: function () {\r\n    var coordSys = this.coordSys;\r\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\r\n\r\n    rect.applyTransform(graphic.getTransform(coordSys));\r\n    return rect;\r\n  }\r\n};\r\nvar coordConvert = {\r\n  lineX: curry(axisConvert, 0),\r\n  lineY: curry(axisConvert, 1),\r\n  rect: function (to, coordSys, rangeOrCoordRange) {\r\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\r\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\r\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\r\n    return {\r\n      values: values,\r\n      xyMinMax: values\r\n    };\r\n  },\r\n  polygon: function (to, coordSys, rangeOrCoordRange) {\r\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\r\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\r\n      var p = coordSys[COORD_CONVERTS[to]](item);\r\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\r\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\r\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\r\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\r\n      return p;\r\n    });\r\n    return {\r\n      values: values,\r\n      xyMinMax: xyMinMax\r\n    };\r\n  }\r\n};\r\n\r\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\r\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\r\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\r\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\r\n  }));\r\n  var xyMinMax = [];\r\n  xyMinMax[axisNameIndex] = values;\r\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\r\n  return {\r\n    values: values,\r\n    xyMinMax: xyMinMax\r\n  };\r\n}\r\n\r\nvar diffProcessor = {\r\n  lineX: curry(axisDiffProcessor, 0),\r\n  lineY: curry(axisDiffProcessor, 1),\r\n  rect: function (values, refer, scales) {\r\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\r\n  },\r\n  polygon: function (values, refer, scales) {\r\n    return zrUtil.map(values, function (item, idx) {\r\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\r\n    });\r\n  }\r\n};\r\n\r\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\r\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\r\n} // We have to process scale caused by dataZoom manually,\r\n// although it might be not accurate.\r\n\r\n\r\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\r\n  var sizeCurr = getSize(xyMinMaxCurr);\r\n  var sizeOrigin = getSize(xyMinMaxOrigin);\r\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\r\n  isNaN(scales[0]) && (scales[0] = 1);\r\n  isNaN(scales[1]) && (scales[1] = 1);\r\n  return scales;\r\n}\r\n\r\nfunction getSize(xyMinMax) {\r\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\r\n}\r\n\r\nvar _default = BrushTargetManager;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar RoamController = require(\"./RoamController\");\r\n\r\nvar roamHelper = require(\"../../component/helper/roamHelper\");\r\n\r\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\r\n\r\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\r\n\r\nvar _component = require(\"../../util/component\");\r\n\r\nvar getUID = _component.getUID;\r\n\r\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction getFixedItemStyle(model) {\r\n  var itemStyle = model.getItemStyle();\r\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\r\n  // they should both set areaColor and color to be null.\r\n\r\n  if (areaColor != null) {\r\n    itemStyle.fill = areaColor;\r\n  }\r\n\r\n  return itemStyle;\r\n}\r\n\r\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, regionsGroup, api, fromView) {\r\n  regionsGroup.off('click');\r\n  regionsGroup.off('mousedown');\r\n\r\n  if (mapOrGeoModel.get('selectedMode')) {\r\n    regionsGroup.on('mousedown', function () {\r\n      mapDraw._mouseDownFlag = true;\r\n    });\r\n    regionsGroup.on('click', function (e) {\r\n      if (!mapDraw._mouseDownFlag) {\r\n        return;\r\n      }\r\n\r\n      mapDraw._mouseDownFlag = false;\r\n      var el = e.target;\r\n\r\n      while (!el.__regions) {\r\n        el = el.parent;\r\n      }\r\n\r\n      if (!el) {\r\n        return;\r\n      }\r\n\r\n      var action = {\r\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\r\n        batch: zrUtil.map(el.__regions, function (region) {\r\n          return {\r\n            name: region.name,\r\n            from: fromView.uid\r\n          };\r\n        })\r\n      };\r\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\r\n      api.dispatchAction(action);\r\n      updateMapSelected(mapOrGeoModel, regionsGroup);\r\n    });\r\n  }\r\n}\r\n\r\nfunction updateMapSelected(mapOrGeoModel, regionsGroup) {\r\n  // FIXME\r\n  regionsGroup.eachChild(function (otherRegionEl) {\r\n    zrUtil.each(otherRegionEl.__regions, function (region) {\r\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\r\n    });\r\n  });\r\n}\r\n/**\r\n * @alias module:echarts/component/helper/MapDraw\r\n * @param {module:echarts/ExtensionAPI} api\r\n * @param {boolean} updateGroup\r\n */\r\n\r\n\r\nfunction MapDraw(api, updateGroup) {\r\n  var group = new graphic.Group();\r\n  /**\r\n   * @type {string}\r\n   * @private\r\n   */\r\n\r\n  this.uid = getUID('ec_map_draw');\r\n  /**\r\n   * @type {module:echarts/component/helper/RoamController}\r\n   * @private\r\n   */\r\n\r\n  this._controller = new RoamController(api.getZr());\r\n  /**\r\n   * @type {Object} {target, zoom, zoomLimit}\r\n   * @private\r\n   */\r\n\r\n  this._controllerHost = {\r\n    target: updateGroup ? group : null\r\n  };\r\n  /**\r\n   * @type {module:zrender/container/Group}\r\n   * @readOnly\r\n   */\r\n\r\n  this.group = group;\r\n  /**\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n\r\n  this._updateGroup = updateGroup;\r\n  /**\r\n   * This flag is used to make sure that only one among\r\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\r\n   * action may be triggered when `pan`, which is unexpected.\r\n   * @type {booelan}\r\n   */\r\n\r\n  this._mouseDownFlag;\r\n  /**\r\n   * @type {string}\r\n   */\r\n\r\n  this._mapName;\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._initialized;\r\n  /**\r\n   * @type {module:zrender/container/Group}\r\n   */\r\n\r\n  group.add(this._regionsGroup = new graphic.Group());\r\n  /**\r\n   * @type {module:zrender/container/Group}\r\n   */\r\n\r\n  group.add(this._backgroundGroup = new graphic.Group());\r\n}\r\n\r\nMapDraw.prototype = {\r\n  constructor: MapDraw,\r\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\r\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\r\n    // will be assigned with map data. Other GEO model has no data.\r\n\r\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\r\n    isGeo && ecModel.eachComponent({\r\n      mainType: 'series',\r\n      subType: 'map'\r\n    }, function (mapSeries) {\r\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\r\n        data = mapSeries.getData();\r\n      }\r\n    });\r\n    var geo = mapOrGeoModel.coordinateSystem;\r\n\r\n    this._updateBackground(geo);\r\n\r\n    var regionsGroup = this._regionsGroup;\r\n    var group = this.group;\r\n    var transformInfo = geo.getTransformInfo(); // No animation when first draw or in action\r\n\r\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\r\n    var targetScale;\r\n\r\n    if (isFirstDraw) {\r\n      group.transform = transformInfo.roamTransform;\r\n      group.decomposeTransform();\r\n      group.dirty();\r\n    } else {\r\n      var target = new Transformable();\r\n      target.transform = transformInfo.roamTransform;\r\n      target.decomposeTransform();\r\n      var props = {\r\n        scale: target.scale,\r\n        position: target.position\r\n      };\r\n      targetScale = target.scale;\r\n      graphic.updateProps(group, props, mapOrGeoModel);\r\n    }\r\n\r\n    var scale = transformInfo.rawScale;\r\n    var position = transformInfo.rawPosition;\r\n    regionsGroup.removeAll();\r\n    var itemStyleAccessPath = ['itemStyle'];\r\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\r\n    var labelAccessPath = ['label'];\r\n    var hoverLabelAccessPath = ['emphasis', 'label'];\r\n    var nameMap = zrUtil.createHashMap();\r\n    zrUtil.each(geo.regions, function (region) {\r\n      // Consider in GeoJson properties.name may be duplicated, for example,\r\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\r\n      // colonies). And it is not appropriate to merge them in geo, which\r\n      // will make them share the same label and bring trouble in label\r\n      // location calculation.\r\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\r\n      var compoundPath = new graphic.CompoundPath({\r\n        segmentIgnoreThreshold: 1,\r\n        shape: {\r\n          paths: []\r\n        }\r\n      });\r\n      regionGroup.add(compoundPath);\r\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\r\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\r\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\r\n      var itemStyle = getFixedItemStyle(itemStyleModel);\r\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel);\r\n      var labelModel = regionModel.getModel(labelAccessPath);\r\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\r\n      var dataIdx; // Use the itemStyle in data if has data\r\n\r\n      if (data) {\r\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\r\n        // But visual color of series is used in symbol drawing\r\n        //\r\n        // Visual color for each series is for the symbol draw\r\n\r\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\r\n\r\n        if (visualColor) {\r\n          itemStyle.fill = visualColor;\r\n        }\r\n      }\r\n\r\n      var transformPoint = function (point) {\r\n        return [point[0] * scale[0] + position[0], point[1] * scale[1] + position[1]];\r\n      };\r\n\r\n      zrUtil.each(region.geometries, function (geometry) {\r\n        if (geometry.type !== 'polygon') {\r\n          return;\r\n        }\r\n\r\n        var points = [];\r\n\r\n        for (var i = 0; i < geometry.exterior.length; ++i) {\r\n          points.push(transformPoint(geometry.exterior[i]));\r\n        }\r\n\r\n        compoundPath.shape.paths.push(new graphic.Polygon({\r\n          segmentIgnoreThreshold: 1,\r\n          shape: {\r\n            points: points\r\n          }\r\n        }));\r\n\r\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); ++i) {\r\n          var interior = geometry.interiors[i];\r\n          var points = [];\r\n\r\n          for (var j = 0; j < interior.length; ++j) {\r\n            points.push(transformPoint(interior[j]));\r\n          }\r\n\r\n          compoundPath.shape.paths.push(new graphic.Polygon({\r\n            segmentIgnoreThreshold: 1,\r\n            shape: {\r\n              points: points\r\n            }\r\n          }));\r\n        }\r\n      });\r\n      compoundPath.setStyle(itemStyle);\r\n      compoundPath.style.strokeNoScale = true;\r\n      compoundPath.culling = true; // Label\r\n\r\n      var showLabel = labelModel.get('show');\r\n      var hoverShowLabel = hoverLabelModel.get('show');\r\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\r\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\r\n      // 1. In map series and data value is NaN\r\n      // 2. In geo component\r\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\r\n\r\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\r\n        var query = !isGeo ? dataIdx : region.name;\r\n        var labelFetcher; // Consider dataIdx not found.\r\n\r\n        if (!data || dataIdx >= 0) {\r\n          labelFetcher = mapOrGeoModel;\r\n        }\r\n\r\n        var textEl = new graphic.Text({\r\n          position: transformPoint(region.center.slice()),\r\n          // FIXME\r\n          // label rotation is not support yet in geo or regions of series-map\r\n          // that has no data. The rotation will be effected by this `scale`.\r\n          // So needed to change to RectText?\r\n          scale: [1 / group.scale[0], 1 / group.scale[1]],\r\n          z2: 10,\r\n          silent: true\r\n        });\r\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\r\n          labelFetcher: labelFetcher,\r\n          labelDataIndex: query,\r\n          defaultText: region.name,\r\n          useInsideStyle: false\r\n        }, {\r\n          textAlign: 'center',\r\n          textVerticalAlign: 'middle'\r\n        });\r\n\r\n        if (!isFirstDraw) {\r\n          // Text animation\r\n          var textScale = [1 / targetScale[0], 1 / targetScale[1]];\r\n          graphic.updateProps(textEl, {\r\n            scale: textScale\r\n          }, mapOrGeoModel);\r\n        }\r\n\r\n        regionGroup.add(textEl);\r\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\r\n      // are added to the rigionGroup\r\n\r\n\r\n      if (data) {\r\n        data.setItemGraphicEl(dataIdx, regionGroup);\r\n      } else {\r\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\r\n\r\n        compoundPath.eventData = {\r\n          componentType: 'geo',\r\n          componentIndex: mapOrGeoModel.componentIndex,\r\n          geoIndex: mapOrGeoModel.componentIndex,\r\n          name: region.name,\r\n          region: regionModel && regionModel.option || {}\r\n        };\r\n      }\r\n\r\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\r\n      groupRegions.push(region);\r\n      regionGroup.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode');\r\n      graphic.setHoverStyle(regionGroup, hoverItemStyle);\r\n      regionsGroup.add(regionGroup);\r\n    });\r\n\r\n    this._updateController(mapOrGeoModel, ecModel, api);\r\n\r\n    updateMapSelectHandler(this, mapOrGeoModel, regionsGroup, api, fromView);\r\n    updateMapSelected(mapOrGeoModel, regionsGroup);\r\n  },\r\n  remove: function () {\r\n    this._regionsGroup.removeAll();\r\n\r\n    this._backgroundGroup.removeAll();\r\n\r\n    this._controller.dispose();\r\n\r\n    this._mapName && geoSourceManager.removeGraphic(this._mapName, this.uid);\r\n    this._mapName = null;\r\n    this._controllerHost = {};\r\n  },\r\n  _updateBackground: function (geo) {\r\n    var mapName = geo.map;\r\n\r\n    if (this._mapName !== mapName) {\r\n      zrUtil.each(geoSourceManager.makeGraphic(mapName, this.uid), function (root) {\r\n        this._backgroundGroup.add(root);\r\n      }, this);\r\n    }\r\n\r\n    this._mapName = mapName;\r\n  },\r\n  _updateController: function (mapOrGeoModel, ecModel, api) {\r\n    var geo = mapOrGeoModel.coordinateSystem;\r\n    var controller = this._controller;\r\n    var controllerHost = this._controllerHost;\r\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\r\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\r\n\r\n    controller.enable(mapOrGeoModel.get('roam') || false);\r\n    var mainType = mapOrGeoModel.mainType;\r\n\r\n    function makeActionBase() {\r\n      var action = {\r\n        type: 'geoRoam',\r\n        componentType: mainType\r\n      };\r\n      action[mainType + 'Id'] = mapOrGeoModel.id;\r\n      return action;\r\n    }\r\n\r\n    controller.off('pan').on('pan', function (e) {\r\n      this._mouseDownFlag = false;\r\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\r\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\r\n        dx: e.dx,\r\n        dy: e.dy\r\n      }));\r\n    }, this);\r\n    controller.off('zoom').on('zoom', function (e) {\r\n      this._mouseDownFlag = false;\r\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\r\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\r\n        zoom: e.scale,\r\n        originX: e.originX,\r\n        originY: e.originY\r\n      }));\r\n\r\n      if (this._updateGroup) {\r\n        var scale = this.group.scale;\r\n\r\n        this._regionsGroup.traverse(function (el) {\r\n          if (el.type === 'text') {\r\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\r\n          }\r\n        });\r\n      }\r\n    }, this);\r\n    controller.setPointerChecker(function (e, x, y) {\r\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\r\n    });\r\n  }\r\n};\r\nvar _default = MapDraw;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\r\n\r\nvar eventTool = require(\"zrender/lib/core/event\");\r\n\r\nvar interactionMutex = require(\"./interactionMutex\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @alias module:echarts/component/helper/RoamController\r\n * @constructor\r\n * @mixin {module:zrender/mixin/Eventful}\r\n *\r\n * @param {module:zrender/zrender~ZRender} zr\r\n */\r\nfunction RoamController(zr) {\r\n  /**\r\n   * @type {Function}\r\n   */\r\n  this.pointerChecker;\r\n  /**\r\n   * @type {module:zrender}\r\n   */\r\n\r\n  this._zr = zr;\r\n  /**\r\n   * @type {Object}\r\n   */\r\n\r\n  this._opt = {}; // Avoid two roamController bind the same handler\r\n\r\n  var bind = zrUtil.bind;\r\n  var mousedownHandler = bind(mousedown, this);\r\n  var mousemoveHandler = bind(mousemove, this);\r\n  var mouseupHandler = bind(mouseup, this);\r\n  var mousewheelHandler = bind(mousewheel, this);\r\n  var pinchHandler = bind(pinch, this);\r\n  Eventful.call(this);\r\n  /**\r\n   * @param {Function} pointerChecker\r\n   *                   input: x, y\r\n   *                   output: boolean\r\n   */\r\n\r\n  this.setPointerChecker = function (pointerChecker) {\r\n    this.pointerChecker = pointerChecker;\r\n  };\r\n  /**\r\n   * Notice: only enable needed types. For example, if 'zoom'\r\n   * is not needed, 'zoom' should not be enabled, otherwise\r\n   * default mousewheel behaviour (scroll page) will be disabled.\r\n   *\r\n   * @param  {boolean|string} [controlType=true] Specify the control type,\r\n   *                          which can be null/undefined or true/false\r\n   *                          or 'pan/move' or 'zoom'/'scale'\r\n   * @param {Object} [opt]\r\n   * @param {Object} [opt.zoomOnMouseWheel=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n   * @param {Object} [opt.moveOnMouseMove=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n   * @param {Object} [opt.moveOnMouseWheel=false] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\r\n   */\r\n\r\n\r\n  this.enable = function (controlType, opt) {\r\n    // Disable previous first\r\n    this.disable();\r\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\r\n      zoomOnMouseWheel: true,\r\n      moveOnMouseMove: true,\r\n      // By default, wheel do not trigger move.\r\n      moveOnMouseWheel: false,\r\n      preventDefaultMouseMove: true\r\n    });\r\n\r\n    if (controlType == null) {\r\n      controlType = true;\r\n    }\r\n\r\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\r\n      zr.on('mousedown', mousedownHandler);\r\n      zr.on('mousemove', mousemoveHandler);\r\n      zr.on('mouseup', mouseupHandler);\r\n    }\r\n\r\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\r\n      zr.on('mousewheel', mousewheelHandler);\r\n      zr.on('pinch', pinchHandler);\r\n    }\r\n  };\r\n\r\n  this.disable = function () {\r\n    zr.off('mousedown', mousedownHandler);\r\n    zr.off('mousemove', mousemoveHandler);\r\n    zr.off('mouseup', mouseupHandler);\r\n    zr.off('mousewheel', mousewheelHandler);\r\n    zr.off('pinch', pinchHandler);\r\n  };\r\n\r\n  this.dispose = this.disable;\r\n\r\n  this.isDragging = function () {\r\n    return this._dragging;\r\n  };\r\n\r\n  this.isPinching = function () {\r\n    return this._pinching;\r\n  };\r\n}\r\n\r\nzrUtil.mixin(RoamController, Eventful);\r\n\r\nfunction mousedown(e) {\r\n  if (eventTool.isMiddleOrRightButtonOnMouseUpDown(e) || e.target && e.target.draggable) {\r\n    return;\r\n  }\r\n\r\n  var x = e.offsetX;\r\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\r\n  // Mouse can be out of target when mouse moving.\r\n\r\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\r\n    this._x = x;\r\n    this._y = y;\r\n    this._dragging = true;\r\n  }\r\n}\r\n\r\nfunction mousemove(e) {\r\n  if (!this._dragging || !isAvailableBehavior('moveOnMouseMove', e, this._opt) || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\r\n    return;\r\n  }\r\n\r\n  var x = e.offsetX;\r\n  var y = e.offsetY;\r\n  var oldX = this._x;\r\n  var oldY = this._y;\r\n  var dx = x - oldX;\r\n  var dy = y - oldY;\r\n  this._x = x;\r\n  this._y = y;\r\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\r\n  trigger(this, 'pan', 'moveOnMouseMove', e, {\r\n    dx: dx,\r\n    dy: dy,\r\n    oldX: oldX,\r\n    oldY: oldY,\r\n    newX: x,\r\n    newY: y\r\n  });\r\n}\r\n\r\nfunction mouseup(e) {\r\n  if (!eventTool.isMiddleOrRightButtonOnMouseUpDown(e)) {\r\n    this._dragging = false;\r\n  }\r\n}\r\n\r\nfunction mousewheel(e) {\r\n  var shouldZoom = isAvailableBehavior('zoomOnMouseWheel', e, this._opt);\r\n  var shouldMove = isAvailableBehavior('moveOnMouseWheel', e, this._opt);\r\n  var wheelDelta = e.wheelDelta;\r\n  var absWheelDeltaDelta = Math.abs(wheelDelta);\r\n  var originX = e.offsetX;\r\n  var originY = e.offsetY; // wheelDelta maybe -0 in chrome mac.\r\n\r\n  if (wheelDelta === 0 || !shouldZoom && !shouldMove) {\r\n    return;\r\n  } // If both `shouldZoom` and `shouldMove` is true, trigger\r\n  // their event both, and the final behavior is determined\r\n  // by event listener themselves.\r\n\r\n\r\n  if (shouldZoom) {\r\n    // Convenience:\r\n    // Mac and VM Windows on Mac: scroll up: zoom out.\r\n    // Windows: scroll up: zoom in.\r\n    // FIXME: Should do more test in different environment.\r\n    // wheelDelta is too complicated in difference nvironment\r\n    // (https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel),\r\n    // although it has been normallized by zrender.\r\n    // wheelDelta of mouse wheel is bigger than touch pad.\r\n    var factor = absWheelDeltaDelta > 3 ? 1.4 : absWheelDeltaDelta > 1 ? 1.2 : 1.1;\r\n    var scale = wheelDelta > 0 ? factor : 1 / factor;\r\n    checkPointerAndTrigger(this, 'zoom', 'zoomOnMouseWheel', e, {\r\n      scale: scale,\r\n      originX: originX,\r\n      originY: originY\r\n    });\r\n  }\r\n\r\n  if (shouldMove) {\r\n    // FIXME: Should do more test in different environment.\r\n    var absDelta = Math.abs(wheelDelta); // wheelDelta of mouse wheel is bigger than touch pad.\r\n\r\n    var scrollDelta = (wheelDelta > 0 ? 1 : -1) * (absDelta > 3 ? 0.4 : absDelta > 1 ? 0.15 : 0.05);\r\n    checkPointerAndTrigger(this, 'scrollMove', 'moveOnMouseWheel', e, {\r\n      scrollDelta: scrollDelta,\r\n      originX: originX,\r\n      originY: originY\r\n    });\r\n  }\r\n}\r\n\r\nfunction pinch(e) {\r\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\r\n    return;\r\n  }\r\n\r\n  var scale = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\r\n  checkPointerAndTrigger(this, 'zoom', null, e, {\r\n    scale: scale,\r\n    originX: e.pinchX,\r\n    originY: e.pinchY\r\n  });\r\n}\r\n\r\nfunction checkPointerAndTrigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\r\n  if (controller.pointerChecker && controller.pointerChecker(e, contollerEvent.originX, contollerEvent.originY)) {\r\n    // When mouse is out of roamController rect,\r\n    // default befavoius should not be be disabled, otherwise\r\n    // page sliding is disabled, contrary to expectation.\r\n    eventTool.stop(e.event);\r\n    trigger(controller, eventName, behaviorToCheck, e, contollerEvent);\r\n  }\r\n}\r\n\r\nfunction trigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\r\n  // Also provide behavior checker for event listener, for some case that\r\n  // multiple components share one listener.\r\n  contollerEvent.isAvailableBehavior = zrUtil.bind(isAvailableBehavior, null, behaviorToCheck, e);\r\n  controller.trigger(eventName, contollerEvent);\r\n} // settings: {\r\n//     zoomOnMouseWheel\r\n//     moveOnMouseMove\r\n//     moveOnMouseWheel\r\n// }\r\n// The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n\r\n\r\nfunction isAvailableBehavior(behaviorToCheck, e, settings) {\r\n  var setting = settings[behaviorToCheck];\r\n  return !behaviorToCheck || setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\r\n}\r\n\r\nvar _default = RoamController;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar _cursorHelper = require(\"./cursorHelper\");\r\n\r\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\r\n\r\nvar graphicUtil = require(\"../../util/graphic\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction makeRectPanelClipPath(rect) {\r\n  rect = normalizeRect(rect);\r\n  return function (localPoints, transform) {\r\n    return graphicUtil.clipPointsByRect(localPoints, rect);\r\n  };\r\n}\r\n\r\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\r\n  rect = normalizeRect(rect);\r\n  return function (xyIndex) {\r\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\r\n    var brushWidth = idx ? rect.width : rect.height;\r\n    var base = idx ? rect.x : rect.y;\r\n    return [base, base + (brushWidth || 0)];\r\n  };\r\n}\r\n\r\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\r\n  rect = normalizeRect(rect);\r\n  return function (e, localCursorPoint, transform) {\r\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\r\n  };\r\n} // Consider width/height is negative.\r\n\r\n\r\nfunction normalizeRect(rect) {\r\n  return BoundingRect.create(rect);\r\n}\r\n\r\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\r\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\r\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar IRRELEVANT_EXCLUDES = {\r\n  'axisPointer': 1,\r\n  'tooltip': 1,\r\n  'brush': 1\r\n};\r\n/**\r\n * Avoid that: mouse click on a elements that is over geo or graph,\r\n * but roam is triggered.\r\n */\r\n\r\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\r\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\r\n\r\n  var coordSys = model && model.coordinateSystem;\r\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\r\n}\r\n\r\nexports.onIrrelevantElement = onIrrelevantElement;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar ATTR = '\\0_ec_interaction_mutex';\r\n\r\nfunction take(zr, resourceKey, userKey) {\r\n  var store = getStore(zr);\r\n  store[resourceKey] = userKey;\r\n}\r\n\r\nfunction release(zr, resourceKey, userKey) {\r\n  var store = getStore(zr);\r\n  var uKey = store[resourceKey];\r\n\r\n  if (uKey === userKey) {\r\n    store[resourceKey] = null;\r\n  }\r\n}\r\n\r\nfunction isTaken(zr, resourceKey) {\r\n  return !!getStore(zr)[resourceKey];\r\n}\r\n\r\nfunction getStore(zr) {\r\n  return zr[ATTR] || (zr[ATTR] = {});\r\n}\r\n/**\r\n * payload: {\r\n *     type: 'takeGlobalCursor',\r\n *     key: 'dataZoomSelect', or 'brush', or ...,\r\n *         If no userKey, release global cursor.\r\n * }\r\n */\r\n\r\n\r\necharts.registerAction({\r\n  type: 'takeGlobalCursor',\r\n  event: 'globalCursorTaken',\r\n  update: 'update'\r\n}, function () {});\r\nexports.take = take;\r\nexports.release = release;\r\nexports.isTaken = isTaken;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _layout = require(\"../../util/layout\");\r\n\r\nvar getLayoutRect = _layout.getLayoutRect;\r\nvar layoutBox = _layout.box;\r\nvar positionElement = _layout.positionElement;\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Layout list like component.\r\n * It will box layout each items in group of component and then position the whole group in the viewport\r\n * @param {module:zrender/group/Group} group\r\n * @param {module:echarts/model/Component} componentModel\r\n * @param {module:echarts/ExtensionAPI}\r\n */\r\nfunction layout(group, componentModel, api) {\r\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\r\n  var padding = componentModel.get('padding');\r\n  var viewportSize = {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  };\r\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\r\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\r\n  positionElement(group, boxLayoutParams, viewportSize, padding);\r\n}\r\n\r\nfunction makeBackground(rect, componentModel) {\r\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\r\n  var style = componentModel.getItemStyle(['color', 'opacity']);\r\n  style.fill = componentModel.get('backgroundColor');\r\n  var rect = new graphic.Rect({\r\n    shape: {\r\n      x: rect.x - padding[3],\r\n      y: rect.y - padding[0],\r\n      width: rect.width + padding[1] + padding[3],\r\n      height: rect.height + padding[0] + padding[2],\r\n      r: componentModel.get('borderRadius')\r\n    },\r\n    style: style,\r\n    silent: true,\r\n    z2: -1\r\n  }); // FIXME\r\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\r\n  // and background rect when setting like `left: 0`, `top: 0`.\r\n  // graphic.subPixelOptimizeRect(rect);\r\n\r\n  return rect;\r\n}\r\n\r\nexports.layout = layout;\r\nexports.makeBackground = makeBackground;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * For geo and graph.\r\n *\r\n * @param {Object} controllerHost\r\n * @param {module:zrender/Element} controllerHost.target\r\n */\r\nfunction updateViewOnPan(controllerHost, dx, dy) {\r\n  var target = controllerHost.target;\r\n  var pos = target.position;\r\n  pos[0] += dx;\r\n  pos[1] += dy;\r\n  target.dirty();\r\n}\r\n/**\r\n * For geo and graph.\r\n *\r\n * @param {Object} controllerHost\r\n * @param {module:zrender/Element} controllerHost.target\r\n * @param {number} controllerHost.zoom\r\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\r\n */\r\n\r\n\r\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\r\n  var target = controllerHost.target;\r\n  var zoomLimit = controllerHost.zoomLimit;\r\n  var pos = target.position;\r\n  var scale = target.scale;\r\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\r\n  newZoom *= zoomDelta;\r\n\r\n  if (zoomLimit) {\r\n    var zoomMin = zoomLimit.min || 0;\r\n    var zoomMax = zoomLimit.max || Infinity;\r\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\r\n  }\r\n\r\n  var zoomScale = newZoom / controllerHost.zoom;\r\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\r\n\r\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\r\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\r\n  scale[0] *= zoomScale;\r\n  scale[1] *= zoomScale;\r\n  target.dirty();\r\n}\r\n\r\nexports.updateViewOnPan = updateViewOnPan;\r\nexports.updateViewOnZoom = updateViewOnZoom;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Data selectable mixin for chart series.\r\n * To eanble data select, option of series must have `selectedMode`.\r\n * And each data item will use `selected` to toggle itself selected status\r\n */\r\nvar _default = {\r\n  /**\r\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\r\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\r\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\r\n   */\r\n  updateSelectedMap: function (targetList) {\r\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\r\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\r\n      targetMap.set(target.name, target);\r\n      return targetMap;\r\n    }, zrUtil.createHashMap());\r\n  },\r\n\r\n  /**\r\n   * Either name or id should be passed as input here.\r\n   * If both of them are defined, id is used.\r\n   *\r\n   * @param {string|undefined} name name of data\r\n   * @param {number|undefined} id dataIndex of data\r\n   */\r\n  // PENGING If selectedMode is null ?\r\n  select: function (name, id) {\r\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\r\n    var selectedMode = this.get('selectedMode');\r\n\r\n    if (selectedMode === 'single') {\r\n      this._selectTargetMap.each(function (target) {\r\n        target.selected = false;\r\n      });\r\n    }\r\n\r\n    target && (target.selected = true);\r\n  },\r\n\r\n  /**\r\n   * Either name or id should be passed as input here.\r\n   * If both of them are defined, id is used.\r\n   *\r\n   * @param {string|undefined} name name of data\r\n   * @param {number|undefined} id dataIndex of data\r\n   */\r\n  unSelect: function (name, id) {\r\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\r\n    // selectedMode !== 'single' && target && (target.selected = false);\r\n\r\n    target && (target.selected = false);\r\n  },\r\n\r\n  /**\r\n   * Either name or id should be passed as input here.\r\n   * If both of them are defined, id is used.\r\n   *\r\n   * @param {string|undefined} name name of data\r\n   * @param {number|undefined} id dataIndex of data\r\n   */\r\n  toggleSelected: function (name, id) {\r\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\r\n\r\n    if (target != null) {\r\n      this[target.selected ? 'unSelect' : 'select'](name, id);\r\n      return target.selected;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Either name or id should be passed as input here.\r\n   * If both of them are defined, id is used.\r\n   *\r\n   * @param {string|undefined} name name of data\r\n   * @param {number|undefined} id dataIndex of data\r\n   */\r\n  isSelected: function (name, id) {\r\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\r\n    return target && target.selected;\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Calculate slider move result.\r\n * Usage:\r\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\r\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\r\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\r\n *\r\n * @param {number} delta Move length.\r\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\r\n *              handleEnds will be modified in this method.\r\n * @param {Array.<number>} extent handleEnds is restricted by extent.\r\n *              extent[0] should less or equals than extent[1].\r\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds.\r\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\r\n *              If not set, handle0 and cross handle1. If set as a non-negative\r\n *              number (including `0`), handles will push each other when reaching\r\n *              the minSpan.\r\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\r\n * @return {Array.<number>} The input handleEnds.\r\n */\r\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\r\n  delta = delta || 0;\r\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\r\n\r\n  if (minSpan != null) {\r\n    minSpan = restrict(minSpan, [0, extentSpan]);\r\n  }\r\n\r\n  if (maxSpan != null) {\r\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\r\n  }\r\n\r\n  if (handleIndex === 'all') {\r\n    var handleSpan = Math.abs(handleEnds[1] - handleEnds[0]);\r\n    handleSpan = restrict(handleSpan, [0, extentSpan]);\r\n    minSpan = maxSpan = restrict(handleSpan, [minSpan, maxSpan]);\r\n    handleIndex = 0;\r\n  }\r\n\r\n  handleEnds[0] = restrict(handleEnds[0], extent);\r\n  handleEnds[1] = restrict(handleEnds[1], extent);\r\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\r\n  handleEnds[handleIndex] += delta; // Restrict in extent.\r\n\r\n  var extentMinSpan = minSpan || 0;\r\n  var realExtent = extent.slice();\r\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\r\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\r\n\r\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\r\n\r\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\r\n    // If minSpan exists, 'cross' is forbidden.\r\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\r\n  } // Shrink span.\r\n\r\n\r\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\r\n\r\n  if (maxSpan != null && currDistSign.span > maxSpan) {\r\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\r\n  }\r\n\r\n  return handleEnds;\r\n}\r\n\r\nfunction getSpanSign(handleEnds, handleIndex) {\r\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\r\n  // is at left of handleEnds[1] for non-cross case.\r\n\r\n  return {\r\n    span: Math.abs(dist),\r\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\r\n  };\r\n}\r\n\r\nfunction restrict(value, extend) {\r\n  return Math.min(extend[1] != null ? extend[1] : Infinity, Math.max(extend[0] != null ? extend[0] : -Infinity, value));\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./legend/LegendModel\");\r\n\r\nrequire(\"./legend/legendAction\");\r\n\r\nrequire(\"./legend/LegendView\");\r\n\r\nvar legendFilter = require(\"./legend/legendFilter\");\r\n\r\nvar Component = require(\"../model/Component\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Do not contain scrollable legend, for sake of file size.\r\n// Series Filter\r\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.SERIES_FILTER, legendFilter);\r\nComponent.registerSubTypeDefaulter('legend', function () {\r\n  // Default 'plain' when no type specified.\r\n  return 'plain';\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./legend\");\r\n\r\nrequire(\"./legend/ScrollableLegendModel\");\r\n\r\nrequire(\"./legend/ScrollableLegendView\");\r\n\r\nrequire(\"./legend/scrollableLegendAction\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar isNameSpecified = _model.isNameSpecified;\r\n\r\nvar lang = require(\"../../lang\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar langSelector = lang.legend.selector;\r\nvar defaultSelectorOption = {\r\n  all: {\r\n    type: 'all',\r\n    title: zrUtil.clone(langSelector.all)\r\n  },\r\n  inverse: {\r\n    type: 'inverse',\r\n    title: zrUtil.clone(langSelector.inverse)\r\n  }\r\n};\r\nvar LegendModel = echarts.extendComponentModel({\r\n  type: 'legend.plain',\r\n  dependencies: ['series'],\r\n  layoutMode: {\r\n    type: 'box',\r\n    // legend.width/height are maxWidth/maxHeight actually,\r\n    // whereas realy width/height is calculated by its content.\r\n    // (Setting {left: 10, right: 10} does not make sense).\r\n    // So consider the case:\r\n    // `setOption({legend: {left: 10});`\r\n    // then `setOption({legend: {right: 10});`\r\n    // The previous `left` should be cleared by setting `ignoreSize`.\r\n    ignoreSize: true\r\n  },\r\n  init: function (option, parentModel, ecModel) {\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n    option.selected = option.selected || {};\r\n\r\n    this._updateSelector(option);\r\n  },\r\n  mergeOption: function (option) {\r\n    LegendModel.superCall(this, 'mergeOption', option);\r\n\r\n    this._updateSelector(option);\r\n  },\r\n  _updateSelector: function (option) {\r\n    var selector = option.selector;\r\n\r\n    if (selector === true) {\r\n      selector = option.selector = ['all', 'inverse'];\r\n    }\r\n\r\n    if (zrUtil.isArray(selector)) {\r\n      zrUtil.each(selector, function (item, index) {\r\n        zrUtil.isString(item) && (item = {\r\n          type: item\r\n        });\r\n        selector[index] = zrUtil.merge(item, defaultSelectorOption[item.type]);\r\n      });\r\n    }\r\n  },\r\n  optionUpdated: function () {\r\n    this._updateData(this.ecModel);\r\n\r\n    var legendData = this._data; // If selectedMode is single, try to select one\r\n\r\n    if (legendData[0] && this.get('selectedMode') === 'single') {\r\n      var hasSelected = false; // If has any selected in option.selected\r\n\r\n      for (var i = 0; i < legendData.length; i++) {\r\n        var name = legendData[i].get('name');\r\n\r\n        if (this.isSelected(name)) {\r\n          // Force to unselect others\r\n          this.select(name);\r\n          hasSelected = true;\r\n          break;\r\n        }\r\n      } // Try select the first if selectedMode is single\r\n\r\n\r\n      !hasSelected && this.select(legendData[0].get('name'));\r\n    }\r\n  },\r\n  _updateData: function (ecModel) {\r\n    var potentialData = [];\r\n    var availableNames = [];\r\n    ecModel.eachRawSeries(function (seriesModel) {\r\n      var seriesName = seriesModel.name;\r\n      availableNames.push(seriesName);\r\n      var isPotential;\r\n\r\n      if (seriesModel.legendVisualProvider) {\r\n        var provider = seriesModel.legendVisualProvider;\r\n        var names = provider.getAllNames();\r\n\r\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n          availableNames = availableNames.concat(names);\r\n        }\r\n\r\n        if (names.length) {\r\n          potentialData = potentialData.concat(names);\r\n        } else {\r\n          isPotential = true;\r\n        }\r\n      } else {\r\n        isPotential = true;\r\n      }\r\n\r\n      if (isPotential && isNameSpecified(seriesModel)) {\r\n        potentialData.push(seriesModel.name);\r\n      }\r\n    });\r\n    /**\r\n     * @type {Array.<string>}\r\n     * @private\r\n     */\r\n\r\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\r\n    // which is convinient for user preparing option.\r\n\r\n    var rawData = this.get('data') || potentialData;\r\n    var legendData = zrUtil.map(rawData, function (dataItem) {\r\n      // Can be string or number\r\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\r\n        dataItem = {\r\n          name: dataItem\r\n        };\r\n      }\r\n\r\n      return new Model(dataItem, this, this.ecModel);\r\n    }, this);\r\n    /**\r\n     * @type {Array.<module:echarts/model/Model>}\r\n     * @private\r\n     */\r\n\r\n    this._data = legendData;\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<module:echarts/model/Model>}\r\n   */\r\n  getData: function () {\r\n    return this._data;\r\n  },\r\n\r\n  /**\r\n   * @param {string} name\r\n   */\r\n  select: function (name) {\r\n    var selected = this.option.selected;\r\n    var selectedMode = this.get('selectedMode');\r\n\r\n    if (selectedMode === 'single') {\r\n      var data = this._data;\r\n      zrUtil.each(data, function (dataItem) {\r\n        selected[dataItem.get('name')] = false;\r\n      });\r\n    }\r\n\r\n    selected[name] = true;\r\n  },\r\n\r\n  /**\r\n   * @param {string} name\r\n   */\r\n  unSelect: function (name) {\r\n    if (this.get('selectedMode') !== 'single') {\r\n      this.option.selected[name] = false;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {string} name\r\n   */\r\n  toggleSelected: function (name) {\r\n    var selected = this.option.selected; // Default is true\r\n\r\n    if (!selected.hasOwnProperty(name)) {\r\n      selected[name] = true;\r\n    }\r\n\r\n    this[selected[name] ? 'unSelect' : 'select'](name);\r\n  },\r\n  allSelect: function () {\r\n    var data = this._data;\r\n    var selected = this.option.selected;\r\n    zrUtil.each(data, function (dataItem) {\r\n      selected[dataItem.get('name', true)] = true;\r\n    });\r\n  },\r\n  inverseSelect: function () {\r\n    var data = this._data;\r\n    var selected = this.option.selected;\r\n    zrUtil.each(data, function (dataItem) {\r\n      var name = dataItem.get('name', true); // Initially, default value is true\r\n\r\n      if (!selected.hasOwnProperty(name)) {\r\n        selected[name] = true;\r\n      }\r\n\r\n      selected[name] = !selected[name];\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @param {string} name\r\n   */\r\n  isSelected: function (name) {\r\n    var selected = this.option.selected;\r\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\r\n  },\r\n  getOrient: function () {\r\n    return this.get('orient') === 'vertical' ? {\r\n      index: 1,\r\n      name: 'vertical'\r\n    } : {\r\n      index: 0,\r\n      name: 'horizontal'\r\n    };\r\n  },\r\n  defaultOption: {\r\n    // 一级层叠\r\n    zlevel: 0,\r\n    // 二级层叠\r\n    z: 4,\r\n    show: true,\r\n    // 布局方式，默认为水平布局，可选为：\r\n    // 'horizontal' | 'vertical'\r\n    orient: 'horizontal',\r\n    left: 'center',\r\n    // right: 'center',\r\n    top: 0,\r\n    // bottom: null,\r\n    // 水平对齐\r\n    // 'auto' | 'left' | 'right'\r\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\r\n    align: 'auto',\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    // 图例边框颜色\r\n    borderColor: '#ccc',\r\n    borderRadius: 0,\r\n    // 图例边框线宽，单位px，默认为0（无边框）\r\n    borderWidth: 0,\r\n    // 图例内边距，单位px，默认各方向内边距为5，\r\n    // 接受数组分别设定上右下左边距，同css\r\n    padding: 5,\r\n    // 各个item之间的间隔，单位px，默认为10，\r\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n    itemGap: 10,\r\n    // the width of legend symbol\r\n    itemWidth: 25,\r\n    // the height of legend symbol\r\n    itemHeight: 14,\r\n    // the color of unselected legend symbol\r\n    inactiveColor: '#ccc',\r\n    // the borderColor of unselected legend symbol\r\n    inactiveBorderColor: '#ccc',\r\n    itemStyle: {\r\n      // the default borderWidth of legend symbol\r\n      borderWidth: 0\r\n    },\r\n    textStyle: {\r\n      // 图例文字颜色\r\n      color: '#333'\r\n    },\r\n    // formatter: '',\r\n    // 选择模式，默认开启图例开关\r\n    selectedMode: true,\r\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\r\n    // selected: null,\r\n    // 图例内容（详见legend.data，数组中每一项代表一个item\r\n    // data: [],\r\n    // Usage:\r\n    // selector: [{type: 'all or inverse', title: xxx}]\r\n    // or\r\n    // selector: true\r\n    // or\r\n    // selector: ['all', 'inverse']\r\n    selector: false,\r\n    selectorLabel: {\r\n      show: true,\r\n      borderRadius: 10,\r\n      padding: [3, 5, 3, 5],\r\n      fontSize: 12,\r\n      fontFamily: ' sans-serif',\r\n      color: '#666',\r\n      borderWidth: 1,\r\n      borderColor: '#666'\r\n    },\r\n    emphasis: {\r\n      selectorLabel: {\r\n        show: true,\r\n        color: '#eee',\r\n        backgroundColor: '#666'\r\n      }\r\n    },\r\n    // Value can be 'start' or 'end'\r\n    selectorPosition: 'auto',\r\n    selectorItemGap: 7,\r\n    selectorButtonGap: 10,\r\n    // Tooltip 相关配置\r\n    tooltip: {\r\n      show: false\r\n    }\r\n  }\r\n});\r\nvar _default = LegendModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _symbol = require(\"../../util/symbol\");\r\n\r\nvar createSymbol = _symbol.createSymbol;\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _listComponent = require(\"../helper/listComponent\");\r\n\r\nvar makeBackground = _listComponent.makeBackground;\r\n\r\nvar layoutUtil = require(\"../../util/layout\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar curry = zrUtil.curry;\r\nvar each = zrUtil.each;\r\nvar Group = graphic.Group;\r\n\r\nvar _default = echarts.extendComponentView({\r\n  type: 'legend.plain',\r\n  newlineDisabled: false,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function () {\r\n    /**\r\n     * @private\r\n     * @type {module:zrender/container/Group}\r\n     */\r\n    this.group.add(this._contentGroup = new Group());\r\n    /**\r\n     * @private\r\n     * @type {module:zrender/Element}\r\n     */\r\n\r\n    this._backgroundEl;\r\n    /**\r\n     * @private\r\n     * @type {module:zrender/container/Group}\r\n     */\r\n\r\n    this.group.add(this._selectorGroup = new Group());\r\n    /**\r\n     * If first rendering, `contentGroup.position` is [0, 0], which\r\n     * does not make sense and may cause unexepcted animation if adopted.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n\r\n    this._isFirstRender = true;\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  getContentGroup: function () {\r\n    return this._contentGroup;\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  getSelectorGroup: function () {\r\n    return this._selectorGroup;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (legendModel, ecModel, api) {\r\n    var isFirstRender = this._isFirstRender;\r\n    this._isFirstRender = false;\r\n    this.resetInner();\r\n\r\n    if (!legendModel.get('show', true)) {\r\n      return;\r\n    }\r\n\r\n    var itemAlign = legendModel.get('align');\r\n    var orient = legendModel.get('orient');\r\n\r\n    if (!itemAlign || itemAlign === 'auto') {\r\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\r\n    }\r\n\r\n    var selector = legendModel.get('selector', true);\r\n    var selectorPosition = legendModel.get('selectorPosition', true);\r\n\r\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\r\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\r\n    }\r\n\r\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\r\n\r\n    var positionInfo = legendModel.getBoxLayoutParams();\r\n    var viewportSize = {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    };\r\n    var padding = legendModel.get('padding');\r\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\r\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\r\n\r\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\r\n      width: mainRect.width,\r\n      height: mainRect.height\r\n    }, positionInfo), viewportSize, padding);\r\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\r\n\r\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  resetInner: function () {\r\n    this.getContentGroup().removeAll();\r\n    this._backgroundEl && this.group.remove(this._backgroundEl);\r\n    this.getSelectorGroup().removeAll();\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  renderInner: function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\r\n    var contentGroup = this.getContentGroup();\r\n    var legendDrawnMap = zrUtil.createHashMap();\r\n    var selectMode = legendModel.get('selectedMode');\r\n    var excludeSeriesId = [];\r\n    ecModel.eachRawSeries(function (seriesModel) {\r\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\r\n    });\r\n    each(legendModel.getData(), function (itemModel, dataIndex) {\r\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\r\n\r\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\r\n        contentGroup.add(new Group({\r\n          newline: true\r\n        }));\r\n        return;\r\n      } // Representitive series.\r\n\r\n\r\n      var seriesModel = ecModel.getSeriesByName(name)[0];\r\n\r\n      if (legendDrawnMap.get(name)) {\r\n        // Have been drawed\r\n        return;\r\n      } // Legend to control series.\r\n\r\n\r\n      if (seriesModel) {\r\n        var data = seriesModel.getData();\r\n        var color = data.getVisual('color');\r\n        var borderColor = data.getVisual('borderColor'); // If color is a callback function\r\n\r\n        if (typeof color === 'function') {\r\n          // Use the first data\r\n          color = color(seriesModel.getDataParams(0));\r\n        } // If borderColor is a callback function\r\n\r\n\r\n        if (typeof borderColor === 'function') {\r\n          // Use the first data\r\n          borderColor = borderColor(seriesModel.getDataParams(0));\r\n        } // Using rect symbol defaultly\r\n\r\n\r\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\r\n        var symbolType = data.getVisual('symbol');\r\n\r\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, selectMode);\r\n\r\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\r\n        legendDrawnMap.set(name, true);\r\n      } else {\r\n        // Legend to control data. In pie and funnel.\r\n        ecModel.eachRawSeries(function (seriesModel) {\r\n          // In case multiple series has same data name\r\n          if (legendDrawnMap.get(name)) {\r\n            return;\r\n          }\r\n\r\n          if (seriesModel.legendVisualProvider) {\r\n            var provider = seriesModel.legendVisualProvider;\r\n\r\n            if (!provider.containName(name)) {\r\n              return;\r\n            }\r\n\r\n            var idx = provider.indexOfName(name);\r\n            var color = provider.getItemVisual(idx, 'color');\r\n            var borderColor = provider.getItemVisual(idx, 'borderColor');\r\n            var legendSymbolType = 'roundRect';\r\n\r\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, borderColor, selectMode); // FIXME: consider different series has items with the same name.\r\n\r\n\r\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\r\n            // more than one pie series.\r\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\r\n            legendDrawnMap.set(name, true);\r\n          }\r\n        }, this);\r\n      }\r\n    }, this);\r\n\r\n    if (selector) {\r\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\r\n    }\r\n  },\r\n  _createSelector: function (selector, legendModel, api, orient, selectorPosition) {\r\n    var selectorGroup = this.getSelectorGroup();\r\n    each(selector, function (selectorItem) {\r\n      createSelectorButton(selectorItem);\r\n    });\r\n\r\n    function createSelectorButton(selectorItem) {\r\n      var type = selectorItem.type;\r\n      var labelText = new graphic.Text({\r\n        style: {\r\n          x: 0,\r\n          y: 0,\r\n          align: 'center',\r\n          verticalAlign: 'middle'\r\n        },\r\n        onclick: function () {\r\n          api.dispatchAction({\r\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\r\n          });\r\n        }\r\n      });\r\n      selectorGroup.add(labelText);\r\n      var labelModel = legendModel.getModel('selectorLabel');\r\n      var emphasisLabelModel = legendModel.getModel('emphasis.selectorLabel');\r\n      graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, emphasisLabelModel, {\r\n        defaultText: selectorItem.title,\r\n        isRectText: false\r\n      });\r\n      graphic.setHoverStyle(labelText);\r\n    }\r\n  },\r\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, selectMode) {\r\n    var itemWidth = legendModel.get('itemWidth');\r\n    var itemHeight = legendModel.get('itemHeight');\r\n    var inactiveColor = legendModel.get('inactiveColor');\r\n    var inactiveBorderColor = legendModel.get('inactiveBorderColor');\r\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\r\n    var legendModelItemStyle = legendModel.getModel('itemStyle');\r\n    var isSelected = legendModel.isSelected(name);\r\n    var itemGroup = new Group();\r\n    var textStyleModel = itemModel.getModel('textStyle');\r\n    var itemIcon = itemModel.get('icon');\r\n    var tooltipModel = itemModel.getModel('tooltip');\r\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\r\n\r\n    legendSymbolType = itemIcon || legendSymbolType;\r\n    var legendSymbol = createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\r\n    symbolKeepAspect == null ? true : symbolKeepAspect);\r\n    itemGroup.add(setSymbolStyle(legendSymbol, legendSymbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected)); // Compose symbols\r\n    // PENDING\r\n\r\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\r\n    && (symbolType !== legendSymbolType || symbolType === 'none')) {\r\n      var size = itemHeight * 0.8;\r\n\r\n      if (symbolType === 'none') {\r\n        symbolType = 'circle';\r\n      }\r\n\r\n      var legendSymbolCenter = createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\r\n      symbolKeepAspect == null ? true : symbolKeepAspect); // Put symbol in the center\r\n\r\n      itemGroup.add(setSymbolStyle(legendSymbolCenter, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected));\r\n    }\r\n\r\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\r\n    var textAlign = itemAlign;\r\n    var formatter = legendModel.get('formatter');\r\n    var content = name;\r\n\r\n    if (typeof formatter === 'string' && formatter) {\r\n      content = formatter.replace('{name}', name != null ? name : '');\r\n    } else if (typeof formatter === 'function') {\r\n      content = formatter(name);\r\n    }\r\n\r\n    itemGroup.add(new graphic.Text({\r\n      style: graphic.setTextStyle({}, textStyleModel, {\r\n        text: content,\r\n        x: textX,\r\n        y: itemHeight / 2,\r\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\r\n        textAlign: textAlign,\r\n        textVerticalAlign: 'middle'\r\n      })\r\n    })); // Add a invisible rect to increase the area of mouse hover\r\n\r\n    var hitRect = new graphic.Rect({\r\n      shape: itemGroup.getBoundingRect(),\r\n      invisible: true,\r\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\r\n        content: name,\r\n        // Defaul formatter\r\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\r\n          return name;\r\n        },\r\n        formatterParams: {\r\n          componentType: 'legend',\r\n          legendIndex: legendModel.componentIndex,\r\n          name: name,\r\n          $vars: ['name']\r\n        }\r\n      }, tooltipModel.option) : null\r\n    });\r\n    itemGroup.add(hitRect);\r\n    itemGroup.eachChild(function (child) {\r\n      child.silent = true;\r\n    });\r\n    hitRect.silent = !selectMode;\r\n    this.getContentGroup().add(itemGroup);\r\n    graphic.setHoverStyle(itemGroup);\r\n    itemGroup.__legendDataIndex = dataIndex;\r\n    return itemGroup;\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  layoutInner: function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\r\n    var contentGroup = this.getContentGroup();\r\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\r\n\r\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\r\n    var contentRect = contentGroup.getBoundingRect();\r\n    var contentPos = [-contentRect.x, -contentRect.y];\r\n\r\n    if (selector) {\r\n      // Place buttons in selectorGroup\r\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\r\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\r\n      var selectorRect = selectorGroup.getBoundingRect();\r\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\r\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\r\n      var orientIdx = legendModel.getOrient().index;\r\n      var wh = orientIdx === 0 ? 'width' : 'height';\r\n      var hw = orientIdx === 0 ? 'height' : 'width';\r\n      var yx = orientIdx === 0 ? 'y' : 'x';\r\n\r\n      if (selectorPosition === 'end') {\r\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\r\n      } else {\r\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\r\n      } //Always align selector to content as 'middle'\r\n\r\n\r\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\r\n      selectorGroup.attr('position', selectorPos);\r\n      contentGroup.attr('position', contentPos);\r\n      var mainRect = {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\r\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\r\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\r\n      return mainRect;\r\n    } else {\r\n      contentGroup.attr('position', contentPos);\r\n      return this.group.getBoundingRect();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  remove: function () {\r\n    this.getContentGroup().removeAll();\r\n    this._isFirstRender = true;\r\n  }\r\n});\r\n\r\nfunction setSymbolStyle(symbol, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected) {\r\n  var itemStyle;\r\n\r\n  if (symbolType !== 'line' && symbolType.indexOf('empty') < 0) {\r\n    itemStyle = legendModelItemStyle.getItemStyle();\r\n    symbol.style.stroke = borderColor;\r\n\r\n    if (!isSelected) {\r\n      itemStyle.stroke = inactiveBorderColor;\r\n    }\r\n  } else {\r\n    itemStyle = legendModelItemStyle.getItemStyle(['borderWidth', 'borderColor']);\r\n  }\r\n\r\n  return symbol.setStyle(itemStyle);\r\n}\r\n\r\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\r\n  // downplay before unselect\r\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\r\n  api.dispatchAction({\r\n    type: 'legendToggleSelect',\r\n    name: seriesName != null ? seriesName : dataName\r\n  }); // highlight after select\r\n\r\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\r\n}\r\n\r\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\r\n  // If element hover will move to a hoverLayer.\r\n  var el = api.getZr().storage.getDisplayList()[0];\r\n\r\n  if (!(el && el.useHoverLayer)) {\r\n    api.dispatchAction({\r\n      type: 'highlight',\r\n      seriesName: seriesName,\r\n      name: dataName,\r\n      excludeSeriesId: excludeSeriesId\r\n    });\r\n  }\r\n}\r\n\r\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\r\n  // If element hover will move to a hoverLayer.\r\n  var el = api.getZr().storage.getDisplayList()[0];\r\n\r\n  if (!(el && el.useHoverLayer)) {\r\n    api.dispatchAction({\r\n      type: 'downplay',\r\n      seriesName: seriesName,\r\n      name: dataName,\r\n      excludeSeriesId: excludeSeriesId\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar LegendModel = require(\"./LegendModel\");\r\n\r\nvar _layout = require(\"../../util/layout\");\r\n\r\nvar mergeLayoutParam = _layout.mergeLayoutParam;\r\nvar getLayoutParams = _layout.getLayoutParams;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar ScrollableLegendModel = LegendModel.extend({\r\n  type: 'legend.scroll',\r\n\r\n  /**\r\n   * @param {number} scrollDataIndex\r\n   */\r\n  setScrollDataIndex: function (scrollDataIndex) {\r\n    this.option.scrollDataIndex = scrollDataIndex;\r\n  },\r\n  defaultOption: {\r\n    scrollDataIndex: 0,\r\n    pageButtonItemGap: 5,\r\n    pageButtonGap: null,\r\n    pageButtonPosition: 'end',\r\n    // 'start' or 'end'\r\n    pageFormatter: '{current}/{total}',\r\n    // If null/undefined, do not show page.\r\n    pageIcons: {\r\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\r\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\r\n    },\r\n    pageIconColor: '#2f4554',\r\n    pageIconInactiveColor: '#aaa',\r\n    pageIconSize: 15,\r\n    // Can be [10, 3], which represents [width, height]\r\n    pageTextStyle: {\r\n      color: '#333'\r\n    },\r\n    animationDurationUpdate: 800\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (option, parentModel, ecModel, extraOpt) {\r\n    var inputPositionParams = getLayoutParams(option);\r\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\r\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  mergeOption: function (option, extraOpt) {\r\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\r\n    mergeAndNormalizeLayoutParams(this, this.option, option);\r\n  }\r\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\r\n\r\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\r\n  var orient = legendModel.getOrient();\r\n  var ignoreSize = [1, 1];\r\n  ignoreSize[orient.index] = 0;\r\n  mergeLayoutParam(target, raw, {\r\n    type: 'box',\r\n    ignoreSize: ignoreSize\r\n  });\r\n}\r\n\r\nvar _default = ScrollableLegendModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar layoutUtil = require(\"../../util/layout\");\r\n\r\nvar LegendView = require(\"./LegendView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Separate legend and scrollable legend to reduce package size.\r\n */\r\nvar Group = graphic.Group;\r\nvar WH = ['width', 'height'];\r\nvar XY = ['x', 'y'];\r\nvar ScrollableLegendView = LegendView.extend({\r\n  type: 'legend.scroll',\r\n  newlineDisabled: true,\r\n  init: function () {\r\n    ScrollableLegendView.superCall(this, 'init');\r\n    /**\r\n     * @private\r\n     * @type {number} For `scroll`.\r\n     */\r\n\r\n    this._currentIndex = 0;\r\n    /**\r\n     * @private\r\n     * @type {module:zrender/container/Group}\r\n     */\r\n\r\n    this.group.add(this._containerGroup = new Group());\r\n\r\n    this._containerGroup.add(this.getContentGroup());\r\n    /**\r\n     * @private\r\n     * @type {module:zrender/container/Group}\r\n     */\r\n\r\n\r\n    this.group.add(this._controllerGroup = new Group());\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n\r\n    this._showController;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  resetInner: function () {\r\n    ScrollableLegendView.superCall(this, 'resetInner');\r\n\r\n    this._controllerGroup.removeAll();\r\n\r\n    this._containerGroup.removeClipPath();\r\n\r\n    this._containerGroup.__rectSize = null;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  renderInner: function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\r\n    var me = this; // Render content items.\r\n\r\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\r\n    var controllerGroup = this._controllerGroup; // FIXME: support be 'auto' adapt to size number text length,\r\n    // e.g., '3/12345' should not overlap with the control arrow button.\r\n\r\n    var pageIconSize = legendModel.get('pageIconSize', true);\r\n\r\n    if (!zrUtil.isArray(pageIconSize)) {\r\n      pageIconSize = [pageIconSize, pageIconSize];\r\n    }\r\n\r\n    createPageButton('pagePrev', 0);\r\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\r\n    controllerGroup.add(new graphic.Text({\r\n      name: 'pageText',\r\n      style: {\r\n        textFill: pageTextStyleModel.getTextColor(),\r\n        font: pageTextStyleModel.getFont(),\r\n        textVerticalAlign: 'middle',\r\n        textAlign: 'center'\r\n      },\r\n      silent: true\r\n    }));\r\n    createPageButton('pageNext', 1);\r\n\r\n    function createPageButton(name, iconIdx) {\r\n      var pageDataIndexName = name + 'DataIndex';\r\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\r\n        // Buttons will be created in each render, so we do not need\r\n        // to worry about avoiding using legendModel kept in scope.\r\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\r\n      }, {\r\n        x: -pageIconSize[0] / 2,\r\n        y: -pageIconSize[1] / 2,\r\n        width: pageIconSize[0],\r\n        height: pageIconSize[1]\r\n      });\r\n      icon.name = name;\r\n      controllerGroup.add(icon);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  layoutInner: function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\r\n    var selectorGroup = this.getSelectorGroup();\r\n    var orientIdx = legendModel.getOrient().index;\r\n    var wh = WH[orientIdx];\r\n    var xy = XY[orientIdx];\r\n    var hw = WH[1 - orientIdx];\r\n    var yx = XY[1 - orientIdx];\r\n    selector && layoutUtil.box( // Buttons in selectorGroup always layout horizontally\r\n    'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\r\n    var selectorButtonGap = legendModel.get('selectorButtonGap', true);\r\n    var selectorRect = selectorGroup.getBoundingRect();\r\n    var selectorPos = [-selectorRect.x, -selectorRect.y];\r\n    var processMaxSize = zrUtil.clone(maxSize);\r\n    selector && (processMaxSize[wh] = maxSize[wh] - selectorRect[wh] - selectorButtonGap);\r\n\r\n    var mainRect = this._layoutContentAndController(legendModel, isFirstRender, processMaxSize, orientIdx, wh, hw, yx);\r\n\r\n    if (selector) {\r\n      if (selectorPosition === 'end') {\r\n        selectorPos[orientIdx] += mainRect[wh] + selectorButtonGap;\r\n      } else {\r\n        var offset = selectorRect[wh] + selectorButtonGap;\r\n        selectorPos[orientIdx] -= offset;\r\n        mainRect[xy] -= offset;\r\n      }\r\n\r\n      mainRect[wh] += selectorRect[wh] + selectorButtonGap;\r\n      selectorPos[1 - orientIdx] += mainRect[yx] + mainRect[hw] / 2 - selectorRect[hw] / 2;\r\n      mainRect[hw] = Math.max(mainRect[hw], selectorRect[hw]);\r\n      mainRect[yx] = Math.min(mainRect[yx], selectorRect[yx] + selectorPos[1 - orientIdx]);\r\n      selectorGroup.attr('position', selectorPos);\r\n    }\r\n\r\n    return mainRect;\r\n  },\r\n  _layoutContentAndController: function (legendModel, isFirstRender, maxSize, orientIdx, wh, hw, yx) {\r\n    var contentGroup = this.getContentGroup();\r\n    var containerGroup = this._containerGroup;\r\n    var controllerGroup = this._controllerGroup; // Place items in contentGroup.\r\n\r\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\r\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\r\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\r\n    var contentRect = contentGroup.getBoundingRect();\r\n    var controllerRect = controllerGroup.getBoundingRect();\r\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\r\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\r\n    // If first rendering, `contentGroup.position` is [0, 0], which\r\n    // does not make sense and may cause unexepcted animation if adopted.\r\n\r\n    if (!isFirstRender) {\r\n      contentPos[orientIdx] = contentGroup.position[orientIdx];\r\n    } // Layout container group based on 0.\r\n\r\n\r\n    var containerPos = [0, 0];\r\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\r\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\r\n\r\n    if (showController) {\r\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\r\n\r\n      if (pageButtonPosition === 'end') {\r\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\r\n      } // controller is on the left / top.\r\n      else {\r\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\r\n        }\r\n    } // Always align controller to content as 'middle'.\r\n\r\n\r\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\r\n    contentGroup.attr('position', contentPos);\r\n    containerGroup.attr('position', containerPos);\r\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\r\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\r\n    // for sake of the overflow.\r\n\r\n    var mainRect = {\r\n      x: 0,\r\n      y: 0\r\n    }; // Consider content may be overflow (should be clipped).\r\n\r\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\r\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\r\n\r\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\r\n    containerGroup.__rectSize = maxSize[wh];\r\n\r\n    if (showController) {\r\n      var clipShape = {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\r\n      clipShape[hw] = mainRect[hw];\r\n      containerGroup.setClipPath(new graphic.Rect({\r\n        shape: clipShape\r\n      })); // Consider content may be larger than container, container rect\r\n      // can not be obtained from `containerGroup.getBoundingRect()`.\r\n\r\n      containerGroup.__rectSize = clipShape[wh];\r\n    } else {\r\n      // Do not remove or ignore controller. Keep them set as placeholders.\r\n      controllerGroup.eachChild(function (child) {\r\n        child.attr({\r\n          invisible: true,\r\n          silent: true\r\n        });\r\n      });\r\n    } // Content translate animation.\r\n\r\n\r\n    var pageInfo = this._getPageInfo(legendModel);\r\n\r\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\r\n      position: pageInfo.contentPosition\r\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\r\n    // updated immediately without animation, otherwise causes weird effect.\r\n    showController ? legendModel : false);\r\n\r\n    this._updatePageInfoView(legendModel, pageInfo);\r\n\r\n    return mainRect;\r\n  },\r\n  _pageGo: function (to, legendModel, api) {\r\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\r\n\r\n    scrollDataIndex != null && api.dispatchAction({\r\n      type: 'legendScroll',\r\n      scrollDataIndex: scrollDataIndex,\r\n      legendId: legendModel.id\r\n    });\r\n  },\r\n  _updatePageInfoView: function (legendModel, pageInfo) {\r\n    var controllerGroup = this._controllerGroup;\r\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\r\n      var canJump = pageInfo[name + 'DataIndex'] != null;\r\n      var icon = controllerGroup.childOfName(name);\r\n\r\n      if (icon) {\r\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\r\n        icon.cursor = canJump ? 'pointer' : 'default';\r\n      }\r\n    });\r\n    var pageText = controllerGroup.childOfName('pageText');\r\n    var pageFormatter = legendModel.get('pageFormatter');\r\n    var pageIndex = pageInfo.pageIndex;\r\n    var current = pageIndex != null ? pageIndex + 1 : 0;\r\n    var total = pageInfo.pageCount;\r\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\r\n      current: current,\r\n      total: total\r\n    }));\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/model/Model} legendModel\r\n   * @return {Object} {\r\n   *  contentPosition: Array.<number>, null when data item not found.\r\n   *  pageIndex: number, null when data item not found.\r\n   *  pageCount: number, always be a number, can be 0.\r\n   *  pagePrevDataIndex: number, null when no previous page.\r\n   *  pageNextDataIndex: number, null when no next page.\r\n   * }\r\n   */\r\n  _getPageInfo: function (legendModel) {\r\n    var scrollDataIndex = legendModel.get('scrollDataIndex', true);\r\n    var contentGroup = this.getContentGroup();\r\n    var containerRectSize = this._containerGroup.__rectSize;\r\n    var orientIdx = legendModel.getOrient().index;\r\n    var wh = WH[orientIdx];\r\n    var xy = XY[orientIdx];\r\n\r\n    var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\r\n\r\n    var children = contentGroup.children();\r\n    var targetItem = children[targetItemIndex];\r\n    var itemCount = children.length;\r\n    var pCount = !itemCount ? 0 : 1;\r\n    var result = {\r\n      contentPosition: contentGroup.position.slice(),\r\n      pageCount: pCount,\r\n      pageIndex: pCount - 1,\r\n      pagePrevDataIndex: null,\r\n      pageNextDataIndex: null\r\n    };\r\n\r\n    if (!targetItem) {\r\n      return result;\r\n    }\r\n\r\n    var targetItemInfo = getItemInfo(targetItem);\r\n    result.contentPosition[orientIdx] = -targetItemInfo.s; // Strategy:\r\n    // (1) Always align based on the left/top most item.\r\n    // (2) It is user-friendly that the last item shown in the\r\n    // current window is shown at the begining of next window.\r\n    // Otherwise if half of the last item is cut by the window,\r\n    // it will have no chance to display entirely.\r\n    // (3) Consider that item size probably be different, we\r\n    // have calculate pageIndex by size rather than item index,\r\n    // and we can not get page index directly by division.\r\n    // (4) The window is to narrow to contain more than\r\n    // one item, we should make sure that the page can be fliped.\r\n\r\n    for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\r\n      currItemInfo = getItemInfo(children[i]);\r\n\r\n      if ( // Half of the last item is out of the window.\r\n      !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize || // If the current item does not intersect with the window, the new page\r\n      // can be started at the current item or the last item.\r\n      currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\r\n        if (winEndItemInfo.i > winStartItemInfo.i) {\r\n          winStartItemInfo = winEndItemInfo;\r\n        } else {\r\n          // e.g., when page size is smaller than item size.\r\n          winStartItemInfo = currItemInfo;\r\n        }\r\n\r\n        if (winStartItemInfo) {\r\n          if (result.pageNextDataIndex == null) {\r\n            result.pageNextDataIndex = winStartItemInfo.i;\r\n          }\r\n\r\n          ++result.pageCount;\r\n        }\r\n      }\r\n\r\n      winEndItemInfo = currItemInfo;\r\n    }\r\n\r\n    for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\r\n      currItemInfo = getItemInfo(children[i]);\r\n\r\n      if ( // If the the end item does not intersect with the window started\r\n      // from the current item, a page can be settled.\r\n      (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)) && // e.g., when page size is smaller than item size.\r\n      winStartItemInfo.i < winEndItemInfo.i) {\r\n        winEndItemInfo = winStartItemInfo;\r\n\r\n        if (result.pagePrevDataIndex == null) {\r\n          result.pagePrevDataIndex = winStartItemInfo.i;\r\n        }\r\n\r\n        ++result.pageCount;\r\n        ++result.pageIndex;\r\n      }\r\n\r\n      winStartItemInfo = currItemInfo;\r\n    }\r\n\r\n    return result;\r\n\r\n    function getItemInfo(el) {\r\n      if (el) {\r\n        var itemRect = el.getBoundingRect();\r\n        var start = itemRect[xy] + el.position[orientIdx];\r\n        return {\r\n          s: start,\r\n          e: start + itemRect[wh],\r\n          i: el.__legendDataIndex\r\n        };\r\n      }\r\n    }\r\n\r\n    function intersect(itemInfo, winStart) {\r\n      return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\r\n    }\r\n  },\r\n  _findTargetItemIndex: function (targetDataIndex) {\r\n    if (!this._showController) {\r\n      return 0;\r\n    }\r\n\r\n    var index;\r\n    var contentGroup = this.getContentGroup();\r\n    var defaultIndex;\r\n    contentGroup.eachChild(function (child, idx) {\r\n      var legendDataIdx = child.__legendDataIndex; // FIXME\r\n      // If the given targetDataIndex (from model) is illegal,\r\n      // we use defaultIndex. But the index on the legend model and\r\n      // action payload is still illegal. That case will not be\r\n      // changed until some scenario requires.\r\n\r\n      if (defaultIndex == null && legendDataIdx != null) {\r\n        defaultIndex = idx;\r\n      }\r\n\r\n      if (legendDataIdx === targetDataIndex) {\r\n        index = idx;\r\n      }\r\n    });\r\n    return index != null ? index : defaultIndex;\r\n  }\r\n});\r\nvar _default = ScrollableLegendView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\r\n  var selectedMap = {};\r\n  var isToggleSelect = methodName === 'toggleSelected';\r\n  var isSelected; // Update all legend components\r\n\r\n  ecModel.eachComponent('legend', function (legendModel) {\r\n    if (isToggleSelect && isSelected != null) {\r\n      // Force other legend has same selected status\r\n      // Or the first is toggled to true and other are toggled to false\r\n      // In the case one legend has some item unSelected in option. And if other legend\r\n      // doesn't has the item, they will assume it is selected.\r\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\r\n    } else if (methodName === 'allSelect' || methodName === 'inverseSelect') {\r\n      legendModel[methodName]();\r\n    } else {\r\n      legendModel[methodName](payload.name);\r\n      isSelected = legendModel.isSelected(payload.name);\r\n    }\r\n\r\n    var legendData = legendModel.getData();\r\n    zrUtil.each(legendData, function (model) {\r\n      var name = model.get('name'); // Wrap element\r\n\r\n      if (name === '\\n' || name === '') {\r\n        return;\r\n      }\r\n\r\n      var isItemSelected = legendModel.isSelected(name);\r\n\r\n      if (selectedMap.hasOwnProperty(name)) {\r\n        // Unselected if any legend is unselected\r\n        selectedMap[name] = selectedMap[name] && isItemSelected;\r\n      } else {\r\n        selectedMap[name] = isItemSelected;\r\n      }\r\n    });\r\n  }); // Return the event explicitly\r\n\r\n  return methodName === 'allSelect' || methodName === 'inverseSelect' ? {\r\n    selected: selectedMap\r\n  } : {\r\n    name: payload.name,\r\n    selected: selectedMap\r\n  };\r\n}\r\n/**\r\n * @event legendToggleSelect\r\n * @type {Object}\r\n * @property {string} type 'legendToggleSelect'\r\n * @property {string} [from]\r\n * @property {string} name Series name or data item name\r\n */\r\n\r\n\r\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\r\necharts.registerAction('legendAllSelect', 'legendselectall', zrUtil.curry(legendSelectActionHandler, 'allSelect'));\r\necharts.registerAction('legendInverseSelect', 'legendinverseselect', zrUtil.curry(legendSelectActionHandler, 'inverseSelect'));\r\n/**\r\n * @event legendSelect\r\n * @type {Object}\r\n * @property {string} type 'legendSelect'\r\n * @property {string} name Series name or data item name\r\n */\r\n\r\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\r\n/**\r\n * @event legendUnSelect\r\n * @type {Object}\r\n * @property {string} type 'legendUnSelect'\r\n * @property {string} name Series name or data item name\r\n */\r\n\r\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(ecModel) {\r\n  var legendModels = ecModel.findComponents({\r\n    mainType: 'legend'\r\n  });\r\n\r\n  if (legendModels && legendModels.length) {\r\n    ecModel.filterSeries(function (series) {\r\n      // If in any legend component the status is not selected.\r\n      // Because in legend series is assumed selected when it is not in the legend data.\r\n      for (var i = 0; i < legendModels.length; i++) {\r\n        if (!legendModels[i].isSelected(series.name)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @event legendScroll\r\n * @type {Object}\r\n * @property {string} type 'legendScroll'\r\n * @property {string} scrollDataIndex\r\n */\r\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\r\n  var scrollDataIndex = payload.scrollDataIndex;\r\n  scrollDataIndex != null && ecModel.eachComponent({\r\n    mainType: 'legend',\r\n    subType: 'scroll',\r\n    query: payload\r\n  }, function (legendModel) {\r\n    legendModel.setScrollDataIndex(scrollDataIndex);\r\n  });\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./marker/MarkAreaModel\");\r\n\r\nrequire(\"./marker/MarkAreaView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerPreprocessor(function (opt) {\r\n  // Make sure markArea component is enabled\r\n  opt.markArea = opt.markArea || {};\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./marker/MarkLineModel\");\r\n\r\nrequire(\"./marker/MarkLineView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerPreprocessor(function (opt) {\r\n  // Make sure markLine component is enabled\r\n  opt.markLine = opt.markLine || {};\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./marker/MarkPointModel\");\r\n\r\nrequire(\"./marker/MarkPointView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// HINT Markpoint can't be used too much\r\necharts.registerPreprocessor(function (opt) {\r\n  // Make sure markPoint component is enabled\r\n  opt.markPoint = opt.markPoint || {};\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar MarkerModel = require(\"./MarkerModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = MarkerModel.extend({\r\n  type: 'markArea',\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    // PENDING\r\n    z: 1,\r\n    tooltip: {\r\n      trigger: 'item'\r\n    },\r\n    // markArea should fixed on the coordinate system\r\n    animation: false,\r\n    label: {\r\n      show: true,\r\n      position: 'top'\r\n    },\r\n    itemStyle: {\r\n      // color and borderColor default to use color from series\r\n      // color: 'auto'\r\n      // borderColor: 'auto'\r\n      borderWidth: 0\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        position: 'top'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar colorUtil = require(\"zrender/lib/tool/color\");\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar markerHelper = require(\"./markerHelper\");\r\n\r\nvar MarkerView = require(\"./MarkerView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// TODO Better on polar\r\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\r\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\r\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\r\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\r\n\r\n  var ltCoord = lt.coord;\r\n  var rbCoord = rb.coord;\r\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\r\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\r\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\r\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\r\n\r\n  var result = zrUtil.mergeAll([{}, lt, rb]);\r\n  result.coord = [lt.coord, rb.coord];\r\n  result.x0 = lt.x;\r\n  result.y0 = lt.y;\r\n  result.x1 = rb.x;\r\n  result.y1 = rb.y;\r\n  return result;\r\n};\r\n\r\nfunction isInifinity(val) {\r\n  return !isNaN(val) && !isFinite(val);\r\n} // If a markArea has one dim\r\n\r\n\r\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\r\n  var otherDimIndex = 1 - dimIndex;\r\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\r\n}\r\n\r\nfunction markAreaFilter(coordSys, item) {\r\n  var fromCoord = item.coord[0];\r\n  var toCoord = item.coord[1];\r\n\r\n  if (coordSys.type === 'cartesian2d') {\r\n    // In case\r\n    // {\r\n    //  markArea: {\r\n    //    data: [{ yAxis: 2 }]\r\n    //  }\r\n    // }\r\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return markerHelper.dataFilter(coordSys, {\r\n    coord: fromCoord,\r\n    x: item.x0,\r\n    y: item.y0\r\n  }) || markerHelper.dataFilter(coordSys, {\r\n    coord: toCoord,\r\n    x: item.x1,\r\n    y: item.y1\r\n  });\r\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\r\n\r\n\r\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n  var itemModel = data.getItemModel(idx);\r\n  var point;\r\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\r\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\r\n\r\n  if (!isNaN(xPx) && !isNaN(yPx)) {\r\n    point = [xPx, yPx];\r\n  } else {\r\n    // Chart like bar may have there own marker positioning logic\r\n    if (seriesModel.getMarkerPosition) {\r\n      // Use the getMarkerPoisition\r\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\r\n    } else {\r\n      var x = data.get(dims[0], idx);\r\n      var y = data.get(dims[1], idx);\r\n      var pt = [x, y];\r\n      coordSys.clampData && coordSys.clampData(pt, pt);\r\n      point = coordSys.dataToPoint(pt, true);\r\n    }\r\n\r\n    if (coordSys.type === 'cartesian2d') {\r\n      var xAxis = coordSys.getAxis('x');\r\n      var yAxis = coordSys.getAxis('y');\r\n      var x = data.get(dims[0], idx);\r\n      var y = data.get(dims[1], idx);\r\n\r\n      if (isInifinity(x)) {\r\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\r\n      } else if (isInifinity(y)) {\r\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\r\n      }\r\n    } // Use x, y if has any\r\n\r\n\r\n    if (!isNaN(xPx)) {\r\n      point[0] = xPx;\r\n    }\r\n\r\n    if (!isNaN(yPx)) {\r\n      point[1] = yPx;\r\n    }\r\n  }\r\n\r\n  return point;\r\n}\r\n\r\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\r\nMarkerView.extend({\r\n  type: 'markArea',\r\n  // updateLayout: function (markAreaModel, ecModel, api) {\r\n  //     ecModel.eachSeries(function (seriesModel) {\r\n  //         var maModel = seriesModel.markAreaModel;\r\n  //         if (maModel) {\r\n  //             var areaData = maModel.getData();\r\n  //             areaData.each(function (idx) {\r\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\r\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\r\n  //                 });\r\n  //                 // Layout\r\n  //                 areaData.setItemLayout(idx, points);\r\n  //                 var el = areaData.getItemGraphicEl(idx);\r\n  //                 el.setShape('points', points);\r\n  //             });\r\n  //         }\r\n  //     }, this);\r\n  // },\r\n  updateTransform: function (markAreaModel, ecModel, api) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var maModel = seriesModel.markAreaModel;\r\n\r\n      if (maModel) {\r\n        var areaData = maModel.getData();\r\n        areaData.each(function (idx) {\r\n          var points = zrUtil.map(dimPermutations, function (dim) {\r\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\r\n          }); // Layout\r\n\r\n          areaData.setItemLayout(idx, points);\r\n          var el = areaData.getItemGraphicEl(idx);\r\n          el.setShape('points', points);\r\n        });\r\n      }\r\n    }, this);\r\n  },\r\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var seriesId = seriesModel.id;\r\n    var seriesData = seriesModel.getData();\r\n    var areaGroupMap = this.markerGroupMap;\r\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\r\n      group: new graphic.Group()\r\n    });\r\n    this.group.add(polygonGroup.group);\r\n    polygonGroup.__keep = true;\r\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\r\n\r\n    maModel.setData(areaData); // Update visual and layout of line\r\n\r\n    areaData.each(function (idx) {\r\n      // Layout\r\n      var points = zrUtil.map(dimPermutations, function (dim) {\r\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\r\n      }); // If none of the area is inside coordSys, allClipped is set to be true\r\n      // in layout so that label will not be displayed. See #12591\r\n\r\n      var allClipped = true;\r\n      zrUtil.each(dimPermutations, function (dim) {\r\n        if (!allClipped) {\r\n          return;\r\n        }\r\n\r\n        var xValue = areaData.get(dim[0], idx);\r\n        var yValue = areaData.get(dim[1], idx); // If is infinity, the axis should be considered not clipped\r\n\r\n        if ((isInifinity(xValue) || coordSys.getAxis('x').containData(xValue)) && (isInifinity(yValue) || coordSys.getAxis('y').containData(yValue))) {\r\n          allClipped = false;\r\n        }\r\n      });\r\n      areaData.setItemLayout(idx, {\r\n        points: points,\r\n        allClipped: allClipped\r\n      }); // Visual\r\n\r\n      areaData.setItemVisual(idx, {\r\n        color: seriesData.getVisual('color')\r\n      });\r\n    });\r\n    areaData.diff(polygonGroup.__data).add(function (idx) {\r\n      var layout = areaData.getItemLayout(idx);\r\n\r\n      if (!layout.allClipped) {\r\n        var polygon = new graphic.Polygon({\r\n          shape: {\r\n            points: layout.points\r\n          }\r\n        });\r\n        areaData.setItemGraphicEl(idx, polygon);\r\n        polygonGroup.group.add(polygon);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\r\n\r\n      var layout = areaData.getItemLayout(newIdx);\r\n\r\n      if (!layout.allClipped) {\r\n        if (polygon) {\r\n          graphic.updateProps(polygon, {\r\n            shape: {\r\n              points: layout.points\r\n            }\r\n          }, maModel, newIdx);\r\n        } else {\r\n          polygon = new graphic.Polygon({\r\n            shape: {\r\n              points: layout.points\r\n            }\r\n          });\r\n        }\r\n\r\n        areaData.setItemGraphicEl(newIdx, polygon);\r\n        polygonGroup.group.add(polygon);\r\n      } else if (polygon) {\r\n        polygonGroup.group.remove(polygon);\r\n      }\r\n    }).remove(function (idx) {\r\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\r\n\r\n      polygonGroup.group.remove(polygon);\r\n    }).execute();\r\n    areaData.eachItemGraphicEl(function (polygon, idx) {\r\n      var itemModel = areaData.getItemModel(idx);\r\n      var labelModel = itemModel.getModel('label');\r\n      var labelHoverModel = itemModel.getModel('emphasis.label');\r\n      var color = areaData.getItemVisual(idx, 'color');\r\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\r\n        fill: colorUtil.modifyAlpha(color, 0.4),\r\n        stroke: color\r\n      }));\r\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\r\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\r\n        labelFetcher: maModel,\r\n        labelDataIndex: idx,\r\n        defaultText: areaData.getName(idx) || '',\r\n        isRectText: true,\r\n        autoColor: color\r\n      });\r\n      graphic.setHoverStyle(polygon, {});\r\n      polygon.dataModel = maModel;\r\n    });\r\n    polygonGroup.__data = areaData;\r\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\r\n  }\r\n});\r\n/**\r\n * @inner\r\n * @param {module:echarts/coord/*} coordSys\r\n * @param {module:echarts/model/Series} seriesModel\r\n * @param {module:echarts/model/Model} mpModel\r\n */\r\n\r\nfunction createList(coordSys, seriesModel, maModel) {\r\n  var coordDimsInfos;\r\n  var areaData;\r\n  var dims = ['x0', 'y0', 'x1', 'y1'];\r\n\r\n  if (coordSys) {\r\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\r\n      var data = seriesModel.getData();\r\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\r\n\r\n      return zrUtil.defaults({\r\n        name: coordDim\r\n      }, info);\r\n    });\r\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\r\n      return {\r\n        name: dim,\r\n        type: coordDimsInfos[idx % 2].type\r\n      };\r\n    }), maModel);\r\n  } else {\r\n    coordDimsInfos = [{\r\n      name: 'value',\r\n      type: 'float'\r\n    }];\r\n    areaData = new List(coordDimsInfos, maModel);\r\n  }\r\n\r\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\r\n\r\n  if (coordSys) {\r\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\r\n  }\r\n\r\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\r\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\r\n  } : function (item) {\r\n    return item.value;\r\n  };\r\n  areaData.initData(optData, null, dimValueGetter);\r\n  areaData.hasItemOption = true;\r\n  return areaData;\r\n}","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar MarkerModel = require(\"./MarkerModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = MarkerModel.extend({\r\n  type: 'markLine',\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 5,\r\n    symbol: ['circle', 'arrow'],\r\n    symbolSize: [8, 16],\r\n    //symbolRotate: 0,\r\n    precision: 2,\r\n    tooltip: {\r\n      trigger: 'item'\r\n    },\r\n    label: {\r\n      show: true,\r\n      position: 'end',\r\n      distance: 5\r\n    },\r\n    lineStyle: {\r\n      type: 'dashed'\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      },\r\n      lineStyle: {\r\n        width: 3\r\n      }\r\n    },\r\n    animationEasing: 'linear'\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar markerHelper = require(\"./markerHelper\");\r\n\r\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\r\n\r\nvar MarkerView = require(\"./MarkerView\");\r\n\r\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\r\n\r\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\r\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\r\n\r\n  var mlType = item.type;\r\n\r\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\r\n  // data: [{\r\n  //   yAxis: 10\r\n  // }]\r\n  || item.xAxis != null || item.yAxis != null)) {\r\n    var valueAxis;\r\n    var value;\r\n\r\n    if (item.yAxis != null || item.xAxis != null) {\r\n      valueAxis = coordSys.getAxis(item.yAxis != null ? 'y' : 'x');\r\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\r\n    } else {\r\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\r\n      valueAxis = axisInfo.valueAxis;\r\n      var valueDataDim = getStackedDimension(data, axisInfo.valueDataDim);\r\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\r\n    }\r\n\r\n    var valueIndex = valueAxis.dim === 'x' ? 0 : 1;\r\n    var baseIndex = 1 - valueIndex;\r\n    var mlFrom = zrUtil.clone(item);\r\n    var mlTo = {};\r\n    mlFrom.type = null;\r\n    mlFrom.coord = [];\r\n    mlTo.coord = [];\r\n    mlFrom.coord[baseIndex] = -Infinity;\r\n    mlTo.coord[baseIndex] = Infinity;\r\n    var precision = mlModel.get('precision');\r\n\r\n    if (precision >= 0 && typeof value === 'number') {\r\n      value = +value.toFixed(Math.min(precision, 20));\r\n    }\r\n\r\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\r\n    item = [mlFrom, mlTo, {\r\n      // Extra option for tooltip and label\r\n      type: mlType,\r\n      valueIndex: item.valueIndex,\r\n      // Force to use the value of calculated value.\r\n      value: value\r\n    }];\r\n  }\r\n\r\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\r\n\r\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\r\n\r\n  zrUtil.merge(item[2], item[0]);\r\n  zrUtil.merge(item[2], item[1]);\r\n  return item;\r\n};\r\n\r\nfunction isInifinity(val) {\r\n  return !isNaN(val) && !isFinite(val);\r\n} // If a markLine has one dim\r\n\r\n\r\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\r\n  var otherDimIndex = 1 - dimIndex;\r\n  var dimName = coordSys.dimensions[dimIndex];\r\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\r\n}\r\n\r\nfunction markLineFilter(coordSys, item) {\r\n  if (coordSys.type === 'cartesian2d') {\r\n    var fromCoord = item[0].coord;\r\n    var toCoord = item[1].coord; // In case\r\n    // {\r\n    //  markLine: {\r\n    //    data: [{ yAxis: 2 }]\r\n    //  }\r\n    // }\r\n\r\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\r\n}\r\n\r\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n  var itemModel = data.getItemModel(idx);\r\n  var point;\r\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\r\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\r\n\r\n  if (!isNaN(xPx) && !isNaN(yPx)) {\r\n    point = [xPx, yPx];\r\n  } else {\r\n    // Chart like bar may have there own marker positioning logic\r\n    if (seriesModel.getMarkerPosition) {\r\n      // Use the getMarkerPoisition\r\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\r\n    } else {\r\n      var dims = coordSys.dimensions;\r\n      var x = data.get(dims[0], idx);\r\n      var y = data.get(dims[1], idx);\r\n      point = coordSys.dataToPoint([x, y]);\r\n    } // Expand line to the edge of grid if value on one axis is Inifnity\r\n    // In case\r\n    //  markLine: {\r\n    //    data: [{\r\n    //      yAxis: 2\r\n    //      // or\r\n    //      type: 'average'\r\n    //    }]\r\n    //  }\r\n\r\n\r\n    if (coordSys.type === 'cartesian2d') {\r\n      var xAxis = coordSys.getAxis('x');\r\n      var yAxis = coordSys.getAxis('y');\r\n      var dims = coordSys.dimensions;\r\n\r\n      if (isInifinity(data.get(dims[0], idx))) {\r\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\r\n      } else if (isInifinity(data.get(dims[1], idx))) {\r\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\r\n      }\r\n    } // Use x, y if has any\r\n\r\n\r\n    if (!isNaN(xPx)) {\r\n      point[0] = xPx;\r\n    }\r\n\r\n    if (!isNaN(yPx)) {\r\n      point[1] = yPx;\r\n    }\r\n  }\r\n\r\n  data.setItemLayout(idx, point);\r\n}\r\n\r\nvar _default = MarkerView.extend({\r\n  type: 'markLine',\r\n  // updateLayout: function (markLineModel, ecModel, api) {\r\n  //     ecModel.eachSeries(function (seriesModel) {\r\n  //         var mlModel = seriesModel.markLineModel;\r\n  //         if (mlModel) {\r\n  //             var mlData = mlModel.getData();\r\n  //             var fromData = mlModel.__from;\r\n  //             var toData = mlModel.__to;\r\n  //             // Update visual and layout of from symbol and to symbol\r\n  //             fromData.each(function (idx) {\r\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\r\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\r\n  //             });\r\n  //             // Update layout of line\r\n  //             mlData.each(function (idx) {\r\n  //                 mlData.setItemLayout(idx, [\r\n  //                     fromData.getItemLayout(idx),\r\n  //                     toData.getItemLayout(idx)\r\n  //                 ]);\r\n  //             });\r\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\r\n  //         }\r\n  //     }, this);\r\n  // },\r\n  updateTransform: function (markLineModel, ecModel, api) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var mlModel = seriesModel.markLineModel;\r\n\r\n      if (mlModel) {\r\n        var mlData = mlModel.getData();\r\n        var fromData = mlModel.__from;\r\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\r\n\r\n        fromData.each(function (idx) {\r\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\r\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\r\n        }); // Update layout of line\r\n\r\n        mlData.each(function (idx) {\r\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\r\n        });\r\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\r\n      }\r\n    }, this);\r\n  },\r\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var seriesId = seriesModel.id;\r\n    var seriesData = seriesModel.getData();\r\n    var lineDrawMap = this.markerGroupMap;\r\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\r\n    this.group.add(lineDraw.group);\r\n    var mlData = createList(coordSys, seriesModel, mlModel);\r\n    var fromData = mlData.from;\r\n    var toData = mlData.to;\r\n    var lineData = mlData.line;\r\n    mlModel.__from = fromData;\r\n    mlModel.__to = toData; // Line data for tooltip and formatter\r\n\r\n    mlModel.setData(lineData);\r\n    var symbolType = mlModel.get('symbol');\r\n    var symbolSize = mlModel.get('symbolSize');\r\n\r\n    if (!zrUtil.isArray(symbolType)) {\r\n      symbolType = [symbolType, symbolType];\r\n    }\r\n\r\n    if (typeof symbolSize === 'number') {\r\n      symbolSize = [symbolSize, symbolSize];\r\n    } // Update visual and layout of from symbol and to symbol\r\n\r\n\r\n    mlData.from.each(function (idx) {\r\n      updateDataVisualAndLayout(fromData, idx, true);\r\n      updateDataVisualAndLayout(toData, idx, false);\r\n    }); // Update visual and layout of line\r\n\r\n    lineData.each(function (idx) {\r\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\r\n      lineData.setItemVisual(idx, {\r\n        color: lineColor || fromData.getItemVisual(idx, 'color')\r\n      });\r\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\r\n      lineData.setItemVisual(idx, {\r\n        'fromSymbolRotate': fromData.getItemVisual(idx, 'symbolRotate'),\r\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\r\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\r\n        'toSymbolRotate': toData.getItemVisual(idx, 'symbolRotate'),\r\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\r\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\r\n      });\r\n    });\r\n    lineDraw.updateData(lineData); // Set host model for tooltip\r\n    // FIXME\r\n\r\n    mlData.line.eachItemGraphicEl(function (el, idx) {\r\n      el.traverse(function (child) {\r\n        child.dataModel = mlModel;\r\n      });\r\n    });\r\n\r\n    function updateDataVisualAndLayout(data, idx, isFrom) {\r\n      var itemModel = data.getItemModel(idx);\r\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\r\n      data.setItemVisual(idx, {\r\n        symbolRotate: itemModel.get('symbolRotate'),\r\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\r\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\r\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\r\n      });\r\n    }\r\n\r\n    lineDraw.__keep = true;\r\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\r\n  }\r\n});\r\n/**\r\n * @inner\r\n * @param {module:echarts/coord/*} coordSys\r\n * @param {module:echarts/model/Series} seriesModel\r\n * @param {module:echarts/model/Model} mpModel\r\n */\r\n\r\n\r\nfunction createList(coordSys, seriesModel, mlModel) {\r\n  var coordDimsInfos;\r\n\r\n  if (coordSys) {\r\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\r\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\r\n\r\n      return zrUtil.defaults({\r\n        name: coordDim\r\n      }, info);\r\n    });\r\n  } else {\r\n    coordDimsInfos = [{\r\n      name: 'value',\r\n      type: 'float'\r\n    }];\r\n  }\r\n\r\n  var fromData = new List(coordDimsInfos, mlModel);\r\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\r\n\r\n  var lineData = new List([], mlModel);\r\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\r\n\r\n  if (coordSys) {\r\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\r\n  }\r\n\r\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\r\n    return item.value;\r\n  };\r\n  fromData.initData(zrUtil.map(optData, function (item) {\r\n    return item[0];\r\n  }), null, dimValueGetter);\r\n  toData.initData(zrUtil.map(optData, function (item) {\r\n    return item[1];\r\n  }), null, dimValueGetter);\r\n  lineData.initData(zrUtil.map(optData, function (item) {\r\n    return item[2];\r\n  }));\r\n  lineData.hasItemOption = true;\r\n  return {\r\n    from: fromData,\r\n    to: toData,\r\n    line: lineData\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar MarkerModel = require(\"./MarkerModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = MarkerModel.extend({\r\n  type: 'markPoint',\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 5,\r\n    symbol: 'pin',\r\n    symbolSize: 50,\r\n    //symbolRotate: 0,\r\n    //symbolOffset: [0, 0]\r\n    tooltip: {\r\n      trigger: 'item'\r\n    },\r\n    label: {\r\n      show: true,\r\n      position: 'inside'\r\n    },\r\n    itemStyle: {\r\n      borderWidth: 2\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar markerHelper = require(\"./markerHelper\");\r\n\r\nvar MarkerView = require(\"./MarkerView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction updateMarkerLayout(mpData, seriesModel, api) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n  mpData.each(function (idx) {\r\n    var itemModel = mpData.getItemModel(idx);\r\n    var point;\r\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\r\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\r\n\r\n    if (!isNaN(xPx) && !isNaN(yPx)) {\r\n      point = [xPx, yPx];\r\n    } // Chart like bar may have there own marker positioning logic\r\n    else if (seriesModel.getMarkerPosition) {\r\n        // Use the getMarkerPoisition\r\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\r\n      } else if (coordSys) {\r\n        var x = mpData.get(coordSys.dimensions[0], idx);\r\n        var y = mpData.get(coordSys.dimensions[1], idx);\r\n        point = coordSys.dataToPoint([x, y]);\r\n      } // Use x, y if has any\r\n\r\n\r\n    if (!isNaN(xPx)) {\r\n      point[0] = xPx;\r\n    }\r\n\r\n    if (!isNaN(yPx)) {\r\n      point[1] = yPx;\r\n    }\r\n\r\n    mpData.setItemLayout(idx, point);\r\n  });\r\n}\r\n\r\nvar _default = MarkerView.extend({\r\n  type: 'markPoint',\r\n  // updateLayout: function (markPointModel, ecModel, api) {\r\n  //     ecModel.eachSeries(function (seriesModel) {\r\n  //         var mpModel = seriesModel.markPointModel;\r\n  //         if (mpModel) {\r\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\r\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\r\n  //         }\r\n  //     }, this);\r\n  // },\r\n  updateTransform: function (markPointModel, ecModel, api) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var mpModel = seriesModel.markPointModel;\r\n\r\n      if (mpModel) {\r\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\r\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\r\n      }\r\n    }, this);\r\n  },\r\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var seriesId = seriesModel.id;\r\n    var seriesData = seriesModel.getData();\r\n    var symbolDrawMap = this.markerGroupMap;\r\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\r\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\r\n\r\n    mpModel.setData(mpData);\r\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\r\n    mpData.each(function (idx) {\r\n      var itemModel = mpData.getItemModel(idx);\r\n      var symbol = itemModel.getShallow('symbol');\r\n      var symbolSize = itemModel.getShallow('symbolSize');\r\n      var symbolRotate = itemModel.getShallow('symbolRotate');\r\n      var isFnSymbol = zrUtil.isFunction(symbol);\r\n      var isFnSymbolSize = zrUtil.isFunction(symbolSize);\r\n      var isFnSymbolRotate = zrUtil.isFunction(symbolRotate);\r\n\r\n      if (isFnSymbol || isFnSymbolSize || isFnSymbolRotate) {\r\n        var rawIdx = mpModel.getRawValue(idx);\r\n        var dataParams = mpModel.getDataParams(idx);\r\n\r\n        if (isFnSymbol) {\r\n          symbol = symbol(rawIdx, dataParams);\r\n        }\r\n\r\n        if (isFnSymbolSize) {\r\n          // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\r\n          symbolSize = symbolSize(rawIdx, dataParams);\r\n        }\r\n\r\n        if (isFnSymbolRotate) {\r\n          symbolRotate = symbolRotate(rawIdx, dataParams);\r\n        }\r\n      }\r\n\r\n      mpData.setItemVisual(idx, {\r\n        symbol: symbol,\r\n        symbolSize: symbolSize,\r\n        symbolRotate: symbolRotate,\r\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\r\n      });\r\n    }); // TODO Text are wrong\r\n\r\n    symbolDraw.updateData(mpData);\r\n    this.group.add(symbolDraw.group); // Set host model for tooltip\r\n    // FIXME\r\n\r\n    mpData.eachItemGraphicEl(function (el) {\r\n      el.traverse(function (child) {\r\n        child.dataModel = mpModel;\r\n      });\r\n    });\r\n    symbolDraw.__keep = true;\r\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\r\n  }\r\n});\r\n/**\r\n * @inner\r\n * @param {module:echarts/coord/*} [coordSys]\r\n * @param {module:echarts/model/Series} seriesModel\r\n * @param {module:echarts/model/Model} mpModel\r\n */\r\n\r\n\r\nfunction createList(coordSys, seriesModel, mpModel) {\r\n  var coordDimsInfos;\r\n\r\n  if (coordSys) {\r\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\r\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\r\n\r\n      return zrUtil.defaults({\r\n        name: coordDim\r\n      }, info);\r\n    });\r\n  } else {\r\n    coordDimsInfos = [{\r\n      name: 'value',\r\n      type: 'float'\r\n    }];\r\n  }\r\n\r\n  var mpData = new List(coordDimsInfos, mpModel);\r\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\r\n\r\n  if (coordSys) {\r\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\r\n  }\r\n\r\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\r\n    return item.value;\r\n  });\r\n  return mpData;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar addCommas = formatUtil.addCommas;\r\nvar encodeHTML = formatUtil.encodeHTML;\r\n\r\nfunction fillLabel(opt) {\r\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\r\n}\r\n\r\nvar MarkerModel = echarts.extendComponentModel({\r\n  type: 'marker',\r\n  dependencies: ['series', 'grid', 'polar', 'geo'],\r\n\r\n  /**\r\n   * @overrite\r\n   */\r\n  init: function (option, parentModel, ecModel) {\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n    this._mergeOption(option, ecModel, false, true);\r\n  },\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  isAnimationEnabled: function () {\r\n    if (env.node) {\r\n      return false;\r\n    }\r\n\r\n    var hostSeries = this.__hostSeries;\r\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\r\n  },\r\n\r\n  /**\r\n   * @overrite\r\n   */\r\n  mergeOption: function (newOpt, ecModel) {\r\n    this._mergeOption(newOpt, ecModel, false, false);\r\n  },\r\n  _mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\r\n    var MarkerModel = this.constructor;\r\n    var modelPropName = this.mainType + 'Model';\r\n\r\n    if (!createdBySelf) {\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        var markerOpt = seriesModel.get(this.mainType, true);\r\n        var markerModel = seriesModel[modelPropName];\r\n\r\n        if (!markerOpt || !markerOpt.data) {\r\n          seriesModel[modelPropName] = null;\r\n          return;\r\n        }\r\n\r\n        if (!markerModel) {\r\n          if (isInit) {\r\n            // Default label emphasis `position` and `show`\r\n            fillLabel(markerOpt);\r\n          }\r\n\r\n          zrUtil.each(markerOpt.data, function (item) {\r\n            // FIXME Overwrite fillLabel method ?\r\n            if (item instanceof Array) {\r\n              fillLabel(item[0]);\r\n              fillLabel(item[1]);\r\n            } else {\r\n              fillLabel(item);\r\n            }\r\n          });\r\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\r\n          zrUtil.extend(markerModel, {\r\n            mainType: this.mainType,\r\n            // Use the same series index and name\r\n            seriesIndex: seriesModel.seriesIndex,\r\n            name: seriesModel.name,\r\n            createdBySelf: true\r\n          });\r\n          markerModel.__hostSeries = seriesModel;\r\n        } else {\r\n          markerModel._mergeOption(markerOpt, ecModel, true);\r\n        }\r\n\r\n        seriesModel[modelPropName] = markerModel;\r\n      }, this);\r\n    }\r\n  },\r\n  formatTooltip: function (dataIndex, multipleSeries, dataType, renderMode) {\r\n    var data = this.getData();\r\n    var value = this.getRawValue(dataIndex);\r\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\r\n    var name = data.getName(dataIndex);\r\n    var html = encodeHTML(this.name);\r\n    var newLine = renderMode === 'html' ? '<br/>' : '\\n';\r\n\r\n    if (value != null || name) {\r\n      html += newLine;\r\n    }\r\n\r\n    if (name) {\r\n      html += encodeHTML(name);\r\n\r\n      if (value != null) {\r\n        html += ' : ';\r\n      }\r\n    }\r\n\r\n    if (value != null) {\r\n      html += encodeHTML(formattedValue);\r\n    }\r\n\r\n    return html;\r\n  },\r\n  getData: function () {\r\n    return this._data;\r\n  },\r\n  setData: function (data) {\r\n    this._data = data;\r\n  }\r\n});\r\nzrUtil.mixin(MarkerModel, dataFormatMixin);\r\nvar _default = MarkerModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendComponentView({\r\n  type: 'marker',\r\n  init: function () {\r\n    /**\r\n     * Markline grouped by series\r\n     * @private\r\n     * @type {module:zrender/core/util.HashMap}\r\n     */\r\n    this.markerGroupMap = zrUtil.createHashMap();\r\n  },\r\n  render: function (markerModel, ecModel, api) {\r\n    var markerGroupMap = this.markerGroupMap;\r\n    markerGroupMap.each(function (item) {\r\n      item.__keep = false;\r\n    });\r\n    var markerModelKey = this.type + 'Model';\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var markerModel = seriesModel[markerModelKey];\r\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\r\n    }, this);\r\n    markerGroupMap.each(function (item) {\r\n      !item.__keep && this.group.remove(item.group);\r\n    }, this);\r\n  },\r\n  renderSeries: function () {}\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\r\n\r\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar indexOf = zrUtil.indexOf;\r\n\r\nfunction hasXOrY(item) {\r\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\r\n}\r\n\r\nfunction hasXAndY(item) {\r\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\r\n} // Make it simple, do not visit all stacked value to count precision.\r\n// function getPrecision(data, valueAxisDim, dataIndex) {\r\n//     var precision = -1;\r\n//     var stackedDim = data.mapDimension(valueAxisDim);\r\n//     do {\r\n//         precision = Math.max(\r\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\r\n//             precision\r\n//         );\r\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\r\n//         if (stackedOnSeries) {\r\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\r\n//             data = stackedOnSeries.getData();\r\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\r\n//             stackedDim = data.getCalculationInfo('stackedDimension');\r\n//         }\r\n//         else {\r\n//             data = null;\r\n//         }\r\n//     } while (data);\r\n//     return precision;\r\n// }\r\n\r\n\r\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\r\n  var coordArr = [];\r\n  var stacked = isDimensionStacked(data, targetDataDim\r\n  /*, otherDataDim*/\r\n  );\r\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\r\n  var value = numCalculate(data, calcDataDim, mlType);\r\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\r\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\r\n  coordArr[targetCoordIndex] = data.get(calcDataDim, dataIndex);\r\n  var coordArrValue = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\r\n\r\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\r\n  precision = Math.min(precision, 20);\r\n\r\n  if (precision >= 0) {\r\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\r\n  }\r\n\r\n  return [coordArr, coordArrValue];\r\n}\r\n\r\nvar curry = zrUtil.curry; // TODO Specified percent\r\n\r\nvar markerTypeCalculator = {\r\n  /**\r\n   * @method\r\n   * @param {module:echarts/data/List} data\r\n   * @param {string} baseAxisDim\r\n   * @param {string} valueAxisDim\r\n   */\r\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\r\n\r\n  /**\r\n   * @method\r\n   * @param {module:echarts/data/List} data\r\n   * @param {string} baseAxisDim\r\n   * @param {string} valueAxisDim\r\n   */\r\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\r\n\r\n  /**\r\n   * @method\r\n   * @param {module:echarts/data/List} data\r\n   * @param {string} baseAxisDim\r\n   * @param {string} valueAxisDim\r\n   */\r\n  average: curry(markerTypeCalculatorWithExtent, 'average')\r\n};\r\n/**\r\n * Transform markPoint data item to format used in List by do the following\r\n * 1. Calculate statistic like `max`, `min`, `average`\r\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\r\n * @param  {module:echarts/model/Series} seriesModel\r\n * @param  {module:echarts/coord/*} [coordSys]\r\n * @param  {Object} item\r\n * @return {Object}\r\n */\r\n\r\nfunction dataTransform(seriesModel, item) {\r\n  var data = seriesModel.getData();\r\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\r\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\r\n  // `yAxis` to specify the coord on each dimension\r\n  // parseFloat first because item.x and item.y can be percent string like '20%'\r\n\r\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\r\n    var dims = coordSys.dimensions;\r\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\r\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\r\n\r\n    item = zrUtil.clone(item);\r\n\r\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\r\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\r\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\r\n      var coordInfo = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex);\r\n      item.coord = coordInfo[0]; // Force to use the value of calculated value.\r\n      // let item use the value without stack.\r\n\r\n      item.value = coordInfo[1];\r\n    } else {\r\n      // FIXME Only has one of xAxis and yAxis.\r\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\r\n\r\n      for (var i = 0; i < 2; i++) {\r\n        if (markerTypeCalculator[coord[i]]) {\r\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\r\n        }\r\n      }\r\n\r\n      item.coord = coord;\r\n    }\r\n  }\r\n\r\n  return item;\r\n}\r\n\r\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\r\n  var ret = {};\r\n\r\n  if (item.valueIndex != null || item.valueDim != null) {\r\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\r\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\r\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\r\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\r\n  } else {\r\n    ret.baseAxis = seriesModel.getBaseAxis();\r\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\r\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\r\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction dataDimToCoordDim(seriesModel, dataDim) {\r\n  var data = seriesModel.getData();\r\n  var dimensions = data.dimensions;\r\n  dataDim = data.getDimension(dataDim);\r\n\r\n  for (var i = 0; i < dimensions.length; i++) {\r\n    var dimItem = data.getDimensionInfo(dimensions[i]);\r\n\r\n    if (dimItem.name === dataDim) {\r\n      return dimItem.coordDim;\r\n    }\r\n  }\r\n}\r\n/**\r\n * Filter data which is out of coordinateSystem range\r\n * [dataFilter description]\r\n * @param  {module:echarts/coord/*} [coordSys]\r\n * @param  {Object} item\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction dataFilter(coordSys, item) {\r\n  // Alwalys return true if there is no coordSys\r\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\r\n}\r\n\r\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\r\n  // x, y, radius, angle\r\n  if (dimIndex < 2) {\r\n    return item.coord && item.coord[dimIndex];\r\n  }\r\n\r\n  return item.value;\r\n}\r\n\r\nfunction numCalculate(data, valueDataDim, type) {\r\n  if (type === 'average') {\r\n    var sum = 0;\r\n    var count = 0;\r\n    data.each(valueDataDim, function (val, idx) {\r\n      if (!isNaN(val)) {\r\n        sum += val;\r\n        count++;\r\n      }\r\n    });\r\n    return sum / count;\r\n  } else if (type === 'median') {\r\n    return data.getMedian(valueDataDim);\r\n  } else {\r\n    // max & min\r\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\r\n  }\r\n}\r\n\r\nexports.dataTransform = dataTransform;\r\nexports.getAxisInfo = getAxisInfo;\r\nexports.dataFilter = dataFilter;\r\nexports.dimValueGetter = dimValueGetter;\r\nexports.numCalculate = numCalculate;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar throttleUtil = require(\"../util/throttle\");\r\n\r\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\r\n\r\nrequire(\"../coord/parallel/parallelCreator\");\r\n\r\nrequire(\"../coord/parallel/ParallelModel\");\r\n\r\nrequire(\"./parallelAxis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar CLICK_THRESHOLD = 5; // > 4\r\n// Parallel view\r\n\r\necharts.extendComponentView({\r\n  type: 'parallel',\r\n  render: function (parallelModel, ecModel, api) {\r\n    this._model = parallelModel;\r\n    this._api = api;\r\n\r\n    if (!this._handlers) {\r\n      this._handlers = {};\r\n      zrUtil.each(handlers, function (handler, eventName) {\r\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\r\n      }, this);\r\n    }\r\n\r\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\r\n  },\r\n  dispose: function (ecModel, api) {\r\n    zrUtil.each(this._handlers, function (handler, eventName) {\r\n      api.getZr().off(eventName, handler);\r\n    });\r\n    this._handlers = null;\r\n  },\r\n\r\n  /**\r\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\r\n   */\r\n  _throttledDispatchExpand: function (opt) {\r\n    this._dispatchExpand(opt);\r\n  },\r\n  _dispatchExpand: function (opt) {\r\n    opt && this._api.dispatchAction(zrUtil.extend({\r\n      type: 'parallelAxisExpand'\r\n    }, opt));\r\n  }\r\n});\r\nvar handlers = {\r\n  mousedown: function (e) {\r\n    if (checkTrigger(this, 'click')) {\r\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\r\n    }\r\n  },\r\n  mouseup: function (e) {\r\n    var mouseDownPoint = this._mouseDownPoint;\r\n\r\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\r\n      var point = [e.offsetX, e.offsetY];\r\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\r\n\r\n      if (dist > CLICK_THRESHOLD) {\r\n        return;\r\n      }\r\n\r\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\r\n\r\n      result.behavior !== 'none' && this._dispatchExpand({\r\n        axisExpandWindow: result.axisExpandWindow\r\n      });\r\n    }\r\n\r\n    this._mouseDownPoint = null;\r\n  },\r\n  mousemove: function (e) {\r\n    // Should do nothing when brushing.\r\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\r\n      return;\r\n    }\r\n\r\n    var model = this._model;\r\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\r\n    var behavior = result.behavior;\r\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\r\n\r\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\r\n    : {\r\n      axisExpandWindow: result.axisExpandWindow,\r\n      // Jumping uses animation, and sliding suppresses animation.\r\n      animation: behavior === 'jump' ? null : false\r\n    });\r\n  }\r\n};\r\n\r\nfunction checkTrigger(view, triggerOn) {\r\n  var model = view._model;\r\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\r\n}\r\n\r\necharts.registerPreprocessor(parallelPreprocessor);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"../coord/parallel/parallelCreator\");\r\n\r\nrequire(\"./axis/parallelAxisAction\");\r\n\r\nrequire(\"./axis/ParallelAxisView\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar barPolar = require(\"../layout/barPolar\");\r\n\r\nrequire(\"../coord/polar/polarCreator\");\r\n\r\nrequire(\"./angleAxis\");\r\n\r\nrequire(\"./radiusAxis\");\r\n\r\nrequire(\"./axisPointer\");\r\n\r\nrequire(\"./axisPointer/PolarAxisPointer\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\r\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\r\n\r\necharts.extendComponentView({\r\n  type: 'polar'\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"../coord/radar/Radar\");\r\n\r\nrequire(\"../coord/radar/RadarModel\");\r\n\r\nrequire(\"./radar/RadarView\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\r\n\r\nvar _default = echarts.extendComponentView({\r\n  type: 'radar',\r\n  render: function (radarModel, ecModel, api) {\r\n    var group = this.group;\r\n    group.removeAll();\r\n\r\n    this._buildAxes(radarModel);\r\n\r\n    this._buildSplitLineAndArea(radarModel);\r\n  },\r\n  _buildAxes: function (radarModel) {\r\n    var radar = radarModel.coordinateSystem;\r\n    var indicatorAxes = radar.getIndicatorAxes();\r\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\r\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\r\n        position: [radar.cx, radar.cy],\r\n        rotation: indicatorAxis.angle,\r\n        labelDirection: -1,\r\n        tickDirection: -1,\r\n        nameDirection: 1\r\n      });\r\n      return axisBuilder;\r\n    });\r\n    zrUtil.each(axisBuilders, function (axisBuilder) {\r\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n      this.group.add(axisBuilder.getGroup());\r\n    }, this);\r\n  },\r\n  _buildSplitLineAndArea: function (radarModel) {\r\n    var radar = radarModel.coordinateSystem;\r\n    var indicatorAxes = radar.getIndicatorAxes();\r\n\r\n    if (!indicatorAxes.length) {\r\n      return;\r\n    }\r\n\r\n    var shape = radarModel.get('shape');\r\n    var splitLineModel = radarModel.getModel('splitLine');\r\n    var splitAreaModel = radarModel.getModel('splitArea');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n    var showSplitLine = splitLineModel.get('show');\r\n    var showSplitArea = splitAreaModel.get('show');\r\n    var splitLineColors = lineStyleModel.get('color');\r\n    var splitAreaColors = areaStyleModel.get('color');\r\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\r\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\r\n    var splitLines = [];\r\n    var splitAreas = [];\r\n\r\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\r\n      var colorIndex = idx % areaOrLineColorList.length;\r\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\r\n      return colorIndex;\r\n    }\r\n\r\n    if (shape === 'circle') {\r\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\r\n      var cx = radar.cx;\r\n      var cy = radar.cy;\r\n\r\n      for (var i = 0; i < ticksRadius.length; i++) {\r\n        if (showSplitLine) {\r\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\r\n          splitLines[colorIndex].push(new graphic.Circle({\r\n            shape: {\r\n              cx: cx,\r\n              cy: cy,\r\n              r: ticksRadius[i].coord\r\n            }\r\n          }));\r\n        }\r\n\r\n        if (showSplitArea && i < ticksRadius.length - 1) {\r\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\r\n          splitAreas[colorIndex].push(new graphic.Ring({\r\n            shape: {\r\n              cx: cx,\r\n              cy: cy,\r\n              r0: ticksRadius[i].coord,\r\n              r: ticksRadius[i + 1].coord\r\n            }\r\n          }));\r\n        }\r\n      }\r\n    } // Polyyon\r\n    else {\r\n        var realSplitNumber;\r\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\r\n          var ticksCoords = indicatorAxis.getTicksCoords();\r\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\r\n          return zrUtil.map(ticksCoords, function (tickCoord) {\r\n            return radar.coordToPoint(tickCoord.coord, idx);\r\n          });\r\n        });\r\n        var prevPoints = [];\r\n\r\n        for (var i = 0; i <= realSplitNumber; i++) {\r\n          var points = [];\r\n\r\n          for (var j = 0; j < indicatorAxes.length; j++) {\r\n            points.push(axesTicksPoints[j][i]);\r\n          } // Close\r\n\r\n\r\n          if (points[0]) {\r\n            points.push(points[0].slice());\r\n          } else {}\r\n\r\n          if (showSplitLine) {\r\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\r\n            splitLines[colorIndex].push(new graphic.Polyline({\r\n              shape: {\r\n                points: points\r\n              }\r\n            }));\r\n          }\r\n\r\n          if (showSplitArea && prevPoints) {\r\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\r\n            splitAreas[colorIndex].push(new graphic.Polygon({\r\n              shape: {\r\n                points: points.concat(prevPoints)\r\n              }\r\n            }));\r\n          }\r\n\r\n          prevPoints = points.slice().reverse();\r\n        }\r\n      }\r\n\r\n    var lineStyle = lineStyleModel.getLineStyle();\r\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\r\n\r\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\r\n      this.group.add(graphic.mergePath(splitAreas, {\r\n        style: zrUtil.defaults({\r\n          stroke: 'none',\r\n          fill: splitAreaColors[idx % splitAreaColors.length]\r\n        }, areaStyle),\r\n        silent: true\r\n      }));\r\n    }, this);\r\n    zrUtil.each(splitLines, function (splitLines, idx) {\r\n      this.group.add(graphic.mergePath(splitLines, {\r\n        style: zrUtil.defaults({\r\n          fill: 'none',\r\n          stroke: splitLineColors[idx % splitLineColors.length]\r\n        }, lineStyle),\r\n        silent: true\r\n      }));\r\n    }, this);\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"../coord/polar/polarCreator\");\r\n\r\nrequire(\"./axis/RadiusAxisView\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"../coord/single/singleCreator\");\r\n\r\nrequire(\"./axis/SingleAxisView\");\r\n\r\nrequire(\"../coord/single/AxisModel\");\r\n\r\nrequire(\"./axisPointer\");\r\n\r\nrequire(\"./axisPointer/SingleAxisPointer\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.extendComponentView({\r\n  type: 'single'\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar preprocessor = require(\"./timeline/preprocessor\");\r\n\r\nrequire(\"./timeline/typeDefaulter\");\r\n\r\nrequire(\"./timeline/timelineAction\");\r\n\r\nrequire(\"./timeline/SliderTimelineModel\");\r\n\r\nrequire(\"./timeline/SliderTimelineView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * DataZoom component entry\r\n */\r\necharts.registerPreprocessor(preprocessor);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar TimelineModel = require(\"./TimelineModel\");\r\n\r\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar SliderTimelineModel = TimelineModel.extend({\r\n  type: 'timeline.slider',\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    // 时间轴背景颜色\r\n    borderColor: '#ccc',\r\n    // 时间轴边框颜色\r\n    borderWidth: 0,\r\n    // 时间轴边框线宽，单位px，默认为0（无边框）\r\n    orient: 'horizontal',\r\n    // 'vertical'\r\n    inverse: false,\r\n    tooltip: {\r\n      // boolean or Object\r\n      trigger: 'item' // data item may also have tootip attr.\r\n\r\n    },\r\n    symbol: 'emptyCircle',\r\n    symbolSize: 10,\r\n    lineStyle: {\r\n      show: true,\r\n      width: 2,\r\n      color: '#304654'\r\n    },\r\n    label: {\r\n      // 文本标签\r\n      position: 'auto',\r\n      // auto left right top bottom\r\n      // When using number, label position is not\r\n      // restricted by viewRect.\r\n      // positive: right/bottom, negative: left/top\r\n      show: true,\r\n      interval: 'auto',\r\n      rotate: 0,\r\n      // formatter: null,\r\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n      color: '#304654'\r\n    },\r\n    itemStyle: {\r\n      color: '#304654',\r\n      borderWidth: 1\r\n    },\r\n    checkpointStyle: {\r\n      symbol: 'circle',\r\n      symbolSize: 13,\r\n      color: '#c23531',\r\n      borderWidth: 5,\r\n      borderColor: 'rgba(194,53,49, 0.5)',\r\n      animation: true,\r\n      animationDuration: 300,\r\n      animationEasing: 'quinticInOut'\r\n    },\r\n    controlStyle: {\r\n      show: true,\r\n      showPlayBtn: true,\r\n      showPrevBtn: true,\r\n      showNextBtn: true,\r\n      itemSize: 22,\r\n      itemGap: 12,\r\n      position: 'left',\r\n      // 'left' 'right' 'top' 'bottom'\r\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\r\n      // jshint ignore:line\r\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\r\n      // jshint ignore:line\r\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\r\n      // jshint ignore:line\r\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\r\n      // jshint ignore:line\r\n      color: '#304654',\r\n      borderColor: '#304654',\r\n      borderWidth: 1\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n        color: '#c23531'\r\n      },\r\n      itemStyle: {\r\n        color: '#c23531'\r\n      },\r\n      controlStyle: {\r\n        color: '#c23531',\r\n        borderColor: '#c23531',\r\n        borderWidth: 2\r\n      }\r\n    },\r\n    data: []\r\n  }\r\n});\r\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\r\nvar _default = SliderTimelineModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar TimelineView = require(\"./TimelineView\");\r\n\r\nvar TimelineAxis = require(\"./TimelineAxis\");\r\n\r\nvar _symbol = require(\"../../util/symbol\");\r\n\r\nvar createSymbol = _symbol.createSymbol;\r\n\r\nvar axisHelper = require(\"../../coord/axisHelper\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar bind = zrUtil.bind;\r\nvar each = zrUtil.each;\r\nvar PI = Math.PI;\r\n\r\nvar _default = TimelineView.extend({\r\n  type: 'timeline.slider',\r\n  init: function (ecModel, api) {\r\n    this.api = api;\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/component/timeline/TimelineAxis}\r\n     */\r\n\r\n    this._axis;\r\n    /**\r\n     * @private\r\n     * @type {module:zrender/core/BoundingRect}\r\n     */\r\n\r\n    this._viewRect;\r\n    /**\r\n     * @type {number}\r\n     */\r\n\r\n    this._timer;\r\n    /**\r\n     * @type {module:zrender/Element}\r\n     */\r\n\r\n    this._currentPointer;\r\n    /**\r\n     * @type {module:zrender/container/Group}\r\n     */\r\n\r\n    this._mainGroup;\r\n    /**\r\n     * @type {module:zrender/container/Group}\r\n     */\r\n\r\n    this._labelGroup;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  render: function (timelineModel, ecModel, api, payload) {\r\n    this.model = timelineModel;\r\n    this.api = api;\r\n    this.ecModel = ecModel;\r\n    this.group.removeAll();\r\n\r\n    if (timelineModel.get('show', true)) {\r\n      var layoutInfo = this._layout(timelineModel, api);\r\n\r\n      var mainGroup = this._createGroup('mainGroup');\r\n\r\n      var labelGroup = this._createGroup('labelGroup');\r\n      /**\r\n       * @private\r\n       * @type {module:echarts/component/timeline/TimelineAxis}\r\n       */\r\n\r\n\r\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\r\n\r\n      timelineModel.formatTooltip = function (dataIndex) {\r\n        return encodeHTML(axis.scale.getLabel(dataIndex));\r\n      };\r\n\r\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\r\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\r\n      }, this);\r\n\r\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\r\n\r\n      this._position(layoutInfo, timelineModel);\r\n    }\r\n\r\n    this._doPlayStop();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  remove: function () {\r\n    this._clearTimer();\r\n\r\n    this.group.removeAll();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: function () {\r\n    this._clearTimer();\r\n  },\r\n  _layout: function (timelineModel, api) {\r\n    var labelPosOpt = timelineModel.get('label.position');\r\n    var orient = timelineModel.get('orient');\r\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\r\n\r\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\r\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\r\n    } else if (isNaN(labelPosOpt)) {\r\n      labelPosOpt = {\r\n        horizontal: {\r\n          top: '-',\r\n          bottom: '+'\r\n        },\r\n        vertical: {\r\n          left: '-',\r\n          right: '+'\r\n        }\r\n      }[orient][labelPosOpt];\r\n    }\r\n\r\n    var labelAlignMap = {\r\n      horizontal: 'center',\r\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\r\n    };\r\n    var labelBaselineMap = {\r\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\r\n      vertical: 'middle'\r\n    };\r\n    var rotationMap = {\r\n      horizontal: 0,\r\n      vertical: PI / 2\r\n    }; // Position\r\n\r\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\r\n    var controlModel = timelineModel.getModel('controlStyle');\r\n    var showControl = controlModel.get('show', true);\r\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\r\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\r\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\r\n\r\n    var labelRotation = timelineModel.get('label.rotate') || 0;\r\n    labelRotation = labelRotation * PI / 180; // To radian.\r\n\r\n    var playPosition;\r\n    var prevBtnPosition;\r\n    var nextBtnPosition;\r\n    var axisExtent;\r\n    var controlPosition = controlModel.get('position', true);\r\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\r\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\r\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\r\n    var xLeft = 0;\r\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\r\n\r\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\r\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\r\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\r\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\r\n    } else {\r\n      // 'top' 'right'\r\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\r\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\r\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\r\n    }\r\n\r\n    axisExtent = [xLeft, xRight];\r\n\r\n    if (timelineModel.get('inverse')) {\r\n      axisExtent.reverse();\r\n    }\r\n\r\n    return {\r\n      viewRect: viewRect,\r\n      mainLength: mainLength,\r\n      orient: orient,\r\n      rotation: rotationMap[orient],\r\n      labelRotation: labelRotation,\r\n      labelPosOpt: labelPosOpt,\r\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\r\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\r\n      // Based on mainGroup.\r\n      playPosition: playPosition,\r\n      prevBtnPosition: prevBtnPosition,\r\n      nextBtnPosition: nextBtnPosition,\r\n      axisExtent: axisExtent,\r\n      controlSize: controlSize,\r\n      controlGap: controlGap\r\n    };\r\n  },\r\n  _position: function (layoutInfo, timelineModel) {\r\n    // Position is be called finally, because bounding rect is needed for\r\n    // adapt content to fill viewRect (auto adapt offset).\r\n    // Timeline may be not all in the viewRect when 'offset' is specified\r\n    // as a number, because it is more appropriate that label aligns at\r\n    // 'offset' but not the other edge defined by viewRect.\r\n    var mainGroup = this._mainGroup;\r\n    var labelGroup = this._labelGroup;\r\n    var viewRect = layoutInfo.viewRect;\r\n\r\n    if (layoutInfo.orient === 'vertical') {\r\n      // transform to horizontal, inverse rotate by left-top point.\r\n      var m = matrix.create();\r\n      var rotateOriginX = viewRect.x;\r\n      var rotateOriginY = viewRect.y + viewRect.height;\r\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\r\n      matrix.rotate(m, m, -PI / 2);\r\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\r\n      viewRect = viewRect.clone();\r\n      viewRect.applyTransform(m);\r\n    }\r\n\r\n    var viewBound = getBound(viewRect);\r\n    var mainBound = getBound(mainGroup.getBoundingRect());\r\n    var labelBound = getBound(labelGroup.getBoundingRect());\r\n    var mainPosition = mainGroup.position;\r\n    var labelsPosition = labelGroup.position;\r\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\r\n    var labelPosOpt = layoutInfo.labelPosOpt;\r\n\r\n    if (isNaN(labelPosOpt)) {\r\n      // '+' or '-'\r\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\r\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\r\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\r\n    } else {\r\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\r\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\r\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\r\n    }\r\n\r\n    mainGroup.attr('position', mainPosition);\r\n    labelGroup.attr('position', labelsPosition);\r\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\r\n    setOrigin(mainGroup);\r\n    setOrigin(labelGroup);\r\n\r\n    function setOrigin(targetGroup) {\r\n      var pos = targetGroup.position;\r\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\r\n    }\r\n\r\n    function getBound(rect) {\r\n      // [[xmin, xmax], [ymin, ymax]]\r\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\r\n    }\r\n\r\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\r\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\r\n    }\r\n  },\r\n  _createAxis: function (layoutInfo, timelineModel) {\r\n    var data = timelineModel.getData();\r\n    var axisType = timelineModel.get('axisType');\r\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\r\n\r\n    scale.getTicks = function () {\r\n      return data.mapArray(['value'], function (value) {\r\n        return value;\r\n      });\r\n    };\r\n\r\n    var dataExtent = data.getDataExtent('value');\r\n    scale.setExtent(dataExtent[0], dataExtent[1]);\r\n    scale.niceTicks();\r\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\r\n    axis.model = timelineModel;\r\n    return axis;\r\n  },\r\n  _createGroup: function (name) {\r\n    var newGroup = this['_' + name] = new graphic.Group();\r\n    this.group.add(newGroup);\r\n    return newGroup;\r\n  },\r\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\r\n    var axisExtent = axis.getExtent();\r\n\r\n    if (!timelineModel.get('lineStyle.show')) {\r\n      return;\r\n    }\r\n\r\n    group.add(new graphic.Line({\r\n      shape: {\r\n        x1: axisExtent[0],\r\n        y1: 0,\r\n        x2: axisExtent[1],\r\n        y2: 0\r\n      },\r\n      style: zrUtil.extend({\r\n        lineCap: 'round'\r\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\r\n      silent: true,\r\n      z2: 1\r\n    }));\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\r\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\r\n\r\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\r\n\r\n    each(ticks, function (value) {\r\n      var tickCoord = axis.dataToCoord(value);\r\n      var itemModel = data.getItemModel(value);\r\n      var itemStyleModel = itemModel.getModel('itemStyle');\r\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\r\n      var symbolOpt = {\r\n        position: [tickCoord, 0],\r\n        onclick: bind(this._changeTimeline, this, value)\r\n      };\r\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\r\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\r\n\r\n      if (itemModel.get('tooltip')) {\r\n        el.dataIndex = value;\r\n        el.dataModel = timelineModel;\r\n      } else {\r\n        el.dataIndex = el.dataModel = null;\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\r\n    var labelModel = axis.getLabelModel();\r\n\r\n    if (!labelModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var data = timelineModel.getData();\r\n    var labels = axis.getViewLabels();\r\n    each(labels, function (labelItem) {\r\n      // The tickValue is dataIndex, see the costomized scale.\r\n      var dataIndex = labelItem.tickValue;\r\n      var itemModel = data.getItemModel(dataIndex);\r\n      var normalLabelModel = itemModel.getModel('label');\r\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\r\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\r\n      var textEl = new graphic.Text({\r\n        position: [tickCoord, 0],\r\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\r\n        onclick: bind(this._changeTimeline, this, dataIndex),\r\n        silent: false\r\n      });\r\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\r\n        text: labelItem.formattedLabel,\r\n        textAlign: layoutInfo.labelAlign,\r\n        textVerticalAlign: layoutInfo.labelBaseline\r\n      });\r\n      group.add(textEl);\r\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\r\n    var controlSize = layoutInfo.controlSize;\r\n    var rotation = layoutInfo.rotation;\r\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\r\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\r\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\r\n    var playState = timelineModel.getPlayState();\r\n    var inverse = timelineModel.get('inverse', true);\r\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\r\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\r\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\r\n\r\n    function makeBtn(position, iconPath, onclick, willRotate) {\r\n      if (!position) {\r\n        return;\r\n      }\r\n\r\n      var opt = {\r\n        position: position,\r\n        origin: [controlSize / 2, 0],\r\n        rotation: willRotate ? -rotation : 0,\r\n        rectHover: true,\r\n        style: itemStyle,\r\n        onclick: onclick\r\n      };\r\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\r\n      group.add(btn);\r\n      graphic.setHoverStyle(btn, hoverStyle);\r\n    }\r\n  },\r\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\r\n    var data = timelineModel.getData();\r\n    var currentIndex = timelineModel.getCurrentIndex();\r\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\r\n    var me = this;\r\n    var callback = {\r\n      onCreate: function (pointer) {\r\n        pointer.draggable = true;\r\n        pointer.drift = bind(me._handlePointerDrag, me);\r\n        pointer.ondragend = bind(me._handlePointerDragend, me);\r\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\r\n      },\r\n      onUpdate: function (pointer) {\r\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\r\n      }\r\n    }; // Reuse when exists, for animation and drag.\r\n\r\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\r\n  },\r\n  _handlePlayClick: function (nextState) {\r\n    this._clearTimer();\r\n\r\n    this.api.dispatchAction({\r\n      type: 'timelinePlayChange',\r\n      playState: nextState,\r\n      from: this.uid\r\n    });\r\n  },\r\n  _handlePointerDrag: function (dx, dy, e) {\r\n    this._clearTimer();\r\n\r\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\r\n  },\r\n  _handlePointerDragend: function (e) {\r\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\r\n  },\r\n  _pointerChangeTimeline: function (mousePos, trigger) {\r\n    var toCoord = this._toAxisCoord(mousePos)[0];\r\n\r\n    var axis = this._axis;\r\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\r\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\r\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\r\n    this._currentPointer.position[0] = toCoord;\r\n\r\n    this._currentPointer.dirty();\r\n\r\n    var targetDataIndex = this._findNearestTick(toCoord);\r\n\r\n    var timelineModel = this.model;\r\n\r\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\r\n      this._changeTimeline(targetDataIndex);\r\n    }\r\n  },\r\n  _doPlayStop: function () {\r\n    this._clearTimer();\r\n\r\n    if (this.model.getPlayState()) {\r\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\r\n    }\r\n\r\n    function handleFrame() {\r\n      // Do not cache\r\n      var timelineModel = this.model;\r\n\r\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\r\n    }\r\n  },\r\n  _toAxisCoord: function (vertex) {\r\n    var trans = this._mainGroup.getLocalTransform();\r\n\r\n    return graphic.applyTransform(vertex, trans, true);\r\n  },\r\n  _findNearestTick: function (axisCoord) {\r\n    var data = this.model.getData();\r\n    var dist = Infinity;\r\n    var targetDataIndex;\r\n    var axis = this._axis;\r\n    data.each(['value'], function (value, dataIndex) {\r\n      var coord = axis.dataToCoord(value);\r\n      var d = Math.abs(coord - axisCoord);\r\n\r\n      if (d < dist) {\r\n        dist = d;\r\n        targetDataIndex = dataIndex;\r\n      }\r\n    });\r\n    return targetDataIndex;\r\n  },\r\n  _clearTimer: function () {\r\n    if (this._timer) {\r\n      clearTimeout(this._timer);\r\n      this._timer = null;\r\n    }\r\n  },\r\n  _changeTimeline: function (nextIndex) {\r\n    var currentIndex = this.model.getCurrentIndex();\r\n\r\n    if (nextIndex === '+') {\r\n      nextIndex = currentIndex + 1;\r\n    } else if (nextIndex === '-') {\r\n      nextIndex = currentIndex - 1;\r\n    }\r\n\r\n    this.api.dispatchAction({\r\n      type: 'timelineChange',\r\n      currentIndex: nextIndex,\r\n      from: this.uid\r\n    });\r\n  }\r\n});\r\n\r\nfunction getViewRect(model, api) {\r\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  }, model.get('padding'));\r\n}\r\n\r\nfunction makeIcon(timelineModel, objPath, rect, opts) {\r\n  var style = opts.style;\r\n  var icon = graphic.createIcon(timelineModel.get(objPath), opts || {}, new BoundingRect(rect[0], rect[1], rect[2], rect[3])); // TODO createIcon won't use style in opt.\r\n\r\n  if (style) {\r\n    icon.setStyle(style);\r\n  }\r\n\r\n  return icon;\r\n}\r\n/**\r\n * Create symbol or update symbol\r\n * opt: basic position and event handlers\r\n */\r\n\r\n\r\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\r\n  var color = itemStyleModel.get('color');\r\n\r\n  if (!symbol) {\r\n    var symbolType = hostModel.get('symbol');\r\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\r\n    symbol.setStyle('strokeNoScale', true);\r\n    group.add(symbol);\r\n    callback && callback.onCreate(symbol);\r\n  } else {\r\n    symbol.setColor(color);\r\n    group.add(symbol); // Group may be new, also need to add.\r\n\r\n    callback && callback.onUpdate(symbol);\r\n  } // Style\r\n\r\n\r\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\r\n  symbol.setStyle(itemStyle); // Transform and events.\r\n\r\n  opt = zrUtil.merge({\r\n    rectHover: true,\r\n    z2: 100\r\n  }, opt, true);\r\n  var symbolSize = hostModel.get('symbolSize');\r\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\r\n  symbolSize[0] /= 2;\r\n  symbolSize[1] /= 2;\r\n  opt.scale = symbolSize;\r\n  var symbolOffset = hostModel.get('symbolOffset');\r\n\r\n  if (symbolOffset) {\r\n    var pos = opt.position = opt.position || [0, 0];\r\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\r\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\r\n  }\r\n\r\n  var symbolRotate = hostModel.get('symbolRotate');\r\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\r\n  symbol.attr(opt); // FIXME\r\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\r\n  // getBoundingRect will return wrong result.\r\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\r\n  // leverage performance and auto updateTransform)\r\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\r\n\r\n  symbol.updateTransform();\r\n  return symbol;\r\n}\r\n\r\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\r\n  if (pointer.dragging) {\r\n    return;\r\n  }\r\n\r\n  var pointerModel = timelineModel.getModel('checkpointStyle');\r\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\r\n\r\n  if (noAnimation || !pointerModel.get('animation', true)) {\r\n    pointer.attr({\r\n      position: [toCoord, 0]\r\n    });\r\n  } else {\r\n    pointer.stopAnimation(true);\r\n    pointer.animateTo({\r\n      position: [toCoord, 0]\r\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Axis = require(\"../../coord/Axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Extend axis 2d\r\n * @constructor module:echarts/coord/cartesian/Axis2D\r\n * @extends {module:echarts/coord/cartesian/Axis}\r\n * @param {string} dim\r\n * @param {*} scale\r\n * @param {Array.<number>} coordExtent\r\n * @param {string} axisType\r\n * @param {string} position\r\n */\r\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\r\n  Axis.call(this, dim, scale, coordExtent);\r\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = axisType || 'value';\r\n  /**\r\n   * Axis model\r\n   * @param {module:echarts/component/TimelineModel}\r\n   */\r\n\r\n  this.model = null;\r\n};\r\n\r\nTimelineAxis.prototype = {\r\n  constructor: TimelineAxis,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getLabelModel: function () {\r\n    return this.model.getModel('label');\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  isHorizontal: function () {\r\n    return this.model.get('orient') === 'horizontal';\r\n  }\r\n};\r\nzrUtil.inherits(TimelineAxis, Axis);\r\nvar _default = TimelineAxis;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar TimelineModel = ComponentModel.extend({\r\n  type: 'timeline',\r\n  layoutMode: 'box',\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    // 一级层叠\r\n    z: 4,\r\n    // 二级层叠\r\n    show: true,\r\n    axisType: 'time',\r\n    // 模式是时间类型，支持 value, category\r\n    realtime: true,\r\n    left: '20%',\r\n    top: null,\r\n    right: '20%',\r\n    bottom: 0,\r\n    width: null,\r\n    height: 40,\r\n    padding: 5,\r\n    controlPosition: 'left',\r\n    // 'left' 'right' 'top' 'bottom' 'none'\r\n    autoPlay: false,\r\n    rewind: false,\r\n    // 反向播放\r\n    loop: true,\r\n    playInterval: 2000,\r\n    // 播放时间间隔，单位ms\r\n    currentIndex: 0,\r\n    itemStyle: {},\r\n    label: {\r\n      color: '#000'\r\n    },\r\n    data: []\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (option, parentModel, ecModel) {\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/data/List}\r\n     */\r\n    this._data;\r\n    /**\r\n     * @private\r\n     * @type {Array.<string>}\r\n     */\r\n\r\n    this._names;\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n    this._initData();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  mergeOption: function (option) {\r\n    TimelineModel.superApply(this, 'mergeOption', arguments);\r\n\r\n    this._initData();\r\n  },\r\n\r\n  /**\r\n   * @param {number} [currentIndex]\r\n   */\r\n  setCurrentIndex: function (currentIndex) {\r\n    if (currentIndex == null) {\r\n      currentIndex = this.option.currentIndex;\r\n    }\r\n\r\n    var count = this._data.count();\r\n\r\n    if (this.option.loop) {\r\n      currentIndex = (currentIndex % count + count) % count;\r\n    } else {\r\n      currentIndex >= count && (currentIndex = count - 1);\r\n      currentIndex < 0 && (currentIndex = 0);\r\n    }\r\n\r\n    this.option.currentIndex = currentIndex;\r\n  },\r\n\r\n  /**\r\n   * @return {number} currentIndex\r\n   */\r\n  getCurrentIndex: function () {\r\n    return this.option.currentIndex;\r\n  },\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  isIndexMax: function () {\r\n    return this.getCurrentIndex() >= this._data.count() - 1;\r\n  },\r\n\r\n  /**\r\n   * @param {boolean} state true: play, false: stop\r\n   */\r\n  setPlayState: function (state) {\r\n    this.option.autoPlay = !!state;\r\n  },\r\n\r\n  /**\r\n   * @return {boolean} true: play, false: stop\r\n   */\r\n  getPlayState: function () {\r\n    return !!this.option.autoPlay;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _initData: function () {\r\n    var thisOption = this.option;\r\n    var dataArr = thisOption.data || [];\r\n    var axisType = thisOption.axisType;\r\n    var names = this._names = [];\r\n\r\n    if (axisType === 'category') {\r\n      var idxArr = [];\r\n      zrUtil.each(dataArr, function (item, index) {\r\n        var value = modelUtil.getDataItemValue(item);\r\n        var newItem;\r\n\r\n        if (zrUtil.isObject(item)) {\r\n          newItem = zrUtil.clone(item);\r\n          newItem.value = index;\r\n        } else {\r\n          newItem = index;\r\n        }\r\n\r\n        idxArr.push(newItem);\r\n\r\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\r\n          value = '';\r\n        }\r\n\r\n        names.push(value + '');\r\n      });\r\n      dataArr = idxArr;\r\n    }\r\n\r\n    var dimType = {\r\n      category: 'ordinal',\r\n      time: 'time'\r\n    }[axisType] || 'number';\r\n    var data = this._data = new List([{\r\n      name: 'value',\r\n      type: dimType\r\n    }], this);\r\n    data.initData(dataArr, names);\r\n  },\r\n  getData: function () {\r\n    return this._data;\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @return {Array.<string>} categoreis\r\n   */\r\n  getCategories: function () {\r\n    if (this.get('axisType') === 'category') {\r\n      return this._names.slice();\r\n    }\r\n  }\r\n});\r\nvar _default = TimelineModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar ComponentView = require(\"../../view/Component\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = ComponentView.extend({\r\n  type: 'timeline'\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(option) {\r\n  var timelineOpt = option && option.timeline;\r\n\r\n  if (!zrUtil.isArray(timelineOpt)) {\r\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\r\n  }\r\n\r\n  zrUtil.each(timelineOpt, function (opt) {\r\n    if (!opt) {\r\n      return;\r\n    }\r\n\r\n    compatibleEC2(opt);\r\n  });\r\n}\r\n\r\nfunction compatibleEC2(opt) {\r\n  var type = opt.type;\r\n  var ec2Types = {\r\n    'number': 'value',\r\n    'time': 'time'\r\n  }; // Compatible with ec2\r\n\r\n  if (ec2Types[type]) {\r\n    opt.axisType = ec2Types[type];\r\n    delete opt.type;\r\n  }\r\n\r\n  transferItem(opt);\r\n\r\n  if (has(opt, 'controlPosition')) {\r\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\r\n\r\n    if (!has(controlStyle, 'position')) {\r\n      controlStyle.position = opt.controlPosition;\r\n    }\r\n\r\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\r\n      controlStyle.show = false;\r\n      delete controlStyle.position;\r\n    }\r\n\r\n    delete opt.controlPosition;\r\n  }\r\n\r\n  zrUtil.each(opt.data || [], function (dataItem) {\r\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\r\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\r\n        // In ec2, using name as value.\r\n        dataItem.value = dataItem.name;\r\n      }\r\n\r\n      transferItem(dataItem);\r\n    }\r\n  });\r\n}\r\n\r\nfunction transferItem(opt) {\r\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\r\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\r\n\r\n  var label = opt.label || opt.label || {};\r\n  var labelNormal = label.normal || (label.normal = {});\r\n  var excludeLabelAttr = {\r\n    normal: 1,\r\n    emphasis: 1\r\n  };\r\n  zrUtil.each(label, function (value, name) {\r\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\r\n      labelNormal[name] = value;\r\n    }\r\n  });\r\n\r\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\r\n    label.emphasis = itemStyleEmphasis.label;\r\n    delete itemStyleEmphasis.label;\r\n  }\r\n}\r\n\r\nfunction has(obj, attr) {\r\n  return obj.hasOwnProperty(attr);\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.registerAction({\r\n  type: 'timelineChange',\r\n  event: 'timelineChanged',\r\n  update: 'prepareAndUpdate'\r\n}, function (payload, ecModel) {\r\n  var timelineModel = ecModel.getComponent('timeline');\r\n\r\n  if (timelineModel && payload.currentIndex != null) {\r\n    timelineModel.setCurrentIndex(payload.currentIndex);\r\n\r\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\r\n      timelineModel.setPlayState(false);\r\n    }\r\n  } // Set normalized currentIndex to payload.\r\n\r\n\r\n  ecModel.resetOption('timeline');\r\n  return zrUtil.defaults({\r\n    currentIndex: timelineModel.option.currentIndex\r\n  }, payload);\r\n});\r\necharts.registerAction({\r\n  type: 'timelinePlayChange',\r\n  event: 'timelinePlayChanged',\r\n  update: 'update'\r\n}, function (payload, ecModel) {\r\n  var timelineModel = ecModel.getComponent('timeline');\r\n\r\n  if (timelineModel && payload.playState != null) {\r\n    timelineModel.setPlayState(payload.playState);\r\n  }\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Component = require(\"../../model/Component\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nComponent.registerSubTypeDefaulter('timeline', function () {\r\n  // Only slider now.\r\n  return 'slider';\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar graphic = require(\"../util/graphic\");\r\n\r\nvar _layout = require(\"../util/layout\");\r\n\r\nvar getLayoutRect = _layout.getLayoutRect;\r\n\r\nvar _format = require(\"../util/format\");\r\n\r\nvar windowOpen = _format.windowOpen;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Model\r\necharts.extendComponentModel({\r\n  type: 'title',\r\n  layoutMode: {\r\n    type: 'box',\r\n    ignoreSize: true\r\n  },\r\n  defaultOption: {\r\n    // 一级层叠\r\n    zlevel: 0,\r\n    // 二级层叠\r\n    z: 6,\r\n    show: true,\r\n    text: '',\r\n    // 超链接跳转\r\n    // link: null,\r\n    // 仅支持self | blank\r\n    target: 'blank',\r\n    subtext: '',\r\n    // 超链接跳转\r\n    // sublink: null,\r\n    // 仅支持self | blank\r\n    subtarget: 'blank',\r\n    // 'center' ¦ 'left' ¦ 'right'\r\n    // ¦ {number}（x坐标，单位px）\r\n    left: 0,\r\n    // 'top' ¦ 'bottom' ¦ 'center'\r\n    // ¦ {number}（y坐标，单位px）\r\n    top: 0,\r\n    // 水平对齐\r\n    // 'auto' | 'left' | 'right' | 'center'\r\n    // 默认根据 left 的位置判断是左对齐还是右对齐\r\n    // textAlign: null\r\n    //\r\n    // 垂直对齐\r\n    // 'auto' | 'top' | 'bottom' | 'middle'\r\n    // 默认根据 top 位置判断是上对齐还是下对齐\r\n    // textVerticalAlign: null\r\n    // textBaseline: null // The same as textVerticalAlign.\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    // 标题边框颜色\r\n    borderColor: '#ccc',\r\n    // 标题边框线宽，单位px，默认为0（无边框）\r\n    borderWidth: 0,\r\n    // 标题内边距，单位px，默认各方向内边距为5，\r\n    // 接受数组分别设定上右下左边距，同css\r\n    padding: 5,\r\n    // 主副标题纵向间隔，单位px，默认为10，\r\n    itemGap: 10,\r\n    textStyle: {\r\n      fontSize: 18,\r\n      fontWeight: 'bolder',\r\n      color: '#333'\r\n    },\r\n    subtextStyle: {\r\n      color: '#aaa'\r\n    }\r\n  }\r\n}); // View\r\n\r\necharts.extendComponentView({\r\n  type: 'title',\r\n  render: function (titleModel, ecModel, api) {\r\n    this.group.removeAll();\r\n\r\n    if (!titleModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var group = this.group;\r\n    var textStyleModel = titleModel.getModel('textStyle');\r\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\r\n    var textAlign = titleModel.get('textAlign');\r\n    var textVerticalAlign = zrUtil.retrieve2(titleModel.get('textBaseline'), titleModel.get('textVerticalAlign'));\r\n    var textEl = new graphic.Text({\r\n      style: graphic.setTextStyle({}, textStyleModel, {\r\n        text: titleModel.get('text'),\r\n        textFill: textStyleModel.getTextColor()\r\n      }, {\r\n        disableBox: true\r\n      }),\r\n      z2: 10\r\n    });\r\n    var textRect = textEl.getBoundingRect();\r\n    var subText = titleModel.get('subtext');\r\n    var subTextEl = new graphic.Text({\r\n      style: graphic.setTextStyle({}, subtextStyleModel, {\r\n        text: subText,\r\n        textFill: subtextStyleModel.getTextColor(),\r\n        y: textRect.height + titleModel.get('itemGap'),\r\n        textVerticalAlign: 'top'\r\n      }, {\r\n        disableBox: true\r\n      }),\r\n      z2: 10\r\n    });\r\n    var link = titleModel.get('link');\r\n    var sublink = titleModel.get('sublink');\r\n    var triggerEvent = titleModel.get('triggerEvent', true);\r\n    textEl.silent = !link && !triggerEvent;\r\n    subTextEl.silent = !sublink && !triggerEvent;\r\n\r\n    if (link) {\r\n      textEl.on('click', function () {\r\n        windowOpen(link, '_' + titleModel.get('target'));\r\n      });\r\n    }\r\n\r\n    if (sublink) {\r\n      subTextEl.on('click', function () {\r\n        windowOpen(sublink, '_' + titleModel.get('subtarget'));\r\n      });\r\n    }\r\n\r\n    textEl.eventData = subTextEl.eventData = triggerEvent ? {\r\n      componentType: 'title',\r\n      componentIndex: titleModel.componentIndex\r\n    } : null;\r\n    group.add(textEl);\r\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\r\n\r\n    var groupRect = group.getBoundingRect();\r\n    var layoutOption = titleModel.getBoxLayoutParams();\r\n    layoutOption.width = groupRect.width;\r\n    layoutOption.height = groupRect.height;\r\n    var layoutRect = getLayoutRect(layoutOption, {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    }, titleModel.get('padding')); // Adjust text align based on position\r\n\r\n    if (!textAlign) {\r\n      // Align left if title is on the left. center and right is same\r\n      textAlign = titleModel.get('left') || titleModel.get('right');\r\n\r\n      if (textAlign === 'middle') {\r\n        textAlign = 'center';\r\n      } // Adjust layout by text align\r\n\r\n\r\n      if (textAlign === 'right') {\r\n        layoutRect.x += layoutRect.width;\r\n      } else if (textAlign === 'center') {\r\n        layoutRect.x += layoutRect.width / 2;\r\n      }\r\n    }\r\n\r\n    if (!textVerticalAlign) {\r\n      textVerticalAlign = titleModel.get('top') || titleModel.get('bottom');\r\n\r\n      if (textVerticalAlign === 'center') {\r\n        textVerticalAlign = 'middle';\r\n      }\r\n\r\n      if (textVerticalAlign === 'bottom') {\r\n        layoutRect.y += layoutRect.height;\r\n      } else if (textVerticalAlign === 'middle') {\r\n        layoutRect.y += layoutRect.height / 2;\r\n      }\r\n\r\n      textVerticalAlign = textVerticalAlign || 'top';\r\n    }\r\n\r\n    group.attr('position', [layoutRect.x, layoutRect.y]);\r\n    var alignStyle = {\r\n      textAlign: textAlign,\r\n      textVerticalAlign: textVerticalAlign\r\n    };\r\n    textEl.setStyle(alignStyle);\r\n    subTextEl.setStyle(alignStyle); // Render background\r\n    // Get groupRect again because textAlign has been changed\r\n\r\n    groupRect = group.getBoundingRect();\r\n    var padding = layoutRect.margin;\r\n    var style = titleModel.getItemStyle(['color', 'opacity']);\r\n    style.fill = titleModel.get('backgroundColor');\r\n    var rect = new graphic.Rect({\r\n      shape: {\r\n        x: groupRect.x - padding[3],\r\n        y: groupRect.y - padding[0],\r\n        width: groupRect.width + padding[1] + padding[3],\r\n        height: groupRect.height + padding[0] + padding[2],\r\n        r: titleModel.get('borderRadius')\r\n      },\r\n      style: style,\r\n      subPixelOptimize: true,\r\n      silent: true\r\n    });\r\n    group.add(rect);\r\n  }\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./toolbox/ToolboxModel\");\r\n\r\nrequire(\"./toolbox/ToolboxView\");\r\n\r\nrequire(\"./toolbox/feature/SaveAsImage\");\r\n\r\nrequire(\"./toolbox/feature/MagicType\");\r\n\r\nrequire(\"./toolbox/feature/DataView\");\r\n\r\nrequire(\"./toolbox/feature/DataZoom\");\r\n\r\nrequire(\"./toolbox/feature/Restore\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar featureManager = require(\"./featureManager\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar ToolboxModel = echarts.extendComponentModel({\r\n  type: 'toolbox',\r\n  layoutMode: {\r\n    type: 'box',\r\n    ignoreSize: true\r\n  },\r\n  optionUpdated: function () {\r\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\r\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\r\n      var Feature = featureManager.get(featureName);\r\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\r\n    });\r\n  },\r\n  defaultOption: {\r\n    show: true,\r\n    z: 6,\r\n    zlevel: 0,\r\n    orient: 'horizontal',\r\n    left: 'right',\r\n    top: 'top',\r\n    // right\r\n    // bottom\r\n    backgroundColor: 'transparent',\r\n    borderColor: '#ccc',\r\n    borderRadius: 0,\r\n    borderWidth: 0,\r\n    padding: 5,\r\n    itemSize: 15,\r\n    itemGap: 8,\r\n    showTitle: true,\r\n    iconStyle: {\r\n      borderColor: '#666',\r\n      color: 'none'\r\n    },\r\n    emphasis: {\r\n      iconStyle: {\r\n        borderColor: '#3E98C5'\r\n      }\r\n    },\r\n    // textStyle: {},\r\n    // feature\r\n    tooltip: {\r\n      show: false\r\n    }\r\n  }\r\n});\r\nvar _default = ToolboxModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar textContain = require(\"zrender/lib/contain/text\");\r\n\r\nvar featureManager = require(\"./featureManager\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar DataDiffer = require(\"../../data/DataDiffer\");\r\n\r\nvar listComponentHelper = require(\"../helper/listComponent\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendComponentView({\r\n  type: 'toolbox',\r\n  render: function (toolboxModel, ecModel, api, payload) {\r\n    var group = this.group;\r\n    group.removeAll();\r\n\r\n    if (!toolboxModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var itemSize = +toolboxModel.get('itemSize');\r\n    var featureOpts = toolboxModel.get('feature') || {};\r\n    var features = this._features || (this._features = {});\r\n    var featureNames = [];\r\n    zrUtil.each(featureOpts, function (opt, name) {\r\n      featureNames.push(name);\r\n    });\r\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\r\n\r\n    this._featureNames = featureNames;\r\n\r\n    function processFeature(newIndex, oldIndex) {\r\n      var featureName = featureNames[newIndex];\r\n      var oldName = featureNames[oldIndex];\r\n      var featureOpt = featureOpts[featureName];\r\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\r\n      var feature; // FIX#11236, merge feature title from MagicType newOption. TODO: consider seriesIndex ?\r\n\r\n      if (payload && payload.newTitle != null && payload.featureName === featureName) {\r\n        featureOpt.title = payload.newTitle;\r\n      }\r\n\r\n      if (featureName && !oldName) {\r\n        // Create\r\n        if (isUserFeatureName(featureName)) {\r\n          feature = {\r\n            model: featureModel,\r\n            onclick: featureModel.option.onclick,\r\n            featureName: featureName\r\n          };\r\n        } else {\r\n          var Feature = featureManager.get(featureName);\r\n\r\n          if (!Feature) {\r\n            return;\r\n          }\r\n\r\n          feature = new Feature(featureModel, ecModel, api);\r\n        }\r\n\r\n        features[featureName] = feature;\r\n      } else {\r\n        feature = features[oldName]; // If feature does not exsit.\r\n\r\n        if (!feature) {\r\n          return;\r\n        }\r\n\r\n        feature.model = featureModel;\r\n        feature.ecModel = ecModel;\r\n        feature.api = api;\r\n      }\r\n\r\n      if (!featureName && oldName) {\r\n        feature.dispose && feature.dispose(ecModel, api);\r\n        return;\r\n      }\r\n\r\n      if (!featureModel.get('show') || feature.unusable) {\r\n        feature.remove && feature.remove(ecModel, api);\r\n        return;\r\n      }\r\n\r\n      createIconPaths(featureModel, feature, featureName);\r\n\r\n      featureModel.setIconStatus = function (iconName, status) {\r\n        var option = this.option;\r\n        var iconPaths = this.iconPaths;\r\n        option.iconStatus = option.iconStatus || {};\r\n        option.iconStatus[iconName] = status; // FIXME\r\n\r\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\r\n      };\r\n\r\n      if (feature.render) {\r\n        feature.render(featureModel, ecModel, api, payload);\r\n      }\r\n    }\r\n\r\n    function createIconPaths(featureModel, feature, featureName) {\r\n      var iconStyleModel = featureModel.getModel('iconStyle');\r\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\r\n      // {\r\n      //     icon: {\r\n      //         foo: '',\r\n      //         bar: ''\r\n      //     },\r\n      //     title: {\r\n      //         foo: '',\r\n      //         bar: ''\r\n      //     }\r\n      // }\r\n\r\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\r\n      var titles = featureModel.get('title') || {};\r\n\r\n      if (typeof icons === 'string') {\r\n        var icon = icons;\r\n        var title = titles;\r\n        icons = {};\r\n        titles = {};\r\n        icons[featureName] = icon;\r\n        titles[featureName] = title;\r\n      }\r\n\r\n      var iconPaths = featureModel.iconPaths = {};\r\n      zrUtil.each(icons, function (iconStr, iconName) {\r\n        var path = graphic.createIcon(iconStr, {}, {\r\n          x: -itemSize / 2,\r\n          y: -itemSize / 2,\r\n          width: itemSize,\r\n          height: itemSize\r\n        });\r\n        path.setStyle(iconStyleModel.getItemStyle());\r\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle(); // Text position calculation\r\n\r\n        path.setStyle({\r\n          text: titles[iconName],\r\n          textAlign: iconStyleEmphasisModel.get('textAlign'),\r\n          textBorderRadius: iconStyleEmphasisModel.get('textBorderRadius'),\r\n          textPadding: iconStyleEmphasisModel.get('textPadding'),\r\n          textFill: null\r\n        });\r\n        var tooltipModel = toolboxModel.getModel('tooltip');\r\n\r\n        if (tooltipModel && tooltipModel.get('show')) {\r\n          path.attr('tooltip', zrUtil.extend({\r\n            content: titles[iconName],\r\n            formatter: tooltipModel.get('formatter', true) || function () {\r\n              return titles[iconName];\r\n            },\r\n            formatterParams: {\r\n              componentType: 'toolbox',\r\n              name: iconName,\r\n              title: titles[iconName],\r\n              $vars: ['name', 'title']\r\n            },\r\n            position: tooltipModel.get('position', true) || 'bottom'\r\n          }, tooltipModel.option));\r\n        }\r\n\r\n        graphic.setHoverStyle(path);\r\n\r\n        if (toolboxModel.get('showTitle')) {\r\n          path.__title = titles[iconName];\r\n          path.on('mouseover', function () {\r\n            // Should not reuse above hoverStyle, which might be modified.\r\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\r\n            var defaultTextPosition = toolboxModel.get('orient') === 'vertical' ? toolboxModel.get('right') == null ? 'right' : 'left' : toolboxModel.get('bottom') == null ? 'bottom' : 'top';\r\n            path.setStyle({\r\n              textFill: iconStyleEmphasisModel.get('textFill') || hoverStyle.fill || hoverStyle.stroke || '#000',\r\n              textBackgroundColor: iconStyleEmphasisModel.get('textBackgroundColor'),\r\n              textPosition: iconStyleEmphasisModel.get('textPosition') || defaultTextPosition\r\n            });\r\n          }).on('mouseout', function () {\r\n            path.setStyle({\r\n              textFill: null,\r\n              textBackgroundColor: null\r\n            });\r\n          });\r\n        }\r\n\r\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\r\n        group.add(path);\r\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\r\n        iconPaths[iconName] = path;\r\n      });\r\n    }\r\n\r\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\r\n    // FIXME\r\n\r\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\r\n\r\n    group.eachChild(function (icon) {\r\n      var titleText = icon.__title;\r\n      var hoverStyle = icon.hoverStyle; // May be background element\r\n\r\n      if (hoverStyle && titleText) {\r\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\r\n        var offsetX = icon.position[0] + group.position[0];\r\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\r\n        var needPutOnTop = false;\r\n\r\n        if (offsetY + rect.height > api.getHeight()) {\r\n          hoverStyle.textPosition = 'top';\r\n          needPutOnTop = true;\r\n        }\r\n\r\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\r\n\r\n        if (offsetX + rect.width / 2 > api.getWidth()) {\r\n          hoverStyle.textPosition = ['100%', topOffset];\r\n          hoverStyle.textAlign = 'right';\r\n        } else if (offsetX - rect.width / 2 < 0) {\r\n          hoverStyle.textPosition = [0, topOffset];\r\n          hoverStyle.textAlign = 'left';\r\n        }\r\n      }\r\n    });\r\n  },\r\n  updateView: function (toolboxModel, ecModel, api, payload) {\r\n    zrUtil.each(this._features, function (feature) {\r\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\r\n    });\r\n  },\r\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\r\n  //     zrUtil.each(this._features, function (feature) {\r\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\r\n  //     });\r\n  // },\r\n  remove: function (ecModel, api) {\r\n    zrUtil.each(this._features, function (feature) {\r\n      feature.remove && feature.remove(ecModel, api);\r\n    });\r\n    this.group.removeAll();\r\n  },\r\n  dispose: function (ecModel, api) {\r\n    zrUtil.each(this._features, function (feature) {\r\n      feature.dispose && feature.dispose(ecModel, api);\r\n    });\r\n  }\r\n});\r\n\r\nfunction isUserFeatureName(featureName) {\r\n  return featureName.indexOf('my') === 0;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar features = {};\r\n\r\nfunction register(name, ctor) {\r\n  features[name] = ctor;\r\n}\r\n\r\nfunction get(name) {\r\n  return features[name];\r\n}\r\n\r\nexports.register = register;\r\nexports.get = get;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar featureManager = require(\"../featureManager\");\r\n\r\nvar lang = require(\"../../../lang\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar brushLang = lang.toolbox.brush;\r\n\r\nfunction Brush(model, ecModel, api) {\r\n  this.model = model;\r\n  this.ecModel = ecModel;\r\n  this.api = api;\r\n  /**\r\n   * @private\r\n   * @type {string}\r\n   */\r\n\r\n  this._brushType;\r\n  /**\r\n   * @private\r\n   * @type {string}\r\n   */\r\n\r\n  this._brushMode;\r\n}\r\n\r\nBrush.defaultOption = {\r\n  show: true,\r\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n  icon: {\r\n    /* eslint-disable */\r\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\r\n    // jshint ignore:line\r\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\r\n    // jshint ignore:line\r\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\r\n    // jshint ignore:line\r\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\r\n    // jshint ignore:line\r\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\r\n    // jshint ignore:line\r\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\r\n\r\n    /* eslint-enable */\r\n\r\n  },\r\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\r\n  title: zrUtil.clone(brushLang.title)\r\n};\r\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\r\n\r\n/* eslint-disable */\r\n\r\nproto.render =\r\n/* eslint-enable */\r\nproto.updateView = function (featureModel, ecModel, api) {\r\n  var brushType;\r\n  var brushMode;\r\n  var isBrushed;\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel) {\r\n    brushType = brushModel.brushType;\r\n    brushMode = brushModel.brushOption.brushMode || 'single';\r\n    isBrushed |= brushModel.areas.length;\r\n  });\r\n  this._brushType = brushType;\r\n  this._brushMode = brushMode;\r\n  zrUtil.each(featureModel.get('type', true), function (type) {\r\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\r\n  });\r\n};\r\n\r\nproto.getIcons = function () {\r\n  var model = this.model;\r\n  var availableIcons = model.get('icon', true);\r\n  var icons = {};\r\n  zrUtil.each(model.get('type', true), function (type) {\r\n    if (availableIcons[type]) {\r\n      icons[type] = availableIcons[type];\r\n    }\r\n  });\r\n  return icons;\r\n};\r\n\r\nproto.onclick = function (ecModel, api, type) {\r\n  var brushType = this._brushType;\r\n  var brushMode = this._brushMode;\r\n\r\n  if (type === 'clear') {\r\n    // Trigger parallel action firstly\r\n    api.dispatchAction({\r\n      type: 'axisAreaSelect',\r\n      intervals: []\r\n    });\r\n    api.dispatchAction({\r\n      type: 'brush',\r\n      command: 'clear',\r\n      // Clear all areas of all brush components.\r\n      areas: []\r\n    });\r\n  } else {\r\n    api.dispatchAction({\r\n      type: 'takeGlobalCursor',\r\n      key: 'brush',\r\n      brushOption: {\r\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\r\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nfeatureManager.register('brush', Brush);\r\nvar _default = Brush;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar eventTool = require(\"zrender/lib/core/event\");\r\n\r\nvar lang = require(\"../../../lang\");\r\n\r\nvar featureManager = require(\"../featureManager\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar dataViewLang = lang.toolbox.dataView;\r\nvar BLOCK_SPLITER = new Array(60).join('-');\r\nvar ITEM_SPLITER = '\\t';\r\n/**\r\n * Group series into two types\r\n *  1. on category axis, like line, bar\r\n *  2. others, like scatter, pie\r\n * @param {module:echarts/model/Global} ecModel\r\n * @return {Object}\r\n * @inner\r\n */\r\n\r\nfunction groupSeries(ecModel) {\r\n  var seriesGroupByCategoryAxis = {};\r\n  var otherSeries = [];\r\n  var meta = [];\r\n  ecModel.eachRawSeries(function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\r\n      var baseAxis = coordSys.getBaseAxis();\r\n\r\n      if (baseAxis.type === 'category') {\r\n        var key = baseAxis.dim + '_' + baseAxis.index;\r\n\r\n        if (!seriesGroupByCategoryAxis[key]) {\r\n          seriesGroupByCategoryAxis[key] = {\r\n            categoryAxis: baseAxis,\r\n            valueAxis: coordSys.getOtherAxis(baseAxis),\r\n            series: []\r\n          };\r\n          meta.push({\r\n            axisDim: baseAxis.dim,\r\n            axisIndex: baseAxis.index\r\n          });\r\n        }\r\n\r\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\r\n      } else {\r\n        otherSeries.push(seriesModel);\r\n      }\r\n    } else {\r\n      otherSeries.push(seriesModel);\r\n    }\r\n  });\r\n  return {\r\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\r\n    other: otherSeries,\r\n    meta: meta\r\n  };\r\n}\r\n/**\r\n * Assemble content of series on cateogory axis\r\n * @param {Array.<module:echarts/model/Series>} series\r\n * @return {string}\r\n * @inner\r\n */\r\n\r\n\r\nfunction assembleSeriesWithCategoryAxis(series) {\r\n  var tables = [];\r\n  zrUtil.each(series, function (group, key) {\r\n    var categoryAxis = group.categoryAxis;\r\n    var valueAxis = group.valueAxis;\r\n    var valueAxisDim = valueAxis.dim;\r\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\r\n      return series.name;\r\n    }));\r\n    var columns = [categoryAxis.model.getCategories()];\r\n    zrUtil.each(group.series, function (series) {\r\n      var rawData = series.getRawData();\r\n      columns.push(series.getRawData().mapArray(rawData.mapDimension(valueAxisDim), function (val) {\r\n        return val;\r\n      }));\r\n    }); // Assemble table content\r\n\r\n    var lines = [headers.join(ITEM_SPLITER)];\r\n\r\n    for (var i = 0; i < columns[0].length; i++) {\r\n      var items = [];\r\n\r\n      for (var j = 0; j < columns.length; j++) {\r\n        items.push(columns[j][i]);\r\n      }\r\n\r\n      lines.push(items.join(ITEM_SPLITER));\r\n    }\r\n\r\n    tables.push(lines.join('\\n'));\r\n  });\r\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\r\n}\r\n/**\r\n * Assemble content of other series\r\n * @param {Array.<module:echarts/model/Series>} series\r\n * @return {string}\r\n * @inner\r\n */\r\n\r\n\r\nfunction assembleOtherSeries(series) {\r\n  return zrUtil.map(series, function (series) {\r\n    var data = series.getRawData();\r\n    var lines = [series.name];\r\n    var vals = [];\r\n    data.each(data.dimensions, function () {\r\n      var argLen = arguments.length;\r\n      var dataIndex = arguments[argLen - 1];\r\n      var name = data.getName(dataIndex);\r\n\r\n      for (var i = 0; i < argLen - 1; i++) {\r\n        vals[i] = arguments[i];\r\n      }\r\n\r\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\r\n    });\r\n    return lines.join('\\n');\r\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\r\n}\r\n/**\r\n * @param {module:echarts/model/Global}\r\n * @return {Object}\r\n * @inner\r\n */\r\n\r\n\r\nfunction getContentFromModel(ecModel) {\r\n  var result = groupSeries(ecModel);\r\n  return {\r\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\r\n      return str.replace(/[\\n\\t\\s]/g, '');\r\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\r\n    meta: result.meta\r\n  };\r\n}\r\n\r\nfunction trim(str) {\r\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n}\r\n/**\r\n * If a block is tsv format\r\n */\r\n\r\n\r\nfunction isTSVFormat(block) {\r\n  // Simple method to find out if a block is tsv format\r\n  var firstLine = block.slice(0, block.indexOf('\\n'));\r\n\r\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\r\n    return true;\r\n  }\r\n}\r\n\r\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\r\n/**\r\n * @param {string} tsv\r\n * @return {Object}\r\n */\r\n\r\nfunction parseTSVContents(tsv) {\r\n  var tsvLines = tsv.split(/\\n+/g);\r\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\r\n  var categories = [];\r\n  var series = zrUtil.map(headers, function (header) {\r\n    return {\r\n      name: header,\r\n      data: []\r\n    };\r\n  });\r\n\r\n  for (var i = 0; i < tsvLines.length; i++) {\r\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\r\n    categories.push(items.shift());\r\n\r\n    for (var j = 0; j < items.length; j++) {\r\n      series[j] && (series[j].data[i] = items[j]);\r\n    }\r\n  }\r\n\r\n  return {\r\n    series: series,\r\n    categories: categories\r\n  };\r\n}\r\n/**\r\n * @param {string} str\r\n * @return {Array.<Object>}\r\n * @inner\r\n */\r\n\r\n\r\nfunction parseListContents(str) {\r\n  var lines = str.split(/\\n+/g);\r\n  var seriesName = trim(lines.shift());\r\n  var data = [];\r\n\r\n  for (var i = 0; i < lines.length; i++) {\r\n    // if line is empty, ignore it.\r\n    // there is a case that a user forgot to delete `\\n`.\r\n    var line = trim(lines[i]);\r\n\r\n    if (!line) {\r\n      continue;\r\n    }\r\n\r\n    var items = line.split(itemSplitRegex);\r\n    var name = '';\r\n    var value;\r\n    var hasName = false;\r\n\r\n    if (isNaN(items[0])) {\r\n      // First item is name\r\n      hasName = true;\r\n      name = items[0];\r\n      items = items.slice(1);\r\n      data[i] = {\r\n        name: name,\r\n        value: []\r\n      };\r\n      value = data[i].value;\r\n    } else {\r\n      value = data[i] = [];\r\n    }\r\n\r\n    for (var j = 0; j < items.length; j++) {\r\n      value.push(+items[j]);\r\n    }\r\n\r\n    if (value.length === 1) {\r\n      hasName ? data[i].value = value[0] : data[i] = value[0];\r\n    }\r\n  }\r\n\r\n  return {\r\n    name: seriesName,\r\n    data: data\r\n  };\r\n}\r\n/**\r\n * @param {string} str\r\n * @param {Array.<Object>} blockMetaList\r\n * @return {Object}\r\n * @inner\r\n */\r\n\r\n\r\nfunction parseContents(str, blockMetaList) {\r\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\r\n  var newOption = {\r\n    series: []\r\n  };\r\n  zrUtil.each(blocks, function (block, idx) {\r\n    if (isTSVFormat(block)) {\r\n      var result = parseTSVContents(block);\r\n      var blockMeta = blockMetaList[idx];\r\n      var axisKey = blockMeta.axisDim + 'Axis';\r\n\r\n      if (blockMeta) {\r\n        newOption[axisKey] = newOption[axisKey] || [];\r\n        newOption[axisKey][blockMeta.axisIndex] = {\r\n          data: result.categories\r\n        };\r\n        newOption.series = newOption.series.concat(result.series);\r\n      }\r\n    } else {\r\n      var result = parseListContents(block);\r\n      newOption.series.push(result);\r\n    }\r\n  });\r\n  return newOption;\r\n}\r\n/**\r\n * @alias {module:echarts/component/toolbox/feature/DataView}\r\n * @constructor\r\n * @param {module:echarts/model/Model} model\r\n */\r\n\r\n\r\nfunction DataView(model) {\r\n  this._dom = null;\r\n  this.model = model;\r\n}\r\n\r\nDataView.defaultOption = {\r\n  show: true,\r\n  readOnly: false,\r\n  optionToContent: null,\r\n  contentToOption: null,\r\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\r\n  title: zrUtil.clone(dataViewLang.title),\r\n  lang: zrUtil.clone(dataViewLang.lang),\r\n  backgroundColor: '#fff',\r\n  textColor: '#000',\r\n  textareaColor: '#fff',\r\n  textareaBorderColor: '#333',\r\n  buttonColor: '#c23531',\r\n  buttonTextColor: '#fff'\r\n};\r\n\r\nDataView.prototype.onclick = function (ecModel, api) {\r\n  var container = api.getDom();\r\n  var model = this.model;\r\n\r\n  if (this._dom) {\r\n    container.removeChild(this._dom);\r\n  }\r\n\r\n  var root = document.createElement('div');\r\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\r\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\r\n\r\n  var header = document.createElement('h4');\r\n  var lang = model.get('lang') || [];\r\n  header.innerHTML = lang[0] || model.get('title');\r\n  header.style.cssText = 'margin: 10px 20px;';\r\n  header.style.color = model.get('textColor');\r\n  var viewMain = document.createElement('div');\r\n  var textarea = document.createElement('textarea');\r\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\r\n  var optionToContent = model.get('optionToContent');\r\n  var contentToOption = model.get('contentToOption');\r\n  var result = getContentFromModel(ecModel);\r\n\r\n  if (typeof optionToContent === 'function') {\r\n    var htmlOrDom = optionToContent(api.getOption());\r\n\r\n    if (typeof htmlOrDom === 'string') {\r\n      viewMain.innerHTML = htmlOrDom;\r\n    } else if (zrUtil.isDom(htmlOrDom)) {\r\n      viewMain.appendChild(htmlOrDom);\r\n    }\r\n  } else {\r\n    // Use default textarea\r\n    viewMain.appendChild(textarea);\r\n    textarea.readOnly = model.get('readOnly');\r\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\r\n    textarea.style.color = model.get('textColor');\r\n    textarea.style.borderColor = model.get('textareaBorderColor');\r\n    textarea.style.backgroundColor = model.get('textareaColor');\r\n    textarea.value = result.value;\r\n  }\r\n\r\n  var blockMetaList = result.meta;\r\n  var buttonContainer = document.createElement('div');\r\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\r\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\r\n  var closeButton = document.createElement('div');\r\n  var refreshButton = document.createElement('div');\r\n  buttonStyle += ';background-color:' + model.get('buttonColor');\r\n  buttonStyle += ';color:' + model.get('buttonTextColor');\r\n  var self = this;\r\n\r\n  function close() {\r\n    container.removeChild(root);\r\n    self._dom = null;\r\n  }\r\n\r\n  eventTool.addEventListener(closeButton, 'click', close);\r\n  eventTool.addEventListener(refreshButton, 'click', function () {\r\n    var newOption;\r\n\r\n    try {\r\n      if (typeof contentToOption === 'function') {\r\n        newOption = contentToOption(viewMain, api.getOption());\r\n      } else {\r\n        newOption = parseContents(textarea.value, blockMetaList);\r\n      }\r\n    } catch (e) {\r\n      close();\r\n      throw new Error('Data view format error ' + e);\r\n    }\r\n\r\n    if (newOption) {\r\n      api.dispatchAction({\r\n        type: 'changeDataView',\r\n        newOption: newOption\r\n      });\r\n    }\r\n\r\n    close();\r\n  });\r\n  closeButton.innerHTML = lang[1];\r\n  refreshButton.innerHTML = lang[2];\r\n  refreshButton.style.cssText = buttonStyle;\r\n  closeButton.style.cssText = buttonStyle;\r\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\r\n  buttonContainer.appendChild(closeButton);\r\n  root.appendChild(header);\r\n  root.appendChild(viewMain);\r\n  root.appendChild(buttonContainer);\r\n  viewMain.style.height = container.clientHeight - 80 + 'px';\r\n  container.appendChild(root);\r\n  this._dom = root;\r\n};\r\n\r\nDataView.prototype.remove = function (ecModel, api) {\r\n  this._dom && api.getDom().removeChild(this._dom);\r\n};\r\n\r\nDataView.prototype.dispose = function (ecModel, api) {\r\n  this.remove(ecModel, api);\r\n};\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction tryMergeDataOption(newData, originalData) {\r\n  return zrUtil.map(newData, function (newVal, idx) {\r\n    var original = originalData && originalData[idx];\r\n\r\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\r\n      var newValIsObject = zrUtil.isObject(newVal) && !zrUtil.isArray(newVal);\r\n\r\n      if (!newValIsObject) {\r\n        newVal = {\r\n          value: newVal\r\n        };\r\n      } // original data has name but new data has no name\r\n\r\n\r\n      var shouldDeleteName = original.name != null && newVal.name == null; // Original data has option\r\n\r\n      newVal = zrUtil.defaults(newVal, original);\r\n      shouldDeleteName && delete newVal.name;\r\n      return newVal;\r\n    } else {\r\n      return newVal;\r\n    }\r\n  });\r\n}\r\n\r\nfeatureManager.register('dataView', DataView);\r\necharts.registerAction({\r\n  type: 'changeDataView',\r\n  event: 'dataViewChanged',\r\n  update: 'prepareAndUpdate'\r\n}, function (payload, ecModel) {\r\n  var newSeriesOptList = [];\r\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\r\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\r\n\r\n    if (!seriesModel) {\r\n      // New created series\r\n      // Geuss the series type\r\n      newSeriesOptList.push(zrUtil.extend({\r\n        // Default is scatter\r\n        type: 'scatter'\r\n      }, seriesOpt));\r\n    } else {\r\n      var originalData = seriesModel.get('data');\r\n      newSeriesOptList.push({\r\n        name: seriesOpt.name,\r\n        data: tryMergeDataOption(seriesOpt.data, originalData)\r\n      });\r\n    }\r\n  });\r\n  ecModel.mergeOption(zrUtil.defaults({\r\n    series: newSeriesOptList\r\n  }, payload.newOption));\r\n});\r\nvar _default = DataView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar BrushController = require(\"../../helper/BrushController\");\r\n\r\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\r\n\r\nvar history = require(\"../../dataZoom/history\");\r\n\r\nvar sliderMove = require(\"../../helper/sliderMove\");\r\n\r\nvar lang = require(\"../../../lang\");\r\n\r\nvar featureManager = require(\"../featureManager\");\r\n\r\nrequire(\"../../dataZoomSelect\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Use dataZoomSelect\r\nvar dataZoomLang = lang.toolbox.dataZoom;\r\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\r\n\r\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\r\n\r\nfunction DataZoom(model, ecModel, api) {\r\n  /**\r\n   * @private\r\n   * @type {module:echarts/component/helper/BrushController}\r\n   */\r\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._isZoomActive;\r\n}\r\n\r\nDataZoom.defaultOption = {\r\n  show: true,\r\n  filterMode: 'filter',\r\n  // Icon group\r\n  icon: {\r\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\r\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\r\n  },\r\n  // `zoom`, `back`\r\n  title: zrUtil.clone(dataZoomLang.title),\r\n  brushStyle: {\r\n    borderWidth: 0,\r\n    color: 'rgba(0,0,0,0.2)'\r\n  }\r\n};\r\nvar proto = DataZoom.prototype;\r\n\r\nproto.render = function (featureModel, ecModel, api, payload) {\r\n  this.model = featureModel;\r\n  this.ecModel = ecModel;\r\n  this.api = api;\r\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\r\n  updateBackBtnStatus(featureModel, ecModel);\r\n};\r\n\r\nproto.onclick = function (ecModel, api, type) {\r\n  handlers[type].call(this);\r\n};\r\n\r\nproto.remove = function (ecModel, api) {\r\n  this._brushController.unmount();\r\n};\r\n\r\nproto.dispose = function (ecModel, api) {\r\n  this._brushController.dispose();\r\n};\r\n/**\r\n * @private\r\n */\r\n\r\n\r\nvar handlers = {\r\n  zoom: function () {\r\n    var nextActive = !this._isZoomActive;\r\n    this.api.dispatchAction({\r\n      type: 'takeGlobalCursor',\r\n      key: 'dataZoomSelect',\r\n      dataZoomSelectActive: nextActive\r\n    });\r\n  },\r\n  back: function () {\r\n    this._dispatchZoomAction(history.pop(this.ecModel));\r\n  }\r\n};\r\n/**\r\n * @private\r\n */\r\n\r\nproto._onBrush = function (areas, opt) {\r\n  if (!opt.isEnd || !areas.length) {\r\n    return;\r\n  }\r\n\r\n  var snapshot = {};\r\n  var ecModel = this.ecModel;\r\n\r\n  this._brushController.updateCovers([]); // remove cover\r\n\r\n\r\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\r\n    include: ['grid']\r\n  });\r\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\r\n    if (coordSys.type !== 'cartesian2d') {\r\n      return;\r\n    }\r\n\r\n    var brushType = area.brushType;\r\n\r\n    if (brushType === 'rect') {\r\n      setBatch('x', coordSys, coordRange[0]);\r\n      setBatch('y', coordSys, coordRange[1]);\r\n    } else {\r\n      setBatch({\r\n        lineX: 'x',\r\n        lineY: 'y'\r\n      }[brushType], coordSys, coordRange);\r\n    }\r\n  });\r\n  history.push(ecModel, snapshot);\r\n\r\n  this._dispatchZoomAction(snapshot);\r\n\r\n  function setBatch(dimName, coordSys, minMax) {\r\n    var axis = coordSys.getAxis(dimName);\r\n    var axisModel = axis.model;\r\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\r\n\r\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\r\n\r\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\r\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\r\n    }\r\n\r\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\r\n      dataZoomId: dataZoomModel.id,\r\n      startValue: minMax[0],\r\n      endValue: minMax[1]\r\n    });\r\n  }\r\n\r\n  function findDataZoom(dimName, axisModel, ecModel) {\r\n    var found;\r\n    ecModel.eachComponent({\r\n      mainType: 'dataZoom',\r\n      subType: 'select'\r\n    }, function (dzModel) {\r\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\r\n      has && (found = dzModel);\r\n    });\r\n    return found;\r\n  }\r\n};\r\n/**\r\n * @private\r\n */\r\n\r\n\r\nproto._dispatchZoomAction = function (snapshot) {\r\n  var batch = []; // Convert from hash map to array.\r\n\r\n  each(snapshot, function (batchItem, dataZoomId) {\r\n    batch.push(zrUtil.clone(batchItem));\r\n  });\r\n  batch.length && this.api.dispatchAction({\r\n    type: 'dataZoom',\r\n    from: this.uid,\r\n    batch: batch\r\n  });\r\n};\r\n\r\nfunction retrieveAxisSetting(option) {\r\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\r\n\r\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\r\n    setting[name] = option[name];\r\n    setting[name] == null && (setting[name] = 'all');\r\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\r\n  });\r\n  return setting;\r\n}\r\n\r\nfunction updateBackBtnStatus(featureModel, ecModel) {\r\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\r\n}\r\n\r\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\r\n  var zoomActive = view._isZoomActive;\r\n\r\n  if (payload && payload.type === 'takeGlobalCursor') {\r\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\r\n  }\r\n\r\n  view._isZoomActive = zoomActive;\r\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\r\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\r\n    include: ['grid']\r\n  });\r\n\r\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\r\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\r\n  })).enableBrush(zoomActive ? {\r\n    brushType: 'auto',\r\n    brushStyle: featureModel.getModel('brushStyle').getItemStyle()\r\n  } : false);\r\n}\r\n\r\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\r\n// FIXME consider the case of merge option, where axes options are not exists.\r\n\r\necharts.registerPreprocessor(function (option) {\r\n  if (!option) {\r\n    return;\r\n  }\r\n\r\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\r\n\r\n  if (!zrUtil.isArray(dataZoomOpts)) {\r\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\r\n  }\r\n\r\n  var toolboxOpt = option.toolbox;\r\n\r\n  if (toolboxOpt) {\r\n    // Assume there is only one toolbox\r\n    if (zrUtil.isArray(toolboxOpt)) {\r\n      toolboxOpt = toolboxOpt[0];\r\n    }\r\n\r\n    if (toolboxOpt && toolboxOpt.feature) {\r\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\r\n      // no axis info to be added. See `test/dataZoom-extreme.html`\r\n\r\n      addForAxis('xAxis', dataZoomOpt);\r\n      addForAxis('yAxis', dataZoomOpt);\r\n    }\r\n  }\r\n\r\n  function addForAxis(axisName, dataZoomOpt) {\r\n    if (!dataZoomOpt) {\r\n      return;\r\n    } // Try not to modify model, because it is not merged yet.\r\n\r\n\r\n    var axisIndicesName = axisName + 'Index';\r\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\r\n\r\n    if (givenAxisIndices != null && givenAxisIndices !== 'all' && !zrUtil.isArray(givenAxisIndices)) {\r\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\r\n    }\r\n\r\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\r\n      if (givenAxisIndices != null && givenAxisIndices !== 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\r\n        return;\r\n      }\r\n\r\n      var newOpt = {\r\n        type: 'select',\r\n        $fromToolbox: true,\r\n        // Default to be filter\r\n        filterMode: dataZoomOpt.filterMode || 'filter',\r\n        // Id for merge mapping.\r\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\r\n      }; // FIXME\r\n      // Only support one axis now.\r\n\r\n      newOpt[axisIndicesName] = axisIndex;\r\n      dataZoomOpts.push(newOpt);\r\n    });\r\n  }\r\n\r\n  function forEachComponent(mainType, cb) {\r\n    var opts = option[mainType];\r\n\r\n    if (!zrUtil.isArray(opts)) {\r\n      opts = opts ? [opts] : [];\r\n    }\r\n\r\n    each(opts, cb);\r\n  }\r\n});\r\nvar _default = DataZoom;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar lang = require(\"../../../lang\");\r\n\r\nvar featureManager = require(\"../featureManager\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar magicTypeLang = lang.toolbox.magicType;\r\nvar INNER_STACK_KEYWORD = '__ec_magicType_stack__';\r\n\r\nfunction MagicType(model) {\r\n  this.model = model;\r\n}\r\n\r\nMagicType.defaultOption = {\r\n  show: true,\r\n  type: [],\r\n  // Icon group\r\n  icon: {\r\n    /* eslint-disable */\r\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\r\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\r\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z' // jshint ignore:line\r\n\r\n    /* eslint-enable */\r\n\r\n  },\r\n  // `line`, `bar`, `stack`, `tiled`\r\n  title: zrUtil.clone(magicTypeLang.title),\r\n  option: {},\r\n  seriesIndex: {}\r\n};\r\nvar proto = MagicType.prototype;\r\n\r\nproto.getIcons = function () {\r\n  var model = this.model;\r\n  var availableIcons = model.get('icon');\r\n  var icons = {};\r\n  zrUtil.each(model.get('type'), function (type) {\r\n    if (availableIcons[type]) {\r\n      icons[type] = availableIcons[type];\r\n    }\r\n  });\r\n  return icons;\r\n};\r\n\r\nvar seriesOptGenreator = {\r\n  'line': function (seriesType, seriesId, seriesModel, model) {\r\n    if (seriesType === 'bar') {\r\n      return zrUtil.merge({\r\n        id: seriesId,\r\n        type: 'line',\r\n        // Preserve data related option\r\n        data: seriesModel.get('data'),\r\n        stack: seriesModel.get('stack'),\r\n        markPoint: seriesModel.get('markPoint'),\r\n        markLine: seriesModel.get('markLine')\r\n      }, model.get('option.line') || {}, true);\r\n    }\r\n  },\r\n  'bar': function (seriesType, seriesId, seriesModel, model) {\r\n    if (seriesType === 'line') {\r\n      return zrUtil.merge({\r\n        id: seriesId,\r\n        type: 'bar',\r\n        // Preserve data related option\r\n        data: seriesModel.get('data'),\r\n        stack: seriesModel.get('stack'),\r\n        markPoint: seriesModel.get('markPoint'),\r\n        markLine: seriesModel.get('markLine')\r\n      }, model.get('option.bar') || {}, true);\r\n    }\r\n  },\r\n  'stack': function (seriesType, seriesId, seriesModel, model) {\r\n    var isStack = seriesModel.get('stack') === INNER_STACK_KEYWORD;\r\n\r\n    if (seriesType === 'line' || seriesType === 'bar') {\r\n      model.setIconStatus('stack', isStack ? 'normal' : 'emphasis');\r\n      return zrUtil.merge({\r\n        id: seriesId,\r\n        stack: isStack ? '' : INNER_STACK_KEYWORD\r\n      }, model.get('option.stack') || {}, true);\r\n    }\r\n  }\r\n};\r\nvar radioTypes = [['line', 'bar'], ['stack']];\r\n\r\nproto.onclick = function (ecModel, api, type) {\r\n  var model = this.model;\r\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\r\n\r\n  if (!seriesOptGenreator[type]) {\r\n    return;\r\n  }\r\n\r\n  var newOption = {\r\n    series: []\r\n  };\r\n\r\n  var generateNewSeriesTypes = function (seriesModel) {\r\n    var seriesType = seriesModel.subType;\r\n    var seriesId = seriesModel.id;\r\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\r\n\r\n    if (newSeriesOpt) {\r\n      // PENDING If merge original option?\r\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\r\n      newOption.series.push(newSeriesOpt);\r\n    } // Modify boundaryGap\r\n\r\n\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\r\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\r\n\r\n      if (categoryAxis) {\r\n        var axisDim = categoryAxis.dim;\r\n        var axisType = axisDim + 'Axis';\r\n        var axisModel = ecModel.queryComponents({\r\n          mainType: axisType,\r\n          index: seriesModel.get(name + 'Index'),\r\n          id: seriesModel.get(name + 'Id')\r\n        })[0];\r\n        var axisIndex = axisModel.componentIndex;\r\n        newOption[axisType] = newOption[axisType] || [];\r\n\r\n        for (var i = 0; i <= axisIndex; i++) {\r\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\r\n        }\r\n\r\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar';\r\n      }\r\n    }\r\n  };\r\n\r\n  zrUtil.each(radioTypes, function (radio) {\r\n    if (zrUtil.indexOf(radio, type) >= 0) {\r\n      zrUtil.each(radio, function (item) {\r\n        model.setIconStatus(item, 'normal');\r\n      });\r\n    }\r\n  });\r\n  model.setIconStatus(type, 'emphasis');\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    query: seriesIndex == null ? null : {\r\n      seriesIndex: seriesIndex\r\n    }\r\n  }, generateNewSeriesTypes);\r\n  var newTitle; // Change title of stack\r\n\r\n  if (type === 'stack') {\r\n    var isStack = newOption.series && newOption.series[0] && newOption.series[0].stack === INNER_STACK_KEYWORD;\r\n    newTitle = isStack ? zrUtil.merge({\r\n      stack: magicTypeLang.title.tiled\r\n    }, magicTypeLang.title) : zrUtil.clone(magicTypeLang.title);\r\n  }\r\n\r\n  api.dispatchAction({\r\n    type: 'changeMagicType',\r\n    currentType: type,\r\n    newOption: newOption,\r\n    newTitle: newTitle,\r\n    featureName: 'magicType'\r\n  });\r\n};\r\n\r\necharts.registerAction({\r\n  type: 'changeMagicType',\r\n  event: 'magicTypeChanged',\r\n  update: 'prepareAndUpdate'\r\n}, function (payload, ecModel) {\r\n  ecModel.mergeOption(payload.newOption);\r\n});\r\nfeatureManager.register('magicType', MagicType);\r\nvar _default = MagicType;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../../echarts\");\r\n\r\nvar history = require(\"../../dataZoom/history\");\r\n\r\nvar lang = require(\"../../../lang\");\r\n\r\nvar featureManager = require(\"../featureManager\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar restoreLang = lang.toolbox.restore;\r\n\r\nfunction Restore(model) {\r\n  this.model = model;\r\n}\r\n\r\nRestore.defaultOption = {\r\n  show: true,\r\n\r\n  /* eslint-disable */\r\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\r\n\r\n  /* eslint-enable */\r\n  title: restoreLang.title\r\n};\r\nvar proto = Restore.prototype;\r\n\r\nproto.onclick = function (ecModel, api, type) {\r\n  history.clear(ecModel);\r\n  api.dispatchAction({\r\n    type: 'restore',\r\n    from: this.uid\r\n  });\r\n};\r\n\r\nfeatureManager.register('restore', Restore);\r\necharts.registerAction({\r\n  type: 'restore',\r\n  event: 'restore',\r\n  update: 'prepareAndUpdate'\r\n}, function (payload, ecModel) {\r\n  ecModel.resetOption('recreate');\r\n});\r\nvar _default = Restore;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar lang = require(\"../../../lang\");\r\n\r\nvar featureManager = require(\"../featureManager\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Uint8Array */\r\nvar saveAsImageLang = lang.toolbox.saveAsImage;\r\n\r\nfunction SaveAsImage(model) {\r\n  this.model = model;\r\n}\r\n\r\nSaveAsImage.defaultOption = {\r\n  show: true,\r\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\r\n  title: saveAsImageLang.title,\r\n  type: 'png',\r\n  // Default use option.backgroundColor\r\n  // backgroundColor: '#fff',\r\n  connectedBackgroundColor: '#fff',\r\n  name: '',\r\n  excludeComponents: ['toolbox'],\r\n  pixelRatio: 1,\r\n  lang: saveAsImageLang.lang.slice()\r\n};\r\nSaveAsImage.prototype.unusable = !env.canvasSupported;\r\nvar proto = SaveAsImage.prototype;\r\n\r\nproto.onclick = function (ecModel, api) {\r\n  var model = this.model;\r\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\r\n  var isSvg = api.getZr().painter.getType() === 'svg';\r\n  var type = isSvg ? 'svg' : model.get('type', true) || 'png';\r\n  var url = api.getConnectedDataURL({\r\n    type: type,\r\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\r\n    connectedBackgroundColor: model.get('connectedBackgroundColor'),\r\n    excludeComponents: model.get('excludeComponents'),\r\n    pixelRatio: model.get('pixelRatio')\r\n  }); // Chrome and Firefox\r\n\r\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\r\n    var $a = document.createElement('a');\r\n    $a.download = title + '.' + type;\r\n    $a.target = '_blank';\r\n    $a.href = url;\r\n    var evt = new MouseEvent('click', {\r\n      // some micro front-end framework， window maybe is a Proxy\r\n      view: document.defaultView,\r\n      bubbles: true,\r\n      cancelable: false\r\n    });\r\n    $a.dispatchEvent(evt);\r\n  } // IE\r\n  else {\r\n      if (window.navigator.msSaveOrOpenBlob) {\r\n        var bstr = atob(url.split(',')[1]);\r\n        var n = bstr.length;\r\n        var u8arr = new Uint8Array(n);\r\n\r\n        while (n--) {\r\n          u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n\r\n        var blob = new Blob([u8arr]);\r\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\r\n      } else {\r\n        var lang = model.get('lang');\r\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\r\n        var tab = window.open();\r\n        tab.document.write(html);\r\n      }\r\n    }\r\n};\r\n\r\nfeatureManager.register('saveAsImage', SaveAsImage);\r\nvar _default = SaveAsImage;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nrequire(\"./axisPointer\");\r\n\r\nrequire(\"./tooltip/TooltipModel\");\r\n\r\nrequire(\"./tooltip/TooltipView\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME Better way to pack data in graphic element\r\n\r\n/**\r\n * @action\r\n * @property {string} type\r\n * @property {number} seriesIndex\r\n * @property {number} dataIndex\r\n * @property {number} [x]\r\n * @property {number} [y]\r\n */\r\necharts.registerAction({\r\n  type: 'showTip',\r\n  event: 'showTip',\r\n  update: 'tooltip:manuallyShowTip'\r\n}, // noop\r\nfunction () {});\r\necharts.registerAction({\r\n  type: 'hideTip',\r\n  event: 'hideTip',\r\n  update: 'tooltip:manuallyHideTip'\r\n}, // noop\r\nfunction () {});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar zrColor = require(\"zrender/lib/tool/color\");\r\n\r\nvar eventUtil = require(\"zrender/lib/core/event\");\r\n\r\nvar domUtil = require(\"zrender/lib/core/dom\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar toCamelCase = formatUtil.toCamelCase;\r\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\r\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\r\n/**\r\n * @param {number} duration\r\n * @return {string}\r\n * @inner\r\n */\r\n\r\nfunction assembleTransition(duration) {\r\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\r\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\r\n  return zrUtil.map(vendors, function (vendorPrefix) {\r\n    return vendorPrefix + 'transition:' + transitionText;\r\n  }).join(';');\r\n}\r\n/**\r\n * @param {Object} textStyle\r\n * @return {string}\r\n * @inner\r\n */\r\n\r\n\r\nfunction assembleFont(textStyleModel) {\r\n  var cssText = [];\r\n  var fontSize = textStyleModel.get('fontSize');\r\n  var color = textStyleModel.getTextColor();\r\n  color && cssText.push('color:' + color);\r\n  cssText.push('font:' + textStyleModel.getFont());\r\n  var lineHeight = textStyleModel.get('lineHeight');\r\n\r\n  if (lineHeight == null) {\r\n    lineHeight = Math.round(fontSize * 3 / 2);\r\n  }\r\n\r\n  fontSize && cssText.push('line-height:' + lineHeight + 'px');\r\n  var shadowColor = textStyleModel.get('textShadowColor');\r\n  var shadowBlur = textStyleModel.get('textShadowBlur') || 0;\r\n  var shadowOffsetX = textStyleModel.get('textShadowOffsetX') || 0;\r\n  var shadowOffsetY = textStyleModel.get('textShadowOffsetY') || 0;\r\n  shadowBlur && cssText.push('text-shadow:' + shadowOffsetX + 'px ' + shadowOffsetY + 'px ' + shadowBlur + 'px ' + shadowColor);\r\n  each(['decoration', 'align'], function (name) {\r\n    var val = textStyleModel.get(name);\r\n    val && cssText.push('text-' + name + ':' + val);\r\n  });\r\n  return cssText.join(';');\r\n}\r\n/**\r\n * @param {Object} tooltipModel\r\n * @return {string}\r\n * @inner\r\n */\r\n\r\n\r\nfunction assembleCssText(tooltipModel) {\r\n  var cssText = [];\r\n  var transitionDuration = tooltipModel.get('transitionDuration');\r\n  var backgroundColor = tooltipModel.get('backgroundColor');\r\n  var textStyleModel = tooltipModel.getModel('textStyle');\r\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\r\n\r\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\r\n\r\n  if (backgroundColor) {\r\n    if (env.canvasSupported) {\r\n      cssText.push('background-Color:' + backgroundColor);\r\n    } else {\r\n      // for ie\r\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\r\n      cssText.push('filter:alpha(opacity=70)');\r\n    }\r\n  } // Border style\r\n\r\n\r\n  each(['width', 'color', 'radius'], function (name) {\r\n    var borderName = 'border-' + name;\r\n    var camelCase = toCamelCase(borderName);\r\n    var val = tooltipModel.get(camelCase);\r\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\r\n  }); // Text style\r\n\r\n  cssText.push(assembleFont(textStyleModel)); // Padding\r\n\r\n  if (padding != null) {\r\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\r\n  }\r\n\r\n  return cssText.join(';') + ';';\r\n} // If not able to make, do not modify the input `out`.\r\n\r\n\r\nfunction makeStyleCoord(out, zr, appendToBody, zrX, zrY) {\r\n  var zrPainter = zr && zr.painter;\r\n\r\n  if (appendToBody) {\r\n    var zrViewportRoot = zrPainter && zrPainter.getViewportRoot();\r\n\r\n    if (zrViewportRoot) {\r\n      // Some APPs might use scale on body, so we support CSS transform here.\r\n      domUtil.transformLocalCoord(out, zrViewportRoot, document.body, zrX, zrY);\r\n    }\r\n  } else {\r\n    out[0] = zrX;\r\n    out[1] = zrY; // xy should be based on canvas root. But tooltipContent is\r\n    // the sibling of canvas root. So padding of ec container\r\n    // should be considered here.\r\n\r\n    var viewportRootOffset = zrPainter && zrPainter.getViewportRootOffset();\r\n\r\n    if (viewportRootOffset) {\r\n      out[0] += viewportRootOffset.offsetLeft;\r\n      out[1] += viewportRootOffset.offsetTop;\r\n    }\r\n  }\r\n\r\n  out[2] = out[0] / zr.getWidth(); // The ratio of left to width\r\n\r\n  out[3] = out[1] / zr.getHeight(); // The ratio of top to height\r\n}\r\n/**\r\n * @alias module:echarts/component/tooltip/TooltipContent\r\n * @param {HTMLElement} container\r\n * @param {ExtensionAPI} api\r\n * @param {Object} [opt]\r\n * @param {boolean} [opt.appendToBody]\r\n *        `false`: the DOM element will be inside the container. Default value.\r\n *        `true`: the DOM element will be appended to HTML body, which avoid\r\n *                some overflow clip but intrude outside of the container.\r\n * @constructor\r\n */\r\n\r\n\r\nfunction TooltipContent(container, api, opt) {\r\n  if (env.wxa) {\r\n    return null;\r\n  }\r\n\r\n  var el = document.createElement('div');\r\n  el.domBelongToZr = true;\r\n  this.el = el;\r\n  var zr = this._zr = api.getZr();\r\n  var appendToBody = this._appendToBody = opt && opt.appendToBody;\r\n  this._styleCoord = [0, 0, 0, 0]; // [left, top, left/width, top/height]\r\n\r\n  makeStyleCoord(this._styleCoord, zr, appendToBody, api.getWidth() / 2, api.getHeight() / 2);\r\n\r\n  if (appendToBody) {\r\n    document.body.appendChild(el);\r\n  } else {\r\n    container.appendChild(el);\r\n  }\r\n\r\n  this._container = container;\r\n  this._show = false;\r\n  /**\r\n   * @private\r\n   */\r\n\r\n  this._hideTimeout; // FIXME\r\n  // Is it needed to trigger zr event manually if\r\n  // the browser do not support `pointer-events: none`.\r\n\r\n  var self = this;\r\n\r\n  el.onmouseenter = function () {\r\n    // clear the timeout in hideLater and keep showing tooltip\r\n    if (self._enterable) {\r\n      clearTimeout(self._hideTimeout);\r\n      self._show = true;\r\n    }\r\n\r\n    self._inContent = true;\r\n  };\r\n\r\n  el.onmousemove = function (e) {\r\n    e = e || window.event;\r\n\r\n    if (!self._enterable) {\r\n      // `pointer-events: none` is set to tooltip content div\r\n      // if `enterable` is set as `false`, and `el.onmousemove`\r\n      // can not be triggered. But in browser that do not\r\n      // support `pointer-events`, we need to do this:\r\n      // Try trigger zrender event to avoid mouse\r\n      // in and out shape too frequently\r\n      var handler = zr.handler;\r\n      var zrViewportRoot = zr.painter.getViewportRoot();\r\n      eventUtil.normalizeEvent(zrViewportRoot, e, true);\r\n      handler.dispatch('mousemove', e);\r\n    }\r\n  };\r\n\r\n  el.onmouseleave = function () {\r\n    if (self._enterable) {\r\n      if (self._show) {\r\n        self.hideLater(self._hideDelay);\r\n      }\r\n    }\r\n\r\n    self._inContent = false;\r\n  };\r\n}\r\n\r\nTooltipContent.prototype = {\r\n  constructor: TooltipContent,\r\n\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n  _enterable: true,\r\n\r\n  /**\r\n   * Update when tooltip is rendered\r\n   */\r\n  update: function (tooltipModel) {\r\n    // FIXME\r\n    // Move this logic to ec main?\r\n    var container = this._container;\r\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\r\n    var domStyle = container.style;\r\n\r\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\r\n      domStyle.position = 'relative';\r\n    }\r\n\r\n    var alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n    alwaysShowContent && this._moveTooltipIfResized(); // Hide the tooltip\r\n    // PENDING\r\n    // this.hide();\r\n  },\r\n\r\n  /**\r\n   * when `alwaysShowContent` is true,\r\n   * we should move the tooltip after chart resized\r\n   */\r\n  _moveTooltipIfResized: function () {\r\n    var ratioX = this._styleCoord[2]; // The ratio of left to width\r\n\r\n    var ratioY = this._styleCoord[3]; // The ratio of top to height\r\n\r\n    var realX = ratioX * this._zr.getWidth();\r\n\r\n    var realY = ratioY * this._zr.getHeight();\r\n\r\n    this.moveTo(realX, realY);\r\n  },\r\n  show: function (tooltipModel) {\r\n    clearTimeout(this._hideTimeout);\r\n    var el = this.el;\r\n    var styleCoord = this._styleCoord;\r\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // Because of the reason described in:\r\n    // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\r\n    // we should set initial value to `left` and `top`.\r\n    + ';left:' + styleCoord[0] + 'px;top:' + styleCoord[1] + 'px;' + (tooltipModel.get('extraCssText') || '');\r\n    el.style.display = el.innerHTML ? 'block' : 'none'; // If mouse occasionally move over the tooltip, a mouseout event will be\r\n    // triggered by canvas, and cause some unexpectable result like dragging\r\n    // stop, \"unfocusAdjacency\". Here `pointer-events: none` is used to solve\r\n    // it. Although it is not supported by IE8~IE10, fortunately it is a rare\r\n    // scenario.\r\n\r\n    el.style.pointerEvents = this._enterable ? 'auto' : 'none';\r\n    this._show = true;\r\n  },\r\n  setContent: function (content) {\r\n    this.el.innerHTML = content == null ? '' : content;\r\n  },\r\n  setEnterable: function (enterable) {\r\n    this._enterable = enterable;\r\n  },\r\n  getSize: function () {\r\n    var el = this.el;\r\n    return [el.clientWidth, el.clientHeight];\r\n  },\r\n  moveTo: function (zrX, zrY) {\r\n    var styleCoord = this._styleCoord;\r\n    makeStyleCoord(styleCoord, this._zr, this._appendToBody, zrX, zrY);\r\n    var style = this.el.style;\r\n    style.left = styleCoord[0] + 'px';\r\n    style.top = styleCoord[1] + 'px';\r\n  },\r\n  hide: function () {\r\n    this.el.style.display = 'none';\r\n    this._show = false;\r\n  },\r\n  hideLater: function (time) {\r\n    if (this._show && !(this._inContent && this._enterable)) {\r\n      if (time) {\r\n        this._hideDelay = time; // Set show false to avoid invoke hideLater multiple times\r\n\r\n        this._show = false;\r\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\r\n      } else {\r\n        this.hide();\r\n      }\r\n    }\r\n  },\r\n  isShow: function () {\r\n    return this._show;\r\n  },\r\n  dispose: function () {\r\n    this.el.parentNode.removeChild(this.el);\r\n  },\r\n  getOuterSize: function () {\r\n    var width = this.el.clientWidth;\r\n    var height = this.el.clientHeight; // Consider browser compatibility.\r\n    // IE8 does not support getComputedStyle.\r\n\r\n    if (document.defaultView && document.defaultView.getComputedStyle) {\r\n      var stl = document.defaultView.getComputedStyle(this.el);\r\n\r\n      if (stl) {\r\n        width += parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\r\n        height += parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\r\n      }\r\n    }\r\n\r\n    return {\r\n      width: width,\r\n      height: height\r\n    };\r\n  }\r\n};\r\nvar _default = TooltipContent;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendComponentModel({\r\n  type: 'tooltip',\r\n  dependencies: ['axisPointer'],\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 60,\r\n    show: true,\r\n    // tooltip主体内容\r\n    showContent: true,\r\n    // 'trigger' only works on coordinate system.\r\n    // 'item' | 'axis' | 'none'\r\n    trigger: 'item',\r\n    // 'click' | 'mousemove' | 'none'\r\n    triggerOn: 'mousemove|click',\r\n    alwaysShowContent: false,\r\n    displayMode: 'single',\r\n    // 'single' | 'multipleByCoordSys'\r\n    renderMode: 'auto',\r\n    // 'auto' | 'html' | 'richText'\r\n    // 'auto': use html by default, and use non-html if `document` is not defined\r\n    // 'html': use html for tooltip\r\n    // 'richText': use canvas, svg, and etc. for tooltip\r\n    // 位置 {Array} | {Function}\r\n    // position: null\r\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\r\n    // align: null,\r\n    // verticalAlign: null,\r\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\r\n    confine: false,\r\n    // 内容格式器：{string}（Template） ¦ {Function}\r\n    // formatter: null\r\n    showDelay: 0,\r\n    // 隐藏延迟，单位ms\r\n    hideDelay: 100,\r\n    // 动画变换时间，单位s\r\n    transitionDuration: 0.4,\r\n    enterable: false,\r\n    // 提示背景颜色，默认为透明度为0.7的黑色\r\n    backgroundColor: 'rgba(50,50,50,0.7)',\r\n    // 提示边框颜色\r\n    borderColor: '#333',\r\n    // 提示边框圆角，单位px，默认为4\r\n    borderRadius: 4,\r\n    // 提示边框线宽，单位px，默认为0（无边框）\r\n    borderWidth: 0,\r\n    // 提示内边距，单位px，默认各方向内边距为5，\r\n    // 接受数组分别设定上右下左边距，同css\r\n    padding: 5,\r\n    // Extra css text\r\n    extraCssText: '',\r\n    // 坐标轴指示器，坐标轴触发有效\r\n    axisPointer: {\r\n      // 默认为直线\r\n      // 可选为：'line' | 'shadow' | 'cross'\r\n      type: 'line',\r\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\r\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\r\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\r\n      // 极坐标系会默认选择 angle 轴\r\n      axis: 'auto',\r\n      animation: 'auto',\r\n      animationDurationUpdate: 200,\r\n      animationEasingUpdate: 'exponentialOut',\r\n      crossStyle: {\r\n        color: '#999',\r\n        width: 1,\r\n        type: 'dashed',\r\n        // TODO formatter\r\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\r\n        // otherwise it will always override those styles on option.axisPointer.\r\n\r\n      }\r\n    },\r\n    textStyle: {\r\n      color: '#fff',\r\n      fontSize: 14\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Text = require(\"zrender/lib/graphic/Text\");\r\n\r\nvar graphicUtil = require(\"../../util/graphic\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// import Group from 'zrender/src/container/Group';\r\nfunction makeStyleCoord(out, zr, zrX, zrY) {\r\n  out[0] = zrX;\r\n  out[1] = zrY;\r\n  out[2] = out[0] / zr.getWidth(); // The ratio of left to width\r\n\r\n  out[3] = out[1] / zr.getHeight(); // The ratio of top to height\r\n}\r\n/**\r\n * @alias module:echarts/component/tooltip/TooltipRichContent\r\n * @constructor\r\n */\r\n\r\n\r\nfunction TooltipRichContent(api) {\r\n  var zr = this._zr = api.getZr();\r\n  this._styleCoord = [0, 0, 0, 0]; // [left, top, left/width, top/height]\r\n\r\n  makeStyleCoord(this._styleCoord, zr, api.getWidth() / 2, api.getHeight() / 2);\r\n  this._show = false;\r\n  /**\r\n   * @private\r\n   */\r\n\r\n  this._hideTimeout;\r\n}\r\n\r\nTooltipRichContent.prototype = {\r\n  constructor: TooltipRichContent,\r\n\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n  _enterable: true,\r\n\r\n  /**\r\n   * Update when tooltip is rendered\r\n   */\r\n  update: function (tooltipModel) {\r\n    var alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n    alwaysShowContent && this._moveTooltipIfResized();\r\n  },\r\n\r\n  /**\r\n   * when `alwaysShowContent` is true,\r\n   * we should move the tooltip after chart resized\r\n   */\r\n  _moveTooltipIfResized: function () {\r\n    var ratioX = this._styleCoord[2]; // The ratio of left to width\r\n\r\n    var ratioY = this._styleCoord[3]; // The ratio of top to height\r\n\r\n    var realX = ratioX * this._zr.getWidth();\r\n\r\n    var realY = ratioY * this._zr.getHeight();\r\n\r\n    this.moveTo(realX, realY);\r\n  },\r\n  show: function (tooltipModel) {\r\n    if (this._hideTimeout) {\r\n      clearTimeout(this._hideTimeout);\r\n    }\r\n\r\n    this.el.attr('show', true);\r\n    this._show = true;\r\n  },\r\n\r\n  /**\r\n   * Set tooltip content\r\n   *\r\n   * @param {string} content rich text string of content\r\n   * @param {Object} markerRich rich text style\r\n   * @param {Object} tooltipModel tooltip model\r\n   */\r\n  setContent: function (content, markerRich, tooltipModel) {\r\n    if (this.el) {\r\n      this._zr.remove(this.el);\r\n    }\r\n\r\n    var markers = {};\r\n    var text = content;\r\n    var prefix = '{marker';\r\n    var suffix = '|}';\r\n    var startId = text.indexOf(prefix);\r\n\r\n    while (startId >= 0) {\r\n      var endId = text.indexOf(suffix);\r\n      var name = text.substr(startId + prefix.length, endId - startId - prefix.length);\r\n\r\n      if (name.indexOf('sub') > -1) {\r\n        markers['marker' + name] = {\r\n          textWidth: 4,\r\n          textHeight: 4,\r\n          textBorderRadius: 2,\r\n          textBackgroundColor: markerRich[name],\r\n          // TODO: textOffset is not implemented for rich text\r\n          textOffset: [3, 0]\r\n        };\r\n      } else {\r\n        markers['marker' + name] = {\r\n          textWidth: 10,\r\n          textHeight: 10,\r\n          textBorderRadius: 5,\r\n          textBackgroundColor: markerRich[name]\r\n        };\r\n      }\r\n\r\n      text = text.substr(endId + 1);\r\n      startId = text.indexOf('{marker');\r\n    }\r\n\r\n    var textStyleModel = tooltipModel.getModel('textStyle');\r\n    var fontSize = textStyleModel.get('fontSize');\r\n    var lineHeight = tooltipModel.get('textLineHeight');\r\n\r\n    if (lineHeight == null) {\r\n      lineHeight = Math.round(fontSize * 3 / 2);\r\n    }\r\n\r\n    this.el = new Text({\r\n      style: graphicUtil.setTextStyle({}, textStyleModel, {\r\n        rich: markers,\r\n        text: content,\r\n        textBackgroundColor: tooltipModel.get('backgroundColor'),\r\n        textBorderRadius: tooltipModel.get('borderRadius'),\r\n        textFill: tooltipModel.get('textStyle.color'),\r\n        textPadding: tooltipModel.get('padding'),\r\n        textLineHeight: lineHeight\r\n      }),\r\n      z: tooltipModel.get('z')\r\n    });\r\n\r\n    this._zr.add(this.el);\r\n\r\n    var self = this;\r\n    this.el.on('mouseover', function () {\r\n      // clear the timeout in hideLater and keep showing tooltip\r\n      if (self._enterable) {\r\n        clearTimeout(self._hideTimeout);\r\n        self._show = true;\r\n      }\r\n\r\n      self._inContent = true;\r\n    });\r\n    this.el.on('mouseout', function () {\r\n      if (self._enterable) {\r\n        if (self._show) {\r\n          self.hideLater(self._hideDelay);\r\n        }\r\n      }\r\n\r\n      self._inContent = false;\r\n    });\r\n  },\r\n  setEnterable: function (enterable) {\r\n    this._enterable = enterable;\r\n  },\r\n  getSize: function () {\r\n    var bounding = this.el.getBoundingRect();\r\n    return [bounding.width, bounding.height];\r\n  },\r\n  moveTo: function (x, y) {\r\n    if (this.el) {\r\n      var styleCoord = this._styleCoord;\r\n      makeStyleCoord(styleCoord, this._zr, x, y);\r\n      this.el.attr('position', [styleCoord[0], styleCoord[1]]);\r\n    }\r\n  },\r\n  hide: function () {\r\n    if (this.el) {\r\n      this.el.hide();\r\n    }\r\n\r\n    this._show = false;\r\n  },\r\n  hideLater: function (time) {\r\n    if (this._show && !(this._inContent && this._enterable)) {\r\n      if (time) {\r\n        this._hideDelay = time; // Set show false to avoid invoke hideLater multiple times\r\n\r\n        this._show = false;\r\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\r\n      } else {\r\n        this.hide();\r\n      }\r\n    }\r\n  },\r\n  isShow: function () {\r\n    return this._show;\r\n  },\r\n  dispose: function () {\r\n    clearTimeout(this._hideTimeout);\r\n\r\n    if (this.el) {\r\n      this._zr.remove(this.el);\r\n    }\r\n  },\r\n  getOuterSize: function () {\r\n    var size = this.getSize();\r\n    return {\r\n      width: size[0],\r\n      height: size[1]\r\n    };\r\n  }\r\n};\r\nvar _default = TooltipRichContent;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar TooltipContent = require(\"./TooltipContent\");\r\n\r\nvar TooltipRichContent = require(\"./TooltipRichContent\");\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\r\n\r\nvar layoutUtil = require(\"../../util/layout\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar globalListener = require(\"../axisPointer/globalListener\");\r\n\r\nvar axisHelper = require(\"../../coord/axisHelper\");\r\n\r\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar bind = zrUtil.bind;\r\nvar each = zrUtil.each;\r\nvar parsePercent = numberUtil.parsePercent;\r\nvar proxyRect = new graphic.Rect({\r\n  shape: {\r\n    x: -1,\r\n    y: -1,\r\n    width: 2,\r\n    height: 2\r\n  }\r\n});\r\n\r\nvar _default = echarts.extendComponentView({\r\n  type: 'tooltip',\r\n  init: function (ecModel, api) {\r\n    if (env.node) {\r\n      return;\r\n    }\r\n\r\n    var tooltipModel = ecModel.getComponent('tooltip');\r\n    var renderMode = tooltipModel.get('renderMode');\r\n    this._renderMode = getTooltipRenderMode(renderMode);\r\n    var tooltipContent;\r\n\r\n    if (this._renderMode === 'html') {\r\n      tooltipContent = new TooltipContent(api.getDom(), api, {\r\n        appendToBody: tooltipModel.get('appendToBody', true)\r\n      });\r\n      this._newLine = '<br/>';\r\n    } else {\r\n      tooltipContent = new TooltipRichContent(api);\r\n      this._newLine = '\\n';\r\n    }\r\n\r\n    this._tooltipContent = tooltipContent;\r\n  },\r\n  render: function (tooltipModel, ecModel, api) {\r\n    if (env.node) {\r\n      return;\r\n    } // Reset\r\n\r\n\r\n    this.group.removeAll();\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/component/tooltip/TooltipModel}\r\n     */\r\n\r\n    this._tooltipModel = tooltipModel;\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/model/Global}\r\n     */\r\n\r\n    this._ecModel = ecModel;\r\n    /**\r\n     * @private\r\n     * @type {module:echarts/ExtensionAPI}\r\n     */\r\n\r\n    this._api = api;\r\n    /**\r\n     * Should be cleaned when render.\r\n     * @private\r\n     * @type {Array.<Array.<Object>>}\r\n     */\r\n\r\n    this._lastDataByCoordSys = null;\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n\r\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n    var tooltipContent = this._tooltipContent;\r\n    tooltipContent.update(tooltipModel);\r\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\r\n\r\n    this._initGlobalListener();\r\n\r\n    this._keepShow();\r\n  },\r\n  _initGlobalListener: function () {\r\n    var tooltipModel = this._tooltipModel;\r\n    var triggerOn = tooltipModel.get('triggerOn');\r\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\r\n      // If 'none', it is not controlled by mouse totally.\r\n      if (triggerOn !== 'none') {\r\n        if (triggerOn.indexOf(currTrigger) >= 0) {\r\n          this._tryShow(e, dispatchAction);\r\n        } else if (currTrigger === 'leave') {\r\n          this._hide(dispatchAction);\r\n        }\r\n      }\r\n    }, this));\r\n  },\r\n  _keepShow: function () {\r\n    var tooltipModel = this._tooltipModel;\r\n    var ecModel = this._ecModel;\r\n    var api = this._api; // Try to keep the tooltip show when refreshing\r\n\r\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\r\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\r\n    // which is not expected.\r\n    && tooltipModel.get('triggerOn') !== 'none') {\r\n      var self = this;\r\n      clearTimeout(this._refreshUpdateTimeout);\r\n      this._refreshUpdateTimeout = setTimeout(function () {\r\n        // Show tip next tick after other charts are rendered\r\n        // In case highlight action has wrong result\r\n        // FIXME\r\n        !api.isDisposed() && self.manuallyShowTip(tooltipModel, ecModel, api, {\r\n          x: self._lastX,\r\n          y: self._lastY\r\n        });\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Show tip manually by\r\n   * dispatchAction({\r\n   *     type: 'showTip',\r\n   *     x: 10,\r\n   *     y: 10\r\n   * });\r\n   * Or\r\n   * dispatchAction({\r\n   *      type: 'showTip',\r\n   *      seriesIndex: 0,\r\n   *      dataIndex or dataIndexInside or name\r\n   * });\r\n   *\r\n   *  TODO Batch\r\n   */\r\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\r\n    if (payload.from === this.uid || env.node) {\r\n      return;\r\n    }\r\n\r\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\r\n\r\n    this._ticket = ''; // When triggered from axisPointer.\r\n\r\n    var dataByCoordSys = payload.dataByCoordSys;\r\n\r\n    if (payload.tooltip && payload.x != null && payload.y != null) {\r\n      var el = proxyRect;\r\n      el.position = [payload.x, payload.y];\r\n      el.update();\r\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\r\n\r\n      this._tryShow({\r\n        offsetX: payload.x,\r\n        offsetY: payload.y,\r\n        target: el\r\n      }, dispatchAction);\r\n    } else if (dataByCoordSys) {\r\n      this._tryShow({\r\n        offsetX: payload.x,\r\n        offsetY: payload.y,\r\n        position: payload.position,\r\n        dataByCoordSys: payload.dataByCoordSys,\r\n        tooltipOption: payload.tooltipOption\r\n      }, dispatchAction);\r\n    } else if (payload.seriesIndex != null) {\r\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\r\n        return;\r\n      }\r\n\r\n      var pointInfo = findPointFromSeries(payload, ecModel);\r\n      var cx = pointInfo.point[0];\r\n      var cy = pointInfo.point[1];\r\n\r\n      if (cx != null && cy != null) {\r\n        this._tryShow({\r\n          offsetX: cx,\r\n          offsetY: cy,\r\n          position: payload.position,\r\n          target: pointInfo.el\r\n        }, dispatchAction);\r\n      }\r\n    } else if (payload.x != null && payload.y != null) {\r\n      // FIXME\r\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\r\n      api.dispatchAction({\r\n        type: 'updateAxisPointer',\r\n        x: payload.x,\r\n        y: payload.y\r\n      });\r\n\r\n      this._tryShow({\r\n        offsetX: payload.x,\r\n        offsetY: payload.y,\r\n        position: payload.position,\r\n        target: api.getZr().findHover(payload.x, payload.y).target\r\n      }, dispatchAction);\r\n    }\r\n  },\r\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\r\n    var tooltipContent = this._tooltipContent;\r\n\r\n    if (!this._alwaysShowContent && this._tooltipModel) {\r\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\r\n    }\r\n\r\n    this._lastX = this._lastY = null;\r\n\r\n    if (payload.from !== this.uid) {\r\n      this._hide(makeDispatchAction(payload, api));\r\n    }\r\n  },\r\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\r\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\r\n  // and tooltip.\r\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\r\n    var seriesIndex = payload.seriesIndex;\r\n    var dataIndex = payload.dataIndex;\r\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\r\n\r\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\r\n      return;\r\n    }\r\n\r\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\r\n\r\n    if (!seriesModel) {\r\n      return;\r\n    }\r\n\r\n    var data = seriesModel.getData();\r\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\r\n\r\n    if (tooltipModel.get('trigger') !== 'axis') {\r\n      return;\r\n    }\r\n\r\n    api.dispatchAction({\r\n      type: 'updateAxisPointer',\r\n      seriesIndex: seriesIndex,\r\n      dataIndex: dataIndex,\r\n      position: payload.position\r\n    });\r\n    return true;\r\n  },\r\n  _tryShow: function (e, dispatchAction) {\r\n    var el = e.target;\r\n    var tooltipModel = this._tooltipModel;\r\n\r\n    if (!tooltipModel) {\r\n      return;\r\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\r\n\r\n\r\n    this._lastX = e.offsetX;\r\n    this._lastY = e.offsetY;\r\n    var dataByCoordSys = e.dataByCoordSys;\r\n\r\n    if (dataByCoordSys && dataByCoordSys.length) {\r\n      this._showAxisTooltip(dataByCoordSys, e);\r\n    } // Always show item tooltip if mouse is on the element with dataIndex\r\n    else if (el && el.dataIndex != null) {\r\n        this._lastDataByCoordSys = null;\r\n\r\n        this._showSeriesItemTooltip(e, el, dispatchAction);\r\n      } // Tooltip provided directly. Like legend.\r\n      else if (el && el.tooltip) {\r\n          this._lastDataByCoordSys = null;\r\n\r\n          this._showComponentItemTooltip(e, el, dispatchAction);\r\n        } else {\r\n          this._lastDataByCoordSys = null;\r\n\r\n          this._hide(dispatchAction);\r\n        }\r\n  },\r\n  _showOrMove: function (tooltipModel, cb) {\r\n    // showDelay is used in this case: tooltip.enterable is set\r\n    // as true. User intent to move mouse into tooltip and click\r\n    // something. `showDelay` makes it easier to enter the content\r\n    // but tooltip do not move immediately.\r\n    var delay = tooltipModel.get('showDelay');\r\n    cb = zrUtil.bind(cb, this);\r\n    clearTimeout(this._showTimout);\r\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\r\n  },\r\n  _showAxisTooltip: function (dataByCoordSys, e) {\r\n    var ecModel = this._ecModel;\r\n    var globalTooltipModel = this._tooltipModel;\r\n    var point = [e.offsetX, e.offsetY];\r\n    var singleDefaultHTML = [];\r\n    var singleParamsList = [];\r\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\r\n    var renderMode = this._renderMode;\r\n    var newLine = this._newLine;\r\n    var markers = {};\r\n    each(dataByCoordSys, function (itemCoordSys) {\r\n      // var coordParamList = [];\r\n      // var coordDefaultHTML = [];\r\n      // var coordTooltipModel = buildTooltipModel([\r\n      //     e.tooltipOption,\r\n      //     itemCoordSys.tooltipOption,\r\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\r\n      //     globalTooltipModel\r\n      // ]);\r\n      // var displayMode = coordTooltipModel.get('displayMode');\r\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\r\n      each(itemCoordSys.dataByAxis, function (item) {\r\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\r\n        var axisValue = item.value;\r\n        var seriesDefaultHTML = [];\r\n\r\n        if (!axisModel || axisValue == null) {\r\n          return;\r\n        }\r\n\r\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\r\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\r\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\r\n          var dataIndex = idxItem.dataIndexInside;\r\n          var dataParams = series && series.getDataParams(dataIndex);\r\n          dataParams.axisDim = item.axisDim;\r\n          dataParams.axisIndex = item.axisIndex;\r\n          dataParams.axisType = item.axisType;\r\n          dataParams.axisId = item.axisId;\r\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\r\n          dataParams.axisValueLabel = valueLabel;\r\n\r\n          if (dataParams) {\r\n            singleParamsList.push(dataParams);\r\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\r\n            var html;\r\n\r\n            if (zrUtil.isObject(seriesTooltip)) {\r\n              html = seriesTooltip.html;\r\n              var newMarkers = seriesTooltip.markers;\r\n              zrUtil.merge(markers, newMarkers);\r\n            } else {\r\n              html = seriesTooltip;\r\n            }\r\n\r\n            seriesDefaultHTML.push(html);\r\n          }\r\n        }); // Default tooltip content\r\n        // FIXME\r\n        // (1) should be the first data which has name?\r\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\r\n\r\n        var firstLine = valueLabel;\r\n\r\n        if (renderMode !== 'html') {\r\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\r\n        } else {\r\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\r\n        }\r\n      });\r\n    }, this); // In most case, the second axis is shown upper than the first one.\r\n\r\n    singleDefaultHTML.reverse();\r\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\r\n    var positionExpr = e.position;\r\n\r\n    this._showOrMove(singleTooltipModel, function () {\r\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\r\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\r\n      } else {\r\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\r\n      }\r\n    }); // Do not trigger events here, because this branch only be entered\r\n    // from dispatchAction.\r\n\r\n  },\r\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\r\n    var ecModel = this._ecModel; // Use dataModel in element if possible\r\n    // Used when mouseover on a element like markPoint or edge\r\n    // In which case, the data is not main data in series.\r\n\r\n    var seriesIndex = el.seriesIndex;\r\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\r\n\r\n    var dataModel = el.dataModel || seriesModel;\r\n    var dataIndex = el.dataIndex;\r\n    var dataType = el.dataType;\r\n    var data = dataModel.getData(dataType);\r\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\r\n    var tooltipTrigger = tooltipModel.get('trigger');\r\n\r\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\r\n      return;\r\n    }\r\n\r\n    var params = dataModel.getDataParams(dataIndex, dataType);\r\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\r\n    var defaultHtml;\r\n    var markers;\r\n\r\n    if (zrUtil.isObject(seriesTooltip)) {\r\n      defaultHtml = seriesTooltip.html;\r\n      markers = seriesTooltip.markers;\r\n    } else {\r\n      defaultHtml = seriesTooltip;\r\n      markers = null;\r\n    }\r\n\r\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\r\n\r\n    this._showOrMove(tooltipModel, function () {\r\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\r\n    }); // FIXME\r\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\r\n\r\n\r\n    dispatchAction({\r\n      type: 'showTip',\r\n      dataIndexInside: dataIndex,\r\n      dataIndex: data.getRawIndex(dataIndex),\r\n      seriesIndex: seriesIndex,\r\n      from: this.uid\r\n    });\r\n  },\r\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\r\n    var tooltipOpt = el.tooltip;\r\n\r\n    if (typeof tooltipOpt === 'string') {\r\n      var content = tooltipOpt;\r\n      tooltipOpt = {\r\n        content: content,\r\n        // Fixed formatter\r\n        formatter: content\r\n      };\r\n    }\r\n\r\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\r\n    var defaultHtml = subTooltipModel.get('content');\r\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\r\n    // only works on coordinate system. In fact, we have not found case\r\n    // that requires setting `trigger` nothing on component yet.\r\n\r\n    this._showOrMove(subTooltipModel, function () {\r\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\r\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\r\n\r\n\r\n    dispatchAction({\r\n      type: 'showTip',\r\n      from: this.uid\r\n    });\r\n  },\r\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\r\n    // Reset ticket\r\n    this._ticket = '';\r\n\r\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var tooltipContent = this._tooltipContent;\r\n    var formatter = tooltipModel.get('formatter');\r\n    positionExpr = positionExpr || tooltipModel.get('position');\r\n    var html = defaultHtml;\r\n\r\n    if (formatter && typeof formatter === 'string') {\r\n      html = formatUtil.formatTpl(formatter, params, true);\r\n    } else if (typeof formatter === 'function') {\r\n      var callback = bind(function (cbTicket, html) {\r\n        if (cbTicket === this._ticket) {\r\n          tooltipContent.setContent(html, markers, tooltipModel);\r\n\r\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\r\n        }\r\n      }, this);\r\n      this._ticket = asyncTicket;\r\n      html = formatter(params, asyncTicket, callback);\r\n    }\r\n\r\n    tooltipContent.setContent(html, markers, tooltipModel);\r\n    tooltipContent.show(tooltipModel);\r\n\r\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\r\n  },\r\n\r\n  /**\r\n   * @param  {string|Function|Array.<number>|Object} positionExpr\r\n   * @param  {number} x Mouse x\r\n   * @param  {number} y Mouse y\r\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\r\n   * @param  {Object|<Array.<Object>} params\r\n   * @param  {module:zrender/Element} el target element\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @return {Array.<number>}\r\n   */\r\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\r\n    var viewWidth = this._api.getWidth();\r\n\r\n    var viewHeight = this._api.getHeight();\r\n\r\n    positionExpr = positionExpr || tooltipModel.get('position');\r\n    var contentSize = content.getSize();\r\n    var align = tooltipModel.get('align');\r\n    var vAlign = tooltipModel.get('verticalAlign');\r\n    var rect = el && el.getBoundingRect().clone();\r\n    el && rect.applyTransform(el.transform);\r\n\r\n    if (typeof positionExpr === 'function') {\r\n      // Callback of position can be an array or a string specify the position\r\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\r\n        viewSize: [viewWidth, viewHeight],\r\n        contentSize: contentSize.slice()\r\n      });\r\n    }\r\n\r\n    if (zrUtil.isArray(positionExpr)) {\r\n      x = parsePercent(positionExpr[0], viewWidth);\r\n      y = parsePercent(positionExpr[1], viewHeight);\r\n    } else if (zrUtil.isObject(positionExpr)) {\r\n      positionExpr.width = contentSize[0];\r\n      positionExpr.height = contentSize[1];\r\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\r\n        width: viewWidth,\r\n        height: viewHeight\r\n      });\r\n      x = layoutRect.x;\r\n      y = layoutRect.y;\r\n      align = null; // When positionExpr is left/top/right/bottom,\r\n      // align and verticalAlign will not work.\r\n\r\n      vAlign = null;\r\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\r\n    else if (typeof positionExpr === 'string' && el) {\r\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\r\n        x = pos[0];\r\n        y = pos[1];\r\n      } else {\r\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\r\n        x = pos[0];\r\n        y = pos[1];\r\n      }\r\n\r\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\r\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\r\n\r\n    if (tooltipModel.get('confine')) {\r\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\r\n      x = pos[0];\r\n      y = pos[1];\r\n    }\r\n\r\n    content.moveTo(x, y);\r\n  },\r\n  // FIXME\r\n  // Should we remove this but leave this to user?\r\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\r\n    var lastCoordSys = this._lastDataByCoordSys;\r\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\r\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\r\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\r\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\r\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\r\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\r\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\r\n        var thisItem = thisDataByAxis[indexAxis] || {};\r\n        var lastIndices = lastItem.seriesDataIndices || [];\r\n        var newIndices = thisItem.seriesDataIndices || [];\r\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\r\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\r\n          var newIdxItem = newIndices[j];\r\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\r\n        });\r\n      });\r\n    });\r\n    this._lastDataByCoordSys = dataByCoordSys;\r\n    return !!contentNotChanged;\r\n  },\r\n  _hide: function (dispatchAction) {\r\n    // Do not directly hideLater here, because this behavior may be prevented\r\n    // in dispatchAction when showTip is dispatched.\r\n    // FIXME\r\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\r\n    this._lastDataByCoordSys = null;\r\n    dispatchAction({\r\n      type: 'hideTip',\r\n      from: this.uid\r\n    });\r\n  },\r\n  dispose: function (ecModel, api) {\r\n    if (env.node) {\r\n      return;\r\n    }\r\n\r\n    this._tooltipContent.dispose();\r\n\r\n    globalListener.unregister('itemTooltip', api);\r\n  }\r\n});\r\n/**\r\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\r\n * From top to bottom. (the last one should be globalTooltipModel);\r\n */\r\n\r\n\r\nfunction buildTooltipModel(modelCascade) {\r\n  var resultModel = modelCascade.pop();\r\n\r\n  while (modelCascade.length) {\r\n    var tooltipOpt = modelCascade.pop();\r\n\r\n    if (tooltipOpt) {\r\n      if (Model.isInstance(tooltipOpt)) {\r\n        tooltipOpt = tooltipOpt.get('tooltip', true);\r\n      } // In each data item tooltip can be simply write:\r\n      // {\r\n      //  value: 10,\r\n      //  tooltip: 'Something you need to know'\r\n      // }\r\n\r\n\r\n      if (typeof tooltipOpt === 'string') {\r\n        tooltipOpt = {\r\n          formatter: tooltipOpt\r\n        };\r\n      }\r\n\r\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\r\n    }\r\n  }\r\n\r\n  return resultModel;\r\n}\r\n\r\nfunction makeDispatchAction(payload, api) {\r\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\r\n}\r\n\r\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\r\n  var size = content.getOuterSize();\r\n  var width = size.width;\r\n  var height = size.height;\r\n\r\n  if (gapH != null) {\r\n    if (x + width + gapH > viewWidth) {\r\n      x -= width + gapH;\r\n    } else {\r\n      x += gapH;\r\n    }\r\n  }\r\n\r\n  if (gapV != null) {\r\n    if (y + height + gapV > viewHeight) {\r\n      y -= height + gapV;\r\n    } else {\r\n      y += gapV;\r\n    }\r\n  }\r\n\r\n  return [x, y];\r\n}\r\n\r\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\r\n  var size = content.getOuterSize();\r\n  var width = size.width;\r\n  var height = size.height;\r\n  x = Math.min(x + width, viewWidth) - width;\r\n  y = Math.min(y + height, viewHeight) - height;\r\n  x = Math.max(x, 0);\r\n  y = Math.max(y, 0);\r\n  return [x, y];\r\n}\r\n\r\nfunction calcTooltipPosition(position, rect, contentSize) {\r\n  var domWidth = contentSize[0];\r\n  var domHeight = contentSize[1];\r\n  var gap = 5;\r\n  var x = 0;\r\n  var y = 0;\r\n  var rectWidth = rect.width;\r\n  var rectHeight = rect.height;\r\n\r\n  switch (position) {\r\n    case 'inside':\r\n      x = rect.x + rectWidth / 2 - domWidth / 2;\r\n      y = rect.y + rectHeight / 2 - domHeight / 2;\r\n      break;\r\n\r\n    case 'top':\r\n      x = rect.x + rectWidth / 2 - domWidth / 2;\r\n      y = rect.y - domHeight - gap;\r\n      break;\r\n\r\n    case 'bottom':\r\n      x = rect.x + rectWidth / 2 - domWidth / 2;\r\n      y = rect.y + rectHeight + gap;\r\n      break;\r\n\r\n    case 'left':\r\n      x = rect.x - domWidth - gap;\r\n      y = rect.y + rectHeight / 2 - domHeight / 2;\r\n      break;\r\n\r\n    case 'right':\r\n      x = rect.x + rectWidth + gap;\r\n      y = rect.y + rectHeight / 2 - domHeight / 2;\r\n  }\r\n\r\n  return [x, y];\r\n}\r\n\r\nfunction isCenterAlign(align) {\r\n  return align === 'center' || align === 'middle';\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./visualMapContinuous\");\r\n\r\nrequire(\"./visualMapPiecewise\");","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar preprocessor = require(\"./visualMap/preprocessor\");\r\n\r\nrequire(\"./visualMap/typeDefaulter\");\r\n\r\nrequire(\"./visualMap/visualEncoding\");\r\n\r\nrequire(\"./visualMap/ContinuousModel\");\r\n\r\nrequire(\"./visualMap/ContinuousView\");\r\n\r\nrequire(\"./visualMap/visualMapAction\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * DataZoom component entry\r\n */\r\necharts.registerPreprocessor(preprocessor);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../echarts\");\r\n\r\nvar preprocessor = require(\"./visualMap/preprocessor\");\r\n\r\nrequire(\"./visualMap/typeDefaulter\");\r\n\r\nrequire(\"./visualMap/visualEncoding\");\r\n\r\nrequire(\"./visualMap/PiecewiseModel\");\r\n\r\nrequire(\"./visualMap/PiecewiseView\");\r\n\r\nrequire(\"./visualMap/visualMapAction\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * DataZoom component entry\r\n */\r\necharts.registerPreprocessor(preprocessor);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar VisualMapModel = require(\"./VisualMapModel\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Constant\r\nvar DEFAULT_BAR_BOUND = [20, 140];\r\nvar ContinuousModel = VisualMapModel.extend({\r\n  type: 'visualMap.continuous',\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    align: 'auto',\r\n    // 'auto', 'left', 'right', 'top', 'bottom'\r\n    calculable: false,\r\n    // This prop effect default component type determine,\r\n    // See echarts/component/visualMap/typeDefaulter.\r\n    range: null,\r\n    // selected range. In default case `range` is [min, max]\r\n    // and can auto change along with modification of min max,\r\n    // util use specifid a range.\r\n    realtime: true,\r\n    // Whether realtime update.\r\n    itemHeight: null,\r\n    // The length of the range control edge.\r\n    itemWidth: null,\r\n    // The length of the other side.\r\n    hoverLink: true,\r\n    // Enable hover highlight.\r\n    hoverLinkDataSize: null,\r\n    // The size of hovered data.\r\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\r\n    // If not specified, follow the value of `realtime`.\r\n\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  optionUpdated: function (newOption, isInit) {\r\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\r\n    this.resetExtent();\r\n    this.resetVisual(function (mappingOption) {\r\n      mappingOption.mappingMethod = 'linear';\r\n      mappingOption.dataExtent = this.getExtent();\r\n    });\r\n\r\n    this._resetRange();\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n  resetItemSize: function () {\r\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\r\n    var itemSize = this.itemSize;\r\n    this._orient === 'horizontal' && itemSize.reverse();\r\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\r\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _resetRange: function () {\r\n    var dataExtent = this.getExtent();\r\n    var range = this.option.range;\r\n\r\n    if (!range || range.auto) {\r\n      // `range` should always be array (so we dont use other\r\n      // value like 'auto') for user-friend. (consider getOption).\r\n      dataExtent.auto = 1;\r\n      this.option.range = dataExtent;\r\n    } else if (zrUtil.isArray(range)) {\r\n      if (range[0] > range[1]) {\r\n        range.reverse();\r\n      }\r\n\r\n      range[0] = Math.max(range[0], dataExtent[0]);\r\n      range[1] = Math.min(range[1], dataExtent[1]);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n  completeVisualOption: function () {\r\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\r\n    zrUtil.each(this.stateList, function (state) {\r\n      var symbolSize = this.option.controller[state].symbolSize;\r\n\r\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\r\n        symbolSize[0] = 0; // For good looking.\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  setSelected: function (selected) {\r\n    this.option.range = selected.slice();\r\n\r\n    this._resetRange();\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  getSelected: function () {\r\n    var dataExtent = this.getExtent();\r\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\r\n\r\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\r\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\r\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\r\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\r\n    return dataInterval;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getValueState: function (value) {\r\n    var range = this.option.range;\r\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\r\n    // range[1] is processed likewise.\r\n\r\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\r\n  },\r\n\r\n  /**\r\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\r\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\r\n   */\r\n  findTargetDataIndices: function (range) {\r\n    var result = [];\r\n    this.eachTargetSeries(function (seriesModel) {\r\n      var dataIndices = [];\r\n      var data = seriesModel.getData();\r\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\r\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\r\n      }, this);\r\n      result.push({\r\n        seriesId: seriesModel.id,\r\n        dataIndex: dataIndices\r\n      });\r\n    }, this);\r\n    return result;\r\n  },\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  getVisualMeta: function (getColorVisual) {\r\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\r\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\r\n    var stops = [];\r\n\r\n    function setStop(value, valueState) {\r\n      stops.push({\r\n        value: value,\r\n        color: getColorVisual(value, valueState)\r\n      });\r\n    } // Format to: outOfRange -- inRange -- outOfRange.\r\n\r\n\r\n    var iIdx = 0;\r\n    var oIdx = 0;\r\n    var iLen = iVals.length;\r\n    var oLen = oVals.length;\r\n\r\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\r\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\r\n      if (oVals[oIdx] < iVals[iIdx]) {\r\n        setStop(oVals[oIdx], 'outOfRange');\r\n      }\r\n    }\r\n\r\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\r\n      // If range is full, value beyond min, max will be clamped.\r\n      // make a singularity\r\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\r\n      setStop(iVals[iIdx], 'inRange');\r\n    }\r\n\r\n    for (var first = 1; oIdx < oLen; oIdx++) {\r\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\r\n        // make a singularity\r\n        if (first) {\r\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\r\n          first = 0;\r\n        }\r\n\r\n        setStop(oVals[oIdx], 'outOfRange');\r\n      }\r\n    }\r\n\r\n    var stopsLen = stops.length;\r\n    return {\r\n      stops: stops,\r\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\r\n    };\r\n  }\r\n});\r\n\r\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\r\n  if (dataExtent[0] === dataExtent[1]) {\r\n    return dataExtent.slice();\r\n  } // When using colorHue mapping, it is not linear color any more.\r\n  // Moreover, canvas gradient seems not to be accurate linear.\r\n  // FIXME\r\n  // Should be arbitrary value 100? or based on pixel size?\r\n\r\n\r\n  var count = 200;\r\n  var step = (dataExtent[1] - dataExtent[0]) / count;\r\n  var value = dataExtent[0];\r\n  var stopValues = [];\r\n\r\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\r\n    stopValues.push(value);\r\n    value += step;\r\n  }\r\n\r\n  stopValues.push(dataExtent[1]);\r\n  return stopValues;\r\n}\r\n\r\nvar _default = ContinuousModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\r\n\r\nvar eventTool = require(\"zrender/lib/core/event\");\r\n\r\nvar VisualMapView = require(\"./VisualMapView\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar sliderMove = require(\"../helper/sliderMove\");\r\n\r\nvar helper = require(\"./helper\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar linearMap = numberUtil.linearMap;\r\nvar each = zrUtil.each;\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max; // Arbitrary value\r\n\r\nvar HOVER_LINK_SIZE = 12;\r\nvar HOVER_LINK_OUT = 6; // Notice:\r\n// Any \"interval\" should be by the order of [low, high].\r\n// \"handle0\" (handleIndex === 0) maps to\r\n// low data value: this._dataInterval[0] and has low coord.\r\n// \"handle1\" (handleIndex === 1) maps to\r\n// high data value: this._dataInterval[1] and has high coord.\r\n// The logic of transform is implemented in this._createBarGroup.\r\n\r\nvar ContinuousView = VisualMapView.extend({\r\n  type: 'visualMap.continuous',\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function () {\r\n    ContinuousView.superApply(this, 'init', arguments);\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._shapes = {};\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._dataInterval = [];\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._handleEnds = [];\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._orient;\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._useHandle;\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._hoverLinkDataIndices = [];\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._dragging;\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    this._hovering;\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n  doRender: function (visualMapModel, ecModel, api, payload) {\r\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\r\n      this._buildView();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _buildView: function () {\r\n    this.group.removeAll();\r\n    var visualMapModel = this.visualMapModel;\r\n    var thisGroup = this.group;\r\n    this._orient = visualMapModel.get('orient');\r\n    this._useHandle = visualMapModel.get('calculable');\r\n\r\n    this._resetInterval();\r\n\r\n    this._renderBar(thisGroup);\r\n\r\n    var dataRangeText = visualMapModel.get('text');\r\n\r\n    this._renderEndsText(thisGroup, dataRangeText, 0);\r\n\r\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\r\n\r\n\r\n    this._updateView(true); // After updating view, inner shapes is built completely,\r\n    // and then background can be rendered.\r\n\r\n\r\n    this.renderBackground(thisGroup); // Real update view\r\n\r\n    this._updateView();\r\n\r\n    this._enableHoverLinkToSeries();\r\n\r\n    this._enableHoverLinkFromSeries();\r\n\r\n    this.positionGroup(thisGroup);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\r\n    if (!dataRangeText) {\r\n      return;\r\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\r\n\r\n\r\n    var text = dataRangeText[1 - endsIndex];\r\n    text = text != null ? text + '' : '';\r\n    var visualMapModel = this.visualMapModel;\r\n    var textGap = visualMapModel.get('textGap');\r\n    var itemSize = visualMapModel.itemSize;\r\n    var barGroup = this._shapes.barGroup;\r\n\r\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\r\n\r\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\r\n\r\n    var orient = this._orient;\r\n    var textStyleModel = this.visualMapModel.textStyleModel;\r\n    this.group.add(new graphic.Text({\r\n      style: {\r\n        x: position[0],\r\n        y: position[1],\r\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\r\n        textAlign: orient === 'horizontal' ? align : 'center',\r\n        text: text,\r\n        textFont: textStyleModel.getFont(),\r\n        textFill: textStyleModel.getTextColor()\r\n      }\r\n    }));\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _renderBar: function (targetGroup) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var shapes = this._shapes;\r\n    var itemSize = visualMapModel.itemSize;\r\n    var orient = this._orient;\r\n    var useHandle = this._useHandle;\r\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\r\n\r\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\r\n\r\n\r\n    barGroup.add(shapes.outOfRange = createPolygon());\r\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\r\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\r\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\r\n\r\n    if (useHandle) {\r\n      shapes.handleThumbs = [];\r\n      shapes.handleLabels = [];\r\n      shapes.handleLabelPoints = [];\r\n\r\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\r\n\r\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\r\n    }\r\n\r\n    this._createIndicator(barGroup, itemSize, textSize, orient);\r\n\r\n    targetGroup.add(barGroup);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\r\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\r\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\r\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\r\n    handleThumb.position[0] = itemSize[0];\r\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\r\n    // transform (orient/inverse). So label is built separately but not\r\n    // use zrender/graphic/helper/RectText, and is located based on view\r\n    // group (according to handleLabelPoint) but not barGroup.\r\n\r\n    var textStyleModel = this.visualMapModel.textStyleModel;\r\n    var handleLabel = new graphic.Text({\r\n      draggable: true,\r\n      drift: onDrift,\r\n      onmousemove: function (e) {\r\n        // Fot mobile devicem, prevent screen slider on the button.\r\n        eventTool.stop(e.event);\r\n      },\r\n      ondragend: onDragEnd,\r\n      style: {\r\n        x: 0,\r\n        y: 0,\r\n        text: '',\r\n        textFont: textStyleModel.getFont(),\r\n        textFill: textStyleModel.getTextColor()\r\n      }\r\n    });\r\n    this.group.add(handleLabel);\r\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\r\n    var shapes = this._shapes;\r\n    shapes.handleThumbs[handleIndex] = handleThumb;\r\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\r\n    shapes.handleLabels[handleIndex] = handleLabel;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\r\n    var indicator = createPolygon([[0, 0]], 'move');\r\n    indicator.position[0] = itemSize[0];\r\n    indicator.attr({\r\n      invisible: true,\r\n      silent: true\r\n    });\r\n    barGroup.add(indicator);\r\n    var textStyleModel = this.visualMapModel.textStyleModel;\r\n    var indicatorLabel = new graphic.Text({\r\n      silent: true,\r\n      invisible: true,\r\n      style: {\r\n        x: 0,\r\n        y: 0,\r\n        text: '',\r\n        textFont: textStyleModel.getFont(),\r\n        textFill: textStyleModel.getTextColor()\r\n      }\r\n    });\r\n    this.group.add(indicatorLabel);\r\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\r\n    var shapes = this._shapes;\r\n    shapes.indicator = indicator;\r\n    shapes.indicatorLabel = indicatorLabel;\r\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\r\n    if (!this._useHandle) {\r\n      return;\r\n    }\r\n\r\n    this._dragging = !isEnd;\r\n\r\n    if (!isEnd) {\r\n      // Transform dx, dy to bar coordination.\r\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\r\n\r\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\r\n      // before dispatch action.\r\n\r\n\r\n      this._updateView();\r\n    } // dragEnd do not dispatch action when realtime.\r\n\r\n\r\n    if (isEnd === !this.visualMapModel.get('realtime')) {\r\n      // jshint ignore:line\r\n      this.api.dispatchAction({\r\n        type: 'selectDataRange',\r\n        from: this.uid,\r\n        visualMapId: this.visualMapModel.id,\r\n        selected: this._dataInterval.slice()\r\n      });\r\n    }\r\n\r\n    if (isEnd) {\r\n      !this._hovering && this._clearHoverLinkToSeries();\r\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\r\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _resetInterval: function () {\r\n    var visualMapModel = this.visualMapModel;\r\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\r\n    var dataExtent = visualMapModel.getExtent();\r\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\r\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\r\n   * @param {number} dx\r\n   * @param {number} dy\r\n   */\r\n  _updateInterval: function (handleIndex, delta) {\r\n    delta = delta || 0;\r\n    var visualMapModel = this.visualMapModel;\r\n    var handleEnds = this._handleEnds;\r\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\r\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\r\n    0);\r\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\r\n\r\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _updateView: function (forSketch) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var dataExtent = visualMapModel.getExtent();\r\n    var shapes = this._shapes;\r\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\r\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\r\n\r\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\r\n\r\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\r\n\r\n    shapes.inRange.setStyle({\r\n      fill: visualInRange.barColor,\r\n      opacity: visualInRange.opacity\r\n    }).setShape('points', visualInRange.barPoints);\r\n    shapes.outOfRange.setStyle({\r\n      fill: visualOutOfRange.barColor,\r\n      opacity: visualOutOfRange.opacity\r\n    }).setShape('points', visualOutOfRange.barPoints);\r\n\r\n    this._updateHandle(inRangeHandleEnds, visualInRange);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\r\n    var opts = {\r\n      forceState: forceState,\r\n      convertOpacityToAlpha: true\r\n    };\r\n\r\n    var colorStops = this._makeColorGradient(dataInterval, opts);\r\n\r\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\r\n\r\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\r\n\r\n    return {\r\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\r\n      barPoints: barPoints,\r\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _makeColorGradient: function (dataInterval, opts) {\r\n    // Considering colorHue, which is not linear, so we have to sample\r\n    // to calculate gradient color stops, but not only caculate head\r\n    // and tail.\r\n    var sampleNumber = 100; // Arbitrary value.\r\n\r\n    var colorStops = [];\r\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\r\n    colorStops.push({\r\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\r\n      offset: 0\r\n    });\r\n\r\n    for (var i = 1; i < sampleNumber; i++) {\r\n      var currValue = dataInterval[0] + step * i;\r\n\r\n      if (currValue > dataInterval[1]) {\r\n        break;\r\n      }\r\n\r\n      colorStops.push({\r\n        color: this.getControllerVisual(currValue, 'color', opts),\r\n        offset: i / sampleNumber\r\n      });\r\n    }\r\n\r\n    colorStops.push({\r\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\r\n      offset: 1\r\n    });\r\n    return colorStops;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _createBarPoints: function (handleEnds, symbolSizes) {\r\n    var itemSize = this.visualMapModel.itemSize;\r\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _createBarGroup: function (itemAlign) {\r\n    var orient = this._orient;\r\n    var inverse = this.visualMapModel.get('inverse');\r\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\r\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\r\n      rotation: Math.PI / 2\r\n    } : orient === 'horizontal' && inverse ? {\r\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\r\n      rotation: -Math.PI / 2\r\n    } : orient === 'vertical' && !inverse ? {\r\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\r\n    } : {\r\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _updateHandle: function (handleEnds, visualInRange) {\r\n    if (!this._useHandle) {\r\n      return;\r\n    }\r\n\r\n    var shapes = this._shapes;\r\n    var visualMapModel = this.visualMapModel;\r\n    var handleThumbs = shapes.handleThumbs;\r\n    var handleLabels = shapes.handleLabels;\r\n    each([0, 1], function (handleIndex) {\r\n      var handleThumb = handleThumbs[handleIndex];\r\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\r\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\r\n\r\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\r\n      handleLabels[handleIndex].setStyle({\r\n        x: textPoint[0],\r\n        y: textPoint[1],\r\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\r\n        textVerticalAlign: 'middle',\r\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\r\n      });\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} cursorValue\r\n   * @param {number} textValue\r\n   * @param {string} [rangeSymbol]\r\n   * @param {number} [halfHoverLinkSize]\r\n   */\r\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var dataExtent = visualMapModel.getExtent();\r\n    var itemSize = visualMapModel.itemSize;\r\n    var sizeExtent = [0, itemSize[1]];\r\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\r\n    var shapes = this._shapes;\r\n    var indicator = shapes.indicator;\r\n\r\n    if (!indicator) {\r\n      return;\r\n    }\r\n\r\n    indicator.position[1] = pos;\r\n    indicator.attr('invisible', false);\r\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\r\n    var opts = {\r\n      convertOpacityToAlpha: true\r\n    };\r\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\r\n    indicator.setStyle('fill', color); // Update handle label position.\r\n\r\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\r\n    var indicatorLabel = shapes.indicatorLabel;\r\n    indicatorLabel.attr('invisible', false);\r\n\r\n    var align = this._applyTransform('left', shapes.barGroup);\r\n\r\n    var orient = this._orient;\r\n    indicatorLabel.setStyle({\r\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\r\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\r\n      textAlign: orient === 'horizontal' ? 'center' : align,\r\n      x: textPoint[0],\r\n      y: textPoint[1]\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _enableHoverLinkToSeries: function () {\r\n    var self = this;\r\n\r\n    this._shapes.barGroup.on('mousemove', function (e) {\r\n      self._hovering = true;\r\n\r\n      if (!self._dragging) {\r\n        var itemSize = self.visualMapModel.itemSize;\r\n\r\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\r\n        // below or upper than sizeExtent.\r\n\r\n\r\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\r\n\r\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\r\n      }\r\n    }).on('mouseout', function () {\r\n      // When mouse is out of handle, hoverLink still need\r\n      // to be displayed when realtime is set as false.\r\n      self._hovering = false;\r\n      !self._dragging && self._clearHoverLinkToSeries();\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _enableHoverLinkFromSeries: function () {\r\n    var zr = this.api.getZr();\r\n\r\n    if (this.visualMapModel.option.hoverLink) {\r\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\r\n      zr.on('mouseout', this._hideIndicator, this);\r\n    } else {\r\n      this._clearHoverLinkFromSeries();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var itemSize = visualMapModel.itemSize;\r\n\r\n    if (!visualMapModel.option.hoverLink) {\r\n      return;\r\n    }\r\n\r\n    var sizeExtent = [0, itemSize[1]];\r\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\r\n\r\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\r\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\r\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\r\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\r\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\r\n    // where china and india has very large population.\r\n\r\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\r\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\r\n    // otherwise labels overlap, especially when dragging.\r\n\r\n    if (hoverOnBar) {\r\n      if (valueRange[0] === -Infinity) {\r\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\r\n      } else if (valueRange[1] === Infinity) {\r\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\r\n      } else {\r\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\r\n      }\r\n    } // When realtime is set as false, handles, which are in barGroup,\r\n    // also trigger hoverLink, which help user to realize where they\r\n    // focus on when dragging. (see test/heatmap-large.html)\r\n    // When realtime is set as true, highlight will not show when hover\r\n    // handle, because the label on handle, which displays a exact value\r\n    // but not range, might mislead users.\r\n\r\n\r\n    var oldBatch = this._hoverLinkDataIndices;\r\n    var newBatch = [];\r\n\r\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\r\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\r\n    }\r\n\r\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\r\n\r\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(resultBatches[0], visualMapModel));\r\n\r\n    this._dispatchHighDown('highlight', helper.makeHighDownBatch(resultBatches[1], visualMapModel));\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _hoverLinkFromSeriesMouseOver: function (e) {\r\n    var el = e.target;\r\n    var visualMapModel = this.visualMapModel;\r\n\r\n    if (!el || el.dataIndex == null) {\r\n      return;\r\n    }\r\n\r\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\r\n\r\n    if (!visualMapModel.isTargetSeries(dataModel)) {\r\n      return;\r\n    }\r\n\r\n    var data = dataModel.getData(el.dataType);\r\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\r\n\r\n    if (!isNaN(value)) {\r\n      this._showIndicator(value, value);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _hideIndicator: function () {\r\n    var shapes = this._shapes;\r\n    shapes.indicator && shapes.indicator.attr('invisible', true);\r\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearHoverLinkToSeries: function () {\r\n    this._hideIndicator();\r\n\r\n    var indices = this._hoverLinkDataIndices;\r\n\r\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(indices, this.visualMapModel));\r\n\r\n    indices.length = 0;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearHoverLinkFromSeries: function () {\r\n    this._hideIndicator();\r\n\r\n    var zr = this.api.getZr();\r\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\r\n    zr.off('mouseout', this._hideIndicator);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _applyTransform: function (vertex, element, inverse, global) {\r\n    var transform = graphic.getTransform(element, global ? null : this.group);\r\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _dispatchHighDown: function (type, batch) {\r\n    batch && batch.length && this.api.dispatchAction({\r\n      type: type,\r\n      batch: batch\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  dispose: function () {\r\n    this._clearHoverLinkFromSeries();\r\n\r\n    this._clearHoverLinkToSeries();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  remove: function () {\r\n    this._clearHoverLinkFromSeries();\r\n\r\n    this._clearHoverLinkToSeries();\r\n  }\r\n});\r\n\r\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\r\n  return new graphic.Polygon({\r\n    shape: {\r\n      points: points\r\n    },\r\n    draggable: !!onDrift,\r\n    cursor: cursor,\r\n    drift: onDrift,\r\n    onmousemove: function (e) {\r\n      // Fot mobile devicem, prevent screen slider on the button.\r\n      eventTool.stop(e.event);\r\n    },\r\n    ondragend: onDragEnd\r\n  });\r\n}\r\n\r\nfunction createHandlePoints(handleIndex, textSize) {\r\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\r\n}\r\n\r\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\r\n  return isRange ? [// indicate range\r\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\r\n  [0, 0], [5, -5], [5, 5]];\r\n}\r\n\r\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\r\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\r\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\r\n\r\n  if (hoverLinkDataSize) {\r\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\r\n  }\r\n\r\n  return halfHoverLinkSize;\r\n}\r\n\r\nfunction useHoverLinkOnHandle(visualMapModel) {\r\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\r\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\r\n}\r\n\r\nfunction getCursor(orient) {\r\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\r\n}\r\n\r\nvar _default = ContinuousView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar VisualMapModel = require(\"./VisualMapModel\");\r\n\r\nvar VisualMapping = require(\"../../visual/VisualMapping\");\r\n\r\nvar visualDefault = require(\"../../visual/visualDefault\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar reformIntervals = _number.reformIntervals;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PiecewiseModel = VisualMapModel.extend({\r\n  type: 'visualMap.piecewise',\r\n\r\n  /**\r\n   * Order Rule:\r\n   *\r\n   * option.categories / option.pieces / option.text / option.selected:\r\n   *     If !option.inverse,\r\n   *     Order when vertical: ['top', ..., 'bottom'].\r\n   *     Order when horizontal: ['left', ..., 'right'].\r\n   *     If option.inverse, the meaning of\r\n   *     the order should be reversed.\r\n   *\r\n   * this._pieceList:\r\n   *     The order is always [low, ..., high].\r\n   *\r\n   * Mapping from location to low-high:\r\n   *     If !option.inverse\r\n   *     When vertical, top is high.\r\n   *     When horizontal, right is high.\r\n   *     If option.inverse, reverse.\r\n   */\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    selected: null,\r\n    // Object. If not specified, means selected.\r\n    // When pieces and splitNumber: {'0': true, '5': true}\r\n    // When categories: {'cate1': false, 'cate3': true}\r\n    // When selected === false, means all unselected.\r\n    minOpen: false,\r\n    // Whether include values that smaller than `min`.\r\n    maxOpen: false,\r\n    // Whether include values that bigger than `max`.\r\n    align: 'auto',\r\n    // 'auto', 'left', 'right'\r\n    itemWidth: 20,\r\n    // When put the controller vertically, it is the length of\r\n    // horizontal side of each item. Otherwise, vertical side.\r\n    itemHeight: 14,\r\n    // When put the controller vertically, it is the length of\r\n    // vertical side of each item. Otherwise, horizontal side.\r\n    itemSymbol: 'roundRect',\r\n    pieceList: null,\r\n    // Each item is Object, with some of those attrs:\r\n    // {min, max, lt, gt, lte, gte, value,\r\n    // color, colorSaturation, colorAlpha, opacity,\r\n    // symbol, symbolSize}, which customize the range or visual\r\n    // coding of the certain piece. Besides, see \"Order Rule\".\r\n    categories: null,\r\n    // category names, like: ['some1', 'some2', 'some3'].\r\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\r\n    splitNumber: 5,\r\n    // If set to 5, auto split five pieces equally.\r\n    // If set to 0 and component type not set, component type will be\r\n    // determined as \"continuous\". (It is less reasonable but for ec2\r\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\r\n    selectedMode: 'multiple',\r\n    // Can be 'multiple' or 'single'.\r\n    itemGap: 10,\r\n    // The gap between two items, in px.\r\n    hoverLink: true,\r\n    // Enable hover highlight.\r\n    showLabel: null // By default, when text is used, label will hide (the logic\r\n    // is remained for compatibility reason)\r\n\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  optionUpdated: function (newOption, isInit) {\r\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\r\n    /**\r\n     * The order is always [low, ..., high].\r\n     * [{text: string, interval: Array.<number>}, ...]\r\n     * @private\r\n     * @type {Array.<Object>}\r\n     */\r\n\r\n    this._pieceList = [];\r\n    this.resetExtent();\r\n    /**\r\n     * 'pieces', 'categories', 'splitNumber'\r\n     * @type {string}\r\n     */\r\n\r\n    var mode = this._mode = this._determineMode();\r\n\r\n    resetMethods[this._mode].call(this);\r\n\r\n    this._resetSelected(newOption, isInit);\r\n\r\n    var categories = this.option.categories;\r\n    this.resetVisual(function (mappingOption, state) {\r\n      if (mode === 'categories') {\r\n        mappingOption.mappingMethod = 'category';\r\n        mappingOption.categories = zrUtil.clone(categories);\r\n      } else {\r\n        mappingOption.dataExtent = this.getExtent();\r\n        mappingOption.mappingMethod = 'piecewise';\r\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\r\n          var piece = zrUtil.clone(piece);\r\n\r\n          if (state !== 'inRange') {\r\n            // FIXME\r\n            // outOfRange do not support special visual in pieces.\r\n            piece.visual = null;\r\n          }\r\n\r\n          return piece;\r\n        });\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n  completeVisualOption: function () {\r\n    // Consider this case:\r\n    // visualMap: {\r\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\r\n    // }\r\n    // where no inRange/outOfRange set but only pieces. So we should make\r\n    // default inRange/outOfRange for this case, otherwise visuals that only\r\n    // appear in `pieces` will not be taken into account in visual encoding.\r\n    var option = this.option;\r\n    var visualTypesInPieces = {};\r\n    var visualTypes = VisualMapping.listVisualTypes();\r\n    var isCategory = this.isCategory();\r\n    zrUtil.each(option.pieces, function (piece) {\r\n      zrUtil.each(visualTypes, function (visualType) {\r\n        if (piece.hasOwnProperty(visualType)) {\r\n          visualTypesInPieces[visualType] = 1;\r\n        }\r\n      });\r\n    });\r\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\r\n      var exists = 0;\r\n      zrUtil.each(this.stateList, function (state) {\r\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\r\n      }, this);\r\n      !exists && zrUtil.each(this.stateList, function (state) {\r\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\r\n      });\r\n    }, this);\r\n\r\n    function has(obj, state, visualType) {\r\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\r\n      );\r\n    }\r\n\r\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\r\n  },\r\n  _resetSelected: function (newOption, isInit) {\r\n    var thisOption = this.option;\r\n    var pieceList = this._pieceList; // Selected do not merge but all override.\r\n\r\n    var selected = (isInit ? thisOption : newOption).selected || {};\r\n    thisOption.selected = selected; // Consider 'not specified' means true.\r\n\r\n    zrUtil.each(pieceList, function (piece, index) {\r\n      var key = this.getSelectedMapKey(piece);\r\n\r\n      if (!selected.hasOwnProperty(key)) {\r\n        selected[key] = true;\r\n      }\r\n    }, this);\r\n\r\n    if (thisOption.selectedMode === 'single') {\r\n      // Ensure there is only one selected.\r\n      var hasSel = false;\r\n      zrUtil.each(pieceList, function (piece, index) {\r\n        var key = this.getSelectedMapKey(piece);\r\n\r\n        if (selected[key]) {\r\n          hasSel ? selected[key] = false : hasSel = true;\r\n        }\r\n      }, this);\r\n    } // thisOption.selectedMode === 'multiple', default: all selected.\r\n\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  getSelectedMapKey: function (piece) {\r\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  getPieceList: function () {\r\n    return this._pieceList;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @return {string}\r\n   */\r\n  _determineMode: function () {\r\n    var option = this.option;\r\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  setSelected: function (selected) {\r\n    this.option.selected = zrUtil.clone(selected);\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  getValueState: function (value) {\r\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\r\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\r\n   * @return {Array.<Object>} [{seriesId, dataIndex: <Array.<number>>}, ...]\r\n   */\r\n  findTargetDataIndices: function (pieceIndex) {\r\n    var result = [];\r\n    this.eachTargetSeries(function (seriesModel) {\r\n      var dataIndices = [];\r\n      var data = seriesModel.getData();\r\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\r\n        // Should always base on model pieceList, because it is order sensitive.\r\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\r\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\r\n      }, this);\r\n      result.push({\r\n        seriesId: seriesModel.id,\r\n        dataIndex: dataIndices\r\n      });\r\n    }, this);\r\n    return result;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} piece piece.value or piece.interval is required.\r\n   * @return {number} Can be Infinity or -Infinity\r\n   */\r\n  getRepresentValue: function (piece) {\r\n    var representValue;\r\n\r\n    if (this.isCategory()) {\r\n      representValue = piece.value;\r\n    } else {\r\n      if (piece.value != null) {\r\n        representValue = piece.value;\r\n      } else {\r\n        var pieceInterval = piece.interval || [];\r\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\r\n      }\r\n    }\r\n\r\n    return representValue;\r\n  },\r\n  getVisualMeta: function (getColorVisual) {\r\n    // Do not support category. (category axis is ordinal, numerical)\r\n    if (this.isCategory()) {\r\n      return;\r\n    }\r\n\r\n    var stops = [];\r\n    var outerColors = [];\r\n    var visualMapModel = this;\r\n\r\n    function setStop(interval, valueState) {\r\n      var representValue = visualMapModel.getRepresentValue({\r\n        interval: interval\r\n      });\r\n\r\n      if (!valueState) {\r\n        valueState = visualMapModel.getValueState(representValue);\r\n      }\r\n\r\n      var color = getColorVisual(representValue, valueState);\r\n\r\n      if (interval[0] === -Infinity) {\r\n        outerColors[0] = color;\r\n      } else if (interval[1] === Infinity) {\r\n        outerColors[1] = color;\r\n      } else {\r\n        stops.push({\r\n          value: interval[0],\r\n          color: color\r\n        }, {\r\n          value: interval[1],\r\n          color: color\r\n        });\r\n      }\r\n    } // Suplement\r\n\r\n\r\n    var pieceList = this._pieceList.slice();\r\n\r\n    if (!pieceList.length) {\r\n      pieceList.push({\r\n        interval: [-Infinity, Infinity]\r\n      });\r\n    } else {\r\n      var edge = pieceList[0].interval[0];\r\n      edge !== -Infinity && pieceList.unshift({\r\n        interval: [-Infinity, edge]\r\n      });\r\n      edge = pieceList[pieceList.length - 1].interval[1];\r\n      edge !== Infinity && pieceList.push({\r\n        interval: [edge, Infinity]\r\n      });\r\n    }\r\n\r\n    var curr = -Infinity;\r\n    zrUtil.each(pieceList, function (piece) {\r\n      var interval = piece.interval;\r\n\r\n      if (interval) {\r\n        // Fulfill gap.\r\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\r\n        setStop(interval.slice());\r\n        curr = interval[1];\r\n      }\r\n    }, this);\r\n    return {\r\n      stops: stops,\r\n      outerColors: outerColors\r\n    };\r\n  }\r\n});\r\n/**\r\n * Key is this._mode\r\n * @type {Object}\r\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\r\n */\r\n\r\nvar resetMethods = {\r\n  splitNumber: function () {\r\n    var thisOption = this.option;\r\n    var pieceList = this._pieceList;\r\n    var precision = Math.min(thisOption.precision, 20);\r\n    var dataExtent = this.getExtent();\r\n    var splitNumber = thisOption.splitNumber;\r\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\r\n    thisOption.splitNumber = splitNumber;\r\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\r\n\r\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\r\n      precision++;\r\n    }\r\n\r\n    thisOption.precision = precision;\r\n    splitStep = +splitStep.toFixed(precision);\r\n\r\n    if (thisOption.minOpen) {\r\n      pieceList.push({\r\n        interval: [-Infinity, dataExtent[0]],\r\n        close: [0, 0]\r\n      });\r\n    }\r\n\r\n    for (var index = 0, curr = dataExtent[0]; index < splitNumber; curr += splitStep, index++) {\r\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\r\n      pieceList.push({\r\n        interval: [curr, max],\r\n        close: [1, 1]\r\n      });\r\n    }\r\n\r\n    if (thisOption.maxOpen) {\r\n      pieceList.push({\r\n        interval: [dataExtent[1], Infinity],\r\n        close: [0, 0]\r\n      });\r\n    }\r\n\r\n    reformIntervals(pieceList);\r\n    zrUtil.each(pieceList, function (piece, index) {\r\n      piece.index = index;\r\n      piece.text = this.formatValueText(piece.interval);\r\n    }, this);\r\n  },\r\n  categories: function () {\r\n    var thisOption = this.option;\r\n    zrUtil.each(thisOption.categories, function (cate) {\r\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\r\n      // 是否改一致。\r\n      this._pieceList.push({\r\n        text: this.formatValueText(cate, true),\r\n        value: cate\r\n      });\r\n    }, this); // See \"Order Rule\".\r\n\r\n    normalizeReverse(thisOption, this._pieceList);\r\n  },\r\n  pieces: function () {\r\n    var thisOption = this.option;\r\n    var pieceList = this._pieceList;\r\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\r\n      if (!zrUtil.isObject(pieceListItem)) {\r\n        pieceListItem = {\r\n          value: pieceListItem\r\n        };\r\n      }\r\n\r\n      var item = {\r\n        text: '',\r\n        index: index\r\n      };\r\n\r\n      if (pieceListItem.label != null) {\r\n        item.text = pieceListItem.label;\r\n      }\r\n\r\n      if (pieceListItem.hasOwnProperty('value')) {\r\n        var value = item.value = pieceListItem.value;\r\n        item.interval = [value, value];\r\n        item.close = [1, 1];\r\n      } else {\r\n        // `min` `max` is legacy option.\r\n        // `lt` `gt` `lte` `gte` is recommanded.\r\n        var interval = item.interval = [];\r\n        var close = item.close = [0, 0];\r\n        var closeList = [1, 0, 1];\r\n        var infinityList = [-Infinity, Infinity];\r\n        var useMinMax = [];\r\n\r\n        for (var lg = 0; lg < 2; lg++) {\r\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\r\n\r\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\r\n            interval[lg] = pieceListItem[names[i]];\r\n            close[lg] = closeList[i];\r\n            useMinMax[lg] = i === 2;\r\n          }\r\n\r\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\r\n        }\r\n\r\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\r\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\r\n\r\n        if (interval[0] === interval[1] && close[0] && close[1]) {\r\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\r\n          // we use value to lift the priority when min === max\r\n          item.value = interval[0];\r\n        }\r\n      }\r\n\r\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\r\n      pieceList.push(item);\r\n    }, this); // See \"Order Rule\".\r\n\r\n    normalizeReverse(thisOption, pieceList); // Only pieces\r\n\r\n    reformIntervals(pieceList);\r\n    zrUtil.each(pieceList, function (piece) {\r\n      var close = piece.close;\r\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\r\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\r\n    }, this);\r\n  }\r\n};\r\n\r\nfunction normalizeReverse(thisOption, pieceList) {\r\n  var inverse = thisOption.inverse;\r\n\r\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\r\n    pieceList.reverse();\r\n  }\r\n}\r\n\r\nvar _default = PiecewiseModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar VisualMapView = require(\"./VisualMapView\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _symbol = require(\"../../util/symbol\");\r\n\r\nvar createSymbol = _symbol.createSymbol;\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar helper = require(\"./helper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PiecewiseVisualMapView = VisualMapView.extend({\r\n  type: 'visualMap.piecewise',\r\n\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n  doRender: function () {\r\n    var thisGroup = this.group;\r\n    thisGroup.removeAll();\r\n    var visualMapModel = this.visualMapModel;\r\n    var textGap = visualMapModel.get('textGap');\r\n    var textStyleModel = visualMapModel.textStyleModel;\r\n    var textFont = textStyleModel.getFont();\r\n    var textFill = textStyleModel.getTextColor();\r\n\r\n    var itemAlign = this._getItemAlign();\r\n\r\n    var itemSize = visualMapModel.itemSize;\r\n\r\n    var viewData = this._getViewData();\r\n\r\n    var endsText = viewData.endsText;\r\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\r\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\r\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\r\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\r\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\r\n    this.renderBackground(thisGroup);\r\n    this.positionGroup(thisGroup);\r\n\r\n    function renderItem(item) {\r\n      var piece = item.piece;\r\n      var itemGroup = new graphic.Group();\r\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\r\n\r\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\r\n\r\n      var representValue = visualMapModel.getRepresentValue(piece);\r\n\r\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\r\n\r\n      if (showLabel) {\r\n        var visualState = this.visualMapModel.getValueState(representValue);\r\n        itemGroup.add(new graphic.Text({\r\n          style: {\r\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\r\n            y: itemSize[1] / 2,\r\n            text: piece.text,\r\n            textVerticalAlign: 'middle',\r\n            textAlign: itemAlign,\r\n            textFont: textFont,\r\n            textFill: textFill,\r\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\r\n          }\r\n        }));\r\n      }\r\n\r\n      thisGroup.add(itemGroup);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _enableHoverLink: function (itemGroup, pieceIndex) {\r\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\r\n\r\n    function onHoverLink(method) {\r\n      var visualMapModel = this.visualMapModel;\r\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\r\n        type: method,\r\n        batch: helper.makeHighDownBatch(visualMapModel.findTargetDataIndices(pieceIndex), visualMapModel)\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _getItemAlign: function () {\r\n    var visualMapModel = this.visualMapModel;\r\n    var modelOption = visualMapModel.option;\r\n\r\n    if (modelOption.orient === 'vertical') {\r\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\r\n    } else {\r\n      // horizontal, most case left unless specifying right.\r\n      var align = modelOption.align;\r\n\r\n      if (!align || align === 'auto') {\r\n        align = 'left';\r\n      }\r\n\r\n      return align;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    var itemGroup = new graphic.Group();\r\n    var textStyleModel = this.visualMapModel.textStyleModel;\r\n    itemGroup.add(new graphic.Text({\r\n      style: {\r\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\r\n        y: itemSize[1] / 2,\r\n        textVerticalAlign: 'middle',\r\n        textAlign: showLabel ? itemAlign : 'center',\r\n        text: text,\r\n        textFont: textStyleModel.getFont(),\r\n        textFill: textStyleModel.getTextColor()\r\n      }\r\n    }));\r\n    group.add(itemGroup);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\r\n   */\r\n  _getViewData: function () {\r\n    var visualMapModel = this.visualMapModel;\r\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\r\n      return {\r\n        piece: piece,\r\n        indexInModelPieceList: index\r\n      };\r\n    });\r\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\r\n\r\n    var orient = visualMapModel.get('orient');\r\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\r\n\r\n    if (orient === 'horizontal' ? inverse : !inverse) {\r\n      viewPieceList.reverse();\r\n    } // Origin order of endsText is [high, low]\r\n    else if (endsText) {\r\n        endsText = endsText.slice().reverse();\r\n      }\r\n\r\n    return {\r\n      viewPieceList: viewPieceList,\r\n      endsText: endsText\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _createItemSymbol: function (group, representValue, shapeParam) {\r\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _onItemClick: function (piece) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var option = visualMapModel.option;\r\n    var selected = zrUtil.clone(option.selected);\r\n    var newKey = visualMapModel.getSelectedMapKey(piece);\r\n\r\n    if (option.selectedMode === 'single') {\r\n      selected[newKey] = true;\r\n      zrUtil.each(selected, function (o, key) {\r\n        selected[key] = key === newKey;\r\n      });\r\n    } else {\r\n      selected[newKey] = !selected[newKey];\r\n    }\r\n\r\n    this.api.dispatchAction({\r\n      type: 'selectDataRange',\r\n      from: this.uid,\r\n      visualMapId: this.visualMapModel.id,\r\n      selected: selected\r\n    });\r\n  }\r\n});\r\nvar _default = PiecewiseVisualMapView;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar visualDefault = require(\"../../visual/visualDefault\");\r\n\r\nvar VisualMapping = require(\"../../visual/VisualMapping\");\r\n\r\nvar visualSolution = require(\"../../visual/visualSolution\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar mapVisual = VisualMapping.mapVisual;\r\nvar eachVisual = VisualMapping.eachVisual;\r\nvar isArray = zrUtil.isArray;\r\nvar each = zrUtil.each;\r\nvar asc = numberUtil.asc;\r\nvar linearMap = numberUtil.linearMap;\r\nvar noop = zrUtil.noop;\r\nvar VisualMapModel = echarts.extendComponentModel({\r\n  type: 'visualMap',\r\n  dependencies: ['series'],\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {Array.<string>}\r\n   */\r\n  stateList: ['inRange', 'outOfRange'],\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {Array.<string>}\r\n   */\r\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\r\n\r\n  /**\r\n   * [lowerBound, upperBound]\r\n   *\r\n   * @readOnly\r\n   * @type {Array.<number>}\r\n   */\r\n  dataBound: [-Infinity, Infinity],\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {string|Object}\r\n   */\r\n  layoutMode: {\r\n    type: 'box',\r\n    ignoreSize: true\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    show: true,\r\n    zlevel: 0,\r\n    z: 4,\r\n    seriesIndex: 'all',\r\n    // 'all' or null/undefined: all series.\r\n    // A number or an array of number: the specified series.\r\n    // set min: 0, max: 200, only for campatible with ec2.\r\n    // In fact min max should not have default value.\r\n    min: 0,\r\n    // min value, must specified if pieces is not specified.\r\n    max: 200,\r\n    // max value, must specified if pieces is not specified.\r\n    dimension: null,\r\n    inRange: null,\r\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\r\n    // 'symbol', 'symbolSize'\r\n    outOfRange: null,\r\n    // 'color', 'colorHue', 'colorSaturation',\r\n    // 'colorLightness', 'colorAlpha',\r\n    // 'symbol', 'symbolSize'\r\n    left: 0,\r\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\r\n    right: null,\r\n    // The same as left.\r\n    top: null,\r\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\r\n    bottom: 0,\r\n    // The same as top.\r\n    itemWidth: null,\r\n    itemHeight: null,\r\n    inverse: false,\r\n    orient: 'vertical',\r\n    // 'horizontal' ¦ 'vertical'\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderColor: '#ccc',\r\n    // 值域边框颜色\r\n    contentColor: '#5793f3',\r\n    inactiveColor: '#aaa',\r\n    borderWidth: 0,\r\n    // 值域边框线宽，单位px，默认为0（无边框）\r\n    padding: 5,\r\n    // 值域内边距，单位px，默认各方向内边距为5，\r\n    // 接受数组分别设定上右下左边距，同css\r\n    textGap: 10,\r\n    //\r\n    precision: 0,\r\n    // 小数精度，默认为0，无小数点\r\n    color: null,\r\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\r\n    formatter: null,\r\n    text: null,\r\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\r\n    textStyle: {\r\n      color: '#333' // 值域文字颜色\r\n\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  init: function (option, parentModel, ecModel) {\r\n    /**\r\n     * @private\r\n     * @type {Array.<number>}\r\n     */\r\n    this._dataExtent;\r\n    /**\r\n     * @readOnly\r\n     */\r\n\r\n    this.targetVisuals = {};\r\n    /**\r\n     * @readOnly\r\n     */\r\n\r\n    this.controllerVisuals = {};\r\n    /**\r\n     * @readOnly\r\n     */\r\n\r\n    this.textStyleModel;\r\n    /**\r\n     * [width, height]\r\n     * @readOnly\r\n     * @type {Array.<number>}\r\n     */\r\n\r\n    this.itemSize;\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  optionUpdated: function (newOption, isInit) {\r\n    var thisOption = this.option; // FIXME\r\n    // necessary?\r\n    // Disable realtime view update if canvas is not supported.\r\n\r\n    if (!env.canvasSupported) {\r\n      thisOption.realtime = false;\r\n    }\r\n\r\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\r\n    this.textStyleModel = this.getModel('textStyle');\r\n    this.resetItemSize();\r\n    this.completeVisualOption();\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  resetVisual: function (supplementVisualOption) {\r\n    var stateList = this.stateList;\r\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\r\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\r\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   * @return {Array.<number>} An array of series indices.\r\n   */\r\n  getTargetSeriesIndices: function () {\r\n    var optionSeriesIndex = this.option.seriesIndex;\r\n    var seriesIndices = [];\r\n\r\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\r\n      this.ecModel.eachSeries(function (seriesModel, index) {\r\n        seriesIndices.push(index);\r\n      });\r\n    } else {\r\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\r\n    }\r\n\r\n    return seriesIndices;\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  eachTargetSeries: function (callback, context) {\r\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\r\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @pubilc\r\n   */\r\n  isTargetSeries: function (seriesModel) {\r\n    var is = false;\r\n    this.eachTargetSeries(function (model) {\r\n      model === seriesModel && (is = true);\r\n    });\r\n    return is;\r\n  },\r\n\r\n  /**\r\n   * @example\r\n   * this.formatValueText(someVal); // format single numeric value to text.\r\n   * this.formatValueText(someVal, true); // format single category value to text.\r\n   * this.formatValueText([min, max]); // format numeric min-max to text.\r\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\r\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\r\n   *\r\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\r\n   * @param {boolean} [isCategory=false] Only available when value is number.\r\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\r\n   * @return {string}\r\n   * @protected\r\n   */\r\n  formatValueText: function (value, isCategory, edgeSymbols) {\r\n    var option = this.option;\r\n    var precision = option.precision;\r\n    var dataBound = this.dataBound;\r\n    var formatter = option.formatter;\r\n    var isMinMax;\r\n    var textValue;\r\n    edgeSymbols = edgeSymbols || ['<', '>'];\r\n\r\n    if (zrUtil.isArray(value)) {\r\n      value = value.slice();\r\n      isMinMax = true;\r\n    }\r\n\r\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\r\n\r\n    if (zrUtil.isString(formatter)) {\r\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\r\n    } else if (zrUtil.isFunction(formatter)) {\r\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\r\n    }\r\n\r\n    if (isMinMax) {\r\n      if (value[0] === dataBound[0]) {\r\n        return edgeSymbols[0] + ' ' + textValue[1];\r\n      } else if (value[1] === dataBound[1]) {\r\n        return edgeSymbols[1] + ' ' + textValue[0];\r\n      } else {\r\n        return textValue[0] + ' - ' + textValue[1];\r\n      }\r\n    } else {\r\n      // Format single value (includes category case).\r\n      return textValue;\r\n    }\r\n\r\n    function toFixed(val) {\r\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  resetExtent: function () {\r\n    var thisOption = this.option; // Can not calculate data extent by data here.\r\n    // Because series and data may be modified in processing stage.\r\n    // So we do not support the feature \"auto min/max\".\r\n\r\n    var extent = asc([thisOption.min, thisOption.max]);\r\n    this._dataExtent = extent;\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @param {module:echarts/data/List} list\r\n   * @return {string} Concrete dimention. If return null/undefined,\r\n   *                  no dimension used.\r\n   */\r\n  getDataDimension: function (list) {\r\n    var optDim = this.option.dimension;\r\n    var listDimensions = list.dimensions;\r\n\r\n    if (optDim == null && !listDimensions.length) {\r\n      return;\r\n    }\r\n\r\n    if (optDim != null) {\r\n      return list.getDimension(optDim);\r\n    }\r\n\r\n    var dimNames = list.dimensions;\r\n\r\n    for (var i = dimNames.length - 1; i >= 0; i--) {\r\n      var dimName = dimNames[i];\r\n      var dimInfo = list.getDimensionInfo(dimName);\r\n\r\n      if (!dimInfo.isCalculationCoord) {\r\n        return dimName;\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  getExtent: function () {\r\n    return this._dataExtent.slice();\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  completeVisualOption: function () {\r\n    var ecModel = this.ecModel;\r\n    var thisOption = this.option;\r\n    var base = {\r\n      inRange: thisOption.inRange,\r\n      outOfRange: thisOption.outOfRange\r\n    };\r\n    var target = thisOption.target || (thisOption.target = {});\r\n    var controller = thisOption.controller || (thisOption.controller = {});\r\n    zrUtil.merge(target, base); // Do not override\r\n\r\n    zrUtil.merge(controller, base); // Do not override\r\n\r\n    var isCategory = this.isCategory();\r\n    completeSingle.call(this, target);\r\n    completeSingle.call(this, controller);\r\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\r\n\r\n    completeController.call(this, controller);\r\n\r\n    function completeSingle(base) {\r\n      // Compatible with ec2 dataRange.color.\r\n      // The mapping order of dataRange.color is: [high value, ..., low value]\r\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\r\n      // Notice: ec2 has no inverse.\r\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\r\n      // So adding color only when no inRange defined.\r\n      && !base.inRange) {\r\n        base.inRange = {\r\n          color: thisOption.color.slice().reverse()\r\n        };\r\n      } // Compatible with previous logic, always give a defautl color, otherwise\r\n      // simple config with no inRange and outOfRange will not work.\r\n      // Originally we use visualMap.color as the default color, but setOption at\r\n      // the second time the default color will be erased. So we change to use\r\n      // constant DEFAULT_COLOR.\r\n      // If user do not want the default color, set inRange: {color: null}.\r\n\r\n\r\n      base.inRange = base.inRange || {\r\n        color: ecModel.get('gradientColor')\r\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\r\n\r\n      each(this.stateList, function (state) {\r\n        var visualType = base[state];\r\n\r\n        if (zrUtil.isString(visualType)) {\r\n          var defa = visualDefault.get(visualType, 'active', isCategory);\r\n\r\n          if (defa) {\r\n            base[state] = {};\r\n            base[state][visualType] = defa;\r\n          } else {\r\n            // Mark as not specified.\r\n            delete base[state];\r\n          }\r\n        }\r\n      }, this);\r\n    }\r\n\r\n    function completeInactive(base, stateExist, stateAbsent) {\r\n      var optExist = base[stateExist];\r\n      var optAbsent = base[stateAbsent];\r\n\r\n      if (optExist && !optAbsent) {\r\n        optAbsent = base[stateAbsent] = {};\r\n        each(optExist, function (visualData, visualType) {\r\n          if (!VisualMapping.isValidType(visualType)) {\r\n            return;\r\n          }\r\n\r\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\r\n\r\n          if (defa != null) {\r\n            optAbsent[visualType] = defa; // Compatibable with ec2:\r\n            // Only inactive color to rgba(0,0,0,0) can not\r\n            // make label transparent, so use opacity also.\r\n\r\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\r\n              optAbsent.opacity = [0, 0];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    function completeController(controller) {\r\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\r\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\r\n      var inactiveColor = this.get('inactiveColor');\r\n      each(this.stateList, function (state) {\r\n        var itemSize = this.itemSize;\r\n        var visuals = controller[state]; // Set inactive color for controller if no other color\r\n        // attr (like colorAlpha) specified.\r\n\r\n        if (!visuals) {\r\n          visuals = controller[state] = {\r\n            color: isCategory ? inactiveColor : [inactiveColor]\r\n          };\r\n        } // Consistent symbol and symbolSize if not specified.\r\n\r\n\r\n        if (visuals.symbol == null) {\r\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\r\n        }\r\n\r\n        if (visuals.symbolSize == null) {\r\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\r\n        } // Filter square and none.\r\n\r\n\r\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\r\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\r\n        }); // Normalize symbolSize\r\n\r\n        var symbolSize = visuals.symbolSize;\r\n\r\n        if (symbolSize != null) {\r\n          var max = -Infinity; // symbolSize can be object when categories defined.\r\n\r\n          eachVisual(symbolSize, function (value) {\r\n            value > max && (max = value);\r\n          });\r\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\r\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\r\n          });\r\n        }\r\n      }, this);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  resetItemSize: function () {\r\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  isCategory: function () {\r\n    return !!this.option.categories;\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @abstract\r\n   */\r\n  setSelected: noop,\r\n\r\n  /**\r\n   * @public\r\n   * @abstract\r\n   * @param {*|module:echarts/data/List} valueOrData\r\n   * @param {number} dataIndex\r\n   * @return {string} state See this.stateList\r\n   */\r\n  getValueState: noop,\r\n\r\n  /**\r\n   * FIXME\r\n   * Do not publish to thirt-part-dev temporarily\r\n   * util the interface is stable. (Should it return\r\n   * a function but not visual meta?)\r\n   *\r\n   * @pubilc\r\n   * @abstract\r\n   * @param {Function} getColorVisual\r\n   *        params: value, valueState\r\n   *        return: color\r\n   * @return {Object} visualMeta\r\n   *        should includes {stops, outerColors}\r\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\r\n   */\r\n  getVisualMeta: noop\r\n});\r\nvar _default = VisualMapModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar VisualMapping = require(\"../../visual/VisualMapping\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendComponentView({\r\n  type: 'visualMap',\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {Object}\r\n   */\r\n  autoPositionValues: {\r\n    left: 1,\r\n    right: 1,\r\n    top: 1,\r\n    bottom: 1\r\n  },\r\n  init: function (ecModel, api) {\r\n    /**\r\n     * @readOnly\r\n     * @type {module:echarts/model/Global}\r\n     */\r\n    this.ecModel = ecModel;\r\n    /**\r\n     * @readOnly\r\n     * @type {module:echarts/ExtensionAPI}\r\n     */\r\n\r\n    this.api = api;\r\n    /**\r\n     * @readOnly\r\n     * @type {module:echarts/component/visualMap/visualMapModel}\r\n     */\r\n\r\n    this.visualMapModel;\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  render: function (visualMapModel, ecModel, api, payload) {\r\n    this.visualMapModel = visualMapModel;\r\n\r\n    if (visualMapModel.get('show') === false) {\r\n      this.group.removeAll();\r\n      return;\r\n    }\r\n\r\n    this.doRender.apply(this, arguments);\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  renderBackground: function (group) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\r\n    var rect = group.getBoundingRect();\r\n    group.add(new graphic.Rect({\r\n      z2: -1,\r\n      // Lay background rect on the lowest layer.\r\n      silent: true,\r\n      shape: {\r\n        x: rect.x - padding[3],\r\n        y: rect.y - padding[0],\r\n        width: rect.width + padding[3] + padding[1],\r\n        height: rect.height + padding[0] + padding[2]\r\n      },\r\n      style: {\r\n        fill: visualMapModel.get('backgroundColor'),\r\n        stroke: visualMapModel.get('borderColor'),\r\n        lineWidth: visualMapModel.get('borderWidth')\r\n      }\r\n    }));\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   * @param {number} targetValue can be Infinity or -Infinity\r\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\r\n   * @param {Object} [opts]\r\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\r\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\r\n   * @return {*} Visual value.\r\n   */\r\n  getControllerVisual: function (targetValue, visualCluster, opts) {\r\n    opts = opts || {};\r\n    var forceState = opts.forceState;\r\n    var visualMapModel = this.visualMapModel;\r\n    var visualObj = {}; // Default values.\r\n\r\n    if (visualCluster === 'symbol') {\r\n      visualObj.symbol = visualMapModel.get('itemSymbol');\r\n    }\r\n\r\n    if (visualCluster === 'color') {\r\n      var defaultColor = visualMapModel.get('contentColor');\r\n      visualObj.color = defaultColor;\r\n    }\r\n\r\n    function getter(key) {\r\n      return visualObj[key];\r\n    }\r\n\r\n    function setter(key, value) {\r\n      visualObj[key] = value;\r\n    }\r\n\r\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\r\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\r\n    zrUtil.each(visualTypes, function (type) {\r\n      var visualMapping = mappings[type];\r\n\r\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\r\n        type = 'colorAlpha';\r\n        visualMapping = mappings.__alphaForOpacity;\r\n      }\r\n\r\n      if (VisualMapping.dependsOn(type, visualCluster)) {\r\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\r\n      }\r\n    });\r\n    return visualObj[visualCluster];\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  positionGroup: function (group) {\r\n    var model = this.visualMapModel;\r\n    var api = this.api;\r\n    layout.positionElement(group, model.getBoxLayoutParams(), {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   * @abstract\r\n   */\r\n  doRender: zrUtil.noop\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _layout = require(\"../../util/layout\");\r\n\r\nvar getLayoutRect = _layout.getLayoutRect;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\r\n * @param {module:echarts/ExtensionAPI} api\r\n * @param {Array.<number>} itemSize always [short, long]\r\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\r\n */\r\nfunction getItemAlign(visualMapModel, api, itemSize) {\r\n  var modelOption = visualMapModel.option;\r\n  var itemAlign = modelOption.align;\r\n\r\n  if (itemAlign != null && itemAlign !== 'auto') {\r\n    return itemAlign;\r\n  } // Auto decision align.\r\n\r\n\r\n  var ecSize = {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  };\r\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\r\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\r\n  var reals = paramsSet[realIndex];\r\n  var fakeValue = [0, null, 10];\r\n  var layoutInput = {};\r\n\r\n  for (var i = 0; i < 3; i++) {\r\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\r\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\r\n  }\r\n\r\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\r\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\r\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\r\n}\r\n/**\r\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\r\n * dataIndexInside means filtered index.\r\n */\r\n\r\n\r\nfunction makeHighDownBatch(batch, visualMapModel) {\r\n  zrUtil.each(batch || [], function (batchItem) {\r\n    if (batchItem.dataIndex != null) {\r\n      batchItem.dataIndexInside = batchItem.dataIndex;\r\n      batchItem.dataIndex = null;\r\n    }\r\n\r\n    batchItem.highlightKey = 'visualMap' + (visualMapModel ? visualMapModel.componentIndex : '');\r\n  });\r\n  return batch;\r\n}\r\n\r\nexports.getItemAlign = getItemAlign;\r\nexports.makeHighDownBatch = makeHighDownBatch;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\n\r\nfunction _default(option) {\r\n  var visualMap = option && option.visualMap;\r\n\r\n  if (!zrUtil.isArray(visualMap)) {\r\n    visualMap = visualMap ? [visualMap] : [];\r\n  }\r\n\r\n  each(visualMap, function (opt) {\r\n    if (!opt) {\r\n      return;\r\n    } // rename splitList to pieces\r\n\r\n\r\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\r\n      opt.pieces = opt.splitList;\r\n      delete opt.splitList;\r\n    }\r\n\r\n    var pieces = opt.pieces;\r\n\r\n    if (pieces && zrUtil.isArray(pieces)) {\r\n      each(pieces, function (piece) {\r\n        if (zrUtil.isObject(piece)) {\r\n          if (has(piece, 'start') && !has(piece, 'min')) {\r\n            piece.min = piece.start;\r\n          }\r\n\r\n          if (has(piece, 'end') && !has(piece, 'max')) {\r\n            piece.max = piece.end;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction has(obj, name) {\r\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Component = require(\"../../model/Component\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\r\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\r\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar visualSolution = require(\"../../visual/visualSolution\");\r\n\r\nvar VisualMapping = require(\"../../visual/VisualMapping\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\r\necharts.registerVisual(VISUAL_PRIORITY, {\r\n  createOnAllSeries: true,\r\n  reset: function (seriesModel, ecModel) {\r\n    var resetDefines = [];\r\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\r\n      var pipelineContext = seriesModel.pipelineContext;\r\n\r\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\r\n        return;\r\n      }\r\n\r\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\r\n    });\r\n    return resetDefines;\r\n  }\r\n}); // Only support color.\r\n\r\necharts.registerVisual(VISUAL_PRIORITY, {\r\n  createOnAllSeries: true,\r\n  reset: function (seriesModel, ecModel) {\r\n    var data = seriesModel.getData();\r\n    var visualMetaList = [];\r\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\r\n      if (visualMapModel.isTargetSeries(seriesModel)) {\r\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\r\n          stops: [],\r\n          outerColors: []\r\n        };\r\n        var concreteDim = visualMapModel.getDataDimension(data);\r\n        var dimInfo = data.getDimensionInfo(concreteDim);\r\n\r\n        if (dimInfo != null) {\r\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\r\n          visualMeta.dimension = dimInfo.index;\r\n          visualMetaList.push(visualMeta);\r\n        }\r\n      }\r\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\r\n\r\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\r\n  }\r\n}); // FIXME\r\n// performance and export for heatmap?\r\n// value can be Infinity or -Infinity\r\n\r\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\r\n  var mappings = visualMapModel.targetVisuals[valueState];\r\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\r\n  var resultVisual = {\r\n    color: seriesModel.getData().getVisual('color') // default color.\r\n\r\n  };\r\n\r\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\r\n    var type = visualTypes[i];\r\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\r\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\r\n  }\r\n\r\n  return resultVisual.color;\r\n\r\n  function getVisual(key) {\r\n    return resultVisual[key];\r\n  }\r\n\r\n  function setVisual(key, value) {\r\n    resultVisual[key] = value;\r\n  }\r\n}","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar actionInfo = {\r\n  type: 'selectDataRange',\r\n  event: 'dataRangeSelected',\r\n  // FIXME use updateView appears wrong\r\n  update: 'update'\r\n};\r\necharts.registerAction(actionInfo, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'visualMap',\r\n    query: payload\r\n  }, function (model) {\r\n    model.setSelected(payload.selected);\r\n  });\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\r\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\r\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\r\n// declaration is behind of the using position (for example in `Model.extent`,\r\n// And tools like rollup can not analysis the dependency if not import).\r\nvar dev; // In browser\r\n\r\nif (typeof window !== 'undefined') {\r\n  dev = window.__DEV__;\r\n} // In node\r\nelse if (typeof global !== 'undefined') {\r\n    dev = global.__DEV__;\r\n  }\r\n\r\nif (typeof dev === 'undefined') {\r\n  dev = true;\r\n}\r\n\r\nvar __DEV__ = dev;\r\nexports.__DEV__ = __DEV__;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\nvar map = _util.map;\r\n\r\nvar _number = require(\"../util/number\");\r\n\r\nvar linearMap = _number.linearMap;\r\nvar getPixelPrecision = _number.getPixelPrecision;\r\nvar round = _number.round;\r\n\r\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\r\n\r\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\r\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\r\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar NORMALIZED_EXTENT = [0, 1];\r\n/**\r\n * Base class of Axis.\r\n * @constructor\r\n */\r\n\r\nvar Axis = function (dim, scale, extent) {\r\n  /**\r\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\r\n   * @type {string}\r\n   */\r\n  this.dim = dim;\r\n  /**\r\n   * Axis scale\r\n   * @type {module:echarts/coord/scale/*}\r\n   */\r\n\r\n  this.scale = scale;\r\n  /**\r\n   * @type {Array.<number>}\r\n   * @private\r\n   */\r\n\r\n  this._extent = extent || [0, 0];\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n\r\n  this.inverse = false;\r\n  /**\r\n   * Usually true when axis has a ordinal scale\r\n   * @type {boolean}\r\n   */\r\n\r\n  this.onBand = false;\r\n};\r\n\r\nAxis.prototype = {\r\n  constructor: Axis,\r\n\r\n  /**\r\n   * If axis extent contain given coord\r\n   * @param {number} coord\r\n   * @return {boolean}\r\n   */\r\n  contain: function (coord) {\r\n    var extent = this._extent;\r\n    var min = Math.min(extent[0], extent[1]);\r\n    var max = Math.max(extent[0], extent[1]);\r\n    return coord >= min && coord <= max;\r\n  },\r\n\r\n  /**\r\n   * If axis extent contain given data\r\n   * @param {number} data\r\n   * @return {boolean}\r\n   */\r\n  containData: function (data) {\r\n    return this.scale.contain(data);\r\n  },\r\n\r\n  /**\r\n   * Get coord extent.\r\n   * @return {Array.<number>}\r\n   */\r\n  getExtent: function () {\r\n    return this._extent.slice();\r\n  },\r\n\r\n  /**\r\n   * Get precision used for formatting\r\n   * @param {Array.<number>} [dataExtent]\r\n   * @return {number}\r\n   */\r\n  getPixelPrecision: function (dataExtent) {\r\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\r\n  },\r\n\r\n  /**\r\n   * Set coord extent\r\n   * @param {number} start\r\n   * @param {number} end\r\n   */\r\n  setExtent: function (start, end) {\r\n    var extent = this._extent;\r\n    extent[0] = start;\r\n    extent[1] = end;\r\n  },\r\n\r\n  /**\r\n   * Convert data to coord. Data is the rank if it has an ordinal scale\r\n   * @param {number} data\r\n   * @param  {boolean} clamp\r\n   * @return {number}\r\n   */\r\n  dataToCoord: function (data, clamp) {\r\n    var extent = this._extent;\r\n    var scale = this.scale;\r\n    data = scale.normalize(data);\r\n\r\n    if (this.onBand && scale.type === 'ordinal') {\r\n      extent = extent.slice();\r\n      fixExtentWithBands(extent, scale.count());\r\n    }\r\n\r\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\r\n  },\r\n\r\n  /**\r\n   * Convert coord to data. Data is the rank if it has an ordinal scale\r\n   * @param {number} coord\r\n   * @param  {boolean} clamp\r\n   * @return {number}\r\n   */\r\n  coordToData: function (coord, clamp) {\r\n    var extent = this._extent;\r\n    var scale = this.scale;\r\n\r\n    if (this.onBand && scale.type === 'ordinal') {\r\n      extent = extent.slice();\r\n      fixExtentWithBands(extent, scale.count());\r\n    }\r\n\r\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\r\n    return this.scale.scale(t);\r\n  },\r\n\r\n  /**\r\n   * Convert pixel point to data in axis\r\n   * @param {Array.<number>} point\r\n   * @param  {boolean} clamp\r\n   * @return {number} data\r\n   */\r\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\r\n  },\r\n\r\n  /**\r\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\r\n   * `axis.getTicksCoords` considers `onBand`, which is used by\r\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\r\n   * @param {Object} [opt]\r\n   * @param {Model} [opt.tickModel=axis.model.getModel('axisTick')]\r\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\r\n   *        tick must be at the axis end points. Otherwise, clip ticks\r\n   *        that outside the axis extent.\r\n   * @return {Array.<Object>} [{\r\n   *     coord: ...,\r\n   *     tickValue: ...\r\n   * }, ...]\r\n   */\r\n  getTicksCoords: function (opt) {\r\n    opt = opt || {};\r\n    var tickModel = opt.tickModel || this.getTickModel();\r\n    var result = createAxisTicks(this, tickModel);\r\n    var ticks = result.ticks;\r\n    var ticksCoords = map(ticks, function (tickValue) {\r\n      return {\r\n        coord: this.dataToCoord(tickValue),\r\n        tickValue: tickValue\r\n      };\r\n    }, this);\r\n    var alignWithLabel = tickModel.get('alignWithLabel');\r\n    fixOnBandTicksCoords(this, ticksCoords, alignWithLabel, opt.clamp);\r\n    return ticksCoords;\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<Array.<Object>>} [{ coord: ..., tickValue: ...}]\r\n   */\r\n  getMinorTicksCoords: function () {\r\n    if (this.scale.type === 'ordinal') {\r\n      // Category axis doesn't support minor ticks\r\n      return [];\r\n    }\r\n\r\n    var minorTickModel = this.model.getModel('minorTick');\r\n    var splitNumber = minorTickModel.get('splitNumber'); // Protection.\r\n\r\n    if (!(splitNumber > 0 && splitNumber < 100)) {\r\n      splitNumber = 5;\r\n    }\r\n\r\n    var minorTicks = this.scale.getMinorTicks(splitNumber);\r\n    var minorTicksCoords = map(minorTicks, function (minorTicksGroup) {\r\n      return map(minorTicksGroup, function (minorTick) {\r\n        return {\r\n          coord: this.dataToCoord(minorTick),\r\n          tickValue: minorTick\r\n        };\r\n      }, this);\r\n    }, this);\r\n    return minorTicksCoords;\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<Object>} [{\r\n   *     formattedLabel: string,\r\n   *     rawLabel: axis.scale.getLabel(tickValue)\r\n   *     tickValue: number\r\n   * }, ...]\r\n   */\r\n  getViewLabels: function () {\r\n    return createAxisLabels(this).labels;\r\n  },\r\n\r\n  /**\r\n   * @return {module:echarts/coord/model/Model}\r\n   */\r\n  getLabelModel: function () {\r\n    return this.model.getModel('axisLabel');\r\n  },\r\n\r\n  /**\r\n   * Notice here we only get the default tick model. For splitLine\r\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\r\n   * manually when calling `getTicksCoords`.\r\n   * In GL, this method may be overrided to:\r\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\r\n   * @return {module:echarts/coord/model/Model}\r\n   */\r\n  getTickModel: function () {\r\n    return this.model.getModel('axisTick');\r\n  },\r\n\r\n  /**\r\n   * Get width of band\r\n   * @return {number}\r\n   */\r\n  getBandWidth: function () {\r\n    var axisExtent = this._extent;\r\n    var dataExtent = this.scale.getExtent();\r\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\r\n\r\n    len === 0 && (len = 1);\r\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\r\n    return Math.abs(size) / len;\r\n  },\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {boolean} Is horizontal\r\n   */\r\n  isHorizontal: null,\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {number} Get axis rotate, by degree.\r\n   */\r\n  getRotate: null,\r\n\r\n  /**\r\n   * Only be called in category axis.\r\n   * Can be overrided, consider other axes like in 3D.\r\n   * @return {number} Auto interval for cateogry axis tick and label\r\n   */\r\n  calculateCategoryInterval: function () {\r\n    return calculateCategoryInterval(this);\r\n  }\r\n};\r\n\r\nfunction fixExtentWithBands(extent, nTick) {\r\n  var size = extent[1] - extent[0];\r\n  var len = nTick;\r\n  var margin = size / len / 2;\r\n  extent[0] += margin;\r\n  extent[1] -= margin;\r\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\r\n// |---1---|---2---|---3---|---4---|.\r\n// So the displayed ticks and splitLine/splitArea should between\r\n// each data item, otherwise cause misleading (e.g., split tow bars\r\n// of a single data item when there are two bar series).\r\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\r\n// splitLine/spliteArea should layout appropriately corresponding\r\n// to displayed labels. (So we should not use `getBandWidth` in this\r\n// case).\r\n\r\n\r\nfunction fixOnBandTicksCoords(axis, ticksCoords, alignWithLabel, clamp) {\r\n  var ticksLen = ticksCoords.length;\r\n\r\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\r\n    return;\r\n  }\r\n\r\n  var axisExtent = axis.getExtent();\r\n  var last;\r\n  var diffSize;\r\n\r\n  if (ticksLen === 1) {\r\n    ticksCoords[0].coord = axisExtent[0];\r\n    last = ticksCoords[1] = {\r\n      coord: axisExtent[0]\r\n    };\r\n  } else {\r\n    var crossLen = ticksCoords[ticksLen - 1].tickValue - ticksCoords[0].tickValue;\r\n    var shift = (ticksCoords[ticksLen - 1].coord - ticksCoords[0].coord) / crossLen;\r\n    each(ticksCoords, function (ticksItem) {\r\n      ticksItem.coord -= shift / 2;\r\n    });\r\n    var dataExtent = axis.scale.getExtent();\r\n    diffSize = 1 + dataExtent[1] - ticksCoords[ticksLen - 1].tickValue;\r\n    last = {\r\n      coord: ticksCoords[ticksLen - 1].coord + shift * diffSize\r\n    };\r\n    ticksCoords.push(last);\r\n  }\r\n\r\n  var inverse = axisExtent[0] > axisExtent[1]; // Handling clamp.\r\n\r\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\r\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\r\n  }\r\n\r\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\r\n    ticksCoords.unshift({\r\n      coord: axisExtent[0]\r\n    });\r\n  }\r\n\r\n  if (littleThan(axisExtent[1], last.coord)) {\r\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\r\n  }\r\n\r\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\r\n    ticksCoords.push({\r\n      coord: axisExtent[1]\r\n    });\r\n  }\r\n\r\n  function littleThan(a, b) {\r\n    // Avoid rounding error cause calculated tick coord different with extent.\r\n    // It may cause an extra unecessary tick added.\r\n    a = round(a);\r\n    b = round(b);\r\n    return inverse ? a > b : a < b;\r\n  }\r\n}\r\n\r\nvar _default = Axis;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar vector = require(\"zrender/lib/core/vector\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Simple view coordinate system\r\n * Mapping given x, y to transformd view x, y\r\n */\r\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\r\n\r\nfunction TransformDummy() {\r\n  Transformable.call(this);\r\n}\r\n\r\nzrUtil.mixin(TransformDummy, Transformable);\r\n\r\nfunction View(name) {\r\n  /**\r\n   * @type {string}\r\n   */\r\n  this.name = name;\r\n  /**\r\n   * @type {Object}\r\n   */\r\n\r\n  this.zoomLimit;\r\n  Transformable.call(this);\r\n  this._roamTransformable = new TransformDummy();\r\n  this._rawTransformable = new TransformDummy();\r\n  this._center;\r\n  this._zoom;\r\n}\r\n\r\nView.prototype = {\r\n  constructor: View,\r\n  type: 'view',\r\n\r\n  /**\r\n   * @param {Array.<string>}\r\n   * @readOnly\r\n   */\r\n  dimensions: ['x', 'y'],\r\n\r\n  /**\r\n   * Set bounding rect\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  // PENDING to getRect\r\n  setBoundingRect: function (x, y, width, height) {\r\n    this._rect = new BoundingRect(x, y, width, height);\r\n    return this._rect;\r\n  },\r\n\r\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  // PENDING to getRect\r\n  getBoundingRect: function () {\r\n    return this._rect;\r\n  },\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setViewRect: function (x, y, width, height) {\r\n    this.transformTo(x, y, width, height);\r\n    this._viewRect = new BoundingRect(x, y, width, height);\r\n  },\r\n\r\n  /**\r\n   * Transformed to particular position and size\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  transformTo: function (x, y, width, height) {\r\n    var rect = this.getBoundingRect();\r\n    var rawTransform = this._rawTransformable;\r\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\r\n    rawTransform.decomposeTransform();\r\n\r\n    this._updateTransform();\r\n  },\r\n\r\n  /**\r\n   * Set center of view\r\n   * @param {Array.<number>} [centerCoord]\r\n   */\r\n  setCenter: function (centerCoord) {\r\n    if (!centerCoord) {\r\n      return;\r\n    }\r\n\r\n    this._center = centerCoord;\r\n\r\n    this._updateCenterAndZoom();\r\n  },\r\n\r\n  /**\r\n   * @param {number} zoom\r\n   */\r\n  setZoom: function (zoom) {\r\n    zoom = zoom || 1;\r\n    var zoomLimit = this.zoomLimit;\r\n\r\n    if (zoomLimit) {\r\n      if (zoomLimit.max != null) {\r\n        zoom = Math.min(zoomLimit.max, zoom);\r\n      }\r\n\r\n      if (zoomLimit.min != null) {\r\n        zoom = Math.max(zoomLimit.min, zoom);\r\n      }\r\n    }\r\n\r\n    this._zoom = zoom;\r\n\r\n    this._updateCenterAndZoom();\r\n  },\r\n\r\n  /**\r\n   * Get default center without roam\r\n   */\r\n  getDefaultCenter: function () {\r\n    // Rect before any transform\r\n    var rawRect = this.getBoundingRect();\r\n    var cx = rawRect.x + rawRect.width / 2;\r\n    var cy = rawRect.y + rawRect.height / 2;\r\n    return [cx, cy];\r\n  },\r\n  getCenter: function () {\r\n    return this._center || this.getDefaultCenter();\r\n  },\r\n  getZoom: function () {\r\n    return this._zoom || 1;\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<number}\r\n   */\r\n  getRoamTransform: function () {\r\n    return this._roamTransformable.getLocalTransform();\r\n  },\r\n\r\n  /**\r\n   * Remove roam\r\n   */\r\n  _updateCenterAndZoom: function () {\r\n    // Must update after view transform updated\r\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\r\n\r\n    var roamTransform = this._roamTransformable;\r\n    var defaultCenter = this.getDefaultCenter();\r\n    var center = this.getCenter();\r\n    var zoom = this.getZoom();\r\n    center = vector.applyTransform([], center, rawTransformMatrix);\r\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\r\n    roamTransform.origin = center;\r\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\r\n    roamTransform.scale = [zoom, zoom];\r\n\r\n    this._updateTransform();\r\n  },\r\n\r\n  /**\r\n   * Update transform from roam and mapLocation\r\n   * @private\r\n   */\r\n  _updateTransform: function () {\r\n    var roamTransformable = this._roamTransformable;\r\n    var rawTransformable = this._rawTransformable;\r\n    rawTransformable.parent = roamTransformable;\r\n    roamTransformable.updateTransform();\r\n    rawTransformable.updateTransform();\r\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\r\n    this._rawTransform = rawTransformable.getLocalTransform();\r\n    this.invTransform = this.invTransform || [];\r\n    matrix.invert(this.invTransform, this.transform);\r\n    this.decomposeTransform();\r\n  },\r\n  getTransformInfo: function () {\r\n    var roamTransform = this._roamTransformable.transform;\r\n    var rawTransformable = this._rawTransformable;\r\n    return {\r\n      roamTransform: roamTransform ? zrUtil.slice(roamTransform) : matrix.create(),\r\n      rawScale: zrUtil.slice(rawTransformable.scale),\r\n      rawPosition: zrUtil.slice(rawTransformable.position)\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  getViewRect: function () {\r\n    return this._viewRect;\r\n  },\r\n\r\n  /**\r\n   * Get view rect after roam transform\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  getViewRectAfterRoam: function () {\r\n    var rect = this.getBoundingRect().clone();\r\n    rect.applyTransform(this.transform);\r\n    return rect;\r\n  },\r\n\r\n  /**\r\n   * Convert a single (lon, lat) data item to (x, y) point.\r\n   * @param {Array.<number>} data\r\n   * @param {boolean} noRoam\r\n   * @param {Array.<number>} [out]\r\n   * @return {Array.<number>}\r\n   */\r\n  dataToPoint: function (data, noRoam, out) {\r\n    var transform = noRoam ? this._rawTransform : this.transform;\r\n    out = out || [];\r\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\r\n  },\r\n\r\n  /**\r\n   * Convert a (x, y) point to (lon, lat) data\r\n   * @param {Array.<number>} point\r\n   * @return {Array.<number>}\r\n   */\r\n  pointToData: function (point) {\r\n    var invTransform = this.invTransform;\r\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\r\n  },\r\n\r\n  /**\r\n   * @implements\r\n   * see {module:echarts/CoodinateSystem}\r\n   */\r\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\r\n\r\n  /**\r\n   * @implements\r\n   * see {module:echarts/CoodinateSystem}\r\n   */\r\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\r\n\r\n  /**\r\n   * @implements\r\n   * see {module:echarts/CoodinateSystem}\r\n   */\r\n  containPoint: function (point) {\r\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\r\n  }\r\n  /**\r\n   * @return {number}\r\n   */\r\n  // getScalarScale: function () {\r\n  //     // Use determinant square root of transform to mutiply scalar\r\n  //     var m = this.transform;\r\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\r\n  //     return det;\r\n  // }\r\n\r\n};\r\nzrUtil.mixin(View, Transformable);\r\n\r\nfunction doConvert(methodName, ecModel, finder, value) {\r\n  var seriesModel = finder.seriesModel;\r\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\r\n\r\n  return coordSys === this ? coordSys[methodName](value) : null;\r\n}\r\n\r\nvar _default = View;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar defaultOption = {\r\n  show: true,\r\n  zlevel: 0,\r\n  z: 0,\r\n  // Inverse the axis.\r\n  inverse: false,\r\n  // Axis name displayed.\r\n  name: '',\r\n  // 'start' | 'middle' | 'end'\r\n  nameLocation: 'end',\r\n  // By degree. By default auto rotate by nameLocation.\r\n  nameRotate: null,\r\n  nameTruncate: {\r\n    maxWidth: null,\r\n    ellipsis: '...',\r\n    placeholder: '.'\r\n  },\r\n  // Use global text style by default.\r\n  nameTextStyle: {},\r\n  // The gap between axisName and axisLine.\r\n  nameGap: 15,\r\n  // Default `false` to support tooltip.\r\n  silent: false,\r\n  // Default `false` to avoid legacy user event listener fail.\r\n  triggerEvent: false,\r\n  tooltip: {\r\n    show: false\r\n  },\r\n  axisPointer: {},\r\n  axisLine: {\r\n    show: true,\r\n    onZero: true,\r\n    onZeroAxisIndex: null,\r\n    lineStyle: {\r\n      color: '#333',\r\n      width: 1,\r\n      type: 'solid'\r\n    },\r\n    // The arrow at both ends the the axis.\r\n    symbol: ['none', 'none'],\r\n    symbolSize: [10, 15]\r\n  },\r\n  axisTick: {\r\n    show: true,\r\n    // Whether axisTick is inside the grid or outside the grid.\r\n    inside: false,\r\n    // The length of axisTick.\r\n    length: 5,\r\n    lineStyle: {\r\n      width: 1\r\n    }\r\n  },\r\n  axisLabel: {\r\n    show: true,\r\n    // Whether axisLabel is inside the grid or outside the grid.\r\n    inside: false,\r\n    rotate: 0,\r\n    // true | false | null/undefined (auto)\r\n    showMinLabel: null,\r\n    // true | false | null/undefined (auto)\r\n    showMaxLabel: null,\r\n    margin: 8,\r\n    // formatter: null,\r\n    fontSize: 12\r\n  },\r\n  splitLine: {\r\n    show: true,\r\n    lineStyle: {\r\n      color: ['#ccc'],\r\n      width: 1,\r\n      type: 'solid'\r\n    }\r\n  },\r\n  splitArea: {\r\n    show: false,\r\n    areaStyle: {\r\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\r\n    }\r\n  }\r\n};\r\nvar axisDefault = {};\r\naxisDefault.categoryAxis = zrUtil.merge({\r\n  // The gap at both ends of the axis. For categoryAxis, boolean.\r\n  boundaryGap: true,\r\n  // Set false to faster category collection.\r\n  // Only usefull in the case like: category is\r\n  // ['2012-01-01', '2012-01-02', ...], where the input\r\n  // data has been ensured not duplicate and is large data.\r\n  // null means \"auto\":\r\n  // if axis.data provided, do not deduplication,\r\n  // else do deduplication.\r\n  deduplication: null,\r\n  // splitArea: {\r\n  // show: false\r\n  // },\r\n  splitLine: {\r\n    show: false\r\n  },\r\n  axisTick: {\r\n    // If tick is align with label when boundaryGap is true\r\n    alignWithLabel: false,\r\n    interval: 'auto'\r\n  },\r\n  axisLabel: {\r\n    interval: 'auto'\r\n  }\r\n}, defaultOption);\r\naxisDefault.valueAxis = zrUtil.merge({\r\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\r\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\r\n  boundaryGap: [0, 0],\r\n  // TODO\r\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\r\n  // Min value of the axis. can be:\r\n  // + a number\r\n  // + 'dataMin': use the min value in data.\r\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\r\n  // min: null,\r\n  // Max value of the axis. can be:\r\n  // + a number\r\n  // + 'dataMax': use the max value in data.\r\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\r\n  // max: null,\r\n  // Readonly prop, specifies start value of the range when using data zoom.\r\n  // rangeStart: null\r\n  // Readonly prop, specifies end value of the range when using data zoom.\r\n  // rangeEnd: null\r\n  // Optional value can be:\r\n  // + `false`: always include value 0.\r\n  // + `true`: the extent do not consider value 0.\r\n  // scale: false,\r\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\r\n  splitNumber: 5,\r\n  // Interval specifies the span of the ticks is mandatorily.\r\n  // interval: null\r\n  // Specify min interval when auto calculate tick interval.\r\n  // minInterval: null\r\n  // Specify max interval when auto calculate tick interval.\r\n  // maxInterval: null\r\n  minorTick: {\r\n    // Minor tick, not available for cateogry axis.\r\n    show: false,\r\n    // Split number of minor ticks. The value should be in range of (0, 100)\r\n    splitNumber: 5,\r\n    // Lenght of minor tick\r\n    length: 3,\r\n    // Same inside with axisTick\r\n    // Line style\r\n    lineStyle: {// Default to be same with axisTick\r\n    }\r\n  },\r\n  minorSplitLine: {\r\n    show: false,\r\n    lineStyle: {\r\n      color: '#eee',\r\n      width: 1\r\n    }\r\n  }\r\n}, defaultOption);\r\naxisDefault.timeAxis = zrUtil.defaults({\r\n  scale: true,\r\n  min: 'dataMin',\r\n  max: 'dataMax'\r\n}, axisDefault.valueAxis);\r\naxisDefault.logAxis = zrUtil.defaults({\r\n  scale: true,\r\n  logBase: 10\r\n}, axisDefault.valueAxis);\r\nvar _default = axisDefault;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar OrdinalScale = require(\"../scale/Ordinal\");\r\n\r\nvar IntervalScale = require(\"../scale/Interval\");\r\n\r\nvar Scale = require(\"../scale/Scale\");\r\n\r\nvar numberUtil = require(\"../util/number\");\r\n\r\nvar _barGrid = require(\"../layout/barGrid\");\r\n\r\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\r\nvar makeColumnLayout = _barGrid.makeColumnLayout;\r\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nrequire(\"../scale/Time\");\r\n\r\nrequire(\"../scale/Log\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Get axis scale extent before niced.\r\n * Item of returned array can only be number (including Infinity and NaN).\r\n */\r\nfunction getScaleExtent(scale, model) {\r\n  var scaleType = scale.type;\r\n  var min = model.getMin();\r\n  var max = model.getMax();\r\n  var originalExtent = scale.getExtent();\r\n  var axisDataLen;\r\n  var boundaryGap;\r\n  var span;\r\n\r\n  if (scaleType === 'ordinal') {\r\n    axisDataLen = model.getCategories().length;\r\n  } else {\r\n    boundaryGap = model.get('boundaryGap');\r\n\r\n    if (!zrUtil.isArray(boundaryGap)) {\r\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\r\n    }\r\n\r\n    if (typeof boundaryGap[0] === 'boolean') {\r\n      boundaryGap = [0, 0];\r\n    }\r\n\r\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\r\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\r\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\r\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\r\n  // which is the most common case), these cases should be ensured:\r\n  // (1) For 'ordinal', show all axis.data.\r\n  // (2) For others:\r\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\r\n  //      disabled).\r\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\r\n  //      be the result that originalExtent enlarged by boundaryGap.\r\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\r\n  // FIXME\r\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\r\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\r\n  // that the results processed by boundaryGap are positive/negative?\r\n\r\n\r\n  if (min === 'dataMin') {\r\n    min = originalExtent[0];\r\n  } else if (typeof min === 'function') {\r\n    min = min({\r\n      min: originalExtent[0],\r\n      max: originalExtent[1]\r\n    });\r\n  }\r\n\r\n  if (max === 'dataMax') {\r\n    max = originalExtent[1];\r\n  } else if (typeof max === 'function') {\r\n    max = max({\r\n      min: originalExtent[0],\r\n      max: originalExtent[1]\r\n    });\r\n  }\r\n\r\n  var fixMin = min != null;\r\n  var fixMax = max != null;\r\n\r\n  if (min == null) {\r\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\r\n  }\r\n\r\n  if (max == null) {\r\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\r\n  }\r\n\r\n  (min == null || !isFinite(min)) && (min = NaN);\r\n  (max == null || !isFinite(max)) && (max = NaN);\r\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\r\n\r\n  if (model.getNeedCrossZero()) {\r\n    // Axis is over zero and min is not set\r\n    if (min > 0 && max > 0 && !fixMin) {\r\n      min = 0;\r\n    } // Axis is under zero and max is not set\r\n\r\n\r\n    if (min < 0 && max < 0 && !fixMax) {\r\n      max = 0;\r\n    }\r\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\r\n  // is base axis\r\n  // FIXME\r\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\r\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\r\n  //     Should not depend on series type `bar`?\r\n  // (3) Fix that might overlap when using dataZoom.\r\n  // (4) Consider other chart types using `barGrid`?\r\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\r\n\r\n\r\n  var ecModel = model.ecModel;\r\n\r\n  if (ecModel && scaleType === 'time'\r\n  /*|| scaleType === 'interval' */\r\n  ) {\r\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\r\n    var isBaseAxisAndHasBarSeries;\r\n    zrUtil.each(barSeriesModels, function (seriesModel) {\r\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\r\n    });\r\n\r\n    if (isBaseAxisAndHasBarSeries) {\r\n      // Calculate placement of bars on axis\r\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\r\n\r\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\r\n      min = adjustedScale.min;\r\n      max = adjustedScale.max;\r\n    }\r\n  }\r\n\r\n  return {\r\n    extent: [min, max],\r\n    // \"fix\" means \"fixed\", the value should not be\r\n    // changed in the subsequent steps.\r\n    fixMin: fixMin,\r\n    fixMax: fixMax\r\n  };\r\n}\r\n\r\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\r\n  // Get Axis Length\r\n  var axisExtent = model.axis.getExtent();\r\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\r\n\r\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\r\n\r\n  if (barsOnCurrentAxis === undefined) {\r\n    return {\r\n      min: min,\r\n      max: max\r\n    };\r\n  }\r\n\r\n  var minOverflow = Infinity;\r\n  zrUtil.each(barsOnCurrentAxis, function (item) {\r\n    minOverflow = Math.min(item.offset, minOverflow);\r\n  });\r\n  var maxOverflow = -Infinity;\r\n  zrUtil.each(barsOnCurrentAxis, function (item) {\r\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\r\n  });\r\n  minOverflow = Math.abs(minOverflow);\r\n  maxOverflow = Math.abs(maxOverflow);\r\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\r\n\r\n  var oldRange = max - min;\r\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\r\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\r\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\r\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\r\n  return {\r\n    min: min,\r\n    max: max\r\n  };\r\n}\r\n\r\nfunction niceScaleExtent(scale, model) {\r\n  var extentInfo = getScaleExtent(scale, model);\r\n  var extent = extentInfo.extent;\r\n  var splitNumber = model.get('splitNumber');\r\n\r\n  if (scale.type === 'log') {\r\n    scale.base = model.get('logBase');\r\n  }\r\n\r\n  var scaleType = scale.type;\r\n  scale.setExtent(extent[0], extent[1]);\r\n  scale.niceExtent({\r\n    splitNumber: splitNumber,\r\n    fixMin: extentInfo.fixMin,\r\n    fixMax: extentInfo.fixMax,\r\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\r\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\r\n  }); // If some one specified the min, max. And the default calculated interval\r\n  // is not good enough. He can specify the interval. It is often appeared\r\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\r\n  // to be 60.\r\n  // FIXME\r\n\r\n  var interval = model.get('interval');\r\n\r\n  if (interval != null) {\r\n    scale.setInterval && scale.setInterval(interval);\r\n  }\r\n}\r\n/**\r\n * @param {module:echarts/model/Model} model\r\n * @param {string} [axisType] Default retrieve from model.type\r\n * @return {module:echarts/scale/*}\r\n */\r\n\r\n\r\nfunction createScaleByModel(model, axisType) {\r\n  axisType = axisType || model.get('type');\r\n\r\n  if (axisType) {\r\n    switch (axisType) {\r\n      // Buildin scale\r\n      case 'category':\r\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\r\n\r\n      case 'value':\r\n        return new IntervalScale();\r\n      // Extended scale, like time and log\r\n\r\n      default:\r\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\r\n    }\r\n  }\r\n}\r\n/**\r\n * Check if the axis corss 0\r\n */\r\n\r\n\r\nfunction ifAxisCrossZero(axis) {\r\n  var dataExtent = axis.scale.getExtent();\r\n  var min = dataExtent[0];\r\n  var max = dataExtent[1];\r\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\r\n}\r\n/**\r\n * @param {module:echarts/coord/Axis} axis\r\n * @return {Function} Label formatter function.\r\n *         param: {number} tickValue,\r\n *         param: {number} idx, the index in all ticks.\r\n *                         If category axis, this param is not requied.\r\n *         return: {string} label string.\r\n */\r\n\r\n\r\nfunction makeLabelFormatter(axis) {\r\n  var labelFormatter = axis.getLabelModel().get('formatter');\r\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\r\n\r\n  if (typeof labelFormatter === 'string') {\r\n    labelFormatter = function (tpl) {\r\n      return function (val) {\r\n        // For category axis, get raw value; for numeric axis,\r\n        // get foramtted label like '1,333,444'.\r\n        val = axis.scale.getLabel(val);\r\n        return tpl.replace('{value}', val != null ? val : '');\r\n      };\r\n    }(labelFormatter); // Consider empty array\r\n\r\n\r\n    return labelFormatter;\r\n  } else if (typeof labelFormatter === 'function') {\r\n    return function (tickValue, idx) {\r\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\r\n      // But the previous implementation of category axis do not consider the\r\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\r\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\r\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\r\n      // the definition here for back compatibility.\r\n      if (categoryTickStart != null) {\r\n        idx = tickValue - categoryTickStart;\r\n      }\r\n\r\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\r\n    };\r\n  } else {\r\n    return function (tick) {\r\n      return axis.scale.getLabel(tick);\r\n    };\r\n  }\r\n}\r\n\r\nfunction getAxisRawValue(axis, value) {\r\n  // In category axis with data zoom, tick is not the original\r\n  // index of axis.data. So tick should not be exposed to user\r\n  // in category axis.\r\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\r\n}\r\n/**\r\n * @param {module:echarts/coord/Axis} axis\r\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\r\n */\r\n\r\n\r\nfunction estimateLabelUnionRect(axis) {\r\n  var axisModel = axis.model;\r\n  var scale = axis.scale;\r\n\r\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\r\n    return;\r\n  }\r\n\r\n  var isCategory = axis.type === 'category';\r\n  var realNumberScaleTicks;\r\n  var tickCount;\r\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\r\n\r\n  if (isCategory) {\r\n    tickCount = scale.count();\r\n  } else {\r\n    realNumberScaleTicks = scale.getTicks();\r\n    tickCount = realNumberScaleTicks.length;\r\n  }\r\n\r\n  var axisLabelModel = axis.getLabelModel();\r\n  var labelFormatter = makeLabelFormatter(axis);\r\n  var rect;\r\n  var step = 1; // Simple optimization for large amount of labels\r\n\r\n  if (tickCount > 40) {\r\n    step = Math.ceil(tickCount / 40);\r\n  }\r\n\r\n  for (var i = 0; i < tickCount; i += step) {\r\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\r\n    var label = labelFormatter(tickValue);\r\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\r\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\r\n    rect ? rect.union(singleRect) : rect = singleRect;\r\n  }\r\n\r\n  return rect;\r\n}\r\n\r\nfunction rotateTextRect(textRect, rotate) {\r\n  var rotateRadians = rotate * Math.PI / 180;\r\n  var boundingBox = textRect.plain();\r\n  var beforeWidth = boundingBox.width;\r\n  var beforeHeight = boundingBox.height;\r\n  var afterWidth = beforeWidth * Math.abs(Math.cos(rotateRadians)) + Math.abs(beforeHeight * Math.sin(rotateRadians));\r\n  var afterHeight = beforeWidth * Math.abs(Math.sin(rotateRadians)) + Math.abs(beforeHeight * Math.cos(rotateRadians));\r\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\r\n  return rotatedRect;\r\n}\r\n/**\r\n * @param {module:echarts/src/model/Model} model axisLabelModel or axisTickModel\r\n * @return {number|String} Can be null|'auto'|number|function\r\n */\r\n\r\n\r\nfunction getOptionCategoryInterval(model) {\r\n  var interval = model.get('interval');\r\n  return interval == null ? 'auto' : interval;\r\n}\r\n/**\r\n * Set `categoryInterval` as 0 implicitly indicates that\r\n * show all labels reguardless of overlap.\r\n * @param {Object} axis axisModel.axis\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction shouldShowAllLabels(axis) {\r\n  return axis.type === 'category' && getOptionCategoryInterval(axis.getLabelModel()) === 0;\r\n}\r\n\r\nexports.getScaleExtent = getScaleExtent;\r\nexports.niceScaleExtent = niceScaleExtent;\r\nexports.createScaleByModel = createScaleByModel;\r\nexports.ifAxisCrossZero = ifAxisCrossZero;\r\nexports.makeLabelFormatter = makeLabelFormatter;\r\nexports.getAxisRawValue = getAxisRawValue;\r\nexports.estimateLabelUnionRect = estimateLabelUnionRect;\r\nexports.getOptionCategoryInterval = getOptionCategoryInterval;\r\nexports.shouldShowAllLabels = shouldShowAllLabels;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// import * as axisHelper from './axisHelper';\r\nvar _default = {\r\n  /**\r\n   * @param {boolean} origin\r\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\r\n   */\r\n  getMin: function (origin) {\r\n    var option = this.option;\r\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\r\n\r\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\r\n      min = this.axis.scale.parse(min);\r\n    }\r\n\r\n    return min;\r\n  },\r\n\r\n  /**\r\n   * @param {boolean} origin\r\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\r\n   */\r\n  getMax: function (origin) {\r\n    var option = this.option;\r\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\r\n\r\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\r\n      max = this.axis.scale.parse(max);\r\n    }\r\n\r\n    return max;\r\n  },\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  getNeedCrossZero: function () {\r\n    var option = this.option;\r\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\r\n  },\r\n\r\n  /**\r\n   * Should be implemented by each axis model if necessary.\r\n   * @return {module:echarts/model/Component} coordinate system model\r\n   */\r\n  getCoordSysModel: zrUtil.noop,\r\n\r\n  /**\r\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\r\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\r\n   */\r\n  setRange: function (rangeStart, rangeEnd) {\r\n    this.option.rangeStart = rangeStart;\r\n    this.option.rangeEnd = rangeEnd;\r\n  },\r\n\r\n  /**\r\n   * Reset range\r\n   */\r\n  resetRange: function () {\r\n    // rangeStart and rangeEnd is readonly.\r\n    this.option.rangeStart = this.option.rangeEnd = null;\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar axisDefault = require(\"./axisDefault\");\r\n\r\nvar ComponentModel = require(\"../model/Component\");\r\n\r\nvar _layout = require(\"../util/layout\");\r\n\r\nvar getLayoutParams = _layout.getLayoutParams;\r\nvar mergeLayoutParam = _layout.mergeLayoutParam;\r\n\r\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME axisType is fixed ?\r\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\r\n/**\r\n * Generate sub axis model class\r\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\r\n * @param {module:echarts/model/Component} BaseAxisModelClass\r\n * @param {Function} axisTypeDefaulter\r\n * @param {Object} [extraDefaultOption]\r\n */\r\n\r\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\r\n  zrUtil.each(AXIS_TYPES, function (axisType) {\r\n    BaseAxisModelClass.extend({\r\n      /**\r\n       * @readOnly\r\n       */\r\n      type: axisName + 'Axis.' + axisType,\r\n      mergeDefaultAndTheme: function (option, ecModel) {\r\n        var layoutMode = this.layoutMode;\r\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\r\n        var themeModel = ecModel.getTheme();\r\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\r\n        zrUtil.merge(option, this.getDefaultOption());\r\n        option.type = axisTypeDefaulter(axisName, option);\r\n\r\n        if (layoutMode) {\r\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @override\r\n       */\r\n      optionUpdated: function () {\r\n        var thisOption = this.option;\r\n\r\n        if (thisOption.type === 'category') {\r\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Should not be called before all of 'getInitailData' finished.\r\n       * Because categories are collected during initializing data.\r\n       */\r\n      getCategories: function (rawData) {\r\n        var option = this.option; // FIXME\r\n        // warning if called before all of 'getInitailData' finished.\r\n\r\n        if (option.type === 'category') {\r\n          if (rawData) {\r\n            return option.data;\r\n          }\r\n\r\n          return this.__ordinalMeta.categories;\r\n        }\r\n      },\r\n      getOrdinalMeta: function () {\r\n        return this.__ordinalMeta;\r\n      },\r\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\r\n    });\r\n  });\r\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar textContain = require(\"zrender/lib/contain/text\");\r\n\r\nvar _model = require(\"../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\nvar _axisHelper = require(\"./axisHelper\");\r\n\r\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\r\nvar getOptionCategoryInterval = _axisHelper.getOptionCategoryInterval;\r\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = makeInner();\r\n/**\r\n * @param {module:echats/coord/Axis} axis\r\n * @return {Object} {\r\n *     labels: [{\r\n *         formattedLabel: string,\r\n *         rawLabel: string,\r\n *         tickValue: number\r\n *     }, ...],\r\n *     labelCategoryInterval: number\r\n * }\r\n */\r\n\r\nfunction createAxisLabels(axis) {\r\n  // Only ordinal scale support tick interval\r\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\r\n}\r\n/**\r\n * @param {module:echats/coord/Axis} axis\r\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\r\n * @return {Object} {\r\n *     ticks: Array.<number>\r\n *     tickCategoryInterval: number\r\n * }\r\n */\r\n\r\n\r\nfunction createAxisTicks(axis, tickModel) {\r\n  // Only ordinal scale support tick interval\r\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\r\n    ticks: axis.scale.getTicks()\r\n  };\r\n}\r\n\r\nfunction makeCategoryLabels(axis) {\r\n  var labelModel = axis.getLabelModel();\r\n  var result = makeCategoryLabelsActually(axis, labelModel);\r\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\r\n    labels: [],\r\n    labelCategoryInterval: result.labelCategoryInterval\r\n  } : result;\r\n}\r\n\r\nfunction makeCategoryLabelsActually(axis, labelModel) {\r\n  var labelsCache = getListCache(axis, 'labels');\r\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\r\n  var result = listCacheGet(labelsCache, optionLabelInterval);\r\n\r\n  if (result) {\r\n    return result;\r\n  }\r\n\r\n  var labels;\r\n  var numericLabelInterval;\r\n\r\n  if (zrUtil.isFunction(optionLabelInterval)) {\r\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\r\n  } else {\r\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\r\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\r\n  } // Cache to avoid calling interval function repeatly.\r\n\r\n\r\n  return listCacheSet(labelsCache, optionLabelInterval, {\r\n    labels: labels,\r\n    labelCategoryInterval: numericLabelInterval\r\n  });\r\n}\r\n\r\nfunction makeCategoryTicks(axis, tickModel) {\r\n  var ticksCache = getListCache(axis, 'ticks');\r\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\r\n  var result = listCacheGet(ticksCache, optionTickInterval);\r\n\r\n  if (result) {\r\n    return result;\r\n  }\r\n\r\n  var ticks;\r\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\r\n  // we should not return all ticks.\r\n\r\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\r\n    ticks = [];\r\n  }\r\n\r\n  if (zrUtil.isFunction(optionTickInterval)) {\r\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\r\n  } // Always use label interval by default despite label show. Consider this\r\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\r\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\r\n  else if (optionTickInterval === 'auto') {\r\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\r\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\r\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\r\n        return labelItem.tickValue;\r\n      });\r\n    } else {\r\n      tickCategoryInterval = optionTickInterval;\r\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\r\n    } // Cache to avoid calling interval function repeatly.\r\n\r\n\r\n  return listCacheSet(ticksCache, optionTickInterval, {\r\n    ticks: ticks,\r\n    tickCategoryInterval: tickCategoryInterval\r\n  });\r\n}\r\n\r\nfunction makeRealNumberLabels(axis) {\r\n  var ticks = axis.scale.getTicks();\r\n  var labelFormatter = makeLabelFormatter(axis);\r\n  return {\r\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\r\n      return {\r\n        formattedLabel: labelFormatter(tickValue, idx),\r\n        rawLabel: axis.scale.getLabel(tickValue),\r\n        tickValue: tickValue\r\n      };\r\n    })\r\n  };\r\n} // Large category data calculation is performence sensitive, and ticks and label\r\n// probably be fetched by multiple times. So we cache the result.\r\n// axis is created each time during a ec process, so we do not need to clear cache.\r\n\r\n\r\nfunction getListCache(axis, prop) {\r\n  // Because key can be funciton, and cache size always be small, we use array cache.\r\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\r\n}\r\n\r\nfunction listCacheGet(cache, key) {\r\n  for (var i = 0; i < cache.length; i++) {\r\n    if (cache[i].key === key) {\r\n      return cache[i].value;\r\n    }\r\n  }\r\n}\r\n\r\nfunction listCacheSet(cache, key, value) {\r\n  cache.push({\r\n    key: key,\r\n    value: value\r\n  });\r\n  return value;\r\n}\r\n\r\nfunction makeAutoCategoryInterval(axis) {\r\n  var result = inner(axis).autoInterval;\r\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\r\n}\r\n/**\r\n * Calculate interval for category axis ticks and labels.\r\n * To get precise result, at least one of `getRotate` and `isHorizontal`\r\n * should be implemented in axis.\r\n */\r\n\r\n\r\nfunction calculateCategoryInterval(axis) {\r\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\r\n  var labelFormatter = makeLabelFormatter(axis);\r\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\r\n  var ordinalScale = axis.scale;\r\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\r\n  // avoid generating a long array by `getTicks`\r\n  // in large category data case.\r\n\r\n  var tickCount = ordinalScale.count();\r\n\r\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\r\n    return 0;\r\n  }\r\n\r\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\r\n\r\n  if (tickCount > 40) {\r\n    step = Math.max(1, Math.floor(tickCount / 40));\r\n  }\r\n\r\n  var tickValue = ordinalExtent[0];\r\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\r\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\r\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\r\n  var maxW = 0;\r\n  var maxH = 0; // Caution: Performance sensitive for large category data.\r\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\r\n\r\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\r\n    var width = 0;\r\n    var height = 0; // Not precise, do not consider align and vertical align\r\n    // and each distance from axis line yet.\r\n\r\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\r\n\r\n    width = rect.width * 1.3;\r\n    height = rect.height * 1.3; // Min size, void long loop.\r\n\r\n    maxW = Math.max(maxW, width, 7);\r\n    maxH = Math.max(maxH, height, 7);\r\n  }\r\n\r\n  var dw = maxW / unitW;\r\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\r\n\r\n  isNaN(dw) && (dw = Infinity);\r\n  isNaN(dh) && (dh = Infinity);\r\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\r\n  var cache = inner(axis.model);\r\n  var axisExtent = axis.getExtent();\r\n  var lastAutoInterval = cache.lastAutoInterval;\r\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\r\n  // otherwise the calculated interval might jitter when the zoom\r\n  // window size is close to the interval-changing size.\r\n  // For example, if all of the axis labels are `a, b, c, d, e, f, g`.\r\n  // The jitter will cause that sometimes the displayed labels are\r\n  // `a, d, g` (interval: 2) sometimes `a, c, e`(interval: 1).\r\n\r\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\r\n  // point is not the same when zooming in or zooming out.\r\n  && lastAutoInterval > interval // If the axis change is caused by chart resize, the cache should not\r\n  // be used. Otherwise some hiden labels might not be shown again.\r\n  && cache.axisExtend0 === axisExtent[0] && cache.axisExtend1 === axisExtent[1]) {\r\n    interval = lastAutoInterval;\r\n  } // Only update cache if cache not used, otherwise the\r\n  // changing of interval is too insensitive.\r\n  else {\r\n      cache.lastTickCount = tickCount;\r\n      cache.lastAutoInterval = interval;\r\n      cache.axisExtend0 = axisExtent[0];\r\n      cache.axisExtend1 = axisExtent[1];\r\n    }\r\n\r\n  return interval;\r\n}\r\n\r\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\r\n  var labelModel = axis.getLabelModel();\r\n  return {\r\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\r\n    labelRotate: labelModel.get('rotate') || 0,\r\n    font: labelModel.getFont()\r\n  };\r\n}\r\n\r\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\r\n  var labelFormatter = makeLabelFormatter(axis);\r\n  var ordinalScale = axis.scale;\r\n  var ordinalExtent = ordinalScale.getExtent();\r\n  var labelModel = axis.getLabelModel();\r\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\r\n\r\n  var step = Math.max((categoryInterval || 0) + 1, 1);\r\n  var startTick = ordinalExtent[0];\r\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\r\n  // while zooming and moving while interval > 0. Otherwise the selection\r\n  // of displayable ticks and symbols probably keep changing.\r\n  // 3 is empirical value.\r\n\r\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\r\n    startTick = Math.round(Math.ceil(startTick / step) * step);\r\n  } // (1) Only add min max label here but leave overlap checking\r\n  // to render stage, which also ensure the returned list\r\n  // suitable for splitLine and splitArea rendering.\r\n  // (2) Scales except category always contain min max label so\r\n  // do not need to perform this process.\r\n\r\n\r\n  var showAllLabel = shouldShowAllLabels(axis);\r\n  var includeMinLabel = labelModel.get('showMinLabel') || showAllLabel;\r\n  var includeMaxLabel = labelModel.get('showMaxLabel') || showAllLabel;\r\n\r\n  if (includeMinLabel && startTick !== ordinalExtent[0]) {\r\n    addItem(ordinalExtent[0]);\r\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\r\n\r\n\r\n  var tickValue = startTick;\r\n\r\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\r\n    addItem(tickValue);\r\n  }\r\n\r\n  if (includeMaxLabel && tickValue - step !== ordinalExtent[1]) {\r\n    addItem(ordinalExtent[1]);\r\n  }\r\n\r\n  function addItem(tVal) {\r\n    result.push(onlyTick ? tVal : {\r\n      formattedLabel: labelFormatter(tVal),\r\n      rawLabel: ordinalScale.getLabel(tVal),\r\n      tickValue: tVal\r\n    });\r\n  }\r\n\r\n  return result;\r\n} // When interval is function, the result `false` means ignore the tick.\r\n// It is time consuming for large category data.\r\n\r\n\r\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\r\n  var ordinalScale = axis.scale;\r\n  var labelFormatter = makeLabelFormatter(axis);\r\n  var result = [];\r\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\r\n    var rawLabel = ordinalScale.getLabel(tickValue);\r\n\r\n    if (categoryInterval(tickValue, rawLabel)) {\r\n      result.push(onlyTick ? tickValue : {\r\n        formattedLabel: labelFormatter(tickValue),\r\n        rawLabel: rawLabel,\r\n        tickValue: tickValue\r\n      });\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nexports.createAxisLabels = createAxisLabels;\r\nexports.createAxisTicks = createAxisTicks;\r\nexports.calculateCategoryInterval = calculateCategoryInterval;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// (24*60*60*1000)\r\nvar PROXIMATE_ONE_DAY = 86400000;\r\n/**\r\n * Calendar\r\n *\r\n * @constructor\r\n *\r\n * @param {Object} calendarModel calendarModel\r\n * @param {Object} ecModel       ecModel\r\n * @param {Object} api           api\r\n */\r\n\r\nfunction Calendar(calendarModel, ecModel, api) {\r\n  this._model = calendarModel;\r\n}\r\n\r\nCalendar.prototype = {\r\n  constructor: Calendar,\r\n  type: 'calendar',\r\n  dimensions: ['time', 'value'],\r\n  // Required in createListFromData\r\n  getDimensionsInfo: function () {\r\n    return [{\r\n      name: 'time',\r\n      type: 'time'\r\n    }, 'value'];\r\n  },\r\n  getRangeInfo: function () {\r\n    return this._rangeInfo;\r\n  },\r\n  getModel: function () {\r\n    return this._model;\r\n  },\r\n  getRect: function () {\r\n    return this._rect;\r\n  },\r\n  getCellWidth: function () {\r\n    return this._sw;\r\n  },\r\n  getCellHeight: function () {\r\n    return this._sh;\r\n  },\r\n  getOrient: function () {\r\n    return this._orient;\r\n  },\r\n\r\n  /**\r\n   * getFirstDayOfWeek\r\n   *\r\n   * @example\r\n   *     0 : start at Sunday\r\n   *     1 : start at Monday\r\n   *\r\n   * @return {number}\r\n   */\r\n  getFirstDayOfWeek: function () {\r\n    return this._firstDayOfWeek;\r\n  },\r\n\r\n  /**\r\n   * get date info\r\n   *\r\n   * @param  {string|number} date date\r\n   * @return {Object}\r\n   * {\r\n   *      y: string, local full year, eg., '1940',\r\n   *      m: string, local month, from '01' ot '12',\r\n   *      d: string, local date, from '01' to '31' (if exists),\r\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\r\n   *      time: timestamp,\r\n   *      formatedDate: string, yyyy-MM-dd,\r\n   *      date: original date object.\r\n   * }\r\n   */\r\n  getDateInfo: function (date) {\r\n    date = numberUtil.parseDate(date);\r\n    var y = date.getFullYear();\r\n    var m = date.getMonth() + 1;\r\n    m = m < 10 ? '0' + m : m;\r\n    var d = date.getDate();\r\n    d = d < 10 ? '0' + d : d;\r\n    var day = date.getDay();\r\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\r\n    return {\r\n      y: y,\r\n      m: m,\r\n      d: d,\r\n      day: day,\r\n      time: date.getTime(),\r\n      formatedDate: y + '-' + m + '-' + d,\r\n      date: date\r\n    };\r\n  },\r\n  getNextNDay: function (date, n) {\r\n    n = n || 0;\r\n\r\n    if (n === 0) {\r\n      return this.getDateInfo(date);\r\n    }\r\n\r\n    date = new Date(this.getDateInfo(date).time);\r\n    date.setDate(date.getDate() + n);\r\n    return this.getDateInfo(date);\r\n  },\r\n  update: function (ecModel, api) {\r\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\r\n    this._orient = this._model.get('orient');\r\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\r\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\r\n    var weeks = this._rangeInfo.weeks || 1;\r\n    var whNames = ['width', 'height'];\r\n\r\n    var cellSize = this._model.get('cellSize').slice();\r\n\r\n    var layoutParams = this._model.getBoxLayoutParams();\r\n\r\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\r\n    zrUtil.each([0, 1], function (idx) {\r\n      if (cellSizeSpecified(cellSize, idx)) {\r\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\r\n      }\r\n    });\r\n    var whGlobal = {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    };\r\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\r\n    zrUtil.each([0, 1], function (idx) {\r\n      if (!cellSizeSpecified(cellSize, idx)) {\r\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\r\n      }\r\n    });\r\n\r\n    function cellSizeSpecified(cellSize, idx) {\r\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\r\n    }\r\n\r\n    this._sw = cellSize[0];\r\n    this._sh = cellSize[1];\r\n  },\r\n\r\n  /**\r\n   * Convert a time data(time, value) item to (x, y) point.\r\n   *\r\n   * @override\r\n   * @param  {Array|number} data data\r\n   * @param  {boolean} [clamp=true] out of range\r\n   * @return {Array} point\r\n   */\r\n  dataToPoint: function (data, clamp) {\r\n    zrUtil.isArray(data) && (data = data[0]);\r\n    clamp == null && (clamp = true);\r\n    var dayInfo = this.getDateInfo(data);\r\n    var range = this._rangeInfo;\r\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\r\n\r\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\r\n      return [NaN, NaN];\r\n    }\r\n\r\n    var week = dayInfo.day;\r\n\r\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\r\n\r\n    if (this._orient === 'vertical') {\r\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\r\n    }\r\n\r\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\r\n  },\r\n\r\n  /**\r\n   * Convert a (x, y) point to time data\r\n   *\r\n   * @override\r\n   * @param  {string} point point\r\n   * @return {string}       data\r\n   */\r\n  pointToData: function (point) {\r\n    var date = this.pointToDate(point);\r\n    return date && date.time;\r\n  },\r\n\r\n  /**\r\n   * Convert a time date item to (x, y) four point.\r\n   *\r\n   * @param  {Array} data  date[0] is date\r\n   * @param  {boolean} [clamp=true]  out of range\r\n   * @return {Object}       point\r\n   */\r\n  dataToRect: function (data, clamp) {\r\n    var point = this.dataToPoint(data, clamp);\r\n    return {\r\n      contentShape: {\r\n        x: point[0] - (this._sw - this._lineWidth) / 2,\r\n        y: point[1] - (this._sh - this._lineWidth) / 2,\r\n        width: this._sw - this._lineWidth,\r\n        height: this._sh - this._lineWidth\r\n      },\r\n      center: point,\r\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\r\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\r\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\r\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Convert a (x, y) point to time date\r\n   *\r\n   * @param  {Array} point point\r\n   * @return {Object}       date\r\n   */\r\n  pointToDate: function (point) {\r\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\r\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\r\n    var range = this._rangeInfo.range;\r\n\r\n    if (this._orient === 'vertical') {\r\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\r\n    }\r\n\r\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\r\n  },\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\r\n\r\n  /**\r\n   * initRange\r\n   *\r\n   * @private\r\n   * @return {Array} [start, end]\r\n   */\r\n  _initRangeOption: function () {\r\n    var range = this._model.get('range');\r\n\r\n    var rg = range;\r\n\r\n    if (zrUtil.isArray(rg) && rg.length === 1) {\r\n      rg = rg[0];\r\n    }\r\n\r\n    if (/^\\d{4}$/.test(rg)) {\r\n      range = [rg + '-01-01', rg + '-12-31'];\r\n    }\r\n\r\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\r\n      var start = this.getDateInfo(rg);\r\n      var firstDay = start.date;\r\n      firstDay.setMonth(firstDay.getMonth() + 1);\r\n      var end = this.getNextNDay(firstDay, -1);\r\n      range = [start.formatedDate, end.formatedDate];\r\n    }\r\n\r\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\r\n      range = [rg, rg];\r\n    }\r\n\r\n    var tmp = this._getRangeInfo(range);\r\n\r\n    if (tmp.start.time > tmp.end.time) {\r\n      range.reverse();\r\n    }\r\n\r\n    return range;\r\n  },\r\n\r\n  /**\r\n   * range info\r\n   *\r\n   * @private\r\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\r\n   *  If range[0] > range[1], they will not be reversed.\r\n   * @return {Object}       obj\r\n   */\r\n  _getRangeInfo: function (range) {\r\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\r\n    var reversed;\r\n\r\n    if (range[0].time > range[1].time) {\r\n      reversed = true;\r\n      range.reverse();\r\n    }\r\n\r\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case1 (#11677 #10430):\r\n    // Set the system timezone as \"UK\", set the range to `['2016-07-01', '2016-12-31']`\r\n    // Consider case2:\r\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\r\n    // ```\r\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\r\n    // var second = new Date(1478412000000);\r\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\r\n    // ```\r\n    // will get wrong result because of DST. So we should fix it.\r\n\r\n    var date = new Date(range[0].time);\r\n    var startDateNum = date.getDate();\r\n    var endDateNum = range[1].date.getDate();\r\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\r\n\r\n    var dateNum = date.getDate();\r\n\r\n    if (dateNum !== endDateNum) {\r\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\r\n\r\n      while ((dateNum = date.getDate()) !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\r\n        allDay -= sign;\r\n        date.setDate(dateNum - sign);\r\n      }\r\n    }\r\n\r\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\r\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\r\n    reversed && range.reverse();\r\n    return {\r\n      range: [range[0].formatedDate, range[1].formatedDate],\r\n      start: range[0],\r\n      end: range[1],\r\n      allDay: allDay,\r\n      weeks: weeks,\r\n      // From 0.\r\n      nthWeek: nthWeek,\r\n      fweek: range[0].day,\r\n      lweek: range[1].day\r\n    };\r\n  },\r\n\r\n  /**\r\n   * get date by nthWeeks and week day in range\r\n   *\r\n   * @private\r\n   * @param  {number} nthWeek the week\r\n   * @param  {number} day   the week day\r\n   * @param  {Array} range [d1, d2]\r\n   * @return {Object}\r\n   */\r\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\r\n    var rangeInfo = this._getRangeInfo(range);\r\n\r\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\r\n      return false;\r\n    }\r\n\r\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\r\n    var date = new Date(rangeInfo.start.time);\r\n    date.setDate(rangeInfo.start.d + nthDay);\r\n    return this.getDateInfo(date);\r\n  }\r\n};\r\nCalendar.dimensions = Calendar.prototype.dimensions;\r\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\r\n\r\nCalendar.create = function (ecModel, api) {\r\n  var calendarList = [];\r\n  ecModel.eachComponent('calendar', function (calendarModel) {\r\n    var calendar = new Calendar(calendarModel, ecModel, api);\r\n    calendarList.push(calendar);\r\n    calendarModel.coordinateSystem = calendar;\r\n  });\r\n  ecModel.eachSeries(function (calendarSeries) {\r\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\r\n      // Inject coordinate system\r\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\r\n    }\r\n  });\r\n  return calendarList;\r\n};\r\n\r\nfunction doConvert(methodName, ecModel, finder, value) {\r\n  var calendarModel = finder.calendarModel;\r\n  var seriesModel = finder.seriesModel;\r\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\r\n  return coordSys === this ? coordSys[methodName](value) : null;\r\n}\r\n\r\nCoordinateSystem.register('calendar', Calendar);\r\nvar _default = Calendar;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\nvar _layout = require(\"../../util/layout\");\r\n\r\nvar getLayoutParams = _layout.getLayoutParams;\r\nvar sizeCalculable = _layout.sizeCalculable;\r\nvar mergeLayoutParam = _layout.mergeLayoutParam;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar CalendarModel = ComponentModel.extend({\r\n  type: 'calendar',\r\n\r\n  /**\r\n   * @type {module:echarts/coord/calendar/Calendar}\r\n   */\r\n  coordinateSystem: null,\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    left: 80,\r\n    top: 60,\r\n    cellSize: 20,\r\n    // horizontal vertical\r\n    orient: 'horizontal',\r\n    // month separate line style\r\n    splitLine: {\r\n      show: true,\r\n      lineStyle: {\r\n        color: '#000',\r\n        width: 1,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    // rect style  temporarily unused emphasis\r\n    itemStyle: {\r\n      color: '#fff',\r\n      borderWidth: 1,\r\n      borderColor: '#ccc'\r\n    },\r\n    // week text style\r\n    dayLabel: {\r\n      show: true,\r\n      // a week first day\r\n      firstDay: 0,\r\n      // start end\r\n      position: 'start',\r\n      margin: '50%',\r\n      // 50% of cellSize\r\n      nameMap: 'en',\r\n      color: '#000'\r\n    },\r\n    // month text style\r\n    monthLabel: {\r\n      show: true,\r\n      // start end\r\n      position: 'start',\r\n      margin: 5,\r\n      // center or left\r\n      align: 'center',\r\n      // cn en []\r\n      nameMap: 'en',\r\n      formatter: null,\r\n      color: '#000'\r\n    },\r\n    // year text style\r\n    yearLabel: {\r\n      show: true,\r\n      // top bottom left right\r\n      position: null,\r\n      margin: 30,\r\n      formatter: null,\r\n      color: '#ccc',\r\n      fontFamily: 'sans-serif',\r\n      fontWeight: 'bolder',\r\n      fontSize: 20\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (option, parentModel, ecModel, extraOpt) {\r\n    var inputPositionParams = getLayoutParams(option);\r\n    CalendarModel.superApply(this, 'init', arguments);\r\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  mergeOption: function (option, extraOpt) {\r\n    CalendarModel.superApply(this, 'mergeOption', arguments);\r\n    mergeAndNormalizeLayoutParams(this.option, option);\r\n  }\r\n});\r\n\r\nfunction mergeAndNormalizeLayoutParams(target, raw) {\r\n  // Normalize cellSize\r\n  var cellSize = target.cellSize;\r\n\r\n  if (!zrUtil.isArray(cellSize)) {\r\n    cellSize = target.cellSize = [cellSize, cellSize];\r\n  } else if (cellSize.length === 1) {\r\n    cellSize[1] = cellSize[0];\r\n  }\r\n\r\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\r\n    // If user have set `width` or both `left` and `right`, cellSize\r\n    // will be automatically set to 'auto', otherwise the default\r\n    // setting of cellSize will make `width` setting not work.\r\n    if (sizeCalculable(raw, hvIdx)) {\r\n      cellSize[hvIdx] = 'auto';\r\n    }\r\n\r\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\r\n  });\r\n  mergeLayoutParam(target, raw, {\r\n    type: 'box',\r\n    ignoreSize: ignoreSize\r\n  });\r\n}\r\n\r\nvar _default = CalendarModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(coordSys) {\r\n  var rect = coordSys.getRect();\r\n  var rangeInfo = coordSys.getRangeInfo();\r\n  return {\r\n    coordSys: {\r\n      type: 'calendar',\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height,\r\n      cellWidth: coordSys.getCellWidth(),\r\n      cellHeight: coordSys.getCellHeight(),\r\n      rangeInfo: {\r\n        start: rangeInfo.start,\r\n        end: rangeInfo.end,\r\n        weeks: rangeInfo.weeks,\r\n        dayCount: rangeInfo.allDay\r\n      }\r\n    },\r\n    api: {\r\n      coord: function (data, clamp) {\r\n        return coordSys.dataToPoint(data, clamp);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Axis = require(\"../Axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Extend axis 2d\r\n * @constructor module:echarts/coord/cartesian/Axis2D\r\n * @extends {module:echarts/coord/cartesian/Axis}\r\n * @param {string} dim\r\n * @param {*} scale\r\n * @param {Array.<number>} coordExtent\r\n * @param {string} axisType\r\n * @param {string} position\r\n */\r\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\r\n  Axis.call(this, dim, scale, coordExtent);\r\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = axisType || 'value';\r\n  /**\r\n   * Axis position\r\n   *  - 'top'\r\n   *  - 'bottom'\r\n   *  - 'left'\r\n   *  - 'right'\r\n   */\r\n\r\n  this.position = position || 'bottom';\r\n};\r\n\r\nAxis2D.prototype = {\r\n  constructor: Axis2D,\r\n\r\n  /**\r\n   * Index of axis, can be used as key\r\n   */\r\n  index: 0,\r\n\r\n  /**\r\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\r\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\r\n   *         If not on zero of other axis, return null/undefined.\r\n   *         If no axes, return an empty array.\r\n   */\r\n  getAxesOnZeroOf: null,\r\n\r\n  /**\r\n   * Axis model\r\n   * @param {module:echarts/coord/cartesian/AxisModel}\r\n   */\r\n  model: null,\r\n  isHorizontal: function () {\r\n    var position = this.position;\r\n    return position === 'top' || position === 'bottom';\r\n  },\r\n\r\n  /**\r\n   * Each item cooresponds to this.getExtent(), which\r\n   * means globalExtent[0] may greater than globalExtent[1],\r\n   * unless `asc` is input.\r\n   *\r\n   * @param {boolean} [asc]\r\n   * @return {Array.<number>}\r\n   */\r\n  getGlobalExtent: function (asc) {\r\n    var ret = this.getExtent();\r\n    ret[0] = this.toGlobalCoord(ret[0]);\r\n    ret[1] = this.toGlobalCoord(ret[1]);\r\n    asc && ret[0] > ret[1] && ret.reverse();\r\n    return ret;\r\n  },\r\n  getOtherAxis: function () {\r\n    this.grid.getOtherAxis();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  pointToData: function (point, clamp) {\r\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\r\n  },\r\n\r\n  /**\r\n   * Transform global coord to local coord,\r\n   * i.e. var localCoord = axis.toLocalCoord(80);\r\n   * designate by module:echarts/coord/cartesian/Grid.\r\n   * @type {Function}\r\n   */\r\n  toLocalCoord: null,\r\n\r\n  /**\r\n   * Transform global coord to local coord,\r\n   * i.e. var globalCoord = axis.toLocalCoord(40);\r\n   * designate by module:echarts/coord/cartesian/Grid.\r\n   * @type {Function}\r\n   */\r\n  toGlobalCoord: null\r\n};\r\nzrUtil.inherits(Axis2D, Axis);\r\nvar _default = Axis2D;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\nvar axisModelCreator = require(\"../axisModelCreator\");\r\n\r\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar AxisModel = ComponentModel.extend({\r\n  type: 'cartesian2dAxis',\r\n\r\n  /**\r\n   * @type {module:echarts/coord/cartesian/Axis2D}\r\n   */\r\n  axis: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function () {\r\n    AxisModel.superApply(this, 'init', arguments);\r\n    this.resetRange();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  mergeOption: function () {\r\n    AxisModel.superApply(this, 'mergeOption', arguments);\r\n    this.resetRange();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  restoreData: function () {\r\n    AxisModel.superApply(this, 'restoreData', arguments);\r\n    this.resetRange();\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   * @return {module:echarts/model/Component}\r\n   */\r\n  getCoordSysModel: function () {\r\n    return this.ecModel.queryComponents({\r\n      mainType: 'grid',\r\n      index: this.option.gridIndex,\r\n      id: this.option.gridId\r\n    })[0];\r\n  }\r\n});\r\n\r\nfunction getAxisType(axisDim, option) {\r\n  // Default axis with data is category axis\r\n  return option.type || (option.data ? 'category' : 'value');\r\n}\r\n\r\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\r\nvar extraOption = {\r\n  // gridIndex: 0,\r\n  // gridId: '',\r\n  // Offset is for multiple axis on the same position\r\n  offset: 0\r\n};\r\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\r\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\r\nvar _default = AxisModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Cartesian coordinate system\r\n * @module  echarts/coord/Cartesian\r\n *\r\n */\r\nfunction dimAxisMapper(dim) {\r\n  return this._axes[dim];\r\n}\r\n/**\r\n * @alias module:echarts/coord/Cartesian\r\n * @constructor\r\n */\r\n\r\n\r\nvar Cartesian = function (name) {\r\n  this._axes = {};\r\n  this._dimList = [];\r\n  /**\r\n   * @type {string}\r\n   */\r\n\r\n  this.name = name || '';\r\n};\r\n\r\nCartesian.prototype = {\r\n  constructor: Cartesian,\r\n  type: 'cartesian',\r\n\r\n  /**\r\n   * Get axis\r\n   * @param  {number|string} dim\r\n   * @return {module:echarts/coord/Cartesian~Axis}\r\n   */\r\n  getAxis: function (dim) {\r\n    return this._axes[dim];\r\n  },\r\n\r\n  /**\r\n   * Get axes list\r\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\r\n   */\r\n  getAxes: function () {\r\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\r\n  },\r\n\r\n  /**\r\n   * Get axes list by given scale type\r\n   */\r\n  getAxesByScale: function (scaleType) {\r\n    scaleType = scaleType.toLowerCase();\r\n    return zrUtil.filter(this.getAxes(), function (axis) {\r\n      return axis.scale.type === scaleType;\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Add axis\r\n   * @param {module:echarts/coord/Cartesian.Axis}\r\n   */\r\n  addAxis: function (axis) {\r\n    var dim = axis.dim;\r\n    this._axes[dim] = axis;\r\n\r\n    this._dimList.push(dim);\r\n  },\r\n\r\n  /**\r\n   * Convert data to coord in nd space\r\n   * @param {Array.<number>|Object.<string, number>} val\r\n   * @return {Array.<number>|Object.<string, number>}\r\n   */\r\n  dataToCoord: function (val) {\r\n    return this._dataCoordConvert(val, 'dataToCoord');\r\n  },\r\n\r\n  /**\r\n   * Convert coord in nd space to data\r\n   * @param  {Array.<number>|Object.<string, number>} val\r\n   * @return {Array.<number>|Object.<string, number>}\r\n   */\r\n  coordToData: function (val) {\r\n    return this._dataCoordConvert(val, 'coordToData');\r\n  },\r\n  _dataCoordConvert: function (input, method) {\r\n    var dimList = this._dimList;\r\n    var output = input instanceof Array ? [] : {};\r\n\r\n    for (var i = 0; i < dimList.length; i++) {\r\n      var dim = dimList[i];\r\n      var axis = this._axes[dim];\r\n      output[dim] = axis[method](input[dim]);\r\n    }\r\n\r\n    return output;\r\n  }\r\n};\r\nvar _default = Cartesian;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar Cartesian = require(\"./Cartesian\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction Cartesian2D(name) {\r\n  Cartesian.call(this, name);\r\n}\r\n\r\nCartesian2D.prototype = {\r\n  constructor: Cartesian2D,\r\n  type: 'cartesian2d',\r\n\r\n  /**\r\n   * @type {Array.<string>}\r\n   * @readOnly\r\n   */\r\n  dimensions: ['x', 'y'],\r\n\r\n  /**\r\n   * Base axis will be used on stacking.\r\n   *\r\n   * @return {module:echarts/coord/cartesian/Axis2D}\r\n   */\r\n  getBaseAxis: function () {\r\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\r\n  },\r\n\r\n  /**\r\n   * If contain point\r\n   * @param {Array.<number>} point\r\n   * @return {boolean}\r\n   */\r\n  containPoint: function (point) {\r\n    var axisX = this.getAxis('x');\r\n    var axisY = this.getAxis('y');\r\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\r\n  },\r\n\r\n  /**\r\n   * If contain data\r\n   * @param {Array.<number>} data\r\n   * @return {boolean}\r\n   */\r\n  containData: function (data) {\r\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\r\n  },\r\n\r\n  /**\r\n   * @param {Array.<number>} data\r\n   * @param {Array.<number>} out\r\n   * @return {Array.<number>}\r\n   */\r\n  dataToPoint: function (data, reserved, out) {\r\n    var xAxis = this.getAxis('x');\r\n    var yAxis = this.getAxis('y');\r\n    out = out || [];\r\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\r\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\r\n    return out;\r\n  },\r\n\r\n  /**\r\n   * @param {Array.<number>} data\r\n   * @param {Array.<number>} out\r\n   * @return {Array.<number>}\r\n   */\r\n  clampData: function (data, out) {\r\n    var xScale = this.getAxis('x').scale;\r\n    var yScale = this.getAxis('y').scale;\r\n    var xAxisExtent = xScale.getExtent();\r\n    var yAxisExtent = yScale.getExtent();\r\n    var x = xScale.parse(data[0]);\r\n    var y = yScale.parse(data[1]);\r\n    out = out || [];\r\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\r\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\r\n    return out;\r\n  },\r\n\r\n  /**\r\n   * @param {Array.<number>} point\r\n   * @param {Array.<number>} out\r\n   * @return {Array.<number>}\r\n   */\r\n  pointToData: function (point, out) {\r\n    var xAxis = this.getAxis('x');\r\n    var yAxis = this.getAxis('y');\r\n    out = out || [];\r\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\r\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\r\n    return out;\r\n  },\r\n\r\n  /**\r\n   * Get other axis\r\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\r\n   */\r\n  getOtherAxis: function (axis) {\r\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\r\n  },\r\n\r\n  /**\r\n   * Get rect area of cartesian.\r\n   * Area will have a contain function to determine if a point is in the coordinate system.\r\n   * @return {BoundingRect}\r\n   */\r\n  getArea: function () {\r\n    var xExtent = this.getAxis('x').getGlobalExtent();\r\n    var yExtent = this.getAxis('y').getGlobalExtent();\r\n    var x = Math.min(xExtent[0], xExtent[1]);\r\n    var y = Math.min(yExtent[0], yExtent[1]);\r\n    var width = Math.max(xExtent[0], xExtent[1]) - x;\r\n    var height = Math.max(yExtent[0], yExtent[1]) - y;\r\n    var rect = new BoundingRect(x, y, width, height);\r\n    return rect;\r\n  }\r\n};\r\nzrUtil.inherits(Cartesian2D, Cartesian);\r\nvar _default = Cartesian2D;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar isObject = _util.isObject;\r\nvar each = _util.each;\r\nvar map = _util.map;\r\nvar indexOf = _util.indexOf;\r\nvar retrieve = _util.retrieve;\r\n\r\nvar _layout = require(\"../../util/layout\");\r\n\r\nvar getLayoutRect = _layout.getLayoutRect;\r\n\r\nvar _axisHelper = require(\"../../coord/axisHelper\");\r\n\r\nvar createScaleByModel = _axisHelper.createScaleByModel;\r\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\r\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\r\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\r\n\r\nvar Cartesian2D = require(\"./Cartesian2D\");\r\n\r\nvar Axis2D = require(\"./Axis2D\");\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\r\n\r\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\r\n\r\nrequire(\"./GridModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Grid is a region which contains at most 4 cartesian systems\r\n *\r\n * TODO Default cartesian\r\n */\r\n// Depends on GridModel, AxisModel, which performs preprocess.\r\n\r\n/**\r\n * Check if the axis is used in the specified grid\r\n * @inner\r\n */\r\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\r\n  return axisModel.getCoordSysModel() === gridModel;\r\n}\r\n\r\nfunction Grid(gridModel, ecModel, api) {\r\n  /**\r\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\r\n   * @private\r\n   */\r\n  this._coordsMap = {};\r\n  /**\r\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\r\n   * @private\r\n   */\r\n\r\n  this._coordsList = [];\r\n  /**\r\n   * @type {Object.<string, Array.<module:echarts/coord/cartesian/Axis2D>>}\r\n   * @private\r\n   */\r\n\r\n  this._axesMap = {};\r\n  /**\r\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\r\n   * @private\r\n   */\r\n\r\n  this._axesList = [];\r\n\r\n  this._initCartesian(gridModel, ecModel, api);\r\n\r\n  this.model = gridModel;\r\n}\r\n\r\nvar gridProto = Grid.prototype;\r\ngridProto.type = 'grid';\r\ngridProto.axisPointerEnabled = true;\r\n\r\ngridProto.getRect = function () {\r\n  return this._rect;\r\n};\r\n\r\ngridProto.update = function (ecModel, api) {\r\n  var axesMap = this._axesMap;\r\n\r\n  this._updateScale(ecModel, this.model);\r\n\r\n  each(axesMap.x, function (xAxis) {\r\n    niceScaleExtent(xAxis.scale, xAxis.model);\r\n  });\r\n  each(axesMap.y, function (yAxis) {\r\n    niceScaleExtent(yAxis.scale, yAxis.model);\r\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\r\n\r\n  var onZeroRecords = {};\r\n  each(axesMap.x, function (xAxis) {\r\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\r\n  });\r\n  each(axesMap.y, function (yAxis) {\r\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\r\n  }); // Resize again if containLabel is enabled\r\n  // FIXME It may cause getting wrong grid size in data processing stage\r\n\r\n  this.resize(this.model, api);\r\n};\r\n\r\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\r\n  axis.getAxesOnZeroOf = function () {\r\n    // TODO: onZero of multiple axes.\r\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\r\n  }; // onZero can not be enabled in these two situations:\r\n  // 1. When any other axis is a category axis.\r\n  // 2. When no axis is cross 0 point.\r\n\r\n\r\n  var otherAxes = axesMap[otherAxisDim];\r\n  var otherAxisOnZeroOf;\r\n  var axisModel = axis.model;\r\n  var onZero = axisModel.get('axisLine.onZero');\r\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\r\n\r\n  if (!onZero) {\r\n    return;\r\n  } // If target axis is specified.\r\n\r\n\r\n  if (onZeroAxisIndex != null) {\r\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\r\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\r\n    }\r\n  } else {\r\n    // Find the first available other axis.\r\n    for (var idx in otherAxes) {\r\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\r\n      // if both onZero, the two Y axes overlap.\r\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\r\n        otherAxisOnZeroOf = otherAxes[idx];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (otherAxisOnZeroOf) {\r\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\r\n  }\r\n\r\n  function getOnZeroRecordKey(axis) {\r\n    return axis.dim + '_' + axis.index;\r\n  }\r\n}\r\n\r\nfunction canOnZeroToAxis(axis) {\r\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\r\n}\r\n/**\r\n * Resize the grid\r\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n * @param {module:echarts/ExtensionAPI} api\r\n */\r\n\r\n\r\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\r\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n  this._rect = gridRect;\r\n  var axesList = this._axesList;\r\n  adjustAxes(); // Minus label size\r\n\r\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\r\n    each(axesList, function (axis) {\r\n      if (!axis.model.get('axisLabel.inside')) {\r\n        var labelUnionRect = estimateLabelUnionRect(axis);\r\n\r\n        if (labelUnionRect) {\r\n          var dim = axis.isHorizontal() ? 'height' : 'width';\r\n          var margin = axis.model.get('axisLabel.margin');\r\n          gridRect[dim] -= labelUnionRect[dim] + margin;\r\n\r\n          if (axis.position === 'top') {\r\n            gridRect.y += labelUnionRect.height + margin;\r\n          } else if (axis.position === 'left') {\r\n            gridRect.x += labelUnionRect.width + margin;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    adjustAxes();\r\n  }\r\n\r\n  function adjustAxes() {\r\n    each(axesList, function (axis) {\r\n      var isHorizontal = axis.isHorizontal();\r\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\r\n      var idx = axis.inverse ? 1 : 0;\r\n      axis.setExtent(extent[idx], extent[1 - idx]);\r\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\r\n    });\r\n  }\r\n};\r\n/**\r\n * @param {string} axisType\r\n * @param {number} [axisIndex]\r\n */\r\n\r\n\r\ngridProto.getAxis = function (axisType, axisIndex) {\r\n  var axesMapOnDim = this._axesMap[axisType];\r\n\r\n  if (axesMapOnDim != null) {\r\n    if (axisIndex == null) {\r\n      // Find first axis\r\n      for (var name in axesMapOnDim) {\r\n        if (axesMapOnDim.hasOwnProperty(name)) {\r\n          return axesMapOnDim[name];\r\n        }\r\n      }\r\n    }\r\n\r\n    return axesMapOnDim[axisIndex];\r\n  }\r\n};\r\n/**\r\n * @return {Array.<module:echarts/coord/Axis>}\r\n */\r\n\r\n\r\ngridProto.getAxes = function () {\r\n  return this._axesList.slice();\r\n};\r\n/**\r\n * Usage:\r\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\r\n *      grid.getCartesian(xAxisIndex);\r\n *      grid.getCartesian(null, yAxisIndex);\r\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\r\n *\r\n * @param {number|Object} [xAxisIndex]\r\n * @param {number} [yAxisIndex]\r\n */\r\n\r\n\r\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\r\n  if (xAxisIndex != null && yAxisIndex != null) {\r\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n    return this._coordsMap[key];\r\n  }\r\n\r\n  if (isObject(xAxisIndex)) {\r\n    yAxisIndex = xAxisIndex.yAxisIndex;\r\n    xAxisIndex = xAxisIndex.xAxisIndex;\r\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\r\n\r\n\r\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\r\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\r\n      return coordList[i];\r\n    }\r\n  }\r\n};\r\n\r\ngridProto.getCartesians = function () {\r\n  return this._coordsList.slice();\r\n};\r\n/**\r\n * @implements\r\n * see {module:echarts/CoodinateSystem}\r\n */\r\n\r\n\r\ngridProto.convertToPixel = function (ecModel, finder, value) {\r\n  var target = this._findConvertTarget(ecModel, finder);\r\n\r\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\r\n};\r\n/**\r\n * @implements\r\n * see {module:echarts/CoodinateSystem}\r\n */\r\n\r\n\r\ngridProto.convertFromPixel = function (ecModel, finder, value) {\r\n  var target = this._findConvertTarget(ecModel, finder);\r\n\r\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\r\n};\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\ngridProto._findConvertTarget = function (ecModel, finder) {\r\n  var seriesModel = finder.seriesModel;\r\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\r\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\r\n  var gridModel = finder.gridModel;\r\n  var coordsList = this._coordsList;\r\n  var cartesian;\r\n  var axis;\r\n\r\n  if (seriesModel) {\r\n    cartesian = seriesModel.coordinateSystem;\r\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\r\n  } else if (xAxisModel && yAxisModel) {\r\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\r\n  } else if (xAxisModel) {\r\n    axis = this.getAxis('x', xAxisModel.componentIndex);\r\n  } else if (yAxisModel) {\r\n    axis = this.getAxis('y', yAxisModel.componentIndex);\r\n  } // Lowest priority.\r\n  else if (gridModel) {\r\n      var grid = gridModel.coordinateSystem;\r\n\r\n      if (grid === this) {\r\n        cartesian = this._coordsList[0];\r\n      }\r\n    }\r\n\r\n  return {\r\n    cartesian: cartesian,\r\n    axis: axis\r\n  };\r\n};\r\n/**\r\n * @implements\r\n * see {module:echarts/CoodinateSystem}\r\n */\r\n\r\n\r\ngridProto.containPoint = function (point) {\r\n  var coord = this._coordsList[0];\r\n\r\n  if (coord) {\r\n    return coord.containPoint(point);\r\n  }\r\n};\r\n/**\r\n * Initialize cartesian coordinate systems\r\n * @private\r\n */\r\n\r\n\r\ngridProto._initCartesian = function (gridModel, ecModel, api) {\r\n  var axisPositionUsed = {\r\n    left: false,\r\n    right: false,\r\n    top: false,\r\n    bottom: false\r\n  };\r\n  var axesMap = {\r\n    x: {},\r\n    y: {}\r\n  };\r\n  var axesCount = {\r\n    x: 0,\r\n    y: 0\r\n  }; /// Create axis\r\n\r\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\r\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\r\n\r\n  if (!axesCount.x || !axesCount.y) {\r\n    // Roll back when there no either x or y axis\r\n    this._axesMap = {};\r\n    this._axesList = [];\r\n    return;\r\n  }\r\n\r\n  this._axesMap = axesMap; /// Create cartesian2d\r\n\r\n  each(axesMap.x, function (xAxis, xAxisIndex) {\r\n    each(axesMap.y, function (yAxis, yAxisIndex) {\r\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n      var cartesian = new Cartesian2D(key);\r\n      cartesian.grid = this;\r\n      cartesian.model = gridModel;\r\n      this._coordsMap[key] = cartesian;\r\n\r\n      this._coordsList.push(cartesian);\r\n\r\n      cartesian.addAxis(xAxis);\r\n      cartesian.addAxis(yAxis);\r\n    }, this);\r\n  }, this);\r\n\r\n  function createAxisCreator(axisType) {\r\n    return function (axisModel, idx) {\r\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\r\n        return;\r\n      }\r\n\r\n      var axisPosition = axisModel.get('position');\r\n\r\n      if (axisType === 'x') {\r\n        // Fix position\r\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\r\n          // Default bottom of X\r\n          axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\r\n        }\r\n      } else {\r\n        // Fix position\r\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\r\n          // Default left of Y\r\n          axisPosition = axisPositionUsed.left ? 'right' : 'left';\r\n        }\r\n      }\r\n\r\n      axisPositionUsed[axisPosition] = true;\r\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\r\n      var isCategory = axis.type === 'category';\r\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\r\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\r\n\r\n      axisModel.axis = axis; // Inject axisModel into axis\r\n\r\n      axis.model = axisModel; // Inject grid info axis\r\n\r\n      axis.grid = this; // Index of axis, can be used as key\r\n\r\n      axis.index = idx;\r\n\r\n      this._axesList.push(axis);\r\n\r\n      axesMap[axisType][idx] = axis;\r\n      axesCount[axisType]++;\r\n    };\r\n  }\r\n};\r\n/**\r\n * Update cartesian properties from series\r\n * @param  {module:echarts/model/Option} option\r\n * @private\r\n */\r\n\r\n\r\ngridProto._updateScale = function (ecModel, gridModel) {\r\n  // Reset scale\r\n  each(this._axesList, function (axis) {\r\n    axis.scale.setExtent(Infinity, -Infinity);\r\n  });\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (isCartesian2D(seriesModel)) {\r\n      var axesModels = findAxesModels(seriesModel, ecModel);\r\n      var xAxisModel = axesModels[0];\r\n      var yAxisModel = axesModels[1];\r\n\r\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\r\n        return;\r\n      }\r\n\r\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\r\n      var data = seriesModel.getData();\r\n      var xAxis = cartesian.getAxis('x');\r\n      var yAxis = cartesian.getAxis('y');\r\n\r\n      if (data.type === 'list') {\r\n        unionExtent(data, xAxis, seriesModel);\r\n        unionExtent(data, yAxis, seriesModel);\r\n      }\r\n    }\r\n  }, this);\r\n\r\n  function unionExtent(data, axis, seriesModel) {\r\n    each(data.mapDimension(axis.dim, true), function (dim) {\r\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\r\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\r\n      // is [7, 9], the final extent should not include [0.1, 0.5].\r\n      data, getStackedDimension(data, dim));\r\n    });\r\n  }\r\n};\r\n/**\r\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\r\n * @return {Object} {baseAxes: [], otherAxes: []}\r\n */\r\n\r\n\r\ngridProto.getTooltipAxes = function (dim) {\r\n  var baseAxes = [];\r\n  var otherAxes = [];\r\n  each(this.getCartesians(), function (cartesian) {\r\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\r\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\r\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\r\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\r\n  });\r\n  return {\r\n    baseAxes: baseAxes,\r\n    otherAxes: otherAxes\r\n  };\r\n};\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction updateAxisTransform(axis, coordBase) {\r\n  var axisExtent = axis.getExtent();\r\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\r\n\r\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\r\n    return coord + coordBase;\r\n  } : function (coord) {\r\n    return axisExtentSum - coord + coordBase;\r\n  };\r\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\r\n    return coord - coordBase;\r\n  } : function (coord) {\r\n    return axisExtentSum - coord + coordBase;\r\n  };\r\n}\r\n\r\nvar axesTypes = ['xAxis', 'yAxis'];\r\n/**\r\n * @inner\r\n */\r\n\r\nfunction findAxesModels(seriesModel, ecModel) {\r\n  return map(axesTypes, function (axisType) {\r\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\r\n    return axisModel;\r\n  });\r\n}\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction isCartesian2D(seriesModel) {\r\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\r\n}\r\n\r\nGrid.create = function (ecModel, api) {\r\n  var grids = [];\r\n  ecModel.eachComponent('grid', function (gridModel, idx) {\r\n    var grid = new Grid(gridModel, ecModel, api);\r\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\r\n    // should be performed in create stage.\r\n\r\n    grid.resize(gridModel, api, true);\r\n    gridModel.coordinateSystem = grid;\r\n    grids.push(grid);\r\n  }); // Inject the coordinateSystems into seriesModel\r\n\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (!isCartesian2D(seriesModel)) {\r\n      return;\r\n    }\r\n\r\n    var axesModels = findAxesModels(seriesModel, ecModel);\r\n    var xAxisModel = axesModels[0];\r\n    var yAxisModel = axesModels[1];\r\n    var gridModel = xAxisModel.getCoordSysModel();\r\n    var grid = gridModel.coordinateSystem;\r\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\r\n  });\r\n  return grids;\r\n}; // For deciding which dimensions to use when creating list data\r\n\r\n\r\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\r\nCoordinateSystem.register('cartesian2d', Grid);\r\nvar _default = Grid;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nrequire(\"./AxisModel\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Grid 是在有直角坐标系的时候必须要存在的\r\n// 所以这里也要被 Cartesian2D 依赖\r\nvar _default = ComponentModel.extend({\r\n  type: 'grid',\r\n  dependencies: ['xAxis', 'yAxis'],\r\n  layoutMode: 'box',\r\n\r\n  /**\r\n   * @type {module:echarts/coord/cartesian/Grid}\r\n   */\r\n  coordinateSystem: null,\r\n  defaultOption: {\r\n    show: false,\r\n    zlevel: 0,\r\n    z: 0,\r\n    left: '10%',\r\n    top: 60,\r\n    right: '10%',\r\n    bottom: 60,\r\n    // If grid size contain label\r\n    containLabel: false,\r\n    // width: {totalWidth} - left - right,\r\n    // height: {totalHeight} - top - bottom,\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 1,\r\n    borderColor: '#ccc'\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Can only be called after coordinate system creation stage.\r\n * (Can be called before coordinate system update stage).\r\n *\r\n * @param {Object} opt {labelInside}\r\n * @return {Object} {\r\n *  position, rotation, labelDirection, labelOffset,\r\n *  tickDirection, labelRotate, z2\r\n * }\r\n */\r\nfunction layout(gridModel, axisModel, opt) {\r\n  opt = opt || {};\r\n  var grid = gridModel.coordinateSystem;\r\n  var axis = axisModel.axis;\r\n  var layout = {};\r\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\r\n  var rawAxisPosition = axis.position;\r\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\r\n  var axisDim = axis.dim;\r\n  var rect = grid.getRect();\r\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\r\n  var idx = {\r\n    left: 0,\r\n    right: 1,\r\n    top: 0,\r\n    bottom: 1,\r\n    onZero: 2\r\n  };\r\n  var axisOffset = axisModel.get('offset') || 0;\r\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\r\n\r\n  if (otherAxisOnZeroOf) {\r\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\r\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\r\n  } // Axis position\r\n\r\n\r\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\r\n\r\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\r\n\r\n  var dirMap = {\r\n    top: -1,\r\n    bottom: 1,\r\n    left: -1,\r\n    right: 1\r\n  };\r\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\r\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\r\n\r\n  if (axisModel.get('axisTick.inside')) {\r\n    layout.tickDirection = -layout.tickDirection;\r\n  }\r\n\r\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\r\n    layout.labelDirection = -layout.labelDirection;\r\n  } // Special label rotation\r\n\r\n\r\n  var labelRotate = axisModel.get('axisLabel.rotate');\r\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\r\n\r\n  layout.z2 = 1;\r\n  return layout;\r\n}\r\n\r\nexports.layout = layout;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  // dataItem is necessary in log axis.\r\n  dataItem = dataItem || [0, 0];\r\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\r\n    var axis = this.getAxis(dim);\r\n    var val = dataItem[dimIdx];\r\n    var halfSize = dataSize[dimIdx] / 2;\r\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\r\n  }, this);\r\n}\r\n\r\nfunction _default(coordSys) {\r\n  var rect = coordSys.grid.getRect();\r\n  return {\r\n    coordSys: {\r\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\r\n      type: 'cartesian2d',\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height\r\n    },\r\n    api: {\r\n      coord: function (data) {\r\n        // do not provide \"out\" param\r\n        return coordSys.dataToPoint(data);\r\n      },\r\n      size: zrUtil.bind(dataToCoordSize, coordSys)\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar View = require(\"../View\");\r\n\r\nvar geoSourceManager = require(\"./geoSourceManager\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * [Geo description]\r\n * For backward compatibility, the orginal interface:\r\n * `name, map, geoJson, specialAreas, nameMap` is kept.\r\n *\r\n * @param {string|Object} name\r\n * @param {string} map Map type\r\n *        Specify the positioned areas by left, top, width, height\r\n * @param {Object.<string, string>} [nameMap]\r\n *        Specify name alias\r\n * @param {boolean} [invertLongitute=true]\r\n */\r\nfunction Geo(name, map, nameMap, invertLongitute) {\r\n  View.call(this, name);\r\n  /**\r\n   * Map type\r\n   * @type {string}\r\n   */\r\n\r\n  this.map = map;\r\n  var source = geoSourceManager.load(map, nameMap);\r\n  this._nameCoordMap = source.nameCoordMap;\r\n  this._regionsMap = source.regionsMap;\r\n  this._invertLongitute = invertLongitute == null ? true : invertLongitute;\r\n  /**\r\n   * @readOnly\r\n   */\r\n\r\n  this.regions = source.regions;\r\n  /**\r\n   * @type {module:zrender/src/core/BoundingRect}\r\n   */\r\n\r\n  this._rect = source.boundingRect;\r\n}\r\n\r\nGeo.prototype = {\r\n  constructor: Geo,\r\n  type: 'geo',\r\n\r\n  /**\r\n   * @param {Array.<string>}\r\n   * @readOnly\r\n   */\r\n  dimensions: ['lng', 'lat'],\r\n\r\n  /**\r\n   * If contain given lng,lat coord\r\n   * @param {Array.<number>}\r\n   * @readOnly\r\n   */\r\n  containCoord: function (coord) {\r\n    var regions = this.regions;\r\n\r\n    for (var i = 0; i < regions.length; i++) {\r\n      if (regions[i].contain(coord)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  transformTo: function (x, y, width, height) {\r\n    var rect = this.getBoundingRect();\r\n    var invertLongitute = this._invertLongitute;\r\n    rect = rect.clone();\r\n\r\n    if (invertLongitute) {\r\n      // Longitute is inverted\r\n      rect.y = -rect.y - rect.height;\r\n    }\r\n\r\n    var rawTransformable = this._rawTransformable;\r\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\r\n    rawTransformable.decomposeTransform();\r\n\r\n    if (invertLongitute) {\r\n      var scale = rawTransformable.scale;\r\n      scale[1] = -scale[1];\r\n    }\r\n\r\n    rawTransformable.updateTransform();\r\n\r\n    this._updateTransform();\r\n  },\r\n\r\n  /**\r\n   * @param {string} name\r\n   * @return {module:echarts/coord/geo/Region}\r\n   */\r\n  getRegion: function (name) {\r\n    return this._regionsMap.get(name);\r\n  },\r\n  getRegionByCoord: function (coord) {\r\n    var regions = this.regions;\r\n\r\n    for (var i = 0; i < regions.length; i++) {\r\n      if (regions[i].contain(coord)) {\r\n        return regions[i];\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Add geoCoord for indexing by name\r\n   * @param {string} name\r\n   * @param {Array.<number>} geoCoord\r\n   */\r\n  addGeoCoord: function (name, geoCoord) {\r\n    this._nameCoordMap.set(name, geoCoord);\r\n  },\r\n\r\n  /**\r\n   * Get geoCoord by name\r\n   * @param {string} name\r\n   * @return {Array.<number>}\r\n   */\r\n  getGeoCoord: function (name) {\r\n    return this._nameCoordMap.get(name);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getBoundingRect: function () {\r\n    return this._rect;\r\n  },\r\n\r\n  /**\r\n   * @param {string|Array.<number>} data\r\n   * @param {boolean} noRoam\r\n   * @param {Array.<number>} [out]\r\n   * @return {Array.<number>}\r\n   */\r\n  dataToPoint: function (data, noRoam, out) {\r\n    if (typeof data === 'string') {\r\n      // Map area name to geoCoord\r\n      data = this.getGeoCoord(data);\r\n    }\r\n\r\n    if (data) {\r\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\r\n};\r\nzrUtil.mixin(Geo, View);\r\n\r\nfunction doConvert(methodName, ecModel, finder, value) {\r\n  var geoModel = finder.geoModel;\r\n  var seriesModel = finder.seriesModel;\r\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\r\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\r\n  return coordSys === this ? coordSys[methodName](value) : null;\r\n}\r\n\r\nvar _default = Geo;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\r\n\r\nvar geoCreator = require(\"./geoCreator\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar GeoModel = ComponentModel.extend({\r\n  type: 'geo',\r\n\r\n  /**\r\n   * @type {module:echarts/coord/geo/Geo}\r\n   */\r\n  coordinateSystem: null,\r\n  layoutMode: 'box',\r\n  init: function (option) {\r\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\r\n\r\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\r\n  },\r\n  optionUpdated: function () {\r\n    var option = this.option;\r\n    var self = this;\r\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\r\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\r\n      if (regionOpt.name) {\r\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\r\n      }\r\n\r\n      return optionModelMap;\r\n    }, zrUtil.createHashMap());\r\n    this.updateSelectedMap(option.regions);\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 0,\r\n    show: true,\r\n    left: 'center',\r\n    top: 'center',\r\n    // width:,\r\n    // height:,\r\n    // right\r\n    // bottom\r\n    // Aspect is width / height. Inited to be geoJson bbox aspect\r\n    // This parameter is used for scale this aspect\r\n    // If svg used, aspectScale is 1 by default.\r\n    // aspectScale: 0.75,\r\n    aspectScale: null,\r\n    ///// Layout with center and size\r\n    // If you wan't to put map in a fixed size box with right aspect ratio\r\n    // This two properties may more conveninet\r\n    // layoutCenter: [50%, 50%]\r\n    // layoutSize: 100\r\n    silent: false,\r\n    // Map type\r\n    map: '',\r\n    // Define left-top, right-bottom coords to control view\r\n    // For example, [ [180, 90], [-180, -90] ]\r\n    boundingCoords: null,\r\n    // Default on center of map\r\n    center: null,\r\n    zoom: 1,\r\n    scaleLimit: null,\r\n    // selectedMode: false\r\n    label: {\r\n      show: false,\r\n      color: '#000'\r\n    },\r\n    itemStyle: {\r\n      // color: 各异,\r\n      borderWidth: 0.5,\r\n      borderColor: '#444',\r\n      color: '#eee'\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        color: 'rgb(100,0,0)'\r\n      },\r\n      itemStyle: {\r\n        color: 'rgba(255,215,0,0.8)'\r\n      }\r\n    },\r\n    regions: []\r\n  },\r\n\r\n  /**\r\n   * Get model of region\r\n   * @param  {string} name\r\n   * @return {module:echarts/model/Model}\r\n   */\r\n  getRegionModel: function (name) {\r\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\r\n  },\r\n\r\n  /**\r\n   * Format label\r\n   * @param {string} name Region name\r\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\r\n   * @return {string}\r\n   */\r\n  getFormattedLabel: function (name, status) {\r\n    status = status || 'normal';\r\n    var regionModel = this.getRegionModel(name);\r\n    var formatter = regionModel.get((status === 'normal' ? '' : status + '.') + 'label.formatter');\r\n    var params = {\r\n      name: name\r\n    };\r\n\r\n    if (typeof formatter === 'function') {\r\n      params.status = status;\r\n      return formatter(params);\r\n    } else if (typeof formatter === 'string') {\r\n      return formatter.replace('{a}', name != null ? name : '');\r\n    }\r\n  },\r\n  setZoom: function (zoom) {\r\n    this.option.zoom = zoom;\r\n  },\r\n  setCenter: function (center) {\r\n    this.option.center = center;\r\n  }\r\n});\r\nzrUtil.mixin(GeoModel, selectableMixin);\r\nvar _default = GeoModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar bbox = require(\"zrender/lib/core/bbox\");\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/coord/geo/Region\r\n */\r\n\r\n/**\r\n * @param {string|Region} name\r\n * @param {Array} geometries\r\n * @param {Array.<number>} cp\r\n */\r\nfunction Region(name, geometries, cp) {\r\n  /**\r\n   * @type {string}\r\n   * @readOnly\r\n   */\r\n  this.name = name;\r\n  /**\r\n   * @type {Array.<Array>}\r\n   * @readOnly\r\n   */\r\n\r\n  this.geometries = geometries;\r\n\r\n  if (!cp) {\r\n    var rect = this.getBoundingRect();\r\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\r\n  } else {\r\n    cp = [cp[0], cp[1]];\r\n  }\r\n  /**\r\n   * @type {Array.<number>}\r\n   */\r\n\r\n\r\n  this.center = cp;\r\n}\r\n\r\nRegion.prototype = {\r\n  constructor: Region,\r\n  properties: null,\r\n\r\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  getBoundingRect: function () {\r\n    var rect = this._rect;\r\n\r\n    if (rect) {\r\n      return rect;\r\n    }\r\n\r\n    var MAX_NUMBER = Number.MAX_VALUE;\r\n    var min = [MAX_NUMBER, MAX_NUMBER];\r\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\r\n    var min2 = [];\r\n    var max2 = [];\r\n    var geometries = this.geometries;\r\n\r\n    for (var i = 0; i < geometries.length; i++) {\r\n      // Only support polygon\r\n      if (geometries[i].type !== 'polygon') {\r\n        continue;\r\n      } // Doesn't consider hole\r\n\r\n\r\n      var exterior = geometries[i].exterior;\r\n      bbox.fromPoints(exterior, min2, max2);\r\n      vec2.min(min, min, min2);\r\n      vec2.max(max, max, max2);\r\n    } // No data\r\n\r\n\r\n    if (i === 0) {\r\n      min[0] = min[1] = max[0] = max[1] = 0;\r\n    }\r\n\r\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\r\n  },\r\n\r\n  /**\r\n   * @param {<Array.<number>} coord\r\n   * @return {boolean}\r\n   */\r\n  contain: function (coord) {\r\n    var rect = this.getBoundingRect();\r\n    var geometries = this.geometries;\r\n\r\n    if (!rect.contain(coord[0], coord[1])) {\r\n      return false;\r\n    }\r\n\r\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\r\n      // Only support polygon.\r\n      if (geometries[i].type !== 'polygon') {\r\n        continue;\r\n      }\r\n\r\n      var exterior = geometries[i].exterior;\r\n      var interiors = geometries[i].interiors;\r\n\r\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\r\n        // Not in the region if point is in the hole.\r\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\r\n          if (polygonContain.contain(interiors[k])) {\r\n            continue loopGeo;\r\n          }\r\n        }\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  },\r\n  transformTo: function (x, y, width, height) {\r\n    var rect = this.getBoundingRect();\r\n    var aspect = rect.width / rect.height;\r\n\r\n    if (!width) {\r\n      width = aspect * height;\r\n    } else if (!height) {\r\n      height = width / aspect;\r\n    }\r\n\r\n    var target = new BoundingRect(x, y, width, height);\r\n    var transform = rect.calculateTransform(target);\r\n    var geometries = this.geometries;\r\n\r\n    for (var i = 0; i < geometries.length; i++) {\r\n      // Only support polygon.\r\n      if (geometries[i].type !== 'polygon') {\r\n        continue;\r\n      }\r\n\r\n      var exterior = geometries[i].exterior;\r\n      var interiors = geometries[i].interiors;\r\n\r\n      for (var p = 0; p < exterior.length; p++) {\r\n        vec2.applyTransform(exterior[p], exterior[p], transform);\r\n      }\r\n\r\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\r\n        for (var p = 0; p < interiors[h].length; p++) {\r\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\r\n        }\r\n      }\r\n    }\r\n\r\n    rect = this._rect;\r\n    rect.copy(target); // Update center\r\n\r\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\r\n  },\r\n  cloneShallow: function (name) {\r\n    name == null && (name = this.name);\r\n    var newRegion = new Region(name, this.geometries, this.center);\r\n    newRegion._rect = this._rect;\r\n    newRegion.transformTo = null; // Simply avoid to be called.\r\n\r\n    return newRegion;\r\n  }\r\n};\r\nvar _default = Region;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Fix for 钓鱼岛\r\n// var Region = require('../Region');\r\n// var zrUtil = require('zrender/src/core/util');\r\n// var geoCoord = [126, 25];\r\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\r\n\r\nfunction _default(mapType, region) {\r\n  if (mapType === 'china' && region.name === '台湾') {\r\n    region.geometries.push({\r\n      type: 'polygon',\r\n      exterior: points[0]\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar geoCoordMap = {\r\n  'Russia': [100, 60],\r\n  'United States': [-99, 38],\r\n  'United States of America': [-99, 38]\r\n};\r\n\r\nfunction _default(mapType, region) {\r\n  if (mapType === 'world') {\r\n    var geoCoord = geoCoordMap[region.name];\r\n\r\n    if (geoCoord) {\r\n      var cp = region.center;\r\n      cp[0] = geoCoord[0];\r\n      cp[1] = geoCoord[1];\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Region = require(\"../Region\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Fix for 南海诸岛\r\nvar geoCoord = [126, 25];\r\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\r\n\r\nfor (var i = 0; i < points.length; i++) {\r\n  for (var k = 0; k < points[i].length; k++) {\r\n    points[i][k][0] /= 10.5;\r\n    points[i][k][1] /= -10.5 / 0.75;\r\n    points[i][k][0] += geoCoord[0];\r\n    points[i][k][1] += geoCoord[1];\r\n  }\r\n}\r\n\r\nfunction _default(mapType, regions) {\r\n  if (mapType === 'china') {\r\n    regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\r\n      return {\r\n        type: 'polygon',\r\n        exterior: exterior\r\n      };\r\n    }), geoCoord));\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar coordsOffsetMap = {\r\n  '南海诸岛': [32, 80],\r\n  // 全国\r\n  '广东': [0, -10],\r\n  '香港': [10, 5],\r\n  '澳门': [-10, 10],\r\n  //'北京': [-10, 0],\r\n  '天津': [5, 5]\r\n};\r\n\r\nfunction _default(mapType, region) {\r\n  if (mapType === 'china') {\r\n    var coordFix = coordsOffsetMap[region.name];\r\n\r\n    if (coordFix) {\r\n      var cp = region.center;\r\n      cp[0] += coordFix[0] / 10.5;\r\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Geo = require(\"./Geo\");\r\n\r\nvar layout = require(\"../../util/layout\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar geoSourceManager = require(\"./geoSourceManager\");\r\n\r\nvar mapDataStorage = require(\"./mapDataStorage\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Resize method bound to the geo\r\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\r\n * @param {module:echarts/ExtensionAPI} api\r\n */\r\nfunction resizeGeo(geoModel, api) {\r\n  var boundingCoords = geoModel.get('boundingCoords');\r\n\r\n  if (boundingCoords != null) {\r\n    var leftTop = boundingCoords[0];\r\n    var rightBottom = boundingCoords[1];\r\n\r\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\r\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\r\n    }\r\n  }\r\n\r\n  var rect = this.getBoundingRect();\r\n  var boxLayoutOption;\r\n  var center = geoModel.get('layoutCenter');\r\n  var size = geoModel.get('layoutSize');\r\n  var viewWidth = api.getWidth();\r\n  var viewHeight = api.getHeight();\r\n  var aspect = rect.width / rect.height * this.aspectScale;\r\n  var useCenterAndSize = false;\r\n\r\n  if (center && size) {\r\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\r\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\r\n\r\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\r\n      useCenterAndSize = true;\r\n    } else {}\r\n  }\r\n\r\n  var viewRect;\r\n\r\n  if (useCenterAndSize) {\r\n    var viewRect = {};\r\n\r\n    if (aspect > 1) {\r\n      // Width is same with size\r\n      viewRect.width = size;\r\n      viewRect.height = size / aspect;\r\n    } else {\r\n      viewRect.height = size;\r\n      viewRect.width = size * aspect;\r\n    }\r\n\r\n    viewRect.y = center[1] - viewRect.height / 2;\r\n    viewRect.x = center[0] - viewRect.width / 2;\r\n  } else {\r\n    // Use left/top/width/height\r\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\r\n\r\n    boxLayoutOption.aspect = aspect;\r\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\r\n      width: viewWidth,\r\n      height: viewHeight\r\n    });\r\n  }\r\n\r\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\r\n  this.setCenter(geoModel.get('center'));\r\n  this.setZoom(geoModel.get('zoom'));\r\n}\r\n/**\r\n * @param {module:echarts/coord/Geo} geo\r\n * @param {module:echarts/model/Model} model\r\n * @inner\r\n */\r\n\r\n\r\nfunction setGeoCoords(geo, model) {\r\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\r\n    geo.addGeoCoord(name, geoCoord);\r\n  });\r\n}\r\n\r\nvar geoCreator = {\r\n  // For deciding which dimensions to use when creating list data\r\n  dimensions: Geo.prototype.dimensions,\r\n  create: function (ecModel, api) {\r\n    var geoList = []; // FIXME Create each time may be slow\r\n\r\n    ecModel.eachComponent('geo', function (geoModel, idx) {\r\n      var name = geoModel.get('map');\r\n      var aspectScale = geoModel.get('aspectScale');\r\n      var invertLongitute = true;\r\n      var mapRecords = mapDataStorage.retrieveMap(name);\r\n\r\n      if (mapRecords && mapRecords[0] && mapRecords[0].type === 'svg') {\r\n        aspectScale == null && (aspectScale = 1);\r\n        invertLongitute = false;\r\n      } else {\r\n        aspectScale == null && (aspectScale = 0.75);\r\n      }\r\n\r\n      var geo = new Geo(name + idx, name, geoModel.get('nameMap'), invertLongitute);\r\n      geo.aspectScale = aspectScale;\r\n      geo.zoomLimit = geoModel.get('scaleLimit');\r\n      geoList.push(geo);\r\n      setGeoCoords(geo, geoModel);\r\n      geoModel.coordinateSystem = geo;\r\n      geo.model = geoModel; // Inject resize method\r\n\r\n      geo.resize = resizeGeo;\r\n      geo.resize(geoModel, api);\r\n    });\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var coordSys = seriesModel.get('coordinateSystem');\r\n\r\n      if (coordSys === 'geo') {\r\n        var geoIndex = seriesModel.get('geoIndex') || 0;\r\n        seriesModel.coordinateSystem = geoList[geoIndex];\r\n      }\r\n    }); // If has map series\r\n\r\n    var mapModelGroupBySeries = {};\r\n    ecModel.eachSeriesByType('map', function (seriesModel) {\r\n      if (!seriesModel.getHostGeoModel()) {\r\n        var mapType = seriesModel.getMapType();\r\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\r\n        mapModelGroupBySeries[mapType].push(seriesModel);\r\n      }\r\n    });\r\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\r\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\r\n        return singleMapSeries.get('nameMap');\r\n      });\r\n      var geo = new Geo(mapType, mapType, zrUtil.mergeAll(nameMapList));\r\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\r\n        return singleMapSeries.get('scaleLimit');\r\n      }));\r\n      geoList.push(geo); // Inject resize method\r\n\r\n      geo.resize = resizeGeo;\r\n      geo.aspectScale = mapSeries[0].get('aspectScale');\r\n      geo.resize(mapSeries[0], api);\r\n      zrUtil.each(mapSeries, function (singleMapSeries) {\r\n        singleMapSeries.coordinateSystem = geo;\r\n        setGeoCoords(geo, singleMapSeries);\r\n      });\r\n    });\r\n    return geoList;\r\n  },\r\n\r\n  /**\r\n   * Fill given regions array\r\n   * @param  {Array.<Object>} originRegionArr\r\n   * @param  {string} mapName\r\n   * @param  {Object} [nameMap]\r\n   * @return {Array}\r\n   */\r\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\r\n    // Not use the original\r\n    var regionsArr = (originRegionArr || []).slice();\r\n    var dataNameMap = zrUtil.createHashMap();\r\n\r\n    for (var i = 0; i < regionsArr.length; i++) {\r\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\r\n    }\r\n\r\n    var source = geoSourceManager.load(mapName, nameMap);\r\n    zrUtil.each(source.regions, function (region) {\r\n      var name = region.name;\r\n      !dataNameMap.get(name) && regionsArr.push({\r\n        name: name\r\n      });\r\n    });\r\n    return regionsArr;\r\n  }\r\n};\r\necharts.registerCoordinateSystem('geo', geoCreator);\r\nvar _default = geoCreator;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\n\r\nvar parseGeoJson = require(\"./parseGeoJson\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\nvar fixNanhai = require(\"./fix/nanhai\");\r\n\r\nvar fixTextCoord = require(\"./fix/textCoord\");\r\n\r\nvar fixGeoCoord = require(\"./fix/geoCoord\");\r\n\r\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Built-in GEO fixer.\r\nvar inner = makeInner();\r\nvar _default = {\r\n  /**\r\n   * @param {string} mapName\r\n   * @param {Object} mapRecord {specialAreas, geoJSON}\r\n   * @param {string} nameProperty\r\n   * @return {Object} {regions, boundingRect}\r\n   */\r\n  load: function (mapName, mapRecord, nameProperty) {\r\n    var parsed = inner(mapRecord).parsed;\r\n\r\n    if (parsed) {\r\n      return parsed;\r\n    }\r\n\r\n    var specialAreas = mapRecord.specialAreas || {};\r\n    var geoJSON = mapRecord.geoJSON;\r\n    var regions; // https://jsperf.com/try-catch-performance-overhead\r\n\r\n    try {\r\n      regions = geoJSON ? parseGeoJson(geoJSON, nameProperty) : [];\r\n    } catch (e) {\r\n      throw new Error('Invalid geoJson format\\n' + e.message);\r\n    }\r\n\r\n    fixNanhai(mapName, regions);\r\n    each(regions, function (region) {\r\n      var regionName = region.name;\r\n      fixTextCoord(mapName, region);\r\n      fixGeoCoord(mapName, region);\r\n      fixDiaoyuIsland(mapName, region); // Some area like Alaska in USA map needs to be tansformed\r\n      // to look better\r\n\r\n      var specialArea = specialAreas[regionName];\r\n\r\n      if (specialArea) {\r\n        region.transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\r\n      }\r\n    });\r\n    return inner(mapRecord).parsed = {\r\n      regions: regions,\r\n      boundingRect: getBoundingRect(regions)\r\n    };\r\n  }\r\n};\r\n\r\nfunction getBoundingRect(regions) {\r\n  var rect;\r\n\r\n  for (var i = 0; i < regions.length; i++) {\r\n    var regionRect = regions[i].getBoundingRect();\r\n    rect = rect || regionRect.clone();\r\n    rect.union(regionRect);\r\n  }\r\n\r\n  return rect;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\r\n\r\nvar parseSVG = _parseSVG.parseSVG;\r\nvar makeViewBoxTransform = _parseSVG.makeViewBoxTransform;\r\n\r\nvar Group = require(\"zrender/lib/container/Group\");\r\n\r\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar assert = _util.assert;\r\nvar createHashMap = _util.createHashMap;\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = makeInner();\r\nvar _default = {\r\n  /**\r\n   * @param {string} mapName\r\n   * @param {Object} mapRecord {specialAreas, geoJSON}\r\n   * @return {Object} {root, boundingRect}\r\n   */\r\n  load: function (mapName, mapRecord) {\r\n    var originRoot = inner(mapRecord).originRoot;\r\n\r\n    if (originRoot) {\r\n      return {\r\n        root: originRoot,\r\n        boundingRect: inner(mapRecord).boundingRect\r\n      };\r\n    }\r\n\r\n    var graphic = buildGraphic(mapRecord);\r\n    inner(mapRecord).originRoot = graphic.root;\r\n    inner(mapRecord).boundingRect = graphic.boundingRect;\r\n    return graphic;\r\n  },\r\n  makeGraphic: function (mapName, mapRecord, hostKey) {\r\n    // For performance consideration (in large SVG), graphic only maked\r\n    // when necessary and reuse them according to hostKey.\r\n    var field = inner(mapRecord);\r\n    var rootMap = field.rootMap || (field.rootMap = createHashMap());\r\n    var root = rootMap.get(hostKey);\r\n\r\n    if (root) {\r\n      return root;\r\n    }\r\n\r\n    var originRoot = field.originRoot;\r\n    var boundingRect = field.boundingRect; // For performance, if originRoot is not used by a view,\r\n    // assign it to a view, but not reproduce graphic elements.\r\n\r\n    if (!field.originRootHostKey) {\r\n      field.originRootHostKey = hostKey;\r\n      root = originRoot;\r\n    } else {\r\n      root = buildGraphic(mapRecord, boundingRect).root;\r\n    }\r\n\r\n    return rootMap.set(hostKey, root);\r\n  },\r\n  removeGraphic: function (mapName, mapRecord, hostKey) {\r\n    var field = inner(mapRecord);\r\n    var rootMap = field.rootMap;\r\n    rootMap && rootMap.removeKey(hostKey);\r\n\r\n    if (hostKey === field.originRootHostKey) {\r\n      field.originRootHostKey = null;\r\n    }\r\n  }\r\n};\r\n\r\nfunction buildGraphic(mapRecord, boundingRect) {\r\n  var svgXML = mapRecord.svgXML;\r\n  var result;\r\n  var root;\r\n\r\n  try {\r\n    result = svgXML && parseSVG(svgXML, {\r\n      ignoreViewBox: true,\r\n      ignoreRootClip: true\r\n    }) || {};\r\n    root = result.root;\r\n    assert(root != null);\r\n  } catch (e) {\r\n    throw new Error('Invalid svg format\\n' + e.message);\r\n  }\r\n\r\n  var svgWidth = result.width;\r\n  var svgHeight = result.height;\r\n  var viewBoxRect = result.viewBoxRect;\r\n\r\n  if (!boundingRect) {\r\n    boundingRect = svgWidth == null || svgHeight == null ? // If svg width / height not specified, calculate\r\n    // bounding rect as the width / height\r\n    root.getBoundingRect() : new BoundingRect(0, 0, 0, 0);\r\n\r\n    if (svgWidth != null) {\r\n      boundingRect.width = svgWidth;\r\n    }\r\n\r\n    if (svgHeight != null) {\r\n      boundingRect.height = svgHeight;\r\n    }\r\n  }\r\n\r\n  if (viewBoxRect) {\r\n    var viewBoxTransform = makeViewBoxTransform(viewBoxRect, boundingRect.width, boundingRect.height);\r\n    var elRoot = root;\r\n    root = new Group();\r\n    root.add(elRoot);\r\n    elRoot.scale = viewBoxTransform.scale;\r\n    elRoot.position = viewBoxTransform.position;\r\n  }\r\n\r\n  root.setClipPath(new Rect({\r\n    shape: boundingRect.plain()\r\n  }));\r\n  return {\r\n    root: root,\r\n    boundingRect: boundingRect\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\nvar createHashMap = _util.createHashMap;\r\n\r\nvar mapDataStorage = require(\"./mapDataStorage\");\r\n\r\nvar geoJSONLoader = require(\"./geoJSONLoader\");\r\n\r\nvar geoSVGLoader = require(\"./geoSVGLoader\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar loaders = {\r\n  geoJSON: geoJSONLoader,\r\n  svg: geoSVGLoader\r\n};\r\nvar _default = {\r\n  /**\r\n   * @param {string} mapName\r\n   * @param {Object} nameMap\r\n   * @param {string} nameProperty\r\n   * @return {Object} source {regions, regionsMap, nameCoordMap, boundingRect}\r\n   */\r\n  load: function (mapName, nameMap, nameProperty) {\r\n    var regions = [];\r\n    var regionsMap = createHashMap();\r\n    var nameCoordMap = createHashMap();\r\n    var boundingRect;\r\n    var mapRecords = retrieveMap(mapName);\r\n    each(mapRecords, function (record) {\r\n      var singleSource = loaders[record.type].load(mapName, record, nameProperty);\r\n      each(singleSource.regions, function (region) {\r\n        var regionName = region.name; // Try use the alias in geoNameMap\r\n\r\n        if (nameMap && nameMap.hasOwnProperty(regionName)) {\r\n          region = region.cloneShallow(regionName = nameMap[regionName]);\r\n        }\r\n\r\n        regions.push(region);\r\n        regionsMap.set(regionName, region);\r\n        nameCoordMap.set(regionName, region.center);\r\n      });\r\n      var rect = singleSource.boundingRect;\r\n\r\n      if (rect) {\r\n        boundingRect ? boundingRect.union(rect) : boundingRect = rect.clone();\r\n      }\r\n    });\r\n    return {\r\n      regions: regions,\r\n      regionsMap: regionsMap,\r\n      nameCoordMap: nameCoordMap,\r\n      // FIXME Always return new ?\r\n      boundingRect: boundingRect || new BoundingRect(0, 0, 0, 0)\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @param {string} mapName\r\n   * @param {string} hostKey For cache.\r\n   * @return {Array.<module:zrender/Element>} Roots.\r\n   */\r\n  makeGraphic: makeInvoker('makeGraphic'),\r\n\r\n  /**\r\n   * @param {string} mapName\r\n   * @param {string} hostKey For cache.\r\n   */\r\n  removeGraphic: makeInvoker('removeGraphic')\r\n};\r\n\r\nfunction makeInvoker(methodName) {\r\n  return function (mapName, hostKey) {\r\n    var mapRecords = retrieveMap(mapName);\r\n    var results = [];\r\n    each(mapRecords, function (record) {\r\n      var method = loaders[record.type][methodName];\r\n      method && results.push(method(mapName, record, hostKey));\r\n    });\r\n    return results;\r\n  };\r\n}\r\n\r\nfunction mapNotExistsError(mapName) {}\r\n\r\nfunction retrieveMap(mapName) {\r\n  var mapRecords = mapDataStorage.retrieveMap(mapName) || [];\r\n  return mapRecords;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar isString = _util.isString;\r\nvar isArray = _util.isArray;\r\nvar each = _util.each;\r\nvar assert = _util.assert;\r\n\r\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\r\n\r\nvar parseXML = _parseSVG.parseXML;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\r\n// do not put too much logic in this module.\r\n\r\nvar _default = {\r\n  // The format of record: see `echarts.registerMap`.\r\n  // Compatible with previous `echarts.registerMap`.\r\n  registerMap: function (mapName, rawGeoJson, rawSpecialAreas) {\r\n    var records;\r\n\r\n    if (isArray(rawGeoJson)) {\r\n      records = rawGeoJson;\r\n    } else if (rawGeoJson.svg) {\r\n      records = [{\r\n        type: 'svg',\r\n        source: rawGeoJson.svg,\r\n        specialAreas: rawGeoJson.specialAreas\r\n      }];\r\n    } else {\r\n      // Backward compatibility.\r\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\r\n        rawSpecialAreas = rawGeoJson.specialAreas;\r\n        rawGeoJson = rawGeoJson.geoJson;\r\n      }\r\n\r\n      records = [{\r\n        type: 'geoJSON',\r\n        source: rawGeoJson,\r\n        specialAreas: rawSpecialAreas\r\n      }];\r\n    }\r\n\r\n    each(records, function (record) {\r\n      var type = record.type;\r\n      type === 'geoJson' && (type = record.type = 'geoJSON');\r\n      var parse = parsers[type];\r\n      parse(record);\r\n    });\r\n    return storage.set(mapName, records);\r\n  },\r\n  retrieveMap: function (mapName) {\r\n    return storage.get(mapName);\r\n  }\r\n};\r\nvar parsers = {\r\n  geoJSON: function (record) {\r\n    var source = record.source;\r\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\r\n  },\r\n  // Only perform parse to XML object here, which might be time\r\n  // consiming for large SVG.\r\n  // Although convert XML to zrender element is also time consiming,\r\n  // if we do it here, the clone of zrender elements has to be\r\n  // required. So we do it once for each geo instance, util real\r\n  // performance issues call for optimizing it.\r\n  svg: function (record) {\r\n    record.svgXML = parseXML(record.source);\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Region = require(\"./Region\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Parse and decode geo json\r\n * @module echarts/coord/geo/parseGeoJson\r\n */\r\nfunction decode(json) {\r\n  if (!json.UTF8Encoding) {\r\n    return json;\r\n  }\r\n\r\n  var encodeScale = json.UTF8Scale;\r\n\r\n  if (encodeScale == null) {\r\n    encodeScale = 1024;\r\n  }\r\n\r\n  var features = json.features;\r\n\r\n  for (var f = 0; f < features.length; f++) {\r\n    var feature = features[f];\r\n    var geometry = feature.geometry;\r\n    var coordinates = geometry.coordinates;\r\n    var encodeOffsets = geometry.encodeOffsets;\r\n\r\n    for (var c = 0; c < coordinates.length; c++) {\r\n      var coordinate = coordinates[c];\r\n\r\n      if (geometry.type === 'Polygon') {\r\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\r\n      } else if (geometry.type === 'MultiPolygon') {\r\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\r\n          var polygon = coordinate[c2];\r\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\r\n        }\r\n      }\r\n    }\r\n  } // Has been decoded\r\n\r\n\r\n  json.UTF8Encoding = false;\r\n  return json;\r\n}\r\n\r\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\r\n  var result = [];\r\n  var prevX = encodeOffsets[0];\r\n  var prevY = encodeOffsets[1];\r\n\r\n  for (var i = 0; i < coordinate.length; i += 2) {\r\n    var x = coordinate.charCodeAt(i) - 64;\r\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\r\n\r\n    x = x >> 1 ^ -(x & 1);\r\n    y = y >> 1 ^ -(y & 1); // Delta deocding\r\n\r\n    x += prevX;\r\n    y += prevY;\r\n    prevX = x;\r\n    prevY = y; // Dequantize\r\n\r\n    result.push([x / encodeScale, y / encodeScale]);\r\n  }\r\n\r\n  return result;\r\n}\r\n/**\r\n * @alias module:echarts/coord/geo/parseGeoJson\r\n * @param {Object} geoJson\r\n * @param {string} nameProperty\r\n * @return {module:zrender/container/Group}\r\n */\r\n\r\n\r\nfunction _default(geoJson, nameProperty) {\r\n  decode(geoJson);\r\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\r\n    // Output of mapshaper may have geometry null\r\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\r\n  }), function (featureObj) {\r\n    var properties = featureObj.properties;\r\n    var geo = featureObj.geometry;\r\n    var coordinates = geo.coordinates;\r\n    var geometries = [];\r\n\r\n    if (geo.type === 'Polygon') {\r\n      geometries.push({\r\n        type: 'polygon',\r\n        // According to the GeoJSON specification.\r\n        // First must be exterior, and the rest are all interior(holes).\r\n        exterior: coordinates[0],\r\n        interiors: coordinates.slice(1)\r\n      });\r\n    }\r\n\r\n    if (geo.type === 'MultiPolygon') {\r\n      zrUtil.each(coordinates, function (item) {\r\n        if (item[0]) {\r\n          geometries.push({\r\n            type: 'polygon',\r\n            exterior: item[0],\r\n            interiors: item.slice(1)\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    var region = new Region(properties[nameProperty || 'name'], geometries, properties.cp);\r\n    region.properties = properties;\r\n    return region;\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  dataItem = dataItem || [0, 0];\r\n  return zrUtil.map([0, 1], function (dimIdx) {\r\n    var val = dataItem[dimIdx];\r\n    var halfSize = dataSize[dimIdx] / 2;\r\n    var p1 = [];\r\n    var p2 = [];\r\n    p1[dimIdx] = val - halfSize;\r\n    p2[dimIdx] = val + halfSize;\r\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\r\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\r\n  }, this);\r\n}\r\n\r\nfunction _default(coordSys) {\r\n  var rect = coordSys.getBoundingRect();\r\n  return {\r\n    coordSys: {\r\n      type: 'geo',\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height,\r\n      zoom: coordSys.getZoom()\r\n    },\r\n    api: {\r\n      coord: function (data) {\r\n        // do not provide \"out\" and noRoam param,\r\n        // Compatible with this usage:\r\n        // echarts.util.map(item.points, api.coord)\r\n        return coordSys.dataToPoint(data);\r\n      },\r\n      size: zrUtil.bind(dataToCoordSize, coordSys)\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\r\n\r\nvar axisModelCreator = require(\"../axisModelCreator\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar AxisModel = ComponentModel.extend({\r\n  type: 'baseParallelAxis',\r\n\r\n  /**\r\n   * @type {module:echarts/coord/parallel/Axis}\r\n   */\r\n  axis: null,\r\n\r\n  /**\r\n   * @type {Array.<Array.<number>}\r\n   * @readOnly\r\n   */\r\n  activeIntervals: [],\r\n\r\n  /**\r\n   * @return {Object}\r\n   */\r\n  getAreaSelectStyle: function () {\r\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\r\n  },\r\n\r\n  /**\r\n   * The code of this feature is put on AxisModel but not ParallelAxis,\r\n   * because axisModel can be alive after echarts updating but instance of\r\n   * ParallelAxis having been disposed. this._activeInterval should be kept\r\n   * when action dispatched (i.e. legend click).\r\n   *\r\n   * @param {Array.<Array<number>>} intervals interval.length === 0\r\n   *                                          means set all active.\r\n   * @public\r\n   */\r\n  setActiveIntervals: function (intervals) {\r\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\r\n\r\n    if (activeIntervals) {\r\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\r\n        numberUtil.asc(activeIntervals[i]);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\r\n   *                         value can not be input.\r\n   * @return {string} 'normal': no activeIntervals set,\r\n   *                  'active',\r\n   *                  'inactive'.\r\n   * @public\r\n   */\r\n  getActiveState: function (value) {\r\n    var activeIntervals = this.activeIntervals;\r\n\r\n    if (!activeIntervals.length) {\r\n      return 'normal';\r\n    }\r\n\r\n    if (value == null || isNaN(value)) {\r\n      return 'inactive';\r\n    } // Simple optimization\r\n\r\n\r\n    if (activeIntervals.length === 1) {\r\n      var interval = activeIntervals[0];\r\n\r\n      if (interval[0] <= value && value <= interval[1]) {\r\n        return 'active';\r\n      }\r\n    } else {\r\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\r\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\r\n          return 'active';\r\n        }\r\n      }\r\n    }\r\n\r\n    return 'inactive';\r\n  }\r\n});\r\nvar defaultOption = {\r\n  type: 'value',\r\n\r\n  /**\r\n   * @type {Array.<number>}\r\n   */\r\n  dim: null,\r\n  // 0, 1, 2, ...\r\n  // parallelIndex: null,\r\n  areaSelectStyle: {\r\n    width: 20,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(160,197,232)',\r\n    color: 'rgba(160,197,232)',\r\n    opacity: 0.3\r\n  },\r\n  realtime: true,\r\n  // Whether realtime update view when select.\r\n  z: 10\r\n};\r\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\r\n\r\nfunction getAxisType(axisName, option) {\r\n  return option.type || (option.data ? 'category' : 'value');\r\n}\r\n\r\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\r\nvar _default = AxisModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar layoutUtil = require(\"../../util/layout\");\r\n\r\nvar axisHelper = require(\"../../coord/axisHelper\");\r\n\r\nvar ParallelAxis = require(\"./ParallelAxis\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar sliderMove = require(\"../../component/helper/sliderMove\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Parallel Coordinates\r\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\r\n */\r\nvar each = zrUtil.each;\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max;\r\nvar mathFloor = Math.floor;\r\nvar mathCeil = Math.ceil;\r\nvar round = numberUtil.round;\r\nvar PI = Math.PI;\r\n\r\nfunction Parallel(parallelModel, ecModel, api) {\r\n  /**\r\n   * key: dimension\r\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\r\n   * @private\r\n   */\r\n  this._axesMap = zrUtil.createHashMap();\r\n  /**\r\n   * key: dimension\r\n   * value: {position: [], rotation, }\r\n   * @type {Object.<string, Object>}\r\n   * @private\r\n   */\r\n\r\n  this._axesLayout = {};\r\n  /**\r\n   * Always follow axis order.\r\n   * @type {Array.<string>}\r\n   * @readOnly\r\n   */\r\n\r\n  this.dimensions = parallelModel.dimensions;\r\n  /**\r\n   * @type {module:zrender/core/BoundingRect}\r\n   */\r\n\r\n  this._rect;\r\n  /**\r\n   * @type {module:echarts/coord/parallel/ParallelModel}\r\n   */\r\n\r\n  this._model = parallelModel;\r\n\r\n  this._init(parallelModel, ecModel, api);\r\n}\r\n\r\nParallel.prototype = {\r\n  type: 'parallel',\r\n  constructor: Parallel,\r\n\r\n  /**\r\n   * Initialize cartesian coordinate systems\r\n   * @private\r\n   */\r\n  _init: function (parallelModel, ecModel, api) {\r\n    var dimensions = parallelModel.dimensions;\r\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\r\n    each(dimensions, function (dim, idx) {\r\n      var axisIndex = parallelAxisIndex[idx];\r\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\r\n\r\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\r\n\r\n      var isCategory = axis.type === 'category';\r\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\r\n      axis.inverse = axisModel.get('inverse'); // Injection\r\n\r\n      axisModel.axis = axis;\r\n      axis.model = axisModel;\r\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * Update axis scale after data processed\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  update: function (ecModel, api) {\r\n    this._updateAxesFromSeries(this._model, ecModel);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  containPoint: function (point) {\r\n    var layoutInfo = this._makeLayoutInfo();\r\n\r\n    var axisBase = layoutInfo.axisBase;\r\n    var layoutBase = layoutInfo.layoutBase;\r\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\r\n    var pAxis = point[1 - pixelDimIndex];\r\n    var pLayout = point[pixelDimIndex];\r\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\r\n  },\r\n  getModel: function () {\r\n    return this._model;\r\n  },\r\n\r\n  /**\r\n   * Update properties from series\r\n   * @private\r\n   */\r\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (!parallelModel.contains(seriesModel, ecModel)) {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n      each(this.dimensions, function (dim) {\r\n        var axis = this._axesMap.get(dim);\r\n\r\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\r\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\r\n      }, this);\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * Resize the parallel coordinate system.\r\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\r\n   * @param {module:echarts/ExtensionAPI} api\r\n   */\r\n  resize: function (parallelModel, api) {\r\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n\r\n    this._layoutAxes();\r\n  },\r\n\r\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  getRect: function () {\r\n    return this._rect;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _makeLayoutInfo: function () {\r\n    var parallelModel = this._model;\r\n    var rect = this._rect;\r\n    var xy = ['x', 'y'];\r\n    var wh = ['width', 'height'];\r\n    var layout = parallelModel.get('layout');\r\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\r\n    var layoutLength = rect[wh[pixelDimIndex]];\r\n    var layoutExtent = [0, layoutLength];\r\n    var axisCount = this.dimensions.length;\r\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\r\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\r\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\r\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\r\n    // where collapsed axes should be overlapped.\r\n\r\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\r\n    var winSize;\r\n\r\n    if (!axisExpandWindow) {\r\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\r\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\r\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\r\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\r\n    } else {\r\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\r\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\r\n    }\r\n\r\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\r\n\r\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\r\n\r\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\r\n\r\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\r\n    return {\r\n      layout: layout,\r\n      pixelDimIndex: pixelDimIndex,\r\n      layoutBase: rect[xy[pixelDimIndex]],\r\n      layoutLength: layoutLength,\r\n      axisBase: rect[xy[1 - pixelDimIndex]],\r\n      axisLength: rect[wh[1 - pixelDimIndex]],\r\n      axisExpandable: axisExpandable,\r\n      axisExpandWidth: axisExpandWidth,\r\n      axisCollapseWidth: axisCollapseWidth,\r\n      axisExpandWindow: axisExpandWindow,\r\n      axisCount: axisCount,\r\n      winInnerIndices: winInnerIndices,\r\n      axisExpandWindow0Pos: axisExpandWindow0Pos\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _layoutAxes: function () {\r\n    var rect = this._rect;\r\n    var axes = this._axesMap;\r\n    var dimensions = this.dimensions;\r\n\r\n    var layoutInfo = this._makeLayoutInfo();\r\n\r\n    var layout = layoutInfo.layout;\r\n    axes.each(function (axis) {\r\n      var axisExtent = [0, layoutInfo.axisLength];\r\n      var idx = axis.inverse ? 1 : 0;\r\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\r\n    });\r\n    each(dimensions, function (dim, idx) {\r\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\r\n      var positionTable = {\r\n        horizontal: {\r\n          x: posInfo.position,\r\n          y: layoutInfo.axisLength\r\n        },\r\n        vertical: {\r\n          x: 0,\r\n          y: posInfo.position\r\n        }\r\n      };\r\n      var rotationTable = {\r\n        horizontal: PI / 2,\r\n        vertical: 0\r\n      };\r\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\r\n      var rotation = rotationTable[layout];\r\n      var transform = matrix.create();\r\n      matrix.rotate(transform, transform, rotation);\r\n      matrix.translate(transform, transform, position); // TODO\r\n      // tick等排布信息。\r\n      // TODO\r\n      // 根据axis order 更新 dimensions顺序。\r\n\r\n      this._axesLayout[dim] = {\r\n        position: position,\r\n        rotation: rotation,\r\n        transform: transform,\r\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\r\n        axisLabelShow: posInfo.axisLabelShow,\r\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\r\n        tickDirection: 1,\r\n        labelDirection: 1\r\n      };\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * Get axis by dim.\r\n   * @param {string} dim\r\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\r\n   */\r\n  getAxis: function (dim) {\r\n    return this._axesMap.get(dim);\r\n  },\r\n\r\n  /**\r\n   * Convert a dim value of a single item of series data to Point.\r\n   * @param {*} value\r\n   * @param {string} dim\r\n   * @return {Array}\r\n   */\r\n  dataToPoint: function (value, dim) {\r\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\r\n  },\r\n\r\n  /**\r\n   * Travel data for one time, get activeState of each data item.\r\n   * @param {module:echarts/data/List} data\r\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\r\n   *                            {number} dataIndex\r\n   * @param {number} [start=0] the start dataIndex that travel from.\r\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\r\n   */\r\n  eachActiveState: function (data, callback, start, end) {\r\n    start == null && (start = 0);\r\n    end == null && (end = data.count());\r\n    var axesMap = this._axesMap;\r\n    var dimensions = this.dimensions;\r\n    var dataDimensions = [];\r\n    var axisModels = [];\r\n    zrUtil.each(dimensions, function (axisDim) {\r\n      dataDimensions.push(data.mapDimension(axisDim));\r\n      axisModels.push(axesMap.get(axisDim).model);\r\n    });\r\n    var hasActiveSet = this.hasAxisBrushed();\r\n\r\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\r\n      var activeState;\r\n\r\n      if (!hasActiveSet) {\r\n        activeState = 'normal';\r\n      } else {\r\n        activeState = 'active';\r\n        var values = data.getValues(dataDimensions, dataIndex);\r\n\r\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\r\n          var state = axisModels[j].getActiveState(values[j]);\r\n\r\n          if (state === 'inactive') {\r\n            activeState = 'inactive';\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      callback(activeState, dataIndex);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Whether has any activeSet.\r\n   * @return {boolean}\r\n   */\r\n  hasAxisBrushed: function () {\r\n    var dimensions = this.dimensions;\r\n    var axesMap = this._axesMap;\r\n    var hasActiveSet = false;\r\n\r\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\r\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\r\n        hasActiveSet = true;\r\n      }\r\n    }\r\n\r\n    return hasActiveSet;\r\n  },\r\n\r\n  /**\r\n   * Convert coords of each axis to Point.\r\n   *  Return point. For example: [10, 20]\r\n   * @param {Array.<number>} coords\r\n   * @param {string} dim\r\n   * @return {Array.<number>}\r\n   */\r\n  axisCoordToPoint: function (coord, dim) {\r\n    var axisLayout = this._axesLayout[dim];\r\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\r\n  },\r\n\r\n  /**\r\n   * Get axis layout.\r\n   */\r\n  getAxisLayout: function (dim) {\r\n    return zrUtil.clone(this._axesLayout[dim]);\r\n  },\r\n\r\n  /**\r\n   * @param {Array.<number>} point\r\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\r\n   */\r\n  getSlidedAxisExpandWindow: function (point) {\r\n    var layoutInfo = this._makeLayoutInfo();\r\n\r\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\r\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\r\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\r\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\r\n\r\n    if (!this.containPoint(point)) {\r\n      return {\r\n        behavior: 'none',\r\n        axisExpandWindow: axisExpandWindow\r\n      };\r\n    } // Conver the point from global to expand coordinates.\r\n\r\n\r\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\r\n    // slided when mouse is the center area of the window.\r\n\r\n    var delta;\r\n    var behavior = 'slide';\r\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\r\n\r\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\r\n\r\n\r\n    var useJump = triggerArea[0] != null;\r\n\r\n    if (axisCollapseWidth) {\r\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\r\n        behavior = 'jump';\r\n        delta = pointCoord - winSize * triggerArea[2];\r\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\r\n        behavior = 'jump';\r\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\r\n      } else {\r\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\r\n      }\r\n\r\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\r\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\r\n      : behavior = 'none';\r\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\r\n    else {\r\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\r\n        var pos = extent[1] * pointCoord / winSize;\r\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\r\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\r\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\r\n      }\r\n\r\n    return {\r\n      axisExpandWindow: axisExpandWindow,\r\n      behavior: behavior\r\n    };\r\n  }\r\n};\r\n\r\nfunction restrict(len, extent) {\r\n  return mathMin(mathMax(len, extent[0]), extent[1]);\r\n}\r\n\r\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\r\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\r\n  return {\r\n    position: step * axisIndex,\r\n    axisNameAvailableWidth: step,\r\n    axisLabelShow: true\r\n  };\r\n}\r\n\r\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\r\n  var layoutLength = layoutInfo.layoutLength;\r\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\r\n  var axisCount = layoutInfo.axisCount;\r\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\r\n  var winInnerIndices = layoutInfo.winInnerIndices;\r\n  var position;\r\n  var axisNameAvailableWidth = axisCollapseWidth;\r\n  var axisLabelShow = false;\r\n  var nameTruncateMaxWidth;\r\n\r\n  if (axisIndex < winInnerIndices[0]) {\r\n    position = axisIndex * axisCollapseWidth;\r\n    nameTruncateMaxWidth = axisCollapseWidth;\r\n  } else if (axisIndex <= winInnerIndices[1]) {\r\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\r\n    axisNameAvailableWidth = axisExpandWidth;\r\n    axisLabelShow = true;\r\n  } else {\r\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\r\n    nameTruncateMaxWidth = axisCollapseWidth;\r\n  }\r\n\r\n  return {\r\n    position: position,\r\n    axisNameAvailableWidth: axisNameAvailableWidth,\r\n    axisLabelShow: axisLabelShow,\r\n    nameTruncateMaxWidth: nameTruncateMaxWidth\r\n  };\r\n}\r\n\r\nvar _default = Parallel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Axis = require(\"../Axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @constructor module:echarts/coord/parallel/ParallelAxis\r\n * @extends {module:echarts/coord/Axis}\r\n * @param {string} dim\r\n * @param {*} scale\r\n * @param {Array.<number>} coordExtent\r\n * @param {string} axisType\r\n */\r\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\r\n  Axis.call(this, dim, scale, coordExtent);\r\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = axisType || 'value';\r\n  /**\r\n   * @type {number}\r\n   * @readOnly\r\n   */\r\n\r\n  this.axisIndex = axisIndex;\r\n};\r\n\r\nParallelAxis.prototype = {\r\n  constructor: ParallelAxis,\r\n\r\n  /**\r\n   * Axis model\r\n   * @param {module:echarts/coord/parallel/AxisModel}\r\n   */\r\n  model: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  isHorizontal: function () {\r\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\r\n  }\r\n};\r\nzrUtil.inherits(ParallelAxis, Axis);\r\nvar _default = ParallelAxis;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Component = require(\"../../model/Component\");\r\n\r\nrequire(\"./AxisModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = Component.extend({\r\n  type: 'parallel',\r\n  dependencies: ['parallelAxis'],\r\n\r\n  /**\r\n   * @type {module:echarts/coord/parallel/Parallel}\r\n   */\r\n  coordinateSystem: null,\r\n\r\n  /**\r\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\r\n   * @type {Array.<string>}\r\n   * @readOnly\r\n   */\r\n  dimensions: null,\r\n\r\n  /**\r\n   * Coresponding to dimensions.\r\n   * @type {Array.<number>}\r\n   * @readOnly\r\n   */\r\n  parallelAxisIndex: null,\r\n  layoutMode: 'box',\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 0,\r\n    left: 80,\r\n    top: 60,\r\n    right: 80,\r\n    bottom: 60,\r\n    // width: {totalWidth} - left - right,\r\n    // height: {totalHeight} - top - bottom,\r\n    layout: 'horizontal',\r\n    // 'horizontal' or 'vertical'\r\n    // FIXME\r\n    // naming?\r\n    axisExpandable: false,\r\n    axisExpandCenter: null,\r\n    axisExpandCount: 0,\r\n    axisExpandWidth: 50,\r\n    // FIXME '10%' ?\r\n    axisExpandRate: 17,\r\n    axisExpandDebounce: 50,\r\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\r\n    // Do not doc to user until necessary.\r\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\r\n    axisExpandTriggerOn: 'click',\r\n    // 'mousemove' or 'click'\r\n    parallelAxisDefault: null\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function () {\r\n    Component.prototype.init.apply(this, arguments);\r\n    this.mergeOption({});\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  mergeOption: function (newOption) {\r\n    var thisOption = this.option;\r\n    newOption && zrUtil.merge(thisOption, newOption, true);\r\n\r\n    this._initDimensions();\r\n  },\r\n\r\n  /**\r\n   * Whether series or axis is in this coordinate system.\r\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\r\n   * @param {module:echarts/model/Global} ecModel\r\n   */\r\n  contains: function (model, ecModel) {\r\n    var parallelIndex = model.get('parallelIndex');\r\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\r\n  },\r\n  setAxisExpand: function (opt) {\r\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\r\n      if (opt.hasOwnProperty(name)) {\r\n        this.option[name] = opt[name];\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _initDimensions: function () {\r\n    var dimensions = this.dimensions = [];\r\n    var parallelAxisIndex = this.parallelAxisIndex = [];\r\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\r\n      // Can not use this.contains here, because\r\n      // initialization has not been completed yet.\r\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\r\n    }, this);\r\n    zrUtil.each(axisModels, function (axisModel) {\r\n      dimensions.push('dim' + axisModel.get('dim'));\r\n      parallelAxisIndex.push(axisModel.componentIndex);\r\n    });\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Parallel = require(\"./Parallel\");\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Parallel coordinate system creater.\r\n */\r\nfunction create(ecModel, api) {\r\n  var coordSysList = [];\r\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\r\n    var coordSys = new Parallel(parallelModel, ecModel, api);\r\n    coordSys.name = 'parallel_' + idx;\r\n    coordSys.resize(parallelModel, api);\r\n    parallelModel.coordinateSystem = coordSys;\r\n    coordSys.model = parallelModel;\r\n    coordSysList.push(coordSys);\r\n  }); // Inject the coordinateSystems into seriesModel\r\n\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\r\n      var parallelModel = ecModel.queryComponents({\r\n        mainType: 'parallel',\r\n        index: seriesModel.get('parallelIndex'),\r\n        id: seriesModel.get('parallelId')\r\n      })[0];\r\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\r\n    }\r\n  });\r\n  return coordSysList;\r\n}\r\n\r\nCoordinateSystem.register('parallel', {\r\n  create: create\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(option) {\r\n  createParallelIfNeeded(option);\r\n  mergeAxisOptionFromParallel(option);\r\n}\r\n/**\r\n * Create a parallel coordinate if not exists.\r\n * @inner\r\n */\r\n\r\n\r\nfunction createParallelIfNeeded(option) {\r\n  if (option.parallel) {\r\n    return;\r\n  }\r\n\r\n  var hasParallelSeries = false;\r\n  zrUtil.each(option.series, function (seriesOpt) {\r\n    if (seriesOpt && seriesOpt.type === 'parallel') {\r\n      hasParallelSeries = true;\r\n    }\r\n  });\r\n\r\n  if (hasParallelSeries) {\r\n    option.parallel = [{}];\r\n  }\r\n}\r\n/**\r\n * Merge aixs definition from parallel option (if exists) to axis option.\r\n * @inner\r\n */\r\n\r\n\r\nfunction mergeAxisOptionFromParallel(option) {\r\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\r\n  zrUtil.each(axes, function (axisOption) {\r\n    if (!zrUtil.isObject(axisOption)) {\r\n      return;\r\n    }\r\n\r\n    var parallelIndex = axisOption.parallelIndex || 0;\r\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\r\n\r\n    if (parallelOption && parallelOption.parallelAxisDefault) {\r\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar textContain = require(\"zrender/lib/contain/text\");\r\n\r\nvar Axis = require(\"../Axis\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = makeInner();\r\n\r\nfunction AngleAxis(scale, angleExtent) {\r\n  angleExtent = angleExtent || [0, 360];\r\n  Axis.call(this, 'angle', scale, angleExtent);\r\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = 'category';\r\n}\r\n\r\nAngleAxis.prototype = {\r\n  constructor: AngleAxis,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  pointToData: function (point, clamp) {\r\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\r\n  },\r\n  dataToAngle: Axis.prototype.dataToCoord,\r\n  angleToData: Axis.prototype.coordToData,\r\n\r\n  /**\r\n   * Only be called in category axis.\r\n   * Angle axis uses text height to decide interval\r\n   *\r\n   * @override\r\n   * @return {number} Auto interval for cateogry axis tick and label\r\n   */\r\n  calculateCategoryInterval: function () {\r\n    var axis = this;\r\n    var labelModel = axis.getLabelModel();\r\n    var ordinalScale = axis.scale;\r\n    var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\r\n    // avoid generating a long array by `getTicks`\r\n    // in large category data case.\r\n\r\n    var tickCount = ordinalScale.count();\r\n\r\n    if (ordinalExtent[1] - ordinalExtent[0] < 1) {\r\n      return 0;\r\n    }\r\n\r\n    var tickValue = ordinalExtent[0];\r\n    var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\r\n    var unitH = Math.abs(unitSpan); // Not precise, just use height as text width\r\n    // and each distance from axis line yet.\r\n\r\n    var rect = textContain.getBoundingRect(tickValue, labelModel.getFont(), 'center', 'top');\r\n    var maxH = Math.max(rect.height, 7);\r\n    var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\r\n\r\n    isNaN(dh) && (dh = Infinity);\r\n    var interval = Math.max(0, Math.floor(dh));\r\n    var cache = inner(axis.model);\r\n    var lastAutoInterval = cache.lastAutoInterval;\r\n    var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\r\n    // otherwise the calculated interval might jitter when the zoom\r\n    // window size is close to the interval-changing size.\r\n\r\n    if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\r\n    // point is not the same when zooming in or zooming out.\r\n    && lastAutoInterval > interval) {\r\n      interval = lastAutoInterval;\r\n    } // Only update cache if cache not used, otherwise the\r\n    // changing of interval is too insensitive.\r\n    else {\r\n        cache.lastTickCount = tickCount;\r\n        cache.lastAutoInterval = interval;\r\n      }\r\n\r\n    return interval;\r\n  }\r\n};\r\nzrUtil.inherits(AngleAxis, Axis);\r\nvar _default = AngleAxis;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\nvar axisModelCreator = require(\"../axisModelCreator\");\r\n\r\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PolarAxisModel = ComponentModel.extend({\r\n  type: 'polarAxis',\r\n\r\n  /**\r\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\r\n   */\r\n  axis: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getCoordSysModel: function () {\r\n    return this.ecModel.queryComponents({\r\n      mainType: 'polar',\r\n      index: this.option.polarIndex,\r\n      id: this.option.polarId\r\n    })[0];\r\n  }\r\n});\r\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\r\nvar polarAxisDefaultExtendedOption = {\r\n  angle: {\r\n    // polarIndex: 0,\r\n    // polarId: '',\r\n    startAngle: 90,\r\n    clockwise: true,\r\n    splitNumber: 12,\r\n    axisLabel: {\r\n      rotate: false\r\n    }\r\n  },\r\n  radius: {\r\n    // polarIndex: 0,\r\n    // polarId: '',\r\n    splitNumber: 5\r\n  }\r\n};\r\n\r\nfunction getAxisType(axisDim, option) {\r\n  // Default axis with data is category axis\r\n  return option.type || (option.data ? 'category' : 'value');\r\n}\r\n\r\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\r\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar RadiusAxis = require(\"./RadiusAxis\");\r\n\r\nvar AngleAxis = require(\"./AngleAxis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/coord/polar/Polar\r\n */\r\n\r\n/**\r\n * @alias {module:echarts/coord/polar/Polar}\r\n * @constructor\r\n * @param {string} name\r\n */\r\nvar Polar = function (name) {\r\n  /**\r\n   * @type {string}\r\n   */\r\n  this.name = name || '';\r\n  /**\r\n   * x of polar center\r\n   * @type {number}\r\n   */\r\n\r\n  this.cx = 0;\r\n  /**\r\n   * y of polar center\r\n   * @type {number}\r\n   */\r\n\r\n  this.cy = 0;\r\n  /**\r\n   * @type {module:echarts/coord/polar/RadiusAxis}\r\n   * @private\r\n   */\r\n\r\n  this._radiusAxis = new RadiusAxis();\r\n  /**\r\n   * @type {module:echarts/coord/polar/AngleAxis}\r\n   * @private\r\n   */\r\n\r\n  this._angleAxis = new AngleAxis();\r\n  this._radiusAxis.polar = this._angleAxis.polar = this;\r\n};\r\n\r\nPolar.prototype = {\r\n  type: 'polar',\r\n  axisPointerEnabled: true,\r\n  constructor: Polar,\r\n\r\n  /**\r\n   * @param {Array.<string>}\r\n   * @readOnly\r\n   */\r\n  dimensions: ['radius', 'angle'],\r\n\r\n  /**\r\n   * @type {module:echarts/coord/PolarModel}\r\n   */\r\n  model: null,\r\n\r\n  /**\r\n   * If contain coord\r\n   * @param {Array.<number>} point\r\n   * @return {boolean}\r\n   */\r\n  containPoint: function (point) {\r\n    var coord = this.pointToCoord(point);\r\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\r\n  },\r\n\r\n  /**\r\n   * If contain data\r\n   * @param {Array.<number>} data\r\n   * @return {boolean}\r\n   */\r\n  containData: function (data) {\r\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\r\n  },\r\n\r\n  /**\r\n   * @param {string} dim\r\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\r\n   */\r\n  getAxis: function (dim) {\r\n    return this['_' + dim + 'Axis'];\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<module:echarts/coord/Axis>}\r\n   */\r\n  getAxes: function () {\r\n    return [this._radiusAxis, this._angleAxis];\r\n  },\r\n\r\n  /**\r\n   * Get axes by type of scale\r\n   * @param {string} scaleType\r\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\r\n   */\r\n  getAxesByScale: function (scaleType) {\r\n    var axes = [];\r\n    var angleAxis = this._angleAxis;\r\n    var radiusAxis = this._radiusAxis;\r\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\r\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\r\n    return axes;\r\n  },\r\n\r\n  /**\r\n   * @return {module:echarts/coord/polar/AngleAxis}\r\n   */\r\n  getAngleAxis: function () {\r\n    return this._angleAxis;\r\n  },\r\n\r\n  /**\r\n   * @return {module:echarts/coord/polar/RadiusAxis}\r\n   */\r\n  getRadiusAxis: function () {\r\n    return this._radiusAxis;\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/coord/polar/Axis}\r\n   * @return {module:echarts/coord/polar/Axis}\r\n   */\r\n  getOtherAxis: function (axis) {\r\n    var angleAxis = this._angleAxis;\r\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\r\n  },\r\n\r\n  /**\r\n   * Base axis will be used on stacking.\r\n   *\r\n   * @return {module:echarts/coord/polar/Axis}\r\n   */\r\n  getBaseAxis: function () {\r\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\r\n  },\r\n\r\n  /**\r\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\r\n   * @return {Object} {baseAxes: [], otherAxes: []}\r\n   */\r\n  getTooltipAxes: function (dim) {\r\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\r\n    return {\r\n      baseAxes: [baseAxis],\r\n      otherAxes: [this.getOtherAxis(baseAxis)]\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Convert a single data item to (x, y) point.\r\n   * Parameter data is an array which the first element is radius and the second is angle\r\n   * @param {Array.<number>} data\r\n   * @param {boolean} [clamp=false]\r\n   * @return {Array.<number>}\r\n   */\r\n  dataToPoint: function (data, clamp) {\r\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\r\n  },\r\n\r\n  /**\r\n   * Convert a (x, y) point to data\r\n   * @param {Array.<number>} point\r\n   * @param {boolean} [clamp=false]\r\n   * @return {Array.<number>}\r\n   */\r\n  pointToData: function (point, clamp) {\r\n    var coord = this.pointToCoord(point);\r\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\r\n  },\r\n\r\n  /**\r\n   * Convert a (x, y) point to (radius, angle) coord\r\n   * @param {Array.<number>} point\r\n   * @return {Array.<number>}\r\n   */\r\n  pointToCoord: function (point) {\r\n    var dx = point[0] - this.cx;\r\n    var dy = point[1] - this.cy;\r\n    var angleAxis = this.getAngleAxis();\r\n    var extent = angleAxis.getExtent();\r\n    var minAngle = Math.min(extent[0], extent[1]);\r\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\r\n    // FIXME\r\n\r\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\r\n    var radius = Math.sqrt(dx * dx + dy * dy);\r\n    dx /= radius;\r\n    dy /= radius;\r\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\r\n\r\n    var dir = radian < minAngle ? 1 : -1;\r\n\r\n    while (radian < minAngle || radian > maxAngle) {\r\n      radian += dir * 360;\r\n    }\r\n\r\n    return [radius, radian];\r\n  },\r\n\r\n  /**\r\n   * Convert a (radius, angle) coord to (x, y) point\r\n   * @param {Array.<number>} coord\r\n   * @return {Array.<number>}\r\n   */\r\n  coordToPoint: function (coord) {\r\n    var radius = coord[0];\r\n    var radian = coord[1] / 180 * Math.PI;\r\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\r\n\r\n    var y = -Math.sin(radian) * radius + this.cy;\r\n    return [x, y];\r\n  },\r\n\r\n  /**\r\n   * Get ring area of cartesian.\r\n   * Area will have a contain function to determine if a point is in the coordinate system.\r\n   * @return {Ring}\r\n   */\r\n  getArea: function () {\r\n    var angleAxis = this.getAngleAxis();\r\n    var radiusAxis = this.getRadiusAxis();\r\n    var radiusExtent = radiusAxis.getExtent().slice();\r\n    radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\r\n    var angleExtent = angleAxis.getExtent();\r\n    var RADIAN = Math.PI / 180;\r\n    return {\r\n      cx: this.cx,\r\n      cy: this.cy,\r\n      r0: radiusExtent[0],\r\n      r: radiusExtent[1],\r\n      startAngle: -angleExtent[0] * RADIAN,\r\n      endAngle: -angleExtent[1] * RADIAN,\r\n      clockwise: angleAxis.inverse,\r\n      contain: function (x, y) {\r\n        // It's a ring shape.\r\n        // Start angle and end angle don't matter\r\n        var dx = x - this.cx;\r\n        var dy = y - this.cy;\r\n        var d2 = dx * dx + dy * dy;\r\n        var r = this.r;\r\n        var r0 = this.r0;\r\n        return d2 <= r * r && d2 >= r0 * r0;\r\n      }\r\n    };\r\n  }\r\n};\r\nvar _default = Polar;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nrequire(\"./AxisModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendComponentModel({\r\n  type: 'polar',\r\n  dependencies: ['polarAxis', 'angleAxis'],\r\n\r\n  /**\r\n   * @type {module:echarts/coord/polar/Polar}\r\n   */\r\n  coordinateSystem: null,\r\n\r\n  /**\r\n   * @param {string} axisType\r\n   * @return {module:echarts/coord/polar/AxisModel}\r\n   */\r\n  findAxisModel: function (axisType) {\r\n    var foundAxisModel;\r\n    var ecModel = this.ecModel;\r\n    ecModel.eachComponent(axisType, function (axisModel) {\r\n      if (axisModel.getCoordSysModel() === this) {\r\n        foundAxisModel = axisModel;\r\n      }\r\n    }, this);\r\n    return foundAxisModel;\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 0,\r\n    center: ['50%', '50%'],\r\n    radius: '80%'\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Axis = require(\"../Axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction RadiusAxis(scale, radiusExtent) {\r\n  Axis.call(this, 'radius', scale, radiusExtent);\r\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = 'category';\r\n}\r\n\r\nRadiusAxis.prototype = {\r\n  constructor: RadiusAxis,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  pointToData: function (point, clamp) {\r\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\r\n  },\r\n  dataToRadius: Axis.prototype.dataToCoord,\r\n  radiusToData: Axis.prototype.coordToData\r\n};\r\nzrUtil.inherits(RadiusAxis, Axis);\r\nvar _default = RadiusAxis;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Polar = require(\"./Polar\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\nvar _axisHelper = require(\"../../coord/axisHelper\");\r\n\r\nvar createScaleByModel = _axisHelper.createScaleByModel;\r\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\r\n\r\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\r\n\r\nrequire(\"./PolarModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// TODO Axis scale\r\n\r\n/**\r\n * Resize method bound to the polar\r\n * @param {module:echarts/coord/polar/PolarModel} polarModel\r\n * @param {module:echarts/ExtensionAPI} api\r\n */\r\nfunction resizePolar(polar, polarModel, api) {\r\n  var center = polarModel.get('center');\r\n  var width = api.getWidth();\r\n  var height = api.getHeight();\r\n  polar.cx = parsePercent(center[0], width);\r\n  polar.cy = parsePercent(center[1], height);\r\n  var radiusAxis = polar.getRadiusAxis();\r\n  var size = Math.min(width, height) / 2;\r\n  var radius = polarModel.get('radius');\r\n\r\n  if (radius == null) {\r\n    radius = [0, '100%'];\r\n  } else if (!zrUtil.isArray(radius)) {\r\n    // r0 = 0\r\n    radius = [0, radius];\r\n  }\r\n\r\n  radius = [parsePercent(radius[0], size), parsePercent(radius[1], size)];\r\n  radiusAxis.inverse ? radiusAxis.setExtent(radius[1], radius[0]) : radiusAxis.setExtent(radius[0], radius[1]);\r\n}\r\n/**\r\n * Update polar\r\n */\r\n\r\n\r\nfunction updatePolarScale(ecModel, api) {\r\n  var polar = this;\r\n  var angleAxis = polar.getAngleAxis();\r\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\r\n\r\n  angleAxis.scale.setExtent(Infinity, -Infinity);\r\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (seriesModel.coordinateSystem === polar) {\r\n      var data = seriesModel.getData();\r\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\r\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\r\n      });\r\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\r\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\r\n      });\r\n    }\r\n  });\r\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\r\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\r\n\r\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\r\n    var extent = angleAxis.getExtent();\r\n    var diff = 360 / angleAxis.scale.count();\r\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\r\n    angleAxis.setExtent(extent[0], extent[1]);\r\n  }\r\n}\r\n/**\r\n * Set common axis properties\r\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\r\n * @param {module:echarts/coord/polar/AxisModel}\r\n * @inner\r\n */\r\n\r\n\r\nfunction setAxis(axis, axisModel) {\r\n  axis.type = axisModel.get('type');\r\n  axis.scale = createScaleByModel(axisModel);\r\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\r\n  axis.inverse = axisModel.get('inverse');\r\n\r\n  if (axisModel.mainType === 'angleAxis') {\r\n    axis.inverse ^= axisModel.get('clockwise');\r\n    var startAngle = axisModel.get('startAngle');\r\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\r\n  } // Inject axis instance\r\n\r\n\r\n  axisModel.axis = axis;\r\n  axis.model = axisModel;\r\n}\r\n\r\nvar polarCreator = {\r\n  dimensions: Polar.prototype.dimensions,\r\n  create: function (ecModel, api) {\r\n    var polarList = [];\r\n    ecModel.eachComponent('polar', function (polarModel, idx) {\r\n      var polar = new Polar(idx); // Inject resize and update method\r\n\r\n      polar.update = updatePolarScale;\r\n      var radiusAxis = polar.getRadiusAxis();\r\n      var angleAxis = polar.getAngleAxis();\r\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\r\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\r\n      setAxis(radiusAxis, radiusAxisModel);\r\n      setAxis(angleAxis, angleAxisModel);\r\n      resizePolar(polar, polarModel, api);\r\n      polarList.push(polar);\r\n      polarModel.coordinateSystem = polar;\r\n      polar.model = polarModel;\r\n    }); // Inject coordinateSystem to series\r\n\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (seriesModel.get('coordinateSystem') === 'polar') {\r\n        var polarModel = ecModel.queryComponents({\r\n          mainType: 'polar',\r\n          index: seriesModel.get('polarIndex'),\r\n          id: seriesModel.get('polarId')\r\n        })[0];\r\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\r\n      }\r\n    });\r\n    return polarList;\r\n  }\r\n};\r\nCoordinateSystem.register('polar', polarCreator);","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  // dataItem is necessary in log axis.\r\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\r\n    var axis = this['get' + dim + 'Axis']();\r\n    var val = dataItem[dimIdx];\r\n    var halfSize = dataSize[dimIdx] / 2;\r\n    var method = 'dataTo' + dim;\r\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\r\n\r\n    if (dim === 'Angle') {\r\n      result = result * Math.PI / 180;\r\n    }\r\n\r\n    return result;\r\n  }, this);\r\n}\r\n\r\nfunction _default(coordSys) {\r\n  var radiusAxis = coordSys.getRadiusAxis();\r\n  var angleAxis = coordSys.getAngleAxis();\r\n  var radius = radiusAxis.getExtent();\r\n  radius[0] > radius[1] && radius.reverse();\r\n  return {\r\n    coordSys: {\r\n      type: 'polar',\r\n      cx: coordSys.cx,\r\n      cy: coordSys.cy,\r\n      r: radius[1],\r\n      r0: radius[0]\r\n    },\r\n    api: {\r\n      coord: zrUtil.bind(function (data) {\r\n        var radius = radiusAxis.dataToRadius(data[0]);\r\n        var angle = angleAxis.dataToAngle(data[1]);\r\n        var coord = coordSys.coordToPoint([radius, angle]);\r\n        coord.push(radius, angle * Math.PI / 180);\r\n        return coord;\r\n      }),\r\n      size: zrUtil.bind(dataToCoordSize, coordSys)\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Axis = require(\"../Axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction IndicatorAxis(dim, scale, radiusExtent) {\r\n  Axis.call(this, dim, scale, radiusExtent);\r\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = 'value';\r\n  this.angle = 0;\r\n  /**\r\n   * Indicator name\r\n   * @type {string}\r\n   */\r\n\r\n  this.name = '';\r\n  /**\r\n   * @type {module:echarts/model/Model}\r\n   */\r\n\r\n  this.model;\r\n}\r\n\r\nzrUtil.inherits(IndicatorAxis, Axis);\r\nvar _default = IndicatorAxis;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar IndicatorAxis = require(\"./IndicatorAxis\");\r\n\r\nvar IntervalScale = require(\"../../scale/Interval\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar _axisHelper = require(\"../axisHelper\");\r\n\r\nvar getScaleExtent = _axisHelper.getScaleExtent;\r\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\nvar LogScale = require(\"../../scale/Log\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// TODO clockwise\r\nfunction Radar(radarModel, ecModel, api) {\r\n  this._model = radarModel;\r\n  /**\r\n   * Radar dimensions\r\n   * @type {Array.<string>}\r\n   */\r\n\r\n  this.dimensions = [];\r\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\r\n    var dim = 'indicator_' + idx;\r\n    var indicatorAxis = new IndicatorAxis(dim, indicatorModel.get('axisType') === 'log' ? new LogScale() : new IntervalScale());\r\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\r\n\r\n    indicatorAxis.model = indicatorModel;\r\n    indicatorModel.axis = indicatorAxis;\r\n    this.dimensions.push(dim);\r\n    return indicatorAxis;\r\n  }, this);\r\n  this.resize(radarModel, api);\r\n  /**\r\n   * @type {number}\r\n   * @readOnly\r\n   */\r\n\r\n  this.cx;\r\n  /**\r\n   * @type {number}\r\n   * @readOnly\r\n   */\r\n\r\n  this.cy;\r\n  /**\r\n   * @type {number}\r\n   * @readOnly\r\n   */\r\n\r\n  this.r;\r\n  /**\r\n   * @type {number}\r\n   * @readOnly\r\n   */\r\n\r\n  this.r0;\r\n  /**\r\n   * @type {number}\r\n   * @readOnly\r\n   */\r\n\r\n  this.startAngle;\r\n}\r\n\r\nRadar.prototype.getIndicatorAxes = function () {\r\n  return this._indicatorAxes;\r\n};\r\n\r\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\r\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\r\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\r\n};\r\n\r\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\r\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\r\n  var angle = indicatorAxis.angle;\r\n  var x = this.cx + coord * Math.cos(angle);\r\n  var y = this.cy - coord * Math.sin(angle);\r\n  return [x, y];\r\n};\r\n\r\nRadar.prototype.pointToData = function (pt) {\r\n  var dx = pt[0] - this.cx;\r\n  var dy = pt[1] - this.cy;\r\n  var radius = Math.sqrt(dx * dx + dy * dy);\r\n  dx /= radius;\r\n  dy /= radius;\r\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\r\n  // FIXME index can calculated directly\r\n\r\n  var minRadianDiff = Infinity;\r\n  var closestAxis;\r\n  var closestAxisIdx = -1;\r\n\r\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\r\n    var indicatorAxis = this._indicatorAxes[i];\r\n    var diff = Math.abs(radian - indicatorAxis.angle);\r\n\r\n    if (diff < minRadianDiff) {\r\n      closestAxis = indicatorAxis;\r\n      closestAxisIdx = i;\r\n      minRadianDiff = diff;\r\n    }\r\n  }\r\n\r\n  return [closestAxisIdx, +(closestAxis && closestAxis.coordToData(radius))];\r\n};\r\n\r\nRadar.prototype.resize = function (radarModel, api) {\r\n  var center = radarModel.get('center');\r\n  var viewWidth = api.getWidth();\r\n  var viewHeight = api.getHeight();\r\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\r\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\r\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\r\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180; // radius may be single value like `20`, `'80%'`, or array like `[10, '80%']`\r\n\r\n  var radius = radarModel.get('radius');\r\n\r\n  if (typeof radius === 'string' || typeof radius === 'number') {\r\n    radius = [0, radius];\r\n  }\r\n\r\n  this.r0 = numberUtil.parsePercent(radius[0], viewSize);\r\n  this.r = numberUtil.parsePercent(radius[1], viewSize);\r\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\r\n    indicatorAxis.setExtent(this.r0, this.r);\r\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\r\n\r\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\r\n    indicatorAxis.angle = angle;\r\n  }, this);\r\n};\r\n\r\nRadar.prototype.update = function (ecModel, api) {\r\n  var indicatorAxes = this._indicatorAxes;\r\n  var radarModel = this._model;\r\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\r\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\r\n  });\r\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\r\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\r\n      return;\r\n    }\r\n\r\n    var data = radarSeries.getData();\r\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\r\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\r\n    });\r\n  }, this);\r\n  var splitNumber = radarModel.get('splitNumber');\r\n\r\n  function increaseInterval(interval) {\r\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\r\n\r\n    var f = interval / exp10;\r\n\r\n    if (f === 2) {\r\n      f = 5;\r\n    } else {\r\n      // f is 2 or 5\r\n      f *= 2;\r\n    }\r\n\r\n    return f * exp10;\r\n  } // Force all the axis fixing the maxSplitNumber.\r\n\r\n\r\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\r\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model).extent;\r\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\r\n    var axisModel = indicatorAxis.model;\r\n    var scale = indicatorAxis.scale;\r\n    var fixedMin = axisModel.getMin();\r\n    var fixedMax = axisModel.getMax();\r\n    var interval = scale.getInterval();\r\n\r\n    if (fixedMin != null && fixedMax != null) {\r\n      // User set min, max, divide to get new interval\r\n      scale.setExtent(+fixedMin, +fixedMax);\r\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\r\n    } else if (fixedMin != null) {\r\n      var max; // User set min, expand extent on the other side\r\n\r\n      do {\r\n        max = fixedMin + interval * splitNumber;\r\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\r\n        // FIXME\r\n\r\n        scale.setInterval(interval);\r\n        interval = increaseInterval(interval);\r\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\r\n    } else if (fixedMax != null) {\r\n      var min; // User set min, expand extent on the other side\r\n\r\n      do {\r\n        min = fixedMax - interval * splitNumber;\r\n        scale.setExtent(min, +fixedMax);\r\n        scale.setInterval(interval);\r\n        interval = increaseInterval(interval);\r\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\r\n    } else {\r\n      var nicedSplitNumber = scale.getTicks().length - 1;\r\n\r\n      if (nicedSplitNumber > splitNumber) {\r\n        interval = increaseInterval(interval);\r\n      } // TODO\r\n\r\n\r\n      var max = Math.ceil(rawExtent[1] / interval) * interval;\r\n      var min = numberUtil.round(max - interval * splitNumber);\r\n      scale.setExtent(min, max);\r\n      scale.setInterval(interval);\r\n    }\r\n  });\r\n};\r\n/**\r\n * Radar dimensions is based on the data\r\n * @type {Array}\r\n */\r\n\r\n\r\nRadar.dimensions = [];\r\n\r\nRadar.create = function (ecModel, api) {\r\n  var radarList = [];\r\n  ecModel.eachComponent('radar', function (radarModel) {\r\n    var radar = new Radar(radarModel, ecModel, api);\r\n    radarList.push(radar);\r\n    radarModel.coordinateSystem = radar;\r\n  });\r\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\r\n    if (radarSeries.get('coordinateSystem') === 'radar') {\r\n      // Inject coordinate system\r\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\r\n    }\r\n  });\r\n  return radarList;\r\n};\r\n\r\nCoordinateSystem.register('radar', Radar);\r\nvar _default = Radar;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar axisDefault = require(\"../axisDefault\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar valueAxisDefault = axisDefault.valueAxis;\r\n\r\nfunction defaultsShow(opt, show) {\r\n  return zrUtil.defaults({\r\n    show: show\r\n  }, opt);\r\n}\r\n\r\nvar RadarModel = echarts.extendComponentModel({\r\n  type: 'radar',\r\n  optionUpdated: function () {\r\n    var boundaryGap = this.get('boundaryGap');\r\n    var splitNumber = this.get('splitNumber');\r\n    var scale = this.get('scale');\r\n    var axisLine = this.get('axisLine');\r\n    var axisTick = this.get('axisTick');\r\n    var axisType = this.get('axisType');\r\n    var axisLabel = this.get('axisLabel');\r\n    var nameTextStyle = this.get('name');\r\n    var showName = this.get('name.show');\r\n    var nameFormatter = this.get('name.formatter');\r\n    var nameGap = this.get('nameGap');\r\n    var triggerEvent = this.get('triggerEvent');\r\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\r\n      // PENDING\r\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\r\n        indicatorOpt.min = 0;\r\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\r\n        indicatorOpt.max = 0;\r\n      }\r\n\r\n      var iNameTextStyle = nameTextStyle;\r\n\r\n      if (indicatorOpt.color != null) {\r\n        iNameTextStyle = zrUtil.defaults({\r\n          color: indicatorOpt.color\r\n        }, nameTextStyle);\r\n      } // Use same configuration\r\n\r\n\r\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\r\n        boundaryGap: boundaryGap,\r\n        splitNumber: splitNumber,\r\n        scale: scale,\r\n        axisLine: axisLine,\r\n        axisTick: axisTick,\r\n        axisType: axisType,\r\n        axisLabel: axisLabel,\r\n        // Compatible with 2 and use text\r\n        name: indicatorOpt.text,\r\n        nameLocation: 'end',\r\n        nameGap: nameGap,\r\n        // min: 0,\r\n        nameTextStyle: iNameTextStyle,\r\n        triggerEvent: triggerEvent\r\n      }, false);\r\n\r\n      if (!showName) {\r\n        indicatorOpt.name = '';\r\n      }\r\n\r\n      if (typeof nameFormatter === 'string') {\r\n        var indName = indicatorOpt.name;\r\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\r\n      } else if (typeof nameFormatter === 'function') {\r\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\r\n      }\r\n\r\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\r\n\r\n      model.mainType = 'radar';\r\n      model.componentIndex = this.componentIndex;\r\n      return model;\r\n    }, this);\r\n\r\n    this.getIndicatorModels = function () {\r\n      return indicatorModels;\r\n    };\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 0,\r\n    center: ['50%', '50%'],\r\n    radius: '75%',\r\n    startAngle: 90,\r\n    name: {\r\n      show: true // formatter: null\r\n      // textStyle: {}\r\n\r\n    },\r\n    boundaryGap: [0, 0],\r\n    splitNumber: 5,\r\n    nameGap: 15,\r\n    scale: false,\r\n    // Polygon or circle\r\n    shape: 'polygon',\r\n    axisLine: zrUtil.merge({\r\n      lineStyle: {\r\n        color: '#bbb'\r\n      }\r\n    }, valueAxisDefault.axisLine),\r\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\r\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\r\n    axisType: 'interval',\r\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\r\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\r\n    // {text, min, max}\r\n    indicator: []\r\n  }\r\n});\r\nvar _default = RadarModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\nvar axisModelCreator = require(\"../axisModelCreator\");\r\n\r\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar AxisModel = ComponentModel.extend({\r\n  type: 'singleAxis',\r\n  layoutMode: 'box',\r\n\r\n  /**\r\n   * @type {module:echarts/coord/single/SingleAxis}\r\n   */\r\n  axis: null,\r\n\r\n  /**\r\n   * @type {module:echarts/coord/single/Single}\r\n   */\r\n  coordinateSystem: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getCoordSysModel: function () {\r\n    return this;\r\n  }\r\n});\r\nvar defaultOption = {\r\n  left: '5%',\r\n  top: '5%',\r\n  right: '5%',\r\n  bottom: '5%',\r\n  type: 'value',\r\n  position: 'bottom',\r\n  orient: 'horizontal',\r\n  axisLine: {\r\n    show: true,\r\n    lineStyle: {\r\n      width: 1,\r\n      type: 'solid'\r\n    }\r\n  },\r\n  // Single coordinate system and single axis is the,\r\n  // which is used as the parent tooltip model.\r\n  // same model, so we set default tooltip show as true.\r\n  tooltip: {\r\n    show: true\r\n  },\r\n  axisTick: {\r\n    show: true,\r\n    length: 6,\r\n    lineStyle: {\r\n      width: 1\r\n    }\r\n  },\r\n  axisLabel: {\r\n    show: true,\r\n    interval: 'auto'\r\n  },\r\n  splitLine: {\r\n    show: true,\r\n    lineStyle: {\r\n      type: 'dashed',\r\n      opacity: 0.2\r\n    }\r\n  }\r\n};\r\n\r\nfunction getAxisType(axisName, option) {\r\n  return option.type || (option.data ? 'category' : 'value');\r\n}\r\n\r\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\r\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\r\nvar _default = AxisModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar SingleAxis = require(\"./SingleAxis\");\r\n\r\nvar axisHelper = require(\"../axisHelper\");\r\n\r\nvar _layout = require(\"../../util/layout\");\r\n\r\nvar getLayoutRect = _layout.getLayoutRect;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Single coordinates system.\r\n */\r\n\r\n/**\r\n * Create a single coordinates system.\r\n *\r\n * @param {module:echarts/coord/single/AxisModel} axisModel\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {module:echarts/ExtensionAPI} api\r\n */\r\nfunction Single(axisModel, ecModel, api) {\r\n  /**\r\n   * @type {string}\r\n   * @readOnly\r\n   */\r\n  this.dimension = 'single';\r\n  /**\r\n   * Add it just for draw tooltip.\r\n   *\r\n   * @type {Array.<string>}\r\n   * @readOnly\r\n   */\r\n\r\n  this.dimensions = ['single'];\r\n  /**\r\n   * @private\r\n   * @type {module:echarts/coord/single/SingleAxis}.\r\n   */\r\n\r\n  this._axis = null;\r\n  /**\r\n   * @private\r\n   * @type {module:zrender/core/BoundingRect}\r\n   */\r\n\r\n  this._rect;\r\n\r\n  this._init(axisModel, ecModel, api);\r\n  /**\r\n   * @type {module:echarts/coord/single/AxisModel}\r\n   */\r\n\r\n\r\n  this.model = axisModel;\r\n}\r\n\r\nSingle.prototype = {\r\n  type: 'singleAxis',\r\n  axisPointerEnabled: true,\r\n  constructor: Single,\r\n\r\n  /**\r\n   * Initialize single coordinate system.\r\n   *\r\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @private\r\n   */\r\n  _init: function (axisModel, ecModel, api) {\r\n    var dim = this.dimension;\r\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\r\n    var isCategory = axis.type === 'category';\r\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\r\n    axis.inverse = axisModel.get('inverse');\r\n    axis.orient = axisModel.get('orient');\r\n    axisModel.axis = axis;\r\n    axis.model = axisModel;\r\n    axis.coordinateSystem = this;\r\n    this._axis = axis;\r\n  },\r\n\r\n  /**\r\n   * Update axis scale after data processed\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  update: function (ecModel, api) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (seriesModel.coordinateSystem === this) {\r\n        var data = seriesModel.getData();\r\n        each(data.mapDimension(this.dimension, true), function (dim) {\r\n          this._axis.scale.unionExtentFromData(data, dim);\r\n        }, this);\r\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * Resize the single coordinate system.\r\n   *\r\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  resize: function (axisModel, api) {\r\n    this._rect = getLayoutRect({\r\n      left: axisModel.get('left'),\r\n      top: axisModel.get('top'),\r\n      right: axisModel.get('right'),\r\n      bottom: axisModel.get('bottom'),\r\n      width: axisModel.get('width'),\r\n      height: axisModel.get('height')\r\n    }, {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n\r\n    this._adjustAxis();\r\n  },\r\n\r\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  getRect: function () {\r\n    return this._rect;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _adjustAxis: function () {\r\n    var rect = this._rect;\r\n    var axis = this._axis;\r\n    var isHorizontal = axis.isHorizontal();\r\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\r\n    var idx = axis.reverse ? 1 : 0;\r\n    axis.setExtent(extent[idx], extent[1 - idx]);\r\n\r\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\r\n  },\r\n\r\n  /**\r\n   * @param  {module:echarts/coord/single/SingleAxis} axis\r\n   * @param  {number} coordBase\r\n   */\r\n  _updateAxisTransform: function (axis, coordBase) {\r\n    var axisExtent = axis.getExtent();\r\n    var extentSum = axisExtent[0] + axisExtent[1];\r\n    var isHorizontal = axis.isHorizontal();\r\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\r\n      return coord + coordBase;\r\n    } : function (coord) {\r\n      return extentSum - coord + coordBase;\r\n    };\r\n    axis.toLocalCoord = isHorizontal ? function (coord) {\r\n      return coord - coordBase;\r\n    } : function (coord) {\r\n      return extentSum - coord + coordBase;\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Get axis.\r\n   *\r\n   * @return {module:echarts/coord/single/SingleAxis}\r\n   */\r\n  getAxis: function () {\r\n    return this._axis;\r\n  },\r\n\r\n  /**\r\n   * Get axis, add it just for draw tooltip.\r\n   *\r\n   * @return {[type]} [description]\r\n   */\r\n  getBaseAxis: function () {\r\n    return this._axis;\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<module:echarts/coord/Axis>}\r\n   */\r\n  getAxes: function () {\r\n    return [this._axis];\r\n  },\r\n\r\n  /**\r\n   * @return {Object} {baseAxes: [], otherAxes: []}\r\n   */\r\n  getTooltipAxes: function () {\r\n    return {\r\n      baseAxes: [this.getAxis()]\r\n    };\r\n  },\r\n\r\n  /**\r\n   * If contain point.\r\n   *\r\n   * @param  {Array.<number>} point\r\n   * @return {boolean}\r\n   */\r\n  containPoint: function (point) {\r\n    var rect = this.getRect();\r\n    var axis = this.getAxis();\r\n    var orient = axis.orient;\r\n\r\n    if (orient === 'horizontal') {\r\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\r\n    } else {\r\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {Array.<number>} point\r\n   * @return {Array.<number>}\r\n   */\r\n  pointToData: function (point) {\r\n    var axis = this.getAxis();\r\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\r\n  },\r\n\r\n  /**\r\n   * Convert the series data to concrete point.\r\n   *\r\n   * @param  {number|Array.<number>} val\r\n   * @return {Array.<number>}\r\n   */\r\n  dataToPoint: function (val) {\r\n    var axis = this.getAxis();\r\n    var rect = this.getRect();\r\n    var pt = [];\r\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\r\n\r\n    if (val instanceof Array) {\r\n      val = val[0];\r\n    }\r\n\r\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\r\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\r\n    return pt;\r\n  }\r\n};\r\nvar _default = Single;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Axis = require(\"../Axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @constructor  module:echarts/coord/single/SingleAxis\r\n * @extends {module:echarts/coord/Axis}\r\n * @param {string} dim\r\n * @param {*} scale\r\n * @param {Array.<number>} coordExtent\r\n * @param {string} axisType\r\n * @param {string} position\r\n */\r\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\r\n  Axis.call(this, dim, scale, coordExtent);\r\n  /**\r\n   * Axis type\r\n   * - 'category'\r\n   * - 'value'\r\n   * - 'time'\r\n   * - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = axisType || 'value';\r\n  /**\r\n   * Axis position\r\n   *  - 'top'\r\n   *  - 'bottom'\r\n   *  - 'left'\r\n   *  - 'right'\r\n   *  @type {string}\r\n   */\r\n\r\n  this.position = position || 'bottom';\r\n  /**\r\n   * Axis orient\r\n   *  - 'horizontal'\r\n   *  - 'vertical'\r\n   * @type {[type]}\r\n   */\r\n\r\n  this.orient = null;\r\n};\r\n\r\nSingleAxis.prototype = {\r\n  constructor: SingleAxis,\r\n\r\n  /**\r\n   * Axis model\r\n   * @type {module:echarts/coord/single/AxisModel}\r\n   */\r\n  model: null,\r\n\r\n  /**\r\n   * Judge the orient of the axis.\r\n   * @return {boolean}\r\n   */\r\n  isHorizontal: function () {\r\n    var position = this.position;\r\n    return position === 'top' || position === 'bottom';\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  pointToData: function (point, clamp) {\r\n    return this.coordinateSystem.pointToData(point, clamp)[0];\r\n  },\r\n\r\n  /**\r\n   * Convert the local coord(processed by dataToCoord())\r\n   * to global coord(concrete pixel coord).\r\n   * designated by module:echarts/coord/single/Single.\r\n   * @type {Function}\r\n   */\r\n  toGlobalCoord: null,\r\n\r\n  /**\r\n   * Convert the global coord to local coord.\r\n   * designated by module:echarts/coord/single/Single.\r\n   * @type {Function}\r\n   */\r\n  toLocalCoord: null\r\n};\r\nzrUtil.inherits(SingleAxis, Axis);\r\nvar _default = SingleAxis;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  // dataItem is necessary in log axis.\r\n  var axis = this.getAxis();\r\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\r\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\r\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\r\n}\r\n\r\nfunction _default(coordSys) {\r\n  var rect = coordSys.getRect();\r\n  return {\r\n    coordSys: {\r\n      type: 'singleAxis',\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height\r\n    },\r\n    api: {\r\n      coord: function (val) {\r\n        // do not provide \"out\" param\r\n        return coordSys.dataToPoint(val);\r\n      },\r\n      size: zrUtil.bind(dataToCoordSize, coordSys)\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {Object} opt {labelInside}\r\n * @return {Object} {\r\n *  position, rotation, labelDirection, labelOffset,\r\n *  tickDirection, labelRotate, z2\r\n * }\r\n */\r\nfunction layout(axisModel, opt) {\r\n  opt = opt || {};\r\n  var single = axisModel.coordinateSystem;\r\n  var axis = axisModel.axis;\r\n  var layout = {};\r\n  var axisPosition = axis.position;\r\n  var orient = axis.orient;\r\n  var rect = single.getRect();\r\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\r\n  var positionMap = {\r\n    horizontal: {\r\n      top: rectBound[2],\r\n      bottom: rectBound[3]\r\n    },\r\n    vertical: {\r\n      left: rectBound[0],\r\n      right: rectBound[1]\r\n    }\r\n  };\r\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\r\n  var r = {\r\n    horizontal: 0,\r\n    vertical: 1\r\n  };\r\n  layout.rotation = Math.PI / 2 * r[orient];\r\n  var directionMap = {\r\n    top: -1,\r\n    bottom: 1,\r\n    right: 1,\r\n    left: -1\r\n  };\r\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\r\n\r\n  if (axisModel.get('axisTick.inside')) {\r\n    layout.tickDirection = -layout.tickDirection;\r\n  }\r\n\r\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\r\n    layout.labelDirection = -layout.labelDirection;\r\n  }\r\n\r\n  var labelRotation = opt.rotate;\r\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\r\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\r\n  layout.z2 = 1;\r\n  return layout;\r\n}\r\n\r\nexports.layout = layout;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Single = require(\"./Single\");\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Single coordinate system creator.\r\n */\r\n\r\n/**\r\n * Create single coordinate system and inject it into seriesModel.\r\n *\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {module:echarts/ExtensionAPI} api\r\n * @return {Array.<module:echarts/coord/single/Single>}\r\n */\r\nfunction create(ecModel, api) {\r\n  var singles = [];\r\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\r\n    var single = new Single(axisModel, ecModel, api);\r\n    single.name = 'single_' + idx;\r\n    single.resize(axisModel, api);\r\n    axisModel.coordinateSystem = single;\r\n    singles.push(single);\r\n  });\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\r\n      var singleAxisModel = ecModel.queryComponents({\r\n        mainType: 'singleAxis',\r\n        index: seriesModel.get('singleAxisIndex'),\r\n        id: seriesModel.get('singleAxisId')\r\n      })[0];\r\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\r\n    }\r\n  });\r\n  return singles;\r\n}\r\n\r\nCoordinateSystem.register('single', {\r\n  create: create,\r\n  dimensions: Single.prototype.dimensions\r\n});","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction defaultKeyGetter(item) {\r\n  return item;\r\n}\r\n/**\r\n * @param {Array} oldArr\r\n * @param {Array} newArr\r\n * @param {Function} oldKeyGetter\r\n * @param {Function} newKeyGetter\r\n * @param {Object} [context] Can be visited by this.context in callback.\r\n */\r\n\r\n\r\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\r\n  this._old = oldArr;\r\n  this._new = newArr;\r\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\r\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\r\n  this.context = context;\r\n}\r\n\r\nDataDiffer.prototype = {\r\n  constructor: DataDiffer,\r\n\r\n  /**\r\n   * Callback function when add a data\r\n   */\r\n  add: function (func) {\r\n    this._add = func;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Callback function when update a data\r\n   */\r\n  update: function (func) {\r\n    this._update = func;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Callback function when remove a data\r\n   */\r\n  remove: function (func) {\r\n    this._remove = func;\r\n    return this;\r\n  },\r\n  execute: function () {\r\n    var oldArr = this._old;\r\n    var newArr = this._new;\r\n    var oldDataIndexMap = {};\r\n    var newDataIndexMap = {};\r\n    var oldDataKeyArr = [];\r\n    var newDataKeyArr = [];\r\n    var i;\r\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\r\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\r\n\r\n    for (i = 0; i < oldArr.length; i++) {\r\n      var key = oldDataKeyArr[i];\r\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\r\n\r\n      if (idx != null) {\r\n        // Consider there is duplicate key (for example, use dataItem.name as key).\r\n        // We should make sure every item in newArr and oldArr can be visited.\r\n        var len = idx.length;\r\n\r\n        if (len) {\r\n          len === 1 && (newDataIndexMap[key] = null);\r\n          idx = idx.shift();\r\n        } else {\r\n          newDataIndexMap[key] = null;\r\n        }\r\n\r\n        this._update && this._update(idx, i);\r\n      } else {\r\n        this._remove && this._remove(i);\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < newDataKeyArr.length; i++) {\r\n      var key = newDataKeyArr[i];\r\n\r\n      if (newDataIndexMap.hasOwnProperty(key)) {\r\n        var idx = newDataIndexMap[key];\r\n\r\n        if (idx == null) {\r\n          continue;\r\n        } // idx can never be empty array here. see 'set null' logic above.\r\n\r\n\r\n        if (!idx.length) {\r\n          this._add && this._add(idx);\r\n        } else {\r\n          for (var j = 0, len = idx.length; j < len; j++) {\r\n            this._add && this._add(idx[j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    // Add prefix to avoid conflict with Object.prototype.\r\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\r\n    var existence = map[key];\r\n\r\n    if (existence == null) {\r\n      keyArr.push(key);\r\n      map[key] = i;\r\n    } else {\r\n      if (!existence.length) {\r\n        map[key] = existence = [existence];\r\n      }\r\n\r\n      existence.push(i);\r\n    }\r\n  }\r\n}\r\n\r\nvar _default = DataDiffer;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @class\r\n * @param {Object|DataDimensionInfo} [opt] All of the fields will be shallow copied.\r\n */\r\nfunction DataDimensionInfo(opt) {\r\n  if (opt != null) {\r\n    zrUtil.extend(this, opt);\r\n  }\r\n  /**\r\n   * Dimension name.\r\n   * Mandatory.\r\n   * @type {string}\r\n   */\r\n  // this.name;\r\n\r\n  /**\r\n   * The origin name in dimsDef, see source helper.\r\n   * If displayName given, the tooltip will displayed vertically.\r\n   * Optional.\r\n   * @type {string}\r\n   */\r\n  // this.displayName;\r\n\r\n  /**\r\n   * Which coordSys dimension this dimension mapped to.\r\n   * A `coordDim` can be a \"coordSysDim\" that the coordSys required\r\n   * (for example, an item in `coordSysDims` of `model/referHelper#CoordSysInfo`),\r\n   * or an generated \"extra coord name\" if does not mapped to any \"coordSysDim\"\r\n   * (That is determined by whether `isExtraCoord` is `true`).\r\n   * Mandatory.\r\n   * @type {string}\r\n   */\r\n  // this.coordDim;\r\n\r\n  /**\r\n   * The index of this dimension in `series.encode[coordDim]`.\r\n   * Mandatory.\r\n   * @type {number}\r\n   */\r\n  // this.coordDimIndex;\r\n\r\n  /**\r\n   * Dimension type. The enumerable values are the key of\r\n   * `dataCtors` of `data/List`.\r\n   * Optional.\r\n   * @type {string}\r\n   */\r\n  // this.type;\r\n\r\n  /**\r\n   * This index of this dimension info in `data/List#_dimensionInfos`.\r\n   * Mandatory after added to `data/List`.\r\n   * @type {number}\r\n   */\r\n  // this.index;\r\n\r\n  /**\r\n   * The format of `otherDims` is:\r\n   * ```js\r\n   * {\r\n   *     tooltip: number optional,\r\n   *     label: number optional,\r\n   *     itemName: number optional,\r\n   *     seriesName: number optional,\r\n   * }\r\n   * ```\r\n   *\r\n   * A `series.encode` can specified these fields:\r\n   * ```js\r\n   * encode: {\r\n   *     // \"3, 1, 5\" is the index of data dimension.\r\n   *     tooltip: [3, 1, 5],\r\n   *     label: [0, 3],\r\n   *     ...\r\n   * }\r\n   * ```\r\n   * `otherDims` is the parse result of the `series.encode` above, like:\r\n   * ```js\r\n   * // Suppose the index of this data dimension is `3`.\r\n   * this.otherDims = {\r\n   *     // `3` is at the index `0` of the `encode.tooltip`\r\n   *     tooltip: 0,\r\n   *     // `3` is at the index `1` of the `encode.tooltip`\r\n   *     label: 1\r\n   * };\r\n   * ```\r\n   *\r\n   * This prop should never be `null`/`undefined` after initialized.\r\n   * @type {Object}\r\n   */\r\n\r\n\r\n  this.otherDims = {};\r\n  /**\r\n   * Be `true` if this dimension is not mapped to any \"coordSysDim\" that the\r\n   * \"coordSys\" required.\r\n   * Mandatory.\r\n   * @type {boolean}\r\n   */\r\n  // this.isExtraCoord;\r\n\r\n  /**\r\n   * @type {module:data/OrdinalMeta}\r\n   */\r\n  // this.ordinalMeta;\r\n\r\n  /**\r\n   * Whether to create inverted indices.\r\n   * @type {boolean}\r\n   */\r\n  // this.createInvertedIndices;\r\n}\r\n\r\n;\r\nvar _default = DataDimensionInfo;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _clazz = require(\"../util/clazz\");\r\n\r\nvar enableClassCheck = _clazz.enableClassCheck;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// id may be function name of Object, add a prefix to avoid this problem.\r\nfunction generateNodeKey(id) {\r\n  return '_EC_' + id;\r\n}\r\n/**\r\n * @alias module:echarts/data/Graph\r\n * @constructor\r\n * @param {boolean} directed\r\n */\r\n\r\n\r\nvar Graph = function (directed) {\r\n  /**\r\n   * 是否是有向图\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n  this._directed = directed || false;\r\n  /**\r\n   * @type {Array.<module:echarts/data/Graph.Node>}\r\n   * @readOnly\r\n   */\r\n\r\n  this.nodes = [];\r\n  /**\r\n   * @type {Array.<module:echarts/data/Graph.Edge>}\r\n   * @readOnly\r\n   */\r\n\r\n  this.edges = [];\r\n  /**\r\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\r\n   * @private\r\n   */\r\n\r\n  this._nodesMap = {};\r\n  /**\r\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\r\n   * @private\r\n   */\r\n\r\n  this._edgesMap = {};\r\n  /**\r\n   * @type {module:echarts/data/List}\r\n   * @readOnly\r\n   */\r\n\r\n  this.data;\r\n  /**\r\n   * @type {module:echarts/data/List}\r\n   * @readOnly\r\n   */\r\n\r\n  this.edgeData;\r\n};\r\n\r\nvar graphProto = Graph.prototype;\r\n/**\r\n * @type {string}\r\n */\r\n\r\ngraphProto.type = 'graph';\r\n/**\r\n * If is directed graph\r\n * @return {boolean}\r\n */\r\n\r\ngraphProto.isDirected = function () {\r\n  return this._directed;\r\n};\r\n/**\r\n * Add a new node\r\n * @param {string} id\r\n * @param {number} [dataIndex]\r\n */\r\n\r\n\r\ngraphProto.addNode = function (id, dataIndex) {\r\n  id = id == null ? '' + dataIndex : '' + id;\r\n  var nodesMap = this._nodesMap;\r\n\r\n  if (nodesMap[generateNodeKey(id)]) {\r\n    return;\r\n  }\r\n\r\n  var node = new Node(id, dataIndex);\r\n  node.hostGraph = this;\r\n  this.nodes.push(node);\r\n  nodesMap[generateNodeKey(id)] = node;\r\n  return node;\r\n};\r\n/**\r\n * Get node by data index\r\n * @param  {number} dataIndex\r\n * @return {module:echarts/data/Graph~Node}\r\n */\r\n\r\n\r\ngraphProto.getNodeByIndex = function (dataIndex) {\r\n  var rawIdx = this.data.getRawIndex(dataIndex);\r\n  return this.nodes[rawIdx];\r\n};\r\n/**\r\n * Get node by id\r\n * @param  {string} id\r\n * @return {module:echarts/data/Graph.Node}\r\n */\r\n\r\n\r\ngraphProto.getNodeById = function (id) {\r\n  return this._nodesMap[generateNodeKey(id)];\r\n};\r\n/**\r\n * Add a new edge\r\n * @param {number|string|module:echarts/data/Graph.Node} n1\r\n * @param {number|string|module:echarts/data/Graph.Node} n2\r\n * @param {number} [dataIndex=-1]\r\n * @return {module:echarts/data/Graph.Edge}\r\n */\r\n\r\n\r\ngraphProto.addEdge = function (n1, n2, dataIndex) {\r\n  var nodesMap = this._nodesMap;\r\n  var edgesMap = this._edgesMap; // PNEDING\r\n\r\n  if (typeof n1 === 'number') {\r\n    n1 = this.nodes[n1];\r\n  }\r\n\r\n  if (typeof n2 === 'number') {\r\n    n2 = this.nodes[n2];\r\n  }\r\n\r\n  if (!Node.isInstance(n1)) {\r\n    n1 = nodesMap[generateNodeKey(n1)];\r\n  }\r\n\r\n  if (!Node.isInstance(n2)) {\r\n    n2 = nodesMap[generateNodeKey(n2)];\r\n  }\r\n\r\n  if (!n1 || !n2) {\r\n    return;\r\n  }\r\n\r\n  var key = n1.id + '-' + n2.id;\r\n  var edge = new Edge(n1, n2, dataIndex);\r\n  edge.hostGraph = this;\r\n\r\n  if (this._directed) {\r\n    n1.outEdges.push(edge);\r\n    n2.inEdges.push(edge);\r\n  }\r\n\r\n  n1.edges.push(edge);\r\n\r\n  if (n1 !== n2) {\r\n    n2.edges.push(edge);\r\n  }\r\n\r\n  this.edges.push(edge);\r\n  edgesMap[key] = edge;\r\n  return edge;\r\n};\r\n/**\r\n * Get edge by data index\r\n * @param  {number} dataIndex\r\n * @return {module:echarts/data/Graph~Node}\r\n */\r\n\r\n\r\ngraphProto.getEdgeByIndex = function (dataIndex) {\r\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\r\n  return this.edges[rawIdx];\r\n};\r\n/**\r\n * Get edge by two linked nodes\r\n * @param  {module:echarts/data/Graph.Node|string} n1\r\n * @param  {module:echarts/data/Graph.Node|string} n2\r\n * @return {module:echarts/data/Graph.Edge}\r\n */\r\n\r\n\r\ngraphProto.getEdge = function (n1, n2) {\r\n  if (Node.isInstance(n1)) {\r\n    n1 = n1.id;\r\n  }\r\n\r\n  if (Node.isInstance(n2)) {\r\n    n2 = n2.id;\r\n  }\r\n\r\n  var edgesMap = this._edgesMap;\r\n\r\n  if (this._directed) {\r\n    return edgesMap[n1 + '-' + n2];\r\n  } else {\r\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\r\n  }\r\n};\r\n/**\r\n * Iterate all nodes\r\n * @param  {Function} cb\r\n * @param  {*} [context]\r\n */\r\n\r\n\r\ngraphProto.eachNode = function (cb, context) {\r\n  var nodes = this.nodes;\r\n  var len = nodes.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    if (nodes[i].dataIndex >= 0) {\r\n      cb.call(context, nodes[i], i);\r\n    }\r\n  }\r\n};\r\n/**\r\n * Iterate all edges\r\n * @param  {Function} cb\r\n * @param  {*} [context]\r\n */\r\n\r\n\r\ngraphProto.eachEdge = function (cb, context) {\r\n  var edges = this.edges;\r\n  var len = edges.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\r\n      cb.call(context, edges[i], i);\r\n    }\r\n  }\r\n};\r\n/**\r\n * Breadth first traverse\r\n * @param {Function} cb\r\n * @param {module:echarts/data/Graph.Node} startNode\r\n * @param {string} [direction='none'] 'none'|'in'|'out'\r\n * @param {*} [context]\r\n */\r\n\r\n\r\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\r\n  if (!Node.isInstance(startNode)) {\r\n    startNode = this._nodesMap[generateNodeKey(startNode)];\r\n  }\r\n\r\n  if (!startNode) {\r\n    return;\r\n  }\r\n\r\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\r\n\r\n  for (var i = 0; i < this.nodes.length; i++) {\r\n    this.nodes[i].__visited = false;\r\n  }\r\n\r\n  if (cb.call(context, startNode, null)) {\r\n    return;\r\n  }\r\n\r\n  var queue = [startNode];\r\n\r\n  while (queue.length) {\r\n    var currentNode = queue.shift();\r\n    var edges = currentNode[edgeType];\r\n\r\n    for (var i = 0; i < edges.length; i++) {\r\n      var e = edges[i];\r\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\r\n\r\n      if (!otherNode.__visited) {\r\n        if (cb.call(context, otherNode, currentNode)) {\r\n          // Stop traversing\r\n          return;\r\n        }\r\n\r\n        queue.push(otherNode);\r\n        otherNode.__visited = true;\r\n      }\r\n    }\r\n  }\r\n}; // TODO\r\n// graphProto.depthFirstTraverse = function (\r\n//     cb, startNode, direction, context\r\n// ) {\r\n// };\r\n// Filter update\r\n\r\n\r\ngraphProto.update = function () {\r\n  var data = this.data;\r\n  var edgeData = this.edgeData;\r\n  var nodes = this.nodes;\r\n  var edges = this.edges;\r\n\r\n  for (var i = 0, len = nodes.length; i < len; i++) {\r\n    nodes[i].dataIndex = -1;\r\n  }\r\n\r\n  for (var i = 0, len = data.count(); i < len; i++) {\r\n    nodes[data.getRawIndex(i)].dataIndex = i;\r\n  }\r\n\r\n  edgeData.filterSelf(function (idx) {\r\n    var edge = edges[edgeData.getRawIndex(idx)];\r\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\r\n  }); // Update edge\r\n\r\n  for (var i = 0, len = edges.length; i < len; i++) {\r\n    edges[i].dataIndex = -1;\r\n  }\r\n\r\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\r\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\r\n  }\r\n};\r\n/**\r\n * @return {module:echarts/data/Graph}\r\n */\r\n\r\n\r\ngraphProto.clone = function () {\r\n  var graph = new Graph(this._directed);\r\n  var nodes = this.nodes;\r\n  var edges = this.edges;\r\n\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\r\n  }\r\n\r\n  for (var i = 0; i < edges.length; i++) {\r\n    var e = edges[i];\r\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\r\n  }\r\n\r\n  return graph;\r\n};\r\n/**\r\n * @alias module:echarts/data/Graph.Node\r\n */\r\n\r\n\r\nfunction Node(id, dataIndex) {\r\n  /**\r\n  * @type {string}\r\n  */\r\n  this.id = id == null ? '' : id;\r\n  /**\r\n  * @type {Array.<module:echarts/data/Graph.Edge>}\r\n  */\r\n\r\n  this.inEdges = [];\r\n  /**\r\n  * @type {Array.<module:echarts/data/Graph.Edge>}\r\n  */\r\n\r\n  this.outEdges = [];\r\n  /**\r\n  * @type {Array.<module:echarts/data/Graph.Edge>}\r\n  */\r\n\r\n  this.edges = [];\r\n  /**\r\n   * @type {module:echarts/data/Graph}\r\n   */\r\n\r\n  this.hostGraph;\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\r\n}\r\n\r\nNode.prototype = {\r\n  constructor: Node,\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  degree: function () {\r\n    return this.edges.length;\r\n  },\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  inDegree: function () {\r\n    return this.inEdges.length;\r\n  },\r\n\r\n  /**\r\n  * @return {number}\r\n  */\r\n  outDegree: function () {\r\n    return this.outEdges.length;\r\n  },\r\n\r\n  /**\r\n   * @param {string} [path]\r\n   * @return {module:echarts/model/Model}\r\n   */\r\n  getModel: function (path) {\r\n    if (this.dataIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    var graph = this.hostGraph;\r\n    var itemModel = graph.data.getItemModel(this.dataIndex);\r\n    return itemModel.getModel(path);\r\n  }\r\n};\r\n/**\r\n * 图边\r\n * @alias module:echarts/data/Graph.Edge\r\n * @param {module:echarts/data/Graph.Node} n1\r\n * @param {module:echarts/data/Graph.Node} n2\r\n * @param {number} [dataIndex=-1]\r\n */\r\n\r\nfunction Edge(n1, n2, dataIndex) {\r\n  /**\r\n   * 节点1，如果是有向图则为源节点\r\n   * @type {module:echarts/data/Graph.Node}\r\n   */\r\n  this.node1 = n1;\r\n  /**\r\n   * 节点2，如果是有向图则为目标节点\r\n   * @type {module:echarts/data/Graph.Node}\r\n   */\r\n\r\n  this.node2 = n2;\r\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\r\n}\r\n/**\r\n * @param {string} [path]\r\n * @return {module:echarts/model/Model}\r\n */\r\n\r\n\r\nEdge.prototype.getModel = function (path) {\r\n  if (this.dataIndex < 0) {\r\n    return;\r\n  }\r\n\r\n  var graph = this.hostGraph;\r\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\r\n  return itemModel.getModel(path);\r\n};\r\n\r\nvar createGraphDataProxyMixin = function (hostName, dataName) {\r\n  return {\r\n    /**\r\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\r\n     * @return {number}\r\n     */\r\n    getValue: function (dimension) {\r\n      var data = this[hostName][dataName];\r\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\r\n    },\r\n\r\n    /**\r\n     * @param {Object|string} key\r\n     * @param {*} [value]\r\n     */\r\n    setVisual: function (key, value) {\r\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\r\n    },\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @return {boolean}\r\n     */\r\n    getVisual: function (key, ignoreParent) {\r\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\r\n    },\r\n\r\n    /**\r\n     * @param {Object} layout\r\n     * @return {boolean} [merge=false]\r\n     */\r\n    setLayout: function (layout, merge) {\r\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\r\n    },\r\n\r\n    /**\r\n     * @return {Object}\r\n     */\r\n    getLayout: function () {\r\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\r\n    },\r\n\r\n    /**\r\n     * @return {module:zrender/Element}\r\n     */\r\n    getGraphicEl: function () {\r\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\r\n    },\r\n\r\n    /**\r\n     * @return {number}\r\n     */\r\n    getRawIndex: function () {\r\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\r\n    }\r\n  };\r\n};\r\n\r\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\r\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\r\nGraph.Node = Node;\r\nGraph.Edge = Edge;\r\nenableClassCheck(Node);\r\nenableClassCheck(Edge);\r\nvar _default = Graph;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Model = require(\"../model/Model\");\r\n\r\nvar DataDiffer = require(\"./DataDiffer\");\r\n\r\nvar Source = require(\"./Source\");\r\n\r\nvar _dataProvider = require(\"./helper/dataProvider\");\r\n\r\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\r\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\r\n\r\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\r\n\r\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\r\n\r\nvar DataDimensionInfo = require(\"./DataDimensionInfo\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Float64Array, Int32Array, Uint32Array, Uint16Array */\r\n\r\n/**\r\n * List for data storage\r\n * @module echarts/data/List\r\n */\r\nvar isObject = zrUtil.isObject;\r\nvar UNDEFINED = 'undefined';\r\nvar INDEX_NOT_FOUND = -1; // Use prefix to avoid index to be the same as otherIdList[idx],\r\n// which will cause weird udpate animation.\r\n\r\nvar ID_PREFIX = 'e\\0\\0';\r\nvar dataCtors = {\r\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\r\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\r\n  // Ordinal data type can be string or int\r\n  'ordinal': Array,\r\n  'number': Array,\r\n  'time': Array\r\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\r\n// different from the Ctor of typed array.\r\n\r\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\r\nvar CtorInt32Array = typeof Int32Array === UNDEFINED ? Array : Int32Array;\r\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\r\n\r\nfunction getIndicesCtor(list) {\r\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\r\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\r\n}\r\n\r\nfunction cloneChunk(originalChunk) {\r\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\r\n\r\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\r\n}\r\n\r\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\r\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\r\n\r\nfunction transferProperties(target, source) {\r\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\r\n    if (source.hasOwnProperty(propName)) {\r\n      target[propName] = source[propName];\r\n    }\r\n  });\r\n  target.__wrappedMethods = source.__wrappedMethods;\r\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\r\n    target[propName] = zrUtil.clone(source[propName]);\r\n  });\r\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\r\n}\r\n/**\r\n * @constructor\r\n * @alias module:echarts/data/List\r\n *\r\n * @param {Array.<string|Object|module:data/DataDimensionInfo>} dimensions\r\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\r\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\r\n * @param {module:echarts/model/Model} hostModel\r\n */\r\n\r\n\r\nvar List = function (dimensions, hostModel) {\r\n  dimensions = dimensions || ['x', 'y'];\r\n  var dimensionInfos = {};\r\n  var dimensionNames = [];\r\n  var invertedIndicesMap = {};\r\n\r\n  for (var i = 0; i < dimensions.length; i++) {\r\n    // Use the original dimensions[i], where other flag props may exists.\r\n    var dimensionInfo = dimensions[i];\r\n\r\n    if (zrUtil.isString(dimensionInfo)) {\r\n      dimensionInfo = new DataDimensionInfo({\r\n        name: dimensionInfo\r\n      });\r\n    } else if (!(dimensionInfo instanceof DataDimensionInfo)) {\r\n      dimensionInfo = new DataDimensionInfo(dimensionInfo);\r\n    }\r\n\r\n    var dimensionName = dimensionInfo.name;\r\n    dimensionInfo.type = dimensionInfo.type || 'float';\r\n\r\n    if (!dimensionInfo.coordDim) {\r\n      dimensionInfo.coordDim = dimensionName;\r\n      dimensionInfo.coordDimIndex = 0;\r\n    }\r\n\r\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\r\n    dimensionNames.push(dimensionName);\r\n    dimensionInfos[dimensionName] = dimensionInfo;\r\n    dimensionInfo.index = i;\r\n\r\n    if (dimensionInfo.createInvertedIndices) {\r\n      invertedIndicesMap[dimensionName] = [];\r\n    }\r\n  }\r\n  /**\r\n   * @readOnly\r\n   * @type {Array.<string>}\r\n   */\r\n\r\n\r\n  this.dimensions = dimensionNames;\r\n  /**\r\n   * Infomation of each data dimension, like data type.\r\n   * @type {Object}\r\n   */\r\n\r\n  this._dimensionInfos = dimensionInfos;\r\n  /**\r\n   * @type {module:echarts/model/Model}\r\n   */\r\n\r\n  this.hostModel = hostModel;\r\n  /**\r\n   * @type {module:echarts/model/Model}\r\n   */\r\n\r\n  this.dataType;\r\n  /**\r\n   * Indices stores the indices of data subset after filtered.\r\n   * This data subset will be used in chart.\r\n   * @type {Array.<number>}\r\n   * @readOnly\r\n   */\r\n\r\n  this._indices = null;\r\n  this._count = 0;\r\n  this._rawCount = 0;\r\n  /**\r\n   * Data storage\r\n   * @type {Object.<key, Array.<TypedArray|Array>>}\r\n   * @private\r\n   */\r\n\r\n  this._storage = {};\r\n  /**\r\n   * @type {Array.<string>}\r\n   */\r\n\r\n  this._nameList = [];\r\n  /**\r\n   * @type {Array.<string>}\r\n   */\r\n\r\n  this._idList = [];\r\n  /**\r\n   * Models of data option is stored sparse for optimizing memory cost\r\n   * @type {Array.<module:echarts/model/Model>}\r\n   * @private\r\n   */\r\n\r\n  this._optionModels = [];\r\n  /**\r\n   * Global visual properties after visual coding\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n\r\n  this._visual = {};\r\n  /**\r\n   * Globel layout properties.\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n\r\n  this._layout = {};\r\n  /**\r\n   * Item visual properties after visual coding\r\n   * @type {Array.<Object>}\r\n   * @private\r\n   */\r\n\r\n  this._itemVisuals = [];\r\n  /**\r\n   * Key: visual type, Value: boolean\r\n   * @type {Object}\r\n   * @readOnly\r\n   */\r\n\r\n  this.hasItemVisual = {};\r\n  /**\r\n   * Item layout properties after layout\r\n   * @type {Array.<Object>}\r\n   * @private\r\n   */\r\n\r\n  this._itemLayouts = [];\r\n  /**\r\n   * Graphic elemnents\r\n   * @type {Array.<module:zrender/Element>}\r\n   * @private\r\n   */\r\n\r\n  this._graphicEls = [];\r\n  /**\r\n   * Max size of each chunk.\r\n   * @type {number}\r\n   * @private\r\n   */\r\n\r\n  this._chunkSize = 1e5;\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n\r\n  this._chunkCount = 0;\r\n  /**\r\n   * @type {Array.<Array|Object>}\r\n   * @private\r\n   */\r\n\r\n  this._rawData;\r\n  /**\r\n   * Raw extent will not be cloned, but only transfered.\r\n   * It will not be calculated util needed.\r\n   * key: dim,\r\n   * value: {end: number, extent: Array.<number>}\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n\r\n  this._rawExtent = {};\r\n  /**\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n\r\n  this._extent = {};\r\n  /**\r\n   * key: dim\r\n   * value: extent\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n\r\n  this._approximateExtent = {};\r\n  /**\r\n   * Cache summary info for fast visit. See \"dimensionHelper\".\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n\r\n  this._dimensionsSummary = summarizeDimensions(this);\r\n  /**\r\n   * @type {Object.<Array|TypedArray>}\r\n   * @private\r\n   */\r\n\r\n  this._invertedIndicesMap = invertedIndicesMap;\r\n  /**\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n\r\n  this._calculationInfo = {};\r\n  /**\r\n   * User output info of this data.\r\n   * DO NOT use it in other places!\r\n   *\r\n   * When preparing user params for user callbacks, we have\r\n   * to clone these inner data structures to prevent users\r\n   * from modifying them to effect built-in logic. And for\r\n   * performance consideration we make this `userOutput` to\r\n   * avoid clone them too many times.\r\n   *\r\n   * @type {Object}\r\n   * @readOnly\r\n   */\r\n\r\n  this.userOutput = this._dimensionsSummary.userOutput;\r\n};\r\n\r\nvar listProto = List.prototype;\r\nlistProto.type = 'list';\r\n/**\r\n * If each data item has it's own option\r\n * @type {boolean}\r\n */\r\n\r\nlistProto.hasItemOption = true;\r\n/**\r\n * The meanings of the input parameter `dim`:\r\n *\r\n * + If dim is a number (e.g., `1`), it means the index of the dimension.\r\n *   For example, `getDimension(0)` will return 'x' or 'lng' or 'radius'.\r\n * + If dim is a number-like string (e.g., `\"1\"`):\r\n *     + If there is the same concrete dim name defined in `this.dimensions`, it means that concrete name.\r\n *     + If not, it will be converted to a number, which means the index of the dimension.\r\n *        (why? because of the backward compatbility. We have been tolerating number-like string in\r\n *        dimension setting, although now it seems that it is not a good idea.)\r\n *     For example, `visualMap[i].dimension: \"1\"` is the same meaning as `visualMap[i].dimension: 1`,\r\n *     if no dimension name is defined as `\"1\"`.\r\n * + If dim is a not-number-like string, it means the concrete dim name.\r\n *   For example, it can be be default name `\"x\"`, `\"y\"`, `\"z\"`, `\"lng\"`, `\"lat\"`, `\"angle\"`, `\"radius\"`,\r\n *   or customized in `dimensions` property of option like `\"age\"`.\r\n *\r\n * Get dimension name\r\n * @param {string|number} dim See above.\r\n * @return {string} Concrete dim name.\r\n */\r\n\r\nlistProto.getDimension = function (dim) {\r\n  if (typeof dim === 'number' // If being a number-like string but not being defined a dimension name.\r\n  || !isNaN(dim) && !this._dimensionInfos.hasOwnProperty(dim)) {\r\n    dim = this.dimensions[dim];\r\n  }\r\n\r\n  return dim;\r\n};\r\n/**\r\n * Get type and calculation info of particular dimension\r\n * @param {string|number} dim\r\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\r\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\r\n */\r\n\r\n\r\nlistProto.getDimensionInfo = function (dim) {\r\n  // Do not clone, because there may be categories in dimInfo.\r\n  return this._dimensionInfos[this.getDimension(dim)];\r\n};\r\n/**\r\n * @return {Array.<string>} concrete dimension name list on coord.\r\n */\r\n\r\n\r\nlistProto.getDimensionsOnCoord = function () {\r\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\r\n};\r\n/**\r\n * @param {string} coordDim\r\n * @param {number} [idx] A coordDim may map to more than one data dim.\r\n *        If idx is `true`, return a array of all mapped dims.\r\n *        If idx is not specified, return the first dim not extra.\r\n * @return {string|Array.<string>} concrete data dim.\r\n *        If idx is number, and not found, return null/undefined.\r\n *        If idx is `true`, and not found, return empty array (always return array).\r\n */\r\n\r\n\r\nlistProto.mapDimension = function (coordDim, idx) {\r\n  var dimensionsSummary = this._dimensionsSummary;\r\n\r\n  if (idx == null) {\r\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\r\n  }\r\n\r\n  var dims = dimensionsSummary.encode[coordDim];\r\n  return idx === true // always return array if idx is `true`\r\n  ? (dims || []).slice() : dims && dims[idx];\r\n};\r\n/**\r\n * Initialize from data\r\n * @param {Array.<Object|number|Array>} data source or data or data provider.\r\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\r\n *        default label/tooltip.\r\n *        A name can be specified in encode.itemName,\r\n *        or dataItem.name (only for series option data),\r\n *        or provided in nameList from outside.\r\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\r\n */\r\n\r\n\r\nlistProto.initData = function (data, nameList, dimValueGetter) {\r\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\r\n\r\n  if (notProvider) {\r\n    data = new DefaultDataProvider(data, this.dimensions.length);\r\n  }\r\n\r\n  this._rawData = data; // Clear\r\n\r\n  this._storage = {};\r\n  this._indices = null;\r\n  this._nameList = nameList || [];\r\n  this._idList = [];\r\n  this._nameRepeatCount = {};\r\n\r\n  if (!dimValueGetter) {\r\n    this.hasItemOption = false;\r\n  }\r\n  /**\r\n   * @readOnly\r\n   */\r\n\r\n\r\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\r\n\r\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter;\r\n  this._dimValueGetterArrayRows = defaultDimValueGetters.arrayRows; // Reset raw extent.\r\n\r\n  this._rawExtent = {};\r\n\r\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\r\n\r\n\r\n  if (data.pure) {\r\n    this.hasItemOption = false;\r\n  }\r\n};\r\n\r\nlistProto.getProvider = function () {\r\n  return this._rawData;\r\n};\r\n/**\r\n * Caution: Can be only called on raw data (before `this._indices` created).\r\n */\r\n\r\n\r\nlistProto.appendData = function (data) {\r\n  var rawData = this._rawData;\r\n  var start = this.count();\r\n  rawData.appendData(data);\r\n  var end = rawData.count();\r\n\r\n  if (!rawData.persistent) {\r\n    end += start;\r\n  }\r\n\r\n  this._initDataFromProvider(start, end);\r\n};\r\n/**\r\n * Caution: Can be only called on raw data (before `this._indices` created).\r\n * This method does not modify `rawData` (`dataProvider`), but only\r\n * add values to storage.\r\n *\r\n * The final count will be increased by `Math.max(values.length, names.length)`.\r\n *\r\n * @param {Array.<Array.<*>>} values That is the SourceType: 'arrayRows', like\r\n *        [\r\n *            [12, 33, 44],\r\n *            [NaN, 43, 1],\r\n *            ['-', 'asdf', 0]\r\n *        ]\r\n *        Each item is exaclty cooresponding to a dimension.\r\n * @param {Array.<string>} [names]\r\n */\r\n\r\n\r\nlistProto.appendValues = function (values, names) {\r\n  var chunkSize = this._chunkSize;\r\n  var storage = this._storage;\r\n  var dimensions = this.dimensions;\r\n  var dimLen = dimensions.length;\r\n  var rawExtent = this._rawExtent;\r\n  var start = this.count();\r\n  var end = start + Math.max(values.length, names ? names.length : 0);\r\n  var originalChunkCount = this._chunkCount;\r\n\r\n  for (var i = 0; i < dimLen; i++) {\r\n    var dim = dimensions[i];\r\n\r\n    if (!rawExtent[dim]) {\r\n      rawExtent[dim] = getInitialExtent();\r\n    }\r\n\r\n    if (!storage[dim]) {\r\n      storage[dim] = [];\r\n    }\r\n\r\n    prepareChunks(storage, this._dimensionInfos[dim], chunkSize, originalChunkCount, end);\r\n    this._chunkCount = storage[dim].length;\r\n  }\r\n\r\n  var emptyDataItem = new Array(dimLen);\r\n\r\n  for (var idx = start; idx < end; idx++) {\r\n    var sourceIdx = idx - start;\r\n    var chunkIndex = Math.floor(idx / chunkSize);\r\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\r\n\r\n    for (var k = 0; k < dimLen; k++) {\r\n      var dim = dimensions[k];\r\n\r\n      var val = this._dimValueGetterArrayRows(values[sourceIdx] || emptyDataItem, dim, sourceIdx, k);\r\n\r\n      storage[dim][chunkIndex][chunkOffset] = val;\r\n      var dimRawExtent = rawExtent[dim];\r\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\r\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\r\n    }\r\n\r\n    if (names) {\r\n      this._nameList[idx] = names[sourceIdx];\r\n    }\r\n  }\r\n\r\n  this._rawCount = this._count = end; // Reset data extent\r\n\r\n  this._extent = {};\r\n  prepareInvertedIndex(this);\r\n};\r\n\r\nlistProto._initDataFromProvider = function (start, end) {\r\n  // Optimize.\r\n  if (start >= end) {\r\n    return;\r\n  }\r\n\r\n  var chunkSize = this._chunkSize;\r\n  var rawData = this._rawData;\r\n  var storage = this._storage;\r\n  var dimensions = this.dimensions;\r\n  var dimLen = dimensions.length;\r\n  var dimensionInfoMap = this._dimensionInfos;\r\n  var nameList = this._nameList;\r\n  var idList = this._idList;\r\n  var rawExtent = this._rawExtent;\r\n  var nameRepeatCount = this._nameRepeatCount = {};\r\n  var nameDimIdx;\r\n  var originalChunkCount = this._chunkCount;\r\n\r\n  for (var i = 0; i < dimLen; i++) {\r\n    var dim = dimensions[i];\r\n\r\n    if (!rawExtent[dim]) {\r\n      rawExtent[dim] = getInitialExtent();\r\n    }\r\n\r\n    var dimInfo = dimensionInfoMap[dim];\r\n\r\n    if (dimInfo.otherDims.itemName === 0) {\r\n      nameDimIdx = this._nameDimIdx = i;\r\n    }\r\n\r\n    if (dimInfo.otherDims.itemId === 0) {\r\n      this._idDimIdx = i;\r\n    }\r\n\r\n    if (!storage[dim]) {\r\n      storage[dim] = [];\r\n    }\r\n\r\n    prepareChunks(storage, dimInfo, chunkSize, originalChunkCount, end);\r\n    this._chunkCount = storage[dim].length;\r\n  }\r\n\r\n  var dataItem = new Array(dimLen);\r\n\r\n  for (var idx = start; idx < end; idx++) {\r\n    // NOTICE: Try not to write things into dataItem\r\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\r\n    // [1, 2]\r\n    // 2\r\n    // Bar chart, line chart which uses category axis\r\n    // only gives the 'y' value. 'x' value is the indices of category\r\n    // Use a tempValue to normalize the value to be a (x, y) value\r\n\r\n    var chunkIndex = Math.floor(idx / chunkSize);\r\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\r\n\r\n    for (var k = 0; k < dimLen; k++) {\r\n      var dim = dimensions[k];\r\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\r\n\r\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\r\n\r\n      dimStorage[chunkOffset] = val;\r\n      var dimRawExtent = rawExtent[dim];\r\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\r\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\r\n    } // ??? FIXME not check by pure but sourceFormat?\r\n    // TODO refactor these logic.\r\n\r\n\r\n    if (!rawData.pure) {\r\n      var name = nameList[idx];\r\n\r\n      if (dataItem && name == null) {\r\n        // If dataItem is {name: ...}, it has highest priority.\r\n        // That is appropriate for many common cases.\r\n        if (dataItem.name != null) {\r\n          // There is no other place to persistent dataItem.name,\r\n          // so save it to nameList.\r\n          nameList[idx] = name = dataItem.name;\r\n        } else if (nameDimIdx != null) {\r\n          var nameDim = dimensions[nameDimIdx];\r\n          var nameDimChunk = storage[nameDim][chunkIndex];\r\n\r\n          if (nameDimChunk) {\r\n            name = nameDimChunk[chunkOffset];\r\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\r\n\r\n            if (ordinalMeta && ordinalMeta.categories.length) {\r\n              name = ordinalMeta.categories[name];\r\n            }\r\n          }\r\n        }\r\n      } // Try using the id in option\r\n      // id or name is used on dynamical data, mapping old and new items.\r\n\r\n\r\n      var id = dataItem == null ? null : dataItem.id;\r\n\r\n      if (id == null && name != null) {\r\n        // Use name as id and add counter to avoid same name\r\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\r\n        id = name;\r\n\r\n        if (nameRepeatCount[name] > 0) {\r\n          id += '__ec__' + nameRepeatCount[name];\r\n        }\r\n\r\n        nameRepeatCount[name]++;\r\n      }\r\n\r\n      id != null && (idList[idx] = id);\r\n    }\r\n  }\r\n\r\n  if (!rawData.persistent && rawData.clean) {\r\n    // Clean unused data if data source is typed array.\r\n    rawData.clean();\r\n  }\r\n\r\n  this._rawCount = this._count = end; // Reset data extent\r\n\r\n  this._extent = {};\r\n  prepareInvertedIndex(this);\r\n};\r\n\r\nfunction prepareChunks(storage, dimInfo, chunkSize, chunkCount, end) {\r\n  var DataCtor = dataCtors[dimInfo.type];\r\n  var lastChunkIndex = chunkCount - 1;\r\n  var dim = dimInfo.name;\r\n  var resizeChunkArray = storage[dim][lastChunkIndex];\r\n\r\n  if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\r\n    var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\r\n    // within the initial chunkSize.\r\n\r\n    for (var j = 0; j < resizeChunkArray.length; j++) {\r\n      newStore[j] = resizeChunkArray[j];\r\n    }\r\n\r\n    storage[dim][lastChunkIndex] = newStore;\r\n  } // Create new chunks.\r\n\r\n\r\n  for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\r\n    storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\r\n  }\r\n}\r\n\r\nfunction prepareInvertedIndex(list) {\r\n  var invertedIndicesMap = list._invertedIndicesMap;\r\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\r\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\r\n\r\n    var ordinalMeta = dimInfo.ordinalMeta;\r\n\r\n    if (ordinalMeta) {\r\n      invertedIndices = invertedIndicesMap[dim] = new CtorInt32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\r\n      // mapping to 0, we should set it as INDEX_NOT_FOUND.\r\n\r\n      for (var i = 0; i < invertedIndices.length; i++) {\r\n        invertedIndices[i] = INDEX_NOT_FOUND;\r\n      }\r\n\r\n      for (var i = 0; i < list._count; i++) {\r\n        // Only support the case that all values are distinct.\r\n        invertedIndices[list.get(dim, i)] = i;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\r\n  var val;\r\n\r\n  if (dimIndex != null) {\r\n    var chunkSize = list._chunkSize;\r\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\r\n    var chunkOffset = rawIndex % chunkSize;\r\n    var dim = list.dimensions[dimIndex];\r\n    var chunk = list._storage[dim][chunkIndex];\r\n\r\n    if (chunk) {\r\n      val = chunk[chunkOffset];\r\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\r\n\r\n      if (ordinalMeta && ordinalMeta.categories.length) {\r\n        val = ordinalMeta.categories[val];\r\n      }\r\n    }\r\n  }\r\n\r\n  return val;\r\n}\r\n/**\r\n * @return {number}\r\n */\r\n\r\n\r\nlistProto.count = function () {\r\n  return this._count;\r\n};\r\n\r\nlistProto.getIndices = function () {\r\n  var newIndices;\r\n  var indices = this._indices;\r\n\r\n  if (indices) {\r\n    var Ctor = indices.constructor;\r\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\r\n\r\n    if (Ctor === Array) {\r\n      newIndices = new Ctor(thisCount);\r\n\r\n      for (var i = 0; i < thisCount; i++) {\r\n        newIndices[i] = indices[i];\r\n      }\r\n    } else {\r\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\r\n    }\r\n  } else {\r\n    var Ctor = getIndicesCtor(this);\r\n    var newIndices = new Ctor(this.count());\r\n\r\n    for (var i = 0; i < newIndices.length; i++) {\r\n      newIndices[i] = i;\r\n    }\r\n  }\r\n\r\n  return newIndices;\r\n};\r\n/**\r\n * Get value. Return NaN if idx is out of range.\r\n * @param {string} dim Dim must be concrete name.\r\n * @param {number} idx\r\n * @param {boolean} stack\r\n * @return {number}\r\n */\r\n\r\n\r\nlistProto.get = function (dim, idx\r\n/*, stack */\r\n) {\r\n  if (!(idx >= 0 && idx < this._count)) {\r\n    return NaN;\r\n  }\r\n\r\n  var storage = this._storage;\r\n\r\n  if (!storage[dim]) {\r\n    // TODO Warn ?\r\n    return NaN;\r\n  }\r\n\r\n  idx = this.getRawIndex(idx);\r\n  var chunkIndex = Math.floor(idx / this._chunkSize);\r\n  var chunkOffset = idx % this._chunkSize;\r\n  var chunkStore = storage[dim][chunkIndex];\r\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\r\n  // if (stack) {\r\n  //     var dimensionInfo = this._dimensionInfos[dim];\r\n  //     if (dimensionInfo && dimensionInfo.stackable) {\r\n  //         var stackedOn = this.stackedOn;\r\n  //         while (stackedOn) {\r\n  //             // Get no stacked data of stacked on\r\n  //             var stackedValue = stackedOn.get(dim, idx);\r\n  //             // Considering positive stack, negative stack and empty data\r\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\r\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\r\n  //             ) {\r\n  //                 value += stackedValue;\r\n  //             }\r\n  //             stackedOn = stackedOn.stackedOn;\r\n  //         }\r\n  //     }\r\n  // }\r\n\r\n  return value;\r\n};\r\n/**\r\n * @param {string} dim concrete dim\r\n * @param {number} rawIndex\r\n * @return {number|string}\r\n */\r\n\r\n\r\nlistProto.getByRawIndex = function (dim, rawIdx) {\r\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\r\n    return NaN;\r\n  }\r\n\r\n  var dimStore = this._storage[dim];\r\n\r\n  if (!dimStore) {\r\n    // TODO Warn ?\r\n    return NaN;\r\n  }\r\n\r\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\r\n  var chunkOffset = rawIdx % this._chunkSize;\r\n  var chunkStore = dimStore[chunkIndex];\r\n  return chunkStore[chunkOffset];\r\n};\r\n/**\r\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\r\n * Hack a much simpler _getFast\r\n * @private\r\n */\r\n\r\n\r\nlistProto._getFast = function (dim, rawIdx) {\r\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\r\n  var chunkOffset = rawIdx % this._chunkSize;\r\n  var chunkStore = this._storage[dim][chunkIndex];\r\n  return chunkStore[chunkOffset];\r\n};\r\n/**\r\n * Get value for multi dimensions.\r\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\r\n * @param {number} idx\r\n * @return {number}\r\n */\r\n\r\n\r\nlistProto.getValues = function (dimensions, idx\r\n/*, stack */\r\n) {\r\n  var values = [];\r\n\r\n  if (!zrUtil.isArray(dimensions)) {\r\n    // stack = idx;\r\n    idx = dimensions;\r\n    dimensions = this.dimensions;\r\n  }\r\n\r\n  for (var i = 0, len = dimensions.length; i < len; i++) {\r\n    values.push(this.get(dimensions[i], idx\r\n    /*, stack */\r\n    ));\r\n  }\r\n\r\n  return values;\r\n};\r\n/**\r\n * If value is NaN. Inlcuding '-'\r\n * Only check the coord dimensions.\r\n * @param {string} dim\r\n * @param {number} idx\r\n * @return {number}\r\n */\r\n\r\n\r\nlistProto.hasValue = function (idx) {\r\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\r\n\r\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\r\n    // Ordinal type originally can be string or number.\r\n    // But when an ordinal type is used on coord, it can\r\n    // not be string but only number. So we can also use isNaN.\r\n    if (isNaN(this.get(dataDimsOnCoord[i], idx))) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n/**\r\n * Get extent of data in one dimension\r\n * @param {string} dim\r\n * @param {boolean} stack\r\n */\r\n\r\n\r\nlistProto.getDataExtent = function (dim\r\n/*, stack */\r\n) {\r\n  // Make sure use concrete dim as cache name.\r\n  dim = this.getDimension(dim);\r\n  var dimData = this._storage[dim];\r\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\r\n\r\n  if (!dimData) {\r\n    return initialExtent;\r\n  } // Make more strict checkings to ensure hitting cache.\r\n\r\n\r\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\r\n  // var cacheName = dim;\r\n  // Consider the most cases when using data zoom, `getDataExtent`\r\n  // happened before filtering. We cache raw extent, which is not\r\n  // necessary to be cleared and recalculated when restore data.\r\n\r\n  var useRaw = !this._indices; // && !stack;\r\n\r\n  var dimExtent;\r\n\r\n  if (useRaw) {\r\n    return this._rawExtent[dim].slice();\r\n  }\r\n\r\n  dimExtent = this._extent[dim];\r\n\r\n  if (dimExtent) {\r\n    return dimExtent.slice();\r\n  }\r\n\r\n  dimExtent = initialExtent;\r\n  var min = dimExtent[0];\r\n  var max = dimExtent[1];\r\n\r\n  for (var i = 0; i < currEnd; i++) {\r\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\r\n    var value = this._getFast(dim, this.getRawIndex(i));\r\n\r\n    value < min && (min = value);\r\n    value > max && (max = value);\r\n  }\r\n\r\n  dimExtent = [min, max];\r\n  this._extent[dim] = dimExtent;\r\n  return dimExtent;\r\n};\r\n/**\r\n * Optimize for the scenario that data is filtered by a given extent.\r\n * Consider that if data amount is more than hundreds of thousand,\r\n * extent calculation will cost more than 10ms and the cache will\r\n * be erased because of the filtering.\r\n */\r\n\r\n\r\nlistProto.getApproximateExtent = function (dim\r\n/*, stack */\r\n) {\r\n  dim = this.getDimension(dim);\r\n  return this._approximateExtent[dim] || this.getDataExtent(dim\r\n  /*, stack */\r\n  );\r\n};\r\n\r\nlistProto.setApproximateExtent = function (extent, dim\r\n/*, stack */\r\n) {\r\n  dim = this.getDimension(dim);\r\n  this._approximateExtent[dim] = extent.slice();\r\n};\r\n/**\r\n * @param {string} key\r\n * @return {*}\r\n */\r\n\r\n\r\nlistProto.getCalculationInfo = function (key) {\r\n  return this._calculationInfo[key];\r\n};\r\n/**\r\n * @param {string|Object} key or k-v object\r\n * @param {*} [value]\r\n */\r\n\r\n\r\nlistProto.setCalculationInfo = function (key, value) {\r\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\r\n};\r\n/**\r\n * Get sum of data in one dimension\r\n * @param {string} dim\r\n */\r\n\r\n\r\nlistProto.getSum = function (dim\r\n/*, stack */\r\n) {\r\n  var dimData = this._storage[dim];\r\n  var sum = 0;\r\n\r\n  if (dimData) {\r\n    for (var i = 0, len = this.count(); i < len; i++) {\r\n      var value = this.get(dim, i\r\n      /*, stack */\r\n      );\r\n\r\n      if (!isNaN(value)) {\r\n        sum += value;\r\n      }\r\n    }\r\n  }\r\n\r\n  return sum;\r\n};\r\n/**\r\n * Get median of data in one dimension\r\n * @param {string} dim\r\n */\r\n\r\n\r\nlistProto.getMedian = function (dim\r\n/*, stack */\r\n) {\r\n  var dimDataArray = []; // map all data of one dimension\r\n\r\n  this.each(dim, function (val, idx) {\r\n    if (!isNaN(val)) {\r\n      dimDataArray.push(val);\r\n    }\r\n  }); // TODO\r\n  // Use quick select?\r\n  // immutability & sort\r\n\r\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n  var len = this.count(); // calculate median\r\n\r\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\r\n}; // /**\r\n//  * Retreive the index with given value\r\n//  * @param {string} dim Concrete dimension.\r\n//  * @param {number} value\r\n//  * @return {number}\r\n//  */\r\n// Currently incorrect: should return dataIndex but not rawIndex.\r\n// Do not fix it until this method is to be used somewhere.\r\n// FIXME Precision of float value\r\n// listProto.indexOf = function (dim, value) {\r\n//     var storage = this._storage;\r\n//     var dimData = storage[dim];\r\n//     var chunkSize = this._chunkSize;\r\n//     if (dimData) {\r\n//         for (var i = 0, len = this.count(); i < len; i++) {\r\n//             var chunkIndex = Math.floor(i / chunkSize);\r\n//             var chunkOffset = i % chunkSize;\r\n//             if (dimData[chunkIndex][chunkOffset] === value) {\r\n//                 return i;\r\n//             }\r\n//         }\r\n//     }\r\n//     return -1;\r\n// };\r\n\r\n/**\r\n * Only support the dimension which inverted index created.\r\n * Do not support other cases until required.\r\n * @param {string} concrete dim\r\n * @param {number|string} value\r\n * @return {number} rawIndex\r\n */\r\n\r\n\r\nlistProto.rawIndexOf = function (dim, value) {\r\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\r\n  var rawIndex = invertedIndices[value];\r\n\r\n  if (rawIndex == null || isNaN(rawIndex)) {\r\n    return INDEX_NOT_FOUND;\r\n  }\r\n\r\n  return rawIndex;\r\n};\r\n/**\r\n * Retreive the index with given name\r\n * @param {number} idx\r\n * @param {number} name\r\n * @return {number}\r\n */\r\n\r\n\r\nlistProto.indexOfName = function (name) {\r\n  for (var i = 0, len = this.count(); i < len; i++) {\r\n    if (this.getName(i) === name) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n/**\r\n * Retreive the index with given raw data index\r\n * @param {number} idx\r\n * @param {number} name\r\n * @return {number}\r\n */\r\n\r\n\r\nlistProto.indexOfRawIndex = function (rawIndex) {\r\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\r\n    return -1;\r\n  }\r\n\r\n  if (!this._indices) {\r\n    return rawIndex;\r\n  } // Indices are ascending\r\n\r\n\r\n  var indices = this._indices; // If rawIndex === dataIndex\r\n\r\n  var rawDataIndex = indices[rawIndex];\r\n\r\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\r\n    return rawIndex;\r\n  }\r\n\r\n  var left = 0;\r\n  var right = this._count - 1;\r\n\r\n  while (left <= right) {\r\n    var mid = (left + right) / 2 | 0;\r\n\r\n    if (indices[mid] < rawIndex) {\r\n      left = mid + 1;\r\n    } else if (indices[mid] > rawIndex) {\r\n      right = mid - 1;\r\n    } else {\r\n      return mid;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n/**\r\n * Retreive the index of nearest value\r\n * @param {string} dim\r\n * @param {number} value\r\n * @param {number} [maxDistance=Infinity]\r\n * @return {Array.<number>} If and only if multiple indices has\r\n *        the same value, they are put to the result.\r\n */\r\n\r\n\r\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\r\n  var storage = this._storage;\r\n  var dimData = storage[dim];\r\n  var nearestIndices = [];\r\n\r\n  if (!dimData) {\r\n    return nearestIndices;\r\n  }\r\n\r\n  if (maxDistance == null) {\r\n    maxDistance = Infinity;\r\n  }\r\n\r\n  var minDist = Infinity;\r\n  var minDiff = -1;\r\n  var nearestIndicesLen = 0; // Check the test case of `test/ut/spec/data/List.js`.\r\n\r\n  for (var i = 0, len = this.count(); i < len; i++) {\r\n    var diff = value - this.get(dim, i);\r\n    var dist = Math.abs(diff);\r\n\r\n    if (dist <= maxDistance) {\r\n      // When the `value` is at the middle of `this.get(dim, i)` and `this.get(dim, i+1)`,\r\n      // we'd better not push both of them to `nearestIndices`, otherwise it is easy to\r\n      // get more than one item in `nearestIndices` (more specifically, in `tooltip`).\r\n      // So we chose the one that `diff >= 0` in this csae.\r\n      // But if `this.get(dim, i)` and `this.get(dim, j)` get the same value, both of them\r\n      // should be push to `nearestIndices`.\r\n      if (dist < minDist || dist === minDist && diff >= 0 && minDiff < 0) {\r\n        minDist = dist;\r\n        minDiff = diff;\r\n        nearestIndicesLen = 0;\r\n      }\r\n\r\n      if (diff === minDiff) {\r\n        nearestIndices[nearestIndicesLen++] = i;\r\n      }\r\n    }\r\n  }\r\n\r\n  nearestIndices.length = nearestIndicesLen;\r\n  return nearestIndices;\r\n};\r\n/**\r\n * Get raw data index\r\n * @param {number} idx\r\n * @return {number}\r\n */\r\n\r\n\r\nlistProto.getRawIndex = getRawIndexWithoutIndices;\r\n\r\nfunction getRawIndexWithoutIndices(idx) {\r\n  return idx;\r\n}\r\n\r\nfunction getRawIndexWithIndices(idx) {\r\n  if (idx < this._count && idx >= 0) {\r\n    return this._indices[idx];\r\n  }\r\n\r\n  return -1;\r\n}\r\n/**\r\n * Get raw data item\r\n * @param {number} idx\r\n * @return {number}\r\n */\r\n\r\n\r\nlistProto.getRawDataItem = function (idx) {\r\n  if (!this._rawData.persistent) {\r\n    var val = [];\r\n\r\n    for (var i = 0; i < this.dimensions.length; i++) {\r\n      var dim = this.dimensions[i];\r\n      val.push(this.get(dim, idx));\r\n    }\r\n\r\n    return val;\r\n  } else {\r\n    return this._rawData.getItem(this.getRawIndex(idx));\r\n  }\r\n};\r\n/**\r\n * @param {number} idx\r\n * @param {boolean} [notDefaultIdx=false]\r\n * @return {string}\r\n */\r\n\r\n\r\nlistProto.getName = function (idx) {\r\n  var rawIndex = this.getRawIndex(idx);\r\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\r\n};\r\n/**\r\n * @param {number} idx\r\n * @param {boolean} [notDefaultIdx=false]\r\n * @return {string}\r\n */\r\n\r\n\r\nlistProto.getId = function (idx) {\r\n  return getId(this, this.getRawIndex(idx));\r\n};\r\n\r\nfunction getId(list, rawIndex) {\r\n  var id = list._idList[rawIndex];\r\n\r\n  if (id == null) {\r\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\r\n  }\r\n\r\n  if (id == null) {\r\n    // FIXME Check the usage in graph, should not use prefix.\r\n    id = ID_PREFIX + rawIndex;\r\n  }\r\n\r\n  return id;\r\n}\r\n\r\nfunction normalizeDimensions(dimensions) {\r\n  if (!zrUtil.isArray(dimensions)) {\r\n    dimensions = [dimensions];\r\n  }\r\n\r\n  return dimensions;\r\n}\r\n\r\nfunction validateDimensions(list, dims) {\r\n  for (var i = 0; i < dims.length; i++) {\r\n    // stroage may be empty when no data, so use\r\n    // dimensionInfos to check.\r\n    if (!list._dimensionInfos[dims[i]]) {\r\n      console.error('Unkown dimension ' + dims[i]);\r\n    }\r\n  }\r\n}\r\n/**\r\n * Data iteration\r\n * @param {string|Array.<string>}\r\n * @param {Function} cb\r\n * @param {*} [context=this]\r\n *\r\n * @example\r\n *  list.each('x', function (x, idx) {});\r\n *  list.each(['x', 'y'], function (x, y, idx) {});\r\n *  list.each(function (idx) {})\r\n */\r\n\r\n\r\nlistProto.each = function (dims, cb, context, contextCompat) {\r\n  'use strict';\r\n\r\n  if (!this._count) {\r\n    return;\r\n  }\r\n\r\n  if (typeof dims === 'function') {\r\n    contextCompat = context;\r\n    context = cb;\r\n    cb = dims;\r\n    dims = [];\r\n  } // contextCompat just for compat echarts3\r\n\r\n\r\n  context = context || contextCompat || this;\r\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\r\n  var dimSize = dims.length;\r\n\r\n  for (var i = 0; i < this.count(); i++) {\r\n    // Simple optimization\r\n    switch (dimSize) {\r\n      case 0:\r\n        cb.call(context, i);\r\n        break;\r\n\r\n      case 1:\r\n        cb.call(context, this.get(dims[0], i), i);\r\n        break;\r\n\r\n      case 2:\r\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\r\n        break;\r\n\r\n      default:\r\n        var k = 0;\r\n        var value = [];\r\n\r\n        for (; k < dimSize; k++) {\r\n          value[k] = this.get(dims[k], i);\r\n        } // Index\r\n\r\n\r\n        value[k] = i;\r\n        cb.apply(context, value);\r\n    }\r\n  }\r\n};\r\n/**\r\n * Data filter\r\n * @param {string|Array.<string>}\r\n * @param {Function} cb\r\n * @param {*} [context=this]\r\n */\r\n\r\n\r\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\r\n  'use strict';\r\n\r\n  if (!this._count) {\r\n    return;\r\n  }\r\n\r\n  if (typeof dimensions === 'function') {\r\n    contextCompat = context;\r\n    context = cb;\r\n    cb = dimensions;\r\n    dimensions = [];\r\n  } // contextCompat just for compat echarts3\r\n\r\n\r\n  context = context || contextCompat || this;\r\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\r\n  var count = this.count();\r\n  var Ctor = getIndicesCtor(this);\r\n  var newIndices = new Ctor(count);\r\n  var value = [];\r\n  var dimSize = dimensions.length;\r\n  var offset = 0;\r\n  var dim0 = dimensions[0];\r\n\r\n  for (var i = 0; i < count; i++) {\r\n    var keep;\r\n    var rawIdx = this.getRawIndex(i); // Simple optimization\r\n\r\n    if (dimSize === 0) {\r\n      keep = cb.call(context, i);\r\n    } else if (dimSize === 1) {\r\n      var val = this._getFast(dim0, rawIdx);\r\n\r\n      keep = cb.call(context, val, i);\r\n    } else {\r\n      for (var k = 0; k < dimSize; k++) {\r\n        value[k] = this._getFast(dim0, rawIdx);\r\n      }\r\n\r\n      value[k] = i;\r\n      keep = cb.apply(context, value);\r\n    }\r\n\r\n    if (keep) {\r\n      newIndices[offset++] = rawIdx;\r\n    }\r\n  } // Set indices after filtered.\r\n\r\n\r\n  if (offset < count) {\r\n    this._indices = newIndices;\r\n  }\r\n\r\n  this._count = offset; // Reset data extent\r\n\r\n  this._extent = {};\r\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\r\n  return this;\r\n};\r\n/**\r\n * Select data in range. (For optimization of filter)\r\n * (Manually inline code, support 5 million data filtering in data zoom.)\r\n */\r\n\r\n\r\nlistProto.selectRange = function (range) {\r\n  'use strict';\r\n\r\n  if (!this._count) {\r\n    return;\r\n  }\r\n\r\n  var dimensions = [];\r\n\r\n  for (var dim in range) {\r\n    if (range.hasOwnProperty(dim)) {\r\n      dimensions.push(dim);\r\n    }\r\n  }\r\n\r\n  var dimSize = dimensions.length;\r\n\r\n  if (!dimSize) {\r\n    return;\r\n  }\r\n\r\n  var originalCount = this.count();\r\n  var Ctor = getIndicesCtor(this);\r\n  var newIndices = new Ctor(originalCount);\r\n  var offset = 0;\r\n  var dim0 = dimensions[0];\r\n  var min = range[dim0][0];\r\n  var max = range[dim0][1];\r\n  var quickFinished = false;\r\n\r\n  if (!this._indices) {\r\n    // Extreme optimization for common case. About 2x faster in chrome.\r\n    var idx = 0;\r\n\r\n    if (dimSize === 1) {\r\n      var dimStorage = this._storage[dimensions[0]];\r\n\r\n      for (var k = 0; k < this._chunkCount; k++) {\r\n        var chunkStorage = dimStorage[k];\r\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\r\n          // value indicates the line should be broken. But for the case like\r\n          // scatter plot, a data item with empty value will not be rendered,\r\n          // but the axis extent may be effected if some other dim of the data\r\n          // item has value. Fortunately it is not a significant negative effect.\r\n\r\n          if (val >= min && val <= max || isNaN(val)) {\r\n            newIndices[offset++] = idx;\r\n          }\r\n\r\n          idx++;\r\n        }\r\n      }\r\n\r\n      quickFinished = true;\r\n    } else if (dimSize === 2) {\r\n      var dimStorage = this._storage[dim0];\r\n      var dimStorage2 = this._storage[dimensions[1]];\r\n      var min2 = range[dimensions[1]][0];\r\n      var max2 = range[dimensions[1]][1];\r\n\r\n      for (var k = 0; k < this._chunkCount; k++) {\r\n        var chunkStorage = dimStorage[k];\r\n        var chunkStorage2 = dimStorage2[k];\r\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          var val = chunkStorage[i];\r\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\r\n\r\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\r\n            newIndices[offset++] = idx;\r\n          }\r\n\r\n          idx++;\r\n        }\r\n      }\r\n\r\n      quickFinished = true;\r\n    }\r\n  }\r\n\r\n  if (!quickFinished) {\r\n    if (dimSize === 1) {\r\n      for (var i = 0; i < originalCount; i++) {\r\n        var rawIndex = this.getRawIndex(i);\r\n\r\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\r\n\r\n\r\n        if (val >= min && val <= max || isNaN(val)) {\r\n          newIndices[offset++] = rawIndex;\r\n        }\r\n      }\r\n    } else {\r\n      for (var i = 0; i < originalCount; i++) {\r\n        var keep = true;\r\n        var rawIndex = this.getRawIndex(i);\r\n\r\n        for (var k = 0; k < dimSize; k++) {\r\n          var dimk = dimensions[k];\r\n\r\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\r\n\r\n\r\n          if (val < range[dimk][0] || val > range[dimk][1]) {\r\n            keep = false;\r\n          }\r\n        }\r\n\r\n        if (keep) {\r\n          newIndices[offset++] = this.getRawIndex(i);\r\n        }\r\n      }\r\n    }\r\n  } // Set indices after filtered.\r\n\r\n\r\n  if (offset < originalCount) {\r\n    this._indices = newIndices;\r\n  }\r\n\r\n  this._count = offset; // Reset data extent\r\n\r\n  this._extent = {};\r\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\r\n  return this;\r\n};\r\n/**\r\n * Data mapping to a plain array\r\n * @param {string|Array.<string>} [dimensions]\r\n * @param {Function} cb\r\n * @param {*} [context=this]\r\n * @return {Array}\r\n */\r\n\r\n\r\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\r\n  'use strict';\r\n\r\n  if (typeof dimensions === 'function') {\r\n    contextCompat = context;\r\n    context = cb;\r\n    cb = dimensions;\r\n    dimensions = [];\r\n  } // contextCompat just for compat echarts3\r\n\r\n\r\n  context = context || contextCompat || this;\r\n  var result = [];\r\n  this.each(dimensions, function () {\r\n    result.push(cb && cb.apply(this, arguments));\r\n  }, context);\r\n  return result;\r\n}; // Data in excludeDimensions is copied, otherwise transfered.\r\n\r\n\r\nfunction cloneListForMapAndSample(original, excludeDimensions) {\r\n  var allDimensions = original.dimensions;\r\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\r\n\r\n  transferProperties(list, original);\r\n  var storage = list._storage = {};\r\n  var originalStorage = original._storage; // Init storage\r\n\r\n  for (var i = 0; i < allDimensions.length; i++) {\r\n    var dim = allDimensions[i];\r\n\r\n    if (originalStorage[dim]) {\r\n      // Notice that we do not reset invertedIndicesMap here, becuase\r\n      // there is no scenario of mapping or sampling ordinal dimension.\r\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\r\n        storage[dim] = cloneDimStore(originalStorage[dim]);\r\n        list._rawExtent[dim] = getInitialExtent();\r\n        list._extent[dim] = null;\r\n      } else {\r\n        // Direct reference for other dimensions\r\n        storage[dim] = originalStorage[dim];\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction cloneDimStore(originalDimStore) {\r\n  var newDimStore = new Array(originalDimStore.length);\r\n\r\n  for (var j = 0; j < originalDimStore.length; j++) {\r\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\r\n  }\r\n\r\n  return newDimStore;\r\n}\r\n\r\nfunction getInitialExtent() {\r\n  return [Infinity, -Infinity];\r\n}\r\n/**\r\n * Data mapping to a new List with given dimensions\r\n * @param {string|Array.<string>} dimensions\r\n * @param {Function} cb\r\n * @param {*} [context=this]\r\n * @return {Array}\r\n */\r\n\r\n\r\nlistProto.map = function (dimensions, cb, context, contextCompat) {\r\n  'use strict'; // contextCompat just for compat echarts3\r\n\r\n  context = context || contextCompat || this;\r\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\r\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\r\n  // So we can reference to the same value\r\n\r\n  list._indices = this._indices;\r\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\r\n  var storage = list._storage;\r\n  var tmpRetValue = [];\r\n  var chunkSize = this._chunkSize;\r\n  var dimSize = dimensions.length;\r\n  var dataCount = this.count();\r\n  var values = [];\r\n  var rawExtent = list._rawExtent;\r\n\r\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\r\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\r\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\r\n      /*, stack */\r\n      );\r\n    }\r\n\r\n    values[dimSize] = dataIndex;\r\n    var retValue = cb && cb.apply(context, values);\r\n\r\n    if (retValue != null) {\r\n      // a number or string (in oridinal dimension)?\r\n      if (typeof retValue !== 'object') {\r\n        tmpRetValue[0] = retValue;\r\n        retValue = tmpRetValue;\r\n      }\r\n\r\n      var rawIndex = this.getRawIndex(dataIndex);\r\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\r\n      var chunkOffset = rawIndex % chunkSize;\r\n\r\n      for (var i = 0; i < retValue.length; i++) {\r\n        var dim = dimensions[i];\r\n        var val = retValue[i];\r\n        var rawExtentOnDim = rawExtent[dim];\r\n        var dimStore = storage[dim];\r\n\r\n        if (dimStore) {\r\n          dimStore[chunkIndex][chunkOffset] = val;\r\n        }\r\n\r\n        if (val < rawExtentOnDim[0]) {\r\n          rawExtentOnDim[0] = val;\r\n        }\r\n\r\n        if (val > rawExtentOnDim[1]) {\r\n          rawExtentOnDim[1] = val;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n};\r\n/**\r\n * Large data down sampling on given dimension\r\n * @param {string} dimension\r\n * @param {number} rate\r\n * @param {Function} sampleValue\r\n * @param {Function} sampleIndex Sample index for name and id\r\n */\r\n\r\n\r\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\r\n  var list = cloneListForMapAndSample(this, [dimension]);\r\n  var targetStorage = list._storage;\r\n  var frameValues = [];\r\n  var frameSize = Math.floor(1 / rate);\r\n  var dimStore = targetStorage[dimension];\r\n  var len = this.count();\r\n  var chunkSize = this._chunkSize;\r\n  var rawExtentOnDim = list._rawExtent[dimension];\r\n  var newIndices = new (getIndicesCtor(this))(len);\r\n  var offset = 0;\r\n\r\n  for (var i = 0; i < len; i += frameSize) {\r\n    // Last frame\r\n    if (frameSize > len - i) {\r\n      frameSize = len - i;\r\n      frameValues.length = frameSize;\r\n    }\r\n\r\n    for (var k = 0; k < frameSize; k++) {\r\n      var dataIdx = this.getRawIndex(i + k);\r\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\r\n      var originalChunkOffset = dataIdx % chunkSize;\r\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\r\n    }\r\n\r\n    var value = sampleValue(frameValues);\r\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\r\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\r\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\r\n\r\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\r\n\r\n    if (value < rawExtentOnDim[0]) {\r\n      rawExtentOnDim[0] = value;\r\n    }\r\n\r\n    if (value > rawExtentOnDim[1]) {\r\n      rawExtentOnDim[1] = value;\r\n    }\r\n\r\n    newIndices[offset++] = sampleFrameIdx;\r\n  }\r\n\r\n  list._count = offset;\r\n  list._indices = newIndices;\r\n  list.getRawIndex = getRawIndexWithIndices;\r\n  return list;\r\n};\r\n/**\r\n * Get model of one data item.\r\n *\r\n * @param {number} idx\r\n */\r\n// FIXME Model proxy ?\r\n\r\n\r\nlistProto.getItemModel = function (idx) {\r\n  var hostModel = this.hostModel;\r\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\r\n};\r\n/**\r\n * Create a data differ\r\n * @param {module:echarts/data/List} otherList\r\n * @return {module:echarts/data/DataDiffer}\r\n */\r\n\r\n\r\nlistProto.diff = function (otherList) {\r\n  var thisList = this;\r\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\r\n    return getId(otherList, idx);\r\n  }, function (idx) {\r\n    return getId(thisList, idx);\r\n  });\r\n};\r\n/**\r\n * Get visual property.\r\n * @param {string} key\r\n */\r\n\r\n\r\nlistProto.getVisual = function (key) {\r\n  var visual = this._visual;\r\n  return visual && visual[key];\r\n};\r\n/**\r\n * Set visual property\r\n * @param {string|Object} key\r\n * @param {*} [value]\r\n *\r\n * @example\r\n *  setVisual('color', color);\r\n *  setVisual({\r\n *      'color': color\r\n *  });\r\n */\r\n\r\n\r\nlistProto.setVisual = function (key, val) {\r\n  if (isObject(key)) {\r\n    for (var name in key) {\r\n      if (key.hasOwnProperty(name)) {\r\n        this.setVisual(name, key[name]);\r\n      }\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  this._visual = this._visual || {};\r\n  this._visual[key] = val;\r\n};\r\n/**\r\n * Set layout property.\r\n * @param {string|Object} key\r\n * @param {*} [val]\r\n */\r\n\r\n\r\nlistProto.setLayout = function (key, val) {\r\n  if (isObject(key)) {\r\n    for (var name in key) {\r\n      if (key.hasOwnProperty(name)) {\r\n        this.setLayout(name, key[name]);\r\n      }\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  this._layout[key] = val;\r\n};\r\n/**\r\n * Get layout property.\r\n * @param  {string} key.\r\n * @return {*}\r\n */\r\n\r\n\r\nlistProto.getLayout = function (key) {\r\n  return this._layout[key];\r\n};\r\n/**\r\n * Get layout of single data item\r\n * @param {number} idx\r\n */\r\n\r\n\r\nlistProto.getItemLayout = function (idx) {\r\n  return this._itemLayouts[idx];\r\n};\r\n/**\r\n * Set layout of single data item\r\n * @param {number} idx\r\n * @param {Object} layout\r\n * @param {boolean=} [merge=false]\r\n */\r\n\r\n\r\nlistProto.setItemLayout = function (idx, layout, merge) {\r\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\r\n};\r\n/**\r\n * Clear all layout of single data item\r\n */\r\n\r\n\r\nlistProto.clearItemLayouts = function () {\r\n  this._itemLayouts.length = 0;\r\n};\r\n/**\r\n * Get visual property of single data item\r\n * @param {number} idx\r\n * @param {string} key\r\n * @param {boolean} [ignoreParent=false]\r\n */\r\n\r\n\r\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\r\n  var itemVisual = this._itemVisuals[idx];\r\n  var val = itemVisual && itemVisual[key];\r\n\r\n  if (val == null && !ignoreParent) {\r\n    // Use global visual property\r\n    return this.getVisual(key);\r\n  }\r\n\r\n  return val;\r\n};\r\n/**\r\n * Set visual property of single data item\r\n *\r\n * @param {number} idx\r\n * @param {string|Object} key\r\n * @param {*} [value]\r\n *\r\n * @example\r\n *  setItemVisual(0, 'color', color);\r\n *  setItemVisual(0, {\r\n *      'color': color\r\n *  });\r\n */\r\n\r\n\r\nlistProto.setItemVisual = function (idx, key, value) {\r\n  var itemVisual = this._itemVisuals[idx] || {};\r\n  var hasItemVisual = this.hasItemVisual;\r\n  this._itemVisuals[idx] = itemVisual;\r\n\r\n  if (isObject(key)) {\r\n    for (var name in key) {\r\n      if (key.hasOwnProperty(name)) {\r\n        itemVisual[name] = key[name];\r\n        hasItemVisual[name] = true;\r\n      }\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  itemVisual[key] = value;\r\n  hasItemVisual[key] = true;\r\n};\r\n/**\r\n * Clear itemVisuals and list visual.\r\n */\r\n\r\n\r\nlistProto.clearAllVisual = function () {\r\n  this._visual = {};\r\n  this._itemVisuals = [];\r\n  this.hasItemVisual = {};\r\n};\r\n\r\nvar setItemDataAndSeriesIndex = function (child) {\r\n  child.seriesIndex = this.seriesIndex;\r\n  child.dataIndex = this.dataIndex;\r\n  child.dataType = this.dataType;\r\n};\r\n/**\r\n * Set graphic element relative to data. It can be set as null\r\n * @param {number} idx\r\n * @param {module:zrender/Element} [el]\r\n */\r\n\r\n\r\nlistProto.setItemGraphicEl = function (idx, el) {\r\n  var hostModel = this.hostModel;\r\n\r\n  if (el) {\r\n    // Add data index and series index for indexing the data by element\r\n    // Useful in tooltip\r\n    el.dataIndex = idx;\r\n    el.dataType = this.dataType;\r\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\r\n\r\n    if (el.type === 'group') {\r\n      el.traverse(setItemDataAndSeriesIndex, el);\r\n    }\r\n  }\r\n\r\n  this._graphicEls[idx] = el;\r\n};\r\n/**\r\n * @param {number} idx\r\n * @return {module:zrender/Element}\r\n */\r\n\r\n\r\nlistProto.getItemGraphicEl = function (idx) {\r\n  return this._graphicEls[idx];\r\n};\r\n/**\r\n * @param {Function} cb\r\n * @param {*} context\r\n */\r\n\r\n\r\nlistProto.eachItemGraphicEl = function (cb, context) {\r\n  zrUtil.each(this._graphicEls, function (el, idx) {\r\n    if (el) {\r\n      cb && cb.call(context, el, idx);\r\n    }\r\n  });\r\n};\r\n/**\r\n * Shallow clone a new list except visual and layout properties, and graph elements.\r\n * New list only change the indices.\r\n */\r\n\r\n\r\nlistProto.cloneShallow = function (list) {\r\n  if (!list) {\r\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\r\n    list = new List(dimensionInfoList, this.hostModel);\r\n  } // FIXME\r\n\r\n\r\n  list._storage = this._storage;\r\n  transferProperties(list, this); // Clone will not change the data extent and indices\r\n\r\n  if (this._indices) {\r\n    var Ctor = this._indices.constructor;\r\n    list._indices = new Ctor(this._indices);\r\n  } else {\r\n    list._indices = null;\r\n  }\r\n\r\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\r\n  return list;\r\n};\r\n/**\r\n * Wrap some method to add more feature\r\n * @param {string} methodName\r\n * @param {Function} injectFunction\r\n */\r\n\r\n\r\nlistProto.wrapMethod = function (methodName, injectFunction) {\r\n  var originalMethod = this[methodName];\r\n\r\n  if (typeof originalMethod !== 'function') {\r\n    return;\r\n  }\r\n\r\n  this.__wrappedMethods = this.__wrappedMethods || [];\r\n\r\n  this.__wrappedMethods.push(methodName);\r\n\r\n  this[methodName] = function () {\r\n    var res = originalMethod.apply(this, arguments);\r\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\r\n  };\r\n}; // Methods that create a new list based on this list should be listed here.\r\n// Notice that those method should `RETURN` the new list.\r\n\r\n\r\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\r\n\r\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\r\nvar _default = List;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar isObject = _util.isObject;\r\nvar map = _util.map;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @constructor\r\n * @param {Object} [opt]\r\n * @param {Object} [opt.categories=[]]\r\n * @param {Object} [opt.needCollect=false]\r\n * @param {Object} [opt.deduplication=false]\r\n */\r\nfunction OrdinalMeta(opt) {\r\n  /**\r\n   * @readOnly\r\n   * @type {Array.<string>}\r\n   */\r\n  this.categories = opt.categories || [];\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._needCollect = opt.needCollect;\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._deduplication = opt.deduplication;\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._map;\r\n}\r\n/**\r\n * @param {module:echarts/model/Model} axisModel\r\n * @return {module:echarts/data/OrdinalMeta}\r\n */\r\n\r\n\r\nOrdinalMeta.createByAxisModel = function (axisModel) {\r\n  var option = axisModel.option;\r\n  var data = option.data;\r\n  var categories = data && map(data, getName);\r\n  return new OrdinalMeta({\r\n    categories: categories,\r\n    needCollect: !categories,\r\n    // deduplication is default in axis.\r\n    deduplication: option.dedplication !== false\r\n  });\r\n};\r\n\r\nvar proto = OrdinalMeta.prototype;\r\n/**\r\n * @param {string} category\r\n * @return {number} ordinal\r\n */\r\n\r\nproto.getOrdinal = function (category) {\r\n  return getOrCreateMap(this).get(category);\r\n};\r\n/**\r\n * @param {*} category\r\n * @return {number} The ordinal. If not found, return NaN.\r\n */\r\n\r\n\r\nproto.parseAndCollect = function (category) {\r\n  var index;\r\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\r\n  // This feature is only supported when !needCollect, because we should\r\n  // consider a common case: a value is 2017, which is a number but is\r\n  // expected to be tread as a category. This case usually happen in dataset,\r\n  // where it happent to be no need of the index feature.\r\n\r\n  if (typeof category !== 'string' && !needCollect) {\r\n    return category;\r\n  } // Optimize for the scenario:\r\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\r\n  // data has been ensured not duplicate and is large data.\r\n  // Notice, if a dataset dimension provide categroies, usually echarts\r\n  // should remove duplication except user tell echarts dont do that\r\n  // (set axis.deduplication = false), because echarts do not know whether\r\n  // the values in the category dimension has duplication (consider the\r\n  // parallel-aqi example)\r\n\r\n\r\n  if (needCollect && !this._deduplication) {\r\n    index = this.categories.length;\r\n    this.categories[index] = category;\r\n    return index;\r\n  }\r\n\r\n  var map = getOrCreateMap(this);\r\n  index = map.get(category);\r\n\r\n  if (index == null) {\r\n    if (needCollect) {\r\n      index = this.categories.length;\r\n      this.categories[index] = category;\r\n      map.set(category, index);\r\n    } else {\r\n      index = NaN;\r\n    }\r\n  }\r\n\r\n  return index;\r\n}; // Consider big data, do not create map until needed.\r\n\r\n\r\nfunction getOrCreateMap(ordinalMeta) {\r\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\r\n}\r\n\r\nfunction getName(obj) {\r\n  if (isObject(obj) && obj.value != null) {\r\n    return obj.value;\r\n  } else {\r\n    return obj + '';\r\n  }\r\n}\r\n\r\nvar _default = OrdinalMeta;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar isTypedArray = _util.isTypedArray;\r\n\r\nvar _clazz = require(\"../util/clazz\");\r\n\r\nvar enableClassCheck = _clazz.enableClassCheck;\r\n\r\nvar _sourceType = require(\"./helper/sourceType\");\r\n\r\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\r\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\r\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\r\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\r\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * [sourceFormat]\r\n *\r\n * + \"original\":\r\n * This format is only used in series.data, where\r\n * itemStyle can be specified in data item.\r\n *\r\n * + \"arrayRows\":\r\n * [\r\n *     ['product', 'score', 'amount'],\r\n *     ['Matcha Latte', 89.3, 95.8],\r\n *     ['Milk Tea', 92.1, 89.4],\r\n *     ['Cheese Cocoa', 94.4, 91.2],\r\n *     ['Walnut Brownie', 85.4, 76.9]\r\n * ]\r\n *\r\n * + \"objectRows\":\r\n * [\r\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\r\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\r\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\r\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\r\n * ]\r\n *\r\n * + \"keyedColumns\":\r\n * {\r\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\r\n *     'count': [823, 235, 1042, 988],\r\n *     'score': [95.8, 81.4, 91.2, 76.9]\r\n * }\r\n *\r\n * + \"typedArray\"\r\n *\r\n * + \"unknown\"\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @param {Object} fields\r\n * @param {string} fields.sourceFormat\r\n * @param {Array|Object} fields.fromDataset\r\n * @param {Array|Object} [fields.data]\r\n * @param {string} [seriesLayoutBy='column']\r\n * @param {Array.<Object|string>} [dimensionsDefine]\r\n * @param {Objet|HashMap} [encodeDefine]\r\n * @param {number} [startIndex=0]\r\n * @param {number} [dimensionsDetectCount]\r\n */\r\nfunction Source(fields) {\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  this.fromDataset = fields.fromDataset;\r\n  /**\r\n   * Not null/undefined.\r\n   * @type {Array|Object}\r\n   */\r\n\r\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\r\n  /**\r\n   * See also \"detectSourceFormat\".\r\n   * Not null/undefined.\r\n   * @type {string}\r\n   */\r\n\r\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\r\n  /**\r\n   * 'row' or 'column'\r\n   * Not null/undefined.\r\n   * @type {string} seriesLayoutBy\r\n   */\r\n\r\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\r\n  /**\r\n   * dimensions definition in option.\r\n   * can be null/undefined.\r\n   * @type {Array.<Object|string>}\r\n   */\r\n\r\n  this.dimensionsDefine = fields.dimensionsDefine;\r\n  /**\r\n   * encode definition in option.\r\n   * can be null/undefined.\r\n   * @type {Objet|HashMap}\r\n   */\r\n\r\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\r\n  /**\r\n   * Not null/undefined, uint.\r\n   * @type {number}\r\n   */\r\n\r\n  this.startIndex = fields.startIndex || 0;\r\n  /**\r\n   * Can be null/undefined (when unknown), uint.\r\n   * @type {number}\r\n   */\r\n\r\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\r\n}\r\n/**\r\n * Wrap original series data for some compatibility cases.\r\n */\r\n\r\n\r\nSource.seriesDataToSource = function (data) {\r\n  return new Source({\r\n    data: data,\r\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\r\n    fromDataset: false\r\n  });\r\n};\r\n\r\nenableClassCheck(Source);\r\nvar _default = Source;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar linkList = require(\"./helper/linkList\");\r\n\r\nvar List = require(\"./List\");\r\n\r\nvar createDimensions = require(\"./helper/createDimensions\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Tree data structure\r\n *\r\n * @module echarts/data/Tree\r\n */\r\n\r\n/**\r\n * @constructor module:echarts/data/Tree~TreeNode\r\n * @param {string} name\r\n * @param {module:echarts/data/Tree} hostTree\r\n */\r\nvar TreeNode = function (name, hostTree) {\r\n  /**\r\n   * @type {string}\r\n   */\r\n  this.name = name || '';\r\n  /**\r\n   * Depth of node\r\n   *\r\n   * @type {number}\r\n   * @readOnly\r\n   */\r\n\r\n  this.depth = 0;\r\n  /**\r\n   * Height of the subtree rooted at this node.\r\n   * @type {number}\r\n   * @readOnly\r\n   */\r\n\r\n  this.height = 0;\r\n  /**\r\n   * @type {module:echarts/data/Tree~TreeNode}\r\n   * @readOnly\r\n   */\r\n\r\n  this.parentNode = null;\r\n  /**\r\n   * Reference to list item.\r\n   * Do not persistent dataIndex outside,\r\n   * besause it may be changed by list.\r\n   * If dataIndex -1,\r\n   * this node is logical deleted (filtered) in list.\r\n   *\r\n   * @type {Object}\r\n   * @readOnly\r\n   */\r\n\r\n  this.dataIndex = -1;\r\n  /**\r\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\r\n   * @readOnly\r\n   */\r\n\r\n  this.children = [];\r\n  /**\r\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\r\n   * @pubilc\r\n   */\r\n\r\n  this.viewChildren = [];\r\n  /**\r\n   * @type {moduel:echarts/data/Tree}\r\n   * @readOnly\r\n   */\r\n\r\n  this.hostTree = hostTree;\r\n};\r\n\r\nTreeNode.prototype = {\r\n  constructor: TreeNode,\r\n\r\n  /**\r\n   * The node is removed.\r\n   * @return {boolean} is removed.\r\n   */\r\n  isRemoved: function () {\r\n    return this.dataIndex < 0;\r\n  },\r\n\r\n  /**\r\n   * Travel this subtree (include this node).\r\n   * Usage:\r\n   *    node.eachNode(function () { ... }); // preorder\r\n   *    node.eachNode('preorder', function () { ... }); // preorder\r\n   *    node.eachNode('postorder', function () { ... }); // postorder\r\n   *    node.eachNode(\r\n   *        {order: 'postorder', attr: 'viewChildren'},\r\n   *        function () { ... }\r\n   *    ); // postorder\r\n   *\r\n   * @param {(Object|string)} options If string, means order.\r\n   * @param {string=} options.order 'preorder' or 'postorder'\r\n   * @param {string=} options.attr 'children' or 'viewChildren'\r\n   * @param {Function} cb If in preorder and return false,\r\n   *                      its subtree will not be visited.\r\n   * @param {Object} [context]\r\n   */\r\n  eachNode: function (options, cb, context) {\r\n    if (typeof options === 'function') {\r\n      context = cb;\r\n      cb = options;\r\n      options = null;\r\n    }\r\n\r\n    options = options || {};\r\n\r\n    if (zrUtil.isString(options)) {\r\n      options = {\r\n        order: options\r\n      };\r\n    }\r\n\r\n    var order = options.order || 'preorder';\r\n    var children = this[options.attr || 'children'];\r\n    var suppressVisitSub;\r\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\r\n\r\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\r\n      children[i].eachNode(options, cb, context);\r\n    }\r\n\r\n    order === 'postorder' && cb.call(context, this);\r\n  },\r\n\r\n  /**\r\n   * Update depth and height of this subtree.\r\n   *\r\n   * @param  {number} depth\r\n   */\r\n  updateDepthAndHeight: function (depth) {\r\n    var height = 0;\r\n    this.depth = depth;\r\n\r\n    for (var i = 0; i < this.children.length; i++) {\r\n      var child = this.children[i];\r\n      child.updateDepthAndHeight(depth + 1);\r\n\r\n      if (child.height > height) {\r\n        height = child.height;\r\n      }\r\n    }\r\n\r\n    this.height = height + 1;\r\n  },\r\n\r\n  /**\r\n   * @param  {string} id\r\n   * @return {module:echarts/data/Tree~TreeNode}\r\n   */\r\n  getNodeById: function (id) {\r\n    if (this.getId() === id) {\r\n      return this;\r\n    }\r\n\r\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\r\n      var res = children[i].getNodeById(id);\r\n\r\n      if (res) {\r\n        return res;\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/data/Tree~TreeNode} node\r\n   * @return {boolean}\r\n   */\r\n  contains: function (node) {\r\n    if (node === this) {\r\n      return true;\r\n    }\r\n\r\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\r\n      var res = children[i].contains(node);\r\n\r\n      if (res) {\r\n        return res;\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {boolean} includeSelf Default false.\r\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\r\n   */\r\n  getAncestors: function (includeSelf) {\r\n    var ancestors = [];\r\n    var node = includeSelf ? this : this.parentNode;\r\n\r\n    while (node) {\r\n      ancestors.push(node);\r\n      node = node.parentNode;\r\n    }\r\n\r\n    ancestors.reverse();\r\n    return ancestors;\r\n  },\r\n\r\n  /**\r\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\r\n   * @return {number} Value.\r\n   */\r\n  getValue: function (dimension) {\r\n    var data = this.hostTree.data;\r\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\r\n  },\r\n\r\n  /**\r\n   * @param {Object} layout\r\n   * @param {boolean=} [merge=false]\r\n   */\r\n  setLayout: function (layout, merge) {\r\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\r\n  },\r\n\r\n  /**\r\n   * @return {Object} layout\r\n   */\r\n  getLayout: function () {\r\n    return this.hostTree.data.getItemLayout(this.dataIndex);\r\n  },\r\n\r\n  /**\r\n   * @param {string} [path]\r\n   * @return {module:echarts/model/Model}\r\n   */\r\n  getModel: function (path) {\r\n    if (this.dataIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    var hostTree = this.hostTree;\r\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\r\n    return itemModel.getModel(path);\r\n  },\r\n\r\n  /**\r\n   * @example\r\n   *  setItemVisual('color', color);\r\n   *  setItemVisual({\r\n   *      'color': color\r\n   *  });\r\n   */\r\n  setVisual: function (key, value) {\r\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\r\n  },\r\n\r\n  /**\r\n   * Get item visual\r\n   */\r\n  getVisual: function (key, ignoreParent) {\r\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @return {number}\r\n   */\r\n  getRawIndex: function () {\r\n    return this.hostTree.data.getRawIndex(this.dataIndex);\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @return {string}\r\n   */\r\n  getId: function () {\r\n    return this.hostTree.data.getId(this.dataIndex);\r\n  },\r\n\r\n  /**\r\n   * if this is an ancestor of another node\r\n   *\r\n   * @public\r\n   * @param {TreeNode} node another node\r\n   * @return {boolean} if is ancestor\r\n   */\r\n  isAncestorOf: function (node) {\r\n    var parent = node.parentNode;\r\n\r\n    while (parent) {\r\n      if (parent === this) {\r\n        return true;\r\n      }\r\n\r\n      parent = parent.parentNode;\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * if this is an descendant of another node\r\n   *\r\n   * @public\r\n   * @param {TreeNode} node another node\r\n   * @return {boolean} if is descendant\r\n   */\r\n  isDescendantOf: function (node) {\r\n    return node !== this && node.isAncestorOf(this);\r\n  }\r\n};\r\n/**\r\n * @constructor\r\n * @alias module:echarts/data/Tree\r\n * @param {module:echarts/model/Model} hostModel\r\n */\r\n\r\nfunction Tree(hostModel) {\r\n  /**\r\n   * @type {module:echarts/data/Tree~TreeNode}\r\n   * @readOnly\r\n   */\r\n  this.root;\r\n  /**\r\n   * @type {module:echarts/data/List}\r\n   * @readOnly\r\n   */\r\n\r\n  this.data;\r\n  /**\r\n   * Index of each item is the same as the raw index of coresponding list item.\r\n   * @private\r\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\r\n   */\r\n\r\n  this._nodes = [];\r\n  /**\r\n   * @private\r\n   * @readOnly\r\n   * @type {module:echarts/model/Model}\r\n   */\r\n\r\n  this.hostModel = hostModel;\r\n}\r\n\r\nTree.prototype = {\r\n  constructor: Tree,\r\n  type: 'tree',\r\n\r\n  /**\r\n   * Travel this subtree (include this node).\r\n   * Usage:\r\n   *    node.eachNode(function () { ... }); // preorder\r\n   *    node.eachNode('preorder', function () { ... }); // preorder\r\n   *    node.eachNode('postorder', function () { ... }); // postorder\r\n   *    node.eachNode(\r\n   *        {order: 'postorder', attr: 'viewChildren'},\r\n   *        function () { ... }\r\n   *    ); // postorder\r\n   *\r\n   * @param {(Object|string)} options If string, means order.\r\n   * @param {string=} options.order 'preorder' or 'postorder'\r\n   * @param {string=} options.attr 'children' or 'viewChildren'\r\n   * @param {Function} cb\r\n   * @param {Object}   [context]\r\n   */\r\n  eachNode: function (options, cb, context) {\r\n    this.root.eachNode(options, cb, context);\r\n  },\r\n\r\n  /**\r\n   * @param {number} dataIndex\r\n   * @return {module:echarts/data/Tree~TreeNode}\r\n   */\r\n  getNodeByDataIndex: function (dataIndex) {\r\n    var rawIndex = this.data.getRawIndex(dataIndex);\r\n    return this._nodes[rawIndex];\r\n  },\r\n\r\n  /**\r\n   * @param {string} name\r\n   * @return {module:echarts/data/Tree~TreeNode}\r\n   */\r\n  getNodeByName: function (name) {\r\n    return this.root.getNodeByName(name);\r\n  },\r\n\r\n  /**\r\n   * Update item available by list,\r\n   * when list has been performed options like 'filterSelf' or 'map'.\r\n   */\r\n  update: function () {\r\n    var data = this.data;\r\n    var nodes = this._nodes;\r\n\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n      nodes[i].dataIndex = -1;\r\n    }\r\n\r\n    for (var i = 0, len = data.count(); i < len; i++) {\r\n      nodes[data.getRawIndex(i)].dataIndex = i;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Clear all layouts\r\n   */\r\n  clearLayouts: function () {\r\n    this.data.clearItemLayouts();\r\n  }\r\n};\r\n/**\r\n * data node format:\r\n * {\r\n *     name: ...\r\n *     value: ...\r\n *     children: [\r\n *         {\r\n *             name: ...\r\n *             value: ...\r\n *             children: ...\r\n *         },\r\n *         ...\r\n *     ]\r\n * }\r\n *\r\n * @static\r\n * @param {Object} dataRoot Root node.\r\n * @param {module:echarts/model/Model} hostModel\r\n * @return module:echarts/data/Tree\r\n */\r\n\r\nTree.createTree = function (dataRoot, hostModel, beforeLink) {\r\n  var tree = new Tree(hostModel);\r\n  var listData = [];\r\n  var dimMax = 1;\r\n  buildHierarchy(dataRoot);\r\n\r\n  function buildHierarchy(dataNode, parentNode) {\r\n    var value = dataNode.value;\r\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\r\n    listData.push(dataNode);\r\n    var node = new TreeNode(dataNode.name, tree);\r\n    parentNode ? addChild(node, parentNode) : tree.root = node;\r\n\r\n    tree._nodes.push(node);\r\n\r\n    var children = dataNode.children;\r\n\r\n    if (children) {\r\n      for (var i = 0; i < children.length; i++) {\r\n        buildHierarchy(children[i], node);\r\n      }\r\n    }\r\n  }\r\n\r\n  tree.root.updateDepthAndHeight(0);\r\n  var dimensionsInfo = createDimensions(listData, {\r\n    coordDimensions: ['value'],\r\n    dimensionsCount: dimMax\r\n  });\r\n  var list = new List(dimensionsInfo, hostModel);\r\n  list.initData(listData);\r\n  beforeLink && beforeLink(list);\r\n  linkList({\r\n    mainData: list,\r\n    struct: tree,\r\n    structAttr: 'tree'\r\n  });\r\n  tree.update();\r\n  return tree;\r\n};\r\n/**\r\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\r\n * so this function is not ready and not necessary to be public.\r\n *\r\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\r\n */\r\n\r\n\r\nfunction addChild(child, node) {\r\n  var children = node.children;\r\n\r\n  if (child.parentNode === node) {\r\n    return;\r\n  }\r\n\r\n  children.push(child);\r\n  child.parentNode = node;\r\n}\r\n\r\nvar _default = Tree;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar each = _util.each;\r\nvar isString = _util.isString;\r\nvar defaults = _util.defaults;\r\nvar extend = _util.extend;\r\nvar isObject = _util.isObject;\r\nvar clone = _util.clone;\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar normalizeToArray = _model.normalizeToArray;\r\n\r\nvar _sourceHelper = require(\"./sourceHelper\");\r\n\r\nvar guessOrdinal = _sourceHelper.guessOrdinal;\r\nvar BE_ORDINAL = _sourceHelper.BE_ORDINAL;\r\n\r\nvar Source = require(\"../Source\");\r\n\r\nvar _dimensionHelper = require(\"./dimensionHelper\");\r\n\r\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\r\n\r\nvar DataDimensionInfo = require(\"../DataDimensionInfo\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @deprecated\r\n * Use `echarts/data/helper/createDimensions` instead.\r\n */\r\n\r\n/**\r\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\r\n *\r\n * This method builds the relationship between:\r\n * + \"what the coord sys or series requires (see `sysDims`)\",\r\n * + \"what the user defines (in `encode` and `dimensions`, see `opt.dimsDef` and `opt.encodeDef`)\"\r\n * + \"what the data source provids (see `source`)\".\r\n *\r\n * Some guess strategy will be adapted if user does not define something.\r\n * If no 'value' dimension specified, the first no-named dimension will be\r\n * named as 'value'.\r\n *\r\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\r\n *      provides not only dim template, but also default order.\r\n *      properties: 'name', 'type', 'displayName'.\r\n *      `name` of each item provides default coord name.\r\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\r\n *                                    provide dims count that the sysDim required.\r\n *      [{ordinalMeta}] can be specified.\r\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\r\n * @param {Object} [opt]\r\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\r\n *      For example: ['asdf', {name, type}, ...].\r\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\r\n * @param {Function} [opt.encodeDefaulter] Called if no `opt.encodeDef` exists.\r\n *      If not specified, auto find the next available data dim.\r\n *      param source {module:data/Source}\r\n *      param dimCount {number}\r\n *      return {Object} encode Never be `null/undefined`.\r\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\r\n *      If not specified, extra dim names will be:\r\n *      'value', 'value0', 'value1', ...\r\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\r\n *      If `generateCoordCount` specified, the generated dim names will be:\r\n *      `generateCoord` + 0, `generateCoord` + 1, ...\r\n *      can be Infinity, indicate that use all of the remain columns.\r\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\r\n * @return {Array.<module:data/DataDimensionInfo>}\r\n */\r\nfunction completeDimensions(sysDims, source, opt) {\r\n  if (!Source.isInstance(source)) {\r\n    source = Source.seriesDataToSource(source);\r\n  }\r\n\r\n  opt = opt || {};\r\n  sysDims = (sysDims || []).slice();\r\n  var dimsDef = (opt.dimsDef || []).slice();\r\n  var dataDimNameMap = createHashMap();\r\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\r\n\r\n  var result = [];\r\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\r\n\r\n  for (var i = 0; i < dimCount; i++) {\r\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\r\n      name: dimsDef[i]\r\n    });\r\n    var userDimName = dimDefItem.name;\r\n    var resultItem = result[i] = new DataDimensionInfo(); // Name will be applied later for avoiding duplication.\r\n\r\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\r\n      // Only if `series.dimensions` is defined in option\r\n      // displayName, will be set, and dimension will be diplayed vertically in\r\n      // tooltip by default.\r\n      resultItem.name = resultItem.displayName = userDimName;\r\n      dataDimNameMap.set(userDimName, i);\r\n    }\r\n\r\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\r\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\r\n  }\r\n\r\n  var encodeDef = opt.encodeDef;\r\n\r\n  if (!encodeDef && opt.encodeDefaulter) {\r\n    encodeDef = opt.encodeDefaulter(source, dimCount);\r\n  }\r\n\r\n  encodeDef = createHashMap(encodeDef); // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\r\n\r\n  encodeDef.each(function (dataDims, coordDim) {\r\n    dataDims = normalizeToArray(dataDims).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\r\n    // `{encode: {x: -1, y: 1}}`. Should not filter anything in\r\n    // this case.\r\n\r\n    if (dataDims.length === 1 && !isString(dataDims[0]) && dataDims[0] < 0) {\r\n      encodeDef.set(coordDim, false);\r\n      return;\r\n    }\r\n\r\n    var validDataDims = encodeDef.set(coordDim, []);\r\n    each(dataDims, function (resultDimIdx, idx) {\r\n      // The input resultDimIdx can be dim name or index.\r\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\r\n\r\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\r\n        validDataDims[idx] = resultDimIdx;\r\n        applyDim(result[resultDimIdx], coordDim, idx);\r\n      }\r\n    });\r\n  }); // Apply templetes and default order from `sysDims`.\r\n\r\n  var availDimIdx = 0;\r\n  each(sysDims, function (sysDimItem, sysDimIndex) {\r\n    var coordDim;\r\n    var sysDimItem;\r\n    var sysDimItemDimsDef;\r\n    var sysDimItemOtherDims;\r\n\r\n    if (isString(sysDimItem)) {\r\n      coordDim = sysDimItem;\r\n      sysDimItem = {};\r\n    } else {\r\n      coordDim = sysDimItem.name;\r\n      var ordinalMeta = sysDimItem.ordinalMeta;\r\n      sysDimItem.ordinalMeta = null;\r\n      sysDimItem = clone(sysDimItem);\r\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\r\n\r\n      sysDimItemDimsDef = sysDimItem.dimsDef;\r\n      sysDimItemOtherDims = sysDimItem.otherDims;\r\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\r\n    }\r\n\r\n    var dataDims = encodeDef.get(coordDim); // negative resultDimIdx means no need to mapping.\r\n\r\n    if (dataDims === false) {\r\n      return;\r\n    }\r\n\r\n    var dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\r\n\r\n    if (!dataDims.length) {\r\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\r\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\r\n          availDimIdx++;\r\n        }\r\n\r\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\r\n      }\r\n    } // Apply templates.\r\n\r\n\r\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\r\n      var resultItem = result[resultDimIdx];\r\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\r\n\r\n      if (resultItem.name == null && sysDimItemDimsDef) {\r\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\r\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\r\n          name: sysDimItemDimsDefItem\r\n        });\r\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\r\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\r\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\r\n\r\n\r\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\r\n    });\r\n  });\r\n\r\n  function applyDim(resultItem, coordDim, coordDimIndex) {\r\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\r\n      resultItem.otherDims[coordDim] = coordDimIndex;\r\n    } else {\r\n      resultItem.coordDim = coordDim;\r\n      resultItem.coordDimIndex = coordDimIndex;\r\n      coordDimNameMap.set(coordDim, true);\r\n    }\r\n  } // Make sure the first extra dim is 'value'.\r\n\r\n\r\n  var generateCoord = opt.generateCoord;\r\n  var generateCoordCount = opt.generateCoordCount;\r\n  var fromZero = generateCoordCount != null;\r\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\r\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\r\n\r\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\r\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || new DataDimensionInfo();\r\n    var coordDim = resultItem.coordDim;\r\n\r\n    if (coordDim == null) {\r\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\r\n      resultItem.coordDimIndex = 0;\r\n\r\n      if (!generateCoord || generateCoordCount <= 0) {\r\n        resultItem.isExtraCoord = true;\r\n      }\r\n\r\n      generateCoordCount--;\r\n    }\r\n\r\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\r\n\r\n    if (resultItem.type == null && (guessOrdinal(source, resultDimIdx, resultItem.name) === BE_ORDINAL.Must // Consider the case:\r\n    // {\r\n    //    dataset: {source: [\r\n    //        ['2001', 123],\r\n    //        ['2002', 456],\r\n    //        ...\r\n    //        ['The others', 987],\r\n    //    ]},\r\n    //    series: {type: 'pie'}\r\n    // }\r\n    // The first colum should better be treated as a \"ordinal\" although it\r\n    // might not able to be detected as an \"ordinal\" by `guessOrdinal`.\r\n    || resultItem.isExtraCoord && (resultItem.otherDims.itemName != null || resultItem.otherDims.seriesName != null))) {\r\n      resultItem.type = 'ordinal';\r\n    }\r\n  }\r\n\r\n  return result;\r\n} // ??? TODO\r\n// Originally detect dimCount by data[0]. Should we\r\n// optimize it to only by sysDims and dimensions and encode.\r\n// So only necessary dims will be initialized.\r\n// But\r\n// (1) custom series should be considered. where other dims\r\n// may be visited.\r\n// (2) sometimes user need to calcualte bubble size or use visualMap\r\n// on other dimensions besides coordSys needed.\r\n// So, dims that is not used by system, should be shared in storage?\r\n\r\n\r\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\r\n  // Note that the result dimCount should not small than columns count\r\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\r\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\r\n  each(sysDims, function (sysDimItem) {\r\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\r\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\r\n  });\r\n  return dimCount;\r\n}\r\n\r\nfunction genName(name, map, fromZero) {\r\n  if (fromZero || map.get(name) != null) {\r\n    var i = 0;\r\n\r\n    while (map.get(name + i) != null) {\r\n      i++;\r\n    }\r\n\r\n    name += i;\r\n  }\r\n\r\n  map.set(name, true);\r\n  return name;\r\n}\r\n\r\nvar _default = completeDimensions;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar completeDimensions = require(\"./completeDimensions\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Substitute `completeDimensions`.\r\n * `completeDimensions` is to be deprecated.\r\n */\r\n\r\n/**\r\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\r\n * @param {Object|Array} [opt]\r\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\r\n * @param {number} [opt.dimensionsCount]\r\n * @param {string} [opt.generateCoord]\r\n * @param {string} [opt.generateCoordCount]\r\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\r\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\r\n * @param {Function} [opt.encodeDefaulter] Make default encode if user not specified.\r\n * @return {Array.<Object>} dimensionsInfo\r\n */\r\nfunction _default(source, opt) {\r\n  opt = opt || {};\r\n  return completeDimensions(opt.coordDimensions || [], source, {\r\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\r\n    encodeDef: opt.encodeDefine || source.encodeDefine,\r\n    dimCount: opt.dimensionsCount,\r\n    encodeDefaulter: opt.encodeDefaulter,\r\n    generateCoord: opt.generateCoord,\r\n    generateCoordCount: opt.generateCoordCount\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar isTypedArray = _util.isTypedArray;\r\nvar extend = _util.extend;\r\nvar assert = _util.assert;\r\nvar each = _util.each;\r\nvar isObject = _util.isObject;\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar getDataItemValue = _model.getDataItemValue;\r\nvar isDataItemOption = _model.isDataItemOption;\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar parseDate = _number.parseDate;\r\n\r\nvar Source = require(\"../Source\");\r\n\r\nvar _sourceType = require(\"./sourceType\");\r\n\r\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\r\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\r\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\r\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// TODO\r\n// ??? refactor? check the outer usage of data provider.\r\n// merge with defaultDimValueGetter?\r\n\r\n/**\r\n * If normal array used, mutable chunk size is supported.\r\n * If typed array used, chunk size must be fixed.\r\n */\r\nfunction DefaultDataProvider(source, dimSize) {\r\n  if (!Source.isInstance(source)) {\r\n    source = Source.seriesDataToSource(source);\r\n  }\r\n\r\n  this._source = source;\r\n  var data = this._data = source.data;\r\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\r\n\r\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\r\n    this._offset = 0;\r\n    this._dimSize = dimSize;\r\n    this._data = data;\r\n  }\r\n\r\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\r\n  extend(this, methods);\r\n}\r\n\r\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\r\n\r\nproviderProto.pure = false; // If data is persistent and will not be released after use.\r\n\r\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\r\n\r\nproviderProto.getSource = function () {\r\n  return this._source;\r\n};\r\n\r\nvar providerMethods = {\r\n  'arrayRows_column': {\r\n    pure: true,\r\n    count: function () {\r\n      return Math.max(0, this._data.length - this._source.startIndex);\r\n    },\r\n    getItem: function (idx) {\r\n      return this._data[idx + this._source.startIndex];\r\n    },\r\n    appendData: appendDataSimply\r\n  },\r\n  'arrayRows_row': {\r\n    pure: true,\r\n    count: function () {\r\n      var row = this._data[0];\r\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\r\n    },\r\n    getItem: function (idx) {\r\n      idx += this._source.startIndex;\r\n      var item = [];\r\n      var data = this._data;\r\n\r\n      for (var i = 0; i < data.length; i++) {\r\n        var row = data[i];\r\n        item.push(row ? row[idx] : null);\r\n      }\r\n\r\n      return item;\r\n    },\r\n    appendData: function () {\r\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\r\n    }\r\n  },\r\n  'objectRows': {\r\n    pure: true,\r\n    count: countSimply,\r\n    getItem: getItemSimply,\r\n    appendData: appendDataSimply\r\n  },\r\n  'keyedColumns': {\r\n    pure: true,\r\n    count: function () {\r\n      var dimName = this._source.dimensionsDefine[0].name;\r\n      var col = this._data[dimName];\r\n      return col ? col.length : 0;\r\n    },\r\n    getItem: function (idx) {\r\n      var item = [];\r\n      var dims = this._source.dimensionsDefine;\r\n\r\n      for (var i = 0; i < dims.length; i++) {\r\n        var col = this._data[dims[i].name];\r\n        item.push(col ? col[idx] : null);\r\n      }\r\n\r\n      return item;\r\n    },\r\n    appendData: function (newData) {\r\n      var data = this._data;\r\n      each(newData, function (newCol, key) {\r\n        var oldCol = data[key] || (data[key] = []);\r\n\r\n        for (var i = 0; i < (newCol || []).length; i++) {\r\n          oldCol.push(newCol[i]);\r\n        }\r\n      });\r\n    }\r\n  },\r\n  'original': {\r\n    count: countSimply,\r\n    getItem: getItemSimply,\r\n    appendData: appendDataSimply\r\n  },\r\n  'typedArray': {\r\n    persistent: false,\r\n    pure: true,\r\n    count: function () {\r\n      return this._data ? this._data.length / this._dimSize : 0;\r\n    },\r\n    getItem: function (idx, out) {\r\n      idx = idx - this._offset;\r\n      out = out || [];\r\n      var offset = this._dimSize * idx;\r\n\r\n      for (var i = 0; i < this._dimSize; i++) {\r\n        out[i] = this._data[offset + i];\r\n      }\r\n\r\n      return out;\r\n    },\r\n    appendData: function (newData) {\r\n      this._data = newData;\r\n    },\r\n    // Clean self if data is already used.\r\n    clean: function () {\r\n      // PENDING\r\n      this._offset += this.count();\r\n      this._data = null;\r\n    }\r\n  }\r\n};\r\n\r\nfunction countSimply() {\r\n  return this._data.length;\r\n}\r\n\r\nfunction getItemSimply(idx) {\r\n  return this._data[idx];\r\n}\r\n\r\nfunction appendDataSimply(newData) {\r\n  for (var i = 0; i < newData.length; i++) {\r\n    this._data.push(newData[i]);\r\n  }\r\n}\r\n\r\nvar rawValueGetters = {\r\n  arrayRows: getRawValueSimply,\r\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\r\n    return dimIndex != null ? dataItem[dimName] : dataItem;\r\n  },\r\n  keyedColumns: getRawValueSimply,\r\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\r\n    // FIXME\r\n    // In some case (markpoint in geo (geo-map.html)), dataItem\r\n    // is {coord: [...]}\r\n    var value = getDataItemValue(dataItem);\r\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\r\n  },\r\n  typedArray: getRawValueSimply\r\n};\r\n\r\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\r\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\r\n}\r\n\r\nvar defaultDimValueGetters = {\r\n  arrayRows: getDimValueSimply,\r\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\r\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\r\n  },\r\n  keyedColumns: getDimValueSimply,\r\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\r\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\r\n    // If dataItem is an plain object with no value field, the var `value`\r\n    // will be assigned with the object, but it will be tread correctly\r\n    // in the `convertDataValue`.\r\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\r\n\r\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\r\n      this.hasItemOption = true;\r\n    }\r\n\r\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\r\n    : value, this._dimensionInfos[dimName]);\r\n  },\r\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\r\n    return dataItem[dimIndex];\r\n  }\r\n};\r\n\r\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\r\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\r\n}\r\n/**\r\n * This helper method convert value in data.\r\n * @param {string|number|Date} value\r\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\r\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\r\n */\r\n\r\n\r\nfunction converDataValue(value, dimInfo) {\r\n  // Performance sensitive.\r\n  var dimType = dimInfo && dimInfo.type;\r\n\r\n  if (dimType === 'ordinal') {\r\n    // If given value is a category string\r\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\r\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\r\n  }\r\n\r\n  if (dimType === 'time' // spead up when using timestamp\r\n  && typeof value !== 'number' && value != null && value !== '-') {\r\n    value = +parseDate(value);\r\n  } // dimType defaults 'number'.\r\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\r\n  // parse to NaN.\r\n\r\n\r\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\r\n  // If object, also parse to NaN\r\n  : +value;\r\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\r\n// Consider persistent.\r\n// Caution: why use raw value to display on label or tooltip?\r\n// A reason is to avoid format. For example time value we do not know\r\n// how to format is expected. More over, if stack is used, calculated\r\n// value may be 0.91000000001, which have brings trouble to display.\r\n// TODO: consider how to treat null/undefined/NaN when display?\r\n\r\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {number} dataIndex\r\n * @param {string|number} [dim] dimName or dimIndex\r\n * @return {Array.<number>|string|number} can be null/undefined.\r\n */\r\n\r\n\r\nfunction retrieveRawValue(data, dataIndex, dim) {\r\n  if (!data) {\r\n    return;\r\n  } // Consider data may be not persistent.\r\n\r\n\r\n  var dataItem = data.getRawDataItem(dataIndex);\r\n\r\n  if (dataItem == null) {\r\n    return;\r\n  }\r\n\r\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\r\n  var dimName;\r\n  var dimIndex;\r\n  var dimInfo = data.getDimensionInfo(dim);\r\n\r\n  if (dimInfo) {\r\n    dimName = dimInfo.name;\r\n    dimIndex = dimInfo.index;\r\n  }\r\n\r\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\r\n}\r\n/**\r\n * Compatible with some cases (in pie, map) like:\r\n * data: [{name: 'xx', value: 5, selected: true}, ...]\r\n * where only sourceFormat is 'original' and 'objectRows' supported.\r\n *\r\n * ??? TODO\r\n * Supported detail options in data item when using 'arrayRows'.\r\n *\r\n * @param {module:echarts/data/List} data\r\n * @param {number} dataIndex\r\n * @param {string} attr like 'selected'\r\n */\r\n\r\n\r\nfunction retrieveRawAttr(data, dataIndex, attr) {\r\n  if (!data) {\r\n    return;\r\n  }\r\n\r\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\r\n\r\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\r\n    return;\r\n  }\r\n\r\n  var dataItem = data.getRawDataItem(dataIndex);\r\n\r\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\r\n    dataItem = null;\r\n  }\r\n\r\n  if (dataItem) {\r\n    return dataItem[attr];\r\n  }\r\n}\r\n\r\nexports.DefaultDataProvider = DefaultDataProvider;\r\nexports.defaultDimValueGetters = defaultDimValueGetters;\r\nexports.retrieveRawValue = retrieveRawValue;\r\nexports.retrieveRawAttr = retrieveRawAttr;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\nvar isString = _util.isString;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Note that it is too complicated to support 3d stack by value\r\n * (have to create two-dimension inverted index), so in 3d case\r\n * we just support that stacked by index.\r\n *\r\n * @param {module:echarts/model/Series} seriesModel\r\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\r\n *        The input dimensionInfoList will be modified.\r\n * @param {Object} [opt]\r\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\r\n * @param {boolean} [opt.byIndex=false]\r\n * @return {Object} calculationInfo\r\n * {\r\n *     stackedDimension: string\r\n *     stackedByDimension: string\r\n *     isStackedByIndex: boolean\r\n *     stackedOverDimension: string\r\n *     stackResultDimension: string\r\n * }\r\n */\r\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\r\n  opt = opt || {};\r\n  var byIndex = opt.byIndex;\r\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\r\n\r\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\r\n  var stackedByDimInfo;\r\n  var stackedDimInfo;\r\n  var stackResultDimension;\r\n  var stackedOverDimension;\r\n  each(dimensionInfoList, function (dimensionInfo, index) {\r\n    if (isString(dimensionInfo)) {\r\n      dimensionInfoList[index] = dimensionInfo = {\r\n        name: dimensionInfo\r\n      };\r\n    }\r\n\r\n    if (mayStack && !dimensionInfo.isExtraCoord) {\r\n      // Find the first ordinal dimension as the stackedByDimInfo.\r\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\r\n        stackedByDimInfo = dimensionInfo;\r\n      } // Find the first stackable dimension as the stackedDimInfo.\r\n\r\n\r\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\r\n        stackedDimInfo = dimensionInfo;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\r\n    // Compatible with previous design, value axis (time axis) only stack by index.\r\n    // It may make sense if the user provides elaborately constructed data.\r\n    byIndex = true;\r\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\r\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\r\n  // might not be a good way.\r\n\r\n\r\n  if (stackedDimInfo) {\r\n    // Use a weird name that not duplicated with other names.\r\n    stackResultDimension = '__\\0ecstackresult';\r\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\r\n\r\n    if (stackedByDimInfo) {\r\n      stackedByDimInfo.createInvertedIndices = true;\r\n    }\r\n\r\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\r\n    var stackedDimType = stackedDimInfo.type;\r\n    var stackedDimCoordIndex = 0;\r\n    each(dimensionInfoList, function (dimensionInfo) {\r\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\r\n        stackedDimCoordIndex++;\r\n      }\r\n    });\r\n    dimensionInfoList.push({\r\n      name: stackResultDimension,\r\n      coordDim: stackedDimCoordDim,\r\n      coordDimIndex: stackedDimCoordIndex,\r\n      type: stackedDimType,\r\n      isExtraCoord: true,\r\n      isCalculationCoord: true\r\n    });\r\n    stackedDimCoordIndex++;\r\n    dimensionInfoList.push({\r\n      name: stackedOverDimension,\r\n      // This dimension contains stack base (generally, 0), so do not set it as\r\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\r\n      coordDim: stackedOverDimension,\r\n      coordDimIndex: stackedDimCoordIndex,\r\n      type: stackedDimType,\r\n      isExtraCoord: true,\r\n      isCalculationCoord: true\r\n    });\r\n  }\r\n\r\n  return {\r\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\r\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\r\n    isStackedByIndex: byIndex,\r\n    stackedOverDimension: stackedOverDimension,\r\n    stackResultDimension: stackResultDimension\r\n  };\r\n}\r\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {string} stackedDim\r\n */\r\n\r\n\r\nfunction isDimensionStacked(data, stackedDim\r\n/*, stackedByDim*/\r\n) {\r\n  // Each single series only maps to one pair of axis. So we do not need to\r\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\r\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\r\n  //     stackedByDim != null\r\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\r\n  //         : data.getCalculationInfo('isStackedByIndex')\r\n  // );\r\n}\r\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {string} targetDim\r\n * @param {string} [stackedByDim] If not input this parameter, check whether\r\n *                                stacked by index.\r\n * @return {string} dimension\r\n */\r\n\r\n\r\nfunction getStackedDimension(data, targetDim) {\r\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\r\n}\r\n\r\nexports.enableDataStack = enableDataStack;\r\nexports.isDimensionStacked = isDimensionStacked;\r\nexports.getStackedDimension = getStackedDimension;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\nvar createHashMap = _util.createHashMap;\r\nvar assert = _util.assert;\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\r\n\r\nfunction summarizeDimensions(data) {\r\n  var summary = {};\r\n  var encode = summary.encode = {};\r\n  var notExtraCoordDimMap = createHashMap();\r\n  var defaultedLabel = [];\r\n  var defaultedTooltip = []; // See the comment of `List.js#userOutput`.\r\n\r\n  var userOutput = summary.userOutput = {\r\n    dimensionNames: data.dimensions.slice(),\r\n    encode: {}\r\n  };\r\n  each(data.dimensions, function (dimName) {\r\n    var dimItem = data.getDimensionInfo(dimName);\r\n    var coordDim = dimItem.coordDim;\r\n\r\n    if (coordDim) {\r\n      var coordDimIndex = dimItem.coordDimIndex;\r\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\r\n\r\n      if (!dimItem.isExtraCoord) {\r\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\r\n        // because when dataset is used, it is hard to guess which dimension\r\n        // can be value dimension. If both show x, y on label is not look good,\r\n        // and conventionally y axis is focused more.\r\n\r\n        if (mayLabelDimType(dimItem.type)) {\r\n          defaultedLabel[0] = dimName;\r\n        } // User output encode do not contain generated coords.\r\n        // And it only has index. User can use index to retrieve value from the raw item array.\r\n\r\n\r\n        getOrCreateEncodeArr(userOutput.encode, coordDim)[coordDimIndex] = dimItem.index;\r\n      }\r\n\r\n      if (dimItem.defaultTooltip) {\r\n        defaultedTooltip.push(dimName);\r\n      }\r\n    }\r\n\r\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\r\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\r\n      var dimIndex = dimItem.otherDims[otherDim];\r\n\r\n      if (dimIndex != null && dimIndex !== false) {\r\n        encodeArr[dimIndex] = dimItem.name;\r\n      }\r\n    });\r\n  });\r\n  var dataDimsOnCoord = [];\r\n  var encodeFirstDimNotExtra = {};\r\n  notExtraCoordDimMap.each(function (v, coordDim) {\r\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\r\n    // But should fix the case that radar axes: simplify the logic\r\n    // of `completeDimension`, remove `extraPrefix`.\r\n\r\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\r\n    // dim canot on more than one coordDim.\r\n\r\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\r\n  });\r\n  summary.dataDimsOnCoord = dataDimsOnCoord;\r\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\r\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\r\n  // in this way. Use label.formatter instead. May be remove this approach someday.\r\n\r\n  if (encodeLabel && encodeLabel.length) {\r\n    defaultedLabel = encodeLabel.slice();\r\n  }\r\n\r\n  var encodeTooltip = encode.tooltip;\r\n\r\n  if (encodeTooltip && encodeTooltip.length) {\r\n    defaultedTooltip = encodeTooltip.slice();\r\n  } else if (!defaultedTooltip.length) {\r\n    defaultedTooltip = defaultedLabel.slice();\r\n  }\r\n\r\n  encode.defaultedLabel = defaultedLabel;\r\n  encode.defaultedTooltip = defaultedTooltip;\r\n  return summary;\r\n}\r\n\r\nfunction getOrCreateEncodeArr(encode, dim) {\r\n  if (!encode.hasOwnProperty(dim)) {\r\n    encode[dim] = [];\r\n  }\r\n\r\n  return encode[dim];\r\n}\r\n\r\nfunction getDimensionTypeByAxis(axisType) {\r\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\r\n}\r\n\r\nfunction mayLabelDimType(dimType) {\r\n  // In most cases, ordinal and time do not suitable for label.\r\n  // Ordinal info can be displayed on axis. Time is too long.\r\n  return !(dimType === 'ordinal' || dimType === 'time');\r\n} // function findTheLastDimMayLabel(data) {\r\n//     // Get last value dim\r\n//     var dimensions = data.dimensions.slice();\r\n//     var valueType;\r\n//     var valueDim;\r\n//     while (dimensions.length && (\r\n//         valueDim = dimensions.pop(),\r\n//         valueType = data.getDimensionInfo(valueDim).type,\r\n//         valueType === 'ordinal' || valueType === 'time'\r\n//     )) {} // jshint ignore:line\r\n//     return valueDim;\r\n// }\r\n\r\n\r\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\r\nexports.summarizeDimensions = summarizeDimensions;\r\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Link lists and struct (graph or tree)\r\n */\r\nvar each = zrUtil.each;\r\nvar DATAS = '\\0__link_datas';\r\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\r\n// In most case, either list or its shallow clones (see list.cloneShallow)\r\n// is active in echarts process. So considering heap memory consumption,\r\n// we do not clone tree or graph, but share them among list and its shallow clones.\r\n// But in some rare case, we have to keep old list (like do animation in chart). So\r\n// please take care that both the old list and the new list share the same tree/graph.\r\n\r\n/**\r\n * @param {Object} opt\r\n * @param {module:echarts/data/List} opt.mainData\r\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\r\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\r\n * @param {Object} [opt.datas] {dataType: data},\r\n *                 like: {node: nodeList, edge: edgeList}.\r\n *                 Should contain mainData.\r\n * @param {Object} [opt.datasAttr] {dataType: attr},\r\n *                 designation: struct[datasAttr[dataType]] = list;\r\n */\r\n\r\nfunction linkList(opt) {\r\n  var mainData = opt.mainData;\r\n  var datas = opt.datas;\r\n\r\n  if (!datas) {\r\n    datas = {\r\n      main: mainData\r\n    };\r\n    opt.datasAttr = {\r\n      main: 'data'\r\n    };\r\n  }\r\n\r\n  opt.datas = opt.mainData = null;\r\n  linkAll(mainData, datas, opt); // Porxy data original methods.\r\n\r\n  each(datas, function (data) {\r\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\r\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\r\n    });\r\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\r\n\r\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\r\n  // another changable methods, which may bring about dead lock.\r\n\r\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\r\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\r\n  }); // Make sure datas contains mainData.\r\n\r\n  zrUtil.assert(datas[mainData.dataType] === mainData);\r\n}\r\n\r\nfunction transferInjection(opt, res) {\r\n  if (isMainData(this)) {\r\n    // Transfer datas to new main data.\r\n    var datas = zrUtil.extend({}, this[DATAS]);\r\n    datas[this.dataType] = res;\r\n    linkAll(res, datas, opt);\r\n  } else {\r\n    // Modify the reference in main data to point newData.\r\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction changeInjection(opt, res) {\r\n  opt.struct && opt.struct.update(this);\r\n  return res;\r\n}\r\n\r\nfunction cloneShallowInjection(opt, res) {\r\n  // cloneShallow, which brings about some fragilities, may be inappropriate\r\n  // to be exposed as an API. So for implementation simplicity we can make\r\n  // the restriction that cloneShallow of not-mainData should not be invoked\r\n  // outside, but only be invoked here.\r\n  each(res[DATAS], function (data, dataType) {\r\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\r\n  });\r\n  return res;\r\n}\r\n/**\r\n * Supplement method to List.\r\n *\r\n * @public\r\n * @param {string} [dataType] If not specified, return mainData.\r\n * @return {module:echarts/data/List}\r\n */\r\n\r\n\r\nfunction getLinkedData(dataType) {\r\n  var mainData = this[MAIN_DATA];\r\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\r\n}\r\n\r\nfunction isMainData(data) {\r\n  return data[MAIN_DATA] === data;\r\n}\r\n\r\nfunction linkAll(mainData, datas, opt) {\r\n  mainData[DATAS] = {};\r\n  each(datas, function (data, dataType) {\r\n    linkSingle(data, dataType, mainData, opt);\r\n  });\r\n}\r\n\r\nfunction linkSingle(data, dataType, mainData, opt) {\r\n  mainData[DATAS][dataType] = data;\r\n  data[MAIN_DATA] = mainData;\r\n  data.dataType = dataType;\r\n\r\n  if (opt.struct) {\r\n    data[opt.structAttr] = opt.struct;\r\n    opt.struct[opt.datasAttr[dataType]] = data;\r\n  } // Supplement method.\r\n\r\n\r\n  data.getLinkedData = getLinkedData;\r\n}\r\n\r\nvar _default = linkList;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\nvar getDataItemValue = _model.getDataItemValue;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar each = _util.each;\r\nvar map = _util.map;\r\nvar isArray = _util.isArray;\r\nvar isString = _util.isString;\r\nvar isObject = _util.isObject;\r\nvar isTypedArray = _util.isTypedArray;\r\nvar isArrayLike = _util.isArrayLike;\r\nvar extend = _util.extend;\r\nvar assert = _util.assert;\r\n\r\nvar Source = require(\"../Source\");\r\n\r\nvar _sourceType = require(\"./sourceType\");\r\n\r\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\r\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\r\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\r\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\r\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\r\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\r\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// The result of `guessOrdinal`.\r\nvar BE_ORDINAL = {\r\n  Must: 1,\r\n  // Encounter string but not '-' and not number-like.\r\n  Might: 2,\r\n  // Encounter string but number-like.\r\n  Not: 3 // Other cases\r\n\r\n};\r\nvar inner = makeInner();\r\n/**\r\n * @see {module:echarts/data/Source}\r\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\r\n * @return {string} sourceFormat\r\n */\r\n\r\nfunction detectSourceFormat(datasetModel) {\r\n  var data = datasetModel.option.source;\r\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\r\n\r\n  if (isTypedArray(data)) {\r\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\r\n  } else if (isArray(data)) {\r\n    // FIXME Whether tolerate null in top level array?\r\n    if (data.length === 0) {\r\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\r\n    }\r\n\r\n    for (var i = 0, len = data.length; i < len; i++) {\r\n      var item = data[i];\r\n\r\n      if (item == null) {\r\n        continue;\r\n      } else if (isArray(item)) {\r\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\r\n        break;\r\n      } else if (isObject(item)) {\r\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\r\n        break;\r\n      }\r\n    }\r\n  } else if (isObject(data)) {\r\n    for (var key in data) {\r\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\r\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\r\n        break;\r\n      }\r\n    }\r\n  } else if (data != null) {\r\n    throw new Error('Invalid data');\r\n  }\r\n\r\n  inner(datasetModel).sourceFormat = sourceFormat;\r\n}\r\n/**\r\n * [Scenarios]:\r\n * (1) Provide source data directly:\r\n *     series: {\r\n *         encode: {...},\r\n *         dimensions: [...]\r\n *         seriesLayoutBy: 'row',\r\n *         data: [[...]]\r\n *     }\r\n * (2) Refer to datasetModel.\r\n *     series: [{\r\n *         encode: {...}\r\n *         // Ignore datasetIndex means `datasetIndex: 0`\r\n *         // and the dimensions defination in dataset is used\r\n *     }, {\r\n *         encode: {...},\r\n *         seriesLayoutBy: 'column',\r\n *         datasetIndex: 1\r\n *     }]\r\n *\r\n * Get data from series itself or datset.\r\n * @return {module:echarts/data/Source} source\r\n */\r\n\r\n\r\nfunction getSource(seriesModel) {\r\n  return inner(seriesModel).source;\r\n}\r\n/**\r\n * MUST be called before mergeOption of all series.\r\n * @param {module:echarts/model/Global} ecModel\r\n */\r\n\r\n\r\nfunction resetSourceDefaulter(ecModel) {\r\n  // `datasetMap` is used to make default encode.\r\n  inner(ecModel).datasetMap = createHashMap();\r\n}\r\n/**\r\n * [Caution]:\r\n * MUST be called after series option merged and\r\n * before \"series.getInitailData()\" called.\r\n *\r\n * [The rule of making default encode]:\r\n * Category axis (if exists) alway map to the first dimension.\r\n * Each other axis occupies a subsequent dimension.\r\n *\r\n * [Why make default encode]:\r\n * Simplify the typing of encode in option, avoiding the case like that:\r\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\r\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\r\n *\r\n * @param {module:echarts/model/Series} seriesModel\r\n */\r\n\r\n\r\nfunction prepareSource(seriesModel) {\r\n  var seriesOption = seriesModel.option;\r\n  var data = seriesOption.data;\r\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\r\n  var fromDataset = false;\r\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\r\n  var sourceHeader = seriesOption.sourceHeader;\r\n  var dimensionsDefine = seriesOption.dimensions;\r\n  var datasetModel = getDatasetModel(seriesModel);\r\n\r\n  if (datasetModel) {\r\n    var datasetOption = datasetModel.option;\r\n    data = datasetOption.source;\r\n    sourceFormat = inner(datasetModel).sourceFormat;\r\n    fromDataset = true; // These settings from series has higher priority.\r\n\r\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\r\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\r\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\r\n  }\r\n\r\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine);\r\n  inner(seriesModel).source = new Source({\r\n    data: data,\r\n    fromDataset: fromDataset,\r\n    seriesLayoutBy: seriesLayoutBy,\r\n    sourceFormat: sourceFormat,\r\n    dimensionsDefine: completeResult.dimensionsDefine,\r\n    startIndex: completeResult.startIndex,\r\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\r\n    // Note: dataset option does not have `encode`.\r\n    encodeDefine: seriesOption.encode\r\n  });\r\n} // return {startIndex, dimensionsDefine, dimensionsCount}\r\n\r\n\r\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\r\n  if (!data) {\r\n    return {\r\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\r\n    };\r\n  }\r\n\r\n  var dimensionsDetectCount;\r\n  var startIndex;\r\n\r\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\r\n    // Rule: Most of the first line are string: it is header.\r\n    // Caution: consider a line with 5 string and 1 number,\r\n    // it still can not be sure it is a head, because the\r\n    // 5 string may be 5 values of category columns.\r\n    if (sourceHeader === 'auto' || sourceHeader == null) {\r\n      arrayRowsTravelFirst(function (val) {\r\n        // '-' is regarded as null/undefined.\r\n        if (val != null && val !== '-') {\r\n          if (isString(val)) {\r\n            startIndex == null && (startIndex = 1);\r\n          } else {\r\n            startIndex = 0;\r\n          }\r\n        } // 10 is an experience number, avoid long loop.\r\n\r\n      }, seriesLayoutBy, data, 10);\r\n    } else {\r\n      startIndex = sourceHeader ? 1 : 0;\r\n    }\r\n\r\n    if (!dimensionsDefine && startIndex === 1) {\r\n      dimensionsDefine = [];\r\n      arrayRowsTravelFirst(function (val, index) {\r\n        dimensionsDefine[index] = val != null ? val : '';\r\n      }, seriesLayoutBy, data);\r\n    }\r\n\r\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\r\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\r\n    if (!dimensionsDefine) {\r\n      dimensionsDefine = objectRowsCollectDimensions(data);\r\n    }\r\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\r\n    if (!dimensionsDefine) {\r\n      dimensionsDefine = [];\r\n      each(data, function (colArr, key) {\r\n        dimensionsDefine.push(key);\r\n      });\r\n    }\r\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\r\n    var value0 = getDataItemValue(data[0]);\r\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\r\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\r\n\r\n  return {\r\n    startIndex: startIndex,\r\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\r\n    dimensionsDetectCount: dimensionsDetectCount\r\n  };\r\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\r\n// which is reasonable. But dimension name is duplicated.\r\n// Returns undefined or an array contains only object without null/undefiend or string.\r\n\r\n\r\nfunction normalizeDimensionsDefine(dimensionsDefine) {\r\n  if (!dimensionsDefine) {\r\n    // The meaning of null/undefined is different from empty array.\r\n    return;\r\n  }\r\n\r\n  var nameMap = createHashMap();\r\n  return map(dimensionsDefine, function (item, index) {\r\n    item = extend({}, isObject(item) ? item : {\r\n      name: item\r\n    }); // User can set null in dimensions.\r\n    // We dont auto specify name, othewise a given name may\r\n    // cause it be refered unexpectedly.\r\n\r\n    if (item.name == null) {\r\n      return item;\r\n    } // Also consider number form like 2012.\r\n\r\n\r\n    item.name += ''; // User may also specify displayName.\r\n    // displayName will always exists except user not\r\n    // specified or dim name is not specified or detected.\r\n    // (A auto generated dim name will not be used as\r\n    // displayName).\r\n\r\n    if (item.displayName == null) {\r\n      item.displayName = item.name;\r\n    }\r\n\r\n    var exist = nameMap.get(item.name);\r\n\r\n    if (!exist) {\r\n      nameMap.set(item.name, {\r\n        count: 1\r\n      });\r\n    } else {\r\n      item.name += '-' + exist.count++;\r\n    }\r\n\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\r\n  maxLoop == null && (maxLoop = Infinity);\r\n\r\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\r\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\r\n      cb(data[i] ? data[i][0] : null, i);\r\n    }\r\n  } else {\r\n    var value0 = data[0] || [];\r\n\r\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\r\n      cb(value0[i], i);\r\n    }\r\n  }\r\n}\r\n\r\nfunction objectRowsCollectDimensions(data) {\r\n  var firstIndex = 0;\r\n  var obj;\r\n\r\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\r\n\r\n\r\n  if (obj) {\r\n    var dimensions = [];\r\n    each(obj, function (value, key) {\r\n      dimensions.push(key);\r\n    });\r\n    return dimensions;\r\n  }\r\n}\r\n/**\r\n * [The strategy of the arrengment of data dimensions for dataset]:\r\n * \"value way\": all axes are non-category axes. So series one by one take\r\n *     several (the number is coordSysDims.length) dimensions from dataset.\r\n *     The result of data arrengment of data dimensions like:\r\n *     | ser0_x | ser0_y | ser1_x | ser1_y | ser2_x | ser2_y |\r\n * \"category way\": at least one axis is category axis. So the the first data\r\n *     dimension is always mapped to the first category axis and shared by\r\n *     all of the series. The other data dimensions are taken by series like\r\n *     \"value way\" does.\r\n *     The result of data arrengment of data dimensions like:\r\n *     | ser_shared_x | ser0_y | ser1_y | ser2_y |\r\n *\r\n * @param {Array.<Object|string>} coordDimensions [{name: <string>, type: <string>, dimsDef: <Array>}, ...]\r\n * @param {module:model/Series} seriesModel\r\n * @param {module:data/Source} source\r\n * @return {Object} encode Never be `null/undefined`.\r\n */\r\n\r\n\r\nfunction makeSeriesEncodeForAxisCoordSys(coordDimensions, seriesModel, source) {\r\n  var encode = {};\r\n  var datasetModel = getDatasetModel(seriesModel); // Currently only make default when using dataset, util more reqirements occur.\r\n\r\n  if (!datasetModel || !coordDimensions) {\r\n    return encode;\r\n  }\r\n\r\n  var encodeItemName = [];\r\n  var encodeSeriesName = [];\r\n  var ecModel = seriesModel.ecModel;\r\n  var datasetMap = inner(ecModel).datasetMap;\r\n  var key = datasetModel.uid + '_' + source.seriesLayoutBy;\r\n  var baseCategoryDimIndex;\r\n  var categoryWayValueDimStart;\r\n  coordDimensions = coordDimensions.slice();\r\n  each(coordDimensions, function (coordDimInfo, coordDimIdx) {\r\n    !isObject(coordDimInfo) && (coordDimensions[coordDimIdx] = {\r\n      name: coordDimInfo\r\n    });\r\n\r\n    if (coordDimInfo.type === 'ordinal' && baseCategoryDimIndex == null) {\r\n      baseCategoryDimIndex = coordDimIdx;\r\n      categoryWayValueDimStart = getDataDimCountOnCoordDim(coordDimensions[coordDimIdx]);\r\n    }\r\n\r\n    encode[coordDimInfo.name] = [];\r\n  });\r\n  var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\r\n    categoryWayDim: categoryWayValueDimStart,\r\n    valueWayDim: 0\r\n  }); // TODO\r\n  // Auto detect first time axis and do arrangement.\r\n\r\n  each(coordDimensions, function (coordDimInfo, coordDimIdx) {\r\n    var coordDimName = coordDimInfo.name;\r\n    var count = getDataDimCountOnCoordDim(coordDimInfo); // In value way.\r\n\r\n    if (baseCategoryDimIndex == null) {\r\n      var start = datasetRecord.valueWayDim;\r\n      pushDim(encode[coordDimName], start, count);\r\n      pushDim(encodeSeriesName, start, count);\r\n      datasetRecord.valueWayDim += count; // ??? TODO give a better default series name rule?\r\n      // especially when encode x y specified.\r\n      // consider: when mutiple series share one dimension\r\n      // category axis, series name should better use\r\n      // the other dimsion name. On the other hand, use\r\n      // both dimensions name.\r\n    } // In category way, the first category axis.\r\n    else if (baseCategoryDimIndex === coordDimIdx) {\r\n        pushDim(encode[coordDimName], 0, count);\r\n        pushDim(encodeItemName, 0, count);\r\n      } // In category way, the other axis.\r\n      else {\r\n          var start = datasetRecord.categoryWayDim;\r\n          pushDim(encode[coordDimName], start, count);\r\n          pushDim(encodeSeriesName, start, count);\r\n          datasetRecord.categoryWayDim += count;\r\n        }\r\n  });\r\n\r\n  function pushDim(dimIdxArr, idxFrom, idxCount) {\r\n    for (var i = 0; i < idxCount; i++) {\r\n      dimIdxArr.push(idxFrom + i);\r\n    }\r\n  }\r\n\r\n  function getDataDimCountOnCoordDim(coordDimInfo) {\r\n    var dimsDef = coordDimInfo.dimsDef;\r\n    return dimsDef ? dimsDef.length : 1;\r\n  }\r\n\r\n  encodeItemName.length && (encode.itemName = encodeItemName);\r\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\r\n  return encode;\r\n}\r\n/**\r\n * Work for data like [{name: ..., value: ...}, ...].\r\n *\r\n * @param {module:model/Series} seriesModel\r\n * @param {module:data/Source} source\r\n * @return {Object} encode Never be `null/undefined`.\r\n */\r\n\r\n\r\nfunction makeSeriesEncodeForNameBased(seriesModel, source, dimCount) {\r\n  var encode = {};\r\n  var datasetModel = getDatasetModel(seriesModel); // Currently only make default when using dataset, util more reqirements occur.\r\n\r\n  if (!datasetModel) {\r\n    return encode;\r\n  }\r\n\r\n  var sourceFormat = source.sourceFormat;\r\n  var dimensionsDefine = source.dimensionsDefine;\r\n  var potentialNameDimIndex;\r\n\r\n  if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\r\n    each(dimensionsDefine, function (dim, idx) {\r\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\r\n        potentialNameDimIndex = idx;\r\n      }\r\n    });\r\n  } // idxResult: {v, n}.\r\n\r\n\r\n  var idxResult = function () {\r\n    var idxRes0 = {};\r\n    var idxRes1 = {};\r\n    var guessRecords = []; // 5 is an experience value.\r\n\r\n    for (var i = 0, len = Math.min(5, dimCount); i < len; i++) {\r\n      var guessResult = doGuessOrdinal(source.data, sourceFormat, source.seriesLayoutBy, dimensionsDefine, source.startIndex, i);\r\n      guessRecords.push(guessResult);\r\n      var isPureNumber = guessResult === BE_ORDINAL.Not; // [Strategy of idxRes0]: find the first BE_ORDINAL.Not as the value dim,\r\n      // and then find a name dim with the priority:\r\n      // \"BE_ORDINAL.Might|BE_ORDINAL.Must\" > \"other dim\" > \"the value dim itself\".\r\n\r\n      if (isPureNumber && idxRes0.v == null && i !== potentialNameDimIndex) {\r\n        idxRes0.v = i;\r\n      }\r\n\r\n      if (idxRes0.n == null || idxRes0.n === idxRes0.v || !isPureNumber && guessRecords[idxRes0.n] === BE_ORDINAL.Not) {\r\n        idxRes0.n = i;\r\n      }\r\n\r\n      if (fulfilled(idxRes0) && guessRecords[idxRes0.n] !== BE_ORDINAL.Not) {\r\n        return idxRes0;\r\n      } // [Strategy of idxRes1]: if idxRes0 not satisfied (that is, no BE_ORDINAL.Not),\r\n      // find the first BE_ORDINAL.Might as the value dim,\r\n      // and then find a name dim with the priority:\r\n      // \"other dim\" > \"the value dim itself\".\r\n      // That is for backward compat: number-like (e.g., `'3'`, `'55'`) can be\r\n      // treated as number.\r\n\r\n\r\n      if (!isPureNumber) {\r\n        if (guessResult === BE_ORDINAL.Might && idxRes1.v == null && i !== potentialNameDimIndex) {\r\n          idxRes1.v = i;\r\n        }\r\n\r\n        if (idxRes1.n == null || idxRes1.n === idxRes1.v) {\r\n          idxRes1.n = i;\r\n        }\r\n      }\r\n    }\r\n\r\n    function fulfilled(idxResult) {\r\n      return idxResult.v != null && idxResult.n != null;\r\n    }\r\n\r\n    return fulfilled(idxRes0) ? idxRes0 : fulfilled(idxRes1) ? idxRes1 : null;\r\n  }();\r\n\r\n  if (idxResult) {\r\n    encode.value = idxResult.v; // `potentialNameDimIndex` has highest priority.\r\n\r\n    var nameDimIndex = potentialNameDimIndex != null ? potentialNameDimIndex : idxResult.n; // By default, label use itemName in charts.\r\n    // So we dont set encodeLabel here.\r\n\r\n    encode.itemName = [nameDimIndex];\r\n    encode.seriesName = [nameDimIndex];\r\n  }\r\n\r\n  return encode;\r\n}\r\n/**\r\n * If return null/undefined, indicate that should not use datasetModel.\r\n */\r\n\r\n\r\nfunction getDatasetModel(seriesModel) {\r\n  var option = seriesModel.option; // Caution: consider the scenario:\r\n  // A dataset is declared and a series is not expected to use the dataset,\r\n  // and at the beginning `setOption({series: { noData })` (just prepare other\r\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\r\n  // the user should set an empty array to avoid that dataset is used by default.\r\n\r\n  var thisData = option.data;\r\n\r\n  if (!thisData) {\r\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\r\n  }\r\n}\r\n/**\r\n * The rule should not be complex, otherwise user might not\r\n * be able to known where the data is wrong.\r\n * The code is ugly, but how to make it neat?\r\n *\r\n * @param {module:echars/data/Source} source\r\n * @param {number} dimIndex\r\n * @return {BE_ORDINAL} guess result.\r\n */\r\n\r\n\r\nfunction guessOrdinal(source, dimIndex) {\r\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\r\n} // dimIndex may be overflow source data.\r\n// return {BE_ORDINAL}\r\n\r\n\r\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\r\n  var result; // Experience value.\r\n\r\n  var maxLoop = 5;\r\n\r\n  if (isTypedArray(data)) {\r\n    return BE_ORDINAL.Not;\r\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\r\n  // always exists in source.\r\n\r\n\r\n  var dimName;\r\n  var dimType;\r\n\r\n  if (dimensionsDefine) {\r\n    var dimDefItem = dimensionsDefine[dimIndex];\r\n\r\n    if (isObject(dimDefItem)) {\r\n      dimName = dimDefItem.name;\r\n      dimType = dimDefItem.type;\r\n    } else if (isString(dimDefItem)) {\r\n      dimName = dimDefItem;\r\n    }\r\n  }\r\n\r\n  if (dimType != null) {\r\n    return dimType === 'ordinal' ? BE_ORDINAL.Must : BE_ORDINAL.Not;\r\n  }\r\n\r\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\r\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\r\n      var sample = data[dimIndex];\r\n\r\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\r\n        if ((result = detectValue(sample[startIndex + i])) != null) {\r\n          return result;\r\n        }\r\n      }\r\n    } else {\r\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\r\n        var row = data[startIndex + i];\r\n\r\n        if (row && (result = detectValue(row[dimIndex])) != null) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\r\n    if (!dimName) {\r\n      return BE_ORDINAL.Not;\r\n    }\r\n\r\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\r\n      var item = data[i];\r\n\r\n      if (item && (result = detectValue(item[dimName])) != null) {\r\n        return result;\r\n      }\r\n    }\r\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\r\n    if (!dimName) {\r\n      return BE_ORDINAL.Not;\r\n    }\r\n\r\n    var sample = data[dimName];\r\n\r\n    if (!sample || isTypedArray(sample)) {\r\n      return BE_ORDINAL.Not;\r\n    }\r\n\r\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\r\n      if ((result = detectValue(sample[i])) != null) {\r\n        return result;\r\n      }\r\n    }\r\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\r\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\r\n      var item = data[i];\r\n      var val = getDataItemValue(item);\r\n\r\n      if (!isArray(val)) {\r\n        return BE_ORDINAL.Not;\r\n      }\r\n\r\n      if ((result = detectValue(val[dimIndex])) != null) {\r\n        return result;\r\n      }\r\n    }\r\n  }\r\n\r\n  function detectValue(val) {\r\n    var beStr = isString(val); // Consider usage convenience, '1', '2' will be treated as \"number\".\r\n    // `isFinit('')` get `true`.\r\n\r\n    if (val != null && isFinite(val) && val !== '') {\r\n      return beStr ? BE_ORDINAL.Might : BE_ORDINAL.Not;\r\n    } else if (beStr && val !== '-') {\r\n      return BE_ORDINAL.Must;\r\n    }\r\n  }\r\n\r\n  return BE_ORDINAL.Not;\r\n}\r\n\r\nexports.BE_ORDINAL = BE_ORDINAL;\r\nexports.detectSourceFormat = detectSourceFormat;\r\nexports.getSource = getSource;\r\nexports.resetSourceDefaulter = resetSourceDefaulter;\r\nexports.prepareSource = prepareSource;\r\nexports.makeSeriesEncodeForAxisCoordSys = makeSeriesEncodeForAxisCoordSys;\r\nexports.makeSeriesEncodeForNameBased = makeSeriesEncodeForNameBased;\r\nexports.guessOrdinal = guessOrdinal;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Avoid typo.\r\nvar SOURCE_FORMAT_ORIGINAL = 'original';\r\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\r\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\r\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\r\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\r\n\r\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\r\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\r\nvar SERIES_LAYOUT_BY_ROW = 'row';\r\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\r\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\r\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\r\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\r\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\r\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\r\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\r\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"./config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrender = require(\"zrender/lib/zrender\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar colorTool = require(\"zrender/lib/tool/color\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar timsort = require(\"zrender/lib/core/timsort\");\r\n\r\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\r\n\r\nvar GlobalModel = require(\"./model/Global\");\r\n\r\nvar ExtensionAPI = require(\"./ExtensionAPI\");\r\n\r\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\r\n\r\nvar OptionManager = require(\"./model/OptionManager\");\r\n\r\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\r\n\r\nvar dataStack = require(\"./processor/dataStack\");\r\n\r\nvar ComponentModel = require(\"./model/Component\");\r\n\r\nvar SeriesModel = require(\"./model/Series\");\r\n\r\nvar ComponentView = require(\"./view/Component\");\r\n\r\nvar ChartView = require(\"./view/Chart\");\r\n\r\nvar graphic = require(\"./util/graphic\");\r\n\r\nvar modelUtil = require(\"./util/model\");\r\n\r\nvar _throttle = require(\"./util/throttle\");\r\n\r\nvar throttle = _throttle.throttle;\r\n\r\nvar seriesColor = require(\"./visual/seriesColor\");\r\n\r\nvar aria = require(\"./visual/aria\");\r\n\r\nvar loadingDefault = require(\"./loading/default\");\r\n\r\nvar Scheduler = require(\"./stream/Scheduler\");\r\n\r\nvar lightTheme = require(\"./theme/light\");\r\n\r\nvar darkTheme = require(\"./theme/dark\");\r\n\r\nrequire(\"./component/dataset\");\r\n\r\nvar mapDataStorage = require(\"./coord/geo/mapDataStorage\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar assert = zrUtil.assert;\r\nvar each = zrUtil.each;\r\nvar isFunction = zrUtil.isFunction;\r\nvar isObject = zrUtil.isObject;\r\nvar parseClassType = ComponentModel.parseClassType;\r\nvar version = '4.9.0';\r\nvar dependencies = {\r\n  zrender: '4.3.2'\r\n};\r\nvar TEST_FRAME_REMAIN_TIME = 1;\r\nvar PRIORITY_PROCESSOR_FILTER = 1000;\r\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800;\r\nvar PRIORITY_PROCESSOR_DATASTACK = 900;\r\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\r\nvar PRIORITY_VISUAL_LAYOUT = 1000;\r\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\r\nvar PRIORITY_VISUAL_GLOBAL = 2000;\r\nvar PRIORITY_VISUAL_CHART = 3000;\r\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 3500;\r\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\r\n// necessary?\r\n\r\nvar PRIORITY_VISUAL_BRUSH = 5000;\r\nvar PRIORITY = {\r\n  PROCESSOR: {\r\n    FILTER: PRIORITY_PROCESSOR_FILTER,\r\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\r\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\r\n  },\r\n  VISUAL: {\r\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\r\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\r\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\r\n    CHART: PRIORITY_VISUAL_CHART,\r\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\r\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\r\n    BRUSH: PRIORITY_VISUAL_BRUSH\r\n  }\r\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\r\n// where they must not be invoked nestedly, except the only case: invoke\r\n// dispatchAction with updateMethod \"none\" in main process.\r\n// This flag is used to carry out this rule.\r\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\r\n\r\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\r\nvar OPTION_UPDATED = '__optionUpdated';\r\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\r\n\r\nfunction createRegisterEventWithLowercaseName(method, ignoreDisposed) {\r\n  return function (eventName, handler, context) {\r\n    if (!ignoreDisposed && this._disposed) {\r\n      disposedWarning(this.id);\r\n      return;\r\n    } // Event name is all lowercase\r\n\r\n\r\n    eventName = eventName && eventName.toLowerCase();\r\n    Eventful.prototype[method].call(this, eventName, handler, context);\r\n  };\r\n}\r\n/**\r\n * @module echarts~MessageCenter\r\n */\r\n\r\n\r\nfunction MessageCenter() {\r\n  Eventful.call(this);\r\n}\r\n\r\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on', true);\r\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off', true);\r\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one', true);\r\nzrUtil.mixin(MessageCenter, Eventful);\r\n/**\r\n * @module echarts~ECharts\r\n */\r\n\r\nfunction ECharts(dom, theme, opts) {\r\n  opts = opts || {}; // Get theme by name\r\n\r\n  if (typeof theme === 'string') {\r\n    theme = themeStorage[theme];\r\n  }\r\n  /**\r\n   * @type {string}\r\n   */\r\n\r\n\r\n  this.id;\r\n  /**\r\n   * Group id\r\n   * @type {string}\r\n   */\r\n\r\n  this.group;\r\n  /**\r\n   * @type {HTMLElement}\r\n   * @private\r\n   */\r\n\r\n  this._dom = dom;\r\n  var defaultRenderer = 'canvas';\r\n\r\n  /**\r\n   * @type {module:zrender/ZRender}\r\n   * @private\r\n   */\r\n  var zr = this._zr = zrender.init(dom, {\r\n    renderer: opts.renderer || defaultRenderer,\r\n    devicePixelRatio: opts.devicePixelRatio,\r\n    width: opts.width,\r\n    height: opts.height\r\n  });\r\n  /**\r\n   * Expect 60 fps.\r\n   * @type {Function}\r\n   * @private\r\n   */\r\n\r\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\r\n  var theme = zrUtil.clone(theme);\r\n  theme && backwardCompat(theme, true);\r\n  /**\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n\r\n  this._theme = theme;\r\n  /**\r\n   * @type {Array.<module:echarts/view/Chart>}\r\n   * @private\r\n   */\r\n\r\n  this._chartsViews = [];\r\n  /**\r\n   * @type {Object.<string, module:echarts/view/Chart>}\r\n   * @private\r\n   */\r\n\r\n  this._chartsMap = {};\r\n  /**\r\n   * @type {Array.<module:echarts/view/Component>}\r\n   * @private\r\n   */\r\n\r\n  this._componentsViews = [];\r\n  /**\r\n   * @type {Object.<string, module:echarts/view/Component>}\r\n   * @private\r\n   */\r\n\r\n  this._componentsMap = {};\r\n  /**\r\n   * @type {module:echarts/CoordinateSystem}\r\n   * @private\r\n   */\r\n\r\n  this._coordSysMgr = new CoordinateSystemManager();\r\n  /**\r\n   * @type {module:echarts/ExtensionAPI}\r\n   * @private\r\n   */\r\n\r\n  var api = this._api = createExtensionAPI(this); // Sort on demand\r\n\r\n  function prioritySortFunc(a, b) {\r\n    return a.__prio - b.__prio;\r\n  }\r\n\r\n  timsort(visualFuncs, prioritySortFunc);\r\n  timsort(dataProcessorFuncs, prioritySortFunc);\r\n  /**\r\n   * @type {module:echarts/stream/Scheduler}\r\n   */\r\n\r\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\r\n  Eventful.call(this, this._ecEventProcessor = new EventProcessor());\r\n  /**\r\n   * @type {module:echarts~MessageCenter}\r\n   * @private\r\n   */\r\n\r\n  this._messageCenter = new MessageCenter(); // Init mouse events\r\n\r\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\r\n\r\n\r\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\r\n\r\n  this._pendingActions = [];\r\n  zr.animation.on('frame', this._onframe, this);\r\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\r\n\r\n  zrUtil.setAsPrimitive(this);\r\n}\r\n\r\nvar echartsProto = ECharts.prototype;\r\n\r\nechartsProto._onframe = function () {\r\n  if (this._disposed) {\r\n    return;\r\n  }\r\n\r\n  var scheduler = this._scheduler; // Lazy update\r\n\r\n  if (this[OPTION_UPDATED]) {\r\n    var silent = this[OPTION_UPDATED].silent;\r\n    this[IN_MAIN_PROCESS] = true;\r\n    prepare(this);\r\n    updateMethods.update.call(this);\r\n    this[IN_MAIN_PROCESS] = false;\r\n    this[OPTION_UPDATED] = false;\r\n    flushPendingActions.call(this, silent);\r\n    triggerUpdatedEvent.call(this, silent);\r\n  } // Avoid do both lazy update and progress in one frame.\r\n  else if (scheduler.unfinished) {\r\n      // Stream progress.\r\n      var remainTime = TEST_FRAME_REMAIN_TIME;\r\n      var ecModel = this._model;\r\n      var api = this._api;\r\n      scheduler.unfinished = false;\r\n\r\n      do {\r\n        var startTime = +new Date();\r\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\r\n\r\n        scheduler.performDataProcessorTasks(ecModel);\r\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\r\n        // each frame is not a good user experience. So we follow the rule that\r\n        // the extent of the coordinate system is determin in the first frame (the\r\n        // frame is executed immedietely after task reset.\r\n        // this._coordSysMgr.update(ecModel, api);\r\n        // console.log('--- ec frame visual ---', remainTime);\r\n\r\n        scheduler.performVisualTasks(ecModel);\r\n        renderSeries(this, this._model, api, 'remain');\r\n        remainTime -= +new Date() - startTime;\r\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\r\n\r\n\r\n      if (!scheduler.unfinished) {\r\n        this._zr.flush();\r\n      } // Else, zr flushing be ensue within the same frame,\r\n      // because zr flushing is after onframe event.\r\n\r\n    }\r\n};\r\n/**\r\n * @return {HTMLElement}\r\n */\r\n\r\n\r\nechartsProto.getDom = function () {\r\n  return this._dom;\r\n};\r\n/**\r\n * @return {module:zrender~ZRender}\r\n */\r\n\r\n\r\nechartsProto.getZr = function () {\r\n  return this._zr;\r\n};\r\n/**\r\n * Usage:\r\n * chart.setOption(option, notMerge, lazyUpdate);\r\n * chart.setOption(option, {\r\n *     notMerge: ...,\r\n *     lazyUpdate: ...,\r\n *     silent: ...\r\n * });\r\n *\r\n * @param {Object} option\r\n * @param {Object|boolean} [opts] opts or notMerge.\r\n * @param {boolean} [opts.notMerge=false]\r\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\r\n */\r\n\r\n\r\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  var silent;\r\n\r\n  if (isObject(notMerge)) {\r\n    lazyUpdate = notMerge.lazyUpdate;\r\n    silent = notMerge.silent;\r\n    notMerge = notMerge.notMerge;\r\n  }\r\n\r\n  this[IN_MAIN_PROCESS] = true;\r\n\r\n  if (!this._model || notMerge) {\r\n    var optionManager = new OptionManager(this._api);\r\n    var theme = this._theme;\r\n    var ecModel = this._model = new GlobalModel();\r\n    ecModel.scheduler = this._scheduler;\r\n    ecModel.init(null, null, theme, optionManager);\r\n  }\r\n\r\n  this._model.setOption(option, optionPreprocessorFuncs);\r\n\r\n  if (lazyUpdate) {\r\n    this[OPTION_UPDATED] = {\r\n      silent: silent\r\n    };\r\n    this[IN_MAIN_PROCESS] = false;\r\n  } else {\r\n    prepare(this);\r\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\r\n    // fetched after `setOption`.\r\n\r\n    this._zr.flush();\r\n\r\n    this[OPTION_UPDATED] = false;\r\n    this[IN_MAIN_PROCESS] = false;\r\n    flushPendingActions.call(this, silent);\r\n    triggerUpdatedEvent.call(this, silent);\r\n  }\r\n};\r\n/**\r\n * @DEPRECATED\r\n */\r\n\r\n\r\nechartsProto.setTheme = function () {\r\n  console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\r\n};\r\n/**\r\n * @return {module:echarts/model/Global}\r\n */\r\n\r\n\r\nechartsProto.getModel = function () {\r\n  return this._model;\r\n};\r\n/**\r\n * @return {Object}\r\n */\r\n\r\n\r\nechartsProto.getOption = function () {\r\n  return this._model && this._model.getOption();\r\n};\r\n/**\r\n * @return {number}\r\n */\r\n\r\n\r\nechartsProto.getWidth = function () {\r\n  return this._zr.getWidth();\r\n};\r\n/**\r\n * @return {number}\r\n */\r\n\r\n\r\nechartsProto.getHeight = function () {\r\n  return this._zr.getHeight();\r\n};\r\n/**\r\n * @return {number}\r\n */\r\n\r\n\r\nechartsProto.getDevicePixelRatio = function () {\r\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\r\n};\r\n/**\r\n * Get canvas which has all thing rendered\r\n * @param {Object} opts\r\n * @param {string} [opts.backgroundColor]\r\n * @return {string}\r\n */\r\n\r\n\r\nechartsProto.getRenderedCanvas = function (opts) {\r\n  if (!env.canvasSupported) {\r\n    return;\r\n  }\r\n\r\n  opts = opts || {};\r\n  opts.pixelRatio = opts.pixelRatio || 1;\r\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\r\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\r\n  // Stop animations\r\n  // Never works before in init animation, so remove it.\r\n  // zrUtil.each(list, function (el) {\r\n  //     el.stopAnimation(true);\r\n  // });\r\n\r\n  return zr.painter.getRenderedCanvas(opts);\r\n};\r\n/**\r\n * Get svg data url\r\n * @return {string}\r\n */\r\n\r\n\r\nechartsProto.getSvgDataURL = function () {\r\n  if (!env.svgSupported) {\r\n    return;\r\n  }\r\n\r\n  var zr = this._zr;\r\n  var list = zr.storage.getDisplayList(); // Stop animations\r\n\r\n  zrUtil.each(list, function (el) {\r\n    el.stopAnimation(true);\r\n  });\r\n  return zr.painter.toDataURL();\r\n};\r\n/**\r\n * @return {string}\r\n * @param {Object} opts\r\n * @param {string} [opts.type='png']\r\n * @param {string} [opts.pixelRatio=1]\r\n * @param {string} [opts.backgroundColor]\r\n * @param {string} [opts.excludeComponents]\r\n */\r\n\r\n\r\nechartsProto.getDataURL = function (opts) {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  opts = opts || {};\r\n  var excludeComponents = opts.excludeComponents;\r\n  var ecModel = this._model;\r\n  var excludesComponentViews = [];\r\n  var self = this;\r\n  each(excludeComponents, function (componentType) {\r\n    ecModel.eachComponent({\r\n      mainType: componentType\r\n    }, function (component) {\r\n      var view = self._componentsMap[component.__viewId];\r\n\r\n      if (!view.group.ignore) {\r\n        excludesComponentViews.push(view);\r\n        view.group.ignore = true;\r\n      }\r\n    });\r\n  });\r\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\r\n  each(excludesComponentViews, function (view) {\r\n    view.group.ignore = false;\r\n  });\r\n  return url;\r\n};\r\n/**\r\n * @return {string}\r\n * @param {Object} opts\r\n * @param {string} [opts.type='png']\r\n * @param {string} [opts.pixelRatio=1]\r\n * @param {string} [opts.backgroundColor]\r\n */\r\n\r\n\r\nechartsProto.getConnectedDataURL = function (opts) {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  if (!env.canvasSupported) {\r\n    return;\r\n  }\r\n\r\n  var isSvg = opts.type === 'svg';\r\n  var groupId = this.group;\r\n  var mathMin = Math.min;\r\n  var mathMax = Math.max;\r\n  var MAX_NUMBER = Infinity;\r\n\r\n  if (connectedGroups[groupId]) {\r\n    var left = MAX_NUMBER;\r\n    var top = MAX_NUMBER;\r\n    var right = -MAX_NUMBER;\r\n    var bottom = -MAX_NUMBER;\r\n    var canvasList = [];\r\n    var dpr = opts && opts.pixelRatio || 1;\r\n    zrUtil.each(instances, function (chart, id) {\r\n      if (chart.group === groupId) {\r\n        var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(zrUtil.clone(opts));\r\n        var boundingRect = chart.getDom().getBoundingClientRect();\r\n        left = mathMin(boundingRect.left, left);\r\n        top = mathMin(boundingRect.top, top);\r\n        right = mathMax(boundingRect.right, right);\r\n        bottom = mathMax(boundingRect.bottom, bottom);\r\n        canvasList.push({\r\n          dom: canvas,\r\n          left: boundingRect.left,\r\n          top: boundingRect.top\r\n        });\r\n      }\r\n    });\r\n    left *= dpr;\r\n    top *= dpr;\r\n    right *= dpr;\r\n    bottom *= dpr;\r\n    var width = right - left;\r\n    var height = bottom - top;\r\n    var targetCanvas = zrUtil.createCanvas();\r\n    var zr = zrender.init(targetCanvas, {\r\n      renderer: isSvg ? 'svg' : 'canvas'\r\n    });\r\n    zr.resize({\r\n      width: width,\r\n      height: height\r\n    });\r\n\r\n    if (isSvg) {\r\n      var content = '';\r\n      each(canvasList, function (item) {\r\n        var x = item.left - left;\r\n        var y = item.top - top;\r\n        content += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\r\n      });\r\n      zr.painter.getSvgRoot().innerHTML = content;\r\n\r\n      if (opts.connectedBackgroundColor) {\r\n        zr.painter.setBackgroundColor(opts.connectedBackgroundColor);\r\n      }\r\n\r\n      zr.refreshImmediately();\r\n      return zr.painter.toDataURL();\r\n    } else {\r\n      // Background between the charts\r\n      if (opts.connectedBackgroundColor) {\r\n        zr.add(new graphic.Rect({\r\n          shape: {\r\n            x: 0,\r\n            y: 0,\r\n            width: width,\r\n            height: height\r\n          },\r\n          style: {\r\n            fill: opts.connectedBackgroundColor\r\n          }\r\n        }));\r\n      }\r\n\r\n      each(canvasList, function (item) {\r\n        var img = new graphic.Image({\r\n          style: {\r\n            x: item.left * dpr - left,\r\n            y: item.top * dpr - top,\r\n            image: item.dom\r\n          }\r\n        });\r\n        zr.add(img);\r\n      });\r\n      zr.refreshImmediately();\r\n      return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\r\n    }\r\n  } else {\r\n    return this.getDataURL(opts);\r\n  }\r\n};\r\n/**\r\n * Convert from logical coordinate system to pixel coordinate system.\r\n * See CoordinateSystem#convertToPixel.\r\n * @param {string|Object} finder\r\n *        If string, e.g., 'geo', means {geoIndex: 0}.\r\n *        If Object, could contain some of these properties below:\r\n *        {\r\n *            seriesIndex / seriesId / seriesName,\r\n *            geoIndex / geoId, geoName,\r\n *            bmapIndex / bmapId / bmapName,\r\n *            xAxisIndex / xAxisId / xAxisName,\r\n *            yAxisIndex / yAxisId / yAxisName,\r\n *            gridIndex / gridId / gridName,\r\n *            ... (can be extended)\r\n *        }\r\n * @param {Array|number} value\r\n * @return {Array|number} result\r\n */\r\n\r\n\r\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\r\n/**\r\n * Convert from pixel coordinate system to logical coordinate system.\r\n * See CoordinateSystem#convertFromPixel.\r\n * @param {string|Object} finder\r\n *        If string, e.g., 'geo', means {geoIndex: 0}.\r\n *        If Object, could contain some of these properties below:\r\n *        {\r\n *            seriesIndex / seriesId / seriesName,\r\n *            geoIndex / geoId / geoName,\r\n *            bmapIndex / bmapId / bmapName,\r\n *            xAxisIndex / xAxisId / xAxisName,\r\n *            yAxisIndex / yAxisId / yAxisName\r\n *            gridIndex / gridId / gridName,\r\n *            ... (can be extended)\r\n *        }\r\n * @param {Array|number} value\r\n * @return {Array|number} result\r\n */\r\n\r\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\r\n\r\nfunction doConvertPixel(methodName, finder, value) {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  var ecModel = this._model;\r\n\r\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\r\n\r\n  var result;\r\n  finder = modelUtil.parseFinder(ecModel, finder);\r\n\r\n  for (var i = 0; i < coordSysList.length; i++) {\r\n    var coordSys = coordSysList[i];\r\n\r\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\r\n      return result;\r\n    }\r\n  }\r\n}\r\n/**\r\n * Is the specified coordinate systems or components contain the given pixel point.\r\n * @param {string|Object} finder\r\n *        If string, e.g., 'geo', means {geoIndex: 0}.\r\n *        If Object, could contain some of these properties below:\r\n *        {\r\n *            seriesIndex / seriesId / seriesName,\r\n *            geoIndex / geoId / geoName,\r\n *            bmapIndex / bmapId / bmapName,\r\n *            xAxisIndex / xAxisId / xAxisName,\r\n *            yAxisIndex / yAxisId / yAxisName,\r\n *            gridIndex / gridId / gridName,\r\n *            ... (can be extended)\r\n *        }\r\n * @param {Array|number} value\r\n * @return {boolean} result\r\n */\r\n\r\n\r\nechartsProto.containPixel = function (finder, value) {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  var ecModel = this._model;\r\n  var result;\r\n  finder = modelUtil.parseFinder(ecModel, finder);\r\n  zrUtil.each(finder, function (models, key) {\r\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\r\n      var coordSys = model.coordinateSystem;\r\n\r\n      if (coordSys && coordSys.containPoint) {\r\n        result |= !!coordSys.containPoint(value);\r\n      } else if (key === 'seriesModels') {\r\n        var view = this._chartsMap[model.__viewId];\r\n\r\n        if (view && view.containPoint) {\r\n          result |= view.containPoint(value, model);\r\n        } else {}\r\n      } else {}\r\n    }, this);\r\n  }, this);\r\n  return !!result;\r\n};\r\n/**\r\n * Get visual from series or data.\r\n * @param {string|Object} finder\r\n *        If string, e.g., 'series', means {seriesIndex: 0}.\r\n *        If Object, could contain some of these properties below:\r\n *        {\r\n *            seriesIndex / seriesId / seriesName,\r\n *            dataIndex / dataIndexInside\r\n *        }\r\n *        If dataIndex is not specified, series visual will be fetched,\r\n *        but not data item visual.\r\n *        If all of seriesIndex, seriesId, seriesName are not specified,\r\n *        visual will be fetched from first series.\r\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\r\n */\r\n\r\n\r\nechartsProto.getVisual = function (finder, visualType) {\r\n  var ecModel = this._model;\r\n  finder = modelUtil.parseFinder(ecModel, finder, {\r\n    defaultMainType: 'series'\r\n  });\r\n  var seriesModel = finder.seriesModel;\r\n  var data = seriesModel.getData();\r\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\r\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\r\n};\r\n/**\r\n * Get view of corresponding component model\r\n * @param  {module:echarts/model/Component} componentModel\r\n * @return {module:echarts/view/Component}\r\n */\r\n\r\n\r\nechartsProto.getViewOfComponentModel = function (componentModel) {\r\n  return this._componentsMap[componentModel.__viewId];\r\n};\r\n/**\r\n * Get view of corresponding series model\r\n * @param  {module:echarts/model/Series} seriesModel\r\n * @return {module:echarts/view/Chart}\r\n */\r\n\r\n\r\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\r\n  return this._chartsMap[seriesModel.__viewId];\r\n};\r\n\r\nvar updateMethods = {\r\n  prepareAndUpdate: function (payload) {\r\n    prepare(this);\r\n    updateMethods.update.call(this, payload);\r\n  },\r\n\r\n  /**\r\n   * @param {Object} payload\r\n   * @private\r\n   */\r\n  update: function (payload) {\r\n    // console.profile && console.profile('update');\r\n    var ecModel = this._model;\r\n    var api = this._api;\r\n    var zr = this._zr;\r\n    var coordSysMgr = this._coordSysMgr;\r\n    var scheduler = this._scheduler; // update before setOption\r\n\r\n    if (!ecModel) {\r\n      return;\r\n    }\r\n\r\n    scheduler.restoreData(ecModel, payload);\r\n    scheduler.performSeriesTasks(ecModel); // TODO\r\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\r\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\r\n    // Create new coordinate system each update\r\n    // In LineView may save the old coordinate system and use it to get the orignal point\r\n\r\n    coordSysMgr.create(ecModel, api);\r\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\r\n    // stream modes after data processing, where the filtered data is used to\r\n    // deteming whether use progressive rendering.\r\n\r\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\r\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\r\n    // the drawback is the full coord info can not be fetched. Fortunately this full\r\n    // coord is not requied in stream mode updater currently.\r\n\r\n    coordSysMgr.update(ecModel, api);\r\n    clearColorPalette(ecModel);\r\n    scheduler.performVisualTasks(ecModel, payload);\r\n    render(this, ecModel, api, payload); // Set background\r\n\r\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\r\n\r\n    if (!env.canvasSupported) {\r\n      var colorArr = colorTool.parse(backgroundColor);\r\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\r\n\r\n      if (colorArr[3] === 0) {\r\n        backgroundColor = 'transparent';\r\n      }\r\n    } else {\r\n      zr.setBackgroundColor(backgroundColor);\r\n    }\r\n\r\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\r\n  },\r\n\r\n  /**\r\n   * @param {Object} payload\r\n   * @private\r\n   */\r\n  updateTransform: function (payload) {\r\n    var ecModel = this._model;\r\n    var ecIns = this;\r\n    var api = this._api; // update before setOption\r\n\r\n    if (!ecModel) {\r\n      return;\r\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\r\n\r\n\r\n    var componentDirtyList = [];\r\n    ecModel.eachComponent(function (componentType, componentModel) {\r\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\r\n\r\n      if (componentView && componentView.__alive) {\r\n        if (componentView.updateTransform) {\r\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\r\n          result && result.update && componentDirtyList.push(componentView);\r\n        } else {\r\n          componentDirtyList.push(componentView);\r\n        }\r\n      }\r\n    });\r\n    var seriesDirtyMap = zrUtil.createHashMap();\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\r\n\r\n      if (chartView.updateTransform) {\r\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\r\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\r\n      } else {\r\n        seriesDirtyMap.set(seriesModel.uid, 1);\r\n      }\r\n    });\r\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\r\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\r\n\r\n    this._scheduler.performVisualTasks(ecModel, payload, {\r\n      setDirty: true,\r\n      dirtyMap: seriesDirtyMap\r\n    }); // Currently, not call render of components. Geo render cost a lot.\r\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\r\n\r\n\r\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\r\n    performPostUpdateFuncs(ecModel, this._api);\r\n  },\r\n\r\n  /**\r\n   * @param {Object} payload\r\n   * @private\r\n   */\r\n  updateView: function (payload) {\r\n    var ecModel = this._model; // update before setOption\r\n\r\n    if (!ecModel) {\r\n      return;\r\n    }\r\n\r\n    ChartView.markUpdateMethod(payload, 'updateView');\r\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\r\n\r\n    this._scheduler.performVisualTasks(ecModel, payload, {\r\n      setDirty: true\r\n    });\r\n\r\n    render(this, this._model, this._api, payload);\r\n    performPostUpdateFuncs(ecModel, this._api);\r\n  },\r\n\r\n  /**\r\n   * @param {Object} payload\r\n   * @private\r\n   */\r\n  updateVisual: function (payload) {\r\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\r\n    // // update before setOption\r\n    // if (!ecModel) {\r\n    //     return;\r\n    // }\r\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\r\n    // clearColorPalette(ecModel);\r\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\r\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\r\n    // render(this, this._model, this._api, payload);\r\n    // performPostUpdateFuncs(ecModel, this._api);\r\n  },\r\n\r\n  /**\r\n   * @param {Object} payload\r\n   * @private\r\n   */\r\n  updateLayout: function (payload) {\r\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\r\n    // // update before setOption\r\n    // if (!ecModel) {\r\n    //     return;\r\n    // }\r\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\r\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\r\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\r\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\r\n    // render(this, this._model, this._api, payload);\r\n    // performPostUpdateFuncs(ecModel, this._api);\r\n  }\r\n};\r\n\r\nfunction prepare(ecIns) {\r\n  var ecModel = ecIns._model;\r\n  var scheduler = ecIns._scheduler;\r\n  scheduler.restorePipelines(ecModel);\r\n  scheduler.prepareStageTasks();\r\n  prepareView(ecIns, 'component', ecModel, scheduler);\r\n  prepareView(ecIns, 'chart', ecModel, scheduler);\r\n  scheduler.plan();\r\n}\r\n/**\r\n * @private\r\n */\r\n\r\n\r\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\r\n  var ecModel = ecIns._model; // broadcast\r\n\r\n  if (!mainType) {\r\n    // FIXME\r\n    // Chart will not be update directly here, except set dirty.\r\n    // But there is no such scenario now.\r\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\r\n    return;\r\n  }\r\n\r\n  var query = {};\r\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\r\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\r\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\r\n  var condition = {\r\n    mainType: mainType,\r\n    query: query\r\n  };\r\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\r\n\r\n  var excludeSeriesId = payload.excludeSeriesId;\r\n\r\n  if (excludeSeriesId != null) {\r\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\r\n  } // If dispatchAction before setOption, do nothing.\r\n\r\n\r\n  ecModel && ecModel.eachComponent(condition, function (model) {\r\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\r\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\r\n    }\r\n  }, ecIns);\r\n\r\n  function callView(view) {\r\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\r\n  }\r\n}\r\n/**\r\n * Resize the chart\r\n * @param {Object} opts\r\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\r\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\r\n * @param {boolean} [opts.silent=false]\r\n */\r\n\r\n\r\nechartsProto.resize = function (opts) {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  this._zr.resize(opts);\r\n\r\n  var ecModel = this._model; // Resize loading effect\r\n\r\n  this._loadingFX && this._loadingFX.resize();\r\n\r\n  if (!ecModel) {\r\n    return;\r\n  }\r\n\r\n  var optionChanged = ecModel.resetOption('media');\r\n  var silent = opts && opts.silent;\r\n  this[IN_MAIN_PROCESS] = true;\r\n  optionChanged && prepare(this);\r\n  updateMethods.update.call(this);\r\n  this[IN_MAIN_PROCESS] = false;\r\n  flushPendingActions.call(this, silent);\r\n  triggerUpdatedEvent.call(this, silent);\r\n};\r\n\r\nfunction updateStreamModes(ecIns, ecModel) {\r\n  var chartsMap = ecIns._chartsMap;\r\n  var scheduler = ecIns._scheduler;\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\r\n  });\r\n}\r\n/**\r\n * Show loading effect\r\n * @param  {string} [name='default']\r\n * @param  {Object} [cfg]\r\n */\r\n\r\n\r\nechartsProto.showLoading = function (name, cfg) {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  if (isObject(name)) {\r\n    cfg = name;\r\n    name = '';\r\n  }\r\n\r\n  name = name || 'default';\r\n  this.hideLoading();\r\n\r\n  if (!loadingEffects[name]) {\r\n    return;\r\n  }\r\n\r\n  var el = loadingEffects[name](this._api, cfg);\r\n  var zr = this._zr;\r\n  this._loadingFX = el;\r\n  zr.add(el);\r\n};\r\n/**\r\n * Hide loading effect\r\n */\r\n\r\n\r\nechartsProto.hideLoading = function () {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  this._loadingFX && this._zr.remove(this._loadingFX);\r\n  this._loadingFX = null;\r\n};\r\n/**\r\n * @param {Object} eventObj\r\n * @return {Object}\r\n */\r\n\r\n\r\nechartsProto.makeActionFromEvent = function (eventObj) {\r\n  var payload = zrUtil.extend({}, eventObj);\r\n  payload.type = eventActionMap[eventObj.type];\r\n  return payload;\r\n};\r\n/**\r\n * @pubilc\r\n * @param {Object} payload\r\n * @param {string} [payload.type] Action type\r\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\r\n * @param {boolean} [opt.silent=false] Whether trigger events.\r\n * @param {boolean} [opt.flush=undefined]\r\n *                  true: Flush immediately, and then pixel in canvas can be fetched\r\n *                      immediately. Caution: it might affect performance.\r\n *                  false: Not flush.\r\n *                  undefined: Auto decide whether perform flush.\r\n */\r\n\r\n\r\nechartsProto.dispatchAction = function (payload, opt) {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  if (!isObject(opt)) {\r\n    opt = {\r\n      silent: !!opt\r\n    };\r\n  }\r\n\r\n  if (!actions[payload.type]) {\r\n    return;\r\n  } // Avoid dispatch action before setOption. Especially in `connect`.\r\n\r\n\r\n  if (!this._model) {\r\n    return;\r\n  } // May dispatchAction in rendering procedure\r\n\r\n\r\n  if (this[IN_MAIN_PROCESS]) {\r\n    this._pendingActions.push(payload);\r\n\r\n    return;\r\n  }\r\n\r\n  doDispatchAction.call(this, payload, opt.silent);\r\n\r\n  if (opt.flush) {\r\n    this._zr.flush(true);\r\n  } else if (opt.flush !== false && env.browser.weChat) {\r\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\r\n    // hang when sliding page (on touch event), which cause that zr does not\r\n    // refresh util user interaction finished, which is not expected.\r\n    // But `dispatchAction` may be called too frequently when pan on touch\r\n    // screen, which impacts performance if do not throttle them.\r\n    this._throttledZrFlush();\r\n  }\r\n\r\n  flushPendingActions.call(this, opt.silent);\r\n  triggerUpdatedEvent.call(this, opt.silent);\r\n};\r\n\r\nfunction doDispatchAction(payload, silent) {\r\n  var payloadType = payload.type;\r\n  var escapeConnect = payload.escapeConnect;\r\n  var actionWrap = actions[payloadType];\r\n  var actionInfo = actionWrap.actionInfo;\r\n  var cptType = (actionInfo.update || 'update').split(':');\r\n  var updateMethod = cptType.pop();\r\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\r\n  this[IN_MAIN_PROCESS] = true;\r\n  var payloads = [payload];\r\n  var batched = false; // Batch action\r\n\r\n  if (payload.batch) {\r\n    batched = true;\r\n    payloads = zrUtil.map(payload.batch, function (item) {\r\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\r\n      item.batch = null;\r\n      return item;\r\n    });\r\n  }\r\n\r\n  var eventObjBatch = [];\r\n  var eventObj;\r\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\r\n  each(payloads, function (batchItem) {\r\n    // Action can specify the event by return it.\r\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\r\n\r\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\r\n\r\n    eventObj.type = actionInfo.event || eventObj.type;\r\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\r\n\r\n    if (isHighDown) {\r\n      // method, payload, mainType, subType\r\n      updateDirectly(this, updateMethod, batchItem, 'series');\r\n    } else if (cptType) {\r\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\r\n    }\r\n  }, this);\r\n\r\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\r\n    // Still dirty\r\n    if (this[OPTION_UPDATED]) {\r\n      // FIXME Pass payload ?\r\n      prepare(this);\r\n      updateMethods.update.call(this, payload);\r\n      this[OPTION_UPDATED] = false;\r\n    } else {\r\n      updateMethods[updateMethod].call(this, payload);\r\n    }\r\n  } // Follow the rule of action batch\r\n\r\n\r\n  if (batched) {\r\n    eventObj = {\r\n      type: actionInfo.event || payloadType,\r\n      escapeConnect: escapeConnect,\r\n      batch: eventObjBatch\r\n    };\r\n  } else {\r\n    eventObj = eventObjBatch[0];\r\n  }\r\n\r\n  this[IN_MAIN_PROCESS] = false;\r\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\r\n}\r\n\r\nfunction flushPendingActions(silent) {\r\n  var pendingActions = this._pendingActions;\r\n\r\n  while (pendingActions.length) {\r\n    var payload = pendingActions.shift();\r\n    doDispatchAction.call(this, payload, silent);\r\n  }\r\n}\r\n\r\nfunction triggerUpdatedEvent(silent) {\r\n  !silent && this.trigger('updated');\r\n}\r\n/**\r\n * Event `rendered` is triggered when zr\r\n * rendered. It is useful for realtime\r\n * snapshot (reflect animation).\r\n *\r\n * Event `finished` is triggered when:\r\n * (1) zrender rendering finished.\r\n * (2) initial animation finished.\r\n * (3) progressive rendering finished.\r\n * (4) no pending action.\r\n * (5) no delayed setOption needs to be processed.\r\n */\r\n\r\n\r\nfunction bindRenderedEvent(zr, ecIns) {\r\n  zr.on('rendered', function () {\r\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\r\n    // so it should only be triggered when rendering indeed happend\r\n    // in zrender. (Consider the case that dipatchAction is keep\r\n    // triggering when mouse move).\r\n\r\n    if ( // Although zr is dirty if initial animation is not finished\r\n    // and this checking is called on frame, we also check\r\n    // animation finished for robustness.\r\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\r\n      ecIns.trigger('finished');\r\n    }\r\n  });\r\n}\r\n/**\r\n * @param {Object} params\r\n * @param {number} params.seriesIndex\r\n * @param {Array|TypedArray} params.data\r\n */\r\n\r\n\r\nechartsProto.appendData = function (params) {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  var seriesIndex = params.seriesIndex;\r\n  var ecModel = this.getModel();\r\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\r\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\r\n  // system, util some scenario require that. In the expected usage of\r\n  // `appendData`, the initial extent of coordinate system should better\r\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\r\n  // the extent changed while `appendData`, the location of the painted\r\n  // graphic elements have to be changed, which make the usage of\r\n  // `appendData` meaningless.\r\n\r\n  this._scheduler.unfinished = true;\r\n};\r\n/**\r\n * Register event\r\n * @method\r\n */\r\n\r\n\r\nechartsProto.on = createRegisterEventWithLowercaseName('on', false);\r\nechartsProto.off = createRegisterEventWithLowercaseName('off', false);\r\nechartsProto.one = createRegisterEventWithLowercaseName('one', false);\r\n/**\r\n * Prepare view instances of charts and components\r\n * @param  {module:echarts/model/Global} ecModel\r\n * @private\r\n */\r\n\r\nfunction prepareView(ecIns, type, ecModel, scheduler) {\r\n  var isComponent = type === 'component';\r\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\r\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\r\n  var zr = ecIns._zr;\r\n  var api = ecIns._api;\r\n\r\n  for (var i = 0; i < viewList.length; i++) {\r\n    viewList[i].__alive = false;\r\n  }\r\n\r\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\r\n    componentType !== 'series' && doPrepare(model);\r\n  }) : ecModel.eachSeries(doPrepare);\r\n\r\n  function doPrepare(model) {\r\n    // Consider: id same and type changed.\r\n    var viewId = '_ec_' + model.id + '_' + model.type;\r\n    var view = viewMap[viewId];\r\n\r\n    if (!view) {\r\n      var classType = parseClassType(model.type);\r\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\r\n      view = new Clazz();\r\n      view.init(ecModel, api);\r\n      viewMap[viewId] = view;\r\n      viewList.push(view);\r\n      zr.add(view.group);\r\n    }\r\n\r\n    model.__viewId = view.__id = viewId;\r\n    view.__alive = true;\r\n    view.__model = model;\r\n    view.group.__ecComponentInfo = {\r\n      mainType: model.mainType,\r\n      index: model.componentIndex\r\n    };\r\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\r\n  }\r\n\r\n  for (var i = 0; i < viewList.length;) {\r\n    var view = viewList[i];\r\n\r\n    if (!view.__alive) {\r\n      !isComponent && view.renderTask.dispose();\r\n      zr.remove(view.group);\r\n      view.dispose(ecModel, api);\r\n      viewList.splice(i, 1);\r\n      delete viewMap[view.__id];\r\n      view.__id = view.group.__ecComponentInfo = null;\r\n    } else {\r\n      i++;\r\n    }\r\n  }\r\n} // /**\r\n//  * Encode visual infomation from data after data processing\r\n//  *\r\n//  * @param {module:echarts/model/Global} ecModel\r\n//  * @param {object} layout\r\n//  * @param {boolean} [layoutFilter] `true`: only layout,\r\n//  *                                 `false`: only not layout,\r\n//  *                                 `null`/`undefined`: all.\r\n//  * @param {string} taskBaseTag\r\n//  * @private\r\n//  */\r\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\r\n//     each(visualFuncs, function (visual, index) {\r\n//         var isLayout = visual.isLayout;\r\n//         if (layoutFilter == null\r\n//             || (layoutFilter === false && !isLayout)\r\n//             || (layoutFilter === true && isLayout)\r\n//         ) {\r\n//             visual.func(ecModel, api, payload);\r\n//         }\r\n//     });\r\n// }\r\n\r\n\r\nfunction clearColorPalette(ecModel) {\r\n  ecModel.clearColorPalette();\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    seriesModel.clearColorPalette();\r\n  });\r\n}\r\n\r\nfunction render(ecIns, ecModel, api, payload) {\r\n  renderComponents(ecIns, ecModel, api, payload);\r\n  each(ecIns._chartsViews, function (chart) {\r\n    chart.__alive = false;\r\n  });\r\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\r\n\r\n  each(ecIns._chartsViews, function (chart) {\r\n    if (!chart.__alive) {\r\n      chart.remove(ecModel, api);\r\n    }\r\n  });\r\n}\r\n\r\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\r\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\r\n    var componentModel = componentView.__model;\r\n    componentView.render(componentModel, ecModel, api, payload);\r\n    updateZ(componentModel, componentView);\r\n  });\r\n}\r\n/**\r\n * Render each chart and component\r\n * @private\r\n */\r\n\r\n\r\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\r\n  // Render all charts\r\n  var scheduler = ecIns._scheduler;\r\n  var unfinished;\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\r\n    chartView.__alive = true;\r\n    var renderTask = chartView.renderTask;\r\n    scheduler.updatePayload(renderTask, payload);\r\n\r\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\r\n      renderTask.dirty();\r\n    }\r\n\r\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\r\n    chartView.group.silent = !!seriesModel.get('silent');\r\n    updateZ(seriesModel, chartView);\r\n    updateBlend(seriesModel, chartView);\r\n  });\r\n  scheduler.unfinished |= unfinished; // If use hover layer\r\n\r\n  updateHoverLayerStatus(ecIns, ecModel); // Add aria\r\n\r\n  aria(ecIns._zr.dom, ecModel);\r\n}\r\n\r\nfunction performPostUpdateFuncs(ecModel, api) {\r\n  each(postUpdateFuncs, function (func) {\r\n    func(ecModel, api);\r\n  });\r\n}\r\n\r\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\r\n/**\r\n * @private\r\n */\r\n\r\nechartsProto._initEvents = function () {\r\n  each(MOUSE_EVENT_NAMES, function (eveName) {\r\n    var handler = function (e) {\r\n      var ecModel = this.getModel();\r\n      var el = e.target;\r\n      var params;\r\n      var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\r\n\r\n      if (isGlobalOut) {\r\n        params = {};\r\n      } else if (el && el.dataIndex != null) {\r\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\r\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType, el) || {};\r\n      } // If element has custom eventData of components\r\n      else if (el && el.eventData) {\r\n          params = zrUtil.extend({}, el.eventData);\r\n        } // Contract: if params prepared in mouse event,\r\n      // these properties must be specified:\r\n      // {\r\n      //    componentType: string (component main type)\r\n      //    componentIndex: number\r\n      // }\r\n      // Otherwise event query can not work.\r\n\r\n\r\n      if (params) {\r\n        var componentType = params.componentType;\r\n        var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\r\n        // markLine/markPoint/markArea, the componentType is\r\n        // 'markLine'/'markPoint'/'markArea', but we should better\r\n        // enable them to be queried by seriesIndex, since their\r\n        // option is set in each series.\r\n\r\n        if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\r\n          componentType = 'series';\r\n          componentIndex = params.seriesIndex;\r\n        }\r\n\r\n        var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\r\n        var view = model && this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\r\n        params.event = e;\r\n        params.type = eveName;\r\n        this._ecEventProcessor.eventInfo = {\r\n          targetEl: el,\r\n          packedEvent: params,\r\n          model: model,\r\n          view: view\r\n        };\r\n        this.trigger(eveName, params);\r\n      }\r\n    }; // Consider that some component (like tooltip, brush, ...)\r\n    // register zr event handler, but user event handler might\r\n    // do anything, such as call `setOption` or `dispatchAction`,\r\n    // which probably update any of the content and probably\r\n    // cause problem if it is called previous other inner handlers.\r\n\r\n\r\n    handler.zrEventfulCallAtLast = true;\r\n\r\n    this._zr.on(eveName, handler, this);\r\n  }, this);\r\n  each(eventActionMap, function (actionType, eventType) {\r\n    this._messageCenter.on(eventType, function (event) {\r\n      this.trigger(eventType, event);\r\n    }, this);\r\n  }, this);\r\n};\r\n/**\r\n * @return {boolean}\r\n */\r\n\r\n\r\nechartsProto.isDisposed = function () {\r\n  return this._disposed;\r\n};\r\n/**\r\n * Clear\r\n */\r\n\r\n\r\nechartsProto.clear = function () {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  this.setOption({\r\n    series: []\r\n  }, true);\r\n};\r\n/**\r\n * Dispose instance\r\n */\r\n\r\n\r\nechartsProto.dispose = function () {\r\n  if (this._disposed) {\r\n    disposedWarning(this.id);\r\n    return;\r\n  }\r\n\r\n  this._disposed = true;\r\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\r\n  var api = this._api;\r\n  var ecModel = this._model;\r\n  each(this._componentsViews, function (component) {\r\n    component.dispose(ecModel, api);\r\n  });\r\n  each(this._chartsViews, function (chart) {\r\n    chart.dispose(ecModel, api);\r\n  }); // Dispose after all views disposed\r\n\r\n  this._zr.dispose();\r\n\r\n  delete instances[this.id];\r\n};\r\n\r\nzrUtil.mixin(ECharts, Eventful);\r\n\r\nfunction disposedWarning(id) {}\r\n\r\nfunction updateHoverLayerStatus(ecIns, ecModel) {\r\n  var zr = ecIns._zr;\r\n  var storage = zr.storage;\r\n  var elCount = 0;\r\n  storage.traverse(function (el) {\r\n    elCount++;\r\n  });\r\n\r\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (seriesModel.preventUsingHoverLayer) {\r\n        return;\r\n      }\r\n\r\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\r\n\r\n      if (chartView.__alive) {\r\n        chartView.group.traverse(function (el) {\r\n          // Don't switch back.\r\n          el.useHoverLayer = true;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n/**\r\n * Update chart progressive and blend.\r\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\r\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\r\n */\r\n\r\n\r\nfunction updateBlend(seriesModel, chartView) {\r\n  var blendMode = seriesModel.get('blendMode') || null;\r\n  chartView.group.traverse(function (el) {\r\n    // FIXME marker and other components\r\n    if (!el.isGroup) {\r\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\r\n      if (el.style.blend !== blendMode) {\r\n        el.setStyle('blend', blendMode);\r\n      }\r\n    }\r\n\r\n    if (el.eachPendingDisplayable) {\r\n      el.eachPendingDisplayable(function (displayable) {\r\n        displayable.setStyle('blend', blendMode);\r\n      });\r\n    }\r\n  });\r\n}\r\n/**\r\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\r\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\r\n */\r\n\r\n\r\nfunction updateZ(model, view) {\r\n  var z = model.get('z');\r\n  var zlevel = model.get('zlevel'); // Set z and zlevel\r\n\r\n  view.group.traverse(function (el) {\r\n    if (el.type !== 'group') {\r\n      z != null && (el.z = z);\r\n      zlevel != null && (el.zlevel = zlevel);\r\n    }\r\n  });\r\n}\r\n\r\nfunction createExtensionAPI(ecInstance) {\r\n  var coordSysMgr = ecInstance._coordSysMgr;\r\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\r\n    // Inject methods\r\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\r\n    getComponentByElement: function (el) {\r\n      while (el) {\r\n        var modelInfo = el.__ecComponentInfo;\r\n\r\n        if (modelInfo != null) {\r\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\r\n        }\r\n\r\n        el = el.parent;\r\n      }\r\n    }\r\n  });\r\n}\r\n/**\r\n * @class\r\n * Usage of query:\r\n * `chart.on('click', query, handler);`\r\n * The `query` can be:\r\n * + The component type query string, only `mainType` or `mainType.subType`,\r\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\r\n * + The component query object, like:\r\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\r\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\r\n * + The data query object, like:\r\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\r\n * + The other query object (cmponent customized query), like:\r\n *   `{element: 'some'}` (only available in custom series).\r\n *\r\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\r\n * same as there is no such prop in the `query` object.\r\n */\r\n\r\n\r\nfunction EventProcessor() {\r\n  // These info required: targetEl, packedEvent, model, view\r\n  this.eventInfo;\r\n}\r\n\r\nEventProcessor.prototype = {\r\n  constructor: EventProcessor,\r\n  normalizeQuery: function (query) {\r\n    var cptQuery = {};\r\n    var dataQuery = {};\r\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\r\n\r\n    if (zrUtil.isString(query)) {\r\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\r\n\r\n      cptQuery.mainType = condCptType.main || null;\r\n      cptQuery.subType = condCptType.sub || null;\r\n    } // `query` is an object, convert to {mainType, index, name, id}.\r\n    else {\r\n        // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\r\n        // can not be used in `compomentModel.filterForExposedEvent`.\r\n        var suffixes = ['Index', 'Name', 'Id'];\r\n        var dataKeys = {\r\n          name: 1,\r\n          dataIndex: 1,\r\n          dataType: 1\r\n        };\r\n        zrUtil.each(query, function (val, key) {\r\n          var reserved = false;\r\n\r\n          for (var i = 0; i < suffixes.length; i++) {\r\n            var propSuffix = suffixes[i];\r\n            var suffixPos = key.lastIndexOf(propSuffix);\r\n\r\n            if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\r\n              var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\r\n\r\n              if (mainType !== 'data') {\r\n                cptQuery.mainType = mainType;\r\n                cptQuery[propSuffix.toLowerCase()] = val;\r\n                reserved = true;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (dataKeys.hasOwnProperty(key)) {\r\n            dataQuery[key] = val;\r\n            reserved = true;\r\n          }\r\n\r\n          if (!reserved) {\r\n            otherQuery[key] = val;\r\n          }\r\n        });\r\n      }\r\n\r\n    return {\r\n      cptQuery: cptQuery,\r\n      dataQuery: dataQuery,\r\n      otherQuery: otherQuery\r\n    };\r\n  },\r\n  filter: function (eventType, query, args) {\r\n    // They should be assigned before each trigger call.\r\n    var eventInfo = this.eventInfo;\r\n\r\n    if (!eventInfo) {\r\n      return true;\r\n    }\r\n\r\n    var targetEl = eventInfo.targetEl;\r\n    var packedEvent = eventInfo.packedEvent;\r\n    var model = eventInfo.model;\r\n    var view = eventInfo.view; // For event like 'globalout'.\r\n\r\n    if (!model || !view) {\r\n      return true;\r\n    }\r\n\r\n    var cptQuery = query.cptQuery;\r\n    var dataQuery = query.dataQuery;\r\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\r\n\r\n    function check(query, host, prop, propOnHost) {\r\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\r\n    }\r\n  },\r\n  afterTrigger: function () {\r\n    // Make sure the eventInfo wont be used in next trigger.\r\n    this.eventInfo = null;\r\n  }\r\n};\r\n/**\r\n * @type {Object} key: actionType.\r\n * @inner\r\n */\r\n\r\nvar actions = {};\r\n/**\r\n * Map eventType to actionType\r\n * @type {Object}\r\n */\r\n\r\nvar eventActionMap = {};\r\n/**\r\n * Data processor functions of each stage\r\n * @type {Array.<Object.<string, Function>>}\r\n * @inner\r\n */\r\n\r\nvar dataProcessorFuncs = [];\r\n/**\r\n * @type {Array.<Function>}\r\n * @inner\r\n */\r\n\r\nvar optionPreprocessorFuncs = [];\r\n/**\r\n * @type {Array.<Function>}\r\n * @inner\r\n */\r\n\r\nvar postUpdateFuncs = [];\r\n/**\r\n * Visual encoding functions of each stage\r\n * @type {Array.<Object.<string, Function>>}\r\n */\r\n\r\nvar visualFuncs = [];\r\n/**\r\n * Theme storage\r\n * @type {Object.<key, Object>}\r\n */\r\n\r\nvar themeStorage = {};\r\n/**\r\n * Loading effects\r\n */\r\n\r\nvar loadingEffects = {};\r\nvar instances = {};\r\nvar connectedGroups = {};\r\nvar idBase = new Date() - 0;\r\nvar groupIdBase = new Date() - 0;\r\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\r\n\r\nfunction enableConnect(chart) {\r\n  var STATUS_PENDING = 0;\r\n  var STATUS_UPDATING = 1;\r\n  var STATUS_UPDATED = 2;\r\n  var STATUS_KEY = '__connectUpdateStatus';\r\n\r\n  function updateConnectedChartsStatus(charts, status) {\r\n    for (var i = 0; i < charts.length; i++) {\r\n      var otherChart = charts[i];\r\n      otherChart[STATUS_KEY] = status;\r\n    }\r\n  }\r\n\r\n  each(eventActionMap, function (actionType, eventType) {\r\n    chart._messageCenter.on(eventType, function (event) {\r\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\r\n        if (event && event.escapeConnect) {\r\n          return;\r\n        }\r\n\r\n        var action = chart.makeActionFromEvent(event);\r\n        var otherCharts = [];\r\n        each(instances, function (otherChart) {\r\n          if (otherChart !== chart && otherChart.group === chart.group) {\r\n            otherCharts.push(otherChart);\r\n          }\r\n        });\r\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\r\n        each(otherCharts, function (otherChart) {\r\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\r\n            otherChart.dispatchAction(action);\r\n          }\r\n        });\r\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\r\n      }\r\n    });\r\n  });\r\n}\r\n/**\r\n * @param {HTMLElement} dom\r\n * @param {Object} [theme]\r\n * @param {Object} opts\r\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\r\n * @param {string} [opts.renderer] Can choose 'canvas' or 'svg' to render the chart.\r\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\r\n *                              Can be 'auto' (the same as null/undefined)\r\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\r\n *                               Can be 'auto' (the same as null/undefined)\r\n */\r\n\r\n\r\nfunction init(dom, theme, opts) {\r\n  var existInstance = getInstanceByDom(dom);\r\n\r\n  if (existInstance) {\r\n    return existInstance;\r\n  }\r\n\r\n  var chart = new ECharts(dom, theme, opts);\r\n  chart.id = 'ec_' + idBase++;\r\n  instances[chart.id] = chart;\r\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\r\n  enableConnect(chart);\r\n  return chart;\r\n}\r\n/**\r\n * @return {string|Array.<module:echarts~ECharts>} groupId\r\n */\r\n\r\n\r\nfunction connect(groupId) {\r\n  // Is array of charts\r\n  if (zrUtil.isArray(groupId)) {\r\n    var charts = groupId;\r\n    groupId = null; // If any chart has group\r\n\r\n    each(charts, function (chart) {\r\n      if (chart.group != null) {\r\n        groupId = chart.group;\r\n      }\r\n    });\r\n    groupId = groupId || 'g_' + groupIdBase++;\r\n    each(charts, function (chart) {\r\n      chart.group = groupId;\r\n    });\r\n  }\r\n\r\n  connectedGroups[groupId] = true;\r\n  return groupId;\r\n}\r\n/**\r\n * @DEPRECATED\r\n * @return {string} groupId\r\n */\r\n\r\n\r\nfunction disConnect(groupId) {\r\n  connectedGroups[groupId] = false;\r\n}\r\n/**\r\n * @return {string} groupId\r\n */\r\n\r\n\r\nvar disconnect = disConnect;\r\n/**\r\n * Dispose a chart instance\r\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\r\n */\r\n\r\nfunction dispose(chart) {\r\n  if (typeof chart === 'string') {\r\n    chart = instances[chart];\r\n  } else if (!(chart instanceof ECharts)) {\r\n    // Try to treat as dom\r\n    chart = getInstanceByDom(chart);\r\n  }\r\n\r\n  if (chart instanceof ECharts && !chart.isDisposed()) {\r\n    chart.dispose();\r\n  }\r\n}\r\n/**\r\n * @param  {HTMLElement} dom\r\n * @return {echarts~ECharts}\r\n */\r\n\r\n\r\nfunction getInstanceByDom(dom) {\r\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\r\n}\r\n/**\r\n * @param {string} key\r\n * @return {echarts~ECharts}\r\n */\r\n\r\n\r\nfunction getInstanceById(key) {\r\n  return instances[key];\r\n}\r\n/**\r\n * Register theme\r\n */\r\n\r\n\r\nfunction registerTheme(name, theme) {\r\n  themeStorage[name] = theme;\r\n}\r\n/**\r\n * Register option preprocessor\r\n * @param {Function} preprocessorFunc\r\n */\r\n\r\n\r\nfunction registerPreprocessor(preprocessorFunc) {\r\n  optionPreprocessorFuncs.push(preprocessorFunc);\r\n}\r\n/**\r\n * @param {number} [priority=1000]\r\n * @param {Object|Function} processor\r\n */\r\n\r\n\r\nfunction registerProcessor(priority, processor) {\r\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\r\n}\r\n/**\r\n * Register postUpdater\r\n * @param {Function} postUpdateFunc\r\n */\r\n\r\n\r\nfunction registerPostUpdate(postUpdateFunc) {\r\n  postUpdateFuncs.push(postUpdateFunc);\r\n}\r\n/**\r\n * Usage:\r\n * registerAction('someAction', 'someEvent', function () { ... });\r\n * registerAction('someAction', function () { ... });\r\n * registerAction(\r\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\r\n *     function () { ... }\r\n * );\r\n *\r\n * @param {(string|Object)} actionInfo\r\n * @param {string} actionInfo.type\r\n * @param {string} [actionInfo.event]\r\n * @param {string} [actionInfo.update]\r\n * @param {string} [eventName]\r\n * @param {Function} action\r\n */\r\n\r\n\r\nfunction registerAction(actionInfo, eventName, action) {\r\n  if (typeof eventName === 'function') {\r\n    action = eventName;\r\n    eventName = '';\r\n  }\r\n\r\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\r\n    event: eventName\r\n  }][0]; // Event name is all lowercase\r\n\r\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\r\n  eventName = actionInfo.event; // Validate action type and event name.\r\n\r\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\r\n\r\n  if (!actions[actionType]) {\r\n    actions[actionType] = {\r\n      action: action,\r\n      actionInfo: actionInfo\r\n    };\r\n  }\r\n\r\n  eventActionMap[eventName] = actionType;\r\n}\r\n/**\r\n * @param {string} type\r\n * @param {*} CoordinateSystem\r\n */\r\n\r\n\r\nfunction registerCoordinateSystem(type, CoordinateSystem) {\r\n  CoordinateSystemManager.register(type, CoordinateSystem);\r\n}\r\n/**\r\n * Get dimensions of specified coordinate system.\r\n * @param {string} type\r\n * @return {Array.<string|Object>}\r\n */\r\n\r\n\r\nfunction getCoordinateSystemDimensions(type) {\r\n  var coordSysCreator = CoordinateSystemManager.get(type);\r\n\r\n  if (coordSysCreator) {\r\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\r\n  }\r\n}\r\n/**\r\n * Layout is a special stage of visual encoding\r\n * Most visual encoding like color are common for different chart\r\n * But each chart has it's own layout algorithm\r\n *\r\n * @param {number} [priority=1000]\r\n * @param {Function} layoutTask\r\n */\r\n\r\n\r\nfunction registerLayout(priority, layoutTask) {\r\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\r\n}\r\n/**\r\n * @param {number} [priority=3000]\r\n * @param {module:echarts/stream/Task} visualTask\r\n */\r\n\r\n\r\nfunction registerVisual(priority, visualTask) {\r\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\r\n}\r\n/**\r\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\r\n */\r\n\r\n\r\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\r\n  if (isFunction(priority) || isObject(priority)) {\r\n    fn = priority;\r\n    priority = defaultPriority;\r\n  }\r\n\r\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\r\n  stageHandler.__prio = priority;\r\n  stageHandler.__raw = fn;\r\n  targetList.push(stageHandler);\r\n  return stageHandler;\r\n}\r\n/**\r\n * @param {string} name\r\n */\r\n\r\n\r\nfunction registerLoading(name, loadingFx) {\r\n  loadingEffects[name] = loadingFx;\r\n}\r\n/**\r\n * @param {Object} opts\r\n * @param {string} [superClass]\r\n */\r\n\r\n\r\nfunction extendComponentModel(opts\r\n/*, superClass*/\r\n) {\r\n  // var Clazz = ComponentModel;\r\n  // if (superClass) {\r\n  //     var classType = parseClassType(superClass);\r\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\r\n  // }\r\n  return ComponentModel.extend(opts);\r\n}\r\n/**\r\n * @param {Object} opts\r\n * @param {string} [superClass]\r\n */\r\n\r\n\r\nfunction extendComponentView(opts\r\n/*, superClass*/\r\n) {\r\n  // var Clazz = ComponentView;\r\n  // if (superClass) {\r\n  //     var classType = parseClassType(superClass);\r\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\r\n  // }\r\n  return ComponentView.extend(opts);\r\n}\r\n/**\r\n * @param {Object} opts\r\n * @param {string} [superClass]\r\n */\r\n\r\n\r\nfunction extendSeriesModel(opts\r\n/*, superClass*/\r\n) {\r\n  // var Clazz = SeriesModel;\r\n  // if (superClass) {\r\n  //     superClass = 'series.' + superClass.replace('series.', '');\r\n  //     var classType = parseClassType(superClass);\r\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\r\n  // }\r\n  return SeriesModel.extend(opts);\r\n}\r\n/**\r\n * @param {Object} opts\r\n * @param {string} [superClass]\r\n */\r\n\r\n\r\nfunction extendChartView(opts\r\n/*, superClass*/\r\n) {\r\n  // var Clazz = ChartView;\r\n  // if (superClass) {\r\n  //     superClass = superClass.replace('series.', '');\r\n  //     var classType = parseClassType(superClass);\r\n  //     Clazz = ChartView.getClass(classType.main, true);\r\n  // }\r\n  return ChartView.extend(opts);\r\n}\r\n/**\r\n * ZRender need a canvas context to do measureText.\r\n * But in node environment canvas may be created by node-canvas.\r\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\r\n *\r\n * Be careful of using it in the browser.\r\n *\r\n * @param {Function} creator\r\n * @example\r\n *     var Canvas = require('canvas');\r\n *     var echarts = require('echarts');\r\n *     echarts.setCanvasCreator(function () {\r\n *         // Small size is enough.\r\n *         return new Canvas(32, 32);\r\n *     });\r\n */\r\n\r\n\r\nfunction setCanvasCreator(creator) {\r\n  zrUtil.$override('createCanvas', creator);\r\n}\r\n/**\r\n * @param {string} mapName\r\n * @param {Array.<Object>|Object|string} geoJson\r\n * @param {Object} [specialAreas]\r\n *\r\n * @example GeoJSON\r\n *     $.get('USA.json', function (geoJson) {\r\n *         echarts.registerMap('USA', geoJson);\r\n *         // Or\r\n *         echarts.registerMap('USA', {\r\n *             geoJson: geoJson,\r\n *             specialAreas: {}\r\n *         })\r\n *     });\r\n *\r\n *     $.get('airport.svg', function (svg) {\r\n *         echarts.registerMap('airport', {\r\n *             svg: svg\r\n *         }\r\n *     });\r\n *\r\n *     echarts.registerMap('eu', [\r\n *         {svg: eu-topographic.svg},\r\n *         {geoJSON: eu.json}\r\n *     ])\r\n */\r\n\r\n\r\nfunction registerMap(mapName, geoJson, specialAreas) {\r\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\r\n}\r\n/**\r\n * @param {string} mapName\r\n * @return {Object}\r\n */\r\n\r\n\r\nfunction getMap(mapName) {\r\n  // For backward compatibility, only return the first one.\r\n  var records = mapDataStorage.retrieveMap(mapName);\r\n  return records && records[0] && {\r\n    geoJson: records[0].geoJSON,\r\n    specialAreas: records[0].specialAreas\r\n  };\r\n}\r\n\r\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\r\nregisterPreprocessor(backwardCompat);\r\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\r\nregisterLoading('default', loadingDefault); // Default actions\r\n\r\nregisterAction({\r\n  type: 'highlight',\r\n  event: 'highlight',\r\n  update: 'highlight'\r\n}, zrUtil.noop);\r\nregisterAction({\r\n  type: 'downplay',\r\n  event: 'downplay',\r\n  update: 'downplay'\r\n}, zrUtil.noop); // Default theme\r\n\r\nregisterTheme('light', lightTheme);\r\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\r\n// be mounted on `echarts` is the extension `dataTool` is imported.\r\n\r\nvar dataTool = {};\r\nexports.version = version;\r\nexports.dependencies = dependencies;\r\nexports.PRIORITY = PRIORITY;\r\nexports.init = init;\r\nexports.connect = connect;\r\nexports.disConnect = disConnect;\r\nexports.disconnect = disconnect;\r\nexports.dispose = dispose;\r\nexports.getInstanceByDom = getInstanceByDom;\r\nexports.getInstanceById = getInstanceById;\r\nexports.registerTheme = registerTheme;\r\nexports.registerPreprocessor = registerPreprocessor;\r\nexports.registerProcessor = registerProcessor;\r\nexports.registerPostUpdate = registerPostUpdate;\r\nexports.registerAction = registerAction;\r\nexports.registerCoordinateSystem = registerCoordinateSystem;\r\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\r\nexports.registerLayout = registerLayout;\r\nexports.registerVisual = registerVisual;\r\nexports.registerLoading = registerLoading;\r\nexports.extendComponentModel = extendComponentModel;\r\nexports.extendComponentView = extendComponentView;\r\nexports.extendSeriesModel = extendSeriesModel;\r\nexports.extendChartView = extendChartView;\r\nexports.setCanvasCreator = setCanvasCreator;\r\nexports.registerMap = registerMap;\r\nexports.getMap = getMap;\r\nexports.dataTool = dataTool;\r\nvar ___ec_export = require(\"./export\");\r\n(function () {\r\n    for (var key in ___ec_export) {\r\n        if (___ec_export.hasOwnProperty(key)) {\r\n            exports[key] = ___ec_export[key];\r\n        }\r\n    }\r\n})();","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrender = require(\"zrender/lib/zrender\");\r\n\r\nexports.zrender = zrender;\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nexports.matrix = matrix;\r\n\r\nvar vector = require(\"zrender/lib/core/vector\");\r\n\r\nexports.vector = vector;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar colorTool = require(\"zrender/lib/tool/color\");\r\n\r\nexports.color = colorTool;\r\n\r\nvar graphicUtil = require(\"./util/graphic\");\r\n\r\nvar numberUtil = require(\"./util/number\");\r\n\r\nexports.number = numberUtil;\r\n\r\nvar formatUtil = require(\"./util/format\");\r\n\r\nexports.format = formatUtil;\r\n\r\nvar _throttle = require(\"./util/throttle\");\r\n\r\nvar throttle = _throttle.throttle;\r\nexports.throttle = _throttle.throttle;\r\n\r\nvar ecHelper = require(\"./helper\");\r\n\r\nexports.helper = ecHelper;\r\n\r\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\r\n\r\nexports.parseGeoJSON = parseGeoJSON;\r\n\r\nvar _List = require(\"./data/List\");\r\n\r\nexports.List = _List;\r\n\r\nvar _Model = require(\"./model/Model\");\r\n\r\nexports.Model = _Model;\r\n\r\nvar _Axis = require(\"./coord/Axis\");\r\n\r\nexports.Axis = _Axis;\r\n\r\nvar _env = require(\"zrender/lib/core/env\");\r\n\r\nexports.env = _env;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Do not mount those modules on 'src/echarts' for better tree shaking.\r\n */\r\nvar parseGeoJson = parseGeoJSON;\r\nvar ecUtil = {};\r\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\r\n  ecUtil[name] = zrUtil[name];\r\n});\r\nvar graphic = {};\r\nzrUtil.each(['extendShape', 'extendPath', 'makePath', 'makeImage', 'mergePath', 'resizePath', 'createIcon', 'setHoverStyle', 'setLabelStyle', 'setTextStyle', 'setText', 'getFont', 'updateProps', 'initProps', 'getTransform', 'clipPointsByRect', 'clipRectByRect', 'registerShape', 'getShapeClass', 'Group', 'Image', 'Text', 'Circle', 'Sector', 'Ring', 'Polygon', 'Polyline', 'Rect', 'Line', 'BezierCurve', 'Arc', 'IncrementalDisplayable', 'CompoundPath', 'LinearGradient', 'RadialGradient', 'BoundingRect'], function (name) {\r\n  graphic[name] = graphicUtil[name];\r\n});\r\nexports.parseGeoJson = parseGeoJson;\r\nexports.util = ecUtil;\r\nexports.graphic = graphic;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\r\n\r\nvar axisHelper = require(\"./coord/axisHelper\");\r\n\r\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\r\n\r\nvar Model = require(\"./model/Model\");\r\n\r\nvar _layout = require(\"./util/layout\");\r\n\r\nvar getLayoutRect = _layout.getLayoutRect;\r\nexports.getLayoutRect = _layout.getLayoutRect;\r\n\r\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\r\n\r\nvar enableDataStack = _dataStackHelper.enableDataStack;\r\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\r\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\r\n\r\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\r\n\r\nexports.completeDimensions = _completeDimensions;\r\n\r\nvar _createDimensions = require(\"./data/helper/createDimensions\");\r\n\r\nexports.createDimensions = _createDimensions;\r\n\r\nvar _symbol = require(\"./util/symbol\");\r\n\r\nexports.createSymbol = _symbol.createSymbol;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\r\n\r\n/**\r\n * Create a muti dimension List structure from seriesModel.\r\n * @param  {module:echarts/model/Model} seriesModel\r\n * @return {module:echarts/data/List} list\r\n */\r\nfunction createList(seriesModel) {\r\n  return createListFromArray(seriesModel.getSource(), seriesModel);\r\n} // export function createGraph(seriesModel) {\r\n//     var nodes = seriesModel.get('data');\r\n//     var links = seriesModel.get('links');\r\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\r\n// }\r\n\r\n\r\nvar dataStack = {\r\n  isDimensionStacked: isDimensionStacked,\r\n  enableDataStack: enableDataStack,\r\n  getStackedDimension: getStackedDimension\r\n};\r\n/**\r\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n * @param {string} symbolDesc\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @param {string} color\r\n */\r\n\r\n/**\r\n * Create scale\r\n * @param {Array.<number>} dataExtent\r\n * @param {Object|module:echarts/Model} option\r\n */\r\nfunction createScale(dataExtent, option) {\r\n  var axisModel = option;\r\n\r\n  if (!Model.isInstance(option)) {\r\n    axisModel = new Model(option);\r\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\r\n  }\r\n\r\n  var scale = axisHelper.createScaleByModel(axisModel);\r\n  scale.setExtent(dataExtent[0], dataExtent[1]);\r\n  axisHelper.niceScaleExtent(scale, axisModel);\r\n  return scale;\r\n}\r\n/**\r\n * Mixin common methods to axis model,\r\n *\r\n * Inlcude methods\r\n * `getFormattedLabels() => Array.<string>`\r\n * `getCategories() => Array.<string>`\r\n * `getMin(origin: boolean) => number`\r\n * `getMax(origin: boolean) => number`\r\n * `getNeedCrossZero() => boolean`\r\n * `setRange(start: number, end: number)`\r\n * `resetRange()`\r\n */\r\n\r\n\r\nfunction mixinAxisModelCommonMethods(Model) {\r\n  zrUtil.mixin(Model, axisModelCommonMixin);\r\n}\r\n\r\nexports.createList = createList;\r\nexports.dataStack = dataStack;\r\nexports.createScale = createScale;\r\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Language: (Simplified) Chinese.\r\n */\r\nvar _default = {\r\n  legend: {\r\n    selector: {\r\n      all: '全选',\r\n      inverse: '反选'\r\n    }\r\n  },\r\n  toolbox: {\r\n    brush: {\r\n      title: {\r\n        rect: '矩形选择',\r\n        polygon: '圈选',\r\n        lineX: '横向选择',\r\n        lineY: '纵向选择',\r\n        keep: '保持选择',\r\n        clear: '清除选择'\r\n      }\r\n    },\r\n    dataView: {\r\n      title: '数据视图',\r\n      lang: ['数据视图', '关闭', '刷新']\r\n    },\r\n    dataZoom: {\r\n      title: {\r\n        zoom: '区域缩放',\r\n        back: '区域缩放还原'\r\n      }\r\n    },\r\n    magicType: {\r\n      title: {\r\n        line: '切换为折线图',\r\n        bar: '切换为柱状图',\r\n        stack: '切换为堆叠',\r\n        tiled: '切换为平铺'\r\n      }\r\n    },\r\n    restore: {\r\n      title: '还原'\r\n    },\r\n    saveAsImage: {\r\n      title: '保存为图片',\r\n      lang: ['右键另存为图片']\r\n    }\r\n  },\r\n  series: {\r\n    typeNames: {\r\n      pie: '饼图',\r\n      bar: '柱状图',\r\n      line: '折线图',\r\n      scatter: '散点图',\r\n      effectScatter: '涟漪散点图',\r\n      radar: '雷达图',\r\n      tree: '树图',\r\n      treemap: '矩形树图',\r\n      boxplot: '箱型图',\r\n      candlestick: 'K线图',\r\n      k: 'K线图',\r\n      heatmap: '热力图',\r\n      map: '地图',\r\n      parallel: '平行坐标图',\r\n      lines: '线图',\r\n      graph: '关系图',\r\n      sankey: '桑基图',\r\n      funnel: '漏斗图',\r\n      gauge: '仪表盘图',\r\n      pictorialBar: '象形柱图',\r\n      themeRiver: '主题河流图',\r\n      sunburst: '旭日图'\r\n    }\r\n  },\r\n  aria: {\r\n    general: {\r\n      withTitle: '这是一个关于“{title}”的图表。',\r\n      withoutTitle: '这是一个图表，'\r\n    },\r\n    series: {\r\n      single: {\r\n        prefix: '',\r\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\r\n        withoutName: '图表类型是{seriesType}。'\r\n      },\r\n      multiple: {\r\n        prefix: '它由{seriesCount}个图表系列组成。',\r\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\r\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\r\n        separator: {\r\n          middle: '；',\r\n          end: '。'\r\n        }\r\n      }\r\n    },\r\n    data: {\r\n      allData: '其数据是——',\r\n      partialData: '其中，前{displayCnt}项是——',\r\n      withName: '{name}的数据是{value}',\r\n      withoutName: '{value}',\r\n      separator: {\r\n        middle: '，',\r\n        end: ''\r\n      }\r\n    }\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _number = require(\"../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\r\n\r\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\r\n\r\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Float32Array */\r\nvar STACK_PREFIX = '__ec_stack_';\r\nvar LARGE_BAR_MIN_WIDTH = 0.5;\r\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\n\r\nfunction getSeriesStackId(seriesModel) {\r\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\r\n}\r\n\r\nfunction getAxisKey(axis) {\r\n  return axis.dim + axis.index;\r\n}\r\n/**\r\n * @param {Object} opt\r\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\r\n * @param {number} opt.count Positive interger.\r\n * @param {number} [opt.barWidth]\r\n * @param {number} [opt.barMaxWidth]\r\n * @param {number} [opt.barMinWidth]\r\n * @param {number} [opt.barGap]\r\n * @param {number} [opt.barCategoryGap]\r\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\r\n */\r\n\r\n\r\nfunction getLayoutOnAxis(opt) {\r\n  var params = [];\r\n  var baseAxis = opt.axis;\r\n  var axisKey = 'axis0';\r\n\r\n  if (baseAxis.type !== 'category') {\r\n    return;\r\n  }\r\n\r\n  var bandWidth = baseAxis.getBandWidth();\r\n\r\n  for (var i = 0; i < opt.count || 0; i++) {\r\n    params.push(zrUtil.defaults({\r\n      bandWidth: bandWidth,\r\n      axisKey: axisKey,\r\n      stackId: STACK_PREFIX + i\r\n    }, opt));\r\n  }\r\n\r\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\r\n  var result = [];\r\n\r\n  for (var i = 0; i < opt.count; i++) {\r\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\r\n    item.offsetCenter = item.offset + item.width / 2;\r\n    result.push(item);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\r\n  var seriesModels = [];\r\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n    // Check series coordinate, do layout for cartesian2d only\r\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\r\n      seriesModels.push(seriesModel);\r\n    }\r\n  });\r\n  return seriesModels;\r\n}\r\n/**\r\n * Map from (baseAxis.dim + '_' + baseAxis.index) to min gap of two adjacent\r\n * values.\r\n * This works for time axes, value axes, and log axes.\r\n * For a single time axis, return value is in the form like\r\n * {'x_0': [1000000]}.\r\n * The value of 1000000 is in milliseconds.\r\n */\r\n\r\n\r\nfunction getValueAxesMinGaps(barSeries) {\r\n  /**\r\n   * Map from axis.index to values.\r\n   * For a single time axis, axisValues is in the form like\r\n   * {'x_0': [1495555200000, 1495641600000, 1495728000000]}.\r\n   * Items in axisValues[x], e.g. 1495555200000, are time values of all\r\n   * series.\r\n   */\r\n  var axisValues = {};\r\n  zrUtil.each(barSeries, function (seriesModel) {\r\n    var cartesian = seriesModel.coordinateSystem;\r\n    var baseAxis = cartesian.getBaseAxis();\r\n\r\n    if (baseAxis.type !== 'time' && baseAxis.type !== 'value') {\r\n      return;\r\n    }\r\n\r\n    var data = seriesModel.getData();\r\n    var key = baseAxis.dim + '_' + baseAxis.index;\r\n    var dim = data.mapDimension(baseAxis.dim);\r\n\r\n    for (var i = 0, cnt = data.count(); i < cnt; ++i) {\r\n      var value = data.get(dim, i);\r\n\r\n      if (!axisValues[key]) {\r\n        // No previous data for the axis\r\n        axisValues[key] = [value];\r\n      } else {\r\n        // No value in previous series\r\n        axisValues[key].push(value);\r\n      } // Ignore duplicated time values in the same axis\r\n\r\n    }\r\n  });\r\n  var axisMinGaps = [];\r\n\r\n  for (var key in axisValues) {\r\n    if (axisValues.hasOwnProperty(key)) {\r\n      var valuesInAxis = axisValues[key];\r\n\r\n      if (valuesInAxis) {\r\n        // Sort axis values into ascending order to calculate gaps\r\n        valuesInAxis.sort(function (a, b) {\r\n          return a - b;\r\n        });\r\n        var min = null;\r\n\r\n        for (var j = 1; j < valuesInAxis.length; ++j) {\r\n          var delta = valuesInAxis[j] - valuesInAxis[j - 1];\r\n\r\n          if (delta > 0) {\r\n            // Ignore 0 delta because they are of the same axis value\r\n            min = min === null ? delta : Math.min(min, delta);\r\n          }\r\n        } // Set to null if only have one data\r\n\r\n\r\n        axisMinGaps[key] = min;\r\n      }\r\n    }\r\n  }\r\n\r\n  return axisMinGaps;\r\n}\r\n\r\nfunction makeColumnLayout(barSeries) {\r\n  var axisMinGaps = getValueAxesMinGaps(barSeries);\r\n  var seriesInfoList = [];\r\n  zrUtil.each(barSeries, function (seriesModel) {\r\n    var cartesian = seriesModel.coordinateSystem;\r\n    var baseAxis = cartesian.getBaseAxis();\r\n    var axisExtent = baseAxis.getExtent();\r\n    var bandWidth;\r\n\r\n    if (baseAxis.type === 'category') {\r\n      bandWidth = baseAxis.getBandWidth();\r\n    } else if (baseAxis.type === 'value' || baseAxis.type === 'time') {\r\n      var key = baseAxis.dim + '_' + baseAxis.index;\r\n      var minGap = axisMinGaps[key];\r\n      var extentSpan = Math.abs(axisExtent[1] - axisExtent[0]);\r\n      var scale = baseAxis.scale.getExtent();\r\n      var scaleSpan = Math.abs(scale[1] - scale[0]);\r\n      bandWidth = minGap ? extentSpan / scaleSpan * minGap : extentSpan; // When there is only one data value\r\n    } else {\r\n      var data = seriesModel.getData();\r\n      bandWidth = Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\r\n    }\r\n\r\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\r\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\r\n    var barMinWidth = parsePercent( // barMinWidth by default is 1 in cartesian. Because in value axis,\r\n    // the auto-calculated bar width might be less than 1.\r\n    seriesModel.get('barMinWidth') || 1, bandWidth);\r\n    var barGap = seriesModel.get('barGap');\r\n    var barCategoryGap = seriesModel.get('barCategoryGap');\r\n    seriesInfoList.push({\r\n      bandWidth: bandWidth,\r\n      barWidth: barWidth,\r\n      barMaxWidth: barMaxWidth,\r\n      barMinWidth: barMinWidth,\r\n      barGap: barGap,\r\n      barCategoryGap: barCategoryGap,\r\n      axisKey: getAxisKey(baseAxis),\r\n      stackId: getSeriesStackId(seriesModel)\r\n    });\r\n  });\r\n  return doCalBarWidthAndOffset(seriesInfoList);\r\n}\r\n\r\nfunction doCalBarWidthAndOffset(seriesInfoList) {\r\n  // Columns info on each category axis. Key is cartesian name\r\n  var columnsMap = {};\r\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\r\n    var axisKey = seriesInfo.axisKey;\r\n    var bandWidth = seriesInfo.bandWidth;\r\n    var columnsOnAxis = columnsMap[axisKey] || {\r\n      bandWidth: bandWidth,\r\n      remainedWidth: bandWidth,\r\n      autoWidthCount: 0,\r\n      categoryGap: '20%',\r\n      gap: '30%',\r\n      stacks: {}\r\n    };\r\n    var stacks = columnsOnAxis.stacks;\r\n    columnsMap[axisKey] = columnsOnAxis;\r\n    var stackId = seriesInfo.stackId;\r\n\r\n    if (!stacks[stackId]) {\r\n      columnsOnAxis.autoWidthCount++;\r\n    }\r\n\r\n    stacks[stackId] = stacks[stackId] || {\r\n      width: 0,\r\n      maxWidth: 0\r\n    }; // Caution: In a single coordinate system, these barGrid attributes\r\n    // will be shared by series. Consider that they have default values,\r\n    // only the attributes set on the last series will work.\r\n    // Do not change this fact unless there will be a break change.\r\n\r\n    var barWidth = seriesInfo.barWidth;\r\n\r\n    if (barWidth && !stacks[stackId].width) {\r\n      // See #6312, do not restrict width.\r\n      stacks[stackId].width = barWidth;\r\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\r\n      columnsOnAxis.remainedWidth -= barWidth;\r\n    }\r\n\r\n    var barMaxWidth = seriesInfo.barMaxWidth;\r\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\r\n    var barMinWidth = seriesInfo.barMinWidth;\r\n    barMinWidth && (stacks[stackId].minWidth = barMinWidth);\r\n    var barGap = seriesInfo.barGap;\r\n    barGap != null && (columnsOnAxis.gap = barGap);\r\n    var barCategoryGap = seriesInfo.barCategoryGap;\r\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\r\n  });\r\n  var result = {};\r\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\r\n    result[coordSysName] = {};\r\n    var stacks = columnsOnAxis.stacks;\r\n    var bandWidth = columnsOnAxis.bandWidth;\r\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\r\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\r\n    var remainedWidth = columnsOnAxis.remainedWidth;\r\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\r\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\r\n\r\n    zrUtil.each(stacks, function (column) {\r\n      var maxWidth = column.maxWidth;\r\n      var minWidth = column.minWidth;\r\n\r\n      if (!column.width) {\r\n        var finalWidth = autoWidth;\r\n\r\n        if (maxWidth && maxWidth < finalWidth) {\r\n          finalWidth = Math.min(maxWidth, remainedWidth);\r\n        } // `minWidth` has higher priority. `minWidth` decide that wheter the\r\n        // bar is able to be visible. So `minWidth` should not be restricted\r\n        // by `maxWidth` or `remainedWidth` (which is from `bandWidth`). In\r\n        // the extreme cases for `value` axis, bars are allowed to overlap\r\n        // with each other if `minWidth` specified.\r\n\r\n\r\n        if (minWidth && minWidth > finalWidth) {\r\n          finalWidth = minWidth;\r\n        }\r\n\r\n        if (finalWidth !== autoWidth) {\r\n          column.width = finalWidth;\r\n          remainedWidth -= finalWidth + barGapPercent * finalWidth;\r\n          autoWidthCount--;\r\n        }\r\n      } else {\r\n        // `barMinWidth/barMaxWidth` has higher priority than `barWidth`, as\r\n        // CSS does. Becuase barWidth can be a percent value, where\r\n        // `barMaxWidth` can be used to restrict the final width.\r\n        var finalWidth = column.width;\r\n\r\n        if (maxWidth) {\r\n          finalWidth = Math.min(finalWidth, maxWidth);\r\n        } // `minWidth` has higher priority, as described above\r\n\r\n\r\n        if (minWidth) {\r\n          finalWidth = Math.max(finalWidth, minWidth);\r\n        }\r\n\r\n        column.width = finalWidth;\r\n        remainedWidth -= finalWidth + barGapPercent * finalWidth;\r\n        autoWidthCount--;\r\n      }\r\n    }); // Recalculate width again\r\n\r\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n    autoWidth = Math.max(autoWidth, 0);\r\n    var widthSum = 0;\r\n    var lastColumn;\r\n    zrUtil.each(stacks, function (column, idx) {\r\n      if (!column.width) {\r\n        column.width = autoWidth;\r\n      }\r\n\r\n      lastColumn = column;\r\n      widthSum += column.width * (1 + barGapPercent);\r\n    });\r\n\r\n    if (lastColumn) {\r\n      widthSum -= lastColumn.width * barGapPercent;\r\n    }\r\n\r\n    var offset = -widthSum / 2;\r\n    zrUtil.each(stacks, function (column, stackId) {\r\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\r\n        bandWidth: bandWidth,\r\n        offset: offset,\r\n        width: column.width\r\n      };\r\n      offset += column.width * (1 + barGapPercent);\r\n    });\r\n  });\r\n  return result;\r\n}\r\n/**\r\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\r\n * @param {module:echarts/coord/Axis} axis\r\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\r\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\r\n */\r\n\r\n\r\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\r\n  if (barWidthAndOffset && axis) {\r\n    var result = barWidthAndOffset[getAxisKey(axis)];\r\n\r\n    if (result != null && seriesModel != null) {\r\n      result = result[getSeriesStackId(seriesModel)];\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n/**\r\n * @param {string} seriesType\r\n * @param {module:echarts/model/Global} ecModel\r\n */\r\n\r\n\r\nfunction layout(seriesType, ecModel) {\r\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\r\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\r\n  var lastStackCoords = {};\r\n  var lastStackCoordsOrigin = {};\r\n  zrUtil.each(seriesModels, function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var cartesian = seriesModel.coordinateSystem;\r\n    var baseAxis = cartesian.getBaseAxis();\r\n    var stackId = getSeriesStackId(seriesModel);\r\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\r\n    var columnOffset = columnLayoutInfo.offset;\r\n    var columnWidth = columnLayoutInfo.width;\r\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\r\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\r\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\r\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\r\n\r\n    data.setLayout({\r\n      bandWidth: columnLayoutInfo.bandWidth,\r\n      offset: columnOffset,\r\n      size: columnWidth\r\n    });\r\n    var valueDim = data.mapDimension(valueAxis.dim);\r\n    var baseDim = data.mapDimension(baseAxis.dim);\r\n    var stacked = isDimensionStacked(data, valueDim\r\n    /*, baseDim*/\r\n    );\r\n    var isValueAxisH = valueAxis.isHorizontal();\r\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\r\n\r\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\r\n      var value = data.get(valueDim, idx);\r\n      var baseValue = data.get(baseDim, idx);\r\n      var sign = value >= 0 ? 'p' : 'n';\r\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\r\n      // stackResultDimension directly.\r\n\r\n      if (stacked) {\r\n        // Only ordinal axis can be stacked.\r\n        if (!lastStackCoords[stackId][baseValue]) {\r\n          lastStackCoords[stackId][baseValue] = {\r\n            p: valueAxisStart,\r\n            // Positive stack\r\n            n: valueAxisStart // Negative stack\r\n\r\n          };\r\n        } // Should also consider #4243\r\n\r\n\r\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\r\n      }\r\n\r\n      var x;\r\n      var y;\r\n      var width;\r\n      var height;\r\n\r\n      if (isValueAxisH) {\r\n        var coord = cartesian.dataToPoint([value, baseValue]);\r\n        x = baseCoord;\r\n        y = coord[1] + columnOffset;\r\n        width = coord[0] - valueAxisStart;\r\n        height = columnWidth;\r\n\r\n        if (Math.abs(width) < barMinHeight) {\r\n          width = (width < 0 ? -1 : 1) * barMinHeight;\r\n        } // Ignore stack from NaN value\r\n\r\n\r\n        if (!isNaN(width)) {\r\n          stacked && (lastStackCoords[stackId][baseValue][sign] += width);\r\n        }\r\n      } else {\r\n        var coord = cartesian.dataToPoint([baseValue, value]);\r\n        x = coord[0] + columnOffset;\r\n        y = baseCoord;\r\n        width = columnWidth;\r\n        height = coord[1] - valueAxisStart;\r\n\r\n        if (Math.abs(height) < barMinHeight) {\r\n          // Include zero to has a positive bar\r\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\r\n        } // Ignore stack from NaN value\r\n\r\n\r\n        if (!isNaN(height)) {\r\n          stacked && (lastStackCoords[stackId][baseValue][sign] += height);\r\n        }\r\n      }\r\n\r\n      data.setItemLayout(idx, {\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height\r\n      });\r\n    }\r\n  }, this);\r\n} // TODO: Do not support stack in large mode yet.\r\n\r\n\r\nvar largeLayout = {\r\n  seriesType: 'bar',\r\n  plan: createRenderPlanner(),\r\n  reset: function (seriesModel) {\r\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\r\n      return;\r\n    }\r\n\r\n    var data = seriesModel.getData();\r\n    var cartesian = seriesModel.coordinateSystem;\r\n    var coordLayout = cartesian.grid.getRect();\r\n    var baseAxis = cartesian.getBaseAxis();\r\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\r\n    var valueDim = data.mapDimension(valueAxis.dim);\r\n    var baseDim = data.mapDimension(baseAxis.dim);\r\n    var valueAxisHorizontal = valueAxis.isHorizontal();\r\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\r\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\r\n\r\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\r\n      // jshint ignore:line\r\n      barWidth = LARGE_BAR_MIN_WIDTH;\r\n    }\r\n\r\n    return {\r\n      progress: progress\r\n    };\r\n\r\n    function progress(params, data) {\r\n      var count = params.count;\r\n      var largePoints = new LargeArr(count * 2);\r\n      var largeBackgroundPoints = new LargeArr(count * 2);\r\n      var largeDataIndices = new LargeArr(count);\r\n      var dataIndex;\r\n      var coord = [];\r\n      var valuePair = [];\r\n      var pointsOffset = 0;\r\n      var idxOffset = 0;\r\n\r\n      while ((dataIndex = params.next()) != null) {\r\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\r\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\r\n        coord = cartesian.dataToPoint(valuePair, null, coord); // Data index might not be in order, depends on `progressiveChunkMode`.\r\n\r\n        largeBackgroundPoints[pointsOffset] = valueAxisHorizontal ? coordLayout.x + coordLayout.width : coord[0];\r\n        largePoints[pointsOffset++] = coord[0];\r\n        largeBackgroundPoints[pointsOffset] = valueAxisHorizontal ? coord[1] : coordLayout.y + coordLayout.height;\r\n        largePoints[pointsOffset++] = coord[1];\r\n        largeDataIndices[idxOffset++] = dataIndex;\r\n      }\r\n\r\n      data.setLayout({\r\n        largePoints: largePoints,\r\n        largeDataIndices: largeDataIndices,\r\n        largeBackgroundPoints: largeBackgroundPoints,\r\n        barWidth: barWidth,\r\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\r\n        backgroundStart: valueAxisHorizontal ? coordLayout.x : coordLayout.y,\r\n        valueAxisHorizontal: valueAxisHorizontal\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nfunction isOnCartesian(seriesModel) {\r\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\r\n}\r\n\r\nfunction isInLargeMode(seriesModel) {\r\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\r\n} // See cases in `test/bar-start.html` and `#7412`, `#8747`.\r\n\r\n\r\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\r\n  return valueAxis.toGlobalCoord(valueAxis.dataToCoord(valueAxis.type === 'log' ? 1 : 0));\r\n}\r\n\r\nexports.getLayoutOnAxis = getLayoutOnAxis;\r\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\r\nexports.makeColumnLayout = makeColumnLayout;\r\nexports.retrieveColumnLayout = retrieveColumnLayout;\r\nexports.layout = layout;\r\nexports.largeLayout = largeLayout;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _number = require(\"../util/number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\r\n\r\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction getSeriesStackId(seriesModel) {\r\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\r\n}\r\n\r\nfunction getAxisKey(polar, axis) {\r\n  return axis.dim + polar.model.componentIndex;\r\n}\r\n/**\r\n * @param {string} seriesType\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {module:echarts/ExtensionAPI} api\r\n */\r\n\r\n\r\nfunction barLayoutPolar(seriesType, ecModel, api) {\r\n  var lastStackCoords = {};\r\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\r\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\r\n  }));\r\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n    // Check series coordinate, do layout for polar only\r\n    if (seriesModel.coordinateSystem.type !== 'polar') {\r\n      return;\r\n    }\r\n\r\n    var data = seriesModel.getData();\r\n    var polar = seriesModel.coordinateSystem;\r\n    var baseAxis = polar.getBaseAxis();\r\n    var axisKey = getAxisKey(polar, baseAxis);\r\n    var stackId = getSeriesStackId(seriesModel);\r\n    var columnLayoutInfo = barWidthAndOffset[axisKey][stackId];\r\n    var columnOffset = columnLayoutInfo.offset;\r\n    var columnWidth = columnLayoutInfo.width;\r\n    var valueAxis = polar.getOtherAxis(baseAxis);\r\n    var cx = seriesModel.coordinateSystem.cx;\r\n    var cy = seriesModel.coordinateSystem.cy;\r\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\r\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\r\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\r\n    var valueDim = data.mapDimension(valueAxis.dim);\r\n    var baseDim = data.mapDimension(baseAxis.dim);\r\n    var stacked = isDimensionStacked(data, valueDim\r\n    /*, baseDim*/\r\n    );\r\n    var clampLayout = baseAxis.dim !== 'radius' || !seriesModel.get('roundCap', true);\r\n    var valueAxisStart = valueAxis.dim === 'radius' ? valueAxis.dataToRadius(0) : valueAxis.dataToAngle(0);\r\n\r\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\r\n      var value = data.get(valueDim, idx);\r\n      var baseValue = data.get(baseDim, idx);\r\n      var sign = value >= 0 ? 'p' : 'n';\r\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\r\n      // stackResultDimension directly.\r\n      // Only ordinal axis can be stacked.\r\n\r\n      if (stacked) {\r\n        if (!lastStackCoords[stackId][baseValue]) {\r\n          lastStackCoords[stackId][baseValue] = {\r\n            p: valueAxisStart,\r\n            // Positive stack\r\n            n: valueAxisStart // Negative stack\r\n\r\n          };\r\n        } // Should also consider #4243\r\n\r\n\r\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\r\n      }\r\n\r\n      var r0;\r\n      var r;\r\n      var startAngle;\r\n      var endAngle; // radial sector\r\n\r\n      if (valueAxis.dim === 'radius') {\r\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\r\n        var angle = baseAxis.dataToAngle(baseValue);\r\n\r\n        if (Math.abs(radiusSpan) < barMinHeight) {\r\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\r\n        }\r\n\r\n        r0 = baseCoord;\r\n        r = baseCoord + radiusSpan;\r\n        startAngle = angle - columnOffset;\r\n        endAngle = startAngle - columnWidth;\r\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\r\n      } // tangential sector\r\n      else {\r\n          var angleSpan = valueAxis.dataToAngle(value, clampLayout) - valueAxisStart;\r\n          var radius = baseAxis.dataToRadius(baseValue);\r\n\r\n          if (Math.abs(angleSpan) < barMinAngle) {\r\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\r\n          }\r\n\r\n          r0 = radius + columnOffset;\r\n          r = r0 + columnWidth;\r\n          startAngle = baseCoord;\r\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\r\n          // add a round to differentiate it from origin\r\n          // var extent = angleAxis.getExtent();\r\n          // var stackCoord = angle;\r\n          // if (stackCoord === extent[0] && value > 0) {\r\n          //     stackCoord = extent[1];\r\n          // }\r\n          // else if (stackCoord === extent[1] && value < 0) {\r\n          //     stackCoord = extent[0];\r\n          // }\r\n\r\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\r\n        }\r\n\r\n      data.setItemLayout(idx, {\r\n        cx: cx,\r\n        cy: cy,\r\n        r0: r0,\r\n        r: r,\r\n        // Consider that positive angle is anti-clockwise,\r\n        // while positive radian of sector is clockwise\r\n        startAngle: -startAngle * Math.PI / 180,\r\n        endAngle: -endAngle * Math.PI / 180\r\n      });\r\n    }\r\n  }, this);\r\n}\r\n/**\r\n * Calculate bar width and offset for radial bar charts\r\n */\r\n\r\n\r\nfunction calRadialBar(barSeries, api) {\r\n  // Columns info on each category axis. Key is polar name\r\n  var columnsMap = {};\r\n  zrUtil.each(barSeries, function (seriesModel, idx) {\r\n    var data = seriesModel.getData();\r\n    var polar = seriesModel.coordinateSystem;\r\n    var baseAxis = polar.getBaseAxis();\r\n    var axisKey = getAxisKey(polar, baseAxis);\r\n    var axisExtent = baseAxis.getExtent();\r\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\r\n    var columnsOnAxis = columnsMap[axisKey] || {\r\n      bandWidth: bandWidth,\r\n      remainedWidth: bandWidth,\r\n      autoWidthCount: 0,\r\n      categoryGap: '20%',\r\n      gap: '30%',\r\n      stacks: {}\r\n    };\r\n    var stacks = columnsOnAxis.stacks;\r\n    columnsMap[axisKey] = columnsOnAxis;\r\n    var stackId = getSeriesStackId(seriesModel);\r\n\r\n    if (!stacks[stackId]) {\r\n      columnsOnAxis.autoWidthCount++;\r\n    }\r\n\r\n    stacks[stackId] = stacks[stackId] || {\r\n      width: 0,\r\n      maxWidth: 0\r\n    };\r\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\r\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\r\n    var barGap = seriesModel.get('barGap');\r\n    var barCategoryGap = seriesModel.get('barCategoryGap');\r\n\r\n    if (barWidth && !stacks[stackId].width) {\r\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\r\n      stacks[stackId].width = barWidth;\r\n      columnsOnAxis.remainedWidth -= barWidth;\r\n    }\r\n\r\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\r\n    barGap != null && (columnsOnAxis.gap = barGap);\r\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\r\n  });\r\n  var result = {};\r\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\r\n    result[coordSysName] = {};\r\n    var stacks = columnsOnAxis.stacks;\r\n    var bandWidth = columnsOnAxis.bandWidth;\r\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\r\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\r\n    var remainedWidth = columnsOnAxis.remainedWidth;\r\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\r\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\r\n\r\n    zrUtil.each(stacks, function (column, stack) {\r\n      var maxWidth = column.maxWidth;\r\n\r\n      if (maxWidth && maxWidth < autoWidth) {\r\n        maxWidth = Math.min(maxWidth, remainedWidth);\r\n\r\n        if (column.width) {\r\n          maxWidth = Math.min(maxWidth, column.width);\r\n        }\r\n\r\n        remainedWidth -= maxWidth;\r\n        column.width = maxWidth;\r\n        autoWidthCount--;\r\n      }\r\n    }); // Recalculate width again\r\n\r\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n    autoWidth = Math.max(autoWidth, 0);\r\n    var widthSum = 0;\r\n    var lastColumn;\r\n    zrUtil.each(stacks, function (column, idx) {\r\n      if (!column.width) {\r\n        column.width = autoWidth;\r\n      }\r\n\r\n      lastColumn = column;\r\n      widthSum += column.width * (1 + barGapPercent);\r\n    });\r\n\r\n    if (lastColumn) {\r\n      widthSum -= lastColumn.width * barGapPercent;\r\n    }\r\n\r\n    var offset = -widthSum / 2;\r\n    zrUtil.each(stacks, function (column, stackId) {\r\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\r\n        offset: offset,\r\n        width: column.width\r\n      };\r\n      offset += column.width * (1 + barGapPercent);\r\n    });\r\n  });\r\n  return result;\r\n}\r\n\r\nvar _default = barLayoutPolar;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar map = _util.map;\r\n\r\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\r\n\r\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\r\n\r\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Float32Array */\r\nfunction _default(seriesType) {\r\n  return {\r\n    seriesType: seriesType,\r\n    plan: createRenderPlanner(),\r\n    reset: function (seriesModel) {\r\n      var data = seriesModel.getData();\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      var pipelineContext = seriesModel.pipelineContext;\r\n      var isLargeRender = pipelineContext.large;\r\n\r\n      if (!coordSys) {\r\n        return;\r\n      }\r\n\r\n      var dims = map(coordSys.dimensions, function (dim) {\r\n        return data.mapDimension(dim);\r\n      }).slice(0, 2);\r\n      var dimLen = dims.length;\r\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\r\n\r\n      if (isDimensionStacked(data, dims[0]\r\n      /*, dims[1]*/\r\n      )) {\r\n        dims[0] = stackResultDim;\r\n      }\r\n\r\n      if (isDimensionStacked(data, dims[1]\r\n      /*, dims[0]*/\r\n      )) {\r\n        dims[1] = stackResultDim;\r\n      }\r\n\r\n      function progress(params, data) {\r\n        var segCount = params.end - params.start;\r\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\r\n\r\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\r\n          var point;\r\n\r\n          if (dimLen === 1) {\r\n            var x = data.get(dims[0], i);\r\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\r\n          } else {\r\n            var x = tmpIn[0] = data.get(dims[0], i);\r\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\r\n\r\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\r\n          }\r\n\r\n          if (isLargeRender) {\r\n            points[offset++] = point ? point[0] : NaN;\r\n            points[offset++] = point ? point[1] : NaN;\r\n          } else {\r\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\r\n          }\r\n        }\r\n\r\n        isLargeRender && data.setLayout('symbolPoints', points);\r\n      }\r\n\r\n      return dimLen && {\r\n        progress: progress\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../util/graphic\");\r\n\r\nvar textContain = require(\"zrender/lib/contain/text\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PI = Math.PI;\r\n/**\r\n * @param {module:echarts/ExtensionAPI} api\r\n * @param {Object} [opts]\r\n * @param {string} [opts.text]\r\n * @param {string} [opts.color]\r\n * @param {string} [opts.textColor]\r\n * @return {module:zrender/Element}\r\n */\r\n\r\nfunction _default(api, opts) {\r\n  opts = opts || {};\r\n  zrUtil.defaults(opts, {\r\n    text: 'loading',\r\n    textColor: '#000',\r\n    fontSize: '12px',\r\n    maskColor: 'rgba(255, 255, 255, 0.8)',\r\n    showSpinner: true,\r\n    color: '#c23531',\r\n    spinnerRadius: 10,\r\n    lineWidth: 5,\r\n    zlevel: 0\r\n  });\r\n  var group = new graphic.Group();\r\n  var mask = new graphic.Rect({\r\n    style: {\r\n      fill: opts.maskColor\r\n    },\r\n    zlevel: opts.zlevel,\r\n    z: 10000\r\n  });\r\n  group.add(mask);\r\n  var font = opts.fontSize + ' sans-serif';\r\n  var labelRect = new graphic.Rect({\r\n    style: {\r\n      fill: 'none',\r\n      text: opts.text,\r\n      font: font,\r\n      textPosition: 'right',\r\n      textDistance: 10,\r\n      textFill: opts.textColor\r\n    },\r\n    zlevel: opts.zlevel,\r\n    z: 10001\r\n  });\r\n  group.add(labelRect);\r\n\r\n  if (opts.showSpinner) {\r\n    var arc = new graphic.Arc({\r\n      shape: {\r\n        startAngle: -PI / 2,\r\n        endAngle: -PI / 2 + 0.1,\r\n        r: opts.spinnerRadius\r\n      },\r\n      style: {\r\n        stroke: opts.color,\r\n        lineCap: 'round',\r\n        lineWidth: opts.lineWidth\r\n      },\r\n      zlevel: opts.zlevel,\r\n      z: 10001\r\n    });\r\n    arc.animateShape(true).when(1000, {\r\n      endAngle: PI * 3 / 2\r\n    }).start('circularInOut');\r\n    arc.animateShape(true).when(1000, {\r\n      startAngle: PI * 3 / 2\r\n    }).delay(300).start('circularInOut');\r\n    group.add(arc);\r\n  } // Inject resize\r\n\r\n\r\n  group.resize = function () {\r\n    var textWidth = textContain.getWidth(opts.text, font);\r\n    var r = opts.showSpinner ? opts.spinnerRadius : 0; // cx = (containerWidth - arcDiameter - textDistance - textWidth) / 2\r\n    // textDistance needs to be calculated when both animation and text exist\r\n\r\n    var cx = (api.getWidth() - r * 2 - (opts.showSpinner && textWidth ? 10 : 0) - textWidth) / 2 // only show the text\r\n    - (opts.showSpinner ? 0 : textWidth / 2);\r\n    var cy = api.getHeight() / 2;\r\n    opts.showSpinner && arc.setShape({\r\n      cx: cx,\r\n      cy: cy\r\n    });\r\n    labelRect.setShape({\r\n      x: cx - r,\r\n      y: cy - r,\r\n      width: r * 2,\r\n      height: r * 2\r\n    });\r\n    mask.setShape({\r\n      x: 0,\r\n      y: 0,\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n  };\r\n\r\n  group.resize();\r\n  return group;\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Model = require(\"./Model\");\r\n\r\nvar componentUtil = require(\"../util/component\");\r\n\r\nvar _clazz = require(\"../util/clazz\");\r\n\r\nvar enableClassManagement = _clazz.enableClassManagement;\r\nvar parseClassType = _clazz.parseClassType;\r\n\r\nvar _model = require(\"../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\nvar layout = require(\"../util/layout\");\r\n\r\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Component model\r\n *\r\n * @module echarts/model/Component\r\n */\r\nvar inner = makeInner();\r\n/**\r\n * @alias module:echarts/model/Component\r\n * @constructor\r\n * @param {Object} option\r\n * @param {module:echarts/model/Model} parentModel\r\n * @param {module:echarts/model/Model} ecModel\r\n */\r\n\r\nvar ComponentModel = Model.extend({\r\n  type: 'component',\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {string}\r\n   */\r\n  id: '',\r\n\r\n  /**\r\n   * Because simplified concept is probably better, series.name (or component.name)\r\n   * has been having too many resposibilities:\r\n   * (1) Generating id (which requires name in option should not be modified).\r\n   * (2) As an index to mapping series when merging option or calling API (a name\r\n   * can refer to more then one components, which is convinient is some case).\r\n   * (3) Display.\r\n   * @readOnly\r\n   */\r\n  name: '',\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {string}\r\n   */\r\n  mainType: '',\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {string}\r\n   */\r\n  subType: '',\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {number}\r\n   */\r\n  componentIndex: 0,\r\n\r\n  /**\r\n   * @type {Object}\r\n   * @protected\r\n   */\r\n  defaultOption: null,\r\n\r\n  /**\r\n   * @type {module:echarts/model/Global}\r\n   * @readOnly\r\n   */\r\n  ecModel: null,\r\n\r\n  /**\r\n   * key: componentType\r\n   * value:  Component model list, can not be null.\r\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\r\n   * @readOnly\r\n   */\r\n  dependentModels: [],\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readOnly\r\n   */\r\n  uid: null,\r\n\r\n  /**\r\n   * Support merge layout params.\r\n   * Only support 'box' now (left/right/top/bottom/width/height).\r\n   * @type {string|Object} Object can be {ignoreSize: true}\r\n   * @readOnly\r\n   */\r\n  layoutMode: null,\r\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\r\n    Model.call(this, option, parentModel, ecModel, extraOpt);\r\n    this.uid = componentUtil.getUID('ec_cpt_model');\r\n  },\r\n  init: function (option, parentModel, ecModel, extraOpt) {\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n  },\r\n  mergeDefaultAndTheme: function (option, ecModel) {\r\n    var layoutMode = this.layoutMode;\r\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\r\n    var themeModel = ecModel.getTheme();\r\n    zrUtil.merge(option, themeModel.get(this.mainType));\r\n    zrUtil.merge(option, this.getDefaultOption());\r\n\r\n    if (layoutMode) {\r\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n    }\r\n  },\r\n  mergeOption: function (option, extraOpt) {\r\n    zrUtil.merge(this.option, option, true);\r\n    var layoutMode = this.layoutMode;\r\n\r\n    if (layoutMode) {\r\n      layout.mergeLayoutParam(this.option, option, layoutMode);\r\n    }\r\n  },\r\n  // Hooker after init or mergeOption\r\n  optionUpdated: function (newCptOption, isInit) {},\r\n  getDefaultOption: function () {\r\n    var fields = inner(this);\r\n\r\n    if (!fields.defaultOption) {\r\n      var optList = [];\r\n      var Class = this.constructor;\r\n\r\n      while (Class) {\r\n        var opt = Class.prototype.defaultOption;\r\n        opt && optList.push(opt);\r\n        Class = Class.superClass;\r\n      }\r\n\r\n      var defaultOption = {};\r\n\r\n      for (var i = optList.length - 1; i >= 0; i--) {\r\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\r\n      }\r\n\r\n      fields.defaultOption = defaultOption;\r\n    }\r\n\r\n    return fields.defaultOption;\r\n  },\r\n  getReferringComponents: function (mainType) {\r\n    return this.ecModel.queryComponents({\r\n      mainType: mainType,\r\n      index: this.get(mainType + 'Index', true),\r\n      id: this.get(mainType + 'Id', true)\r\n    });\r\n  }\r\n}); // Reset ComponentModel.extend, add preConstruct.\r\n// clazzUtil.enableClassExtend(\r\n//     ComponentModel,\r\n//     function (option, parentModel, ecModel, extraOpt) {\r\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\r\n//         zrUtil.extend(this, extraOpt);\r\n//         this.uid = componentUtil.getUID('componentModel');\r\n//         // this.setReadOnly([\r\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\r\n//         //     'dependentModels', 'componentIndex'\r\n//         // ]);\r\n//     }\r\n// );\r\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n\r\nenableClassManagement(ComponentModel, {\r\n  registerWhenExtend: true\r\n});\r\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\r\n\r\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\r\n\r\nfunction getDependencies(componentType) {\r\n  var deps = [];\r\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\r\n    deps = deps.concat(Clazz.prototype.dependencies || []);\r\n  }); // Ensure main type.\r\n\r\n  deps = zrUtil.map(deps, function (type) {\r\n    return parseClassType(type).main;\r\n  }); // Hack dataset for convenience.\r\n\r\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\r\n    deps.unshift('dataset');\r\n  }\r\n\r\n  return deps;\r\n}\r\n\r\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\r\nvar _default = ComponentModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\nvar filter = _util.filter;\r\nvar map = _util.map;\r\nvar isArray = _util.isArray;\r\nvar indexOf = _util.indexOf;\r\nvar isObject = _util.isObject;\r\nvar isString = _util.isString;\r\nvar createHashMap = _util.createHashMap;\r\nvar assert = _util.assert;\r\nvar clone = _util.clone;\r\nvar merge = _util.merge;\r\nvar extend = _util.extend;\r\nvar mixin = _util.mixin;\r\n\r\nvar modelUtil = require(\"../util/model\");\r\n\r\nvar Model = require(\"./Model\");\r\n\r\nvar ComponentModel = require(\"./Component\");\r\n\r\nvar globalDefault = require(\"./globalDefault\");\r\n\r\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\r\n\r\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\r\n\r\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * ECharts global model\r\n *\r\n * @module {echarts/model/Global}\r\n */\r\n\r\n/**\r\n * Caution: If the mechanism should be changed some day, these cases\r\n * should be considered:\r\n *\r\n * (1) In `merge option` mode, if using the same option to call `setOption`\r\n * many times, the result should be the same (try our best to ensure that).\r\n * (2) In `merge option` mode, if a component has no id/name specified, it\r\n * will be merged by index, and the result sequence of the components is\r\n * consistent to the original sequence.\r\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\r\n * `mergeOption` in module:echarts/model/OptionManager.\r\n */\r\nvar OPTION_INNER_KEY = '\\0_ec_inner';\r\n/**\r\n * @alias module:echarts/model/Global\r\n *\r\n * @param {Object} option\r\n * @param {module:echarts/model/Model} parentModel\r\n * @param {Object} theme\r\n */\r\n\r\nvar GlobalModel = Model.extend({\r\n  init: function (option, parentModel, theme, optionManager) {\r\n    theme = theme || {};\r\n    this.option = null; // Mark as not initialized.\r\n\r\n    /**\r\n     * @type {module:echarts/model/Model}\r\n     * @private\r\n     */\r\n\r\n    this._theme = new Model(theme);\r\n    /**\r\n     * @type {module:echarts/model/OptionManager}\r\n     */\r\n\r\n    this._optionManager = optionManager;\r\n  },\r\n  setOption: function (option, optionPreprocessorFuncs) {\r\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\r\n\r\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\r\n\r\n    this.resetOption(null);\r\n  },\r\n\r\n  /**\r\n   * @param {string} type null/undefined: reset all.\r\n   *                      'recreate': force recreate all.\r\n   *                      'timeline': only reset timeline option\r\n   *                      'media': only reset media query option\r\n   * @return {boolean} Whether option changed.\r\n   */\r\n  resetOption: function (type) {\r\n    var optionChanged = false;\r\n    var optionManager = this._optionManager;\r\n\r\n    if (!type || type === 'recreate') {\r\n      var baseOption = optionManager.mountOption(type === 'recreate');\r\n\r\n      if (!this.option || type === 'recreate') {\r\n        initBase.call(this, baseOption);\r\n      } else {\r\n        this.restoreData();\r\n        this.mergeOption(baseOption);\r\n      }\r\n\r\n      optionChanged = true;\r\n    }\r\n\r\n    if (type === 'timeline' || type === 'media') {\r\n      this.restoreData();\r\n    }\r\n\r\n    if (!type || type === 'recreate' || type === 'timeline') {\r\n      var timelineOption = optionManager.getTimelineOption(this);\r\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\r\n    }\r\n\r\n    if (!type || type === 'recreate' || type === 'media') {\r\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\r\n\r\n      if (mediaOptions.length) {\r\n        each(mediaOptions, function (mediaOption) {\r\n          this.mergeOption(mediaOption, optionChanged = true);\r\n        }, this);\r\n      }\r\n    }\r\n\r\n    return optionChanged;\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  mergeOption: function (newOption) {\r\n    var option = this.option;\r\n    var componentsMap = this._componentsMap;\r\n    var newCptTypes = [];\r\n    resetSourceDefaulter(this); // If no component class, merge directly.\r\n    // For example: color, animaiton options, etc.\r\n\r\n    each(newOption, function (componentOption, mainType) {\r\n      if (componentOption == null) {\r\n        return;\r\n      }\r\n\r\n      if (!ComponentModel.hasClass(mainType)) {\r\n        // globalSettingTask.dirty();\r\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\r\n      } else if (mainType) {\r\n        newCptTypes.push(mainType);\r\n      }\r\n    });\r\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\r\n\r\n    function visitComponent(mainType, dependencies) {\r\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\r\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\r\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\r\n\r\n      each(mapResult, function (item, index) {\r\n        var opt = item.option;\r\n\r\n        if (isObject(opt)) {\r\n          item.keyInfo.mainType = mainType;\r\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\r\n        }\r\n      });\r\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\r\n      option[mainType] = [];\r\n      componentsMap.set(mainType, []);\r\n      each(mapResult, function (resultItem, index) {\r\n        var componentModel = resultItem.exist;\r\n        var newCptOption = resultItem.option;\r\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\r\n        // see removeEdgeAndAdd in topologicalTravel and\r\n        // ComponentModel.getAllClassMainTypes.\r\n\r\n        if (!newCptOption) {\r\n          componentModel.mergeOption({}, this);\r\n          componentModel.optionUpdated({}, false);\r\n        } else {\r\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\r\n\r\n          if (componentModel && componentModel.constructor === ComponentModelClass) {\r\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\r\n\r\n            componentModel.mergeOption(newCptOption, this);\r\n            componentModel.optionUpdated(newCptOption, false);\r\n          } else {\r\n            // PENDING Global as parent ?\r\n            var extraOpt = extend({\r\n              dependentModels: dependentModels,\r\n              componentIndex: index\r\n            }, resultItem.keyInfo);\r\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\r\n            extend(componentModel, extraOpt);\r\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\r\n            // newCptOption has been used as componentModel.option\r\n            // and may be merged with theme and default, so pass null\r\n            // to avoid confusion.\r\n\r\n            componentModel.optionUpdated(null, true);\r\n          }\r\n        }\r\n\r\n        componentsMap.get(mainType)[index] = componentModel;\r\n        option[mainType][index] = componentModel.option;\r\n      }, this); // Backup series for filtering.\r\n\r\n      if (mainType === 'series') {\r\n        createSeriesIndices(this, componentsMap.get('series'));\r\n      }\r\n    }\r\n\r\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\r\n  },\r\n\r\n  /**\r\n   * Get option for output (cloned option and inner info removed)\r\n   * @public\r\n   * @return {Object}\r\n   */\r\n  getOption: function () {\r\n    var option = clone(this.option);\r\n    each(option, function (opts, mainType) {\r\n      if (ComponentModel.hasClass(mainType)) {\r\n        var opts = modelUtil.normalizeToArray(opts);\r\n\r\n        for (var i = opts.length - 1; i >= 0; i--) {\r\n          // Remove options with inner id.\r\n          if (modelUtil.isIdInner(opts[i])) {\r\n            opts.splice(i, 1);\r\n          }\r\n        }\r\n\r\n        option[mainType] = opts;\r\n      }\r\n    });\r\n    delete option[OPTION_INNER_KEY];\r\n    return option;\r\n  },\r\n\r\n  /**\r\n   * @return {module:echarts/model/Model}\r\n   */\r\n  getTheme: function () {\r\n    return this._theme;\r\n  },\r\n\r\n  /**\r\n   * @param {string} mainType\r\n   * @param {number} [idx=0]\r\n   * @return {module:echarts/model/Component}\r\n   */\r\n  getComponent: function (mainType, idx) {\r\n    var list = this._componentsMap.get(mainType);\r\n\r\n    if (list) {\r\n      return list[idx || 0];\r\n    }\r\n  },\r\n\r\n  /**\r\n   * If none of index and id and name used, return all components with mainType.\r\n   * @param {Object} condition\r\n   * @param {string} condition.mainType\r\n   * @param {string} [condition.subType] If ignore, only query by mainType\r\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\r\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\r\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\r\n   * @return {Array.<module:echarts/model/Component>}\r\n   */\r\n  queryComponents: function (condition) {\r\n    var mainType = condition.mainType;\r\n\r\n    if (!mainType) {\r\n      return [];\r\n    }\r\n\r\n    var index = condition.index;\r\n    var id = condition.id;\r\n    var name = condition.name;\r\n\r\n    var cpts = this._componentsMap.get(mainType);\r\n\r\n    if (!cpts || !cpts.length) {\r\n      return [];\r\n    }\r\n\r\n    var result;\r\n\r\n    if (index != null) {\r\n      if (!isArray(index)) {\r\n        index = [index];\r\n      }\r\n\r\n      result = filter(map(index, function (idx) {\r\n        return cpts[idx];\r\n      }), function (val) {\r\n        return !!val;\r\n      });\r\n    } else if (id != null) {\r\n      var isIdArray = isArray(id);\r\n      result = filter(cpts, function (cpt) {\r\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\r\n      });\r\n    } else if (name != null) {\r\n      var isNameArray = isArray(name);\r\n      result = filter(cpts, function (cpt) {\r\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\r\n      });\r\n    } else {\r\n      // Return all components with mainType\r\n      result = cpts.slice();\r\n    }\r\n\r\n    return filterBySubType(result, condition);\r\n  },\r\n\r\n  /**\r\n   * The interface is different from queryComponents,\r\n   * which is convenient for inner usage.\r\n   *\r\n   * @usage\r\n   * var result = findComponents(\r\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\r\n   * );\r\n   * var result = findComponents(\r\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\r\n   * );\r\n   * var result = findComponents(\r\n   *     {mainType: 'series',\r\n   *     filter: function (model, index) {...}}\r\n   * );\r\n   * // result like [component0, componnet1, ...]\r\n   *\r\n   * @param {Object} condition\r\n   * @param {string} condition.mainType Mandatory.\r\n   * @param {string} [condition.subType] Optional.\r\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\r\n   *        where xxx is mainType.\r\n   *        If query attribute is null/undefined or has no index/id/name,\r\n   *        do not filtering by query conditions, which is convenient for\r\n   *        no-payload situations or when target of action is global.\r\n   * @param {Function} [condition.filter] parameter: component, return boolean.\r\n   * @return {Array.<module:echarts/model/Component>}\r\n   */\r\n  findComponents: function (condition) {\r\n    var query = condition.query;\r\n    var mainType = condition.mainType;\r\n    var queryCond = getQueryCond(query);\r\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\r\n    return doFilter(filterBySubType(result, condition));\r\n\r\n    function getQueryCond(q) {\r\n      var indexAttr = mainType + 'Index';\r\n      var idAttr = mainType + 'Id';\r\n      var nameAttr = mainType + 'Name';\r\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\r\n        mainType: mainType,\r\n        // subType will be filtered finally.\r\n        index: q[indexAttr],\r\n        id: q[idAttr],\r\n        name: q[nameAttr]\r\n      } : null;\r\n    }\r\n\r\n    function doFilter(res) {\r\n      return condition.filter ? filter(res, condition.filter) : res;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @usage\r\n   * eachComponent('legend', function (legendModel, index) {\r\n   *     ...\r\n   * });\r\n   * eachComponent(function (componentType, model, index) {\r\n   *     // componentType does not include subType\r\n   *     // (componentType is 'xxx' but not 'xxx.aa')\r\n   * });\r\n   * eachComponent(\r\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\r\n   *     function (model, index) {...}\r\n   * );\r\n   * eachComponent(\r\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\r\n   *     function (model, index) {...}\r\n   * );\r\n   *\r\n   * @param {string|Object=} mainType When mainType is object, the definition\r\n   *                                  is the same as the method 'findComponents'.\r\n   * @param {Function} cb\r\n   * @param {*} context\r\n   */\r\n  eachComponent: function (mainType, cb, context) {\r\n    var componentsMap = this._componentsMap;\r\n\r\n    if (typeof mainType === 'function') {\r\n      context = cb;\r\n      cb = mainType;\r\n      componentsMap.each(function (components, componentType) {\r\n        each(components, function (component, index) {\r\n          cb.call(context, componentType, component, index);\r\n        });\r\n      });\r\n    } else if (isString(mainType)) {\r\n      each(componentsMap.get(mainType), cb, context);\r\n    } else if (isObject(mainType)) {\r\n      var queryResult = this.findComponents(mainType);\r\n      each(queryResult, cb, context);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {string} name\r\n   * @return {Array.<module:echarts/model/Series>}\r\n   */\r\n  getSeriesByName: function (name) {\r\n    var series = this._componentsMap.get('series');\r\n\r\n    return filter(series, function (oneSeries) {\r\n      return oneSeries.name === name;\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @param {number} seriesIndex\r\n   * @return {module:echarts/model/Series}\r\n   */\r\n  getSeriesByIndex: function (seriesIndex) {\r\n    return this._componentsMap.get('series')[seriesIndex];\r\n  },\r\n\r\n  /**\r\n   * Get series list before filtered by type.\r\n   * FIXME: rename to getRawSeriesByType?\r\n   *\r\n   * @param {string} subType\r\n   * @return {Array.<module:echarts/model/Series>}\r\n   */\r\n  getSeriesByType: function (subType) {\r\n    var series = this._componentsMap.get('series');\r\n\r\n    return filter(series, function (oneSeries) {\r\n      return oneSeries.subType === subType;\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<module:echarts/model/Series>}\r\n   */\r\n  getSeries: function () {\r\n    return this._componentsMap.get('series').slice();\r\n  },\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  getSeriesCount: function () {\r\n    return this._componentsMap.get('series').length;\r\n  },\r\n\r\n  /**\r\n   * After filtering, series may be different\r\n   * frome raw series.\r\n   *\r\n   * @param {Function} cb\r\n   * @param {*} context\r\n   */\r\n  eachSeries: function (cb, context) {\r\n    assertSeriesInitialized(this);\r\n    each(this._seriesIndices, function (rawSeriesIndex) {\r\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\r\n\r\n      cb.call(context, series, rawSeriesIndex);\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * Iterate raw series before filtered.\r\n   *\r\n   * @param {Function} cb\r\n   * @param {*} context\r\n   */\r\n  eachRawSeries: function (cb, context) {\r\n    each(this._componentsMap.get('series'), cb, context);\r\n  },\r\n\r\n  /**\r\n   * After filtering, series may be different.\r\n   * frome raw series.\r\n   *\r\n   * @param {string} subType.\r\n   * @param {Function} cb\r\n   * @param {*} context\r\n   */\r\n  eachSeriesByType: function (subType, cb, context) {\r\n    assertSeriesInitialized(this);\r\n    each(this._seriesIndices, function (rawSeriesIndex) {\r\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\r\n\r\n      if (series.subType === subType) {\r\n        cb.call(context, series, rawSeriesIndex);\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * Iterate raw series before filtered of given type.\r\n   *\r\n   * @parma {string} subType\r\n   * @param {Function} cb\r\n   * @param {*} context\r\n   */\r\n  eachRawSeriesByType: function (subType, cb, context) {\r\n    return each(this.getSeriesByType(subType), cb, context);\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/model/Series} seriesModel\r\n   */\r\n  isSeriesFiltered: function (seriesModel) {\r\n    assertSeriesInitialized(this);\r\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<number>}\r\n   */\r\n  getCurrentSeriesIndices: function () {\r\n    return (this._seriesIndices || []).slice();\r\n  },\r\n\r\n  /**\r\n   * @param {Function} cb\r\n   * @param {*} context\r\n   */\r\n  filterSeries: function (cb, context) {\r\n    assertSeriesInitialized(this);\r\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\r\n    createSeriesIndices(this, filteredSeries);\r\n  },\r\n  restoreData: function (payload) {\r\n    var componentsMap = this._componentsMap;\r\n    createSeriesIndices(this, componentsMap.get('series'));\r\n    var componentTypes = [];\r\n    componentsMap.each(function (components, componentType) {\r\n      componentTypes.push(componentType);\r\n    });\r\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\r\n      each(componentsMap.get(componentType), function (component) {\r\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\r\n      });\r\n    });\r\n  }\r\n});\r\n\r\nfunction isNotTargetSeries(seriesModel, payload) {\r\n  if (payload) {\r\n    var index = payload.seiresIndex;\r\n    var id = payload.seriesId;\r\n    var name = payload.seriesName;\r\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\r\n  }\r\n}\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction mergeTheme(option, theme) {\r\n  // PENDING\r\n  // NOT use `colorLayer` in theme if option has `color`\r\n  var notMergeColorLayer = option.color && !option.colorLayer;\r\n  each(theme, function (themeItem, name) {\r\n    if (name === 'colorLayer' && notMergeColorLayer) {\r\n      return;\r\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\r\n\r\n\r\n    if (!ComponentModel.hasClass(name)) {\r\n      if (typeof themeItem === 'object') {\r\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\r\n      } else {\r\n        if (option[name] == null) {\r\n          option[name] = themeItem;\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction initBase(baseOption) {\r\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\r\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\r\n\r\n  this.option = {};\r\n  this.option[OPTION_INNER_KEY] = 1;\r\n  /**\r\n   * Init with series: [], in case of calling findSeries method\r\n   * before series initialized.\r\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\r\n   * @private\r\n   */\r\n\r\n  this._componentsMap = createHashMap({\r\n    series: []\r\n  });\r\n  /**\r\n   * Mapping between filtered series list and raw series list.\r\n   * key: filtered series indices, value: raw series indices.\r\n   * @type {Array.<nubmer>}\r\n   * @private\r\n   */\r\n\r\n  this._seriesIndices;\r\n  this._seriesIndicesMap;\r\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\r\n\r\n  merge(baseOption, globalDefault, false);\r\n  this.mergeOption(baseOption);\r\n}\r\n/**\r\n * @inner\r\n * @param {Array.<string>|string} types model types\r\n * @return {Object} key: {string} type, value: {Array.<Object>} models\r\n */\r\n\r\n\r\nfunction getComponentsByTypes(componentsMap, types) {\r\n  if (!isArray(types)) {\r\n    types = types ? [types] : [];\r\n  }\r\n\r\n  var ret = {};\r\n  each(types, function (type) {\r\n    ret[type] = (componentsMap.get(type) || []).slice();\r\n  });\r\n  return ret;\r\n}\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction determineSubType(mainType, newCptOption, existComponent) {\r\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\r\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\r\n\r\n  return subType;\r\n}\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction createSeriesIndices(ecModel, seriesModels) {\r\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\r\n    return series.componentIndex;\r\n  }) || []);\r\n}\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction filterBySubType(components, condition) {\r\n  // Using hasOwnProperty for restrict. Consider\r\n  // subType is undefined in user payload.\r\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\r\n    return cpt.subType === condition.subType;\r\n  }) : components;\r\n}\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction assertSeriesInitialized(ecModel) {}\r\n\r\nmixin(GlobalModel, colorPaletteMixin);\r\nvar _default = GlobalModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar _model = require(\"../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\nvar _clazz = require(\"../util/clazz\");\r\n\r\nvar enableClassExtend = _clazz.enableClassExtend;\r\nvar enableClassCheck = _clazz.enableClassCheck;\r\n\r\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\r\n\r\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\r\n\r\nvar textStyleMixin = require(\"./mixin/textStyle\");\r\n\r\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/model/Model\r\n */\r\nvar mixin = zrUtil.mixin;\r\nvar inner = makeInner();\r\n/**\r\n * @alias module:echarts/model/Model\r\n * @constructor\r\n * @param {Object} [option]\r\n * @param {module:echarts/model/Model} [parentModel]\r\n * @param {module:echarts/model/Global} [ecModel]\r\n */\r\n\r\nfunction Model(option, parentModel, ecModel) {\r\n  /**\r\n   * @type {module:echarts/model/Model}\r\n   * @readOnly\r\n   */\r\n  this.parentModel = parentModel;\r\n  /**\r\n   * @type {module:echarts/model/Global}\r\n   * @readOnly\r\n   */\r\n\r\n  this.ecModel = ecModel;\r\n  /**\r\n   * @type {Object}\r\n   * @protected\r\n   */\r\n\r\n  this.option = option; // Simple optimization\r\n  // if (this.init) {\r\n  //     if (arguments.length <= 4) {\r\n  //         this.init(option, parentModel, ecModel, extraOpt);\r\n  //     }\r\n  //     else {\r\n  //         this.init.apply(this, arguments);\r\n  //     }\r\n  // }\r\n}\r\n\r\nModel.prototype = {\r\n  constructor: Model,\r\n\r\n  /**\r\n   * Model 的初始化函数\r\n   * @param {Object} option\r\n   */\r\n  init: null,\r\n\r\n  /**\r\n   * 从新的 Option merge\r\n   */\r\n  mergeOption: function (option) {\r\n    zrUtil.merge(this.option, option, true);\r\n  },\r\n\r\n  /**\r\n   * @param {string|Array.<string>} path\r\n   * @param {boolean} [ignoreParent=false]\r\n   * @return {*}\r\n   */\r\n  get: function (path, ignoreParent) {\r\n    if (path == null) {\r\n      return this.option;\r\n    }\r\n\r\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\r\n  },\r\n\r\n  /**\r\n   * @param {string} key\r\n   * @param {boolean} [ignoreParent=false]\r\n   * @return {*}\r\n   */\r\n  getShallow: function (key, ignoreParent) {\r\n    var option = this.option;\r\n    var val = option == null ? option : option[key];\r\n    var parentModel = !ignoreParent && getParent(this, key);\r\n\r\n    if (val == null && parentModel) {\r\n      val = parentModel.getShallow(key);\r\n    }\r\n\r\n    return val;\r\n  },\r\n\r\n  /**\r\n   * @param {string|Array.<string>} [path]\r\n   * @param {module:echarts/model/Model} [parentModel]\r\n   * @return {module:echarts/model/Model}\r\n   */\r\n  getModel: function (path, parentModel) {\r\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\r\n    var thisParentModel;\r\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\r\n    return new Model(obj, parentModel, this.ecModel);\r\n  },\r\n\r\n  /**\r\n   * If model has option\r\n   */\r\n  isEmpty: function () {\r\n    return this.option == null;\r\n  },\r\n  restoreData: function () {},\r\n  // Pending\r\n  clone: function () {\r\n    var Ctor = this.constructor;\r\n    return new Ctor(zrUtil.clone(this.option));\r\n  },\r\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\r\n  },\r\n  // If path is null/undefined, return null/undefined.\r\n  parsePath: function (path) {\r\n    if (typeof path === 'string') {\r\n      path = path.split('.');\r\n    }\r\n\r\n    return path;\r\n  },\r\n\r\n  /**\r\n   * @param {Function} getParentMethod\r\n   *        param {Array.<string>|string} path\r\n   *        return {module:echarts/model/Model}\r\n   */\r\n  customizeGetParent: function (getParentMethod) {\r\n    inner(this).getParent = getParentMethod;\r\n  },\r\n  isAnimationEnabled: function () {\r\n    if (!env.node) {\r\n      if (this.option.animation != null) {\r\n        return !!this.option.animation;\r\n      } else if (this.parentModel) {\r\n        return this.parentModel.isAnimationEnabled();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction doGet(obj, pathArr, parentModel) {\r\n  for (var i = 0; i < pathArr.length; i++) {\r\n    // Ignore empty\r\n    if (!pathArr[i]) {\r\n      continue;\r\n    } // obj could be number/string/... (like 0)\r\n\r\n\r\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\r\n\r\n    if (obj == null) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (obj == null && parentModel) {\r\n    obj = parentModel.get(pathArr);\r\n  }\r\n\r\n  return obj;\r\n} // `path` can be null/undefined\r\n\r\n\r\nfunction getParent(model, path) {\r\n  var getParentMethod = inner(model).getParent;\r\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\r\n} // Enable Model.extend.\r\n\r\n\r\nenableClassExtend(Model);\r\nenableClassCheck(Model);\r\nmixin(Model, lineStyleMixin);\r\nmixin(Model, areaStyleMixin);\r\nmixin(Model, textStyleMixin);\r\nmixin(Model, itemStyleMixin);\r\nvar _default = Model;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar modelUtil = require(\"../util/model\");\r\n\r\nvar ComponentModel = require(\"./Component\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * ECharts option manager\r\n *\r\n * @module {echarts/model/OptionManager}\r\n */\r\nvar each = zrUtil.each;\r\nvar clone = zrUtil.clone;\r\nvar map = zrUtil.map;\r\nvar merge = zrUtil.merge;\r\nvar QUERY_REG = /^(min|max)?(.+)$/;\r\n/**\r\n * TERM EXPLANATIONS:\r\n *\r\n * [option]:\r\n *\r\n *     An object that contains definitions of components. For example:\r\n *     var option = {\r\n *         title: {...},\r\n *         legend: {...},\r\n *         visualMap: {...},\r\n *         series: [\r\n *             {data: [...]},\r\n *             {data: [...]},\r\n *             ...\r\n *         ]\r\n *     };\r\n *\r\n * [rawOption]:\r\n *\r\n *     An object input to echarts.setOption. 'rawOption' may be an\r\n *     'option', or may be an object contains multi-options. For example:\r\n *     var option = {\r\n *         baseOption: {\r\n *             title: {...},\r\n *             legend: {...},\r\n *             series: [\r\n *                 {data: [...]},\r\n *                 {data: [...]},\r\n *                 ...\r\n *             ]\r\n *         },\r\n *         timeline: {...},\r\n *         options: [\r\n *             {title: {...}, series: {data: [...]}},\r\n *             {title: {...}, series: {data: [...]}},\r\n *             ...\r\n *         ],\r\n *         media: [\r\n *             {\r\n *                 query: {maxWidth: 320},\r\n *                 option: {series: {x: 20}, visualMap: {show: false}}\r\n *             },\r\n *             {\r\n *                 query: {minWidth: 320, maxWidth: 720},\r\n *                 option: {series: {x: 500}, visualMap: {show: true}}\r\n *             },\r\n *             {\r\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\r\n *             }\r\n *         ]\r\n *     };\r\n *\r\n * @alias module:echarts/model/OptionManager\r\n * @param {module:echarts/ExtensionAPI} api\r\n */\r\n\r\nfunction OptionManager(api) {\r\n  /**\r\n   * @private\r\n   * @type {module:echarts/ExtensionAPI}\r\n   */\r\n  this._api = api;\r\n  /**\r\n   * @private\r\n   * @type {Array.<number>}\r\n   */\r\n\r\n  this._timelineOptions = [];\r\n  /**\r\n   * @private\r\n   * @type {Array.<Object>}\r\n   */\r\n\r\n  this._mediaList = [];\r\n  /**\r\n   * @private\r\n   * @type {Object}\r\n   */\r\n\r\n  this._mediaDefault;\r\n  /**\r\n   * -1, means default.\r\n   * empty means no media.\r\n   * @private\r\n   * @type {Array.<number>}\r\n   */\r\n\r\n  this._currentMediaIndices = [];\r\n  /**\r\n   * @private\r\n   * @type {Object}\r\n   */\r\n\r\n  this._optionBackup;\r\n  /**\r\n   * @private\r\n   * @type {Object}\r\n   */\r\n\r\n  this._newBaseOption;\r\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\r\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\r\n// rawOption cloned and backuped when timeline changed, which does no\r\n// good to performance. What's more, that both timeline and setOption\r\n// method supply 'notMerge' brings complex and some problems.\r\n// Consider this case:\r\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\r\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\r\n\r\n\r\nOptionManager.prototype = {\r\n  constructor: OptionManager,\r\n\r\n  /**\r\n   * @public\r\n   * @param {Object} rawOption Raw option.\r\n   * @param {module:echarts/model/Global} ecModel\r\n   * @param {Array.<Function>} optionPreprocessorFuncs\r\n   * @return {Object} Init option\r\n   */\r\n  setOption: function (rawOption, optionPreprocessorFuncs) {\r\n    if (rawOption) {\r\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\r\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\r\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\r\n      });\r\n    } // Caution: some series modify option data, if do not clone,\r\n    // it should ensure that the repeat modify correctly\r\n    // (create a new object when modify itself).\r\n\r\n\r\n    rawOption = clone(rawOption); // FIXME\r\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\r\n\r\n    var oldOptionBackup = this._optionBackup;\r\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\r\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\r\n\r\n    if (oldOptionBackup) {\r\n      // Only baseOption can be merged.\r\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\r\n      // that is, if you `setOption` twice and both has timeline options, the latter\r\n      // timeline opitons will not be merged to the formers, but just substitude them.\r\n\r\n      if (newParsedOption.timelineOptions.length) {\r\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\r\n      }\r\n\r\n      if (newParsedOption.mediaList.length) {\r\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\r\n      }\r\n\r\n      if (newParsedOption.mediaDefault) {\r\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\r\n      }\r\n    } else {\r\n      this._optionBackup = newParsedOption;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {boolean} isRecreate\r\n   * @return {Object}\r\n   */\r\n  mountOption: function (isRecreate) {\r\n    var optionBackup = this._optionBackup; // TODO\r\n    // 如果没有reset功能则不clone。\r\n\r\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\r\n    this._mediaList = map(optionBackup.mediaList, clone);\r\n    this._mediaDefault = clone(optionBackup.mediaDefault);\r\n    this._currentMediaIndices = [];\r\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\r\n    // called, and is merged into every new option by inner method `mergeOption`\r\n    // each time `setOption` called, can be only used in `isRecreate`, because\r\n    // its reliability is under suspicion. In other cases option merge is\r\n    // performed by `model.mergeOption`.\r\n    ? optionBackup.baseOption : this._newBaseOption);\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/model/Global} ecModel\r\n   * @return {Object}\r\n   */\r\n  getTimelineOption: function (ecModel) {\r\n    var option;\r\n    var timelineOptions = this._timelineOptions;\r\n\r\n    if (timelineOptions.length) {\r\n      // getTimelineOption can only be called after ecModel inited,\r\n      // so we can get currentIndex from timelineModel.\r\n      var timelineModel = ecModel.getComponent('timeline');\r\n\r\n      if (timelineModel) {\r\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\r\n      }\r\n    }\r\n\r\n    return option;\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/model/Global} ecModel\r\n   * @return {Array.<Object>}\r\n   */\r\n  getMediaOption: function (ecModel) {\r\n    var ecWidth = this._api.getWidth();\r\n\r\n    var ecHeight = this._api.getHeight();\r\n\r\n    var mediaList = this._mediaList;\r\n    var mediaDefault = this._mediaDefault;\r\n    var indices = [];\r\n    var result = []; // No media defined.\r\n\r\n    if (!mediaList.length && !mediaDefault) {\r\n      return result;\r\n    } // Multi media may be applied, the latter defined media has higher priority.\r\n\r\n\r\n    for (var i = 0, len = mediaList.length; i < len; i++) {\r\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\r\n        indices.push(i);\r\n      }\r\n    } // FIXME\r\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\r\n\r\n\r\n    if (!indices.length && mediaDefault) {\r\n      indices = [-1];\r\n    }\r\n\r\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\r\n      result = map(indices, function (index) {\r\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\r\n      });\r\n    } // Otherwise return nothing.\r\n\r\n\r\n    this._currentMediaIndices = indices;\r\n    return result;\r\n  }\r\n};\r\n\r\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\r\n  var timelineOptions = [];\r\n  var mediaList = [];\r\n  var mediaDefault;\r\n  var baseOption; // Compatible with ec2.\r\n\r\n  var timelineOpt = rawOption.timeline;\r\n\r\n  if (rawOption.baseOption) {\r\n    baseOption = rawOption.baseOption;\r\n  } // For timeline\r\n\r\n\r\n  if (timelineOpt || rawOption.options) {\r\n    baseOption = baseOption || {};\r\n    timelineOptions = (rawOption.options || []).slice();\r\n  } // For media query\r\n\r\n\r\n  if (rawOption.media) {\r\n    baseOption = baseOption || {};\r\n    var media = rawOption.media;\r\n    each(media, function (singleMedia) {\r\n      if (singleMedia && singleMedia.option) {\r\n        if (singleMedia.query) {\r\n          mediaList.push(singleMedia);\r\n        } else if (!mediaDefault) {\r\n          // Use the first media default.\r\n          mediaDefault = singleMedia;\r\n        }\r\n      }\r\n    });\r\n  } // For normal option\r\n\r\n\r\n  if (!baseOption) {\r\n    baseOption = rawOption;\r\n  } // Set timelineOpt to baseOption in ec3,\r\n  // which is convenient for merge option.\r\n\r\n\r\n  if (!baseOption.timeline) {\r\n    baseOption.timeline = timelineOpt;\r\n  } // Preprocess.\r\n\r\n\r\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\r\n    return media.option;\r\n  })), function (option) {\r\n    each(optionPreprocessorFuncs, function (preProcess) {\r\n      preProcess(option, isNew);\r\n    });\r\n  });\r\n  return {\r\n    baseOption: baseOption,\r\n    timelineOptions: timelineOptions,\r\n    mediaDefault: mediaDefault,\r\n    mediaList: mediaList\r\n  };\r\n}\r\n/**\r\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\r\n * Support: width, height, aspectRatio\r\n * Can use max or min as prefix.\r\n */\r\n\r\n\r\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\r\n  var realMap = {\r\n    width: ecWidth,\r\n    height: ecHeight,\r\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\r\n\r\n  };\r\n  var applicatable = true;\r\n  zrUtil.each(query, function (value, attr) {\r\n    var matched = attr.match(QUERY_REG);\r\n\r\n    if (!matched || !matched[1] || !matched[2]) {\r\n      return;\r\n    }\r\n\r\n    var operator = matched[1];\r\n    var realAttr = matched[2].toLowerCase();\r\n\r\n    if (!compare(realMap[realAttr], value, operator)) {\r\n      applicatable = false;\r\n    }\r\n  });\r\n  return applicatable;\r\n}\r\n\r\nfunction compare(real, expect, operator) {\r\n  if (operator === 'min') {\r\n    return real >= expect;\r\n  } else if (operator === 'max') {\r\n    return real <= expect;\r\n  } else {\r\n    // Equals\r\n    return real === expect;\r\n  }\r\n}\r\n\r\nfunction indicesEquals(indices1, indices2) {\r\n  // indices is always order by asc and has only finite number.\r\n  return indices1.join(',') === indices2.join(',');\r\n}\r\n/**\r\n * Consider case:\r\n * `chart.setOption(opt1);`\r\n * Then user do some interaction like dataZoom, dataView changing.\r\n * `chart.setOption(opt2);`\r\n * Then user press 'reset button' in toolbox.\r\n *\r\n * After doing that all of the interaction effects should be reset, the\r\n * chart should be the same as the result of invoke\r\n * `chart.setOption(opt1); chart.setOption(opt2);`.\r\n *\r\n * Although it is not able ensure that\r\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\r\n * `chart.setOption(merge(opt1, opt2));` exactly,\r\n * this might be the only simple way to implement that feature.\r\n *\r\n * MEMO: We've considered some other approaches:\r\n * 1. Each model handle its self restoration but not uniform treatment.\r\n *     (Too complex in logic and error-prone)\r\n * 2. Use a shadow ecModel. (Performace expensive)\r\n */\r\n\r\n\r\nfunction mergeOption(oldOption, newOption) {\r\n  newOption = newOption || {};\r\n  each(newOption, function (newCptOpt, mainType) {\r\n    if (newCptOpt == null) {\r\n      return;\r\n    }\r\n\r\n    var oldCptOpt = oldOption[mainType];\r\n\r\n    if (!ComponentModel.hasClass(mainType)) {\r\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\r\n    } else {\r\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\r\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\r\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\r\n      oldOption[mainType] = map(mapResult, function (item) {\r\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nvar _default = OptionManager;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar _format = require(\"../util/format\");\r\n\r\nvar formatTime = _format.formatTime;\r\nvar encodeHTML = _format.encodeHTML;\r\nvar addCommas = _format.addCommas;\r\nvar getTooltipMarker = _format.getTooltipMarker;\r\n\r\nvar modelUtil = require(\"../util/model\");\r\n\r\nvar ComponentModel = require(\"./Component\");\r\n\r\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\r\n\r\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\r\n\r\nvar _layout = require(\"../util/layout\");\r\n\r\nvar getLayoutParams = _layout.getLayoutParams;\r\nvar mergeLayoutParam = _layout.mergeLayoutParam;\r\n\r\nvar _task = require(\"../stream/task\");\r\n\r\nvar createTask = _task.createTask;\r\n\r\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\r\n\r\nvar prepareSource = _sourceHelper.prepareSource;\r\nvar getSource = _sourceHelper.getSource;\r\n\r\nvar _dataProvider = require(\"../data/helper/dataProvider\");\r\n\r\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = modelUtil.makeInner();\r\nvar SeriesModel = ComponentModel.extend({\r\n  type: 'series.__base__',\r\n\r\n  /**\r\n   * @readOnly\r\n   */\r\n  seriesIndex: 0,\r\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\r\n  coordinateSystem: null,\r\n\r\n  /**\r\n   * @type {Object}\r\n   * @protected\r\n   */\r\n  defaultOption: null,\r\n\r\n  /**\r\n   * legend visual provider to the legend component\r\n   * @type {Object}\r\n   */\r\n  // PENDING\r\n  legendVisualProvider: null,\r\n\r\n  /**\r\n   * Access path of color for visual\r\n   */\r\n  visualColorAccessPath: 'itemStyle.color',\r\n\r\n  /**\r\n   * Access path of borderColor for visual\r\n   */\r\n  visualBorderColorAccessPath: 'itemStyle.borderColor',\r\n\r\n  /**\r\n   * Support merge layout params.\r\n   * Only support 'box' now (left/right/top/bottom/width/height).\r\n   * @type {string|Object} Object can be {ignoreSize: true}\r\n   * @readOnly\r\n   */\r\n  layoutMode: null,\r\n  init: function (option, parentModel, ecModel, extraOpt) {\r\n    /**\r\n     * @type {number}\r\n     * @readOnly\r\n     */\r\n    this.seriesIndex = this.componentIndex;\r\n    this.dataTask = createTask({\r\n      count: dataTaskCount,\r\n      reset: dataTaskReset\r\n    });\r\n    this.dataTask.context = {\r\n      model: this\r\n    };\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n    prepareSource(this);\r\n    var data = this.getInitialData(option, ecModel);\r\n    wrapData(data, this);\r\n    this.dataTask.context.data = data;\r\n\r\n    /**\r\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\r\n     * @private\r\n     */\r\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\r\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\r\n    // cause data.graph.data !== data when using\r\n    // module:echarts/data/Graph or module:echarts/data/Tree.\r\n    // See module:echarts/data/helper/linkList\r\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\r\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\r\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\r\n    // Call `seriesModel.getRawData()` instead.\r\n    // this.restoreData();\r\n\r\n    autoSeriesName(this);\r\n  },\r\n\r\n  /**\r\n   * Util for merge default and theme to option\r\n   * @param  {Object} option\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   */\r\n  mergeDefaultAndTheme: function (option, ecModel) {\r\n    var layoutMode = this.layoutMode;\r\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\r\n    // But if name duplicate between series subType\r\n    // (for example: parallel) add component mainType,\r\n    // add suffix 'Series'.\r\n\r\n    var themeSubType = this.subType;\r\n\r\n    if (ComponentModel.hasClass(themeSubType)) {\r\n      themeSubType += 'Series';\r\n    }\r\n\r\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\r\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\r\n\r\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\r\n    this.fillDataTextStyle(option.data);\r\n\r\n    if (layoutMode) {\r\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n    }\r\n  },\r\n  mergeOption: function (newSeriesOption, ecModel) {\r\n    // this.settingTask.dirty();\r\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\r\n    this.fillDataTextStyle(newSeriesOption.data);\r\n    var layoutMode = this.layoutMode;\r\n\r\n    if (layoutMode) {\r\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\r\n    }\r\n\r\n    prepareSource(this);\r\n    var data = this.getInitialData(newSeriesOption, ecModel);\r\n    wrapData(data, this);\r\n    this.dataTask.dirty();\r\n    this.dataTask.context.data = data;\r\n    inner(this).dataBeforeProcessed = data;\r\n    autoSeriesName(this);\r\n  },\r\n  fillDataTextStyle: function (data) {\r\n    // Default data label emphasis `show`\r\n    // FIXME Tree structure data ?\r\n    // FIXME Performance ?\r\n    if (data && !zrUtil.isTypedArray(data)) {\r\n      var props = ['show'];\r\n\r\n      for (var i = 0; i < data.length; i++) {\r\n        if (data[i] && data[i].label) {\r\n          modelUtil.defaultEmphasis(data[i], 'label', props);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Init a data structure from data related option in series\r\n   * Must be overwritten\r\n   */\r\n  getInitialData: function () {},\r\n\r\n  /**\r\n   * Append data to list\r\n   * @param {Object} params\r\n   * @param {Array|TypedArray} params.data\r\n   */\r\n  appendData: function (params) {\r\n    // FIXME ???\r\n    // (1) If data from dataset, forbidden append.\r\n    // (2) support append data of dataset.\r\n    var data = this.getRawData();\r\n    data.appendData(params.data);\r\n  },\r\n\r\n  /**\r\n   * Consider some method like `filter`, `map` need make new data,\r\n   * We should make sure that `seriesModel.getData()` get correct\r\n   * data in the stream procedure. So we fetch data from upstream\r\n   * each time `task.perform` called.\r\n   * @param {string} [dataType]\r\n   * @return {module:echarts/data/List}\r\n   */\r\n  getData: function (dataType) {\r\n    var task = getCurrentTask(this);\r\n\r\n    if (task) {\r\n      var data = task.context.data;\r\n      return dataType == null ? data : data.getLinkedData(dataType);\r\n    } else {\r\n      // When series is not alive (that may happen when click toolbox\r\n      // restore or setOption with not merge mode), series data may\r\n      // be still need to judge animation or something when graphic\r\n      // elements want to know whether fade out.\r\n      return inner(this).data;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {module:echarts/data/List} data\r\n   */\r\n  setData: function (data) {\r\n    var task = getCurrentTask(this);\r\n\r\n    if (task) {\r\n      var context = task.context; // Consider case: filter, data sample.\r\n\r\n      if (context.data !== data && task.modifyOutputEnd) {\r\n        task.setOutputEnd(data.count());\r\n      }\r\n\r\n      context.outputData = data; // Caution: setData should update context.data,\r\n      // Because getData may be called multiply in a\r\n      // single stage and expect to get the data just\r\n      // set. (For example, AxisProxy, x y both call\r\n      // getData and setDate sequentially).\r\n      // So the context.data should be fetched from\r\n      // upstream each time when a stage starts to be\r\n      // performed.\r\n\r\n      if (task !== this.dataTask) {\r\n        context.data = data;\r\n      }\r\n    }\r\n\r\n    inner(this).data = data;\r\n  },\r\n\r\n  /**\r\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\r\n   * @return {module:echarts/data/Source} source\r\n   */\r\n  getSource: function () {\r\n    return getSource(this);\r\n  },\r\n\r\n  /**\r\n   * Get data before processed\r\n   * @return {module:echarts/data/List}\r\n   */\r\n  getRawData: function () {\r\n    return inner(this).dataBeforeProcessed;\r\n  },\r\n\r\n  /**\r\n   * Get base axis if has coordinate system and has axis.\r\n   * By default use coordSys.getBaseAxis();\r\n   * Can be overrided for some chart.\r\n   * @return {type} description\r\n   */\r\n  getBaseAxis: function () {\r\n    var coordSys = this.coordinateSystem;\r\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\r\n  },\r\n  // FIXME\r\n\r\n  /**\r\n   * Default tooltip formatter\r\n   *\r\n   * @param {number} dataIndex\r\n   * @param {boolean} [multipleSeries=false]\r\n   * @param {number} [dataType]\r\n   * @param {string} [renderMode='html'] valid values: 'html' and 'richText'.\r\n   *                                     'html' is used for rendering tooltip in extra DOM form, and the result\r\n   *                                     string is used as DOM HTML content.\r\n   *                                     'richText' is used for rendering tooltip in rich text form, for those where\r\n   *                                     DOM operation is not supported.\r\n   * @return {Object} formatted tooltip with `html` and `markers`\r\n   */\r\n  formatTooltip: function (dataIndex, multipleSeries, dataType, renderMode) {\r\n    var series = this;\r\n    renderMode = renderMode || 'html';\r\n    var newLine = renderMode === 'html' ? '<br/>' : '\\n';\r\n    var isRichText = renderMode === 'richText';\r\n    var markers = {};\r\n    var markerId = 0;\r\n\r\n    function formatArrayValue(value) {\r\n      // ??? TODO refactor these logic.\r\n      // check: category-no-encode-has-axis-data in dataset.html\r\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\r\n        var dimItem = data.getDimensionInfo(idx);\r\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\r\n      }, 0);\r\n      var result = [];\r\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\r\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\r\n      }) // By default, all dims is used on tooltip.\r\n      : zrUtil.each(value, setEachItem);\r\n\r\n      function setEachItem(val, dim) {\r\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\r\n\r\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\r\n          return;\r\n        }\r\n\r\n        var dimType = dimInfo.type;\r\n        var markName = 'sub' + series.seriesIndex + 'at' + markerId;\r\n        var dimHead = getTooltipMarker({\r\n          color: color,\r\n          type: 'subItem',\r\n          renderMode: renderMode,\r\n          markerId: markName\r\n        });\r\n        var dimHeadStr = typeof dimHead === 'string' ? dimHead : dimHead.content;\r\n        var valStr = (vertially ? dimHeadStr + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\r\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\r\n        valStr && result.push(valStr);\r\n\r\n        if (isRichText) {\r\n          markers[markName] = color;\r\n          ++markerId;\r\n        }\r\n      }\r\n\r\n      var newLine = vertially ? isRichText ? '\\n' : '<br/>' : '';\r\n      var content = newLine + result.join(newLine || ', ');\r\n      return {\r\n        renderMode: renderMode,\r\n        content: content,\r\n        style: markers\r\n      };\r\n    }\r\n\r\n    function formatSingleValue(val) {\r\n      // return encodeHTML(addCommas(val));\r\n      return {\r\n        renderMode: renderMode,\r\n        content: encodeHTML(addCommas(val)),\r\n        style: markers\r\n      };\r\n    }\r\n\r\n    var data = this.getData();\r\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\r\n    var tooltipDimLen = tooltipDims.length;\r\n    var value = this.getRawValue(dataIndex);\r\n    var isValueArr = zrUtil.isArray(value);\r\n    var color = data.getItemVisual(dataIndex, 'color');\r\n\r\n    if (zrUtil.isObject(color) && color.colorStops) {\r\n      color = (color.colorStops[0] || {}).color;\r\n    }\r\n\r\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\r\n\r\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\r\n    var content = formattedValue.content;\r\n    var markName = series.seriesIndex + 'at' + markerId;\r\n    var colorEl = getTooltipMarker({\r\n      color: color,\r\n      type: 'item',\r\n      renderMode: renderMode,\r\n      markerId: markName\r\n    });\r\n    markers[markName] = color;\r\n    ++markerId;\r\n    var name = data.getName(dataIndex);\r\n    var seriesName = this.name;\r\n\r\n    if (!modelUtil.isNameSpecified(this)) {\r\n      seriesName = '';\r\n    }\r\n\r\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? newLine : ': ') : '';\r\n    var colorStr = typeof colorEl === 'string' ? colorEl : colorEl.content;\r\n    var html = !multipleSeries ? seriesName + colorStr + (name ? encodeHTML(name) + ': ' + content : content) : colorStr + seriesName + content;\r\n    return {\r\n      html: html,\r\n      markers: markers\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  isAnimationEnabled: function () {\r\n    if (env.node) {\r\n      return false;\r\n    }\r\n\r\n    var animationEnabled = this.getShallow('animation');\r\n\r\n    if (animationEnabled) {\r\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\r\n        animationEnabled = false;\r\n      }\r\n    }\r\n\r\n    return animationEnabled;\r\n  },\r\n  restoreData: function () {\r\n    this.dataTask.dirty();\r\n  },\r\n  getColorFromPalette: function (name, scope, requestColorNum) {\r\n    var ecModel = this.ecModel; // PENDING\r\n\r\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\r\n\r\n    if (!color) {\r\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\r\n    }\r\n\r\n    return color;\r\n  },\r\n\r\n  /**\r\n   * Use `data.mapDimension(coordDim, true)` instead.\r\n   * @deprecated\r\n   */\r\n  coordDimToDataDim: function (coordDim) {\r\n    return this.getRawData().mapDimension(coordDim, true);\r\n  },\r\n\r\n  /**\r\n   * Get progressive rendering count each step\r\n   * @return {number}\r\n   */\r\n  getProgressive: function () {\r\n    return this.get('progressive');\r\n  },\r\n\r\n  /**\r\n   * Get progressive rendering count each step\r\n   * @return {number}\r\n   */\r\n  getProgressiveThreshold: function () {\r\n    return this.get('progressiveThreshold');\r\n  },\r\n\r\n  /**\r\n   * Get data indices for show tooltip content. See tooltip.\r\n   * @abstract\r\n   * @param {Array.<string>|string} dim\r\n   * @param {Array.<number>} value\r\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\r\n   * @return {Object} {dataIndices, nestestValue}.\r\n   */\r\n  getAxisTooltipData: null,\r\n\r\n  /**\r\n   * See tooltip.\r\n   * @abstract\r\n   * @param {number} dataIndex\r\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\r\n   */\r\n  getTooltipPosition: null,\r\n\r\n  /**\r\n   * @see {module:echarts/stream/Scheduler}\r\n   */\r\n  pipeTask: null,\r\n\r\n  /**\r\n   * Convinient for override in extended class.\r\n   * @protected\r\n   * @type {Function}\r\n   */\r\n  preventIncremental: null,\r\n\r\n  /**\r\n   * @public\r\n   * @readOnly\r\n   * @type {Object}\r\n   */\r\n  pipelineContext: null\r\n});\r\nzrUtil.mixin(SeriesModel, dataFormatMixin);\r\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\r\n/**\r\n * MUST be called after `prepareSource` called\r\n * Here we need to make auto series, especially for auto legend. But we\r\n * do not modify series.name in option to avoid side effects.\r\n */\r\n\r\nfunction autoSeriesName(seriesModel) {\r\n  // User specified name has higher priority, otherwise it may cause\r\n  // series can not be queried unexpectedly.\r\n  var name = seriesModel.name;\r\n\r\n  if (!modelUtil.isNameSpecified(seriesModel)) {\r\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\r\n  }\r\n}\r\n\r\nfunction getSeriesAutoName(seriesModel) {\r\n  var data = seriesModel.getRawData();\r\n  var dataDims = data.mapDimension('seriesName', true);\r\n  var nameArr = [];\r\n  zrUtil.each(dataDims, function (dataDim) {\r\n    var dimInfo = data.getDimensionInfo(dataDim);\r\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\r\n  });\r\n  return nameArr.join(' ');\r\n}\r\n\r\nfunction dataTaskCount(context) {\r\n  return context.model.getRawData().count();\r\n}\r\n\r\nfunction dataTaskReset(context) {\r\n  var seriesModel = context.model;\r\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\r\n  return dataTaskProgress;\r\n}\r\n\r\nfunction dataTaskProgress(param, context) {\r\n  // Avoid repead cloneShallow when data just created in reset.\r\n  if (context.outputData && param.end > context.outputData.count()) {\r\n    context.model.getRawData().cloneShallow(context.outputData);\r\n  }\r\n} // TODO refactor\r\n\r\n\r\nfunction wrapData(data, seriesModel) {\r\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\r\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\r\n  });\r\n}\r\n\r\nfunction onDataSelfChange(seriesModel) {\r\n  var task = getCurrentTask(seriesModel);\r\n\r\n  if (task) {\r\n    // Consider case: filter, selectRange\r\n    task.setOutputEnd(this.count());\r\n  }\r\n}\r\n\r\nfunction getCurrentTask(seriesModel) {\r\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\r\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\r\n\r\n  if (pipeline) {\r\n    // When pipline finished, the currrentTask keep the last\r\n    // task (renderTask).\r\n    var task = pipeline.currentTask;\r\n\r\n    if (task) {\r\n      var agentStubMap = task.agentStubMap;\r\n\r\n      if (agentStubMap) {\r\n        task = agentStubMap.get(seriesModel.uid);\r\n      }\r\n    }\r\n\r\n    return task;\r\n  }\r\n}\r\n\r\nvar _default = SeriesModel;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar platform = ''; // Navigator not exists in node\r\n\r\nif (typeof navigator !== 'undefined') {\r\n  platform = navigator.platform || '';\r\n}\r\n\r\nvar _default = {\r\n  // backgroundColor: 'rgba(0,0,0,0)',\r\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\r\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\r\n  // Light colors:\r\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\r\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\r\n  // Dark colors:\r\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\r\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\r\n  // If xAxis and yAxis declared, grid is created by default.\r\n  // grid: {},\r\n  textStyle: {\r\n    // color: '#000',\r\n    // decoration: 'none',\r\n    // PENDING\r\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\r\n    // fontFamily: 'Arial, Verdana, sans-serif',\r\n    fontSize: 12,\r\n    fontStyle: 'normal',\r\n    fontWeight: 'normal'\r\n  },\r\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\r\n  // Default is source-over\r\n  blendMode: null,\r\n  animation: 'auto',\r\n  animationDuration: 1000,\r\n  animationDurationUpdate: 300,\r\n  animationEasing: 'exponentialOut',\r\n  animationEasingUpdate: 'cubicOut',\r\n  animationThreshold: 2000,\r\n  // Configuration for progressive/incremental rendering\r\n  progressiveThreshold: 3000,\r\n  progressive: 400,\r\n  // Threshold of if use single hover layer to optimize.\r\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\r\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\r\n  // which is unexpected.\r\n  // see example <echarts/test/heatmap-large.html>.\r\n  hoverLayerThreshold: 3000,\r\n  // See: module:echarts/scale/Time\r\n  useUTC: false\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar makeStyleMapper = require(\"./makeStyleMapper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\r\nvar _default = {\r\n  getAreaStyle: function (excludes, includes) {\r\n    return getAreaStyle(this, excludes, includes);\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = {\r\n  getBoxLayoutParams: function () {\r\n    return {\r\n      left: this.get('left'),\r\n      top: this.get('top'),\r\n      right: this.get('right'),\r\n      bottom: this.get('bottom'),\r\n      width: this.get('width'),\r\n      height: this.get('height')\r\n    };\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\nvar normalizeToArray = _model.normalizeToArray;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = makeInner();\r\n\r\nfunction getNearestColorPalette(colors, requestColorNum) {\r\n  var paletteNum = colors.length; // TODO colors must be in order\r\n\r\n  for (var i = 0; i < paletteNum; i++) {\r\n    if (colors[i].length > requestColorNum) {\r\n      return colors[i];\r\n    }\r\n  }\r\n\r\n  return colors[paletteNum - 1];\r\n}\r\n\r\nvar _default = {\r\n  clearColorPalette: function () {\r\n    inner(this).colorIdx = 0;\r\n    inner(this).colorNameMap = {};\r\n  },\r\n\r\n  /**\r\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\r\n   *                 twise with the same parameters will get different result.\r\n   * @param {Object} [scope=this]\r\n   * @param {Object} [requestColorNum]\r\n   * @return {string} color string.\r\n   */\r\n  getColorFromPalette: function (name, scope, requestColorNum) {\r\n    scope = scope || this;\r\n    var scopeFields = inner(scope);\r\n    var colorIdx = scopeFields.colorIdx || 0;\r\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\r\n\r\n    if (colorNameMap.hasOwnProperty(name)) {\r\n      return colorNameMap[name];\r\n    }\r\n\r\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\r\n    var layeredColorPalette = this.get('colorLayer', true);\r\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\r\n\r\n    colorPalette = colorPalette || defaultColorPalette;\r\n\r\n    if (!colorPalette || !colorPalette.length) {\r\n      return;\r\n    }\r\n\r\n    var color = colorPalette[colorIdx];\r\n\r\n    if (name) {\r\n      colorNameMap[name] = color;\r\n    }\r\n\r\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\r\n    return color;\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\r\n\r\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar getTooltipMarker = _format.getTooltipMarker;\r\nvar formatTpl = _format.formatTpl;\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\r\n\r\nvar _default = {\r\n  /**\r\n   * Get params for formatter\r\n   * @param {number} dataIndex\r\n   * @param {string} [dataType]\r\n   * @return {Object}\r\n   */\r\n  getDataParams: function (dataIndex, dataType) {\r\n    var data = this.getData(dataType);\r\n    var rawValue = this.getRawValue(dataIndex, dataType);\r\n    var rawDataIndex = data.getRawIndex(dataIndex);\r\n    var name = data.getName(dataIndex);\r\n    var itemOpt = data.getRawDataItem(dataIndex);\r\n    var color = data.getItemVisual(dataIndex, 'color');\r\n    var borderColor = data.getItemVisual(dataIndex, 'borderColor');\r\n    var tooltipModel = this.ecModel.getComponent('tooltip');\r\n    var renderModeOption = tooltipModel && tooltipModel.get('renderMode');\r\n    var renderMode = getTooltipRenderMode(renderModeOption);\r\n    var mainType = this.mainType;\r\n    var isSeries = mainType === 'series';\r\n    var userOutput = data.userOutput;\r\n    return {\r\n      componentType: mainType,\r\n      componentSubType: this.subType,\r\n      componentIndex: this.componentIndex,\r\n      seriesType: isSeries ? this.subType : null,\r\n      seriesIndex: this.seriesIndex,\r\n      seriesId: isSeries ? this.id : null,\r\n      seriesName: isSeries ? this.name : null,\r\n      name: name,\r\n      dataIndex: rawDataIndex,\r\n      data: itemOpt,\r\n      dataType: dataType,\r\n      value: rawValue,\r\n      color: color,\r\n      borderColor: borderColor,\r\n      dimensionNames: userOutput ? userOutput.dimensionNames : null,\r\n      encode: userOutput ? userOutput.encode : null,\r\n      marker: getTooltipMarker({\r\n        color: color,\r\n        renderMode: renderMode\r\n      }),\r\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\r\n      $vars: ['seriesName', 'name', 'value']\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Format label\r\n   * @param {number} dataIndex\r\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\r\n   * @param {string} [dataType]\r\n   * @param {number} [dimIndex] Only used in some chart that\r\n   *        use formatter in different dimensions, like radar.\r\n   * @param {string} [labelProp='label']\r\n   * @return {string} If not formatter, return null/undefined\r\n   */\r\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\r\n    status = status || 'normal';\r\n    var data = this.getData(dataType);\r\n    var itemModel = data.getItemModel(dataIndex);\r\n    var params = this.getDataParams(dataIndex, dataType);\r\n\r\n    if (dimIndex != null && params.value instanceof Array) {\r\n      params.value = params.value[dimIndex];\r\n    }\r\n\r\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\r\n\r\n    if (typeof formatter === 'function') {\r\n      params.status = status;\r\n      params.dimensionIndex = dimIndex;\r\n      return formatter(params);\r\n    } else if (typeof formatter === 'string') {\r\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\r\n      // Do not support '}' in dim name util have to.\r\n\r\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\r\n        var len = dim.length;\r\n\r\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\r\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\r\n        }\r\n\r\n        return retrieveRawValue(data, dataIndex, dim);\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get raw value in option\r\n   * @param {number} idx\r\n   * @param {string} [dataType]\r\n   * @return {Array|number|string}\r\n   */\r\n  getRawValue: function (idx, dataType) {\r\n    return retrieveRawValue(this.getData(dataType), idx);\r\n  },\r\n\r\n  /**\r\n   * Should be implemented.\r\n   * @param {number} dataIndex\r\n   * @param {boolean} [multipleSeries=false]\r\n   * @param {number} [dataType]\r\n   * @return {string} tooltip string\r\n   */\r\n  formatTooltip: function () {// Empty function\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar makeStyleMapper = require(\"./makeStyleMapper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\r\nvar _default = {\r\n  getItemStyle: function (excludes, includes) {\r\n    var style = getItemStyle(this, excludes, includes);\r\n    var lineDash = this.getBorderLineDash();\r\n    lineDash && (style.lineDash = lineDash);\r\n    return style;\r\n  },\r\n  getBorderLineDash: function () {\r\n    var lineType = this.get('borderType');\r\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar makeStyleMapper = require(\"./makeStyleMapper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\r\nvar _default = {\r\n  getLineStyle: function (excludes) {\r\n    var style = getLineStyle(this, excludes); // Always set lineDash whether dashed, otherwise we can not\r\n    // erase the previous style when assigning to el.style.\r\n\r\n    style.lineDash = this.getLineDash(style.lineWidth);\r\n    return style;\r\n  },\r\n  getLineDash: function (lineWidth) {\r\n    if (lineWidth == null) {\r\n      lineWidth = 1;\r\n    }\r\n\r\n    var lineType = this.get('type');\r\n    var dotSize = Math.max(lineWidth, 2);\r\n    var dashSize = lineWidth * 4;\r\n    return lineType === 'solid' || lineType == null ? // Use `false` but not `null` for the solid line here, because `null` might be\r\n    // ignored when assigning to `el.style`. e.g., when setting `lineStyle.type` as\r\n    // `'dashed'` and `emphasis.lineStyle.type` as `'solid'` in graph series, the\r\n    // `lineDash` gotten form the latter one is not able to erase that from the former\r\n    // one if using `null` here according to the emhpsis strategy in `util/graphic.js`.\r\n    false : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// TODO Parse shadow style\r\n// TODO Only shallow path support\r\nfunction _default(properties) {\r\n  // Normalize\r\n  for (var i = 0; i < properties.length; i++) {\r\n    if (!properties[i][1]) {\r\n      properties[i][1] = properties[i][0];\r\n    }\r\n  }\r\n\r\n  return function (model, excludes, includes) {\r\n    var style = {};\r\n\r\n    for (var i = 0; i < properties.length; i++) {\r\n      var propName = properties[i][1];\r\n\r\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\r\n        continue;\r\n      }\r\n\r\n      var val = model.getShallow(propName);\r\n\r\n      if (val != null) {\r\n        style[properties[i][0]] = val;\r\n      }\r\n    }\r\n\r\n    return style;\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar textContain = require(\"zrender/lib/contain/text\");\r\n\r\nvar graphicUtil = require(\"../../util/graphic\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PATH_COLOR = ['textStyle', 'color'];\r\nvar _default = {\r\n  /**\r\n   * Get color property or get color from option.textStyle.color\r\n   * @param {boolean} [isEmphasis]\r\n   * @return {string}\r\n   */\r\n  getTextColor: function (isEmphasis) {\r\n    var ecModel = this.ecModel;\r\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\r\n  },\r\n\r\n  /**\r\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\r\n   * @return {string}\r\n   */\r\n  getFont: function () {\r\n    return graphicUtil.getFont({\r\n      fontStyle: this.getShallow('fontStyle'),\r\n      fontWeight: this.getShallow('fontWeight'),\r\n      fontSize: this.getShallow('fontSize'),\r\n      fontFamily: this.getShallow('fontFamily')\r\n    }, this.ecModel);\r\n  },\r\n  getTextRect: function (text) {\r\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('lineHeight'), this.getShallow('rich'), this.getShallow('truncateText'));\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar retrieve = _util.retrieve;\r\nvar each = _util.each;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Helper for model references.\r\n * There are many manners to refer axis/coordSys.\r\n */\r\n// TODO\r\n// merge relevant logic to this file?\r\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\r\n\r\n/**\r\n * @class\r\n * For example:\r\n * {\r\n *     coordSysName: 'cartesian2d',\r\n *     coordSysDims: ['x', 'y', ...],\r\n *     axisMap: HashMap({\r\n *         x: xAxisModel,\r\n *         y: yAxisModel\r\n *     }),\r\n *     categoryAxisMap: HashMap({\r\n *         x: xAxisModel,\r\n *         y: undefined\r\n *     }),\r\n *     // The index of the first category axis in `coordSysDims`.\r\n *     // `null/undefined` means no category axis exists.\r\n *     firstCategoryDimIndex: 1,\r\n *     // To replace user specified encode.\r\n * }\r\n */\r\nfunction CoordSysInfo(coordSysName) {\r\n  /**\r\n   * @type {string}\r\n   */\r\n  this.coordSysName = coordSysName;\r\n  /**\r\n   * @type {Array.<string>}\r\n   */\r\n\r\n  this.coordSysDims = [];\r\n  /**\r\n   * @type {module:zrender/core/util#HashMap}\r\n   */\r\n\r\n  this.axisMap = createHashMap();\r\n  /**\r\n   * @type {module:zrender/core/util#HashMap}\r\n   */\r\n\r\n  this.categoryAxisMap = createHashMap();\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n  this.firstCategoryDimIndex = null;\r\n}\r\n/**\r\n * @return {module:model/referHelper#CoordSysInfo}\r\n */\r\n\r\n\r\nfunction getCoordSysInfoBySeries(seriesModel) {\r\n  var coordSysName = seriesModel.get('coordinateSystem');\r\n  var result = new CoordSysInfo(coordSysName);\r\n  var fetch = fetchers[coordSysName];\r\n\r\n  if (fetch) {\r\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\r\n    return result;\r\n  }\r\n}\r\n\r\nvar fetchers = {\r\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\r\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\r\n    result.coordSysDims = ['x', 'y'];\r\n    axisMap.set('x', xAxisModel);\r\n    axisMap.set('y', yAxisModel);\r\n\r\n    if (isCategory(xAxisModel)) {\r\n      categoryAxisMap.set('x', xAxisModel);\r\n      result.firstCategoryDimIndex = 0;\r\n    }\r\n\r\n    if (isCategory(yAxisModel)) {\r\n      categoryAxisMap.set('y', yAxisModel);\r\n      result.firstCategoryDimIndex == null & (result.firstCategoryDimIndex = 1);\r\n    }\r\n  },\r\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\r\n    result.coordSysDims = ['single'];\r\n    axisMap.set('single', singleAxisModel);\r\n\r\n    if (isCategory(singleAxisModel)) {\r\n      categoryAxisMap.set('single', singleAxisModel);\r\n      result.firstCategoryDimIndex = 0;\r\n    }\r\n  },\r\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\r\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\r\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\r\n    result.coordSysDims = ['radius', 'angle'];\r\n    axisMap.set('radius', radiusAxisModel);\r\n    axisMap.set('angle', angleAxisModel);\r\n\r\n    if (isCategory(radiusAxisModel)) {\r\n      categoryAxisMap.set('radius', radiusAxisModel);\r\n      result.firstCategoryDimIndex = 0;\r\n    }\r\n\r\n    if (isCategory(angleAxisModel)) {\r\n      categoryAxisMap.set('angle', angleAxisModel);\r\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\r\n    }\r\n  },\r\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n    result.coordSysDims = ['lng', 'lat'];\r\n  },\r\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n    var ecModel = seriesModel.ecModel;\r\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\r\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\r\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\r\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\r\n      var axisDim = coordSysDims[index];\r\n      axisMap.set(axisDim, axisModel);\r\n\r\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\r\n        categoryAxisMap.set(axisDim, axisModel);\r\n        result.firstCategoryDimIndex = index;\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nfunction isCategory(axisModel) {\r\n  return axisModel.get('type') === 'category';\r\n}\r\n\r\nexports.getCoordSysInfoBySeries = getCoordSysInfoBySeries;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\nvar isArray = _util.isArray;\r\nvar isObject = _util.isObject;\r\n\r\nvar compatStyle = require(\"./helper/compatStyle\");\r\n\r\nvar _model = require(\"../util/model\");\r\n\r\nvar normalizeToArray = _model.normalizeToArray;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Compatitable with 2.0\r\nfunction get(opt, path) {\r\n  path = path.split(',');\r\n  var obj = opt;\r\n\r\n  for (var i = 0; i < path.length; i++) {\r\n    obj = obj && obj[path[i]];\r\n\r\n    if (obj == null) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction set(opt, path, val, overwrite) {\r\n  path = path.split(',');\r\n  var obj = opt;\r\n  var key;\r\n\r\n  for (var i = 0; i < path.length - 1; i++) {\r\n    key = path[i];\r\n\r\n    if (obj[key] == null) {\r\n      obj[key] = {};\r\n    }\r\n\r\n    obj = obj[key];\r\n  }\r\n\r\n  if (overwrite || obj[path[i]] == null) {\r\n    obj[path[i]] = val;\r\n  }\r\n}\r\n\r\nfunction compatLayoutProperties(option) {\r\n  each(LAYOUT_PROPERTIES, function (prop) {\r\n    if (prop[0] in option && !(prop[1] in option)) {\r\n      option[prop[1]] = option[prop[0]];\r\n    }\r\n  });\r\n}\r\n\r\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\r\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\r\n\r\nfunction _default(option, isTheme) {\r\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\r\n\r\n  option.series = normalizeToArray(option.series);\r\n  each(option.series, function (seriesOpt) {\r\n    if (!isObject(seriesOpt)) {\r\n      return;\r\n    }\r\n\r\n    var seriesType = seriesOpt.type;\r\n\r\n    if (seriesType === 'line') {\r\n      if (seriesOpt.clipOverflow != null) {\r\n        seriesOpt.clip = seriesOpt.clipOverflow;\r\n      }\r\n    } else if (seriesType === 'pie' || seriesType === 'gauge') {\r\n      if (seriesOpt.clockWise != null) {\r\n        seriesOpt.clockwise = seriesOpt.clockWise;\r\n      }\r\n    } else if (seriesType === 'gauge') {\r\n      var pointerColor = get(seriesOpt, 'pointer.color');\r\n      pointerColor != null && set(seriesOpt, 'itemStyle.color', pointerColor);\r\n    }\r\n\r\n    compatLayoutProperties(seriesOpt);\r\n  }); // dataRange has changed to visualMap\r\n\r\n  if (option.dataRange) {\r\n    option.visualMap = option.dataRange;\r\n  }\r\n\r\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\r\n    var options = option[componentName];\r\n\r\n    if (options) {\r\n      if (!isArray(options)) {\r\n        options = [options];\r\n      }\r\n\r\n      each(options, function (option) {\r\n        compatLayoutProperties(option);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar isObject = zrUtil.isObject;\r\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\r\n\r\nfunction compatEC2ItemStyle(opt) {\r\n  var itemStyleOpt = opt && opt.itemStyle;\r\n\r\n  if (!itemStyleOpt) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\r\n    var styleName = POSSIBLE_STYLES[i];\r\n    var normalItemStyleOpt = itemStyleOpt.normal;\r\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\r\n\r\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\r\n      opt[styleName] = opt[styleName] || {};\r\n\r\n      if (!opt[styleName].normal) {\r\n        opt[styleName].normal = normalItemStyleOpt[styleName];\r\n      } else {\r\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\r\n      }\r\n\r\n      normalItemStyleOpt[styleName] = null;\r\n    }\r\n\r\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\r\n      opt[styleName] = opt[styleName] || {};\r\n\r\n      if (!opt[styleName].emphasis) {\r\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\r\n      } else {\r\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\r\n      }\r\n\r\n      emphasisItemStyleOpt[styleName] = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction convertNormalEmphasis(opt, optType, useExtend) {\r\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\r\n    var normalOpt = opt[optType].normal;\r\n    var emphasisOpt = opt[optType].emphasis;\r\n\r\n    if (normalOpt) {\r\n      // Timeline controlStyle has other properties besides normal and emphasis\r\n      if (useExtend) {\r\n        opt[optType].normal = opt[optType].emphasis = null;\r\n        zrUtil.defaults(opt[optType], normalOpt);\r\n      } else {\r\n        opt[optType] = normalOpt;\r\n      }\r\n    }\r\n\r\n    if (emphasisOpt) {\r\n      opt.emphasis = opt.emphasis || {};\r\n      opt.emphasis[optType] = emphasisOpt;\r\n    }\r\n  }\r\n}\r\n\r\nfunction removeEC3NormalStatus(opt) {\r\n  convertNormalEmphasis(opt, 'itemStyle');\r\n  convertNormalEmphasis(opt, 'lineStyle');\r\n  convertNormalEmphasis(opt, 'areaStyle');\r\n  convertNormalEmphasis(opt, 'label');\r\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\r\n\r\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\r\n\r\n  convertNormalEmphasis(opt, 'edgeLabel');\r\n}\r\n\r\nfunction compatTextStyle(opt, propName) {\r\n  // Check whether is not object (string\\null\\undefined ...)\r\n  var labelOptSingle = isObject(opt) && opt[propName];\r\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\r\n\r\n  if (textStyle) {\r\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\r\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\r\n\r\n      if (textStyle.hasOwnProperty(propName)) {\r\n        labelOptSingle[propName] = textStyle[propName];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction compatEC3CommonStyles(opt) {\r\n  if (opt) {\r\n    removeEC3NormalStatus(opt);\r\n    compatTextStyle(opt, 'label');\r\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\r\n  }\r\n}\r\n\r\nfunction processSeries(seriesOpt) {\r\n  if (!isObject(seriesOpt)) {\r\n    return;\r\n  }\r\n\r\n  compatEC2ItemStyle(seriesOpt);\r\n  removeEC3NormalStatus(seriesOpt);\r\n  compatTextStyle(seriesOpt, 'label'); // treemap\r\n\r\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\r\n\r\n  compatTextStyle(seriesOpt, 'edgeLabel');\r\n\r\n  if (seriesOpt.emphasis) {\r\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\r\n\r\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\r\n\r\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\r\n  }\r\n\r\n  var markPoint = seriesOpt.markPoint;\r\n\r\n  if (markPoint) {\r\n    compatEC2ItemStyle(markPoint);\r\n    compatEC3CommonStyles(markPoint);\r\n  }\r\n\r\n  var markLine = seriesOpt.markLine;\r\n\r\n  if (markLine) {\r\n    compatEC2ItemStyle(markLine);\r\n    compatEC3CommonStyles(markLine);\r\n  }\r\n\r\n  var markArea = seriesOpt.markArea;\r\n\r\n  if (markArea) {\r\n    compatEC3CommonStyles(markArea);\r\n  }\r\n\r\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\r\n  // then the backward compat based on option type will not be performed.\r\n\r\n  if (seriesOpt.type === 'graph') {\r\n    data = data || seriesOpt.nodes;\r\n    var edgeData = seriesOpt.links || seriesOpt.edges;\r\n\r\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\r\n      for (var i = 0; i < edgeData.length; i++) {\r\n        compatEC3CommonStyles(edgeData[i]);\r\n      }\r\n    }\r\n\r\n    zrUtil.each(seriesOpt.categories, function (opt) {\r\n      removeEC3NormalStatus(opt);\r\n    });\r\n  }\r\n\r\n  if (data && !zrUtil.isTypedArray(data)) {\r\n    for (var i = 0; i < data.length; i++) {\r\n      compatEC3CommonStyles(data[i]);\r\n    }\r\n  } // mark point data\r\n\r\n\r\n  var markPoint = seriesOpt.markPoint;\r\n\r\n  if (markPoint && markPoint.data) {\r\n    var mpData = markPoint.data;\r\n\r\n    for (var i = 0; i < mpData.length; i++) {\r\n      compatEC3CommonStyles(mpData[i]);\r\n    }\r\n  } // mark line data\r\n\r\n\r\n  var markLine = seriesOpt.markLine;\r\n\r\n  if (markLine && markLine.data) {\r\n    var mlData = markLine.data;\r\n\r\n    for (var i = 0; i < mlData.length; i++) {\r\n      if (zrUtil.isArray(mlData[i])) {\r\n        compatEC3CommonStyles(mlData[i][0]);\r\n        compatEC3CommonStyles(mlData[i][1]);\r\n      } else {\r\n        compatEC3CommonStyles(mlData[i]);\r\n      }\r\n    }\r\n  } // Series\r\n\r\n\r\n  if (seriesOpt.type === 'gauge') {\r\n    compatTextStyle(seriesOpt, 'axisLabel');\r\n    compatTextStyle(seriesOpt, 'title');\r\n    compatTextStyle(seriesOpt, 'detail');\r\n  } else if (seriesOpt.type === 'treemap') {\r\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\r\n    zrUtil.each(seriesOpt.levels, function (opt) {\r\n      removeEC3NormalStatus(opt);\r\n    });\r\n  } else if (seriesOpt.type === 'tree') {\r\n    removeEC3NormalStatus(seriesOpt.leaves);\r\n  } // sunburst starts from ec4, so it does not need to compat levels.\r\n\r\n}\r\n\r\nfunction toArr(o) {\r\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\r\n}\r\n\r\nfunction toObj(o) {\r\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\r\n}\r\n\r\nfunction _default(option, isTheme) {\r\n  each(toArr(option.series), function (seriesOpt) {\r\n    isObject(seriesOpt) && processSeries(seriesOpt);\r\n  });\r\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\r\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\r\n  each(axes, function (axisName) {\r\n    each(toArr(option[axisName]), function (axisOpt) {\r\n      if (axisOpt) {\r\n        compatTextStyle(axisOpt, 'axisLabel');\r\n        compatTextStyle(axisOpt.axisPointer, 'label');\r\n      }\r\n    });\r\n  });\r\n  each(toArr(option.parallel), function (parallelOpt) {\r\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\r\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\r\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\r\n  });\r\n  each(toArr(option.calendar), function (calendarOpt) {\r\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\r\n    compatTextStyle(calendarOpt, 'dayLabel');\r\n    compatTextStyle(calendarOpt, 'monthLabel');\r\n    compatTextStyle(calendarOpt, 'yearLabel');\r\n  }); // radar.name.textStyle\r\n\r\n  each(toArr(option.radar), function (radarOpt) {\r\n    compatTextStyle(radarOpt, 'name');\r\n  });\r\n  each(toArr(option.geo), function (geoOpt) {\r\n    if (isObject(geoOpt)) {\r\n      compatEC3CommonStyles(geoOpt);\r\n      each(toArr(geoOpt.regions), function (regionObj) {\r\n        compatEC3CommonStyles(regionObj);\r\n      });\r\n    }\r\n  });\r\n  each(toArr(option.timeline), function (timelineOpt) {\r\n    compatEC3CommonStyles(timelineOpt);\r\n    convertNormalEmphasis(timelineOpt, 'label');\r\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\r\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\r\n    var data = timelineOpt.data;\r\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\r\n      if (zrUtil.isObject(item)) {\r\n        convertNormalEmphasis(item, 'label');\r\n        convertNormalEmphasis(item, 'itemStyle');\r\n      }\r\n    });\r\n  });\r\n  each(toArr(option.toolbox), function (toolboxOpt) {\r\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\r\n    each(toolboxOpt.feature, function (featureOpt) {\r\n      convertNormalEmphasis(featureOpt, 'iconStyle');\r\n    });\r\n  });\r\n  compatTextStyle(toObj(option.axisPointer), 'label');\r\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(seriesType) {\r\n  return {\r\n    seriesType: seriesType,\r\n    reset: function (seriesModel, ecModel) {\r\n      var legendModels = ecModel.findComponents({\r\n        mainType: 'legend'\r\n      });\r\n\r\n      if (!legendModels || !legendModels.length) {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n      data.filterSelf(function (idx) {\r\n        var name = data.getName(idx); // If in any legend component the status is not selected.\r\n\r\n        for (var i = 0; i < legendModels.length; i++) {\r\n          if (!legendModels[i].isSelected(name)) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        return true;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar samplers = {\r\n  average: function (frame) {\r\n    var sum = 0;\r\n    var count = 0;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      if (!isNaN(frame[i])) {\r\n        sum += frame[i];\r\n        count++;\r\n      }\r\n    } // Return NaN if count is 0\r\n\r\n\r\n    return count === 0 ? NaN : sum / count;\r\n  },\r\n  sum: function (frame) {\r\n    var sum = 0;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      // Ignore NaN\r\n      sum += frame[i] || 0;\r\n    }\r\n\r\n    return sum;\r\n  },\r\n  max: function (frame) {\r\n    var max = -Infinity;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      frame[i] > max && (max = frame[i]);\r\n    } // NaN will cause illegal axis extent.\r\n\r\n\r\n    return isFinite(max) ? max : NaN;\r\n  },\r\n  min: function (frame) {\r\n    var min = Infinity;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      frame[i] < min && (min = frame[i]);\r\n    } // NaN will cause illegal axis extent.\r\n\r\n\r\n    return isFinite(min) ? min : NaN;\r\n  },\r\n  // TODO\r\n  // Median\r\n  nearest: function (frame) {\r\n    return frame[0];\r\n  }\r\n};\r\n\r\nvar indexSampler = function (frame, value) {\r\n  return Math.round(frame.length / 2);\r\n};\r\n\r\nfunction _default(seriesType) {\r\n  return {\r\n    seriesType: seriesType,\r\n    modifyOutputEnd: true,\r\n    reset: function (seriesModel, ecModel, api) {\r\n      var data = seriesModel.getData();\r\n      var sampling = seriesModel.get('sampling');\r\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\r\n\r\n      if (coordSys.type === 'cartesian2d' && sampling) {\r\n        var baseAxis = coordSys.getBaseAxis();\r\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\r\n\r\n        var size = Math.abs(extent[1] - extent[0]);\r\n        var rate = Math.round(data.count() / size);\r\n\r\n        if (rate > 1) {\r\n          var sampler;\r\n\r\n          if (typeof sampling === 'string') {\r\n            sampler = samplers[sampling];\r\n          } else if (typeof sampling === 'function') {\r\n            sampler = sampling;\r\n          }\r\n\r\n          if (sampler) {\r\n            // Only support sample the first dim mapped from value axis.\r\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar each = _util.each;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// (1) [Caution]: the logic is correct based on the premises:\r\n//     data processing stage is blocked in stream.\r\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\r\n// (2) Only register once when import repeatly.\r\n//     Should be executed after series filtered and before stack calculation.\r\nfunction _default(ecModel) {\r\n  var stackInfoMap = createHashMap();\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\r\n\r\n    if (stack) {\r\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\r\n      var data = seriesModel.getData();\r\n      var stackInfo = {\r\n        // Used for calculate axis extent automatically.\r\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\r\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\r\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\r\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\r\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\r\n        data: data,\r\n        seriesModel: seriesModel\r\n      }; // If stacked on axis that do not support data stack.\r\n\r\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\r\n        return;\r\n      }\r\n\r\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\r\n      stackInfoList.push(stackInfo);\r\n    }\r\n  });\r\n  stackInfoMap.each(calculateStack);\r\n}\r\n\r\nfunction calculateStack(stackInfoList) {\r\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\r\n    var resultVal = [];\r\n    var resultNaN = [NaN, NaN];\r\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\r\n    var targetData = targetStackInfo.data;\r\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\r\n    // depending on legend selection.\r\n\r\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\r\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\r\n      // should also be NaN, to draw a appropriate belt area.\r\n\r\n      if (isNaN(sum)) {\r\n        return resultNaN;\r\n      }\r\n\r\n      var byValue;\r\n      var stackedDataRawIndex;\r\n\r\n      if (isStackedByIndex) {\r\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\r\n      } else {\r\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\r\n      } // If stackOver is NaN, chart view will render point on value start.\r\n\r\n\r\n      var stackedOver = NaN;\r\n\r\n      for (var j = idxInStack - 1; j >= 0; j--) {\r\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\r\n\r\n        if (!isStackedByIndex) {\r\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\r\n        }\r\n\r\n        if (stackedDataRawIndex >= 0) {\r\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\r\n\r\n          if (sum >= 0 && val > 0 || // Positive stack\r\n          sum <= 0 && val < 0 // Negative stack\r\n          ) {\r\n              sum += val;\r\n              stackedOver = val;\r\n              break;\r\n            }\r\n        }\r\n      }\r\n\r\n      resultVal[0] = sum;\r\n      resultVal[1] = stackedOver;\r\n      return resultVal;\r\n    });\r\n    targetData.hostModel.setData(newData); // Update for consequent calculation\r\n\r\n    targetStackInfo.data = newData;\r\n  });\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar numberUtil = require(\"../util/number\");\r\n\r\nvar formatUtil = require(\"../util/format\");\r\n\r\nvar Scale = require(\"./Scale\");\r\n\r\nvar helper = require(\"./helper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Interval scale\r\n * @module echarts/scale/Interval\r\n */\r\nvar roundNumber = numberUtil.round;\r\n/**\r\n * @alias module:echarts/coord/scale/Interval\r\n * @constructor\r\n */\r\n\r\nvar IntervalScale = Scale.extend({\r\n  type: 'interval',\r\n  _interval: 0,\r\n  _intervalPrecision: 2,\r\n  setExtent: function (start, end) {\r\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\r\n\r\n    if (!isNaN(start)) {\r\n      thisExtent[0] = parseFloat(start);\r\n    }\r\n\r\n    if (!isNaN(end)) {\r\n      thisExtent[1] = parseFloat(end);\r\n    }\r\n  },\r\n  unionExtent: function (other) {\r\n    var extent = this._extent;\r\n    other[0] < extent[0] && (extent[0] = other[0]);\r\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\r\n\r\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\r\n  },\r\n\r\n  /**\r\n   * Get interval\r\n   */\r\n  getInterval: function () {\r\n    return this._interval;\r\n  },\r\n\r\n  /**\r\n   * Set interval\r\n   */\r\n  setInterval: function (interval) {\r\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\r\n    // We assume user wan't to set both interval, min, max to get a better result\r\n\r\n    this._niceExtent = this._extent.slice();\r\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\r\n  },\r\n\r\n  /**\r\n   * @param {boolean} [expandToNicedExtent=false] If expand the ticks to niced extent.\r\n   * @return {Array.<number>}\r\n   */\r\n  getTicks: function (expandToNicedExtent) {\r\n    var interval = this._interval;\r\n    var extent = this._extent;\r\n    var niceTickExtent = this._niceExtent;\r\n    var intervalPrecision = this._intervalPrecision;\r\n    var ticks = []; // If interval is 0, return [];\r\n\r\n    if (!interval) {\r\n      return ticks;\r\n    } // Consider this case: using dataZoom toolbox, zoom and zoom.\r\n\r\n\r\n    var safeLimit = 10000;\r\n\r\n    if (extent[0] < niceTickExtent[0]) {\r\n      if (expandToNicedExtent) {\r\n        ticks.push(roundNumber(niceTickExtent[0] - interval, intervalPrecision));\r\n      } else {\r\n        ticks.push(extent[0]);\r\n      }\r\n    }\r\n\r\n    var tick = niceTickExtent[0];\r\n\r\n    while (tick <= niceTickExtent[1]) {\r\n      ticks.push(tick); // Avoid rounding error\r\n\r\n      tick = roundNumber(tick + interval, intervalPrecision);\r\n\r\n      if (tick === ticks[ticks.length - 1]) {\r\n        // Consider out of safe float point, e.g.,\r\n        // -3711126.9907707 + 2e-10 === -3711126.9907707\r\n        break;\r\n      }\r\n\r\n      if (ticks.length > safeLimit) {\r\n        return [];\r\n      }\r\n    } // Consider this case: the last item of ticks is smaller\r\n    // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\r\n\r\n\r\n    var lastNiceTick = ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1];\r\n\r\n    if (extent[1] > lastNiceTick) {\r\n      if (expandToNicedExtent) {\r\n        ticks.push(roundNumber(lastNiceTick + interval, intervalPrecision));\r\n      } else {\r\n        ticks.push(extent[1]);\r\n      }\r\n    }\r\n\r\n    return ticks;\r\n  },\r\n\r\n  /**\r\n   * @param {number} [splitNumber=5]\r\n   * @return {Array.<Array.<number>>}\r\n   */\r\n  getMinorTicks: function (splitNumber) {\r\n    var ticks = this.getTicks(true);\r\n    var minorTicks = [];\r\n    var extent = this.getExtent();\r\n\r\n    for (var i = 1; i < ticks.length; i++) {\r\n      var nextTick = ticks[i];\r\n      var prevTick = ticks[i - 1];\r\n      var count = 0;\r\n      var minorTicksGroup = [];\r\n      var interval = nextTick - prevTick;\r\n      var minorInterval = interval / splitNumber;\r\n\r\n      while (count < splitNumber - 1) {\r\n        var minorTick = numberUtil.round(prevTick + (count + 1) * minorInterval); // For the first and last interval. The count may be less than splitNumber.\r\n\r\n        if (minorTick > extent[0] && minorTick < extent[1]) {\r\n          minorTicksGroup.push(minorTick);\r\n        }\r\n\r\n        count++;\r\n      }\r\n\r\n      minorTicks.push(minorTicksGroup);\r\n    }\r\n\r\n    return minorTicks;\r\n  },\r\n\r\n  /**\r\n   * @param {number} data\r\n   * @param {Object} [opt]\r\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\r\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\r\n   * @return {string}\r\n   */\r\n  getLabel: function (data, opt) {\r\n    if (data == null) {\r\n      return '';\r\n    }\r\n\r\n    var precision = opt && opt.precision;\r\n\r\n    if (precision == null) {\r\n      precision = numberUtil.getPrecisionSafe(data) || 0;\r\n    } else if (precision === 'auto') {\r\n      // Should be more precise then tick.\r\n      precision = this._intervalPrecision;\r\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\r\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\r\n\r\n\r\n    data = roundNumber(data, precision, true);\r\n    return formatUtil.addCommas(data);\r\n  },\r\n\r\n  /**\r\n   * Update interval and extent of intervals for nice ticks\r\n   *\r\n   * @param {number} [splitNumber = 5] Desired number of ticks\r\n   * @param {number} [minInterval]\r\n   * @param {number} [maxInterval]\r\n   */\r\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\r\n    splitNumber = splitNumber || 5;\r\n    var extent = this._extent;\r\n    var span = extent[1] - extent[0];\r\n\r\n    if (!isFinite(span)) {\r\n      return;\r\n    } // User may set axis min 0 and data are all negative\r\n    // FIXME If it needs to reverse ?\r\n\r\n\r\n    if (span < 0) {\r\n      span = -span;\r\n      extent.reverse();\r\n    }\r\n\r\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\r\n    this._intervalPrecision = result.intervalPrecision;\r\n    this._interval = result.interval;\r\n    this._niceExtent = result.niceTickExtent;\r\n  },\r\n\r\n  /**\r\n   * Nice extent.\r\n   * @param {Object} opt\r\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\r\n   * @param {boolean} [opt.fixMin=false]\r\n   * @param {boolean} [opt.fixMax=false]\r\n   * @param {boolean} [opt.minInterval]\r\n   * @param {boolean} [opt.maxInterval]\r\n   */\r\n  niceExtent: function (opt) {\r\n    var extent = this._extent; // If extent start and end are same, expand them\r\n\r\n    if (extent[0] === extent[1]) {\r\n      if (extent[0] !== 0) {\r\n        // Expand extent\r\n        var expandSize = extent[0]; // In the fowllowing case\r\n        //      Axis has been fixed max 100\r\n        //      Plus data are all 100 and axis extent are [100, 100].\r\n        // Extend to the both side will cause expanded max is larger than fixed max.\r\n        // So only expand to the smaller side.\r\n\r\n        if (!opt.fixMax) {\r\n          extent[1] += expandSize / 2;\r\n          extent[0] -= expandSize / 2;\r\n        } else {\r\n          extent[0] -= expandSize / 2;\r\n        }\r\n      } else {\r\n        extent[1] = 1;\r\n      }\r\n    }\r\n\r\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\r\n\r\n    if (!isFinite(span)) {\r\n      extent[0] = 0;\r\n      extent[1] = 1;\r\n    }\r\n\r\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\r\n\r\n    var interval = this._interval;\r\n\r\n    if (!opt.fixMin) {\r\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\r\n    }\r\n\r\n    if (!opt.fixMax) {\r\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\r\n    }\r\n  }\r\n});\r\n/**\r\n * @return {module:echarts/scale/Time}\r\n */\r\n\r\nIntervalScale.create = function () {\r\n  return new IntervalScale();\r\n};\r\n\r\nvar _default = IntervalScale;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Scale = require(\"./Scale\");\r\n\r\nvar numberUtil = require(\"../util/number\");\r\n\r\nvar IntervalScale = require(\"./Interval\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Log scale\r\n * @module echarts/scale/Log\r\n */\r\n// Use some method of IntervalScale\r\nvar scaleProto = Scale.prototype;\r\nvar intervalScaleProto = IntervalScale.prototype;\r\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\r\nvar roundingErrorFix = numberUtil.round;\r\nvar mathFloor = Math.floor;\r\nvar mathCeil = Math.ceil;\r\nvar mathPow = Math.pow;\r\nvar mathLog = Math.log;\r\nvar LogScale = Scale.extend({\r\n  type: 'log',\r\n  base: 10,\r\n  $constructor: function () {\r\n    Scale.apply(this, arguments);\r\n    this._originalScale = new IntervalScale();\r\n  },\r\n\r\n  /**\r\n   * @param {boolean} [expandToNicedExtent=false] If expand the ticks to niced extent.\r\n   * @return {Array.<number>}\r\n   */\r\n  getTicks: function (expandToNicedExtent) {\r\n    var originalScale = this._originalScale;\r\n    var extent = this._extent;\r\n    var originalExtent = originalScale.getExtent();\r\n    return zrUtil.map(intervalScaleProto.getTicks.call(this, expandToNicedExtent), function (val) {\r\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\r\n\r\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\r\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\r\n      return powVal;\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * @param {number} splitNumber\r\n   * @return {Array.<Array.<number>>}\r\n   */\r\n  getMinorTicks: intervalScaleProto.getMinorTicks,\r\n\r\n  /**\r\n   * @param {number} val\r\n   * @return {string}\r\n   */\r\n  getLabel: intervalScaleProto.getLabel,\r\n\r\n  /**\r\n   * @param  {number} val\r\n   * @return {number}\r\n   */\r\n  scale: function (val) {\r\n    val = scaleProto.scale.call(this, val);\r\n    return mathPow(this.base, val);\r\n  },\r\n\r\n  /**\r\n   * @param {number} start\r\n   * @param {number} end\r\n   */\r\n  setExtent: function (start, end) {\r\n    var base = this.base;\r\n    start = mathLog(start) / mathLog(base);\r\n    end = mathLog(end) / mathLog(base);\r\n    intervalScaleProto.setExtent.call(this, start, end);\r\n  },\r\n\r\n  /**\r\n   * @return {number} end\r\n   */\r\n  getExtent: function () {\r\n    var base = this.base;\r\n    var extent = scaleProto.getExtent.call(this);\r\n    extent[0] = mathPow(base, extent[0]);\r\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\r\n\r\n    var originalScale = this._originalScale;\r\n    var originalExtent = originalScale.getExtent();\r\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\r\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\r\n    return extent;\r\n  },\r\n\r\n  /**\r\n   * @param  {Array.<number>} extent\r\n   */\r\n  unionExtent: function (extent) {\r\n    this._originalScale.unionExtent(extent);\r\n\r\n    var base = this.base;\r\n    extent[0] = mathLog(extent[0]) / mathLog(base);\r\n    extent[1] = mathLog(extent[1]) / mathLog(base);\r\n    scaleProto.unionExtent.call(this, extent);\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  unionExtentFromData: function (data, dim) {\r\n    // TODO\r\n    // filter value that <= 0\r\n    this.unionExtent(data.getApproximateExtent(dim));\r\n  },\r\n\r\n  /**\r\n   * Update interval and extent of intervals for nice ticks\r\n   * @param  {number} [approxTickNum = 10] Given approx tick number\r\n   */\r\n  niceTicks: function (approxTickNum) {\r\n    approxTickNum = approxTickNum || 10;\r\n    var extent = this._extent;\r\n    var span = extent[1] - extent[0];\r\n\r\n    if (span === Infinity || span <= 0) {\r\n      return;\r\n    }\r\n\r\n    var interval = numberUtil.quantity(span);\r\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\r\n\r\n    if (err <= 0.5) {\r\n      interval *= 10;\r\n    } // Interval should be integer\r\n\r\n\r\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\r\n      interval *= 10;\r\n    }\r\n\r\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\r\n    this._interval = interval;\r\n    this._niceExtent = niceExtent;\r\n  },\r\n\r\n  /**\r\n   * Nice extent.\r\n   * @override\r\n   */\r\n  niceExtent: function (opt) {\r\n    intervalScaleProto.niceExtent.call(this, opt);\r\n    var originalScale = this._originalScale;\r\n    originalScale.__fixMin = opt.fixMin;\r\n    originalScale.__fixMax = opt.fixMax;\r\n  }\r\n});\r\nzrUtil.each(['contain', 'normalize'], function (methodName) {\r\n  LogScale.prototype[methodName] = function (val) {\r\n    val = mathLog(val) / mathLog(this.base);\r\n    return scaleProto[methodName].call(this, val);\r\n  };\r\n});\r\n\r\nLogScale.create = function () {\r\n  return new LogScale();\r\n};\r\n\r\nfunction fixRoundingError(val, originalVal) {\r\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\r\n}\r\n\r\nvar _default = LogScale;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Scale = require(\"./Scale\");\r\n\r\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Linear continuous scale\r\n * @module echarts/coord/scale/Ordinal\r\n *\r\n * http://en.wikipedia.org/wiki/Level_of_measurement\r\n */\r\n// FIXME only one data\r\nvar scaleProto = Scale.prototype;\r\nvar OrdinalScale = Scale.extend({\r\n  type: 'ordinal',\r\n\r\n  /**\r\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\r\n   */\r\n  init: function (ordinalMeta, extent) {\r\n    // Caution: Should not use instanceof, consider ec-extensions using\r\n    // import approach to get OrdinalMeta class.\r\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\r\n      ordinalMeta = new OrdinalMeta({\r\n        categories: ordinalMeta\r\n      });\r\n    }\r\n\r\n    this._ordinalMeta = ordinalMeta;\r\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\r\n  },\r\n  parse: function (val) {\r\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\r\n    : Math.round(val);\r\n  },\r\n  contain: function (rank) {\r\n    rank = this.parse(rank);\r\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\r\n  },\r\n\r\n  /**\r\n   * Normalize given rank or name to linear [0, 1]\r\n   * @param {number|string} [val]\r\n   * @return {number}\r\n   */\r\n  normalize: function (val) {\r\n    return scaleProto.normalize.call(this, this.parse(val));\r\n  },\r\n  scale: function (val) {\r\n    return Math.round(scaleProto.scale.call(this, val));\r\n  },\r\n\r\n  /**\r\n   * @return {Array}\r\n   */\r\n  getTicks: function () {\r\n    var ticks = [];\r\n    var extent = this._extent;\r\n    var rank = extent[0];\r\n\r\n    while (rank <= extent[1]) {\r\n      ticks.push(rank);\r\n      rank++;\r\n    }\r\n\r\n    return ticks;\r\n  },\r\n\r\n  /**\r\n   * Get item on rank n\r\n   * @param {number} n\r\n   * @return {string}\r\n   */\r\n  getLabel: function (n) {\r\n    if (!this.isBlank()) {\r\n      // Note that if no data, ordinalMeta.categories is an empty array.\r\n      return this._ordinalMeta.categories[n];\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  count: function () {\r\n    return this._extent[1] - this._extent[0] + 1;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  unionExtentFromData: function (data, dim) {\r\n    this.unionExtent(data.getApproximateExtent(dim));\r\n  },\r\n  getOrdinalMeta: function () {\r\n    return this._ordinalMeta;\r\n  },\r\n  niceTicks: zrUtil.noop,\r\n  niceExtent: zrUtil.noop\r\n});\r\n/**\r\n * @return {module:echarts/scale/Time}\r\n */\r\n\r\nOrdinalScale.create = function () {\r\n  return new OrdinalScale();\r\n};\r\n\r\nvar _default = OrdinalScale;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar clazzUtil = require(\"../util/clazz\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * // Scale class management\r\n * @module echarts/scale/Scale\r\n */\r\n\r\n/**\r\n * @param {Object} [setting]\r\n */\r\nfunction Scale(setting) {\r\n  this._setting = setting || {};\r\n  /**\r\n   * Extent\r\n   * @type {Array.<number>}\r\n   * @protected\r\n   */\r\n\r\n  this._extent = [Infinity, -Infinity];\r\n  /**\r\n   * Step is calculated in adjustExtent\r\n   * @type {Array.<number>}\r\n   * @protected\r\n   */\r\n\r\n  this._interval = 0;\r\n  this.init && this.init.apply(this, arguments);\r\n}\r\n/**\r\n * Parse input val to valid inner number.\r\n * @param {*} val\r\n * @return {number}\r\n */\r\n\r\n\r\nScale.prototype.parse = function (val) {\r\n  // Notice: This would be a trap here, If the implementation\r\n  // of this method depends on extent, and this method is used\r\n  // before extent set (like in dataZoom), it would be wrong.\r\n  // Nevertheless, parse does not depend on extent generally.\r\n  return val;\r\n};\r\n\r\nScale.prototype.getSetting = function (name) {\r\n  return this._setting[name];\r\n};\r\n\r\nScale.prototype.contain = function (val) {\r\n  var extent = this._extent;\r\n  return val >= extent[0] && val <= extent[1];\r\n};\r\n/**\r\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\r\n * @param {number} val\r\n * @return {number}\r\n */\r\n\r\n\r\nScale.prototype.normalize = function (val) {\r\n  var extent = this._extent;\r\n\r\n  if (extent[1] === extent[0]) {\r\n    return 0.5;\r\n  }\r\n\r\n  return (val - extent[0]) / (extent[1] - extent[0]);\r\n};\r\n/**\r\n * Scale normalized value\r\n * @param {number} val\r\n * @return {number}\r\n */\r\n\r\n\r\nScale.prototype.scale = function (val) {\r\n  var extent = this._extent;\r\n  return val * (extent[1] - extent[0]) + extent[0];\r\n};\r\n/**\r\n * Set extent from data\r\n * @param {Array.<number>} other\r\n */\r\n\r\n\r\nScale.prototype.unionExtent = function (other) {\r\n  var extent = this._extent;\r\n  other[0] < extent[0] && (extent[0] = other[0]);\r\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\r\n  // this.setExtent(extent[0], extent[1]);\r\n};\r\n/**\r\n * Set extent from data\r\n * @param {module:echarts/data/List} data\r\n * @param {string} dim\r\n */\r\n\r\n\r\nScale.prototype.unionExtentFromData = function (data, dim) {\r\n  this.unionExtent(data.getApproximateExtent(dim));\r\n};\r\n/**\r\n * Get extent\r\n * @return {Array.<number>}\r\n */\r\n\r\n\r\nScale.prototype.getExtent = function () {\r\n  return this._extent.slice();\r\n};\r\n/**\r\n * Set extent\r\n * @param {number} start\r\n * @param {number} end\r\n */\r\n\r\n\r\nScale.prototype.setExtent = function (start, end) {\r\n  var thisExtent = this._extent;\r\n\r\n  if (!isNaN(start)) {\r\n    thisExtent[0] = start;\r\n  }\r\n\r\n  if (!isNaN(end)) {\r\n    thisExtent[1] = end;\r\n  }\r\n};\r\n/**\r\n * When axis extent depends on data and no data exists,\r\n * axis ticks should not be drawn, which is named 'blank'.\r\n */\r\n\r\n\r\nScale.prototype.isBlank = function () {\r\n  return this._isBlank;\r\n},\r\n/**\r\n * When axis extent depends on data and no data exists,\r\n * axis ticks should not be drawn, which is named 'blank'.\r\n */\r\nScale.prototype.setBlank = function (isBlank) {\r\n  this._isBlank = isBlank;\r\n};\r\n/**\r\n * @abstract\r\n * @param {*} tick\r\n * @return {string} label of the tick.\r\n */\r\n\r\nScale.prototype.getLabel = null;\r\nclazzUtil.enableClassExtend(Scale);\r\nclazzUtil.enableClassManagement(Scale, {\r\n  registerWhenExtend: true\r\n});\r\nvar _default = Scale;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar numberUtil = require(\"../util/number\");\r\n\r\nvar formatUtil = require(\"../util/format\");\r\n\r\nvar scaleHelper = require(\"./helper\");\r\n\r\nvar IntervalScale = require(\"./Interval\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* A third-party license is embeded for some of the code in this file:\r\n* The \"scaleLevels\" was originally copied from \"d3.js\" with some\r\n* modifications made for this project.\r\n* (See more details in the comment on the definition of \"scaleLevels\" below.)\r\n* The use of the source code of this file is also subject to the terms\r\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n* </licenses/LICENSE-d3>).\r\n*/\r\n// [About UTC and local time zone]:\r\n// In most cases, `number.parseDate` will treat input data string as local time\r\n// (except time zone is specified in time string). And `format.formateTime` returns\r\n// local time by default. option.useUTC is false by default. This design have\r\n// concidered these common case:\r\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\r\n// in local time by default.\r\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\r\n// as its original time, without any time difference.\r\nvar intervalScaleProto = IntervalScale.prototype;\r\nvar mathCeil = Math.ceil;\r\nvar mathFloor = Math.floor;\r\nvar ONE_SECOND = 1000;\r\nvar ONE_MINUTE = ONE_SECOND * 60;\r\nvar ONE_HOUR = ONE_MINUTE * 60;\r\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\r\n\r\nvar bisect = function (a, x, lo, hi) {\r\n  while (lo < hi) {\r\n    var mid = lo + hi >>> 1;\r\n\r\n    if (a[mid][1] < x) {\r\n      lo = mid + 1;\r\n    } else {\r\n      hi = mid;\r\n    }\r\n  }\r\n\r\n  return lo;\r\n};\r\n/**\r\n * @alias module:echarts/coord/scale/Time\r\n * @constructor\r\n */\r\n\r\n\r\nvar TimeScale = IntervalScale.extend({\r\n  type: 'time',\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getLabel: function (val) {\r\n    var stepLvl = this._stepLvl;\r\n    var date = new Date(val);\r\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  niceExtent: function (opt) {\r\n    var extent = this._extent; // If extent start and end are same, expand them\r\n\r\n    if (extent[0] === extent[1]) {\r\n      // Expand extent\r\n      extent[0] -= ONE_DAY;\r\n      extent[1] += ONE_DAY;\r\n    } // If there are no data and extent are [Infinity, -Infinity]\r\n\r\n\r\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\r\n      var d = new Date();\r\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\r\n      extent[0] = extent[1] - ONE_DAY;\r\n    }\r\n\r\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\r\n\r\n    var interval = this._interval;\r\n\r\n    if (!opt.fixMin) {\r\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\r\n    }\r\n\r\n    if (!opt.fixMax) {\r\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\r\n    approxTickNum = approxTickNum || 10;\r\n    var extent = this._extent;\r\n    var span = extent[1] - extent[0];\r\n    var approxInterval = span / approxTickNum;\r\n\r\n    if (minInterval != null && approxInterval < minInterval) {\r\n      approxInterval = minInterval;\r\n    }\r\n\r\n    if (maxInterval != null && approxInterval > maxInterval) {\r\n      approxInterval = maxInterval;\r\n    }\r\n\r\n    var scaleLevelsLen = scaleLevels.length;\r\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\r\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\r\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\r\n\r\n    if (level[0] === 'year') {\r\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\r\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\r\n\r\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\r\n      interval *= yearStep;\r\n    }\r\n\r\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\r\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\r\n    scaleHelper.fixExtent(niceExtent, extent);\r\n    this._stepLvl = level; // Interval will be used in getTicks\r\n\r\n    this._interval = interval;\r\n    this._niceExtent = niceExtent;\r\n  },\r\n  parse: function (val) {\r\n    // val might be float.\r\n    return +numberUtil.parseDate(val);\r\n  }\r\n});\r\nzrUtil.each(['contain', 'normalize'], function (methodName) {\r\n  TimeScale.prototype[methodName] = function (val) {\r\n    return intervalScaleProto[methodName].call(this, this.parse(val));\r\n  };\r\n});\r\n/**\r\n * This implementation was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/time/scale.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n */\r\n\r\nvar scaleLevels = [// Format              interval\r\n['hh:mm:ss', ONE_SECOND], // 1s\r\n['hh:mm:ss', ONE_SECOND * 5], // 5s\r\n['hh:mm:ss', ONE_SECOND * 10], // 10s\r\n['hh:mm:ss', ONE_SECOND * 15], // 15s\r\n['hh:mm:ss', ONE_SECOND * 30], // 30s\r\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\r\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\r\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\r\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\r\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\r\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\r\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\r\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\r\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\r\n['MM-dd\\nyyyy', ONE_DAY], // 1d\r\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\r\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\r\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\r\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\r\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\r\n['week', ONE_DAY * 7], // 7d\r\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\r\n['week', ONE_DAY * 14], // 2w\r\n['week', ONE_DAY * 21], // 3w\r\n['month', ONE_DAY * 31], // 1M\r\n['week', ONE_DAY * 42], // 6w\r\n['month', ONE_DAY * 62], // 2M\r\n['week', ONE_DAY * 70], // 10w\r\n['quarter', ONE_DAY * 95], // 3M\r\n['month', ONE_DAY * 31 * 4], // 4M\r\n['month', ONE_DAY * 31 * 5], // 5M\r\n['half-year', ONE_DAY * 380 / 2], // 6M\r\n['month', ONE_DAY * 31 * 8], // 8M\r\n['month', ONE_DAY * 31 * 10], // 10M\r\n['year', ONE_DAY * 380] // 1Y\r\n];\r\n/**\r\n * @param {module:echarts/model/Model}\r\n * @return {module:echarts/scale/Time}\r\n */\r\n\r\nTimeScale.create = function (model) {\r\n  return new TimeScale({\r\n    useUTC: model.ecModel.get('useUTC')\r\n  });\r\n};\r\n\r\nvar _default = TimeScale;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar numberUtil = require(\"../util/number\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * For testable.\r\n */\r\nvar roundNumber = numberUtil.round;\r\n/**\r\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\r\n *                                Should be extent[0] < extent[1].\r\n * @param {number} splitNumber splitNumber should be >= 1.\r\n * @param {number} [minInterval]\r\n * @param {number} [maxInterval]\r\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\r\n */\r\n\r\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\r\n  var result = {};\r\n  var span = extent[1] - extent[0];\r\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\r\n\r\n  if (minInterval != null && interval < minInterval) {\r\n    interval = result.interval = minInterval;\r\n  }\r\n\r\n  if (maxInterval != null && interval > maxInterval) {\r\n    interval = result.interval = maxInterval;\r\n  } // Tow more digital for tick.\r\n\r\n\r\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\r\n\r\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\r\n  fixExtent(niceTickExtent, extent);\r\n  return result;\r\n}\r\n/**\r\n * @param {number} interval\r\n * @return {number} interval precision\r\n */\r\n\r\n\r\nfunction getIntervalPrecision(interval) {\r\n  // Tow more digital for tick.\r\n  return numberUtil.getPrecisionSafe(interval) + 2;\r\n}\r\n\r\nfunction clamp(niceTickExtent, idx, extent) {\r\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\r\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\r\n\r\n\r\nfunction fixExtent(niceTickExtent, extent) {\r\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\r\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\r\n  clamp(niceTickExtent, 0, extent);\r\n  clamp(niceTickExtent, 1, extent);\r\n\r\n  if (niceTickExtent[0] > niceTickExtent[1]) {\r\n    niceTickExtent[0] = niceTickExtent[1];\r\n  }\r\n}\r\n\r\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\r\nexports.getIntervalPrecision = getIntervalPrecision;\r\nexports.fixExtent = fixExtent;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\nvar map = _util.map;\r\nvar isFunction = _util.isFunction;\r\nvar createHashMap = _util.createHashMap;\r\nvar noop = _util.noop;\r\n\r\nvar _task = require(\"./task\");\r\n\r\nvar createTask = _task.createTask;\r\n\r\nvar _component = require(\"../util/component\");\r\n\r\nvar getUID = _component.getUID;\r\n\r\nvar GlobalModel = require(\"../model/Global\");\r\n\r\nvar ExtensionAPI = require(\"../ExtensionAPI\");\r\n\r\nvar _model = require(\"../util/model\");\r\n\r\nvar normalizeToArray = _model.normalizeToArray;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/stream/Scheduler\r\n */\r\n\r\n/**\r\n * @constructor\r\n */\r\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\r\n  this.ecInstance = ecInstance;\r\n  this.api = api;\r\n  this.unfinished; // Fix current processors in case that in some rear cases that\r\n  // processors might be registered after echarts instance created.\r\n  // Register processors incrementally for a echarts instance is\r\n  // not supported by this stream architecture.\r\n\r\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\r\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\r\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\r\n  /**\r\n   * @private\r\n   * @type {\r\n   *     [handlerUID: string]: {\r\n   *         seriesTaskMap?: {\r\n   *             [seriesUID: string]: Task\r\n   *         },\r\n   *         overallTask?: Task\r\n   *     }\r\n   * }\r\n   */\r\n\r\n  this._stageTaskMap = createHashMap();\r\n}\r\n\r\nvar proto = Scheduler.prototype;\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {Object} payload\r\n */\r\n\r\nproto.restoreData = function (ecModel, payload) {\r\n  // TODO: Only restore needed series and components, but not all components.\r\n  // Currently `restoreData` of all of the series and component will be called.\r\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\r\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\r\n  // and some components like coordinate system, axes, dataZoom, visualMap only\r\n  // need their target series refresh.\r\n  // (1) If we are implementing this feature some day, we should consider these cases:\r\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\r\n  // on the settings of `dataZoom`), it should be re-performed if the component\r\n  // is modified by `setOption`.\r\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\r\n  // it should be re-performed when the result array of `getTargetSeries` changed.\r\n  // We use `dependencies` to cover these issues.\r\n  // (3) How to update target series when coordinate system related components modified.\r\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\r\n  // and this case all of the tasks will be set as dirty.\r\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\r\n  // depends on all of the series.\r\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\r\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\r\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\r\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\r\n  // probably cause state chaos (consider `dataZoomProcessor`).\r\n\r\n  this._stageTaskMap.each(function (taskRecord) {\r\n    var overallTask = taskRecord.overallTask;\r\n    overallTask && overallTask.dirty();\r\n  });\r\n}; // If seriesModel provided, incremental threshold is check by series data.\r\n\r\n\r\nproto.getPerformArgs = function (task, isBlock) {\r\n  // For overall task\r\n  if (!task.__pipeline) {\r\n    return;\r\n  }\r\n\r\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\r\n\r\n  var pCtx = pipeline.context;\r\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\r\n  var step = incremental ? pipeline.step : null;\r\n  var modDataCount = pCtx && pCtx.modDataCount;\r\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\r\n  return {\r\n    step: step,\r\n    modBy: modBy,\r\n    modDataCount: modDataCount\r\n  };\r\n};\r\n\r\nproto.getPipeline = function (pipelineId) {\r\n  return this._pipelineMap.get(pipelineId);\r\n};\r\n/**\r\n * Current, progressive rendering starts from visual and layout.\r\n * Always detect render mode in the same stage, avoiding that incorrect\r\n * detection caused by data filtering.\r\n * Caution:\r\n * `updateStreamModes` use `seriesModel.getData()`.\r\n */\r\n\r\n\r\nproto.updateStreamModes = function (seriesModel, view) {\r\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\r\n\r\n  var data = seriesModel.getData();\r\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\r\n  // animation frame. Note that some types of series do not provide\r\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\r\n  // use the term `incremental` but not `progressive` to describe the\r\n  // case that `chart.appendData`.\r\n\r\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\r\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\r\n  // see `test/candlestick-large3.html`\r\n\r\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\r\n  seriesModel.pipelineContext = pipeline.context = {\r\n    progressiveRender: progressiveRender,\r\n    modDataCount: modDataCount,\r\n    large: large\r\n  };\r\n};\r\n\r\nproto.restorePipelines = function (ecModel) {\r\n  var scheduler = this;\r\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    var progressive = seriesModel.getProgressive();\r\n    var pipelineId = seriesModel.uid;\r\n    pipelineMap.set(pipelineId, {\r\n      id: pipelineId,\r\n      head: null,\r\n      tail: null,\r\n      threshold: seriesModel.getProgressiveThreshold(),\r\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\r\n      blockIndex: -1,\r\n      step: Math.round(progressive || 700),\r\n      count: 0\r\n    });\r\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\r\n  });\r\n};\r\n\r\nproto.prepareStageTasks = function () {\r\n  var stageTaskMap = this._stageTaskMap;\r\n  var ecModel = this.ecInstance.getModel();\r\n  var api = this.api;\r\n  each(this._allHandlers, function (handler) {\r\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\r\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\r\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\r\n  }, this);\r\n};\r\n\r\nproto.prepareView = function (view, model, ecModel, api) {\r\n  var renderTask = view.renderTask;\r\n  var context = renderTask.context;\r\n  context.model = model;\r\n  context.ecModel = ecModel;\r\n  context.api = api;\r\n  renderTask.__block = !view.incrementalPrepareRender;\r\n  pipe(this, model, renderTask);\r\n};\r\n\r\nproto.performDataProcessorTasks = function (ecModel, payload) {\r\n  // If we do not use `block` here, it should be considered when to update modes.\r\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\r\n    block: true\r\n  });\r\n}; // opt\r\n// opt.visualType: 'visual' or 'layout'\r\n// opt.setDirty\r\n\r\n\r\nproto.performVisualTasks = function (ecModel, payload, opt) {\r\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\r\n};\r\n\r\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\r\n  opt = opt || {};\r\n  var unfinished;\r\n  each(stageHandlers, function (stageHandler, idx) {\r\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\r\n      return;\r\n    }\r\n\r\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\r\n\r\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\r\n    var overallTask = stageHandlerRecord.overallTask;\r\n\r\n    if (overallTask) {\r\n      var overallNeedDirty;\r\n      var agentStubMap = overallTask.agentStubMap;\r\n      agentStubMap.each(function (stub) {\r\n        if (needSetDirty(opt, stub)) {\r\n          stub.dirty();\r\n          overallNeedDirty = true;\r\n        }\r\n      });\r\n      overallNeedDirty && overallTask.dirty();\r\n      updatePayload(overallTask, payload);\r\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\r\n      // then execute the overall task. And stub will call seriesModel.setData,\r\n      // which ensures that in the overallTask seriesModel.getData() will not\r\n      // return incorrect data.\r\n\r\n      agentStubMap.each(function (stub) {\r\n        stub.perform(performArgs);\r\n      });\r\n      unfinished |= overallTask.perform(performArgs);\r\n    } else if (seriesTaskMap) {\r\n      seriesTaskMap.each(function (task, pipelineId) {\r\n        if (needSetDirty(opt, task)) {\r\n          task.dirty();\r\n        }\r\n\r\n        var performArgs = scheduler.getPerformArgs(task, opt.block); // FIXME\r\n        // if intending to decalare `performRawSeries` in handlers, only\r\n        // stream-independent (specifically, data item independent) operations can be\r\n        // performed. Because is a series is filtered, most of the tasks will not\r\n        // be performed. A stream-dependent operation probably cause wrong biz logic.\r\n        // Perhaps we should not provide a separate callback for this case instead\r\n        // of providing the config `performRawSeries`. The stream-dependent operaions\r\n        // and stream-independent operations should better not be mixed.\r\n\r\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\r\n        updatePayload(task, payload);\r\n        unfinished |= task.perform(performArgs);\r\n      });\r\n    }\r\n  });\r\n\r\n  function needSetDirty(opt, task) {\r\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\r\n  }\r\n\r\n  scheduler.unfinished |= unfinished;\r\n}\r\n\r\nproto.performSeriesTasks = function (ecModel) {\r\n  var unfinished;\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    // Progress to the end for dataInit and dataRestore.\r\n    unfinished |= seriesModel.dataTask.perform();\r\n  });\r\n  this.unfinished |= unfinished;\r\n};\r\n\r\nproto.plan = function () {\r\n  // Travel pipelines, check block.\r\n  this._pipelineMap.each(function (pipeline) {\r\n    var task = pipeline.tail;\r\n\r\n    do {\r\n      if (task.__block) {\r\n        pipeline.blockIndex = task.__idxInPipeline;\r\n        break;\r\n      }\r\n\r\n      task = task.getUpstream();\r\n    } while (task);\r\n  });\r\n};\r\n\r\nvar updatePayload = proto.updatePayload = function (task, payload) {\r\n  payload !== 'remain' && (task.context.payload = payload);\r\n};\r\n\r\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\r\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\r\n  var seriesType = stageHandler.seriesType;\r\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\r\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\r\n  // it works but it may cause other irrelevant charts blocked.\r\n\r\n  if (stageHandler.createOnAllSeries) {\r\n    ecModel.eachRawSeries(create);\r\n  } else if (seriesType) {\r\n    ecModel.eachRawSeriesByType(seriesType, create);\r\n  } else if (getTargetSeries) {\r\n    getTargetSeries(ecModel, api).each(create);\r\n  }\r\n\r\n  function create(seriesModel) {\r\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\r\n    // Reuse original task instance.\r\n\r\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\r\n      plan: seriesTaskPlan,\r\n      reset: seriesTaskReset,\r\n      count: seriesTaskCount\r\n    }));\r\n    task.context = {\r\n      model: seriesModel,\r\n      ecModel: ecModel,\r\n      api: api,\r\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\r\n      plan: stageHandler.plan,\r\n      reset: stageHandler.reset,\r\n      scheduler: scheduler\r\n    };\r\n    pipe(scheduler, seriesModel, task);\r\n  } // Clear unused series tasks.\r\n\r\n\r\n  var pipelineMap = scheduler._pipelineMap;\r\n  seriesTaskMap.each(function (task, pipelineId) {\r\n    if (!pipelineMap.get(pipelineId)) {\r\n      task.dispose();\r\n      seriesTaskMap.removeKey(pipelineId);\r\n    }\r\n  });\r\n}\r\n\r\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\r\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\r\n  || createTask({\r\n    reset: overallTaskReset\r\n  });\r\n  overallTask.context = {\r\n    ecModel: ecModel,\r\n    api: api,\r\n    overallReset: stageHandler.overallReset,\r\n    scheduler: scheduler\r\n  }; // Reuse orignal stubs.\r\n\r\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\r\n  var seriesType = stageHandler.seriesType;\r\n  var getTargetSeries = stageHandler.getTargetSeries;\r\n  var overallProgress = true;\r\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\r\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\r\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\r\n  // we set the pipeline block.\r\n\r\n  if (seriesType) {\r\n    ecModel.eachRawSeriesByType(seriesType, createStub);\r\n  } else if (getTargetSeries) {\r\n    getTargetSeries(ecModel, api).each(createStub);\r\n  } // Otherwise, (usually it is legancy case), the overall task will only be\r\n  // executed when upstream dirty. Otherwise the progressive rendering of all\r\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\r\n  // dirty info from upsteam.\r\n  else {\r\n      overallProgress = false;\r\n      each(ecModel.getSeries(), createStub);\r\n    }\r\n\r\n  function createStub(seriesModel) {\r\n    var pipelineId = seriesModel.uid;\r\n    var stub = agentStubMap.get(pipelineId);\r\n\r\n    if (!stub) {\r\n      stub = agentStubMap.set(pipelineId, createTask({\r\n        reset: stubReset,\r\n        onDirty: stubOnDirty\r\n      })); // When the result of `getTargetSeries` changed, the overallTask\r\n      // should be set as dirty and re-performed.\r\n\r\n      overallTask.dirty();\r\n    }\r\n\r\n    stub.context = {\r\n      model: seriesModel,\r\n      overallProgress: overallProgress,\r\n      modifyOutputEnd: modifyOutputEnd\r\n    };\r\n    stub.agent = overallTask;\r\n    stub.__block = overallProgress;\r\n    pipe(scheduler, seriesModel, stub);\r\n  } // Clear unused stubs.\r\n\r\n\r\n  var pipelineMap = scheduler._pipelineMap;\r\n  agentStubMap.each(function (stub, pipelineId) {\r\n    if (!pipelineMap.get(pipelineId)) {\r\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\r\n      // should be set as dirty and re-performed.\r\n\r\n      overallTask.dirty();\r\n      agentStubMap.removeKey(pipelineId);\r\n    }\r\n  });\r\n}\r\n\r\nfunction overallTaskReset(context) {\r\n  context.overallReset(context.ecModel, context.api, context.payload);\r\n}\r\n\r\nfunction stubReset(context, upstreamContext) {\r\n  return context.overallProgress && stubProgress;\r\n}\r\n\r\nfunction stubProgress() {\r\n  this.agent.dirty();\r\n  this.getDownstream().dirty();\r\n}\r\n\r\nfunction stubOnDirty() {\r\n  this.agent && this.agent.dirty();\r\n}\r\n\r\nfunction seriesTaskPlan(context) {\r\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\r\n}\r\n\r\nfunction seriesTaskReset(context) {\r\n  if (context.useClearVisual) {\r\n    context.data.clearAllVisual();\r\n  }\r\n\r\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\r\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\r\n    return makeSeriesTaskProgress(idx);\r\n  }) : singleSeriesTaskProgress;\r\n}\r\n\r\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\r\n\r\nfunction makeSeriesTaskProgress(resetDefineIdx) {\r\n  return function (params, context) {\r\n    var data = context.data;\r\n    var resetDefine = context.resetDefines[resetDefineIdx];\r\n\r\n    if (resetDefine && resetDefine.dataEach) {\r\n      for (var i = params.start; i < params.end; i++) {\r\n        resetDefine.dataEach(data, i);\r\n      }\r\n    } else if (resetDefine && resetDefine.progress) {\r\n      resetDefine.progress(params, data);\r\n    }\r\n  };\r\n}\r\n\r\nfunction seriesTaskCount(context) {\r\n  return context.data.count();\r\n}\r\n\r\nfunction pipe(scheduler, seriesModel, task) {\r\n  var pipelineId = seriesModel.uid;\r\n\r\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\r\n\r\n  !pipeline.head && (pipeline.head = task);\r\n  pipeline.tail && pipeline.tail.pipe(task);\r\n  pipeline.tail = task;\r\n  task.__idxInPipeline = pipeline.count++;\r\n  task.__pipeline = pipeline;\r\n}\r\n\r\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\r\n  if (isFunction(stageHandler)) {\r\n    stageHandler = {\r\n      overallReset: stageHandler,\r\n      seriesType: detectSeriseType(stageHandler)\r\n    };\r\n  }\r\n\r\n  stageHandler.uid = getUID('stageHandler');\r\n  visualType && (stageHandler.visualType = visualType);\r\n  return stageHandler;\r\n};\r\n/**\r\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\r\n * To ensure that they can work normally, they should work in block mode, that is,\r\n * they should not be started util the previous tasks finished. So they cause the\r\n * progressive rendering disabled. We try to detect the series type, to narrow down\r\n * the block range to only the series type they concern, but not all series.\r\n */\r\n\r\n\r\nfunction detectSeriseType(legacyFunc) {\r\n  seriesType = null;\r\n\r\n  try {\r\n    // Assume there is no async when calling `eachSeriesByType`.\r\n    legacyFunc(ecModelMock, apiMock);\r\n  } catch (e) {}\r\n\r\n  return seriesType;\r\n}\r\n\r\nvar ecModelMock = {};\r\nvar apiMock = {};\r\nvar seriesType;\r\nmockMethods(ecModelMock, GlobalModel);\r\nmockMethods(apiMock, ExtensionAPI);\r\n\r\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\r\n  seriesType = type;\r\n};\r\n\r\necModelMock.eachComponent = function (cond) {\r\n  if (cond.mainType === 'series' && cond.subType) {\r\n    seriesType = cond.subType;\r\n  }\r\n};\r\n\r\nfunction mockMethods(target, Clz) {\r\n  /* eslint-disable */\r\n  for (var name in Clz.prototype) {\r\n    // Do not use hasOwnProperty\r\n    target[name] = noop;\r\n  }\r\n  /* eslint-enable */\r\n\r\n}\r\n\r\nvar _default = Scheduler;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar assert = _util.assert;\r\nvar isArray = _util.isArray;\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {Object} define\r\n * @return See the return of `createTask`.\r\n */\r\nfunction createTask(define) {\r\n  return new Task(define);\r\n}\r\n/**\r\n * @constructor\r\n * @param {Object} define\r\n * @param {Function} define.reset Custom reset\r\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\r\n * @param {Function} [define.count] count is used to determin data task.\r\n * @param {Function} [define.onDirty] count is used to determin data task.\r\n */\r\n\r\n\r\nfunction Task(define) {\r\n  define = define || {};\r\n  this._reset = define.reset;\r\n  this._plan = define.plan;\r\n  this._count = define.count;\r\n  this._onDirty = define.onDirty;\r\n  this._dirty = true; // Context must be specified implicitly, to\r\n  // avoid miss update context when model changed.\r\n\r\n  this.context;\r\n}\r\n\r\nvar taskProto = Task.prototype;\r\n/**\r\n * @param {Object} performArgs\r\n * @param {number} [performArgs.step] Specified step.\r\n * @param {number} [performArgs.skip] Skip customer perform call.\r\n * @param {number} [performArgs.modBy] Sampling window size.\r\n * @param {number} [performArgs.modDataCount] Sampling count.\r\n */\r\n\r\ntaskProto.perform = function (performArgs) {\r\n  var upTask = this._upstream;\r\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\r\n  // Pull data. Must pull data each time, because context.data\r\n  // may be updated by Series.setData.\r\n\r\n  if (this._dirty && upTask) {\r\n    var context = this.context;\r\n    context.data = context.outputData = upTask.context.outputData;\r\n  }\r\n\r\n  if (this.__pipeline) {\r\n    this.__pipeline.currentTask = this;\r\n  }\r\n\r\n  var planResult;\r\n\r\n  if (this._plan && !skip) {\r\n    planResult = this._plan(this.context);\r\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\r\n  // elements uniformed distributed when progress, especially when moving or zooming.\r\n\r\n\r\n  var lastModBy = normalizeModBy(this._modBy);\r\n  var lastModDataCount = this._modDataCount || 0;\r\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\r\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\r\n\r\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\r\n    planResult = 'reset';\r\n  }\r\n\r\n  function normalizeModBy(val) {\r\n    !(val >= 1) && (val = 1); // jshint ignore:line\r\n\r\n    return val;\r\n  }\r\n\r\n  var forceFirstProgress;\r\n\r\n  if (this._dirty || planResult === 'reset') {\r\n    this._dirty = false;\r\n    forceFirstProgress = reset(this, skip);\r\n  }\r\n\r\n  this._modBy = modBy;\r\n  this._modDataCount = modDataCount;\r\n  var step = performArgs && performArgs.step;\r\n\r\n  if (upTask) {\r\n    this._dueEnd = upTask._outputDueEnd;\r\n  } // DataTask or overallTask\r\n  else {\r\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\r\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\r\n  // If no progress, pass index from upstream to downstream each time plan called.\r\n\r\n\r\n  if (this._progress) {\r\n    var start = this._dueIndex;\r\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\r\n\r\n    if (!skip && (forceFirstProgress || start < end)) {\r\n      var progress = this._progress;\r\n\r\n      if (isArray(progress)) {\r\n        for (var i = 0; i < progress.length; i++) {\r\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\r\n        }\r\n      } else {\r\n        doProgress(this, progress, start, end, modBy, modDataCount);\r\n      }\r\n    }\r\n\r\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\r\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\r\n\r\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\r\n    this._outputDueEnd = outputDueEnd;\r\n  } else {\r\n    // (1) Some overall task has no progress.\r\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\r\n    // This should always be performed so it can be passed to downstream.\r\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\r\n  }\r\n\r\n  return this.unfinished();\r\n};\r\n\r\nvar iterator = function () {\r\n  var end;\r\n  var current;\r\n  var modBy;\r\n  var modDataCount;\r\n  var winCount;\r\n  var it = {\r\n    reset: function (s, e, sStep, sCount) {\r\n      current = s;\r\n      end = e;\r\n      modBy = sStep;\r\n      modDataCount = sCount;\r\n      winCount = Math.ceil(modDataCount / modBy);\r\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\r\n    }\r\n  };\r\n  return it;\r\n\r\n  function sequentialNext() {\r\n    return current < end ? current++ : null;\r\n  }\r\n\r\n  function modNext() {\r\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\r\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\r\n    // Use normal linear rendering mode.\r\n    : current;\r\n    current++;\r\n    return result;\r\n  }\r\n}();\r\n\r\ntaskProto.dirty = function () {\r\n  this._dirty = true;\r\n  this._onDirty && this._onDirty(this.context);\r\n};\r\n\r\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\r\n  iterator.reset(start, end, modBy, modDataCount);\r\n  taskIns._callingProgress = progress;\r\n\r\n  taskIns._callingProgress({\r\n    start: start,\r\n    end: end,\r\n    count: end - start,\r\n    next: iterator.next\r\n  }, taskIns.context);\r\n}\r\n\r\nfunction reset(taskIns, skip) {\r\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\r\n  taskIns._settedOutputEnd = null;\r\n  var progress;\r\n  var forceFirstProgress;\r\n\r\n  if (!skip && taskIns._reset) {\r\n    progress = taskIns._reset(taskIns.context);\r\n\r\n    if (progress && progress.progress) {\r\n      forceFirstProgress = progress.forceFirstProgress;\r\n      progress = progress.progress;\r\n    } // To simplify no progress checking, array must has item.\r\n\r\n\r\n    if (isArray(progress) && !progress.length) {\r\n      progress = null;\r\n    }\r\n  }\r\n\r\n  taskIns._progress = progress;\r\n  taskIns._modBy = taskIns._modDataCount = null;\r\n  var downstream = taskIns._downstream;\r\n  downstream && downstream.dirty();\r\n  return forceFirstProgress;\r\n}\r\n/**\r\n * @return {boolean}\r\n */\r\n\r\n\r\ntaskProto.unfinished = function () {\r\n  return this._progress && this._dueIndex < this._dueEnd;\r\n};\r\n/**\r\n * @param {Object} downTask The downstream task.\r\n * @return {Object} The downstream task.\r\n */\r\n\r\n\r\ntaskProto.pipe = function (downTask) {\r\n  // If already downstream, do not dirty downTask.\r\n  if (this._downstream !== downTask || this._dirty) {\r\n    this._downstream = downTask;\r\n    downTask._upstream = this;\r\n    downTask.dirty();\r\n  }\r\n};\r\n\r\ntaskProto.dispose = function () {\r\n  if (this._disposed) {\r\n    return;\r\n  }\r\n\r\n  this._upstream && (this._upstream._downstream = null);\r\n  this._downstream && (this._downstream._upstream = null);\r\n  this._dirty = false;\r\n  this._disposed = true;\r\n};\r\n\r\ntaskProto.getUpstream = function () {\r\n  return this._upstream;\r\n};\r\n\r\ntaskProto.getDownstream = function () {\r\n  return this._downstream;\r\n};\r\n\r\ntaskProto.setOutputEnd = function (end) {\r\n  // This only happend in dataTask, dataZoom, map, currently.\r\n  // where dataZoom do not set end each time, but only set\r\n  // when reset. So we should record the setted end, in case\r\n  // that the stub of dataZoom perform again and earse the\r\n  // setted end by upstream.\r\n  this._outputDueEnd = this._settedOutputEnd = end;\r\n}; ///////////////////////////////////////////////////////////\r\n// For stream debug (Should be commented out after used!)\r\n// Usage: printTask(this, 'begin');\r\n// Usage: printTask(this, null, {someExtraProp});\r\n// function printTask(task, prefix, extra) {\r\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\r\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\r\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\r\n//     var props = [];\r\n//     if (task.__pipeline) {\r\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\r\n//         props.push({text: 'idx', value: val});\r\n//     } else {\r\n//         var stubCount = 0;\r\n//         task.agentStubMap.each(() => stubCount++);\r\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\r\n//     }\r\n//     props.push({text: 'uid', value: task.uidDebug});\r\n//     if (task.__pipeline) {\r\n//         props.push({text: 'pid', value: task.__pipeline.id});\r\n//         task.agent && props.push(\r\n//             {text: 'stubFor', value: task.agent.uidDebug}\r\n//         );\r\n//     }\r\n//     props.push(\r\n//         {text: 'dirty', value: task._dirty},\r\n//         {text: 'dueIndex', value: task._dueIndex},\r\n//         {text: 'dueEnd', value: task._dueEnd},\r\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\r\n//     );\r\n//     if (extra) {\r\n//         Object.keys(extra).forEach(key => {\r\n//             props.push({text: key, value: extra[key]});\r\n//         });\r\n//     }\r\n//     var args = ['color: blue'];\r\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\r\n//         args.push('color: black', 'color: red'),\r\n//         `${item.text}: %c${item.value}`\r\n//     )).join('%c, ');\r\n//     console.log.apply(console, [msg].concat(args));\r\n//     // console.log(this);\r\n// }\r\n\r\n\r\nexports.createTask = createTask;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar contrastColor = '#eee';\r\n\r\nvar axisCommon = function () {\r\n  return {\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: contrastColor\r\n      }\r\n    },\r\n    axisTick: {\r\n      lineStyle: {\r\n        color: contrastColor\r\n      }\r\n    },\r\n    axisLabel: {\r\n      textStyle: {\r\n        color: contrastColor\r\n      }\r\n    },\r\n    splitLine: {\r\n      lineStyle: {\r\n        type: 'dashed',\r\n        color: '#aaa'\r\n      }\r\n    },\r\n    splitArea: {\r\n      areaStyle: {\r\n        color: contrastColor\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\r\nvar theme = {\r\n  color: colorPalette,\r\n  backgroundColor: '#333',\r\n  tooltip: {\r\n    axisPointer: {\r\n      lineStyle: {\r\n        color: contrastColor\r\n      },\r\n      crossStyle: {\r\n        color: contrastColor\r\n      },\r\n      label: {\r\n        color: '#000'\r\n      }\r\n    }\r\n  },\r\n  legend: {\r\n    textStyle: {\r\n      color: contrastColor\r\n    }\r\n  },\r\n  textStyle: {\r\n    color: contrastColor\r\n  },\r\n  title: {\r\n    textStyle: {\r\n      color: contrastColor\r\n    }\r\n  },\r\n  toolbox: {\r\n    iconStyle: {\r\n      normal: {\r\n        borderColor: contrastColor\r\n      }\r\n    }\r\n  },\r\n  dataZoom: {\r\n    textStyle: {\r\n      color: contrastColor\r\n    }\r\n  },\r\n  visualMap: {\r\n    textStyle: {\r\n      color: contrastColor\r\n    }\r\n  },\r\n  timeline: {\r\n    lineStyle: {\r\n      color: contrastColor\r\n    },\r\n    itemStyle: {\r\n      normal: {\r\n        color: colorPalette[1]\r\n      }\r\n    },\r\n    label: {\r\n      normal: {\r\n        textStyle: {\r\n          color: contrastColor\r\n        }\r\n      }\r\n    },\r\n    controlStyle: {\r\n      normal: {\r\n        color: contrastColor,\r\n        borderColor: contrastColor\r\n      }\r\n    }\r\n  },\r\n  timeAxis: axisCommon(),\r\n  logAxis: axisCommon(),\r\n  valueAxis: axisCommon(),\r\n  categoryAxis: axisCommon(),\r\n  line: {\r\n    symbol: 'circle'\r\n  },\r\n  graph: {\r\n    color: colorPalette\r\n  },\r\n  gauge: {\r\n    title: {\r\n      textStyle: {\r\n        color: contrastColor\r\n      }\r\n    }\r\n  },\r\n  candlestick: {\r\n    itemStyle: {\r\n      normal: {\r\n        color: '#FD1050',\r\n        color0: '#0CF49B',\r\n        borderColor: '#FD1050',\r\n        borderColor0: '#0CF49B'\r\n      }\r\n    }\r\n  }\r\n};\r\ntheme.categoryAxis.splitLine.show = false;\r\nvar _default = theme;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\r\nvar _default = {\r\n  color: colorAll,\r\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @param {number} [time=500] Time in ms\r\n * @param {string} [easing='linear']\r\n * @param {number} [delay=0]\r\n * @param {Function} [callback]\r\n *\r\n * @example\r\n *  // Animate position\r\n *  animation\r\n *      .createWrap()\r\n *      .add(el1, {position: [10, 10]})\r\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\r\n *      .done(function () { // done })\r\n *      .start('cubicOut');\r\n */\r\nfunction createWrap() {\r\n  var storage = [];\r\n  var elExistsMap = {};\r\n  var doneCallback;\r\n  return {\r\n    /**\r\n     * Caution: a el can only be added once, otherwise 'done'\r\n     * might not be called. This method checks this (by el.id),\r\n     * suppresses adding and returns false when existing el found.\r\n     *\r\n     * @param {modele:zrender/Element} el\r\n     * @param {Object} target\r\n     * @param {number} [time=500]\r\n     * @param {number} [delay=0]\r\n     * @param {string} [easing='linear']\r\n     * @return {boolean} Whether adding succeeded.\r\n     *\r\n     * @example\r\n     *     add(el, target, time, delay, easing);\r\n     *     add(el, target, time, easing);\r\n     *     add(el, target, time);\r\n     *     add(el, target);\r\n     */\r\n    add: function (el, target, time, delay, easing) {\r\n      if (zrUtil.isString(delay)) {\r\n        easing = delay;\r\n        delay = 0;\r\n      }\r\n\r\n      if (elExistsMap[el.id]) {\r\n        return false;\r\n      }\r\n\r\n      elExistsMap[el.id] = 1;\r\n      storage.push({\r\n        el: el,\r\n        target: target,\r\n        time: time,\r\n        delay: delay,\r\n        easing: easing\r\n      });\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * Only execute when animation finished. Will not execute when any\r\n     * of 'stop' or 'stopAnimation' called.\r\n     *\r\n     * @param {Function} callback\r\n     */\r\n    done: function (callback) {\r\n      doneCallback = callback;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Will stop exist animation firstly.\r\n     */\r\n    start: function () {\r\n      var count = storage.length;\r\n\r\n      for (var i = 0, len = storage.length; i < len; i++) {\r\n        var item = storage[i];\r\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\r\n      }\r\n\r\n      return this;\r\n\r\n      function done() {\r\n        count--;\r\n\r\n        if (!count) {\r\n          storage.length = 0;\r\n          elExistsMap = {};\r\n          doneCallback && doneCallback();\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexports.createWrap = createWrap;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar TYPE_DELIMITER = '.';\r\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\r\n/**\r\n * Notice, parseClassType('') should returns {main: '', sub: ''}\r\n * @public\r\n */\r\n\r\nfunction parseClassType(componentType) {\r\n  var ret = {\r\n    main: '',\r\n    sub: ''\r\n  };\r\n\r\n  if (componentType) {\r\n    componentType = componentType.split(TYPE_DELIMITER);\r\n    ret.main = componentType[0] || '';\r\n    ret.sub = componentType[1] || '';\r\n  }\r\n\r\n  return ret;\r\n}\r\n/**\r\n * @public\r\n */\r\n\r\n\r\nfunction checkClassType(componentType) {\r\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\r\n}\r\n/**\r\n * @public\r\n */\r\n\r\n\r\nfunction enableClassExtend(RootClass, mandatoryMethods) {\r\n  RootClass.$constructor = RootClass;\r\n\r\n  RootClass.extend = function (proto) {\r\n    var superClass = this;\r\n\r\n    var ExtendedClass = function () {\r\n      if (!proto.$constructor) {\r\n        superClass.apply(this, arguments);\r\n      } else {\r\n        proto.$constructor.apply(this, arguments);\r\n      }\r\n    };\r\n\r\n    zrUtil.extend(ExtendedClass.prototype, proto);\r\n    ExtendedClass.extend = this.extend;\r\n    ExtendedClass.superCall = superCall;\r\n    ExtendedClass.superApply = superApply;\r\n    zrUtil.inherits(ExtendedClass, this);\r\n    ExtendedClass.superClass = superClass;\r\n    return ExtendedClass;\r\n  };\r\n}\r\n\r\nvar classBase = 0;\r\n/**\r\n * Can not use instanceof, consider different scope by\r\n * cross domain or es module import in ec extensions.\r\n * Mount a method \"isInstance()\" to Clz.\r\n */\r\n\r\nfunction enableClassCheck(Clz) {\r\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\r\n  Clz.prototype[classAttr] = true;\r\n\r\n  Clz.isInstance = function (obj) {\r\n    return !!(obj && obj[classAttr]);\r\n  };\r\n} // superCall should have class info, which can not be fetch from 'this'.\r\n// Consider this case:\r\n// class A has method f,\r\n// class B inherits class A, overrides method f, f call superApply('f'),\r\n// class C inherits class B, do not overrides method f,\r\n// then when method of class C is called, dead loop occured.\r\n\r\n\r\nfunction superCall(context, methodName) {\r\n  var args = zrUtil.slice(arguments, 2);\r\n  return this.superClass.prototype[methodName].apply(context, args);\r\n}\r\n\r\nfunction superApply(context, methodName, args) {\r\n  return this.superClass.prototype[methodName].apply(context, args);\r\n}\r\n/**\r\n * @param {Object} entity\r\n * @param {Object} options\r\n * @param {boolean} [options.registerWhenExtend]\r\n * @public\r\n */\r\n\r\n\r\nfunction enableClassManagement(entity, options) {\r\n  options = options || {};\r\n  /**\r\n   * Component model classes\r\n   * key: componentType,\r\n   * value:\r\n   *     componentClass, when componentType is 'xxx'\r\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\r\n   * @type {Object}\r\n   */\r\n\r\n  var storage = {};\r\n\r\n  entity.registerClass = function (Clazz, componentType) {\r\n    if (componentType) {\r\n      checkClassType(componentType);\r\n      componentType = parseClassType(componentType);\r\n\r\n      if (!componentType.sub) {\r\n        storage[componentType.main] = Clazz;\r\n      } else if (componentType.sub !== IS_CONTAINER) {\r\n        var container = makeContainer(componentType);\r\n        container[componentType.sub] = Clazz;\r\n      }\r\n    }\r\n\r\n    return Clazz;\r\n  };\r\n\r\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\r\n    var Clazz = storage[componentMainType];\r\n\r\n    if (Clazz && Clazz[IS_CONTAINER]) {\r\n      Clazz = subType ? Clazz[subType] : null;\r\n    }\r\n\r\n    if (throwWhenNotFound && !Clazz) {\r\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\r\n    }\r\n\r\n    return Clazz;\r\n  };\r\n\r\n  entity.getClassesByMainType = function (componentType) {\r\n    componentType = parseClassType(componentType);\r\n    var result = [];\r\n    var obj = storage[componentType.main];\r\n\r\n    if (obj && obj[IS_CONTAINER]) {\r\n      zrUtil.each(obj, function (o, type) {\r\n        type !== IS_CONTAINER && result.push(o);\r\n      });\r\n    } else {\r\n      result.push(obj);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  entity.hasClass = function (componentType) {\r\n    // Just consider componentType.main.\r\n    componentType = parseClassType(componentType);\r\n    return !!storage[componentType.main];\r\n  };\r\n  /**\r\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\r\n   */\r\n\r\n\r\n  entity.getAllClassMainTypes = function () {\r\n    var types = [];\r\n    zrUtil.each(storage, function (obj, type) {\r\n      types.push(type);\r\n    });\r\n    return types;\r\n  };\r\n  /**\r\n   * If a main type is container and has sub types\r\n   * @param  {string}  mainType\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  entity.hasSubTypes = function (componentType) {\r\n    componentType = parseClassType(componentType);\r\n    var obj = storage[componentType.main];\r\n    return obj && obj[IS_CONTAINER];\r\n  };\r\n\r\n  entity.parseClassType = parseClassType;\r\n\r\n  function makeContainer(componentType) {\r\n    var container = storage[componentType.main];\r\n\r\n    if (!container || !container[IS_CONTAINER]) {\r\n      container = storage[componentType.main] = {};\r\n      container[IS_CONTAINER] = true;\r\n    }\r\n\r\n    return container;\r\n  }\r\n\r\n  if (options.registerWhenExtend) {\r\n    var originalExtend = entity.extend;\r\n\r\n    if (originalExtend) {\r\n      entity.extend = function (proto) {\r\n        var ExtendedClass = originalExtend.call(this, proto);\r\n        return entity.registerClass(ExtendedClass, proto.type);\r\n      };\r\n    }\r\n  }\r\n\r\n  return entity;\r\n}\r\n/**\r\n * @param {string|Array.<string>} properties\r\n */\r\n\r\n\r\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\r\n  // if (!zrUtil.isArray(properties)) {\r\n  //     properties = properties != null ? [properties] : [];\r\n  // }\r\n  // zrUtil.each(properties, function (prop) {\r\n  //     var value = obj[prop];\r\n  //     Object.defineProperty\r\n  //         && Object.defineProperty(obj, prop, {\r\n  //             value: value, writable: false\r\n  //         });\r\n  //     zrUtil.isArray(obj[prop])\r\n  //         && Object.freeze\r\n  //         && Object.freeze(obj[prop]);\r\n  // });\r\n}\r\n\r\nexports.parseClassType = parseClassType;\r\nexports.enableClassExtend = enableClassExtend;\r\nexports.enableClassCheck = enableClassCheck;\r\nexports.enableClassManagement = enableClassManagement;\r\nexports.setReadOnly = setReadOnly;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _clazz = require(\"./clazz\");\r\n\r\nvar parseClassType = _clazz.parseClassType;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar base = 0;\r\n/**\r\n * @public\r\n * @param {string} type\r\n * @return {string}\r\n */\r\n\r\nfunction getUID(type) {\r\n  // Considering the case of crossing js context,\r\n  // use Math.random to make id as unique as possible.\r\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\r\n}\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction enableSubTypeDefaulter(entity) {\r\n  var subTypeDefaulters = {};\r\n\r\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\r\n    componentType = parseClassType(componentType);\r\n    subTypeDefaulters[componentType.main] = defaulter;\r\n  };\r\n\r\n  entity.determineSubType = function (componentType, option) {\r\n    var type = option.type;\r\n\r\n    if (!type) {\r\n      var componentTypeMain = parseClassType(componentType).main;\r\n\r\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\r\n        type = subTypeDefaulters[componentTypeMain](option);\r\n      }\r\n    }\r\n\r\n    return type;\r\n  };\r\n\r\n  return entity;\r\n}\r\n/**\r\n * Topological travel on Activity Network (Activity On Vertices).\r\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\r\n *\r\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\r\n *\r\n * If there is circle dependencey, Error will be thrown.\r\n *\r\n */\r\n\r\n\r\nfunction enableTopologicalTravel(entity, dependencyGetter) {\r\n  /**\r\n   * @public\r\n   * @param {Array.<string>} targetNameList Target Component type list.\r\n   *                                           Can be ['aa', 'bb', 'aa.xx']\r\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\r\n   * @param {Function} callback Params: componentType, dependencies.\r\n   * @param {Object} context Scope of callback.\r\n   */\r\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\r\n    if (!targetNameList.length) {\r\n      return;\r\n    }\r\n\r\n    var result = makeDepndencyGraph(fullNameList);\r\n    var graph = result.graph;\r\n    var stack = result.noEntryList;\r\n    var targetNameSet = {};\r\n    zrUtil.each(targetNameList, function (name) {\r\n      targetNameSet[name] = true;\r\n    });\r\n\r\n    while (stack.length) {\r\n      var currComponentType = stack.pop();\r\n      var currVertex = graph[currComponentType];\r\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\r\n\r\n      if (isInTargetNameSet) {\r\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\r\n        delete targetNameSet[currComponentType];\r\n      }\r\n\r\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\r\n    }\r\n\r\n    zrUtil.each(targetNameSet, function () {\r\n      throw new Error('Circle dependency may exists');\r\n    });\r\n\r\n    function removeEdge(succComponentType) {\r\n      graph[succComponentType].entryCount--;\r\n\r\n      if (graph[succComponentType].entryCount === 0) {\r\n        stack.push(succComponentType);\r\n      }\r\n    } // Consider this case: legend depends on series, and we call\r\n    // chart.setOption({series: [...]}), where only series is in option.\r\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\r\n    // not be called, but only sereis.mergeOption is called. Thus legend\r\n    // have no chance to update its local record about series (like which\r\n    // name of series is available in legend).\r\n\r\n\r\n    function removeEdgeAndAdd(succComponentType) {\r\n      targetNameSet[succComponentType] = true;\r\n      removeEdge(succComponentType);\r\n    }\r\n  };\r\n  /**\r\n   * DepndencyGraph: {Object}\r\n   * key: conponentType,\r\n   * value: {\r\n   *     successor: [conponentTypes...],\r\n   *     originalDeps: [conponentTypes...],\r\n   *     entryCount: {number}\r\n   * }\r\n   */\r\n\r\n\r\n  function makeDepndencyGraph(fullNameList) {\r\n    var graph = {};\r\n    var noEntryList = [];\r\n    zrUtil.each(fullNameList, function (name) {\r\n      var thisItem = createDependencyGraphItem(graph, name);\r\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\r\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\r\n      thisItem.entryCount = availableDeps.length;\r\n\r\n      if (thisItem.entryCount === 0) {\r\n        noEntryList.push(name);\r\n      }\r\n\r\n      zrUtil.each(availableDeps, function (dependentName) {\r\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\r\n          thisItem.predecessor.push(dependentName);\r\n        }\r\n\r\n        var thatItem = createDependencyGraphItem(graph, dependentName);\r\n\r\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\r\n          thatItem.successor.push(name);\r\n        }\r\n      });\r\n    });\r\n    return {\r\n      graph: graph,\r\n      noEntryList: noEntryList\r\n    };\r\n  }\r\n\r\n  function createDependencyGraphItem(graph, name) {\r\n    if (!graph[name]) {\r\n      graph[name] = {\r\n        predecessor: [],\r\n        successor: []\r\n      };\r\n    }\r\n\r\n    return graph[name];\r\n  }\r\n\r\n  function getAvailableDependencies(originalDeps, fullNameList) {\r\n    var availableDeps = [];\r\n    zrUtil.each(originalDeps, function (dep) {\r\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\r\n    });\r\n    return availableDeps;\r\n  }\r\n}\r\n\r\nexports.getUID = getUID;\r\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\r\nexports.enableTopologicalTravel = enableTopologicalTravel;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar textContain = require(\"zrender/lib/contain/text\");\r\n\r\nvar numberUtil = require(\"./number\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// import Text from 'zrender/src/graphic/Text';\r\n\r\n/**\r\n * add commas after every three numbers\r\n * @param {string|number} x\r\n * @return {string}\r\n */\r\nfunction addCommas(x) {\r\n  if (isNaN(x)) {\r\n    return '-';\r\n  }\r\n\r\n  x = (x + '').split('.');\r\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\r\n}\r\n/**\r\n * @param {string} str\r\n * @param {boolean} [upperCaseFirst=false]\r\n * @return {string} str\r\n */\r\n\r\n\r\nfunction toCamelCase(str, upperCaseFirst) {\r\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\r\n    return group1.toUpperCase();\r\n  });\r\n\r\n  if (upperCaseFirst && str) {\r\n    str = str.charAt(0).toUpperCase() + str.slice(1);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nvar normalizeCssArray = zrUtil.normalizeCssArray;\r\nvar replaceReg = /([&<>\"'])/g;\r\nvar replaceMap = {\r\n  '&': '&amp;',\r\n  '<': '&lt;',\r\n  '>': '&gt;',\r\n  '\"': '&quot;',\r\n  '\\'': '&#39;'\r\n};\r\n\r\nfunction encodeHTML(source) {\r\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\r\n    return replaceMap[c];\r\n  });\r\n}\r\n\r\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\r\n\r\nvar wrapVar = function (varName, seriesIdx) {\r\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\r\n};\r\n/**\r\n * Template formatter\r\n * @param {string} tpl\r\n * @param {Array.<Object>|Object} paramsList\r\n * @param {boolean} [encode=false]\r\n * @return {string}\r\n */\r\n\r\n\r\nfunction formatTpl(tpl, paramsList, encode) {\r\n  if (!zrUtil.isArray(paramsList)) {\r\n    paramsList = [paramsList];\r\n  }\r\n\r\n  var seriesLen = paramsList.length;\r\n\r\n  if (!seriesLen) {\r\n    return '';\r\n  }\r\n\r\n  var $vars = paramsList[0].$vars || [];\r\n\r\n  for (var i = 0; i < $vars.length; i++) {\r\n    var alias = TPL_VAR_ALIAS[i];\r\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\r\n  }\r\n\r\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\r\n    for (var k = 0; k < $vars.length; k++) {\r\n      var val = paramsList[seriesIdx][$vars[k]];\r\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\r\n    }\r\n  }\r\n\r\n  return tpl;\r\n}\r\n/**\r\n * simple Template formatter\r\n *\r\n * @param {string} tpl\r\n * @param {Object} param\r\n * @param {boolean} [encode=false]\r\n * @return {string}\r\n */\r\n\r\n\r\nfunction formatTplSimple(tpl, param, encode) {\r\n  zrUtil.each(param, function (value, key) {\r\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\r\n  });\r\n  return tpl;\r\n}\r\n/**\r\n * @param {Object|string} [opt] If string, means color.\r\n * @param {string} [opt.color]\r\n * @param {string} [opt.extraCssText]\r\n * @param {string} [opt.type='item'] 'item' or 'subItem'\r\n * @param {string} [opt.renderMode='html'] render mode of tooltip, 'html' or 'richText'\r\n * @param {string} [opt.markerId='X'] id name for marker. If only one marker is in a rich text, this can be omitted.\r\n * @return {string}\r\n */\r\n\r\n\r\nfunction getTooltipMarker(opt, extraCssText) {\r\n  opt = zrUtil.isString(opt) ? {\r\n    color: opt,\r\n    extraCssText: extraCssText\r\n  } : opt || {};\r\n  var color = opt.color;\r\n  var type = opt.type;\r\n  var extraCssText = opt.extraCssText;\r\n  var renderMode = opt.renderMode || 'html';\r\n  var markerId = opt.markerId || 'X';\r\n\r\n  if (!color) {\r\n    return '';\r\n  }\r\n\r\n  if (renderMode === 'html') {\r\n    return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\r\n  } else {\r\n    // Space for rich element marker\r\n    return {\r\n      renderMode: renderMode,\r\n      content: '{marker' + markerId + '|}  ',\r\n      style: {\r\n        color: color\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nfunction pad(str, len) {\r\n  str += '';\r\n  return '0000'.substr(0, len - str.length) + str;\r\n}\r\n/**\r\n * ISO Date format\r\n * @param {string} tpl\r\n * @param {number} value\r\n * @param {boolean} [isUTC=false] Default in local time.\r\n *           see `module:echarts/scale/Time`\r\n *           and `module:echarts/util/number#parseDate`.\r\n * @inner\r\n */\r\n\r\n\r\nfunction formatTime(tpl, value, isUTC) {\r\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\r\n    tpl = 'MM-dd\\nyyyy';\r\n  }\r\n\r\n  var date = numberUtil.parseDate(value);\r\n  var utc = isUTC ? 'UTC' : '';\r\n  var y = date['get' + utc + 'FullYear']();\r\n  var M = date['get' + utc + 'Month']() + 1;\r\n  var d = date['get' + utc + 'Date']();\r\n  var h = date['get' + utc + 'Hours']();\r\n  var m = date['get' + utc + 'Minutes']();\r\n  var s = date['get' + utc + 'Seconds']();\r\n  var S = date['get' + utc + 'Milliseconds']();\r\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\r\n  return tpl;\r\n}\r\n/**\r\n * Capital first\r\n * @param {string} str\r\n * @return {string}\r\n */\r\n\r\n\r\nfunction capitalFirst(str) {\r\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\r\n}\r\n\r\nvar truncateText = textContain.truncateText;\r\n/**\r\n * @public\r\n * @param {Object} opt\r\n * @param {string} opt.text\r\n * @param {string} opt.font\r\n * @param {string} [opt.textAlign='left']\r\n * @param {string} [opt.textVerticalAlign='top']\r\n * @param {Array.<number>} [opt.textPadding]\r\n * @param {number} [opt.textLineHeight]\r\n * @param {Object} [opt.rich]\r\n * @param {Object} [opt.truncate]\r\n * @return {Object} {x, y, width, height, lineHeight}\r\n */\r\n\r\nfunction getTextBoundingRect(opt) {\r\n  return textContain.getBoundingRect(opt.text, opt.font, opt.textAlign, opt.textVerticalAlign, opt.textPadding, opt.textLineHeight, opt.rich, opt.truncate);\r\n}\r\n/**\r\n * @deprecated\r\n * the `textLineHeight` was added later.\r\n * For backward compatiblility, put it as the last parameter.\r\n * But deprecated this interface. Please use `getTextBoundingRect` instead.\r\n */\r\n\r\n\r\nfunction getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate, textLineHeight) {\r\n  return textContain.getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, rich, truncate);\r\n}\r\n/**\r\n * open new tab\r\n * @param {string} link url\r\n * @param {string} target blank or self\r\n */\r\n\r\n\r\nfunction windowOpen(link, target) {\r\n  if (target === '_blank' || target === 'blank') {\r\n    var blank = window.open();\r\n    blank.opener = null;\r\n    blank.location = link;\r\n  } else {\r\n    window.open(link, target);\r\n  }\r\n}\r\n\r\nexports.addCommas = addCommas;\r\nexports.toCamelCase = toCamelCase;\r\nexports.normalizeCssArray = normalizeCssArray;\r\nexports.encodeHTML = encodeHTML;\r\nexports.formatTpl = formatTpl;\r\nexports.formatTplSimple = formatTplSimple;\r\nexports.getTooltipMarker = getTooltipMarker;\r\nexports.formatTime = formatTime;\r\nexports.capitalFirst = capitalFirst;\r\nexports.truncateText = truncateText;\r\nexports.getTextBoundingRect = getTextBoundingRect;\r\nexports.getTextRect = getTextRect;\r\nexports.windowOpen = windowOpen;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar pathTool = require(\"zrender/lib/tool/path\");\r\n\r\nvar colorTool = require(\"zrender/lib/tool/color\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar vector = require(\"zrender/lib/core/vector\");\r\n\r\nvar Path = require(\"zrender/lib/graphic/Path\");\r\n\r\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\r\n\r\nvar ZImage = require(\"zrender/lib/graphic/Image\");\r\n\r\nexports.Image = ZImage;\r\n\r\nvar Group = require(\"zrender/lib/container/Group\");\r\n\r\nexports.Group = Group;\r\n\r\nvar Text = require(\"zrender/lib/graphic/Text\");\r\n\r\nexports.Text = Text;\r\n\r\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\r\n\r\nexports.Circle = Circle;\r\n\r\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\r\n\r\nexports.Sector = Sector;\r\n\r\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\r\n\r\nexports.Ring = Ring;\r\n\r\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\r\n\r\nexports.Polygon = Polygon;\r\n\r\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\r\n\r\nexports.Polyline = Polyline;\r\n\r\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\r\n\r\nexports.Rect = Rect;\r\n\r\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\r\n\r\nexports.Line = Line;\r\n\r\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\r\n\r\nexports.BezierCurve = BezierCurve;\r\n\r\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\r\n\r\nexports.Arc = Arc;\r\n\r\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\r\n\r\nexports.CompoundPath = CompoundPath;\r\n\r\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\r\n\r\nexports.LinearGradient = LinearGradient;\r\n\r\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\r\n\r\nexports.RadialGradient = RadialGradient;\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nexports.BoundingRect = BoundingRect;\r\n\r\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\r\n\r\nexports.IncrementalDisplayable = IncrementalDisplayable;\r\n\r\nvar subPixelOptimizeUtil = require(\"zrender/lib/graphic/helper/subPixelOptimize\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar mathMax = Math.max;\r\nvar mathMin = Math.min;\r\nvar EMPTY_OBJ = {};\r\nvar Z2_EMPHASIS_LIFT = 1; // key: label model property nane, value: style property name.\r\n\r\nvar CACHED_LABEL_STYLE_PROPERTIES = {\r\n  color: 'textFill',\r\n  textBorderColor: 'textStroke',\r\n  textBorderWidth: 'textStrokeWidth'\r\n};\r\nvar EMPHASIS = 'emphasis';\r\nvar NORMAL = 'normal'; // Reserve 0 as default.\r\n\r\nvar _highlightNextDigit = 1;\r\nvar _highlightKeyMap = {};\r\nvar _customShapeMap = {};\r\n/**\r\n * Extend shape with parameters\r\n */\r\n\r\nfunction extendShape(opts) {\r\n  return Path.extend(opts);\r\n}\r\n/**\r\n * Extend path\r\n */\r\n\r\n\r\nfunction extendPath(pathData, opts) {\r\n  return pathTool.extendFromString(pathData, opts);\r\n}\r\n/**\r\n * Register a user defined shape.\r\n * The shape class can be fetched by `getShapeClass`\r\n * This method will overwrite the registered shapes, including\r\n * the registered built-in shapes, if using the same `name`.\r\n * The shape can be used in `custom series` and\r\n * `graphic component` by declaring `{type: name}`.\r\n *\r\n * @param {string} name\r\n * @param {Object} ShapeClass Can be generated by `extendShape`.\r\n */\r\n\r\n\r\nfunction registerShape(name, ShapeClass) {\r\n  _customShapeMap[name] = ShapeClass;\r\n}\r\n/**\r\n * Find shape class registered by `registerShape`. Usually used in\r\n * fetching user defined shape.\r\n *\r\n * [Caution]:\r\n * (1) This method **MUST NOT be used inside echarts !!!**, unless it is prepared\r\n * to use user registered shapes.\r\n * Because the built-in shape (see `getBuiltInShape`) will be registered by\r\n * `registerShape` by default. That enables users to get both built-in\r\n * shapes as well as the shapes belonging to themsleves. But users can overwrite\r\n * the built-in shapes by using names like 'circle', 'rect' via calling\r\n * `registerShape`. So the echarts inner featrues should not fetch shapes from here\r\n * in case that it is overwritten by users, except that some features, like\r\n * `custom series`, `graphic component`, do it deliberately.\r\n *\r\n * (2) In the features like `custom series`, `graphic component`, the user input\r\n * `{tpye: 'xxx'}` does not only specify shapes but also specify other graphic\r\n * elements like `'group'`, `'text'`, `'image'` or event `'path'`. Those names\r\n * are reserved names, that is, if some user register a shape named `'image'`,\r\n * the shape will not be used. If we intending to add some more reserved names\r\n * in feature, that might bring break changes (disable some existing user shape\r\n * names). But that case probably rearly happen. So we dont make more mechanism\r\n * to resolve this issue here.\r\n *\r\n * @param {string} name\r\n * @return {Object} The shape class. If not found, return nothing.\r\n */\r\n\r\n\r\nfunction getShapeClass(name) {\r\n  if (_customShapeMap.hasOwnProperty(name)) {\r\n    return _customShapeMap[name];\r\n  }\r\n}\r\n/**\r\n * Create a path element from path data string\r\n * @param {string} pathData\r\n * @param {Object} opts\r\n * @param {module:zrender/core/BoundingRect} rect\r\n * @param {string} [layout=cover] 'center' or 'cover'\r\n */\r\n\r\n\r\nfunction makePath(pathData, opts, rect, layout) {\r\n  var path = pathTool.createFromString(pathData, opts);\r\n\r\n  if (rect) {\r\n    if (layout === 'center') {\r\n      rect = centerGraphic(rect, path.getBoundingRect());\r\n    }\r\n\r\n    resizePath(path, rect);\r\n  }\r\n\r\n  return path;\r\n}\r\n/**\r\n * Create a image element from image url\r\n * @param {string} imageUrl image url\r\n * @param {Object} opts options\r\n * @param {module:zrender/core/BoundingRect} rect constrain rect\r\n * @param {string} [layout=cover] 'center' or 'cover'\r\n */\r\n\r\n\r\nfunction makeImage(imageUrl, rect, layout) {\r\n  var path = new ZImage({\r\n    style: {\r\n      image: imageUrl,\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height\r\n    },\r\n    onload: function (img) {\r\n      if (layout === 'center') {\r\n        var boundingRect = {\r\n          width: img.width,\r\n          height: img.height\r\n        };\r\n        path.setStyle(centerGraphic(rect, boundingRect));\r\n      }\r\n    }\r\n  });\r\n  return path;\r\n}\r\n/**\r\n * Get position of centered element in bounding box.\r\n *\r\n * @param  {Object} rect         element local bounding box\r\n * @param  {Object} boundingRect constraint bounding box\r\n * @return {Object} element position containing x, y, width, and height\r\n */\r\n\r\n\r\nfunction centerGraphic(rect, boundingRect) {\r\n  // Set rect to center, keep width / height ratio.\r\n  var aspect = boundingRect.width / boundingRect.height;\r\n  var width = rect.height * aspect;\r\n  var height;\r\n\r\n  if (width <= rect.width) {\r\n    height = rect.height;\r\n  } else {\r\n    width = rect.width;\r\n    height = width / aspect;\r\n  }\r\n\r\n  var cx = rect.x + rect.width / 2;\r\n  var cy = rect.y + rect.height / 2;\r\n  return {\r\n    x: cx - width / 2,\r\n    y: cy - height / 2,\r\n    width: width,\r\n    height: height\r\n  };\r\n}\r\n\r\nvar mergePath = pathTool.mergePath;\r\n/**\r\n * Resize a path to fit the rect\r\n * @param {module:zrender/graphic/Path} path\r\n * @param {Object} rect\r\n */\r\n\r\nfunction resizePath(path, rect) {\r\n  if (!path.applyTransform) {\r\n    return;\r\n  }\r\n\r\n  var pathRect = path.getBoundingRect();\r\n  var m = pathRect.calculateTransform(rect);\r\n  path.applyTransform(m);\r\n}\r\n/**\r\n * Sub pixel optimize line for canvas\r\n *\r\n * @param {Object} param\r\n * @param {Object} [param.shape]\r\n * @param {number} [param.shape.x1]\r\n * @param {number} [param.shape.y1]\r\n * @param {number} [param.shape.x2]\r\n * @param {number} [param.shape.y2]\r\n * @param {Object} [param.style]\r\n * @param {number} [param.style.lineWidth]\r\n * @return {Object} Modified param\r\n */\r\n\r\n\r\nfunction subPixelOptimizeLine(param) {\r\n  subPixelOptimizeUtil.subPixelOptimizeLine(param.shape, param.shape, param.style);\r\n  return param;\r\n}\r\n/**\r\n * Sub pixel optimize rect for canvas\r\n *\r\n * @param {Object} param\r\n * @param {Object} [param.shape]\r\n * @param {number} [param.shape.x]\r\n * @param {number} [param.shape.y]\r\n * @param {number} [param.shape.width]\r\n * @param {number} [param.shape.height]\r\n * @param {Object} [param.style]\r\n * @param {number} [param.style.lineWidth]\r\n * @return {Object} Modified param\r\n */\r\n\r\n\r\nfunction subPixelOptimizeRect(param) {\r\n  subPixelOptimizeUtil.subPixelOptimizeRect(param.shape, param.shape, param.style);\r\n  return param;\r\n}\r\n/**\r\n * Sub pixel optimize for canvas\r\n *\r\n * @param {number} position Coordinate, such as x, y\r\n * @param {number} lineWidth Should be nonnegative integer.\r\n * @param {boolean=} positiveOrNegative Default false (negative).\r\n * @return {number} Optimized position.\r\n */\r\n\r\n\r\nvar subPixelOptimize = subPixelOptimizeUtil.subPixelOptimize;\r\n\r\nfunction hasFillOrStroke(fillOrStroke) {\r\n  return fillOrStroke != null && fillOrStroke !== 'none';\r\n} // Most lifted color are duplicated.\r\n\r\n\r\nvar liftedColorMap = zrUtil.createHashMap();\r\nvar liftedColorCount = 0;\r\n\r\nfunction liftColor(color) {\r\n  if (typeof color !== 'string') {\r\n    return color;\r\n  }\r\n\r\n  var liftedColor = liftedColorMap.get(color);\r\n\r\n  if (!liftedColor) {\r\n    liftedColor = colorTool.lift(color, -0.1);\r\n\r\n    if (liftedColorCount < 10000) {\r\n      liftedColorMap.set(color, liftedColor);\r\n      liftedColorCount++;\r\n    }\r\n  }\r\n\r\n  return liftedColor;\r\n}\r\n\r\nfunction cacheElementStl(el) {\r\n  if (!el.__hoverStlDirty) {\r\n    return;\r\n  }\r\n\r\n  el.__hoverStlDirty = false;\r\n  var hoverStyle = el.__hoverStl;\r\n\r\n  if (!hoverStyle) {\r\n    el.__cachedNormalStl = el.__cachedNormalZ2 = null;\r\n    return;\r\n  }\r\n\r\n  var normalStyle = el.__cachedNormalStl = {};\r\n  el.__cachedNormalZ2 = el.z2;\r\n  var elStyle = el.style;\r\n\r\n  for (var name in hoverStyle) {\r\n    // See comment in `singleEnterEmphasis`.\r\n    if (hoverStyle[name] != null) {\r\n      normalStyle[name] = elStyle[name];\r\n    }\r\n  } // Always cache fill and stroke to normalStyle for lifting color.\r\n\r\n\r\n  normalStyle.fill = elStyle.fill;\r\n  normalStyle.stroke = elStyle.stroke;\r\n}\r\n\r\nfunction singleEnterEmphasis(el) {\r\n  var hoverStl = el.__hoverStl;\r\n\r\n  if (!hoverStl || el.__highlighted) {\r\n    return;\r\n  }\r\n\r\n  var zr = el.__zr;\r\n  var useHoverLayer = el.useHoverLayer && zr && zr.painter.type === 'canvas';\r\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\r\n\r\n  if (el.isGroup || !zr && el.useHoverLayer) {\r\n    return;\r\n  }\r\n\r\n  var elTarget = el;\r\n  var targetStyle = el.style;\r\n\r\n  if (useHoverLayer) {\r\n    elTarget = zr.addHover(el);\r\n    targetStyle = elTarget.style;\r\n  }\r\n\r\n  rollbackDefaultTextStyle(targetStyle);\r\n\r\n  if (!useHoverLayer) {\r\n    cacheElementStl(elTarget);\r\n  } // styles can be:\r\n  // {\r\n  //    label: {\r\n  //        show: false,\r\n  //        position: 'outside',\r\n  //        fontSize: 18\r\n  //    },\r\n  //    emphasis: {\r\n  //        label: {\r\n  //            show: true\r\n  //        }\r\n  //    }\r\n  // },\r\n  // where properties of `emphasis` may not appear in `normal`. We previously use\r\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\r\n  // But consider rich text and setOption in merge mode, it is impossible to cover\r\n  // all properties in merge. So we use merge mode when setting style here.\r\n  // But we choose the merge strategy that only properties that is not `null/undefined`.\r\n  // Because when making a textStyle (espacially rich text), it is not easy to distinguish\r\n  // `hasOwnProperty` and `null/undefined` in code, so we trade them as the same for simplicity.\r\n  // But this strategy brings a trouble that `null/undefined` can not be used to remove\r\n  // style any more in `emphasis`. Users can both set properties directly on normal and\r\n  // emphasis to avoid this issue, or we might support `'none'` for this case if required.\r\n\r\n\r\n  targetStyle.extendFrom(hoverStl);\r\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\r\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\r\n  applyDefaultTextStyle(targetStyle);\r\n\r\n  if (!useHoverLayer) {\r\n    el.dirty(false);\r\n    el.z2 += Z2_EMPHASIS_LIFT;\r\n  }\r\n}\r\n\r\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\r\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\r\n    targetStyle[prop] = liftColor(targetStyle[prop]);\r\n  }\r\n}\r\n\r\nfunction singleEnterNormal(el) {\r\n  var highlighted = el.__highlighted;\r\n\r\n  if (!highlighted) {\r\n    return;\r\n  }\r\n\r\n  el.__highlighted = false;\r\n\r\n  if (el.isGroup) {\r\n    return;\r\n  }\r\n\r\n  if (highlighted === 'layer') {\r\n    el.__zr && el.__zr.removeHover(el);\r\n  } else {\r\n    var style = el.style;\r\n    var normalStl = el.__cachedNormalStl;\r\n\r\n    if (normalStl) {\r\n      rollbackDefaultTextStyle(style);\r\n      el.setStyle(normalStl);\r\n      applyDefaultTextStyle(style);\r\n    } // `__cachedNormalZ2` will not be reset if calling `setElementHoverStyle`\r\n    // when `el` is on emphasis state. So here by comparing with 1, we try\r\n    // hard to make the bug case rare.\r\n\r\n\r\n    var normalZ2 = el.__cachedNormalZ2;\r\n\r\n    if (normalZ2 != null && el.z2 - normalZ2 === Z2_EMPHASIS_LIFT) {\r\n      el.z2 = normalZ2;\r\n    }\r\n  }\r\n}\r\n\r\nfunction traverseUpdate(el, updater, commonParam) {\r\n  // If root is group, also enter updater for `highDownOnUpdate`.\r\n  var fromState = NORMAL;\r\n  var toState = NORMAL;\r\n  var trigger; // See the rule of `highDownOnUpdate` on `graphic.setAsHighDownDispatcher`.\r\n\r\n  el.__highlighted && (fromState = EMPHASIS, trigger = true);\r\n  updater(el, commonParam);\r\n  el.__highlighted && (toState = EMPHASIS, trigger = true);\r\n  el.isGroup && el.traverse(function (child) {\r\n    !child.isGroup && updater(child, commonParam);\r\n  });\r\n  trigger && el.__highDownOnUpdate && el.__highDownOnUpdate(fromState, toState);\r\n}\r\n/**\r\n * Set hover style (namely \"emphasis style\") of element, based on the current\r\n * style of the given `el`.\r\n * This method should be called after all of the normal styles have been adopted\r\n * to the `el`. See the reason on `setHoverStyle`.\r\n *\r\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\r\n * @param {Object} [el.hoverStyle] Can be set on el or its descendants,\r\n *        e.g., `el.hoverStyle = ...; graphic.setHoverStyle(el); `.\r\n *        Often used when item group has a label element and it's hoverStyle is different.\r\n * @param {Object|boolean} [hoverStl] The specified hover style.\r\n *        If set as `false`, disable the hover style.\r\n *        Similarly, The `el.hoverStyle` can alse be set\r\n *        as `false` to disable the hover style.\r\n *        Otherwise, use the default hover style if not provided.\r\n */\r\n\r\n\r\nfunction setElementHoverStyle(el, hoverStl) {\r\n  // For performance consideration, it might be better to make the \"hover style\" only the\r\n  // difference properties from the \"normal style\", but not a entire copy of all styles.\r\n  hoverStl = el.__hoverStl = hoverStl !== false && (el.hoverStyle || hoverStl || {});\r\n  el.__hoverStlDirty = true; // FIXME\r\n  // It is not completely right to save \"normal\"/\"emphasis\" flag on elements.\r\n  // It probably should be saved on `data` of series. Consider the cases:\r\n  // (1) A highlighted elements are moved out of the view port and re-enter\r\n  // again by dataZoom.\r\n  // (2) call `setOption` and replace elements totally when they are highlighted.\r\n\r\n  if (el.__highlighted) {\r\n    // Consider the case:\r\n    // The styles of a highlighted `el` is being updated. The new \"emphasis style\"\r\n    // should be adapted to the `el`. Notice here new \"normal styles\" should have\r\n    // been set outside and the cached \"normal style\" is out of date.\r\n    el.__cachedNormalStl = null; // Do not clear `__cachedNormalZ2` here, because setting `z2` is not a constraint\r\n    // of this method. In most cases, `z2` is not set and hover style should be able\r\n    // to rollback. Of course, that would bring bug, but only in a rare case, see\r\n    // `doSingleLeaveHover` for details.\r\n\r\n    singleEnterNormal(el);\r\n    singleEnterEmphasis(el);\r\n  }\r\n}\r\n\r\nfunction onElementMouseOver(e) {\r\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\r\n  && !this.__highByOuter && traverseUpdate(this, singleEnterEmphasis);\r\n}\r\n\r\nfunction onElementMouseOut(e) {\r\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\r\n  && !this.__highByOuter && traverseUpdate(this, singleEnterNormal);\r\n}\r\n\r\nfunction onElementEmphasisEvent(highlightDigit) {\r\n  this.__highByOuter |= 1 << (highlightDigit || 0);\r\n  traverseUpdate(this, singleEnterEmphasis);\r\n}\r\n\r\nfunction onElementNormalEvent(highlightDigit) {\r\n  !(this.__highByOuter &= ~(1 << (highlightDigit || 0))) && traverseUpdate(this, singleEnterNormal);\r\n}\r\n\r\nfunction shouldSilent(el, e) {\r\n  return el.__highDownSilentOnTouch && e.zrByTouch;\r\n}\r\n/**\r\n * Set hover style (namely \"emphasis style\") of element,\r\n * based on the current style of the given `el`.\r\n *\r\n * (1)\r\n * **CONSTRAINTS** for this method:\r\n * <A> This method MUST be called after all of the normal styles having been adopted\r\n * to the `el`.\r\n * <B> The input `hoverStyle` (that is, \"emphasis style\") MUST be the subset of the\r\n * \"normal style\" having been set to the el.\r\n * <C> `color` MUST be one of the \"normal styles\" (because color might be lifted as\r\n * a default hover style).\r\n *\r\n * The reason: this method treat the current style of the `el` as the \"normal style\"\r\n * and cache them when enter/update the \"emphasis style\". Consider the case: the `el`\r\n * is in \"emphasis\" state and `setOption`/`dispatchAction` trigger the style updating\r\n * logic, where the el should shift from the original emphasis style to the new\r\n * \"emphasis style\" and should be able to \"downplay\" back to the new \"normal style\".\r\n *\r\n * Indeed, it is error-prone to make a interface has so many constraints, but I have\r\n * not found a better solution yet to fit the backward compatibility, performance and\r\n * the current programming style.\r\n *\r\n * (2)\r\n * Call the method for a \"root\" element once. Do not call it for each descendants.\r\n * If the descendants elemenets of a group has itself hover style different from the\r\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\r\n * not call this method for them.\r\n *\r\n * (3) These input parameters can be set directly on `el`:\r\n *\r\n * @param {module:zrender/Element} el\r\n * @param {Object} [el.hoverStyle] See `graphic.setElementHoverStyle`.\r\n * @param {boolean} [el.highDownSilentOnTouch=false] See `graphic.setAsHighDownDispatcher`.\r\n * @param {Function} [el.highDownOnUpdate] See `graphic.setAsHighDownDispatcher`.\r\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\r\n */\r\n\r\n\r\nfunction setHoverStyle(el, hoverStyle) {\r\n  setAsHighDownDispatcher(el, true);\r\n  traverseUpdate(el, setElementHoverStyle, hoverStyle);\r\n}\r\n/**\r\n * @param {module:zrender/Element} el\r\n * @param {Function} [el.highDownOnUpdate] Called when state updated.\r\n *        Since `setHoverStyle` has the constraint that it must be called after\r\n *        all of the normal style updated, `highDownOnUpdate` is not needed to\r\n *        trigger if both `fromState` and `toState` is 'normal', and needed to\r\n *        trigger if both `fromState` and `toState` is 'emphasis', which enables\r\n *        to sync outside style settings to \"emphasis\" state.\r\n *        @this {string} This dispatcher `el`.\r\n *        @param {string} fromState Can be \"normal\" or \"emphasis\".\r\n *               `fromState` might equal to `toState`,\r\n *               for example, when this method is called when `el` is\r\n *               on \"emphasis\" state.\r\n *        @param {string} toState Can be \"normal\" or \"emphasis\".\r\n *\r\n *        FIXME\r\n *        CAUTION: Do not expose `highDownOnUpdate` outside echarts.\r\n *        Because it is not a complete solution. The update\r\n *        listener should not have been mount in element,\r\n *        and the normal/emphasis state should not have\r\n *        mantained on elements.\r\n *\r\n * @param {boolean} [el.highDownSilentOnTouch=false]\r\n *        In touch device, mouseover event will be trigger on touchstart event\r\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\r\n *        conveniently use hoverStyle when tap on touch screen without additional\r\n *        code for compatibility.\r\n *        But if the chart/component has select feature, which usually also use\r\n *        hoverStyle, there might be conflict between 'select-highlight' and\r\n *        'hover-highlight' especially when roam is enabled (see geo for example).\r\n *        In this case, `highDownSilentOnTouch` should be used to disable\r\n *        hover-highlight on touch device.\r\n * @param {boolean} [asDispatcher=true] If `false`, do not set as \"highDownDispatcher\".\r\n */\r\n\r\n\r\nfunction setAsHighDownDispatcher(el, asDispatcher) {\r\n  var disable = asDispatcher === false; // Make `highDownSilentOnTouch` and `highDownOnUpdate` only work after\r\n  // `setAsHighDownDispatcher` called. Avoid it is modified by user unexpectedly.\r\n\r\n  el.__highDownSilentOnTouch = el.highDownSilentOnTouch;\r\n  el.__highDownOnUpdate = el.highDownOnUpdate; // Simple optimize, since this method might be\r\n  // called for each elements of a group in some cases.\r\n\r\n  if (!disable || el.__highDownDispatcher) {\r\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\r\n\r\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually by API or other components like hover link.\r\n\r\n    el[method]('emphasis', onElementEmphasisEvent)[method]('normal', onElementNormalEvent); // Also keep previous record.\r\n\r\n    el.__highByOuter = el.__highByOuter || 0;\r\n    el.__highDownDispatcher = !disable;\r\n  }\r\n}\r\n/**\r\n * @param {module:zrender/src/Element} el\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isHighDownDispatcher(el) {\r\n  return !!(el && el.__highDownDispatcher);\r\n}\r\n/**\r\n * Support hightlight/downplay record on each elements.\r\n * For the case: hover highlight/downplay (legend, visualMap, ...) and\r\n * user triggerred hightlight/downplay should not conflict.\r\n * Only all of the highlightDigit cleared, return to normal.\r\n * @param {string} highlightKey\r\n * @return {number} highlightDigit\r\n */\r\n\r\n\r\nfunction getHighlightDigit(highlightKey) {\r\n  var highlightDigit = _highlightKeyMap[highlightKey];\r\n\r\n  if (highlightDigit == null && _highlightNextDigit <= 32) {\r\n    highlightDigit = _highlightKeyMap[highlightKey] = _highlightNextDigit++;\r\n  }\r\n\r\n  return highlightDigit;\r\n}\r\n/**\r\n * See more info in `setTextStyleCommon`.\r\n * @param {Object|module:zrender/graphic/Style} normalStyle\r\n * @param {Object} emphasisStyle\r\n * @param {module:echarts/model/Model} normalModel\r\n * @param {module:echarts/model/Model} emphasisModel\r\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\r\n * @param {string|Function} [opt.defaultText]\r\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\r\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex, opt.labelProp)`\r\n * @param {number} [opt.labelDataIndex] Fetch text by\r\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex, opt.labelProp)`\r\n * @param {number} [opt.labelDimIndex] Fetch text by\r\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex, opt.labelProp)`\r\n * @param {string} [opt.labelProp] Fetch text by\r\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex, opt.labelProp)`\r\n * @param {Object} [normalSpecified]\r\n * @param {Object} [emphasisSpecified]\r\n */\r\n\r\n\r\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\r\n  opt = opt || EMPTY_OBJ;\r\n  var labelFetcher = opt.labelFetcher;\r\n  var labelDataIndex = opt.labelDataIndex;\r\n  var labelDimIndex = opt.labelDimIndex;\r\n  var labelProp = opt.labelProp; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\r\n  // is not supported util someone requests.\r\n\r\n  var showNormal = normalModel.getShallow('show');\r\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\r\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\r\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\r\n\r\n  var baseText;\r\n\r\n  if (showNormal || showEmphasis) {\r\n    if (labelFetcher) {\r\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex, labelProp);\r\n    }\r\n\r\n    if (baseText == null) {\r\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\r\n    }\r\n  }\r\n\r\n  var normalStyleText = showNormal ? baseText : null;\r\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex, labelProp) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\r\n\r\n  if (normalStyleText != null || emphasisStyleText != null) {\r\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\r\n    // values have to be set on `normalStyle`.\r\n    // If we set default values on `emphasisStyle`, consider case:\r\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\r\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\r\n    // Then the 'red' will not work on emphasis.\r\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\r\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\r\n  }\r\n\r\n  normalStyle.text = normalStyleText;\r\n  emphasisStyle.text = emphasisStyleText;\r\n}\r\n/**\r\n * Modify label style manually.\r\n * Only works after `setLabelStyle` and `setElementHoverStyle` called.\r\n *\r\n * @param {module:zrender/src/Element} el\r\n * @param {Object} [normalStyleProps] optional\r\n * @param {Object} [emphasisStyleProps] optional\r\n */\r\n\r\n\r\nfunction modifyLabelStyle(el, normalStyleProps, emphasisStyleProps) {\r\n  var elStyle = el.style;\r\n\r\n  if (normalStyleProps) {\r\n    rollbackDefaultTextStyle(elStyle);\r\n    el.setStyle(normalStyleProps);\r\n    applyDefaultTextStyle(elStyle);\r\n  }\r\n\r\n  elStyle = el.__hoverStl;\r\n\r\n  if (emphasisStyleProps && elStyle) {\r\n    rollbackDefaultTextStyle(elStyle);\r\n    zrUtil.extend(elStyle, emphasisStyleProps);\r\n    applyDefaultTextStyle(elStyle);\r\n  }\r\n}\r\n/**\r\n * Set basic textStyle properties.\r\n * See more info in `setTextStyleCommon`.\r\n * @param {Object|module:zrender/graphic/Style} textStyle\r\n * @param {module:echarts/model/Model} model\r\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\r\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\r\n * @param {boolean} [isEmphasis]\r\n */\r\n\r\n\r\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\r\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\r\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\r\n\r\n  return textStyle;\r\n}\r\n/**\r\n * Set text option in the style.\r\n * See more info in `setTextStyleCommon`.\r\n * @deprecated\r\n * @param {Object} textStyle\r\n * @param {module:echarts/model/Model} labelModel\r\n * @param {string|boolean} defaultColor Default text color.\r\n *        If set as false, it will be processed as a emphasis style.\r\n */\r\n\r\n\r\nfunction setText(textStyle, labelModel, defaultColor) {\r\n  var opt = {\r\n    isRectText: true\r\n  };\r\n  var isEmphasis;\r\n\r\n  if (defaultColor === false) {\r\n    isEmphasis = true;\r\n  } else {\r\n    // Support setting color as 'auto' to get visual color.\r\n    opt.autoColor = defaultColor;\r\n  }\r\n\r\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\r\n}\r\n/**\r\n * The uniform entry of set text style, that is, retrieve style definitions\r\n * from `model` and set to `textStyle` object.\r\n *\r\n * Never in merge mode, but in overwrite mode, that is, all of the text style\r\n * properties will be set. (Consider the states of normal and emphasis and\r\n * default value can be adopted, merge would make the logic too complicated\r\n * to manage.)\r\n *\r\n * The `textStyle` object can either be a plain object or an instance of\r\n * `zrender/src/graphic/Style`, and either be the style of normal or emphasis.\r\n * After this mothod called, the `textStyle` object can then be used in\r\n * `el.setStyle(textStyle)` or `el.hoverStyle = textStyle`.\r\n *\r\n * Default value will be adopted and `insideRollbackOpt` will be created.\r\n * See `applyDefaultTextStyle` `rollbackDefaultTextStyle` for more details.\r\n *\r\n * opt: {\r\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\r\n *      isRectText: boolean,\r\n *      autoColor: string, specify a color when color is 'auto',\r\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\r\n *              If autoColor specified, it is used as default textFill.\r\n *      useInsideStyle:\r\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\r\n *                  if `textFill` is not specified.\r\n *              `false`: Do not use inside style.\r\n *              `null/undefined`: use inside style if `isRectText` is true and\r\n *                  `textFill` is not specified and textPosition contains `'inside'`.\r\n *      forceRich: boolean\r\n * }\r\n */\r\n\r\n\r\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\r\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\r\n  opt = opt || EMPTY_OBJ;\r\n\r\n  if (opt.isRectText) {\r\n    var textPosition;\r\n\r\n    if (opt.getTextPosition) {\r\n      textPosition = opt.getTextPosition(textStyleModel, isEmphasis);\r\n    } else {\r\n      textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\r\n      // in bar series, and magric type should be considered.\r\n\r\n      textPosition === 'outside' && (textPosition = 'top');\r\n    }\r\n\r\n    textStyle.textPosition = textPosition;\r\n    textStyle.textOffset = textStyleModel.getShallow('offset');\r\n    var labelRotate = textStyleModel.getShallow('rotate');\r\n    labelRotate != null && (labelRotate *= Math.PI / 180);\r\n    textStyle.textRotation = labelRotate;\r\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\r\n  }\r\n\r\n  var ecModel = textStyleModel.ecModel;\r\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\r\n  // {\r\n  //     data: [{\r\n  //         value: 12,\r\n  //         label: {\r\n  //             rich: {\r\n  //                 // no 'a' here but using parent 'a'.\r\n  //             }\r\n  //         }\r\n  //     }],\r\n  //     rich: {\r\n  //         a: { ... }\r\n  //     }\r\n  // }\r\n\r\n  var richItemNames = getRichItemNames(textStyleModel);\r\n  var richResult;\r\n\r\n  if (richItemNames) {\r\n    richResult = {};\r\n\r\n    for (var name in richItemNames) {\r\n      if (richItemNames.hasOwnProperty(name)) {\r\n        // Cascade is supported in rich.\r\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\r\n        // FIXME: consider `label: {formatter: '{a|xx}', color: 'blue', rich: {a: {}}}`,\r\n        // the default color `'blue'` will not be adopted if no color declared in `rich`.\r\n        // That might confuses users. So probably we should put `textStyleModel` as the\r\n        // root ancestor of the `richTextStyle`. But that would be a break change.\r\n\r\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\r\n      }\r\n    }\r\n  }\r\n\r\n  textStyle.rich = richResult;\r\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\r\n\r\n  if (opt.forceRich && !opt.textStyle) {\r\n    opt.textStyle = {};\r\n  }\r\n\r\n  return textStyle;\r\n} // Consider case:\r\n// {\r\n//     data: [{\r\n//         value: 12,\r\n//         label: {\r\n//             rich: {\r\n//                 // no 'a' here but using parent 'a'.\r\n//             }\r\n//         }\r\n//     }],\r\n//     rich: {\r\n//         a: { ... }\r\n//     }\r\n// }\r\n\r\n\r\nfunction getRichItemNames(textStyleModel) {\r\n  // Use object to remove duplicated names.\r\n  var richItemNameMap;\r\n\r\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\r\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\r\n\r\n    if (rich) {\r\n      richItemNameMap = richItemNameMap || {};\r\n\r\n      for (var name in rich) {\r\n        if (rich.hasOwnProperty(name)) {\r\n          richItemNameMap[name] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    textStyleModel = textStyleModel.parentModel;\r\n  }\r\n\r\n  return richItemNameMap;\r\n}\r\n\r\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\r\n  // In merge mode, default value should not be given.\r\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\r\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\r\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\r\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\r\n\r\n  if (!isEmphasis) {\r\n    if (isBlock) {\r\n      textStyle.insideRollbackOpt = opt;\r\n      applyDefaultTextStyle(textStyle);\r\n    } // Set default finally.\r\n\r\n\r\n    if (textStyle.textFill == null) {\r\n      textStyle.textFill = opt.autoColor;\r\n    }\r\n  } // Do not use `getFont` here, because merge should be supported, where\r\n  // part of these properties may be changed in emphasis style, and the\r\n  // others should remain their original value got from normal style.\r\n\r\n\r\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\r\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\r\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\r\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\r\n  textStyle.textAlign = textStyleModel.getShallow('align');\r\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\r\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\r\n  textStyle.textWidth = textStyleModel.getShallow('width');\r\n  textStyle.textHeight = textStyleModel.getShallow('height');\r\n  textStyle.textTag = textStyleModel.getShallow('tag');\r\n\r\n  if (!isBlock || !opt.disableBox) {\r\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\r\n    textStyle.textPadding = textStyleModel.getShallow('padding');\r\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\r\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\r\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\r\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\r\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\r\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\r\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\r\n  }\r\n\r\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\r\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\r\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\r\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\r\n}\r\n\r\nfunction getAutoColor(color, opt) {\r\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\r\n}\r\n/**\r\n * Give some default value to the input `textStyle` object, based on the current settings\r\n * in this `textStyle` object.\r\n *\r\n * The Scenario:\r\n * when text position is `inside` and `textFill` is not specified, we show\r\n * text border by default for better view. But it should be considered that text position\r\n * might be changed when hovering or being emphasis, where the `insideRollback` is used to\r\n * restore the style.\r\n *\r\n * Usage (& NOTICE):\r\n * When a style object (eithor plain object or instance of `zrender/src/graphic/Style`) is\r\n * about to be modified on its text related properties, `rollbackDefaultTextStyle` should\r\n * be called before the modification and `applyDefaultTextStyle` should be called after that.\r\n * (For the case that all of the text related properties is reset, like `setTextStyleCommon`\r\n * does, `rollbackDefaultTextStyle` is not needed to be called).\r\n */\r\n\r\n\r\nfunction applyDefaultTextStyle(textStyle) {\r\n  var textPosition = textStyle.textPosition;\r\n  var opt = textStyle.insideRollbackOpt;\r\n  var insideRollback;\r\n\r\n  if (opt && textStyle.textFill == null) {\r\n    var autoColor = opt.autoColor;\r\n    var isRectText = opt.isRectText;\r\n    var useInsideStyle = opt.useInsideStyle;\r\n    var useInsideStyleCache = useInsideStyle !== false && (useInsideStyle === true || isRectText && textPosition // textPosition can be [10, 30]\r\n    && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0);\r\n    var useAutoColorCache = !useInsideStyleCache && autoColor != null; // All of the props declared in `CACHED_LABEL_STYLE_PROPERTIES` are to be cached.\r\n\r\n    if (useInsideStyleCache || useAutoColorCache) {\r\n      insideRollback = {\r\n        textFill: textStyle.textFill,\r\n        textStroke: textStyle.textStroke,\r\n        textStrokeWidth: textStyle.textStrokeWidth\r\n      };\r\n    }\r\n\r\n    if (useInsideStyleCache) {\r\n      textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\r\n\r\n      if (textStyle.textStroke == null) {\r\n        textStyle.textStroke = autoColor;\r\n        textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\r\n      }\r\n    }\r\n\r\n    if (useAutoColorCache) {\r\n      textStyle.textFill = autoColor;\r\n    }\r\n  } // Always set `insideRollback`, so that the previous one can be cleared.\r\n\r\n\r\n  textStyle.insideRollback = insideRollback;\r\n}\r\n/**\r\n * Consider the case: in a scatter,\r\n * label: {\r\n *     normal: {position: 'inside'},\r\n *     emphasis: {position: 'top'}\r\n * }\r\n * In the normal state, the `textFill` will be set as '#fff' for pretty view (see\r\n * `applyDefaultTextStyle`), but when switching to emphasis state, the `textFill`\r\n * should be retured to 'autoColor', but not keep '#fff'.\r\n */\r\n\r\n\r\nfunction rollbackDefaultTextStyle(style) {\r\n  var insideRollback = style.insideRollback;\r\n\r\n  if (insideRollback) {\r\n    // Reset all of the props in `CACHED_LABEL_STYLE_PROPERTIES`.\r\n    style.textFill = insideRollback.textFill;\r\n    style.textStroke = insideRollback.textStroke;\r\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\r\n    style.insideRollback = null;\r\n  }\r\n}\r\n\r\nfunction getFont(opt, ecModel) {\r\n  var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\r\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\r\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\r\n}\r\n\r\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\r\n  if (typeof dataIndex === 'function') {\r\n    cb = dataIndex;\r\n    dataIndex = null;\r\n  } // Do not check 'animation' property directly here. Consider this case:\r\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\r\n  // but its parent model (`seriesModel`) does.\r\n\r\n\r\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\r\n\r\n  if (animationEnabled) {\r\n    var postfix = isUpdate ? 'Update' : '';\r\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\r\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\r\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\r\n\r\n    if (typeof animationDelay === 'function') {\r\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\r\n    }\r\n\r\n    if (typeof duration === 'function') {\r\n      duration = duration(dataIndex);\r\n    }\r\n\r\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\r\n  } else {\r\n    el.stopAnimation();\r\n    el.attr(props);\r\n    cb && cb();\r\n  }\r\n}\r\n/**\r\n * Update graphic element properties with or without animation according to the\r\n * configuration in series.\r\n *\r\n * Caution: this method will stop previous animation.\r\n * So do not use this method to one element twice before\r\n * animation starts, unless you know what you are doing.\r\n *\r\n * @param {module:zrender/Element} el\r\n * @param {Object} props\r\n * @param {module:echarts/model/Model} [animatableModel]\r\n * @param {number} [dataIndex]\r\n * @param {Function} [cb]\r\n * @example\r\n *     graphic.updateProps(el, {\r\n *         position: [100, 100]\r\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\r\n *     // Or\r\n *     graphic.updateProps(el, {\r\n *         position: [100, 100]\r\n *     }, seriesModel, function () { console.log('Animation done!'); });\r\n */\r\n\r\n\r\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\r\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\r\n}\r\n/**\r\n * Init graphic element properties with or without animation according to the\r\n * configuration in series.\r\n *\r\n * Caution: this method will stop previous animation.\r\n * So do not use this method to one element twice before\r\n * animation starts, unless you know what you are doing.\r\n *\r\n * @param {module:zrender/Element} el\r\n * @param {Object} props\r\n * @param {module:echarts/model/Model} [animatableModel]\r\n * @param {number} [dataIndex]\r\n * @param {Function} cb\r\n */\r\n\r\n\r\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\r\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\r\n}\r\n/**\r\n * Get transform matrix of target (param target),\r\n * in coordinate of its ancestor (param ancestor)\r\n *\r\n * @param {module:zrender/mixin/Transformable} target\r\n * @param {module:zrender/mixin/Transformable} [ancestor]\r\n */\r\n\r\n\r\nfunction getTransform(target, ancestor) {\r\n  var mat = matrix.identity([]);\r\n\r\n  while (target && target !== ancestor) {\r\n    matrix.mul(mat, target.getLocalTransform(), mat);\r\n    target = target.parent;\r\n  }\r\n\r\n  return mat;\r\n}\r\n/**\r\n * Apply transform to an vertex.\r\n * @param {Array.<number>} target [x, y]\r\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\r\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\r\n * @param {boolean=} invert Whether use invert matrix.\r\n * @return {Array.<number>} [x, y]\r\n */\r\n\r\n\r\nfunction applyTransform(target, transform, invert) {\r\n  if (transform && !zrUtil.isArrayLike(transform)) {\r\n    transform = Transformable.getLocalTransform(transform);\r\n  }\r\n\r\n  if (invert) {\r\n    transform = matrix.invert([], transform);\r\n  }\r\n\r\n  return vector.applyTransform([], target, transform);\r\n}\r\n/**\r\n * @param {string} direction 'left' 'right' 'top' 'bottom'\r\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n * @param {boolean=} invert Whether use invert matrix.\r\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\r\n */\r\n\r\n\r\nfunction transformDirection(direction, transform, invert) {\r\n  // Pick a base, ensure that transform result will not be (0, 0).\r\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\r\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\r\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\r\n  vertex = applyTransform(vertex, transform, invert);\r\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\r\n}\r\n/**\r\n * Apply group transition animation from g1 to g2.\r\n * If no animatableModel, no animation.\r\n */\r\n\r\n\r\nfunction groupTransition(g1, g2, animatableModel, cb) {\r\n  if (!g1 || !g2) {\r\n    return;\r\n  }\r\n\r\n  function getElMap(g) {\r\n    var elMap = {};\r\n    g.traverse(function (el) {\r\n      if (!el.isGroup && el.anid) {\r\n        elMap[el.anid] = el;\r\n      }\r\n    });\r\n    return elMap;\r\n  }\r\n\r\n  function getAnimatableProps(el) {\r\n    var obj = {\r\n      position: vector.clone(el.position),\r\n      rotation: el.rotation\r\n    };\r\n\r\n    if (el.shape) {\r\n      obj.shape = zrUtil.extend({}, el.shape);\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  var elMap1 = getElMap(g1);\r\n  g2.traverse(function (el) {\r\n    if (!el.isGroup && el.anid) {\r\n      var oldEl = elMap1[el.anid];\r\n\r\n      if (oldEl) {\r\n        var newProp = getAnimatableProps(el);\r\n        el.attr(getAnimatableProps(oldEl));\r\n        updateProps(el, newProp, animatableModel, el.dataIndex);\r\n      } // else {\r\n      //     if (el.previousProps) {\r\n      //         graphic.updateProps\r\n      //     }\r\n      // }\r\n\r\n    }\r\n  });\r\n}\r\n/**\r\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\r\n * @param {Object} rect {x, y, width, height}\r\n * @return {Array.<Array.<number>>} A new clipped points.\r\n */\r\n\r\n\r\nfunction clipPointsByRect(points, rect) {\r\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\r\n  // and when element have border.\r\n  return zrUtil.map(points, function (point) {\r\n    var x = point[0];\r\n    x = mathMax(x, rect.x);\r\n    x = mathMin(x, rect.x + rect.width);\r\n    var y = point[1];\r\n    y = mathMax(y, rect.y);\r\n    y = mathMin(y, rect.y + rect.height);\r\n    return [x, y];\r\n  });\r\n}\r\n/**\r\n * @param {Object} targetRect {x, y, width, height}\r\n * @param {Object} rect {x, y, width, height}\r\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\r\n */\r\n\r\n\r\nfunction clipRectByRect(targetRect, rect) {\r\n  var x = mathMax(targetRect.x, rect.x);\r\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\r\n  var y = mathMax(targetRect.y, rect.y);\r\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\r\n  // should be painted. So return undefined.\r\n\r\n  if (x2 >= x && y2 >= y) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      width: x2 - x,\r\n      height: y2 - y\r\n    };\r\n  }\r\n}\r\n/**\r\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\r\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\r\n * @param {Object} [rect] {x, y, width, height}\r\n * @return {module:zrender/Element} Icon path or image element.\r\n */\r\n\r\n\r\nfunction createIcon(iconStr, opt, rect) {\r\n  opt = zrUtil.extend({\r\n    rectHover: true\r\n  }, opt);\r\n  var style = opt.style = {\r\n    strokeNoScale: true\r\n  };\r\n  rect = rect || {\r\n    x: -1,\r\n    y: -1,\r\n    width: 2,\r\n    height: 2\r\n  };\r\n\r\n  if (iconStr) {\r\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\r\n  }\r\n}\r\n/**\r\n * Return `true` if the given line (line `a`) and the given polygon\r\n * are intersect.\r\n * Note that we do not count colinear as intersect here because no\r\n * requirement for that. We could do that if required in future.\r\n *\r\n * @param {number} a1x\r\n * @param {number} a1y\r\n * @param {number} a2x\r\n * @param {number} a2y\r\n * @param {Array.<Array.<number>>} points Points of the polygon.\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction linePolygonIntersect(a1x, a1y, a2x, a2y, points) {\r\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\r\n    var p = points[i];\r\n\r\n    if (lineLineIntersect(a1x, a1y, a2x, a2y, p[0], p[1], p2[0], p2[1])) {\r\n      return true;\r\n    }\r\n\r\n    p2 = p;\r\n  }\r\n}\r\n/**\r\n * Return `true` if the given two lines (line `a` and line `b`)\r\n * are intersect.\r\n * Note that we do not count colinear as intersect here because no\r\n * requirement for that. We could do that if required in future.\r\n *\r\n * @param {number} a1x\r\n * @param {number} a1y\r\n * @param {number} a2x\r\n * @param {number} a2y\r\n * @param {number} b1x\r\n * @param {number} b1y\r\n * @param {number} b2x\r\n * @param {number} b2y\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\r\n  // let `vec_m` to be `vec_a2 - vec_a1` and `vec_n` to be `vec_b2 - vec_b1`.\r\n  var mx = a2x - a1x;\r\n  var my = a2y - a1y;\r\n  var nx = b2x - b1x;\r\n  var ny = b2y - b1y; // `vec_m` and `vec_n` are parallel iff\r\n  //     exising `k` such that `vec_m = k · vec_n`, equivalent to `vec_m X vec_n = 0`.\r\n\r\n  var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\r\n\r\n  if (nearZero(nmCrossProduct)) {\r\n    return false;\r\n  } // `vec_m` and `vec_n` are intersect iff\r\n  //     existing `p` and `q` in [0, 1] such that `vec_a1 + p * vec_m = vec_b1 + q * vec_n`,\r\n  //     such that `q = ((vec_a1 - vec_b1) X vec_m) / (vec_n X vec_m)`\r\n  //           and `p = ((vec_a1 - vec_b1) X vec_n) / (vec_n X vec_m)`.\r\n\r\n\r\n  var b1a1x = a1x - b1x;\r\n  var b1a1y = a1y - b1y;\r\n  var q = crossProduct2d(b1a1x, b1a1y, mx, my) / nmCrossProduct;\r\n\r\n  if (q < 0 || q > 1) {\r\n    return false;\r\n  }\r\n\r\n  var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\r\n\r\n  if (p < 0 || p > 1) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n/**\r\n * Cross product of 2-dimension vector.\r\n */\r\n\r\n\r\nfunction crossProduct2d(x1, y1, x2, y2) {\r\n  return x1 * y2 - x2 * y1;\r\n}\r\n\r\nfunction nearZero(val) {\r\n  return val <= 1e-6 && val >= -1e-6;\r\n} // Register built-in shapes. These shapes might be overwirtten\r\n// by users, although we do not recommend that.\r\n\r\n\r\nregisterShape('circle', Circle);\r\nregisterShape('sector', Sector);\r\nregisterShape('ring', Ring);\r\nregisterShape('polygon', Polygon);\r\nregisterShape('polyline', Polyline);\r\nregisterShape('rect', Rect);\r\nregisterShape('line', Line);\r\nregisterShape('bezierCurve', BezierCurve);\r\nregisterShape('arc', Arc);\r\nexports.Z2_EMPHASIS_LIFT = Z2_EMPHASIS_LIFT;\r\nexports.CACHED_LABEL_STYLE_PROPERTIES = CACHED_LABEL_STYLE_PROPERTIES;\r\nexports.extendShape = extendShape;\r\nexports.extendPath = extendPath;\r\nexports.registerShape = registerShape;\r\nexports.getShapeClass = getShapeClass;\r\nexports.makePath = makePath;\r\nexports.makeImage = makeImage;\r\nexports.mergePath = mergePath;\r\nexports.resizePath = resizePath;\r\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\r\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\r\nexports.subPixelOptimize = subPixelOptimize;\r\nexports.setElementHoverStyle = setElementHoverStyle;\r\nexports.setHoverStyle = setHoverStyle;\r\nexports.setAsHighDownDispatcher = setAsHighDownDispatcher;\r\nexports.isHighDownDispatcher = isHighDownDispatcher;\r\nexports.getHighlightDigit = getHighlightDigit;\r\nexports.setLabelStyle = setLabelStyle;\r\nexports.modifyLabelStyle = modifyLabelStyle;\r\nexports.setTextStyle = setTextStyle;\r\nexports.setText = setText;\r\nexports.getFont = getFont;\r\nexports.updateProps = updateProps;\r\nexports.initProps = initProps;\r\nexports.getTransform = getTransform;\r\nexports.applyTransform = applyTransform;\r\nexports.transformDirection = transformDirection;\r\nexports.groupTransition = groupTransition;\r\nexports.clipPointsByRect = clipPointsByRect;\r\nexports.clipRectByRect = clipRectByRect;\r\nexports.createIcon = createIcon;\r\nexports.linePolygonIntersect = linePolygonIntersect;\r\nexports.lineLineIntersect = lineLineIntersect;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar _number = require(\"./number\");\r\n\r\nvar parsePercent = _number.parsePercent;\r\n\r\nvar formatUtil = require(\"./format\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Layout helpers for each component positioning\r\nvar each = zrUtil.each;\r\n/**\r\n * @public\r\n */\r\n\r\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\r\n/**\r\n * @public\r\n */\r\n\r\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\r\n\r\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\r\n  var x = 0;\r\n  var y = 0;\r\n\r\n  if (maxWidth == null) {\r\n    maxWidth = Infinity;\r\n  }\r\n\r\n  if (maxHeight == null) {\r\n    maxHeight = Infinity;\r\n  }\r\n\r\n  var currentLineMaxSize = 0;\r\n  group.eachChild(function (child, idx) {\r\n    var position = child.position;\r\n    var rect = child.getBoundingRect();\r\n    var nextChild = group.childAt(idx + 1);\r\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\r\n    var nextX;\r\n    var nextY;\r\n\r\n    if (orient === 'horizontal') {\r\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\r\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\r\n      // FIXME compare before adding gap?\r\n\r\n      if (nextX > maxWidth || child.newline) {\r\n        x = 0;\r\n        nextX = moveX;\r\n        y += currentLineMaxSize + gap;\r\n        currentLineMaxSize = rect.height;\r\n      } else {\r\n        // FIXME: consider rect.y is not `0`?\r\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\r\n      }\r\n    } else {\r\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\r\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\r\n\r\n      if (nextY > maxHeight || child.newline) {\r\n        x += currentLineMaxSize + gap;\r\n        y = 0;\r\n        nextY = moveY;\r\n        currentLineMaxSize = rect.width;\r\n      } else {\r\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\r\n      }\r\n    }\r\n\r\n    if (child.newline) {\r\n      return;\r\n    }\r\n\r\n    position[0] = x;\r\n    position[1] = y;\r\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\r\n  });\r\n}\r\n/**\r\n * VBox or HBox layouting\r\n * @param {string} orient\r\n * @param {module:zrender/container/Group} group\r\n * @param {number} gap\r\n * @param {number} [width=Infinity]\r\n * @param {number} [height=Infinity]\r\n */\r\n\r\n\r\nvar box = boxLayout;\r\n/**\r\n * VBox layouting\r\n * @param {module:zrender/container/Group} group\r\n * @param {number} gap\r\n * @param {number} [width=Infinity]\r\n * @param {number} [height=Infinity]\r\n */\r\n\r\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\r\n/**\r\n * HBox layouting\r\n * @param {module:zrender/container/Group} group\r\n * @param {number} gap\r\n * @param {number} [width=Infinity]\r\n * @param {number} [height=Infinity]\r\n */\r\n\r\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\r\n/**\r\n * If x or x2 is not specified or 'center' 'left' 'right',\r\n * the width would be as long as possible.\r\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\r\n * the height would be as long as possible.\r\n *\r\n * @param {Object} positionInfo\r\n * @param {number|string} [positionInfo.x]\r\n * @param {number|string} [positionInfo.y]\r\n * @param {number|string} [positionInfo.x2]\r\n * @param {number|string} [positionInfo.y2]\r\n * @param {Object} containerRect {width, height}\r\n * @param {string|number} margin\r\n * @return {Object} {width, height}\r\n */\r\n\r\nfunction getAvailableSize(positionInfo, containerRect, margin) {\r\n  var containerWidth = containerRect.width;\r\n  var containerHeight = containerRect.height;\r\n  var x = parsePercent(positionInfo.x, containerWidth);\r\n  var y = parsePercent(positionInfo.y, containerHeight);\r\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\r\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\r\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\r\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\r\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\r\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\r\n  margin = formatUtil.normalizeCssArray(margin || 0);\r\n  return {\r\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\r\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\r\n  };\r\n}\r\n/**\r\n * Parse position info.\r\n *\r\n * @param {Object} positionInfo\r\n * @param {number|string} [positionInfo.left]\r\n * @param {number|string} [positionInfo.top]\r\n * @param {number|string} [positionInfo.right]\r\n * @param {number|string} [positionInfo.bottom]\r\n * @param {number|string} [positionInfo.width]\r\n * @param {number|string} [positionInfo.height]\r\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\r\n * @param {Object} containerRect\r\n * @param {string|number} [margin]\r\n *\r\n * @return {module:zrender/core/BoundingRect}\r\n */\r\n\r\n\r\nfunction getLayoutRect(positionInfo, containerRect, margin) {\r\n  margin = formatUtil.normalizeCssArray(margin || 0);\r\n  var containerWidth = containerRect.width;\r\n  var containerHeight = containerRect.height;\r\n  var left = parsePercent(positionInfo.left, containerWidth);\r\n  var top = parsePercent(positionInfo.top, containerHeight);\r\n  var right = parsePercent(positionInfo.right, containerWidth);\r\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\r\n  var width = parsePercent(positionInfo.width, containerWidth);\r\n  var height = parsePercent(positionInfo.height, containerHeight);\r\n  var verticalMargin = margin[2] + margin[0];\r\n  var horizontalMargin = margin[1] + margin[3];\r\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\r\n\r\n  if (isNaN(width)) {\r\n    width = containerWidth - right - horizontalMargin - left;\r\n  }\r\n\r\n  if (isNaN(height)) {\r\n    height = containerHeight - bottom - verticalMargin - top;\r\n  }\r\n\r\n  if (aspect != null) {\r\n    // If width and height are not given\r\n    // 1. Graph should not exceeds the container\r\n    // 2. Aspect must be keeped\r\n    // 3. Graph should take the space as more as possible\r\n    // FIXME\r\n    // Margin is not considered, because there is no case that both\r\n    // using margin and aspect so far.\r\n    if (isNaN(width) && isNaN(height)) {\r\n      if (aspect > containerWidth / containerHeight) {\r\n        width = containerWidth * 0.8;\r\n      } else {\r\n        height = containerHeight * 0.8;\r\n      }\r\n    } // Calculate width or height with given aspect\r\n\r\n\r\n    if (isNaN(width)) {\r\n      width = aspect * height;\r\n    }\r\n\r\n    if (isNaN(height)) {\r\n      height = width / aspect;\r\n    }\r\n  } // If left is not specified, calculate left from right and width\r\n\r\n\r\n  if (isNaN(left)) {\r\n    left = containerWidth - right - width - horizontalMargin;\r\n  }\r\n\r\n  if (isNaN(top)) {\r\n    top = containerHeight - bottom - height - verticalMargin;\r\n  } // Align left and top\r\n\r\n\r\n  switch (positionInfo.left || positionInfo.right) {\r\n    case 'center':\r\n      left = containerWidth / 2 - width / 2 - margin[3];\r\n      break;\r\n\r\n    case 'right':\r\n      left = containerWidth - width - horizontalMargin;\r\n      break;\r\n  }\r\n\r\n  switch (positionInfo.top || positionInfo.bottom) {\r\n    case 'middle':\r\n    case 'center':\r\n      top = containerHeight / 2 - height / 2 - margin[0];\r\n      break;\r\n\r\n    case 'bottom':\r\n      top = containerHeight - height - verticalMargin;\r\n      break;\r\n  } // If something is wrong and left, top, width, height are calculated as NaN\r\n\r\n\r\n  left = left || 0;\r\n  top = top || 0;\r\n\r\n  if (isNaN(width)) {\r\n    // Width may be NaN if only one value is given except width\r\n    width = containerWidth - horizontalMargin - left - (right || 0);\r\n  }\r\n\r\n  if (isNaN(height)) {\r\n    // Height may be NaN if only one value is given except height\r\n    height = containerHeight - verticalMargin - top - (bottom || 0);\r\n  }\r\n\r\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\r\n  rect.margin = margin;\r\n  return rect;\r\n}\r\n/**\r\n * Position a zr element in viewport\r\n *  Group position is specified by either\r\n *  {left, top}, {right, bottom}\r\n *  If all properties exists, right and bottom will be igonred.\r\n *\r\n * Logic:\r\n *     1. Scale (against origin point in parent coord)\r\n *     2. Rotate (against origin point in parent coord)\r\n *     3. Traslate (with el.position by this method)\r\n * So this method only fixes the last step 'Traslate', which does not affect\r\n * scaling and rotating.\r\n *\r\n * If be called repeatly with the same input el, the same result will be gotten.\r\n *\r\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\r\n * @param {Object} positionInfo\r\n * @param {number|string} [positionInfo.left]\r\n * @param {number|string} [positionInfo.top]\r\n * @param {number|string} [positionInfo.right]\r\n * @param {number|string} [positionInfo.bottom]\r\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\r\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\r\n * @param {Object} containerRect\r\n * @param {string|number} margin\r\n * @param {Object} [opt]\r\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\r\n * @param {Array.<number>} [opt.boundingMode='all']\r\n *        Specify how to calculate boundingRect when locating.\r\n *        'all': Position the boundingRect that is transformed and uioned\r\n *               both itself and its descendants.\r\n *               This mode simplies confine the elements in the bounding\r\n *               of their container (e.g., using 'right: 0').\r\n *        'raw': Position the boundingRect that is not transformed and only itself.\r\n *               This mode is useful when you want a element can overflow its\r\n *               container. (Consider a rotated circle needs to be located in a corner.)\r\n *               In this mode positionInfo.width/height can only be number.\r\n */\r\n\r\n\r\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\r\n  var h = !opt || !opt.hv || opt.hv[0];\r\n  var v = !opt || !opt.hv || opt.hv[1];\r\n  var boundingMode = opt && opt.boundingMode || 'all';\r\n\r\n  if (!h && !v) {\r\n    return;\r\n  }\r\n\r\n  var rect;\r\n\r\n  if (boundingMode === 'raw') {\r\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\r\n  } else {\r\n    rect = el.getBoundingRect();\r\n\r\n    if (el.needLocalTransform()) {\r\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\r\n      // which should not be modified.\r\n\r\n      rect = rect.clone();\r\n      rect.applyTransform(transform);\r\n    }\r\n  } // The real width and height can not be specified but calculated by the given el.\r\n\r\n\r\n  positionInfo = getLayoutRect(zrUtil.defaults({\r\n    width: rect.width,\r\n    height: rect.height\r\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\r\n  // (see zrender/core/Transformable#getLocalTransform),\r\n  // we can just only modify el.position to get final result.\r\n\r\n  var elPos = el.position;\r\n  var dx = h ? positionInfo.x - rect.x : 0;\r\n  var dy = v ? positionInfo.y - rect.y : 0;\r\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\r\n}\r\n/**\r\n * @param {Object} option Contains some of the properties in HV_NAMES.\r\n * @param {number} hvIdx 0: horizontal; 1: vertical.\r\n */\r\n\r\n\r\nfunction sizeCalculable(option, hvIdx) {\r\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\r\n}\r\n/**\r\n * Consider Case:\r\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\r\n * through setOption or media query, using normal zrUtil.merge will cause\r\n * {right: 0} does not take effect.\r\n *\r\n * @example\r\n * ComponentModel.extend({\r\n *     init: function () {\r\n *         ...\r\n *         var inputPositionParams = layout.getLayoutParams(option);\r\n *         this.mergeOption(inputPositionParams);\r\n *     },\r\n *     mergeOption: function (newOption) {\r\n *         newOption && zrUtil.merge(thisOption, newOption, true);\r\n *         layout.mergeLayoutParam(thisOption, newOption);\r\n *     }\r\n * });\r\n *\r\n * @param {Object} targetOption\r\n * @param {Object} newOption\r\n * @param {Object|string} [opt]\r\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\r\n *  that width (or height) should not be calculated by left and right (or top and bottom).\r\n */\r\n\r\n\r\nfunction mergeLayoutParam(targetOption, newOption, opt) {\r\n  !zrUtil.isObject(opt) && (opt = {});\r\n  var ignoreSize = opt.ignoreSize;\r\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\r\n  var hResult = merge(HV_NAMES[0], 0);\r\n  var vResult = merge(HV_NAMES[1], 1);\r\n  copy(HV_NAMES[0], targetOption, hResult);\r\n  copy(HV_NAMES[1], targetOption, vResult);\r\n\r\n  function merge(names, hvIdx) {\r\n    var newParams = {};\r\n    var newValueCount = 0;\r\n    var merged = {};\r\n    var mergedValueCount = 0;\r\n    var enoughParamNumber = 2;\r\n    each(names, function (name) {\r\n      merged[name] = targetOption[name];\r\n    });\r\n    each(names, function (name) {\r\n      // Consider case: newOption.width is null, which is\r\n      // set by user for removing width setting.\r\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\r\n      hasValue(newParams, name) && newValueCount++;\r\n      hasValue(merged, name) && mergedValueCount++;\r\n    });\r\n\r\n    if (ignoreSize[hvIdx]) {\r\n      // Only one of left/right is premitted to exist.\r\n      if (hasValue(newOption, names[1])) {\r\n        merged[names[2]] = null;\r\n      } else if (hasValue(newOption, names[2])) {\r\n        merged[names[1]] = null;\r\n      }\r\n\r\n      return merged;\r\n    } // Case: newOption: {width: ..., right: ...},\r\n    // or targetOption: {right: ...} and newOption: {width: ...},\r\n    // There is no conflict when merged only has params count\r\n    // little than enoughParamNumber.\r\n\r\n\r\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\r\n      return merged;\r\n    } // Case: newOption: {width: ..., right: ...},\r\n    // Than we can make sure user only want those two, and ignore\r\n    // all origin params in targetOption.\r\n    else if (newValueCount >= enoughParamNumber) {\r\n        return newParams;\r\n      } else {\r\n        // Chose another param from targetOption by priority.\r\n        for (var i = 0; i < names.length; i++) {\r\n          var name = names[i];\r\n\r\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\r\n            newParams[name] = targetOption[name];\r\n            break;\r\n          }\r\n        }\r\n\r\n        return newParams;\r\n      }\r\n  }\r\n\r\n  function hasProp(obj, name) {\r\n    return obj.hasOwnProperty(name);\r\n  }\r\n\r\n  function hasValue(obj, name) {\r\n    return obj[name] != null && obj[name] !== 'auto';\r\n  }\r\n\r\n  function copy(names, target, source) {\r\n    each(names, function (name) {\r\n      target[name] = source[name];\r\n    });\r\n  }\r\n}\r\n/**\r\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\r\n * @param {Object} source\r\n * @return {Object} Result contains those props.\r\n */\r\n\r\n\r\nfunction getLayoutParams(source) {\r\n  return copyLayoutParams({}, source);\r\n}\r\n/**\r\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\r\n * @param {Object} source\r\n * @return {Object} Result contains those props.\r\n */\r\n\r\n\r\nfunction copyLayoutParams(target, source) {\r\n  source && target && each(LOCATION_PARAMS, function (name) {\r\n    source.hasOwnProperty(name) && (target[name] = source[name]);\r\n  });\r\n  return target;\r\n}\r\n\r\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\r\nexports.HV_NAMES = HV_NAMES;\r\nexports.box = box;\r\nexports.vbox = vbox;\r\nexports.hbox = hbox;\r\nexports.getAvailableSize = getAvailableSize;\r\nexports.getLayoutRect = getLayoutRect;\r\nexports.positionElement = positionElement;\r\nexports.sizeCalculable = sizeCalculable;\r\nexports.mergeLayoutParam = mergeLayoutParam;\r\nexports.getLayoutParams = getLayoutParams;\r\nexports.copyLayoutParams = copyLayoutParams;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar isObject = zrUtil.isObject;\r\nvar isArray = zrUtil.isArray;\r\n/**\r\n * Make the name displayable. But we should\r\n * make sure it is not duplicated with user\r\n * specified name, so use '\\0';\r\n */\r\n\r\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\r\n/**\r\n * If value is not array, then translate it to array.\r\n * @param  {*} value\r\n * @return {Array} [value] or value\r\n */\r\n\r\nfunction normalizeToArray(value) {\r\n  return value instanceof Array ? value : value == null ? [] : [value];\r\n}\r\n/**\r\n * Sync default option between normal and emphasis like `position` and `show`\r\n * In case some one will write code like\r\n *     label: {\r\n *          show: false,\r\n *          position: 'outside',\r\n *          fontSize: 18\r\n *     },\r\n *     emphasis: {\r\n *          label: { show: true }\r\n *     }\r\n * @param {Object} opt\r\n * @param {string} key\r\n * @param {Array.<string>} subOpts\r\n */\r\n\r\n\r\nfunction defaultEmphasis(opt, key, subOpts) {\r\n  // Caution: performance sensitive.\r\n  if (opt) {\r\n    opt[key] = opt[key] || {};\r\n    opt.emphasis = opt.emphasis || {};\r\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\r\n\r\n    for (var i = 0, len = subOpts.length; i < len; i++) {\r\n      var subOptName = subOpts[i];\r\n\r\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\r\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\r\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\r\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\r\n//     // FIXME: deprecated, check and remove it.\r\n//     'textStyle'\r\n// ]);\r\n\r\n/**\r\n * The method do not ensure performance.\r\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\r\n * This helper method retieves value from data.\r\n * @param {string|number|Date|Array|Object} dataItem\r\n * @return {number|string|Date|Array.<number|string|Date>}\r\n */\r\n\r\nfunction getDataItemValue(dataItem) {\r\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\r\n}\r\n/**\r\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\r\n * This helper method determine if dataItem has extra option besides value\r\n * @param {string|number|Date|Array|Object} dataItem\r\n */\r\n\r\n\r\nfunction isDataItemOption(dataItem) {\r\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\r\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\r\n}\r\n/**\r\n * Mapping to exists for merge.\r\n *\r\n * @public\r\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\r\n * @param {Object|Array.<Object>} newCptOptions\r\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\r\n *                          index of which is the same as exists.\r\n */\r\n\r\n\r\nfunction mappingToExists(exists, newCptOptions) {\r\n  // Mapping by the order by original option (but not order of\r\n  // new option) in merge mode. Because we should ensure\r\n  // some specified index (like xAxisIndex) is consistent with\r\n  // original option, which is easy to understand, espatially in\r\n  // media query. And in most case, merge option is used to\r\n  // update partial option but not be expected to change order.\r\n  newCptOptions = (newCptOptions || []).slice();\r\n  var result = zrUtil.map(exists || [], function (obj, index) {\r\n    return {\r\n      exist: obj\r\n    };\r\n  }); // Mapping by id or name if specified.\r\n\r\n  each(newCptOptions, function (cptOption, index) {\r\n    if (!isObject(cptOption)) {\r\n      return;\r\n    } // id has highest priority.\r\n\r\n\r\n    for (var i = 0; i < result.length; i++) {\r\n      if (!result[i].option // Consider name: two map to one.\r\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\r\n        result[i].option = cptOption;\r\n        newCptOptions[index] = null;\r\n        return;\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < result.length; i++) {\r\n      var exist = result[i].exist;\r\n\r\n      if (!result[i].option // Consider name: two map to one.\r\n      // Can not match when both ids exist but different.\r\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\r\n        result[i].option = cptOption;\r\n        newCptOptions[index] = null;\r\n        return;\r\n      }\r\n    }\r\n  }); // Otherwise mapping by index.\r\n\r\n  each(newCptOptions, function (cptOption, index) {\r\n    if (!isObject(cptOption)) {\r\n      return;\r\n    }\r\n\r\n    var i = 0;\r\n\r\n    for (; i < result.length; i++) {\r\n      var exist = result[i].exist;\r\n\r\n      if (!result[i].option // Existing model that already has id should be able to\r\n      // mapped to (because after mapping performed model may\r\n      // be assigned with a id, whish should not affect next\r\n      // mapping), except those has inner id.\r\n      && !isIdInner(exist) // Caution:\r\n      // Do not overwrite id. But name can be overwritten,\r\n      // because axis use name as 'show label text'.\r\n      // 'exist' always has id and name and we dont\r\n      // need to check it.\r\n      && cptOption.id == null) {\r\n        result[i].option = cptOption;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (i >= result.length) {\r\n      result.push({\r\n        option: cptOption\r\n      });\r\n    }\r\n  });\r\n  return result;\r\n}\r\n/**\r\n * Make id and name for mapping result (result of mappingToExists)\r\n * into `keyInfo` field.\r\n *\r\n * @public\r\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\r\n *                          which order is the same as exists.\r\n * @return {Array.<Object>} The input.\r\n */\r\n\r\n\r\nfunction makeIdAndName(mapResult) {\r\n  // We use this id to hash component models and view instances\r\n  // in echarts. id can be specified by user, or auto generated.\r\n  // The id generation rule ensures new view instance are able\r\n  // to mapped to old instance when setOption are called in\r\n  // no-merge mode. So we generate model id by name and plus\r\n  // type in view id.\r\n  // name can be duplicated among components, which is convenient\r\n  // to specify multi components (like series) by one name.\r\n  // Ensure that each id is distinct.\r\n  var idMap = zrUtil.createHashMap();\r\n  each(mapResult, function (item, index) {\r\n    var existCpt = item.exist;\r\n    existCpt && idMap.set(existCpt.id, item);\r\n  });\r\n  each(mapResult, function (item, index) {\r\n    var opt = item.option;\r\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\r\n    opt && opt.id != null && idMap.set(opt.id, item);\r\n    !item.keyInfo && (item.keyInfo = {});\r\n  }); // Make name and id.\r\n\r\n  each(mapResult, function (item, index) {\r\n    var existCpt = item.exist;\r\n    var opt = item.option;\r\n    var keyInfo = item.keyInfo;\r\n\r\n    if (!isObject(opt)) {\r\n      return;\r\n    } // name can be overwitten. Consider case: axis.name = '20km'.\r\n    // But id generated by name will not be changed, which affect\r\n    // only in that case: setOption with 'not merge mode' and view\r\n    // instance will be recreated, which can be accepted.\r\n\r\n\r\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\r\n    // because name may be used like in color pallet.\r\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\r\n\r\n    if (existCpt) {\r\n      keyInfo.id = existCpt.id;\r\n    } else if (opt.id != null) {\r\n      keyInfo.id = opt.id + '';\r\n    } else {\r\n      // Consider this situatoin:\r\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\r\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\r\n      // Series with the same name between optionA and optionB\r\n      // should be mapped.\r\n      var idNum = 0;\r\n\r\n      do {\r\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\r\n      } while (idMap.get(keyInfo.id));\r\n    }\r\n\r\n    idMap.set(keyInfo.id, item);\r\n  });\r\n}\r\n\r\nfunction isNameSpecified(componentModel) {\r\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\r\n\r\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\r\n}\r\n/**\r\n * @public\r\n * @param {Object} cptOption\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isIdInner(cptOption) {\r\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\r\n}\r\n/**\r\n * A helper for removing duplicate items between batchA and batchB,\r\n * and in themselves, and categorize by series.\r\n *\r\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\r\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\r\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\r\n */\r\n\r\n\r\nfunction compressBatches(batchA, batchB) {\r\n  var mapA = {};\r\n  var mapB = {};\r\n  makeMap(batchA || [], mapA);\r\n  makeMap(batchB || [], mapB, mapA);\r\n  return [mapToArray(mapA), mapToArray(mapB)];\r\n\r\n  function makeMap(sourceBatch, map, otherMap) {\r\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\r\n      var seriesId = sourceBatch[i].seriesId;\r\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\r\n      var otherDataIndices = otherMap && otherMap[seriesId];\r\n\r\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\r\n        var dataIndex = dataIndices[j];\r\n\r\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\r\n          otherDataIndices[dataIndex] = null;\r\n        } else {\r\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function mapToArray(map, isData) {\r\n    var result = [];\r\n\r\n    for (var i in map) {\r\n      if (map.hasOwnProperty(i) && map[i] != null) {\r\n        if (isData) {\r\n          result.push(+i);\r\n        } else {\r\n          var dataIndices = mapToArray(map[i], true);\r\n          dataIndices.length && result.push({\r\n            seriesId: i,\r\n            dataIndex: dataIndices\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\r\n *                         each of which can be Array or primary type.\r\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\r\n */\r\n\r\n\r\nfunction queryDataIndex(data, payload) {\r\n  if (payload.dataIndexInside != null) {\r\n    return payload.dataIndexInside;\r\n  } else if (payload.dataIndex != null) {\r\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\r\n      return data.indexOfRawIndex(value);\r\n    }) : data.indexOfRawIndex(payload.dataIndex);\r\n  } else if (payload.name != null) {\r\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\r\n      return data.indexOfName(value);\r\n    }) : data.indexOfName(payload.name);\r\n  }\r\n}\r\n/**\r\n * Enable property storage to any host object.\r\n * Notice: Serialization is not supported.\r\n *\r\n * For example:\r\n * var inner = zrUitl.makeInner();\r\n *\r\n * function some1(hostObj) {\r\n *      inner(hostObj).someProperty = 1212;\r\n *      ...\r\n * }\r\n * function some2() {\r\n *      var fields = inner(this);\r\n *      fields.someProperty1 = 1212;\r\n *      fields.someProperty2 = 'xx';\r\n *      ...\r\n * }\r\n *\r\n * @return {Function}\r\n */\r\n\r\n\r\nfunction makeInner() {\r\n  // Consider different scope by es module import.\r\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\r\n  return function (hostObj) {\r\n    return hostObj[key] || (hostObj[key] = {});\r\n  };\r\n}\r\n\r\nvar innerUniqueIndex = 0;\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {string|Object} finder\r\n *        If string, e.g., 'geo', means {geoIndex: 0}.\r\n *        If Object, could contain some of these properties below:\r\n *        {\r\n *            seriesIndex, seriesId, seriesName,\r\n *            geoIndex, geoId, geoName,\r\n *            bmapIndex, bmapId, bmapName,\r\n *            xAxisIndex, xAxisId, xAxisName,\r\n *            yAxisIndex, yAxisId, yAxisName,\r\n *            gridIndex, gridId, gridName,\r\n *            ... (can be extended)\r\n *        }\r\n *        Each properties can be number|string|Array.<number>|Array.<string>\r\n *        For example, a finder could be\r\n *        {\r\n *            seriesIndex: 3,\r\n *            geoId: ['aa', 'cc'],\r\n *            gridName: ['xx', 'rr']\r\n *        }\r\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\r\n *        If nothing or null/undefined specified, return nothing.\r\n * @param {Object} [opt]\r\n * @param {string} [opt.defaultMainType]\r\n * @param {Array.<string>} [opt.includeMainTypes]\r\n * @return {Object} result like:\r\n *        {\r\n *            seriesModels: [seriesModel1, seriesModel2],\r\n *            seriesModel: seriesModel1, // The first model\r\n *            geoModels: [geoModel1, geoModel2],\r\n *            geoModel: geoModel1, // The first model\r\n *            ...\r\n *        }\r\n */\r\n\r\nfunction parseFinder(ecModel, finder, opt) {\r\n  if (zrUtil.isString(finder)) {\r\n    var obj = {};\r\n    obj[finder + 'Index'] = 0;\r\n    finder = obj;\r\n  }\r\n\r\n  var defaultMainType = opt && opt.defaultMainType;\r\n\r\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\r\n    finder[defaultMainType + 'Index'] = 0;\r\n  }\r\n\r\n  var result = {};\r\n  each(finder, function (value, key) {\r\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\r\n\r\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\r\n      result[key] = value;\r\n      return;\r\n    }\r\n\r\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\r\n    var mainType = parsedKey[1];\r\n    var queryType = (parsedKey[2] || '').toLowerCase();\r\n\r\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\r\n      return;\r\n    }\r\n\r\n    var queryParam = {\r\n      mainType: mainType\r\n    };\r\n\r\n    if (queryType !== 'index' || value !== 'all') {\r\n      queryParam[queryType] = value;\r\n    }\r\n\r\n    var models = ecModel.queryComponents(queryParam);\r\n    result[mainType + 'Models'] = models;\r\n    result[mainType + 'Model'] = models[0];\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction has(obj, prop) {\r\n  return obj && obj.hasOwnProperty(prop);\r\n}\r\n\r\nfunction setAttribute(dom, key, value) {\r\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\r\n}\r\n\r\nfunction getAttribute(dom, key) {\r\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\r\n}\r\n\r\nfunction getTooltipRenderMode(renderModeOption) {\r\n  if (renderModeOption === 'auto') {\r\n    // Using html when `document` exists, use richText otherwise\r\n    return env.domSupported ? 'html' : 'richText';\r\n  } else {\r\n    return renderModeOption || 'html';\r\n  }\r\n}\r\n/**\r\n * Group a list by key.\r\n *\r\n * @param {Array} array\r\n * @param {Function} getKey\r\n *        param {*} Array item\r\n *        return {string} key\r\n * @return {Object} Result\r\n *        {Array}: keys,\r\n *        {module:zrender/core/util/HashMap} buckets: {key -> Array}\r\n */\r\n\r\n\r\nfunction groupData(array, getKey) {\r\n  var buckets = zrUtil.createHashMap();\r\n  var keys = [];\r\n  zrUtil.each(array, function (item) {\r\n    var key = getKey(item);\r\n    (buckets.get(key) || (keys.push(key), buckets.set(key, []))).push(item);\r\n  });\r\n  return {\r\n    keys: keys,\r\n    buckets: buckets\r\n  };\r\n}\r\n\r\nexports.normalizeToArray = normalizeToArray;\r\nexports.defaultEmphasis = defaultEmphasis;\r\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\r\nexports.getDataItemValue = getDataItemValue;\r\nexports.isDataItemOption = isDataItemOption;\r\nexports.mappingToExists = mappingToExists;\r\nexports.makeIdAndName = makeIdAndName;\r\nexports.isNameSpecified = isNameSpecified;\r\nexports.isIdInner = isIdInner;\r\nexports.compressBatches = compressBatches;\r\nexports.queryDataIndex = queryDataIndex;\r\nexports.makeInner = makeInner;\r\nexports.parseFinder = parseFinder;\r\nexports.setAttribute = setAttribute;\r\nexports.getAttribute = getAttribute;\r\nexports.getTooltipRenderMode = getTooltipRenderMode;\r\nexports.groupData = groupData;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* A third-party license is embeded for some of the code in this file:\r\n* The method \"quantile\" was copied from \"d3.js\".\r\n* (See more details in the comment of the method below.)\r\n* The use of the source code of this file is also subject to the terms\r\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n* </licenses/LICENSE-d3>).\r\n*/\r\nvar RADIAN_EPSILON = 1e-4;\r\n\r\nfunction _trim(str) {\r\n  return str.replace(/^\\s+|\\s+$/g, '');\r\n}\r\n/**\r\n * Linear mapping a value from domain to range\r\n * @memberOf module:echarts/util/number\r\n * @param  {(number|Array.<number>)} val\r\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\r\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\r\n * @param  {boolean} clamp\r\n * @return {(number|Array.<number>}\r\n */\r\n\r\n\r\nfunction linearMap(val, domain, range, clamp) {\r\n  var subDomain = domain[1] - domain[0];\r\n  var subRange = range[1] - range[0];\r\n\r\n  if (subDomain === 0) {\r\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\r\n  } // Avoid accuracy problem in edge, such as\r\n  // 146.39 - 62.83 === 83.55999999999999.\r\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\r\n  // It is a little verbose for efficiency considering this method\r\n  // is a hotspot.\r\n\r\n\r\n  if (clamp) {\r\n    if (subDomain > 0) {\r\n      if (val <= domain[0]) {\r\n        return range[0];\r\n      } else if (val >= domain[1]) {\r\n        return range[1];\r\n      }\r\n    } else {\r\n      if (val >= domain[0]) {\r\n        return range[0];\r\n      } else if (val <= domain[1]) {\r\n        return range[1];\r\n      }\r\n    }\r\n  } else {\r\n    if (val === domain[0]) {\r\n      return range[0];\r\n    }\r\n\r\n    if (val === domain[1]) {\r\n      return range[1];\r\n    }\r\n  }\r\n\r\n  return (val - domain[0]) / subDomain * subRange + range[0];\r\n}\r\n/**\r\n * Convert a percent string to absolute number.\r\n * Returns NaN if percent is not a valid string or number\r\n * @memberOf module:echarts/util/number\r\n * @param {string|number} percent\r\n * @param {number} all\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction parsePercent(percent, all) {\r\n  switch (percent) {\r\n    case 'center':\r\n    case 'middle':\r\n      percent = '50%';\r\n      break;\r\n\r\n    case 'left':\r\n    case 'top':\r\n      percent = '0%';\r\n      break;\r\n\r\n    case 'right':\r\n    case 'bottom':\r\n      percent = '100%';\r\n      break;\r\n  }\r\n\r\n  if (typeof percent === 'string') {\r\n    if (_trim(percent).match(/%$/)) {\r\n      return parseFloat(percent) / 100 * all;\r\n    }\r\n\r\n    return parseFloat(percent);\r\n  }\r\n\r\n  return percent == null ? NaN : +percent;\r\n}\r\n/**\r\n * (1) Fix rounding error of float numbers.\r\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\r\n *\r\n * @param {number} x\r\n * @param {number} [precision]\r\n * @param {boolean} [returnStr]\r\n * @return {number|string}\r\n */\r\n\r\n\r\nfunction round(x, precision, returnStr) {\r\n  if (precision == null) {\r\n    precision = 10;\r\n  } // Avoid range error\r\n\r\n\r\n  precision = Math.min(Math.max(0, precision), 20);\r\n  x = (+x).toFixed(precision);\r\n  return returnStr ? x : +x;\r\n}\r\n/**\r\n * asc sort arr.\r\n * The input arr will be modified.\r\n *\r\n * @param {Array} arr\r\n * @return {Array} The input arr.\r\n */\r\n\r\n\r\nfunction asc(arr) {\r\n  arr.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n  return arr;\r\n}\r\n/**\r\n * Get precision\r\n * @param {number} val\r\n */\r\n\r\n\r\nfunction getPrecision(val) {\r\n  val = +val;\r\n\r\n  if (isNaN(val)) {\r\n    return 0;\r\n  } // It is much faster than methods converting number to string as follows\r\n  //      var tmp = val.toString();\r\n  //      return tmp.length - 1 - tmp.indexOf('.');\r\n  // especially when precision is low\r\n\r\n\r\n  var e = 1;\r\n  var count = 0;\r\n\r\n  while (Math.round(val * e) / e !== val) {\r\n    e *= 10;\r\n    count++;\r\n  }\r\n\r\n  return count;\r\n}\r\n/**\r\n * @param {string|number} val\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction getPrecisionSafe(val) {\r\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\r\n\r\n  var eIndex = str.indexOf('e');\r\n\r\n  if (eIndex > 0) {\r\n    var precision = +str.slice(eIndex + 1);\r\n    return precision < 0 ? -precision : 0;\r\n  } else {\r\n    var dotIndex = str.indexOf('.');\r\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\r\n  }\r\n}\r\n/**\r\n * Minimal dicernible data precisioin according to a single pixel.\r\n *\r\n * @param {Array.<number>} dataExtent\r\n * @param {Array.<number>} pixelExtent\r\n * @return {number} precision\r\n */\r\n\r\n\r\nfunction getPixelPrecision(dataExtent, pixelExtent) {\r\n  var log = Math.log;\r\n  var LN10 = Math.LN10;\r\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\r\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\r\n\r\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\r\n  return !isFinite(precision) ? 20 : precision;\r\n}\r\n/**\r\n * Get a data of given precision, assuring the sum of percentages\r\n * in valueList is 1.\r\n * The largest remainer method is used.\r\n * https://en.wikipedia.org/wiki/Largest_remainder_method\r\n *\r\n * @param {Array.<number>} valueList a list of all data\r\n * @param {number} idx index of the data to be processed in valueList\r\n * @param {number} precision integer number showing digits of precision\r\n * @return {number} percent ranging from 0 to 100\r\n */\r\n\r\n\r\nfunction getPercentWithPrecision(valueList, idx, precision) {\r\n  if (!valueList[idx]) {\r\n    return 0;\r\n  }\r\n\r\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\r\n    return acc + (isNaN(val) ? 0 : val);\r\n  }, 0);\r\n\r\n  if (sum === 0) {\r\n    return 0;\r\n  }\r\n\r\n  var digits = Math.pow(10, precision);\r\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\r\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\r\n  });\r\n  var targetSeats = digits * 100;\r\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\r\n    // Assign automatic seats.\r\n    return Math.floor(votes);\r\n  });\r\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\r\n    return acc + val;\r\n  }, 0);\r\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\r\n    return votes - seats[idx];\r\n  }); // Has remainding votes.\r\n\r\n  while (currentSum < targetSeats) {\r\n    // Find next largest remainder.\r\n    var max = Number.NEGATIVE_INFINITY;\r\n    var maxId = null;\r\n\r\n    for (var i = 0, len = remainder.length; i < len; ++i) {\r\n      if (remainder[i] > max) {\r\n        max = remainder[i];\r\n        maxId = i;\r\n      }\r\n    } // Add a vote to max remainder.\r\n\r\n\r\n    ++seats[maxId];\r\n    remainder[maxId] = 0;\r\n    ++currentSum;\r\n  }\r\n\r\n  return seats[idx] / digits;\r\n} // Number.MAX_SAFE_INTEGER, ie do not support.\r\n\r\n\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n/**\r\n * To 0 - 2 * PI, considering negative radian.\r\n * @param {number} radian\r\n * @return {number}\r\n */\r\n\r\nfunction remRadian(radian) {\r\n  var pi2 = Math.PI * 2;\r\n  return (radian % pi2 + pi2) % pi2;\r\n}\r\n/**\r\n * @param {type} radian\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isRadianAroundZero(val) {\r\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\r\n}\r\n/* eslint-disable */\r\n\r\n\r\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\r\n\r\n/* eslint-enable */\r\n\r\n/**\r\n * @param {string|Date|number} value These values can be accepted:\r\n *   + An instance of Date, represent a time in its own time zone.\r\n *   + Or string in a subset of ISO 8601, only including:\r\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\r\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\r\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\r\n *     all of which will be treated as local time if time zone is not specified\r\n *     (see <https://momentjs.com/>).\r\n *   + Or other string format, including (all of which will be treated as loacal time):\r\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\r\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\r\n *   + a timestamp, which represent a time in UTC.\r\n * @return {Date} date\r\n */\r\n\r\nfunction parseDate(value) {\r\n  if (value instanceof Date) {\r\n    return value;\r\n  } else if (typeof value === 'string') {\r\n    // Different browsers parse date in different way, so we parse it manually.\r\n    // Some other issues:\r\n    // new Date('1970-01-01') is UTC,\r\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\r\n    // See issue #3623\r\n    var match = TIME_REG.exec(value);\r\n\r\n    if (!match) {\r\n      // return Invalid Date.\r\n      return new Date(NaN);\r\n    } // Use local time when no timezone offset specifed.\r\n\r\n\r\n    if (!match[8]) {\r\n      // match[n] can only be string or undefined.\r\n      // But take care of '12' + 1 => '121'.\r\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\r\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\r\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\r\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\r\n    // then these code will get different result:\r\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\r\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\r\n    // So we should not use `new Date`, but use `Date.UTC`.\r\n    else {\r\n        var hour = +match[4] || 0;\r\n\r\n        if (match[8].toUpperCase() !== 'Z') {\r\n          hour -= match[8].slice(0, 3);\r\n        }\r\n\r\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\r\n      }\r\n  } else if (value == null) {\r\n    return new Date(NaN);\r\n  }\r\n\r\n  return new Date(Math.round(value));\r\n}\r\n/**\r\n * Quantity of a number. e.g. 0.1, 1, 10, 100\r\n *\r\n * @param  {number} val\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction quantity(val) {\r\n  return Math.pow(10, quantityExponent(val));\r\n}\r\n/**\r\n * Exponent of the quantity of a number\r\n * e.g., 1234 equals to 1.234*10^3, so quantityExponent(1234) is 3\r\n *\r\n * @param  {number} val non-negative value\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction quantityExponent(val) {\r\n  if (val === 0) {\r\n    return 0;\r\n  }\r\n\r\n  var exp = Math.floor(Math.log(val) / Math.LN10);\r\n  /**\r\n   * exp is expected to be the rounded-down result of the base-10 log of val.\r\n   * But due to the precision loss with Math.log(val), we need to restore it\r\n   * using 10^exp to make sure we can get val back from exp. #11249\r\n   */\r\n\r\n  if (val / Math.pow(10, exp) >= 10) {\r\n    exp++;\r\n  }\r\n\r\n  return exp;\r\n}\r\n/**\r\n * find a “nice” number approximately equal to x. Round the number if round = true,\r\n * take ceiling if round = false. The primary observation is that the “nicest”\r\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\r\n *\r\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\r\n *\r\n * @param  {number} val Non-negative value.\r\n * @param  {boolean} round\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction nice(val, round) {\r\n  var exponent = quantityExponent(val);\r\n  var exp10 = Math.pow(10, exponent);\r\n  var f = val / exp10; // 1 <= f < 10\r\n\r\n  var nf;\r\n\r\n  if (round) {\r\n    if (f < 1.5) {\r\n      nf = 1;\r\n    } else if (f < 2.5) {\r\n      nf = 2;\r\n    } else if (f < 4) {\r\n      nf = 3;\r\n    } else if (f < 7) {\r\n      nf = 5;\r\n    } else {\r\n      nf = 10;\r\n    }\r\n  } else {\r\n    if (f < 1) {\r\n      nf = 1;\r\n    } else if (f < 2) {\r\n      nf = 2;\r\n    } else if (f < 3) {\r\n      nf = 3;\r\n    } else if (f < 5) {\r\n      nf = 5;\r\n    } else {\r\n      nf = 10;\r\n    }\r\n  }\r\n\r\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\r\n  // 20 is the uppper bound of toFixed.\r\n\r\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\r\n}\r\n/**\r\n * This code was copied from \"d3.js\"\r\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/arrays/quantile.js>.\r\n * See the license statement at the head of this file.\r\n * @param {Array.<number>} ascArr\r\n */\r\n\r\n\r\nfunction quantile(ascArr, p) {\r\n  var H = (ascArr.length - 1) * p + 1;\r\n  var h = Math.floor(H);\r\n  var v = +ascArr[h - 1];\r\n  var e = H - h;\r\n  return e ? v + e * (ascArr[h] - v) : v;\r\n}\r\n/**\r\n * Order intervals asc, and split them when overlap.\r\n * expect(numberUtil.reformIntervals([\r\n *     {interval: [18, 62], close: [1, 1]},\r\n *     {interval: [-Infinity, -70], close: [0, 0]},\r\n *     {interval: [-70, -26], close: [1, 1]},\r\n *     {interval: [-26, 18], close: [1, 1]},\r\n *     {interval: [62, 150], close: [1, 1]},\r\n *     {interval: [106, 150], close: [1, 1]},\r\n *     {interval: [150, Infinity], close: [0, 0]}\r\n * ])).toEqual([\r\n *     {interval: [-Infinity, -70], close: [0, 0]},\r\n *     {interval: [-70, -26], close: [1, 1]},\r\n *     {interval: [-26, 18], close: [0, 1]},\r\n *     {interval: [18, 62], close: [0, 1]},\r\n *     {interval: [62, 150], close: [0, 1]},\r\n *     {interval: [150, Infinity], close: [0, 0]}\r\n * ]);\r\n * @param {Array.<Object>} list, where `close` mean open or close\r\n *        of the interval, and Infinity can be used.\r\n * @return {Array.<Object>} The origin list, which has been reformed.\r\n */\r\n\r\n\r\nfunction reformIntervals(list) {\r\n  list.sort(function (a, b) {\r\n    return littleThan(a, b, 0) ? -1 : 1;\r\n  });\r\n  var curr = -Infinity;\r\n  var currClose = 1;\r\n\r\n  for (var i = 0; i < list.length;) {\r\n    var interval = list[i].interval;\r\n    var close = list[i].close;\r\n\r\n    for (var lg = 0; lg < 2; lg++) {\r\n      if (interval[lg] <= curr) {\r\n        interval[lg] = curr;\r\n        close[lg] = !lg ? 1 - currClose : 1;\r\n      }\r\n\r\n      curr = interval[lg];\r\n      currClose = close[lg];\r\n    }\r\n\r\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\r\n      list.splice(i, 1);\r\n    } else {\r\n      i++;\r\n    }\r\n  }\r\n\r\n  return list;\r\n\r\n  function littleThan(a, b, lg) {\r\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\r\n  }\r\n}\r\n/**\r\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n * subtraction forces infinities to NaN\r\n *\r\n * @param {*} v\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isNumeric(v) {\r\n  return v - parseFloat(v) >= 0;\r\n}\r\n\r\nexports.linearMap = linearMap;\r\nexports.parsePercent = parsePercent;\r\nexports.round = round;\r\nexports.asc = asc;\r\nexports.getPrecision = getPrecision;\r\nexports.getPrecisionSafe = getPrecisionSafe;\r\nexports.getPixelPrecision = getPixelPrecision;\r\nexports.getPercentWithPrecision = getPercentWithPrecision;\r\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\r\nexports.remRadian = remRadian;\r\nexports.isRadianAroundZero = isRadianAroundZero;\r\nexports.parseDate = parseDate;\r\nexports.quantity = quantity;\r\nexports.quantityExponent = quantityExponent;\r\nexports.nice = nice;\r\nexports.quantile = quantile;\r\nexports.reformIntervals = reformIntervals;\r\nexports.isNumeric = isNumeric;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _graphic = require(\"../graphic\");\r\n\r\nvar extendShape = _graphic.extendShape;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Sausage: similar to sector, but have half circle on both sides\r\n * @public\r\n */\r\nvar _default = extendShape({\r\n  type: 'sausage',\r\n  shape: {\r\n    cx: 0,\r\n    cy: 0,\r\n    r0: 0,\r\n    r: 0,\r\n    startAngle: 0,\r\n    endAngle: Math.PI * 2,\r\n    clockwise: true\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var x = shape.cx;\r\n    var y = shape.cy;\r\n    var r0 = Math.max(shape.r0 || 0, 0);\r\n    var r = Math.max(shape.r, 0);\r\n    var dr = (r - r0) * 0.5;\r\n    var rCenter = r0 + dr;\r\n    var startAngle = shape.startAngle;\r\n    var endAngle = shape.endAngle;\r\n    var clockwise = shape.clockwise;\r\n    var unitStartX = Math.cos(startAngle);\r\n    var unitStartY = Math.sin(startAngle);\r\n    var unitEndX = Math.cos(endAngle);\r\n    var unitEndY = Math.sin(endAngle);\r\n    var lessThanCircle = clockwise ? endAngle - startAngle < Math.PI * 2 : startAngle - endAngle < Math.PI * 2;\r\n\r\n    if (lessThanCircle) {\r\n      ctx.moveTo(unitStartX * r0 + x, unitStartY * r0 + y);\r\n      ctx.arc(unitStartX * rCenter + x, unitStartY * rCenter + y, dr, -Math.PI + startAngle, startAngle, !clockwise);\r\n    }\r\n\r\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\r\n    ctx.moveTo(unitEndX * r + x, unitEndY * r + y);\r\n    ctx.arc(unitEndX * rCenter + x, unitEndY * rCenter + y, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\r\n\r\n    if (r0 !== 0) {\r\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\r\n      ctx.moveTo(unitStartX * r0 + x, unitEndY * r0 + y);\r\n    }\r\n\r\n    ctx.closePath();\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"./graphic\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar _text = require(\"zrender/lib/contain/text\");\r\n\r\nvar calculateTextPosition = _text.calculateTextPosition;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Symbol factory\r\n\r\n/**\r\n * Triangle shape\r\n * @inner\r\n */\r\nvar Triangle = graphic.extendShape({\r\n  type: 'triangle',\r\n  shape: {\r\n    cx: 0,\r\n    cy: 0,\r\n    width: 0,\r\n    height: 0\r\n  },\r\n  buildPath: function (path, shape) {\r\n    var cx = shape.cx;\r\n    var cy = shape.cy;\r\n    var width = shape.width / 2;\r\n    var height = shape.height / 2;\r\n    path.moveTo(cx, cy - height);\r\n    path.lineTo(cx + width, cy + height);\r\n    path.lineTo(cx - width, cy + height);\r\n    path.closePath();\r\n  }\r\n});\r\n/**\r\n * Diamond shape\r\n * @inner\r\n */\r\n\r\nvar Diamond = graphic.extendShape({\r\n  type: 'diamond',\r\n  shape: {\r\n    cx: 0,\r\n    cy: 0,\r\n    width: 0,\r\n    height: 0\r\n  },\r\n  buildPath: function (path, shape) {\r\n    var cx = shape.cx;\r\n    var cy = shape.cy;\r\n    var width = shape.width / 2;\r\n    var height = shape.height / 2;\r\n    path.moveTo(cx, cy - height);\r\n    path.lineTo(cx + width, cy);\r\n    path.lineTo(cx, cy + height);\r\n    path.lineTo(cx - width, cy);\r\n    path.closePath();\r\n  }\r\n});\r\n/**\r\n * Pin shape\r\n * @inner\r\n */\r\n\r\nvar Pin = graphic.extendShape({\r\n  type: 'pin',\r\n  shape: {\r\n    // x, y on the cusp\r\n    x: 0,\r\n    y: 0,\r\n    width: 0,\r\n    height: 0\r\n  },\r\n  buildPath: function (path, shape) {\r\n    var x = shape.x;\r\n    var y = shape.y;\r\n    var w = shape.width / 5 * 3; // Height must be larger than width\r\n\r\n    var h = Math.max(w, shape.height);\r\n    var r = w / 2; // Dist on y with tangent point and circle center\r\n\r\n    var dy = r * r / (h - r);\r\n    var cy = y - h + r + dy;\r\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\r\n\r\n    var dx = Math.cos(angle) * r;\r\n    var tanX = Math.sin(angle);\r\n    var tanY = Math.cos(angle);\r\n    var cpLen = r * 0.6;\r\n    var cpLen2 = r * 0.7;\r\n    path.moveTo(x - dx, cy + dy);\r\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\r\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\r\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\r\n    path.closePath();\r\n  }\r\n});\r\n/**\r\n * Arrow shape\r\n * @inner\r\n */\r\n\r\nvar Arrow = graphic.extendShape({\r\n  type: 'arrow',\r\n  shape: {\r\n    x: 0,\r\n    y: 0,\r\n    width: 0,\r\n    height: 0\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var height = shape.height;\r\n    var width = shape.width;\r\n    var x = shape.x;\r\n    var y = shape.y;\r\n    var dx = width / 3 * 2;\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(x + dx, y + height);\r\n    ctx.lineTo(x, y + height / 4 * 3);\r\n    ctx.lineTo(x - dx, y + height);\r\n    ctx.lineTo(x, y);\r\n    ctx.closePath();\r\n  }\r\n});\r\n/**\r\n * Map of path contructors\r\n * @type {Object.<string, module:zrender/graphic/Path>}\r\n */\r\n\r\nvar symbolCtors = {\r\n  line: graphic.Line,\r\n  rect: graphic.Rect,\r\n  roundRect: graphic.Rect,\r\n  square: graphic.Rect,\r\n  circle: graphic.Circle,\r\n  diamond: Diamond,\r\n  pin: Pin,\r\n  arrow: Arrow,\r\n  triangle: Triangle\r\n};\r\nvar symbolShapeMakers = {\r\n  line: function (x, y, w, h, shape) {\r\n    // FIXME\r\n    shape.x1 = x;\r\n    shape.y1 = y + h / 2;\r\n    shape.x2 = x + w;\r\n    shape.y2 = y + h / 2;\r\n  },\r\n  rect: function (x, y, w, h, shape) {\r\n    shape.x = x;\r\n    shape.y = y;\r\n    shape.width = w;\r\n    shape.height = h;\r\n  },\r\n  roundRect: function (x, y, w, h, shape) {\r\n    shape.x = x;\r\n    shape.y = y;\r\n    shape.width = w;\r\n    shape.height = h;\r\n    shape.r = Math.min(w, h) / 4;\r\n  },\r\n  square: function (x, y, w, h, shape) {\r\n    var size = Math.min(w, h);\r\n    shape.x = x;\r\n    shape.y = y;\r\n    shape.width = size;\r\n    shape.height = size;\r\n  },\r\n  circle: function (x, y, w, h, shape) {\r\n    // Put circle in the center of square\r\n    shape.cx = x + w / 2;\r\n    shape.cy = y + h / 2;\r\n    shape.r = Math.min(w, h) / 2;\r\n  },\r\n  diamond: function (x, y, w, h, shape) {\r\n    shape.cx = x + w / 2;\r\n    shape.cy = y + h / 2;\r\n    shape.width = w;\r\n    shape.height = h;\r\n  },\r\n  pin: function (x, y, w, h, shape) {\r\n    shape.x = x + w / 2;\r\n    shape.y = y + h / 2;\r\n    shape.width = w;\r\n    shape.height = h;\r\n  },\r\n  arrow: function (x, y, w, h, shape) {\r\n    shape.x = x + w / 2;\r\n    shape.y = y + h / 2;\r\n    shape.width = w;\r\n    shape.height = h;\r\n  },\r\n  triangle: function (x, y, w, h, shape) {\r\n    shape.cx = x + w / 2;\r\n    shape.cy = y + h / 2;\r\n    shape.width = w;\r\n    shape.height = h;\r\n  }\r\n};\r\nvar symbolBuildProxies = {};\r\nzrUtil.each(symbolCtors, function (Ctor, name) {\r\n  symbolBuildProxies[name] = new Ctor();\r\n});\r\nvar SymbolClz = graphic.extendShape({\r\n  type: 'symbol',\r\n  shape: {\r\n    symbolType: '',\r\n    x: 0,\r\n    y: 0,\r\n    width: 0,\r\n    height: 0\r\n  },\r\n  calculateTextPosition: function (out, style, rect) {\r\n    var res = calculateTextPosition(out, style, rect);\r\n    var shape = this.shape;\r\n\r\n    if (shape && shape.symbolType === 'pin' && style.textPosition === 'inside') {\r\n      res.y = rect.y + rect.height * 0.4;\r\n    }\r\n\r\n    return res;\r\n  },\r\n  buildPath: function (ctx, shape, inBundle) {\r\n    var symbolType = shape.symbolType;\r\n\r\n    if (symbolType !== 'none') {\r\n      var proxySymbol = symbolBuildProxies[symbolType];\r\n\r\n      if (!proxySymbol) {\r\n        // Default rect\r\n        symbolType = 'rect';\r\n        proxySymbol = symbolBuildProxies[symbolType];\r\n      }\r\n\r\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\r\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\r\n    }\r\n  }\r\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\r\n\r\nfunction symbolPathSetColor(color, innerColor) {\r\n  if (this.type !== 'image') {\r\n    var symbolStyle = this.style;\r\n    var symbolShape = this.shape;\r\n\r\n    if (symbolShape && symbolShape.symbolType === 'line') {\r\n      symbolStyle.stroke = color;\r\n    } else if (this.__isEmptyBrush) {\r\n      symbolStyle.stroke = color;\r\n      symbolStyle.fill = innerColor || '#fff';\r\n    } else {\r\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\r\n      symbolStyle.fill && (symbolStyle.fill = color);\r\n      symbolStyle.stroke && (symbolStyle.stroke = color);\r\n    }\r\n\r\n    this.dirty(false);\r\n  }\r\n}\r\n/**\r\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n * @param {string} symbolType\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @param {string} color\r\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\r\n *                            for path and image only.\r\n */\r\n\r\n\r\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\r\n  // TODO Support image object, DynamicImage.\r\n  var isEmpty = symbolType.indexOf('empty') === 0;\r\n\r\n  if (isEmpty) {\r\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\r\n  }\r\n\r\n  var symbolPath;\r\n\r\n  if (symbolType.indexOf('image://') === 0) {\r\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\r\n  } else if (symbolType.indexOf('path://') === 0) {\r\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\r\n  } else {\r\n    symbolPath = new SymbolClz({\r\n      shape: {\r\n        symbolType: symbolType,\r\n        x: x,\r\n        y: y,\r\n        width: w,\r\n        height: h\r\n      }\r\n    });\r\n  }\r\n\r\n  symbolPath.__isEmptyBrush = isEmpty;\r\n  symbolPath.setColor = symbolPathSetColor;\r\n  symbolPath.setColor(color);\r\n  return symbolPath;\r\n}\r\n\r\nexports.createSymbol = createSymbol;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\r\nvar RATE = '\\0__throttleRate';\r\nvar THROTTLE_TYPE = '\\0__throttleType';\r\n/**\r\n * @public\r\n * @param {(Function)} fn\r\n * @param {number} [delay=0] Unit: ms.\r\n * @param {boolean} [debounce=false]\r\n *        true: If call interval less than `delay`, only the last call works.\r\n *        false: If call interval less than `delay, call works on fixed rate.\r\n * @return {(Function)} throttled fn.\r\n */\r\n\r\nfunction throttle(fn, delay, debounce) {\r\n  var currCall;\r\n  var lastCall = 0;\r\n  var lastExec = 0;\r\n  var timer = null;\r\n  var diff;\r\n  var scope;\r\n  var args;\r\n  var debounceNextCall;\r\n  delay = delay || 0;\r\n\r\n  function exec() {\r\n    lastExec = new Date().getTime();\r\n    timer = null;\r\n    fn.apply(scope, args || []);\r\n  }\r\n\r\n  var cb = function () {\r\n    currCall = new Date().getTime();\r\n    scope = this;\r\n    args = arguments;\r\n    var thisDelay = debounceNextCall || delay;\r\n    var thisDebounce = debounceNextCall || debounce;\r\n    debounceNextCall = null;\r\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\r\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\r\n    // than a new call of `cb`, that is, preserving the command order. Consider\r\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\r\n    // happens, either the `exec` is called dierectly, or the call is delayed.\r\n    // But the delayed call should never be later than next call of `cb`. Under\r\n    // this assurance, we can simply update view state each time `dispatchAction`\r\n    // triggered by user roaming, but not need to add extra code to avoid the\r\n    // state being \"rolled-back\".\r\n\r\n    if (thisDebounce) {\r\n      timer = setTimeout(exec, thisDelay);\r\n    } else {\r\n      if (diff >= 0) {\r\n        exec();\r\n      } else {\r\n        timer = setTimeout(exec, -diff);\r\n      }\r\n    }\r\n\r\n    lastCall = currCall;\r\n  };\r\n  /**\r\n   * Clear throttle.\r\n   * @public\r\n   */\r\n\r\n\r\n  cb.clear = function () {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      timer = null;\r\n    }\r\n  };\r\n  /**\r\n   * Enable debounce once.\r\n   */\r\n\r\n\r\n  cb.debounceNextCall = function (debounceDelay) {\r\n    debounceNextCall = debounceDelay;\r\n  };\r\n\r\n  return cb;\r\n}\r\n/**\r\n * Create throttle method or update throttle rate.\r\n *\r\n * @example\r\n * ComponentView.prototype.render = function () {\r\n *     ...\r\n *     throttle.createOrUpdate(\r\n *         this,\r\n *         '_dispatchAction',\r\n *         this.model.get('throttle'),\r\n *         'fixRate'\r\n *     );\r\n * };\r\n * ComponentView.prototype.remove = function () {\r\n *     throttle.clear(this, '_dispatchAction');\r\n * };\r\n * ComponentView.prototype.dispose = function () {\r\n *     throttle.clear(this, '_dispatchAction');\r\n * };\r\n *\r\n * @public\r\n * @param {Object} obj\r\n * @param {string} fnAttr\r\n * @param {number} [rate]\r\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\r\n * @return {Function} throttled function.\r\n */\r\n\r\n\r\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\r\n  var fn = obj[fnAttr];\r\n\r\n  if (!fn) {\r\n    return;\r\n  }\r\n\r\n  var originFn = fn[ORIGIN_METHOD] || fn;\r\n  var lastThrottleType = fn[THROTTLE_TYPE];\r\n  var lastRate = fn[RATE];\r\n\r\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\r\n    if (rate == null || !throttleType) {\r\n      return obj[fnAttr] = originFn;\r\n    }\r\n\r\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\r\n    fn[ORIGIN_METHOD] = originFn;\r\n    fn[THROTTLE_TYPE] = throttleType;\r\n    fn[RATE] = rate;\r\n  }\r\n\r\n  return fn;\r\n}\r\n/**\r\n * Clear throttle. Example see throttle.createOrUpdate.\r\n *\r\n * @public\r\n * @param {Object} obj\r\n * @param {string} fnAttr\r\n */\r\n\r\n\r\nfunction clear(obj, fnAttr) {\r\n  var fn = obj[fnAttr];\r\n\r\n  if (fn && fn[ORIGIN_METHOD]) {\r\n    obj[fnAttr] = fn[ORIGIN_METHOD];\r\n  }\r\n}\r\n\r\nexports.throttle = throttle;\r\nexports.createOrUpdate = createOrUpdate;\r\nexports.clear = clear;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\n\r\nvar Group = require(\"zrender/lib/container/Group\");\r\n\r\nvar componentUtil = require(\"../util/component\");\r\n\r\nvar clazzUtil = require(\"../util/clazz\");\r\n\r\nvar modelUtil = require(\"../util/model\");\r\n\r\nvar graphicUtil = require(\"../util/graphic\");\r\n\r\nvar _task = require(\"../stream/task\");\r\n\r\nvar createTask = _task.createTask;\r\n\r\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = modelUtil.makeInner();\r\nvar renderPlanner = createRenderPlanner();\r\n\r\nfunction Chart() {\r\n  /**\r\n   * @type {module:zrender/container/Group}\r\n   * @readOnly\r\n   */\r\n  this.group = new Group();\r\n  /**\r\n   * @type {string}\r\n   * @readOnly\r\n   */\r\n\r\n  this.uid = componentUtil.getUID('viewChart');\r\n  this.renderTask = createTask({\r\n    plan: renderTaskPlan,\r\n    reset: renderTaskReset\r\n  });\r\n  this.renderTask.context = {\r\n    view: this\r\n  };\r\n}\r\n\r\nChart.prototype = {\r\n  type: 'chart',\r\n\r\n  /**\r\n   * Init the chart.\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  init: function (ecModel, api) {},\r\n\r\n  /**\r\n   * Render the chart.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  render: function (seriesModel, ecModel, api, payload) {},\r\n\r\n  /**\r\n   * Highlight series or specified data item.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  highlight: function (seriesModel, ecModel, api, payload) {\r\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\r\n  },\r\n\r\n  /**\r\n   * Downplay series or specified data item.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  downplay: function (seriesModel, ecModel, api, payload) {\r\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\r\n  },\r\n\r\n  /**\r\n   * Remove self.\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  remove: function (ecModel, api) {\r\n    this.group.removeAll();\r\n  },\r\n\r\n  /**\r\n   * Dispose self.\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  dispose: function () {},\r\n\r\n  /**\r\n   * Rendering preparation in progressive mode.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  incrementalPrepareRender: null,\r\n\r\n  /**\r\n   * Render in progressive mode.\r\n   * @param  {Object} params See taskParams in `stream/task.js`\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  incrementalRender: null,\r\n\r\n  /**\r\n   * Update transform directly.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   * @return {Object} {update: true}\r\n   */\r\n  updateTransform: null,\r\n\r\n  /**\r\n   * The view contains the given point.\r\n   * @interface\r\n   * @param {Array.<number>} point\r\n   * @return {boolean}\r\n   */\r\n  // containPoint: function () {}\r\n\r\n  /**\r\n   * @param {string} eventType\r\n   * @param {Object} query\r\n   * @param {module:zrender/Element} targetEl\r\n   * @param {Object} packedEvent\r\n   * @return {boolen} Pass only when return `true`.\r\n   */\r\n  filterForExposedEvent: null\r\n};\r\nvar chartProto = Chart.prototype;\r\n\r\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\r\n  this.render(seriesModel, ecModel, api, payload);\r\n};\r\n/**\r\n * Set state of single element\r\n * @param {module:zrender/Element} el\r\n * @param {string} state 'normal'|'emphasis'\r\n * @param {number} highlightDigit\r\n */\r\n\r\n\r\nfunction elSetState(el, state, highlightDigit) {\r\n  if (el) {\r\n    el.trigger(state, highlightDigit);\r\n\r\n    if (el.isGroup // Simple optimize.\r\n    && !graphicUtil.isHighDownDispatcher(el)) {\r\n      for (var i = 0, len = el.childCount(); i < len; i++) {\r\n        elSetState(el.childAt(i), state, highlightDigit);\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} payload\r\n * @param {string} state 'normal'|'emphasis'\r\n */\r\n\r\n\r\nfunction toggleHighlight(data, payload, state) {\r\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\r\n  var highlightDigit = payload && payload.highlightKey != null ? graphicUtil.getHighlightDigit(payload.highlightKey) : null;\r\n\r\n  if (dataIndex != null) {\r\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\r\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\r\n    });\r\n  } else {\r\n    data.eachItemGraphicEl(function (el) {\r\n      elSetState(el, state, highlightDigit);\r\n    });\r\n  }\r\n} // Enable Chart.extend.\r\n\r\n\r\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n\r\nclazzUtil.enableClassManagement(Chart, {\r\n  registerWhenExtend: true\r\n});\r\n\r\nChart.markUpdateMethod = function (payload, methodName) {\r\n  inner(payload).updateMethod = methodName;\r\n};\r\n\r\nfunction renderTaskPlan(context) {\r\n  return renderPlanner(context.model);\r\n}\r\n\r\nfunction renderTaskReset(context) {\r\n  var seriesModel = context.model;\r\n  var ecModel = context.ecModel;\r\n  var api = context.api;\r\n  var payload = context.payload; // ???! remove updateView updateVisual\r\n\r\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\r\n  var view = context.view;\r\n  var updateMethod = payload && inner(payload).updateMethod;\r\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\r\n  // is less than progressive threshold.\r\n  : 'render';\r\n\r\n  if (methodName !== 'render') {\r\n    view[methodName](seriesModel, ecModel, api, payload);\r\n  }\r\n\r\n  return progressMethodMap[methodName];\r\n}\r\n\r\nvar progressMethodMap = {\r\n  incrementalPrepareRender: {\r\n    progress: function (params, context) {\r\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\r\n    }\r\n  },\r\n  render: {\r\n    // Put view.render in `progress` to support appendData. But in this case\r\n    // view.render should not be called in reset, otherwise it will be called\r\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\r\n    // in any cases.\r\n    forceFirstProgress: true,\r\n    progress: function (params, context) {\r\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\r\n    }\r\n  }\r\n};\r\nvar _default = Chart;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Group = require(\"zrender/lib/container/Group\");\r\n\r\nvar componentUtil = require(\"../util/component\");\r\n\r\nvar clazzUtil = require(\"../util/clazz\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar Component = function () {\r\n  /**\r\n   * @type {module:zrender/container/Group}\r\n   * @readOnly\r\n   */\r\n  this.group = new Group();\r\n  /**\r\n   * @type {string}\r\n   * @readOnly\r\n   */\r\n\r\n  this.uid = componentUtil.getUID('viewComponent');\r\n};\r\n\r\nComponent.prototype = {\r\n  constructor: Component,\r\n  init: function (ecModel, api) {},\r\n  render: function (componentModel, ecModel, api, payload) {},\r\n  dispose: function () {},\r\n\r\n  /**\r\n   * @param {string} eventType\r\n   * @param {Object} query\r\n   * @param {module:zrender/Element} targetEl\r\n   * @param {Object} packedEvent\r\n   * @return {boolen} Pass only when return `true`.\r\n   */\r\n  filterForExposedEvent: null\r\n};\r\nvar componentProto = Component.prototype;\r\n\r\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\r\n}; // Enable Component.extend.\r\n\r\n\r\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n\r\nclazzUtil.enableClassManagement(Component, {\r\n  registerWhenExtend: true\r\n});\r\nvar _default = Component;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * LegendVisualProvider is an bridge that pick encoded color from data and\r\n * provide to the legend component.\r\n * @param {Function} getDataWithEncodedVisual Function to get data after filtered. It stores all the encoding info\r\n * @param {Function} getRawData Function to get raw data before filtered.\r\n */\r\nfunction LegendVisualProvider(getDataWithEncodedVisual, getRawData) {\r\n  this.getAllNames = function () {\r\n    var rawData = getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\r\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\r\n\r\n    return rawData.mapArray(rawData.getName);\r\n  };\r\n\r\n  this.containName = function (name) {\r\n    var rawData = getRawData();\r\n    return rawData.indexOfName(name) >= 0;\r\n  };\r\n\r\n  this.indexOfName = function (name) {\r\n    // Only get data when necessary.\r\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\r\n    // Invoking Series#getData immediately will throw an error.\r\n    var dataWithEncodedVisual = getDataWithEncodedVisual();\r\n    return dataWithEncodedVisual.indexOfName(name);\r\n  };\r\n\r\n  this.getItemVisual = function (dataIndex, key) {\r\n    // Get encoded visual properties from final filtered data.\r\n    var dataWithEncodedVisual = getDataWithEncodedVisual();\r\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\r\n  };\r\n}\r\n\r\nvar _default = LegendVisualProvider;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar zrColor = require(\"zrender/lib/tool/color\");\r\n\r\nvar _number = require(\"../util/number\");\r\n\r\nvar linearMap = _number.linearMap;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar isObject = zrUtil.isObject;\r\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\r\n/**\r\n * @param {Object} option\r\n * @param {string} [option.type] See visualHandlers.\r\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\r\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\r\n *                                              required when mappingMethod is 'linear'\r\n * @param {Array.<Object>=} [option.pieceList] [\r\n *                                             {value: someValue},\r\n *                                             {interval: [min1, max1], visual: {...}},\r\n *                                             {interval: [min2, max2]}\r\n *                                             ],\r\n *                                            required when mappingMethod is 'piecewise'.\r\n *                                            Visual for only each piece can be specified.\r\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\r\n *                                            required when mappingMethod is 'category'.\r\n *                                            If no option.categories, categories is set\r\n *                                            as [0, 1, 2, ...].\r\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\r\n * @param {(Array|Object|*)} [option.visual]  Visual data.\r\n *                                            when mappingMethod is 'category',\r\n *                                            visual data can be array or object\r\n *                                            (like: {cate1: '#222', none: '#fff'})\r\n *                                            or primary types (which represents\r\n *                                            default category visual), otherwise visual\r\n *                                            can be array or primary (which will be\r\n *                                            normalized to array).\r\n *\r\n */\r\n\r\nvar VisualMapping = function (option) {\r\n  var mappingMethod = option.mappingMethod;\r\n  var visualType = option.type;\r\n  /**\r\n   * @readOnly\r\n   * @type {Object}\r\n   */\r\n\r\n  var thisOption = this.option = zrUtil.clone(option);\r\n  /**\r\n   * @readOnly\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = visualType;\r\n  /**\r\n   * @readOnly\r\n   * @type {string}\r\n   */\r\n\r\n  this.mappingMethod = mappingMethod;\r\n  /**\r\n   * @private\r\n   * @type {Function}\r\n   */\r\n\r\n  this._normalizeData = normalizers[mappingMethod];\r\n  var visualHandler = visualHandlers[visualType];\r\n  /**\r\n   * @public\r\n   * @type {Function}\r\n   */\r\n\r\n  this.applyVisual = visualHandler.applyVisual;\r\n  /**\r\n   * @public\r\n   * @type {Function}\r\n   */\r\n\r\n  this.getColorMapper = visualHandler.getColorMapper;\r\n  /**\r\n   * @private\r\n   * @type {Function}\r\n   */\r\n\r\n  this._doMap = visualHandler._doMap[mappingMethod];\r\n\r\n  if (mappingMethod === 'piecewise') {\r\n    normalizeVisualRange(thisOption);\r\n    preprocessForPiecewise(thisOption);\r\n  } else if (mappingMethod === 'category') {\r\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\r\n    // which need no more preprocess except normalize visual.\r\n    : normalizeVisualRange(thisOption, true);\r\n  } else {\r\n    // mappingMethod === 'linear' or 'fixed'\r\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\r\n    normalizeVisualRange(thisOption);\r\n  }\r\n};\r\n\r\nVisualMapping.prototype = {\r\n  constructor: VisualMapping,\r\n  mapValueToVisual: function (value) {\r\n    var normalized = this._normalizeData(value);\r\n\r\n    return this._doMap(normalized, value);\r\n  },\r\n  getNormalizer: function () {\r\n    return zrUtil.bind(this._normalizeData, this);\r\n  }\r\n};\r\nvar visualHandlers = VisualMapping.visualHandlers = {\r\n  color: {\r\n    applyVisual: makeApplyVisual('color'),\r\n\r\n    /**\r\n     * Create a mapper function\r\n     * @return {Function}\r\n     */\r\n    getColorMapper: function () {\r\n      var thisOption = this.option;\r\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\r\n        !isNormalized && (value = this._normalizeData(value));\r\n        return doMapCategory.call(this, value);\r\n      } : function (value, isNormalized, out) {\r\n        // If output rgb array\r\n        // which will be much faster and useful in pixel manipulation\r\n        var returnRGBArray = !!out;\r\n        !isNormalized && (value = this._normalizeData(value));\r\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\r\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\r\n      }, this);\r\n    },\r\n    _doMap: {\r\n      linear: function (normalized) {\r\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\r\n      },\r\n      category: doMapCategory,\r\n      piecewise: function (normalized, value) {\r\n        var result = getSpecifiedVisual.call(this, value);\r\n\r\n        if (result == null) {\r\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\r\n        }\r\n\r\n        return result;\r\n      },\r\n      fixed: doMapFixed\r\n    }\r\n  },\r\n  colorHue: makePartialColorVisualHandler(function (color, value) {\r\n    return zrColor.modifyHSL(color, value);\r\n  }),\r\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\r\n    return zrColor.modifyHSL(color, null, value);\r\n  }),\r\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\r\n    return zrColor.modifyHSL(color, null, null, value);\r\n  }),\r\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\r\n    return zrColor.modifyAlpha(color, value);\r\n  }),\r\n  opacity: {\r\n    applyVisual: makeApplyVisual('opacity'),\r\n    _doMap: makeDoMap([0, 1])\r\n  },\r\n  liftZ: {\r\n    applyVisual: makeApplyVisual('liftZ'),\r\n    _doMap: {\r\n      linear: doMapFixed,\r\n      category: doMapFixed,\r\n      piecewise: doMapFixed,\r\n      fixed: doMapFixed\r\n    }\r\n  },\r\n  symbol: {\r\n    applyVisual: function (value, getter, setter) {\r\n      var symbolCfg = this.mapValueToVisual(value);\r\n\r\n      if (zrUtil.isString(symbolCfg)) {\r\n        setter('symbol', symbolCfg);\r\n      } else if (isObject(symbolCfg)) {\r\n        for (var name in symbolCfg) {\r\n          if (symbolCfg.hasOwnProperty(name)) {\r\n            setter(name, symbolCfg[name]);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    _doMap: {\r\n      linear: doMapToArray,\r\n      category: doMapCategory,\r\n      piecewise: function (normalized, value) {\r\n        var result = getSpecifiedVisual.call(this, value);\r\n\r\n        if (result == null) {\r\n          result = doMapToArray.call(this, normalized);\r\n        }\r\n\r\n        return result;\r\n      },\r\n      fixed: doMapFixed\r\n    }\r\n  },\r\n  symbolSize: {\r\n    applyVisual: makeApplyVisual('symbolSize'),\r\n    _doMap: makeDoMap([0, 1])\r\n  }\r\n};\r\n\r\nfunction preprocessForPiecewise(thisOption) {\r\n  var pieceList = thisOption.pieceList;\r\n  thisOption.hasSpecialVisual = false;\r\n  zrUtil.each(pieceList, function (piece, index) {\r\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\r\n    // a visual range, so it does not need to be normalized.\r\n\r\n    if (piece.visual != null) {\r\n      thisOption.hasSpecialVisual = true;\r\n    }\r\n  });\r\n}\r\n\r\nfunction preprocessForSpecifiedCategory(thisOption) {\r\n  // Hash categories.\r\n  var categories = thisOption.categories;\r\n  var visual = thisOption.visual;\r\n  var categoryMap = thisOption.categoryMap = {};\r\n  each(categories, function (cate, index) {\r\n    categoryMap[cate] = index;\r\n  }); // Process visual map input.\r\n\r\n  if (!zrUtil.isArray(visual)) {\r\n    var visualArr = [];\r\n\r\n    if (zrUtil.isObject(visual)) {\r\n      each(visual, function (v, cate) {\r\n        var index = categoryMap[cate];\r\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\r\n      });\r\n    } else {\r\n      // Is primary type, represents default visual.\r\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\r\n    }\r\n\r\n    visual = setVisualToOption(thisOption, visualArr);\r\n  } // Remove categories that has no visual,\r\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\r\n\r\n\r\n  for (var i = categories.length - 1; i >= 0; i--) {\r\n    if (visual[i] == null) {\r\n      delete categoryMap[categories[i]];\r\n      categories.pop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction normalizeVisualRange(thisOption, isCategory) {\r\n  var visual = thisOption.visual;\r\n  var visualArr = [];\r\n\r\n  if (zrUtil.isObject(visual)) {\r\n    each(visual, function (v) {\r\n      visualArr.push(v);\r\n    });\r\n  } else if (visual != null) {\r\n    visualArr.push(visual);\r\n  }\r\n\r\n  var doNotNeedPair = {\r\n    color: 1,\r\n    symbol: 1\r\n  };\r\n\r\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\r\n    // Do not care visualArr.length === 0, which is illegal.\r\n    visualArr[1] = visualArr[0];\r\n  }\r\n\r\n  setVisualToOption(thisOption, visualArr);\r\n}\r\n\r\nfunction makePartialColorVisualHandler(applyValue) {\r\n  return {\r\n    applyVisual: function (value, getter, setter) {\r\n      value = this.mapValueToVisual(value); // Must not be array value\r\n\r\n      setter('color', applyValue(getter('color'), value));\r\n    },\r\n    _doMap: makeDoMap([0, 1])\r\n  };\r\n}\r\n\r\nfunction doMapToArray(normalized) {\r\n  var visual = this.option.visual;\r\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\r\n}\r\n\r\nfunction makeApplyVisual(visualType) {\r\n  return function (value, getter, setter) {\r\n    setter(visualType, this.mapValueToVisual(value));\r\n  };\r\n}\r\n\r\nfunction doMapCategory(normalized) {\r\n  var visual = this.option.visual;\r\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\r\n}\r\n\r\nfunction doMapFixed() {\r\n  return this.option.visual[0];\r\n}\r\n\r\nfunction makeDoMap(sourceExtent) {\r\n  return {\r\n    linear: function (normalized) {\r\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\r\n    },\r\n    category: doMapCategory,\r\n    piecewise: function (normalized, value) {\r\n      var result = getSpecifiedVisual.call(this, value);\r\n\r\n      if (result == null) {\r\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\r\n      }\r\n\r\n      return result;\r\n    },\r\n    fixed: doMapFixed\r\n  };\r\n}\r\n\r\nfunction getSpecifiedVisual(value) {\r\n  var thisOption = this.option;\r\n  var pieceList = thisOption.pieceList;\r\n\r\n  if (thisOption.hasSpecialVisual) {\r\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\r\n    var piece = pieceList[pieceIndex];\r\n\r\n    if (piece && piece.visual) {\r\n      return piece.visual[this.type];\r\n    }\r\n  }\r\n}\r\n\r\nfunction setVisualToOption(thisOption, visualArr) {\r\n  thisOption.visual = visualArr;\r\n\r\n  if (thisOption.type === 'color') {\r\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\r\n      return zrColor.parse(item);\r\n    });\r\n  }\r\n\r\n  return visualArr;\r\n}\r\n/**\r\n * Normalizers by mapping methods.\r\n */\r\n\r\n\r\nvar normalizers = {\r\n  linear: function (value) {\r\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\r\n  },\r\n  piecewise: function (value) {\r\n    var pieceList = this.option.pieceList;\r\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\r\n\r\n    if (pieceIndex != null) {\r\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\r\n    }\r\n  },\r\n  category: function (value) {\r\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\r\n\r\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\r\n  },\r\n  fixed: zrUtil.noop\r\n};\r\n/**\r\n * List available visual types.\r\n *\r\n * @public\r\n * @return {Array.<string>}\r\n */\r\n\r\nVisualMapping.listVisualTypes = function () {\r\n  var visualTypes = [];\r\n  zrUtil.each(visualHandlers, function (handler, key) {\r\n    visualTypes.push(key);\r\n  });\r\n  return visualTypes;\r\n};\r\n/**\r\n * @public\r\n */\r\n\r\n\r\nVisualMapping.addVisualHandler = function (name, handler) {\r\n  visualHandlers[name] = handler;\r\n};\r\n/**\r\n * @public\r\n */\r\n\r\n\r\nVisualMapping.isValidType = function (visualType) {\r\n  return visualHandlers.hasOwnProperty(visualType);\r\n};\r\n/**\r\n * Convinent method.\r\n * Visual can be Object or Array or primary type.\r\n *\r\n * @public\r\n */\r\n\r\n\r\nVisualMapping.eachVisual = function (visual, callback, context) {\r\n  if (zrUtil.isObject(visual)) {\r\n    zrUtil.each(visual, callback, context);\r\n  } else {\r\n    callback.call(context, visual);\r\n  }\r\n};\r\n\r\nVisualMapping.mapVisual = function (visual, callback, context) {\r\n  var isPrimary;\r\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\r\n  VisualMapping.eachVisual(visual, function (v, key) {\r\n    var newVal = callback.call(context, v, key);\r\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\r\n  });\r\n  return newVisual;\r\n};\r\n/**\r\n * @public\r\n * @param {Object} obj\r\n * @return {Object} new object containers visual values.\r\n *                 If no visuals, return null.\r\n */\r\n\r\n\r\nVisualMapping.retrieveVisuals = function (obj) {\r\n  var ret = {};\r\n  var hasVisual;\r\n  obj && each(visualHandlers, function (h, visualType) {\r\n    if (obj.hasOwnProperty(visualType)) {\r\n      ret[visualType] = obj[visualType];\r\n      hasVisual = true;\r\n    }\r\n  });\r\n  return hasVisual ? ret : null;\r\n};\r\n/**\r\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\r\n *\r\n * @public\r\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\r\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\r\n * @return {Array.<string>} Sorted visual types.\r\n */\r\n\r\n\r\nVisualMapping.prepareVisualTypes = function (visualTypes) {\r\n  if (isObject(visualTypes)) {\r\n    var types = [];\r\n    each(visualTypes, function (item, type) {\r\n      types.push(type);\r\n    });\r\n    visualTypes = types;\r\n  } else if (zrUtil.isArray(visualTypes)) {\r\n    visualTypes = visualTypes.slice();\r\n  } else {\r\n    return [];\r\n  }\r\n\r\n  visualTypes.sort(function (type1, type2) {\r\n    // color should be front of colorSaturation, colorAlpha, ...\r\n    // symbol and symbolSize do not matter.\r\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\r\n  });\r\n  return visualTypes;\r\n};\r\n/**\r\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\r\n * Other visuals are only depends on themself.\r\n *\r\n * @public\r\n * @param {string} visualType1\r\n * @param {string} visualType2\r\n * @return {boolean}\r\n */\r\n\r\n\r\nVisualMapping.dependsOn = function (visualType1, visualType2) {\r\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\r\n};\r\n/**\r\n * @param {number} value\r\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\r\n *                         Always from small to big.\r\n * @param {boolean} [findClosestWhenOutside=false]\r\n * @return {number} index\r\n */\r\n\r\n\r\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\r\n  var possibleI;\r\n  var abs = Infinity; // value has the higher priority.\r\n\r\n  for (var i = 0, len = pieceList.length; i < len; i++) {\r\n    var pieceValue = pieceList[i].value;\r\n\r\n    if (pieceValue != null) {\r\n      if (pieceValue === value // FIXME\r\n      // It is supposed to compare value according to value type of dimension,\r\n      // but currently value type can exactly be string or number.\r\n      // Compromise for numeric-like string (like '12'), especially\r\n      // in the case that visualMap.categories is ['22', '33'].\r\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\r\n        return i;\r\n      }\r\n\r\n      findClosestWhenOutside && updatePossible(pieceValue, i);\r\n    }\r\n  }\r\n\r\n  for (var i = 0, len = pieceList.length; i < len; i++) {\r\n    var piece = pieceList[i];\r\n    var interval = piece.interval;\r\n    var close = piece.close;\r\n\r\n    if (interval) {\r\n      if (interval[0] === -Infinity) {\r\n        if (littleThan(close[1], value, interval[1])) {\r\n          return i;\r\n        }\r\n      } else if (interval[1] === Infinity) {\r\n        if (littleThan(close[0], interval[0], value)) {\r\n          return i;\r\n        }\r\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\r\n        return i;\r\n      }\r\n\r\n      findClosestWhenOutside && updatePossible(interval[0], i);\r\n      findClosestWhenOutside && updatePossible(interval[1], i);\r\n    }\r\n  }\r\n\r\n  if (findClosestWhenOutside) {\r\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\r\n  }\r\n\r\n  function updatePossible(val, index) {\r\n    var newAbs = Math.abs(val - value);\r\n\r\n    if (newAbs < abs) {\r\n      abs = newAbs;\r\n      possibleI = index;\r\n    }\r\n  }\r\n};\r\n\r\nfunction littleThan(close, a, b) {\r\n  return close ? a <= b : a < b;\r\n}\r\n\r\nvar _default = VisualMapping;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar lang = require(\"../lang\");\r\n\r\nvar _dataProvider = require(\"../data/helper/dataProvider\");\r\n\r\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(dom, ecModel) {\r\n  var ariaModel = ecModel.getModel('aria');\r\n\r\n  if (!ariaModel.get('show')) {\r\n    return;\r\n  } else if (ariaModel.get('description')) {\r\n    dom.setAttribute('aria-label', ariaModel.get('description'));\r\n    return;\r\n  }\r\n\r\n  var seriesCnt = 0;\r\n  ecModel.eachSeries(function (seriesModel, idx) {\r\n    ++seriesCnt;\r\n  }, this);\r\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\r\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\r\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\r\n  var ariaLabel;\r\n\r\n  if (seriesCnt < 1) {\r\n    // No series, no aria label\r\n    return;\r\n  } else {\r\n    var title = getTitle();\r\n\r\n    if (title) {\r\n      ariaLabel = replace(getConfig('general.withTitle'), {\r\n        title: title\r\n      });\r\n    } else {\r\n      ariaLabel = getConfig('general.withoutTitle');\r\n    }\r\n\r\n    var seriesLabels = [];\r\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\r\n    ariaLabel += replace(getConfig(prefix), {\r\n      seriesCount: seriesCnt\r\n    });\r\n    ecModel.eachSeries(function (seriesModel, idx) {\r\n      if (idx < displaySeriesCnt) {\r\n        var seriesLabel;\r\n        var seriesName = seriesModel.get('name');\r\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\r\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\r\n        seriesLabel = replace(seriesLabel, {\r\n          seriesId: seriesModel.seriesIndex,\r\n          seriesName: seriesModel.get('name'),\r\n          seriesType: getSeriesTypeName(seriesModel.subType)\r\n        });\r\n        var data = seriesModel.getData();\r\n        window.data = data;\r\n\r\n        if (data.count() > maxDataCnt) {\r\n          // Show part of data\r\n          seriesLabel += replace(getConfig('data.partialData'), {\r\n            displayCnt: maxDataCnt\r\n          });\r\n        } else {\r\n          seriesLabel += getConfig('data.allData');\r\n        }\r\n\r\n        var dataLabels = [];\r\n\r\n        for (var i = 0; i < data.count(); i++) {\r\n          if (i < maxDataCnt) {\r\n            var name = data.getName(i);\r\n            var value = retrieveRawValue(data, i);\r\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\r\n              name: name,\r\n              value: value\r\n            }));\r\n          }\r\n        }\r\n\r\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\r\n        seriesLabels.push(seriesLabel);\r\n      }\r\n    });\r\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\r\n    dom.setAttribute('aria-label', ariaLabel);\r\n  }\r\n\r\n  function replace(str, keyValues) {\r\n    if (typeof str !== 'string') {\r\n      return str;\r\n    }\r\n\r\n    var result = str;\r\n    zrUtil.each(keyValues, function (value, key) {\r\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  function getConfig(path) {\r\n    var userConfig = ariaModel.get(path);\r\n\r\n    if (userConfig == null) {\r\n      var pathArr = path.split('.');\r\n      var result = lang.aria;\r\n\r\n      for (var i = 0; i < pathArr.length; ++i) {\r\n        result = result[pathArr[i]];\r\n      }\r\n\r\n      return result;\r\n    } else {\r\n      return userConfig;\r\n    }\r\n  }\r\n\r\n  function getTitle() {\r\n    var title = ecModel.getModel('title').option;\r\n\r\n    if (title && title.length) {\r\n      title = title[0];\r\n    }\r\n\r\n    return title && title.text;\r\n  }\r\n\r\n  function getSeriesTypeName(type) {\r\n    return lang.series.typeNames[type] || '自定义图';\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Pick color from palette for each data item.\r\n// Applicable for charts that require applying color palette\r\n// in data level (like pie, funnel, chord).\r\nfunction _default(seriesType) {\r\n  return {\r\n    getTargetSeries: function (ecModel) {\r\n      // Pie and funnel may use diferrent scope\r\n      var paletteScope = {};\r\n      var seiresModelMap = createHashMap();\r\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n        seriesModel.__paletteScope = paletteScope;\r\n        seiresModelMap.set(seriesModel.uid, seriesModel);\r\n      });\r\n      return seiresModelMap;\r\n    },\r\n    reset: function (seriesModel, ecModel) {\r\n      var dataAll = seriesModel.getRawData();\r\n      var idxMap = {};\r\n      var data = seriesModel.getData();\r\n      data.each(function (idx) {\r\n        var rawIdx = data.getRawIndex(idx);\r\n        idxMap[rawIdx] = idx;\r\n      });\r\n      dataAll.each(function (rawIdx) {\r\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\r\n\r\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\r\n        var singleDataBorderColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'borderColor', true);\r\n        var itemModel;\r\n\r\n        if (!singleDataColor || !singleDataBorderColor) {\r\n          // FIXME Performance\r\n          itemModel = dataAll.getItemModel(rawIdx);\r\n        }\r\n\r\n        if (!singleDataColor) {\r\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Data is not filtered\r\n\r\n          if (filteredIdx != null) {\r\n            data.setItemVisual(filteredIdx, 'color', color);\r\n          }\r\n        }\r\n\r\n        if (!singleDataBorderColor) {\r\n          var borderColor = itemModel.get('itemStyle.borderColor'); // Data is not filtered\r\n\r\n          if (filteredIdx != null) {\r\n            data.setItemVisual(filteredIdx, 'borderColor', borderColor);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar isFunction = _util.isFunction;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = {\r\n  createOnAllSeries: true,\r\n  performRawSeries: true,\r\n  reset: function (seriesModel, ecModel) {\r\n    var data = seriesModel.getData();\r\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.'); // Set in itemStyle\r\n\r\n    var color = seriesModel.get(colorAccessPath);\r\n    var colorCallback = isFunction(color) && !(color instanceof Gradient) ? color : null; // Default color\r\n\r\n    if (!color || colorCallback) {\r\n      color = seriesModel.getColorFromPalette( // TODO series count changed.\r\n      seriesModel.name, null, ecModel.getSeriesCount());\r\n    }\r\n\r\n    data.setVisual('color', color);\r\n    var borderColorAccessPath = (seriesModel.visualBorderColorAccessPath || 'itemStyle.borderColor').split('.');\r\n    var borderColor = seriesModel.get(borderColorAccessPath);\r\n    data.setVisual('borderColor', borderColor); // Only visible series has each data be visual encoded\r\n\r\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n      if (colorCallback) {\r\n        data.each(function (idx) {\r\n          data.setItemVisual(idx, 'color', colorCallback(seriesModel.getDataParams(idx)));\r\n        });\r\n      } // itemStyle in each data item\r\n\r\n\r\n      var dataEach = function (data, idx) {\r\n        var itemModel = data.getItemModel(idx);\r\n        var color = itemModel.get(colorAccessPath, true);\r\n        var borderColor = itemModel.get(borderColorAccessPath, true);\r\n\r\n        if (color != null) {\r\n          data.setItemVisual(idx, 'color', color);\r\n        }\r\n\r\n        if (borderColor != null) {\r\n          data.setItemVisual(idx, 'borderColor', borderColor);\r\n        }\r\n      };\r\n\r\n      return {\r\n        dataEach: data.hasItemOption ? dataEach : null\r\n      };\r\n    }\r\n  }\r\n};\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar isFunction = _util.isFunction;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\r\n  // Encoding visual for all series include which is filtered for legend drawing\r\n  return {\r\n    seriesType: seriesType,\r\n    // For legend.\r\n    performRawSeries: true,\r\n    reset: function (seriesModel, ecModel, api) {\r\n      var data = seriesModel.getData();\r\n      var symbolType = seriesModel.get('symbol');\r\n      var symbolSize = seriesModel.get('symbolSize');\r\n      var keepAspect = seriesModel.get('symbolKeepAspect');\r\n      var symbolRotate = seriesModel.get('symbolRotate');\r\n      var hasSymbolTypeCallback = isFunction(symbolType);\r\n      var hasSymbolSizeCallback = isFunction(symbolSize);\r\n      var hasSymbolRotateCallback = isFunction(symbolRotate);\r\n      var hasCallback = hasSymbolTypeCallback || hasSymbolSizeCallback || hasSymbolRotateCallback;\r\n      var seriesSymbol = !hasSymbolTypeCallback && symbolType ? symbolType : defaultSymbolType;\r\n      var seriesSymbolSize = !hasSymbolSizeCallback ? symbolSize : null;\r\n      var seriesSymbolRotate = !hasSymbolRotateCallback ? seriesSymbolRotate : null;\r\n      data.setVisual({\r\n        legendSymbol: legendSymbol || seriesSymbol,\r\n        // If seting callback functions on `symbol` or `symbolSize`, for simplicity and avoiding\r\n        // to bring trouble, we do not pick a reuslt from one of its calling on data item here,\r\n        // but just use the default value. Callback on `symbol` or `symbolSize` is convenient in\r\n        // some cases but generally it is not recommanded.\r\n        symbol: seriesSymbol,\r\n        symbolSize: seriesSymbolSize,\r\n        symbolKeepAspect: keepAspect,\r\n        symbolRotate: symbolRotate\r\n      }); // Only visible series has each data be visual encoded\r\n\r\n      if (ecModel.isSeriesFiltered(seriesModel)) {\r\n        return;\r\n      }\r\n\r\n      function dataEach(data, idx) {\r\n        if (hasCallback) {\r\n          var rawValue = seriesModel.getRawValue(idx);\r\n          var params = seriesModel.getDataParams(idx);\r\n          hasSymbolTypeCallback && data.setItemVisual(idx, 'symbol', symbolType(rawValue, params));\r\n          hasSymbolSizeCallback && data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\r\n          hasSymbolRotateCallback && data.setItemVisual(idx, 'symbolRotate', symbolRotate(rawValue, params));\r\n        }\r\n\r\n        if (data.hasItemOption) {\r\n          var itemModel = data.getItemModel(idx);\r\n          var itemSymbolType = itemModel.getShallow('symbol', true);\r\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\r\n          var itemSymbolRotate = itemModel.getShallow('symbolRotate', true);\r\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\r\n\r\n          if (itemSymbolType != null) {\r\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\r\n          }\r\n\r\n          if (itemSymbolSize != null) {\r\n            // PENDING Transform symbolSize ?\r\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\r\n          }\r\n\r\n          if (itemSymbolRotate != null) {\r\n            data.setItemVisual(idx, 'symbolRotate', itemSymbolRotate);\r\n          }\r\n\r\n          if (itemSymbolKeepAspect != null) {\r\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @file Visual mapping.\r\n */\r\nvar visualDefault = {\r\n  /**\r\n   * @public\r\n   */\r\n  get: function (visualType, key, isCategory) {\r\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\r\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\r\n  }\r\n};\r\nvar defaultOption = {\r\n  color: {\r\n    active: ['#006edd', '#e0ffff'],\r\n    inactive: ['rgba(0,0,0,0)']\r\n  },\r\n  colorHue: {\r\n    active: [0, 360],\r\n    inactive: [0, 0]\r\n  },\r\n  colorSaturation: {\r\n    active: [0.3, 1],\r\n    inactive: [0, 0]\r\n  },\r\n  colorLightness: {\r\n    active: [0.9, 0.5],\r\n    inactive: [0, 0]\r\n  },\r\n  colorAlpha: {\r\n    active: [0.3, 1],\r\n    inactive: [0, 0]\r\n  },\r\n  opacity: {\r\n    active: [0.3, 1],\r\n    inactive: [0, 0]\r\n  },\r\n  symbol: {\r\n    active: ['circle', 'roundRect', 'diamond'],\r\n    inactive: ['none']\r\n  },\r\n  symbolSize: {\r\n    active: [10, 50],\r\n    inactive: [0, 0]\r\n  }\r\n};\r\nvar _default = visualDefault;\r\nmodule.exports = _default;","\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar VisualMapping = require(\"./VisualMapping\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @file Visual solution, for consistent option specification.\r\n */\r\nvar each = zrUtil.each;\r\n\r\nfunction hasKeys(obj) {\r\n  if (obj) {\r\n    for (var name in obj) {\r\n      if (obj.hasOwnProperty(name)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * @param {Object} option\r\n * @param {Array.<string>} stateList\r\n * @param {Function} [supplementVisualOption]\r\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\r\n */\r\n\r\n\r\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\r\n  var visualMappings = {};\r\n  each(stateList, function (state) {\r\n    var mappings = visualMappings[state] = createMappings();\r\n    each(option[state], function (visualData, visualType) {\r\n      if (!VisualMapping.isValidType(visualType)) {\r\n        return;\r\n      }\r\n\r\n      var mappingOption = {\r\n        type: visualType,\r\n        visual: visualData\r\n      };\r\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\r\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\r\n      // is not supported, such as rendering using gradient color.\r\n\r\n      if (visualType === 'opacity') {\r\n        mappingOption = zrUtil.clone(mappingOption);\r\n        mappingOption.type = 'colorAlpha';\r\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\r\n      }\r\n    });\r\n  });\r\n  return visualMappings;\r\n\r\n  function createMappings() {\r\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\r\n    // object iteration (with hasOwnProperty checking).\r\n\r\n\r\n    Creater.prototype.__hidden = Creater.prototype;\r\n    var obj = new Creater();\r\n    return obj;\r\n  }\r\n}\r\n/**\r\n * @param {Object} thisOption\r\n * @param {Object} newOption\r\n * @param {Array.<string>} keys\r\n */\r\n\r\n\r\nfunction replaceVisualOption(thisOption, newOption, keys) {\r\n  // Visual attributes merge is not supported, otherwise it\r\n  // brings overcomplicated merge logic. See #2853. So if\r\n  // newOption has anyone of these keys, all of these keys\r\n  // will be reset. Otherwise, all keys remain.\r\n  var has;\r\n  zrUtil.each(keys, function (key) {\r\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\r\n      has = true;\r\n    }\r\n  });\r\n  has && zrUtil.each(keys, function (key) {\r\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\r\n      thisOption[key] = zrUtil.clone(newOption[key]);\r\n    } else {\r\n      delete thisOption[key];\r\n    }\r\n  });\r\n}\r\n/**\r\n * @param {Array.<string>} stateList\r\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\r\n * @param {module:echarts/data/List} list\r\n * @param {Function} getValueState param: valueOrIndex, return: state.\r\n * @param {object} [scope] Scope for getValueState\r\n * @param {string} [dimension] Concrete dimension, if used.\r\n */\r\n// ???! handle brush?\r\n\r\n\r\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\r\n  var visualTypesMap = {};\r\n  zrUtil.each(stateList, function (state) {\r\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\r\n    visualTypesMap[state] = visualTypes;\r\n  });\r\n  var dataIndex;\r\n\r\n  function getVisual(key) {\r\n    return data.getItemVisual(dataIndex, key);\r\n  }\r\n\r\n  function setVisual(key, value) {\r\n    data.setItemVisual(dataIndex, key, value);\r\n  }\r\n\r\n  if (dimension == null) {\r\n    data.each(eachItem);\r\n  } else {\r\n    data.each([dimension], eachItem);\r\n  }\r\n\r\n  function eachItem(valueOrIndex, index) {\r\n    dataIndex = dimension == null ? valueOrIndex : index;\r\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\r\n\r\n    if (rawDataItem && rawDataItem.visualMap === false) {\r\n      return;\r\n    }\r\n\r\n    var valueState = getValueState.call(scope, valueOrIndex);\r\n    var mappings = visualMappings[valueState];\r\n    var visualTypes = visualTypesMap[valueState];\r\n\r\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\r\n      var type = visualTypes[i];\r\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {Array.<string>} stateList\r\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\r\n * @param {Function} getValueState param: valueOrIndex, return: state.\r\n * @param {number} [dim] dimension or dimension index.\r\n */\r\n\r\n\r\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\r\n  var visualTypesMap = {};\r\n  zrUtil.each(stateList, function (state) {\r\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\r\n    visualTypesMap[state] = visualTypes;\r\n  });\r\n\r\n  function progress(params, data) {\r\n    if (dim != null) {\r\n      dim = data.getDimension(dim);\r\n    }\r\n\r\n    function getVisual(key) {\r\n      return data.getItemVisual(dataIndex, key);\r\n    }\r\n\r\n    function setVisual(key, value) {\r\n      data.setItemVisual(dataIndex, key, value);\r\n    }\r\n\r\n    var dataIndex;\r\n\r\n    while ((dataIndex = params.next()) != null) {\r\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\r\n\r\n      if (rawDataItem && rawDataItem.visualMap === false) {\r\n        continue;\r\n      }\r\n\r\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\r\n      var valueState = getValueState(value);\r\n      var mappings = visualMappings[valueState];\r\n      var visualTypes = visualTypesMap[valueState];\r\n\r\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\r\n        var type = visualTypes[i];\r\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    progress: progress\r\n  };\r\n}\r\n\r\nexports.createVisualMappings = createVisualMappings;\r\nexports.replaceVisualOption = replaceVisualOption;\r\nexports.applyVisual = applyVisual;\r\nexports.incrementalApplyVisual = incrementalApplyVisual;","var guid = require(\"./core/guid\");\r\n\r\nvar Eventful = require(\"./mixin/Eventful\");\r\n\r\nvar Transformable = require(\"./mixin/Transformable\");\r\n\r\nvar Animatable = require(\"./mixin/Animatable\");\r\n\r\nvar zrUtil = require(\"./core/util\");\r\n\r\n/**\r\n * @alias module:zrender/Element\r\n * @constructor\r\n * @extends {module:zrender/mixin/Animatable}\r\n * @extends {module:zrender/mixin/Transformable}\r\n * @extends {module:zrender/mixin/Eventful}\r\n */\r\nvar Element = function (opts) {\r\n  // jshint ignore:line\r\n  Transformable.call(this, opts);\r\n  Eventful.call(this, opts);\r\n  Animatable.call(this, opts);\r\n  /**\r\n   * 画布元素ID\r\n   * @type {string}\r\n   */\r\n\r\n  this.id = opts.id || guid();\r\n};\r\n\r\nElement.prototype = {\r\n  /**\r\n   * 元素类型\r\n   * Element type\r\n   * @type {string}\r\n   */\r\n  type: 'element',\r\n\r\n  /**\r\n   * 元素名字\r\n   * Element name\r\n   * @type {string}\r\n   */\r\n  name: '',\r\n\r\n  /**\r\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\r\n   * ZRender instance will be assigned when element is associated with zrender\r\n   * @name module:/zrender/Element#__zr\r\n   * @type {module:zrender/ZRender}\r\n   */\r\n  __zr: null,\r\n\r\n  /**\r\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\r\n   * If ignore drawing and events of the element object\r\n   * @name module:/zrender/Element#ignore\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  ignore: false,\r\n\r\n  /**\r\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\r\n   * 该路径会继承被裁减对象的变换\r\n   * @type {module:zrender/graphic/Path}\r\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\r\n   * @readOnly\r\n   */\r\n  clipPath: null,\r\n\r\n  /**\r\n   * 是否是 Group\r\n   * @type {boolean}\r\n   */\r\n  isGroup: false,\r\n\r\n  /**\r\n   * Drift element\r\n   * @param  {number} dx dx on the global space\r\n   * @param  {number} dy dy on the global space\r\n   */\r\n  drift: function (dx, dy) {\r\n    switch (this.draggable) {\r\n      case 'horizontal':\r\n        dy = 0;\r\n        break;\r\n\r\n      case 'vertical':\r\n        dx = 0;\r\n        break;\r\n    }\r\n\r\n    var m = this.transform;\r\n\r\n    if (!m) {\r\n      m = this.transform = [1, 0, 0, 1, 0, 0];\r\n    }\r\n\r\n    m[4] += dx;\r\n    m[5] += dy;\r\n    this.decomposeTransform();\r\n    this.dirty(false);\r\n  },\r\n\r\n  /**\r\n   * Hook before update\r\n   */\r\n  beforeUpdate: function () {},\r\n\r\n  /**\r\n   * Hook after update\r\n   */\r\n  afterUpdate: function () {},\r\n\r\n  /**\r\n   * Update each frame\r\n   */\r\n  update: function () {\r\n    this.updateTransform();\r\n  },\r\n\r\n  /**\r\n   * @param  {Function} cb\r\n   * @param  {}   context\r\n   */\r\n  traverse: function (cb, context) {},\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  attrKV: function (key, value) {\r\n    if (key === 'position' || key === 'scale' || key === 'origin') {\r\n      // Copy the array\r\n      if (value) {\r\n        var target = this[key];\r\n\r\n        if (!target) {\r\n          target = this[key] = [];\r\n        }\r\n\r\n        target[0] = value[0];\r\n        target[1] = value[1];\r\n      }\r\n    } else {\r\n      this[key] = value;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Hide the element\r\n   */\r\n  hide: function () {\r\n    this.ignore = true;\r\n    this.__zr && this.__zr.refresh();\r\n  },\r\n\r\n  /**\r\n   * Show the element\r\n   */\r\n  show: function () {\r\n    this.ignore = false;\r\n    this.__zr && this.__zr.refresh();\r\n  },\r\n\r\n  /**\r\n   * @param {string|Object} key\r\n   * @param {*} value\r\n   */\r\n  attr: function (key, value) {\r\n    if (typeof key === 'string') {\r\n      this.attrKV(key, value);\r\n    } else if (zrUtil.isObject(key)) {\r\n      for (var name in key) {\r\n        if (key.hasOwnProperty(name)) {\r\n          this.attrKV(name, key[name]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.dirty(false);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @param {module:zrender/graphic/Path} clipPath\r\n   */\r\n  setClipPath: function (clipPath) {\r\n    var zr = this.__zr;\r\n\r\n    if (zr) {\r\n      clipPath.addSelfToZr(zr);\r\n    } // Remove previous clip path\r\n\r\n\r\n    if (this.clipPath && this.clipPath !== clipPath) {\r\n      this.removeClipPath();\r\n    }\r\n\r\n    this.clipPath = clipPath;\r\n    clipPath.__zr = zr;\r\n    clipPath.__clipTarget = this;\r\n    this.dirty(false);\r\n  },\r\n\r\n  /**\r\n   */\r\n  removeClipPath: function () {\r\n    var clipPath = this.clipPath;\r\n\r\n    if (clipPath) {\r\n      if (clipPath.__zr) {\r\n        clipPath.removeSelfFromZr(clipPath.__zr);\r\n      }\r\n\r\n      clipPath.__zr = null;\r\n      clipPath.__clipTarget = null;\r\n      this.clipPath = null;\r\n      this.dirty(false);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Add self from zrender instance.\r\n   * Not recursively because it will be invoked when element added to storage.\r\n   * @param {module:zrender/ZRender} zr\r\n   */\r\n  addSelfToZr: function (zr) {\r\n    this.__zr = zr; // 添加动画\r\n\r\n    var animators = this.animators;\r\n\r\n    if (animators) {\r\n      for (var i = 0; i < animators.length; i++) {\r\n        zr.animation.addAnimator(animators[i]);\r\n      }\r\n    }\r\n\r\n    if (this.clipPath) {\r\n      this.clipPath.addSelfToZr(zr);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Remove self from zrender instance.\r\n   * Not recursively because it will be invoked when element added to storage.\r\n   * @param {module:zrender/ZRender} zr\r\n   */\r\n  removeSelfFromZr: function (zr) {\r\n    this.__zr = null; // 移除动画\r\n\r\n    var animators = this.animators;\r\n\r\n    if (animators) {\r\n      for (var i = 0; i < animators.length; i++) {\r\n        zr.animation.removeAnimator(animators[i]);\r\n      }\r\n    }\r\n\r\n    if (this.clipPath) {\r\n      this.clipPath.removeSelfFromZr(zr);\r\n    }\r\n  }\r\n};\r\nzrUtil.mixin(Element, Animatable);\r\nzrUtil.mixin(Element, Transformable);\r\nzrUtil.mixin(Element, Eventful);\r\nvar _default = Element;\r\nmodule.exports = _default;","var util = require(\"./core/util\");\r\n\r\nvar vec2 = require(\"./core/vector\");\r\n\r\nvar Draggable = require(\"./mixin/Draggable\");\r\n\r\nvar Eventful = require(\"./mixin/Eventful\");\r\n\r\nvar eventTool = require(\"./core/event\");\r\n\r\nvar GestureMgr = require(\"./core/GestureMgr\");\r\n\r\n/**\r\n * [The interface between `Handler` and `HandlerProxy`]:\r\n *\r\n * The default `HandlerProxy` only support the common standard web environment\r\n * (e.g., standalone browser, headless browser, embed browser in mobild APP, ...).\r\n * But `HandlerProxy` can be replaced to support more non-standard environment\r\n * (e.g., mini app), or to support more feature that the default `HandlerProxy`\r\n * not provided (like echarts-gl did).\r\n * So the interface between `Handler` and `HandlerProxy` should be stable. Do not\r\n * make break changes util inevitable. The interface include the public methods\r\n * of `Handler` and the events listed in `handlerNames` below, by which `HandlerProxy`\r\n * drives `Handler`.\r\n */\r\n\r\n/**\r\n * [Drag outside]:\r\n *\r\n * That is, triggering `mousemove` and `mouseup` event when the pointer is out of the\r\n * zrender area when dragging. That is important for the improvement of the user experience\r\n * when dragging something near the boundary without being terminated unexpectedly.\r\n *\r\n * We originally consider to introduce new events like `pagemovemove` and `pagemouseup`\r\n * to resolve this issue. But some drawbacks of it is described in\r\n * https://github.com/ecomfe/zrender/pull/536#issuecomment-560286899\r\n *\r\n * Instead, we referenced the specifications:\r\n * https://www.w3.org/TR/touch-events/#the-touchmove-event\r\n * https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/#event-type-mousemove\r\n * where the the mousemove/touchmove can be continue to fire if the user began a drag\r\n * operation and the pointer has left the boundary. (for the mouse event, browsers\r\n * only do it on `document` and when the pointer has left the boundary of the browser.)\r\n *\r\n * So the default `HandlerProxy` supports this feature similarly: if it is in the dragging\r\n * state (see `pointerCapture` in `HandlerProxy`), the `mousemove` and `mouseup` continue\r\n * to fire until release the pointer. That is implemented by listen to those event on\r\n * `document`.\r\n * If we implement some other `HandlerProxy` only for touch device, that would be easier.\r\n * The touch event support this feature by default.\r\n *\r\n * Note:\r\n * There might be some cases that the mouse event can not be\r\n * received on `document`. For example,\r\n * (A) `useCapture` is not supported and some user defined event listeners on the ancestor\r\n * of zr dom throw Error .\r\n * (B) `useCapture` is not supported Some user defined event listeners on the ancestor of\r\n * zr dom call `stopPropagation`.\r\n * In these cases, the `mousemove` event might be keep triggered event\r\n * if the mouse is released. We try to reduce the side-effect in those cases.\r\n * That is, do nothing (especially, `findHover`) in those cases. See `isOutsideBoundary`.\r\n *\r\n * Note:\r\n * If `HandlerProxy` listens to `document` with `useCapture`, `HandlerProxy` needs to\r\n * make sure `stopPropagation` and `preventDefault` doing nothing if and only if the event\r\n * target is not zrender dom. Becuase it is dangerous to enable users to call them in\r\n * `document` capture phase to prevent the propagation to any listener of the webpage.\r\n * But they are needed to work when the pointer inside the zrender dom.\r\n */\r\nvar SILENT = 'silent';\r\n\r\nfunction makeEventPacket(eveType, targetInfo, event) {\r\n  return {\r\n    type: eveType,\r\n    event: event,\r\n    // target can only be an element that is not silent.\r\n    target: targetInfo.target,\r\n    // topTarget can be a silent element.\r\n    topTarget: targetInfo.topTarget,\r\n    cancelBubble: false,\r\n    offsetX: event.zrX,\r\n    offsetY: event.zrY,\r\n    gestureEvent: event.gestureEvent,\r\n    pinchX: event.pinchX,\r\n    pinchY: event.pinchY,\r\n    pinchScale: event.pinchScale,\r\n    wheelDelta: event.zrDelta,\r\n    zrByTouch: event.zrByTouch,\r\n    which: event.which,\r\n    stop: stopEvent\r\n  };\r\n}\r\n\r\nfunction stopEvent() {\r\n  eventTool.stop(this.event);\r\n}\r\n\r\nfunction EmptyProxy() {}\r\n\r\nEmptyProxy.prototype.dispose = function () {};\r\n\r\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\r\n/**\r\n * @alias module:zrender/Handler\r\n * @constructor\r\n * @extends module:zrender/mixin/Eventful\r\n * @param {module:zrender/Storage} storage Storage instance.\r\n * @param {module:zrender/Painter} painter Painter instance.\r\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\r\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\r\n */\r\n\r\nvar Handler = function (storage, painter, proxy, painterRoot) {\r\n  Eventful.call(this);\r\n  this.storage = storage;\r\n  this.painter = painter;\r\n  this.painterRoot = painterRoot;\r\n  proxy = proxy || new EmptyProxy();\r\n  /**\r\n   * Proxy of event. can be Dom, WebGLSurface, etc.\r\n   */\r\n\r\n  this.proxy = null;\r\n  /**\r\n   * {target, topTarget, x, y}\r\n   * @private\r\n   * @type {Object}\r\n   */\r\n\r\n  this._hovered = {};\r\n  /**\r\n   * @private\r\n   * @type {Date}\r\n   */\r\n\r\n  this._lastTouchMoment;\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n\r\n  this._lastX;\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n\r\n  this._lastY;\r\n  /**\r\n   * @private\r\n   * @type {module:zrender/core/GestureMgr}\r\n   */\r\n\r\n  this._gestureMgr;\r\n  Draggable.call(this);\r\n  this.setHandlerProxy(proxy);\r\n};\r\n\r\nHandler.prototype = {\r\n  constructor: Handler,\r\n  setHandlerProxy: function (proxy) {\r\n    if (this.proxy) {\r\n      this.proxy.dispose();\r\n    }\r\n\r\n    if (proxy) {\r\n      util.each(handlerNames, function (name) {\r\n        proxy.on && proxy.on(name, this[name], this);\r\n      }, this); // Attach handler\r\n\r\n      proxy.handler = this;\r\n    }\r\n\r\n    this.proxy = proxy;\r\n  },\r\n  mousemove: function (event) {\r\n    var x = event.zrX;\r\n    var y = event.zrY;\r\n    var isOutside = isOutsideBoundary(this, x, y);\r\n    var lastHovered = this._hovered;\r\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\r\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\r\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\r\n    // See #6198.\r\n\r\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\r\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\r\n      lastHoveredTarget = lastHovered.target;\r\n    }\r\n\r\n    var hovered = this._hovered = isOutside ? {\r\n      x: x,\r\n      y: y\r\n    } : this.findHover(x, y);\r\n    var hoveredTarget = hovered.target;\r\n    var proxy = this.proxy;\r\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\r\n\r\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\r\n      this.dispatchToElement(lastHovered, 'mouseout', event);\r\n    } // Mouse moving on one element\r\n\r\n\r\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\r\n\r\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\r\n      this.dispatchToElement(hovered, 'mouseover', event);\r\n    }\r\n  },\r\n  mouseout: function (event) {\r\n    var eventControl = event.zrEventControl;\r\n    var zrIsToLocalDOM = event.zrIsToLocalDOM;\r\n\r\n    if (eventControl !== 'only_globalout') {\r\n      this.dispatchToElement(this._hovered, 'mouseout', event);\r\n    }\r\n\r\n    if (eventControl !== 'no_globalout') {\r\n      // FIXME: if the pointer moving from the extra doms to realy \"outside\",\r\n      // the `globalout` should have been triggered. But currently not.\r\n      !zrIsToLocalDOM && this.trigger('globalout', {\r\n        type: 'globalout',\r\n        event: event\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Resize\r\n   */\r\n  resize: function (event) {\r\n    this._hovered = {};\r\n  },\r\n\r\n  /**\r\n   * Dispatch event\r\n   * @param {string} eventName\r\n   * @param {event=} eventArgs\r\n   */\r\n  dispatch: function (eventName, eventArgs) {\r\n    var handler = this[eventName];\r\n    handler && handler.call(this, eventArgs);\r\n  },\r\n\r\n  /**\r\n   * Dispose\r\n   */\r\n  dispose: function () {\r\n    this.proxy.dispose();\r\n    this.storage = this.proxy = this.painter = null;\r\n  },\r\n\r\n  /**\r\n   * 设置默认的cursor style\r\n   * @param {string} [cursorStyle='default'] 例如 crosshair\r\n   */\r\n  setCursorStyle: function (cursorStyle) {\r\n    var proxy = this.proxy;\r\n    proxy.setCursor && proxy.setCursor(cursorStyle);\r\n  },\r\n\r\n  /**\r\n   * 事件分发代理\r\n   *\r\n   * @private\r\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\r\n   * @param {string} eventName 事件名称\r\n   * @param {Object} event 事件对象\r\n   */\r\n  dispatchToElement: function (targetInfo, eventName, event) {\r\n    targetInfo = targetInfo || {};\r\n    var el = targetInfo.target;\r\n\r\n    if (el && el.silent) {\r\n      return;\r\n    }\r\n\r\n    var eventHandler = 'on' + eventName;\r\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\r\n\r\n    while (el) {\r\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\r\n      el.trigger(eventName, eventPacket);\r\n      el = el.parent;\r\n\r\n      if (eventPacket.cancelBubble) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!eventPacket.cancelBubble) {\r\n      // 冒泡到顶级 zrender 对象\r\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\r\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\r\n\r\n      this.painter && this.painter.eachOtherLayer(function (layer) {\r\n        if (typeof layer[eventHandler] === 'function') {\r\n          layer[eventHandler].call(layer, eventPacket);\r\n        }\r\n\r\n        if (layer.trigger) {\r\n          layer.trigger(eventName, eventPacket);\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {module:zrender/graphic/Displayable} exclude\r\n   * @return {model:zrender/Element}\r\n   * @method\r\n   */\r\n  findHover: function (x, y, exclude) {\r\n    var list = this.storage.getDisplayList();\r\n    var out = {\r\n      x: x,\r\n      y: y\r\n    };\r\n\r\n    for (var i = list.length - 1; i >= 0; i--) {\r\n      var hoverCheckResult;\r\n\r\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\r\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\r\n        !out.topTarget && (out.topTarget = list[i]);\r\n\r\n        if (hoverCheckResult !== SILENT) {\r\n          out.target = list[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return out;\r\n  },\r\n  processGesture: function (event, stage) {\r\n    if (!this._gestureMgr) {\r\n      this._gestureMgr = new GestureMgr();\r\n    }\r\n\r\n    var gestureMgr = this._gestureMgr;\r\n    stage === 'start' && gestureMgr.clear();\r\n    var gestureInfo = gestureMgr.recognize(event, this.findHover(event.zrX, event.zrY, null).target, this.proxy.dom);\r\n    stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\r\n\r\n    if (gestureInfo) {\r\n      var type = gestureInfo.type;\r\n      event.gestureEvent = type;\r\n      this.dispatchToElement({\r\n        target: gestureInfo.target\r\n      }, type, gestureInfo.event);\r\n    }\r\n  }\r\n}; // Common handlers\r\n\r\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\r\n  Handler.prototype[name] = function (event) {\r\n    var x = event.zrX;\r\n    var y = event.zrY;\r\n    var isOutside = isOutsideBoundary(this, x, y);\r\n    var hovered;\r\n    var hoveredTarget;\r\n\r\n    if (name !== 'mouseup' || !isOutside) {\r\n      // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\r\n      hovered = this.findHover(x, y);\r\n      hoveredTarget = hovered.target;\r\n    }\r\n\r\n    if (name === 'mousedown') {\r\n      this._downEl = hoveredTarget;\r\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\r\n\r\n      this._upEl = hoveredTarget;\r\n    } else if (name === 'mouseup') {\r\n      this._upEl = hoveredTarget;\r\n    } else if (name === 'click') {\r\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\r\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\r\n      // which should be filtered, otherwise it will bring trouble to\r\n      // pan and zoom.\r\n      || !this._downPoint // Arbitrary value\r\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\r\n        return;\r\n      }\r\n\r\n      this._downPoint = null;\r\n    }\r\n\r\n    this.dispatchToElement(hovered, name, event);\r\n  };\r\n});\r\n\r\nfunction isHover(displayable, x, y) {\r\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\r\n    var el = displayable;\r\n    var isSilent;\r\n\r\n    while (el) {\r\n      // If clipped by ancestor.\r\n      // FIXME: If clipPath has neither stroke nor fill,\r\n      // el.clipPath.contain(x, y) will always return false.\r\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\r\n        return false;\r\n      }\r\n\r\n      if (el.silent) {\r\n        isSilent = true;\r\n      }\r\n\r\n      el = el.parent;\r\n    }\r\n\r\n    return isSilent ? SILENT : true;\r\n  }\r\n\r\n  return false;\r\n}\r\n/**\r\n * See [Drag outside].\r\n */\r\n\r\n\r\nfunction isOutsideBoundary(handlerInstance, x, y) {\r\n  var painter = handlerInstance.painter;\r\n  return x < 0 || x > painter.getWidth() || y < 0 || y > painter.getHeight();\r\n}\r\n\r\nutil.mixin(Handler, Eventful);\r\nutil.mixin(Handler, Draggable);\r\nvar _default = Handler;\r\nmodule.exports = _default;","var util = require(\"./core/util\");\r\n\r\nvar _config = require(\"./config\");\r\n\r\nvar devicePixelRatio = _config.devicePixelRatio;\r\n\r\nvar Style = require(\"./graphic/Style\");\r\n\r\nvar Pattern = require(\"./graphic/Pattern\");\r\n\r\n/**\r\n * @module zrender/Layer\r\n * @author pissang(https://www.github.com/pissang)\r\n */\r\nfunction returnFalse() {\r\n  return false;\r\n}\r\n/**\r\n * 创建dom\r\n *\r\n * @inner\r\n * @param {string} id dom id 待用\r\n * @param {Painter} painter painter instance\r\n * @param {number} number\r\n */\r\n\r\n\r\nfunction createDom(id, painter, dpr) {\r\n  var newDom = util.createCanvas();\r\n  var width = painter.getWidth();\r\n  var height = painter.getHeight();\r\n  var newDomStyle = newDom.style;\r\n\r\n  if (newDomStyle) {\r\n    // In node or some other non-browser environment\r\n    newDomStyle.position = 'absolute';\r\n    newDomStyle.left = 0;\r\n    newDomStyle.top = 0;\r\n    newDomStyle.width = width + 'px';\r\n    newDomStyle.height = height + 'px';\r\n    newDom.setAttribute('data-zr-dom-id', id);\r\n  }\r\n\r\n  newDom.width = width * dpr;\r\n  newDom.height = height * dpr;\r\n  return newDom;\r\n}\r\n/**\r\n * @alias module:zrender/Layer\r\n * @constructor\r\n * @extends module:zrender/mixin/Transformable\r\n * @param {string} id\r\n * @param {module:zrender/Painter} painter\r\n * @param {number} [dpr]\r\n */\r\n\r\n\r\nvar Layer = function (id, painter, dpr) {\r\n  var dom;\r\n  dpr = dpr || devicePixelRatio;\r\n\r\n  if (typeof id === 'string') {\r\n    dom = createDom(id, painter, dpr);\r\n  } // Not using isDom because in node it will return false\r\n  else if (util.isObject(id)) {\r\n      dom = id;\r\n      id = dom.id;\r\n    }\r\n\r\n  this.id = id;\r\n  this.dom = dom;\r\n  var domStyle = dom.style;\r\n\r\n  if (domStyle) {\r\n    // Not in node\r\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\r\n\r\n    domStyle['-webkit-user-select'] = 'none';\r\n    domStyle['user-select'] = 'none';\r\n    domStyle['-webkit-touch-callout'] = 'none';\r\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\r\n    domStyle['padding'] = 0; // eslint-disable-line dot-notation\r\n\r\n    domStyle['margin'] = 0; // eslint-disable-line dot-notation\r\n\r\n    domStyle['border-width'] = 0;\r\n  }\r\n\r\n  this.domBack = null;\r\n  this.ctxBack = null;\r\n  this.painter = painter;\r\n  this.config = null; // Configs\r\n\r\n  /**\r\n   * 每次清空画布的颜色\r\n   * @type {string}\r\n   * @default 0\r\n   */\r\n\r\n  this.clearColor = 0;\r\n  /**\r\n   * 是否开启动态模糊\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n\r\n  this.motionBlur = false;\r\n  /**\r\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n   * @type {number}\r\n   * @default 0.7\r\n   */\r\n\r\n  this.lastFrameAlpha = 0.7;\r\n  /**\r\n   * Layer dpr\r\n   * @type {number}\r\n   */\r\n\r\n  this.dpr = dpr;\r\n};\r\n\r\nLayer.prototype = {\r\n  constructor: Layer,\r\n  __dirty: true,\r\n  __used: false,\r\n  __drawIndex: 0,\r\n  __startIndex: 0,\r\n  __endIndex: 0,\r\n  incremental: false,\r\n  getElementCount: function () {\r\n    return this.__endIndex - this.__startIndex;\r\n  },\r\n  initContext: function () {\r\n    this.ctx = this.dom.getContext('2d');\r\n    this.ctx.dpr = this.dpr;\r\n  },\r\n  createBackBuffer: function () {\r\n    var dpr = this.dpr;\r\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\r\n    this.ctxBack = this.domBack.getContext('2d');\r\n\r\n    if (dpr !== 1) {\r\n      this.ctxBack.scale(dpr, dpr);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param  {number} width\r\n   * @param  {number} height\r\n   */\r\n  resize: function (width, height) {\r\n    var dpr = this.dpr;\r\n    var dom = this.dom;\r\n    var domStyle = dom.style;\r\n    var domBack = this.domBack;\r\n\r\n    if (domStyle) {\r\n      domStyle.width = width + 'px';\r\n      domStyle.height = height + 'px';\r\n    }\r\n\r\n    dom.width = width * dpr;\r\n    dom.height = height * dpr;\r\n\r\n    if (domBack) {\r\n      domBack.width = width * dpr;\r\n      domBack.height = height * dpr;\r\n\r\n      if (dpr !== 1) {\r\n        this.ctxBack.scale(dpr, dpr);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 清空该层画布\r\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\r\n   * @param {Color} [clearColor]\r\n   */\r\n  clear: function (clearAll, clearColor) {\r\n    var dom = this.dom;\r\n    var ctx = this.ctx;\r\n    var width = dom.width;\r\n    var height = dom.height;\r\n    var clearColor = clearColor || this.clearColor;\r\n    var haveMotionBLur = this.motionBlur && !clearAll;\r\n    var lastFrameAlpha = this.lastFrameAlpha;\r\n    var dpr = this.dpr;\r\n\r\n    if (haveMotionBLur) {\r\n      if (!this.domBack) {\r\n        this.createBackBuffer();\r\n      }\r\n\r\n      this.ctxBack.globalCompositeOperation = 'copy';\r\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\r\n    }\r\n\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    if (clearColor && clearColor !== 'transparent') {\r\n      var clearColorGradientOrPattern; // Gradient\r\n\r\n      if (clearColor.colorStops) {\r\n        // Cache canvas gradient\r\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\r\n          x: 0,\r\n          y: 0,\r\n          width: width,\r\n          height: height\r\n        });\r\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\r\n      } // Pattern\r\n      else if (clearColor.image) {\r\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\r\n        }\r\n\r\n      ctx.save();\r\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\r\n      ctx.fillRect(0, 0, width, height);\r\n      ctx.restore();\r\n    }\r\n\r\n    if (haveMotionBLur) {\r\n      var domBack = this.domBack;\r\n      ctx.save();\r\n      ctx.globalAlpha = lastFrameAlpha;\r\n      ctx.drawImage(domBack, 0, 0, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n};\r\nvar _default = Layer;\r\nmodule.exports = _default;","var _config = require(\"./config\");\r\n\r\nvar devicePixelRatio = _config.devicePixelRatio;\r\n\r\nvar util = require(\"./core/util\");\r\n\r\nvar logError = require(\"./core/log\");\r\n\r\nvar BoundingRect = require(\"./core/BoundingRect\");\r\n\r\nvar timsort = require(\"./core/timsort\");\r\n\r\nvar Layer = require(\"./Layer\");\r\n\r\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\r\n\r\nvar Image = require(\"./graphic/Image\");\r\n\r\nvar env = require(\"./core/env\");\r\n\r\nvar HOVER_LAYER_ZLEVEL = 1e5;\r\nvar CANVAS_ZLEVEL = 314159;\r\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\r\nvar INCREMENTAL_INC = 0.001;\r\n\r\nfunction parseInt10(val) {\r\n  return parseInt(val, 10);\r\n}\r\n\r\nfunction isLayerValid(layer) {\r\n  if (!layer) {\r\n    return false;\r\n  }\r\n\r\n  if (layer.__builtin__) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\r\nvar viewRect = new BoundingRect(0, 0, 0, 0);\r\n\r\nfunction isDisplayableCulled(el, width, height) {\r\n  tmpRect.copy(el.getBoundingRect());\r\n\r\n  if (el.transform) {\r\n    tmpRect.applyTransform(el.transform);\r\n  }\r\n\r\n  viewRect.width = width;\r\n  viewRect.height = height;\r\n  return !tmpRect.intersect(viewRect);\r\n}\r\n\r\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\r\n  // displayable.__clipPaths can only be `null`/`undefined` or an non-empty array.\r\n  if (clipPaths === prevClipPaths) {\r\n    return false;\r\n  }\r\n\r\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\r\n    return true;\r\n  }\r\n\r\n  for (var i = 0; i < clipPaths.length; i++) {\r\n    if (clipPaths[i] !== prevClipPaths[i]) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction doClip(clipPaths, ctx) {\r\n  for (var i = 0; i < clipPaths.length; i++) {\r\n    var clipPath = clipPaths[i];\r\n    clipPath.setTransform(ctx);\r\n    ctx.beginPath();\r\n    clipPath.buildPath(ctx, clipPath.shape);\r\n    ctx.clip(); // Transform back\r\n\r\n    clipPath.restoreTransform(ctx);\r\n  }\r\n}\r\n\r\nfunction createRoot(width, height) {\r\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // Avoid page selected\r\n\r\n  domRoot.style.cssText = ['position:relative', // IOS13 safari probably has a compositing bug (z order of the canvas and the consequent\r\n  // dom does not act as expected) when some of the parent dom has\r\n  // `-webkit-overflow-scrolling: touch;` and the webpage is longer than one screen and\r\n  // the canvas is not at the top part of the page.\r\n  // Check `https://bugs.webkit.org/show_bug.cgi?id=203681` for more details. We remove\r\n  // this `overflow:hidden` to avoid the bug.\r\n  // 'overflow:hidden',\r\n  'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\r\n  return domRoot;\r\n}\r\n/**\r\n * @alias module:zrender/Painter\r\n * @constructor\r\n * @param {HTMLElement} root 绘图容器\r\n * @param {module:zrender/Storage} storage\r\n * @param {Object} opts\r\n */\r\n\r\n\r\nvar Painter = function (root, storage, opts) {\r\n  this.type = 'canvas'; // In node environment using node-canvas\r\n\r\n  var singleCanvas = !root.nodeName // In node ?\r\n  || root.nodeName.toUpperCase() === 'CANVAS';\r\n  this._opts = opts = util.extend({}, opts || {});\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\r\n  /**\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n\r\n  this._singleCanvas = singleCanvas;\r\n  /**\r\n   * 绘图容器\r\n   * @type {HTMLElement}\r\n   */\r\n\r\n  this.root = root;\r\n  var rootStyle = root.style;\r\n\r\n  if (rootStyle) {\r\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\r\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\r\n    root.innerHTML = '';\r\n  }\r\n  /**\r\n   * @type {module:zrender/Storage}\r\n   */\r\n\r\n\r\n  this.storage = storage;\r\n  /**\r\n   * @type {Array.<number>}\r\n   * @private\r\n   */\r\n\r\n  var zlevelList = this._zlevelList = [];\r\n  /**\r\n   * @type {Object.<string, module:zrender/Layer>}\r\n   * @private\r\n   */\r\n\r\n  var layers = this._layers = {};\r\n  /**\r\n   * @type {Object.<string, Object>}\r\n   * @private\r\n   */\r\n\r\n  this._layerConfig = {};\r\n  /**\r\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\r\n   */\r\n\r\n  this._needsManuallyCompositing = false;\r\n\r\n  if (!singleCanvas) {\r\n    this._width = this._getSize(0);\r\n    this._height = this._getSize(1);\r\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\r\n    root.appendChild(domRoot);\r\n  } else {\r\n    var width = root.width;\r\n    var height = root.height;\r\n\r\n    if (opts.width != null) {\r\n      width = opts.width;\r\n    }\r\n\r\n    if (opts.height != null) {\r\n      height = opts.height;\r\n    }\r\n\r\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\r\n\r\n    root.width = width * this.dpr;\r\n    root.height = height * this.dpr;\r\n    this._width = width;\r\n    this._height = height; // Create layer if only one given canvas\r\n    // Device can be specified to create a high dpi image.\r\n\r\n    var mainLayer = new Layer(root, this, this.dpr);\r\n    mainLayer.__builtin__ = true;\r\n    mainLayer.initContext(); // FIXME Use canvas width and height\r\n    // mainLayer.resize(width, height);\r\n\r\n    layers[CANVAS_ZLEVEL] = mainLayer;\r\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\r\n\r\n    zlevelList.push(CANVAS_ZLEVEL);\r\n    this._domRoot = root;\r\n  }\r\n  /**\r\n   * @type {module:zrender/Layer}\r\n   * @private\r\n   */\r\n\r\n\r\n  this._hoverlayer = null;\r\n  this._hoverElements = [];\r\n};\r\n\r\nPainter.prototype = {\r\n  constructor: Painter,\r\n  getType: function () {\r\n    return 'canvas';\r\n  },\r\n\r\n  /**\r\n   * If painter use a single canvas\r\n   * @return {boolean}\r\n   */\r\n  isSingleCanvas: function () {\r\n    return this._singleCanvas;\r\n  },\r\n\r\n  /**\r\n   * @return {HTMLDivElement}\r\n   */\r\n  getViewportRoot: function () {\r\n    return this._domRoot;\r\n  },\r\n  getViewportRootOffset: function () {\r\n    var viewportRoot = this.getViewportRoot();\r\n\r\n    if (viewportRoot) {\r\n      return {\r\n        offsetLeft: viewportRoot.offsetLeft || 0,\r\n        offsetTop: viewportRoot.offsetTop || 0\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 刷新\r\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\r\n   */\r\n  refresh: function (paintAll) {\r\n    var list = this.storage.getDisplayList(true);\r\n    var zlevelList = this._zlevelList;\r\n    this._redrawId = Math.random();\r\n\r\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\r\n\r\n\r\n    for (var i = 0; i < zlevelList.length; i++) {\r\n      var z = zlevelList[i];\r\n      var layer = this._layers[z];\r\n\r\n      if (!layer.__builtin__ && layer.refresh) {\r\n        var clearColor = i === 0 ? this._backgroundColor : null;\r\n        layer.refresh(clearColor);\r\n      }\r\n    }\r\n\r\n    this.refreshHover();\r\n    return this;\r\n  },\r\n  addHover: function (el, hoverStyle) {\r\n    if (el.__hoverMir) {\r\n      return;\r\n    }\r\n\r\n    var elMirror = new el.constructor({\r\n      style: el.style,\r\n      shape: el.shape,\r\n      z: el.z,\r\n      z2: el.z2,\r\n      silent: el.silent\r\n    });\r\n    elMirror.__from = el;\r\n    el.__hoverMir = elMirror;\r\n    hoverStyle && elMirror.setStyle(hoverStyle);\r\n\r\n    this._hoverElements.push(elMirror);\r\n\r\n    return elMirror;\r\n  },\r\n  removeHover: function (el) {\r\n    var elMirror = el.__hoverMir;\r\n    var hoverElements = this._hoverElements;\r\n    var idx = util.indexOf(hoverElements, elMirror);\r\n\r\n    if (idx >= 0) {\r\n      hoverElements.splice(idx, 1);\r\n    }\r\n\r\n    el.__hoverMir = null;\r\n  },\r\n  clearHover: function (el) {\r\n    var hoverElements = this._hoverElements;\r\n\r\n    for (var i = 0; i < hoverElements.length; i++) {\r\n      var from = hoverElements[i].__from;\r\n\r\n      if (from) {\r\n        from.__hoverMir = null;\r\n      }\r\n    }\r\n\r\n    hoverElements.length = 0;\r\n  },\r\n  refreshHover: function () {\r\n    var hoverElements = this._hoverElements;\r\n    var len = hoverElements.length;\r\n    var hoverLayer = this._hoverlayer;\r\n    hoverLayer && hoverLayer.clear();\r\n\r\n    if (!len) {\r\n      return;\r\n    }\r\n\r\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\r\n    // FIXME?\r\n\r\n    if (!hoverLayer) {\r\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\r\n    }\r\n\r\n    var scope = {};\r\n    hoverLayer.ctx.save();\r\n\r\n    for (var i = 0; i < len;) {\r\n      var el = hoverElements[i];\r\n      var originalEl = el.__from; // Original el is removed\r\n      // PENDING\r\n\r\n      if (!(originalEl && originalEl.__zr)) {\r\n        hoverElements.splice(i, 1);\r\n        originalEl.__hoverMir = null;\r\n        len--;\r\n        continue;\r\n      }\r\n\r\n      i++; // Use transform\r\n      // FIXME style and shape ?\r\n\r\n      if (!originalEl.invisible) {\r\n        el.transform = originalEl.transform;\r\n        el.invTransform = originalEl.invTransform;\r\n        el.__clipPaths = originalEl.__clipPaths; // el.\r\n\r\n        this._doPaintEl(el, hoverLayer, true, scope);\r\n      }\r\n    }\r\n\r\n    hoverLayer.ctx.restore();\r\n  },\r\n  getHoverLayer: function () {\r\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\r\n  },\r\n  _paintList: function (list, paintAll, redrawId) {\r\n    if (this._redrawId !== redrawId) {\r\n      return;\r\n    }\r\n\r\n    paintAll = paintAll || false;\r\n\r\n    this._updateLayerStatus(list);\r\n\r\n    var finished = this._doPaintList(list, paintAll);\r\n\r\n    if (this._needsManuallyCompositing) {\r\n      this._compositeManually();\r\n    }\r\n\r\n    if (!finished) {\r\n      var self = this;\r\n      requestAnimationFrame(function () {\r\n        self._paintList(list, paintAll, redrawId);\r\n      });\r\n    }\r\n  },\r\n  _compositeManually: function () {\r\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\r\n    var width = this._domRoot.width;\r\n    var height = this._domRoot.height;\r\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\r\n\r\n    this.eachBuiltinLayer(function (layer) {\r\n      if (layer.virtual) {\r\n        ctx.drawImage(layer.dom, 0, 0, width, height);\r\n      }\r\n    });\r\n  },\r\n  _doPaintList: function (list, paintAll) {\r\n    var layerList = [];\r\n\r\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\r\n      var zlevel = this._zlevelList[zi];\r\n      var layer = this._layers[zlevel];\r\n\r\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\r\n        layerList.push(layer);\r\n      }\r\n    }\r\n\r\n    var finished = true;\r\n\r\n    for (var k = 0; k < layerList.length; k++) {\r\n      var layer = layerList[k];\r\n      var ctx = layer.ctx;\r\n      var scope = {};\r\n      ctx.save();\r\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\r\n      var useTimer = !paintAll && layer.incremental && Date.now;\r\n      var startTime = useTimer && Date.now();\r\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\r\n\r\n      if (layer.__startIndex === layer.__endIndex) {\r\n        layer.clear(false, clearColor);\r\n      } else if (start === layer.__startIndex) {\r\n        var firstEl = list[start];\r\n\r\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\r\n          layer.clear(false, clearColor);\r\n        }\r\n      }\r\n\r\n      if (start === -1) {\r\n        console.error('For some unknown reason. drawIndex is -1');\r\n        start = layer.__startIndex;\r\n      }\r\n\r\n      for (var i = start; i < layer.__endIndex; i++) {\r\n        var el = list[i];\r\n\r\n        this._doPaintEl(el, layer, paintAll, scope);\r\n\r\n        el.__dirty = el.__dirtyText = false;\r\n\r\n        if (useTimer) {\r\n          // Date.now can be executed in 13,025,305 ops/second.\r\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\r\n          // The rest elements will be drawn in the next frame.\r\n\r\n          if (dTime > 15) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      layer.__drawIndex = i;\r\n\r\n      if (layer.__drawIndex < layer.__endIndex) {\r\n        finished = false;\r\n      }\r\n\r\n      if (scope.prevElClipPaths) {\r\n        // Needs restore the state. If last drawn element is in the clipping area.\r\n        ctx.restore();\r\n      }\r\n\r\n      ctx.restore();\r\n    }\r\n\r\n    if (env.wxa) {\r\n      // Flush for weixin application\r\n      util.each(this._layers, function (layer) {\r\n        if (layer && layer.ctx && layer.ctx.draw) {\r\n          layer.ctx.draw();\r\n        }\r\n      });\r\n    }\r\n\r\n    return finished;\r\n  },\r\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\r\n    var ctx = currentLayer.ctx;\r\n    var m = el.transform;\r\n\r\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\r\n    !el.invisible // Ignore transparent element\r\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\r\n    // Draw a scale 0 element can cause all following draw wrong\r\n    // And setTransform with scale 0 will cause set back transform failed.\r\n    && !(m && !m[0] && !m[3]) // Ignore culled element\r\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\r\n      var clipPaths = el.__clipPaths;\r\n      var prevElClipPaths = scope.prevElClipPaths; // Optimize when clipping on group with several elements\r\n\r\n      if (!prevElClipPaths || isClipPathChanged(clipPaths, prevElClipPaths)) {\r\n        // If has previous clipping state, restore from it\r\n        if (prevElClipPaths) {\r\n          ctx.restore();\r\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\r\n\r\n          scope.prevEl = null;\r\n        } // New clipping state\r\n\r\n\r\n        if (clipPaths) {\r\n          ctx.save();\r\n          doClip(clipPaths, ctx);\r\n          scope.prevElClipPaths = clipPaths;\r\n        }\r\n      }\r\n\r\n      el.beforeBrush && el.beforeBrush(ctx);\r\n      el.brush(ctx, scope.prevEl || null);\r\n      scope.prevEl = el;\r\n      el.afterBrush && el.afterBrush(ctx);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\r\n   * @param {number} zlevel\r\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\r\n   * @return {module:zrender/Layer}\r\n   */\r\n  getLayer: function (zlevel, virtual) {\r\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\r\n      zlevel = CANVAS_ZLEVEL;\r\n    }\r\n\r\n    var layer = this._layers[zlevel];\r\n\r\n    if (!layer) {\r\n      // Create a new layer\r\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\r\n      layer.zlevel = zlevel;\r\n      layer.__builtin__ = true;\r\n\r\n      if (this._layerConfig[zlevel]) {\r\n        util.merge(layer, this._layerConfig[zlevel], true);\r\n      } // TODO Remove EL_AFTER_INCREMENTAL_INC magic number\r\n      else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\r\n          util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\r\n        }\r\n\r\n      if (virtual) {\r\n        layer.virtual = virtual;\r\n      }\r\n\r\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\r\n      // Or excanvas will get 0px clientWidth and clientHeight\r\n\r\n      layer.initContext();\r\n    }\r\n\r\n    return layer;\r\n  },\r\n  insertLayer: function (zlevel, layer) {\r\n    var layersMap = this._layers;\r\n    var zlevelList = this._zlevelList;\r\n    var len = zlevelList.length;\r\n    var prevLayer = null;\r\n    var i = -1;\r\n    var domRoot = this._domRoot;\r\n\r\n    if (layersMap[zlevel]) {\r\n      logError('ZLevel ' + zlevel + ' has been used already');\r\n      return;\r\n    } // Check if is a valid layer\r\n\r\n\r\n    if (!isLayerValid(layer)) {\r\n      logError('Layer of zlevel ' + zlevel + ' is not valid');\r\n      return;\r\n    }\r\n\r\n    if (len > 0 && zlevel > zlevelList[0]) {\r\n      for (i = 0; i < len - 1; i++) {\r\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      prevLayer = layersMap[zlevelList[i]];\r\n    }\r\n\r\n    zlevelList.splice(i + 1, 0, zlevel);\r\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\r\n    // (It can be a WebGL layer and assigned to a ZImage element)\r\n    // But it still under management of zrender.\r\n\r\n    if (!layer.virtual) {\r\n      if (prevLayer) {\r\n        var prevDom = prevLayer.dom;\r\n\r\n        if (prevDom.nextSibling) {\r\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\r\n        } else {\r\n          domRoot.appendChild(layer.dom);\r\n        }\r\n      } else {\r\n        if (domRoot.firstChild) {\r\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\r\n        } else {\r\n          domRoot.appendChild(layer.dom);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  // Iterate each layer\r\n  eachLayer: function (cb, context) {\r\n    var zlevelList = this._zlevelList;\r\n    var z;\r\n    var i;\r\n\r\n    for (i = 0; i < zlevelList.length; i++) {\r\n      z = zlevelList[i];\r\n      cb.call(context, this._layers[z], z);\r\n    }\r\n  },\r\n  // Iterate each buildin layer\r\n  eachBuiltinLayer: function (cb, context) {\r\n    var zlevelList = this._zlevelList;\r\n    var layer;\r\n    var z;\r\n    var i;\r\n\r\n    for (i = 0; i < zlevelList.length; i++) {\r\n      z = zlevelList[i];\r\n      layer = this._layers[z];\r\n\r\n      if (layer.__builtin__) {\r\n        cb.call(context, layer, z);\r\n      }\r\n    }\r\n  },\r\n  // Iterate each other layer except buildin layer\r\n  eachOtherLayer: function (cb, context) {\r\n    var zlevelList = this._zlevelList;\r\n    var layer;\r\n    var z;\r\n    var i;\r\n\r\n    for (i = 0; i < zlevelList.length; i++) {\r\n      z = zlevelList[i];\r\n      layer = this._layers[z];\r\n\r\n      if (!layer.__builtin__) {\r\n        cb.call(context, layer, z);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 获取所有已创建的层\r\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\r\n   */\r\n  getLayers: function () {\r\n    return this._layers;\r\n  },\r\n  _updateLayerStatus: function (list) {\r\n    this.eachBuiltinLayer(function (layer, z) {\r\n      layer.__dirty = layer.__used = false;\r\n    });\r\n\r\n    function updatePrevLayer(idx) {\r\n      if (prevLayer) {\r\n        if (prevLayer.__endIndex !== idx) {\r\n          prevLayer.__dirty = true;\r\n        }\r\n\r\n        prevLayer.__endIndex = idx;\r\n      }\r\n    }\r\n\r\n    if (this._singleCanvas) {\r\n      for (var i = 1; i < list.length; i++) {\r\n        var el = list[i];\r\n\r\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\r\n          this._needsManuallyCompositing = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    var prevLayer = null;\r\n    var incrementalLayerCount = 0;\r\n    var prevZlevel;\r\n\r\n    for (var i = 0; i < list.length; i++) {\r\n      var el = list[i];\r\n      var zlevel = el.zlevel;\r\n      var layer;\r\n\r\n      if (prevZlevel !== zlevel) {\r\n        prevZlevel = zlevel;\r\n        incrementalLayerCount = 0;\r\n      } // TODO Not use magic number on zlevel.\r\n      // Each layer with increment element can be separated to 3 layers.\r\n      //          (Other Element drawn after incremental element)\r\n      // -----------------zlevel + EL_AFTER_INCREMENTAL_INC--------------------\r\n      //                      (Incremental element)\r\n      // ----------------------zlevel + INCREMENTAL_INC------------------------\r\n      //              (Element drawn before incremental element)\r\n      // --------------------------------zlevel--------------------------------\r\n\r\n\r\n      if (el.incremental) {\r\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\r\n        layer.incremental = true;\r\n        incrementalLayerCount = 1;\r\n      } else {\r\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\r\n      }\r\n\r\n      if (!layer.__builtin__) {\r\n        logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\r\n      }\r\n\r\n      if (layer !== prevLayer) {\r\n        layer.__used = true;\r\n\r\n        if (layer.__startIndex !== i) {\r\n          layer.__dirty = true;\r\n        }\r\n\r\n        layer.__startIndex = i;\r\n\r\n        if (!layer.incremental) {\r\n          layer.__drawIndex = i;\r\n        } else {\r\n          // Mark layer draw index needs to update.\r\n          layer.__drawIndex = -1;\r\n        }\r\n\r\n        updatePrevLayer(i);\r\n        prevLayer = layer;\r\n      }\r\n\r\n      if (el.__dirty) {\r\n        layer.__dirty = true;\r\n\r\n        if (layer.incremental && layer.__drawIndex < 0) {\r\n          // Start draw from the first dirty element.\r\n          layer.__drawIndex = i;\r\n        }\r\n      }\r\n    }\r\n\r\n    updatePrevLayer(i);\r\n    this.eachBuiltinLayer(function (layer, z) {\r\n      // Used in last frame but not in this frame. Needs clear\r\n      if (!layer.__used && layer.getElementCount() > 0) {\r\n        layer.__dirty = true;\r\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\r\n      } // For incremental layer. In case start index changed and no elements are dirty.\r\n\r\n\r\n      if (layer.__dirty && layer.__drawIndex < 0) {\r\n        layer.__drawIndex = layer.__startIndex;\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * 清除hover层外所有内容\r\n   */\r\n  clear: function () {\r\n    this.eachBuiltinLayer(this._clearLayer);\r\n    return this;\r\n  },\r\n  _clearLayer: function (layer) {\r\n    layer.clear();\r\n  },\r\n  setBackgroundColor: function (backgroundColor) {\r\n    this._backgroundColor = backgroundColor;\r\n  },\r\n\r\n  /**\r\n   * 修改指定zlevel的绘制参数\r\n   *\r\n   * @param {string} zlevel\r\n   * @param {Object} config 配置对象\r\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\r\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\r\n   * @param {number} [config.lastFrameAlpha=0.7]\r\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n   */\r\n  configLayer: function (zlevel, config) {\r\n    if (config) {\r\n      var layerConfig = this._layerConfig;\r\n\r\n      if (!layerConfig[zlevel]) {\r\n        layerConfig[zlevel] = config;\r\n      } else {\r\n        util.merge(layerConfig[zlevel], config, true);\r\n      }\r\n\r\n      for (var i = 0; i < this._zlevelList.length; i++) {\r\n        var _zlevel = this._zlevelList[i]; // TODO Remove EL_AFTER_INCREMENTAL_INC magic number\r\n\r\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\r\n          var layer = this._layers[_zlevel];\r\n          util.merge(layer, layerConfig[zlevel], true);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 删除指定层\r\n   * @param {number} zlevel 层所在的zlevel\r\n   */\r\n  delLayer: function (zlevel) {\r\n    var layers = this._layers;\r\n    var zlevelList = this._zlevelList;\r\n    var layer = layers[zlevel];\r\n\r\n    if (!layer) {\r\n      return;\r\n    }\r\n\r\n    layer.dom.parentNode.removeChild(layer.dom);\r\n    delete layers[zlevel];\r\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\r\n  },\r\n\r\n  /**\r\n   * 区域大小变化后重绘\r\n   */\r\n  resize: function (width, height) {\r\n    if (!this._domRoot.style) {\r\n      // Maybe in node or worker\r\n      if (width == null || height == null) {\r\n        return;\r\n      }\r\n\r\n      this._width = width;\r\n      this._height = height;\r\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\r\n    } else {\r\n      var domRoot = this._domRoot; // FIXME Why ?\r\n\r\n      domRoot.style.display = 'none'; // Save input w/h\r\n\r\n      var opts = this._opts;\r\n      width != null && (opts.width = width);\r\n      height != null && (opts.height = height);\r\n      width = this._getSize(0);\r\n      height = this._getSize(1);\r\n      domRoot.style.display = ''; // 优化没有实际改变的resize\r\n\r\n      if (this._width !== width || height !== this._height) {\r\n        domRoot.style.width = width + 'px';\r\n        domRoot.style.height = height + 'px';\r\n\r\n        for (var id in this._layers) {\r\n          if (this._layers.hasOwnProperty(id)) {\r\n            this._layers[id].resize(width, height);\r\n          }\r\n        }\r\n\r\n        util.each(this._progressiveLayers, function (layer) {\r\n          layer.resize(width, height);\r\n        });\r\n        this.refresh(true);\r\n      }\r\n\r\n      this._width = width;\r\n      this._height = height;\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 清除单独的一个层\r\n   * @param {number} zlevel\r\n   */\r\n  clearLayer: function (zlevel) {\r\n    var layer = this._layers[zlevel];\r\n\r\n    if (layer) {\r\n      layer.clear();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 释放\r\n   */\r\n  dispose: function () {\r\n    this.root.innerHTML = '';\r\n    this.root = this.storage = this._domRoot = this._layers = null;\r\n  },\r\n\r\n  /**\r\n   * Get canvas which has all thing rendered\r\n   * @param {Object} opts\r\n   * @param {string} [opts.backgroundColor]\r\n   * @param {number} [opts.pixelRatio]\r\n   */\r\n  getRenderedCanvas: function (opts) {\r\n    opts = opts || {};\r\n\r\n    if (this._singleCanvas && !this._compositeManually) {\r\n      return this._layers[CANVAS_ZLEVEL].dom;\r\n    }\r\n\r\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\r\n    imageLayer.initContext();\r\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\r\n\r\n    if (opts.pixelRatio <= this.dpr) {\r\n      this.refresh();\r\n      var width = imageLayer.dom.width;\r\n      var height = imageLayer.dom.height;\r\n      var ctx = imageLayer.ctx;\r\n      this.eachLayer(function (layer) {\r\n        if (layer.__builtin__) {\r\n          ctx.drawImage(layer.dom, 0, 0, width, height);\r\n        } else if (layer.renderToCanvas) {\r\n          imageLayer.ctx.save();\r\n          layer.renderToCanvas(imageLayer.ctx);\r\n          imageLayer.ctx.restore();\r\n        }\r\n      });\r\n    } else {\r\n      // PENDING, echarts-gl and incremental rendering.\r\n      var scope = {};\r\n      var displayList = this.storage.getDisplayList(true);\r\n\r\n      for (var i = 0; i < displayList.length; i++) {\r\n        var el = displayList[i];\r\n\r\n        this._doPaintEl(el, imageLayer, true, scope);\r\n      }\r\n    }\r\n\r\n    return imageLayer.dom;\r\n  },\r\n\r\n  /**\r\n   * 获取绘图区域宽度\r\n   */\r\n  getWidth: function () {\r\n    return this._width;\r\n  },\r\n\r\n  /**\r\n   * 获取绘图区域高度\r\n   */\r\n  getHeight: function () {\r\n    return this._height;\r\n  },\r\n  _getSize: function (whIdx) {\r\n    var opts = this._opts;\r\n    var wh = ['width', 'height'][whIdx];\r\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\r\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\r\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\r\n\r\n    if (opts[wh] != null && opts[wh] !== 'auto') {\r\n      return parseFloat(opts[wh]);\r\n    }\r\n\r\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\r\n\r\n    var stl = document.defaultView.getComputedStyle(root);\r\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\r\n  },\r\n  pathToImage: function (path, dpr) {\r\n    dpr = dpr || this.dpr;\r\n    var canvas = document.createElement('canvas');\r\n    var ctx = canvas.getContext('2d');\r\n    var rect = path.getBoundingRect();\r\n    var style = path.style;\r\n    var shadowBlurSize = style.shadowBlur * dpr;\r\n    var shadowOffsetX = style.shadowOffsetX * dpr;\r\n    var shadowOffsetY = style.shadowOffsetY * dpr;\r\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\r\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\r\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\r\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\r\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\r\n    var width = rect.width + leftMargin + rightMargin;\r\n    var height = rect.height + topMargin + bottomMargin;\r\n    canvas.width = width * dpr;\r\n    canvas.height = height * dpr;\r\n    ctx.scale(dpr, dpr);\r\n    ctx.clearRect(0, 0, width, height);\r\n    ctx.dpr = dpr;\r\n    var pathTransform = {\r\n      position: path.position,\r\n      rotation: path.rotation,\r\n      scale: path.scale\r\n    };\r\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\r\n    path.rotation = 0;\r\n    path.scale = [1, 1];\r\n    path.updateTransform();\r\n\r\n    if (path) {\r\n      path.brush(ctx);\r\n    }\r\n\r\n    var ImageShape = Image;\r\n    var imgShape = new ImageShape({\r\n      style: {\r\n        x: 0,\r\n        y: 0,\r\n        image: canvas\r\n      }\r\n    });\r\n\r\n    if (pathTransform.position != null) {\r\n      imgShape.position = path.position = pathTransform.position;\r\n    }\r\n\r\n    if (pathTransform.rotation != null) {\r\n      imgShape.rotation = path.rotation = pathTransform.rotation;\r\n    }\r\n\r\n    if (pathTransform.scale != null) {\r\n      imgShape.scale = path.scale = pathTransform.scale;\r\n    }\r\n\r\n    return imgShape;\r\n  }\r\n};\r\nvar _default = Painter;\r\nmodule.exports = _default;","var util = require(\"./core/util\");\r\n\r\nvar env = require(\"./core/env\");\r\n\r\nvar Group = require(\"./container/Group\");\r\n\r\nvar timsort = require(\"./core/timsort\");\r\n\r\n// Use timsort because in most case elements are partially sorted\r\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\r\nfunction shapeCompareFunc(a, b) {\r\n  if (a.zlevel === b.zlevel) {\r\n    if (a.z === b.z) {\r\n      // if (a.z2 === b.z2) {\r\n      //     // FIXME Slow has renderidx compare\r\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\r\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\r\n      //     return a.__renderidx - b.__renderidx;\r\n      // }\r\n      return a.z2 - b.z2;\r\n    }\r\n\r\n    return a.z - b.z;\r\n  }\r\n\r\n  return a.zlevel - b.zlevel;\r\n}\r\n/**\r\n * 内容仓库 (M)\r\n * @alias module:zrender/Storage\r\n * @constructor\r\n */\r\n\r\n\r\nvar Storage = function () {\r\n  // jshint ignore:line\r\n  this._roots = [];\r\n  this._displayList = [];\r\n  this._displayListLen = 0;\r\n};\r\n\r\nStorage.prototype = {\r\n  constructor: Storage,\r\n\r\n  /**\r\n   * @param  {Function} cb\r\n   *\r\n   */\r\n  traverse: function (cb, context) {\r\n    for (var i = 0; i < this._roots.length; i++) {\r\n      this._roots[i].traverse(cb, context);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 返回所有图形的绘制队列\r\n   * @param {boolean} [update=false] 是否在返回前更新该数组\r\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\r\n   *\r\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\r\n   * @return {Array.<module:zrender/graphic/Displayable>}\r\n   */\r\n  getDisplayList: function (update, includeIgnore) {\r\n    includeIgnore = includeIgnore || false;\r\n\r\n    if (update) {\r\n      this.updateDisplayList(includeIgnore);\r\n    }\r\n\r\n    return this._displayList;\r\n  },\r\n\r\n  /**\r\n   * 更新图形的绘制队列。\r\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\r\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\r\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\r\n   */\r\n  updateDisplayList: function (includeIgnore) {\r\n    this._displayListLen = 0;\r\n    var roots = this._roots;\r\n    var displayList = this._displayList;\r\n\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\r\n    }\r\n\r\n    displayList.length = this._displayListLen;\r\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\r\n  },\r\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\r\n    if (el.ignore && !includeIgnore) {\r\n      return;\r\n    }\r\n\r\n    el.beforeUpdate();\r\n\r\n    if (el.__dirty) {\r\n      el.update();\r\n    }\r\n\r\n    el.afterUpdate();\r\n    var userSetClipPath = el.clipPath;\r\n\r\n    if (userSetClipPath) {\r\n      // FIXME 效率影响\r\n      if (clipPaths) {\r\n        clipPaths = clipPaths.slice();\r\n      } else {\r\n        clipPaths = [];\r\n      }\r\n\r\n      var currentClipPath = userSetClipPath;\r\n      var parentClipPath = el; // Recursively add clip path\r\n\r\n      while (currentClipPath) {\r\n        // clipPath 的变换是基于使用这个 clipPath 的元素\r\n        currentClipPath.parent = parentClipPath;\r\n        currentClipPath.updateTransform();\r\n        clipPaths.push(currentClipPath);\r\n        parentClipPath = currentClipPath;\r\n        currentClipPath = currentClipPath.clipPath;\r\n      }\r\n    }\r\n\r\n    if (el.isGroup) {\r\n      var children = el._children;\r\n\r\n      for (var i = 0; i < children.length; i++) {\r\n        var child = children[i]; // Force to mark as dirty if group is dirty\r\n        // FIXME __dirtyPath ?\r\n\r\n        if (el.__dirty) {\r\n          child.__dirty = true;\r\n        }\r\n\r\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\r\n      } // Mark group clean here\r\n\r\n\r\n      el.__dirty = false;\r\n    } else {\r\n      el.__clipPaths = clipPaths;\r\n      this._displayList[this._displayListLen++] = el;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 添加图形(Shape)或者组(Group)到根节点\r\n   * @param {module:zrender/Element} el\r\n   */\r\n  addRoot: function (el) {\r\n    if (el.__storage === this) {\r\n      return;\r\n    }\r\n\r\n    if (el instanceof Group) {\r\n      el.addChildrenToStorage(this);\r\n    }\r\n\r\n    this.addToStorage(el);\r\n\r\n    this._roots.push(el);\r\n  },\r\n\r\n  /**\r\n   * 删除指定的图形(Shape)或者组(Group)\r\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\r\n   */\r\n  delRoot: function (el) {\r\n    if (el == null) {\r\n      // 不指定el清空\r\n      for (var i = 0; i < this._roots.length; i++) {\r\n        var root = this._roots[i];\r\n\r\n        if (root instanceof Group) {\r\n          root.delChildrenFromStorage(this);\r\n        }\r\n      }\r\n\r\n      this._roots = [];\r\n      this._displayList = [];\r\n      this._displayListLen = 0;\r\n      return;\r\n    }\r\n\r\n    if (el instanceof Array) {\r\n      for (var i = 0, l = el.length; i < l; i++) {\r\n        this.delRoot(el[i]);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var idx = util.indexOf(this._roots, el);\r\n\r\n    if (idx >= 0) {\r\n      this.delFromStorage(el);\r\n\r\n      this._roots.splice(idx, 1);\r\n\r\n      if (el instanceof Group) {\r\n        el.delChildrenFromStorage(this);\r\n      }\r\n    }\r\n  },\r\n  addToStorage: function (el) {\r\n    if (el) {\r\n      el.__storage = this;\r\n      el.dirty(false);\r\n    }\r\n\r\n    return this;\r\n  },\r\n  delFromStorage: function (el) {\r\n    if (el) {\r\n      el.__storage = null;\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 清空并且释放Storage\r\n   */\r\n  dispose: function () {\r\n    this._renderList = this._roots = null;\r\n  },\r\n  displayableSortFunc: shapeCompareFunc\r\n};\r\nvar _default = Storage;\r\nmodule.exports = _default;","var util = require(\"../core/util\");\r\n\r\nvar _event = require(\"../core/event\");\r\n\r\nvar Dispatcher = _event.Dispatcher;\r\n\r\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\r\n\r\nvar Animator = require(\"./Animator\");\r\n\r\n/**\r\n * Animation main class, dispatch and manage all animation controllers\r\n *\r\n * @module zrender/animation/Animation\r\n * @author pissang(https://github.com/pissang)\r\n */\r\n// TODO Additive animation\r\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\r\n// https://developer.apple.com/videos/wwdc2014/#236\r\n\r\n/**\r\n * @typedef {Object} IZRenderStage\r\n * @property {Function} update\r\n */\r\n\r\n/**\r\n * @alias module:zrender/animation/Animation\r\n * @constructor\r\n * @param {Object} [options]\r\n * @param {Function} [options.onframe]\r\n * @param {IZRenderStage} [options.stage]\r\n * @example\r\n *     var animation = new Animation();\r\n *     var obj = {\r\n *         x: 100,\r\n *         y: 100\r\n *     };\r\n *     animation.animate(node.position)\r\n *         .when(1000, {\r\n *             x: 500,\r\n *             y: 500\r\n *         })\r\n *         .when(2000, {\r\n *             x: 100,\r\n *             y: 100\r\n *         })\r\n *         .start('spline');\r\n */\r\nvar Animation = function (options) {\r\n  options = options || {};\r\n  this.stage = options.stage || {};\r\n\r\n  this.onframe = options.onframe || function () {}; // private properties\r\n\r\n\r\n  this._clips = [];\r\n  this._running = false;\r\n  this._time;\r\n  this._pausedTime;\r\n  this._pauseStart;\r\n  this._paused = false;\r\n  Dispatcher.call(this);\r\n};\r\n\r\nAnimation.prototype = {\r\n  constructor: Animation,\r\n\r\n  /**\r\n   * Add clip\r\n   * @param {module:zrender/animation/Clip} clip\r\n   */\r\n  addClip: function (clip) {\r\n    this._clips.push(clip);\r\n  },\r\n\r\n  /**\r\n   * Add animator\r\n   * @param {module:zrender/animation/Animator} animator\r\n   */\r\n  addAnimator: function (animator) {\r\n    animator.animation = this;\r\n    var clips = animator.getClips();\r\n\r\n    for (var i = 0; i < clips.length; i++) {\r\n      this.addClip(clips[i]);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Delete animation clip\r\n   * @param {module:zrender/animation/Clip} clip\r\n   */\r\n  removeClip: function (clip) {\r\n    var idx = util.indexOf(this._clips, clip);\r\n\r\n    if (idx >= 0) {\r\n      this._clips.splice(idx, 1);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Delete animation clip\r\n   * @param {module:zrender/animation/Animator} animator\r\n   */\r\n  removeAnimator: function (animator) {\r\n    var clips = animator.getClips();\r\n\r\n    for (var i = 0; i < clips.length; i++) {\r\n      this.removeClip(clips[i]);\r\n    }\r\n\r\n    animator.animation = null;\r\n  },\r\n  _update: function () {\r\n    var time = new Date().getTime() - this._pausedTime;\r\n\r\n    var delta = time - this._time;\r\n    var clips = this._clips;\r\n    var len = clips.length;\r\n    var deferredEvents = [];\r\n    var deferredClips = [];\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      var clip = clips[i];\r\n      var e = clip.step(time, delta); // Throw out the events need to be called after\r\n      // stage.update, like destroy\r\n\r\n      if (e) {\r\n        deferredEvents.push(e);\r\n        deferredClips.push(clip);\r\n      }\r\n    } // Remove the finished clip\r\n\r\n\r\n    for (var i = 0; i < len;) {\r\n      if (clips[i]._needsRemove) {\r\n        clips[i] = clips[len - 1];\r\n        clips.pop();\r\n        len--;\r\n      } else {\r\n        i++;\r\n      }\r\n    }\r\n\r\n    len = deferredEvents.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      deferredClips[i].fire(deferredEvents[i]);\r\n    }\r\n\r\n    this._time = time;\r\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\r\n    // depends on the sequence (e.g., echarts-stream and finish\r\n    // event judge)\r\n\r\n    this.trigger('frame', delta);\r\n\r\n    if (this.stage.update) {\r\n      this.stage.update();\r\n    }\r\n  },\r\n  _startLoop: function () {\r\n    var self = this;\r\n    this._running = true;\r\n\r\n    function step() {\r\n      if (self._running) {\r\n        requestAnimationFrame(step);\r\n        !self._paused && self._update();\r\n      }\r\n    }\r\n\r\n    requestAnimationFrame(step);\r\n  },\r\n\r\n  /**\r\n   * Start animation.\r\n   */\r\n  start: function () {\r\n    this._time = new Date().getTime();\r\n    this._pausedTime = 0;\r\n\r\n    this._startLoop();\r\n  },\r\n\r\n  /**\r\n   * Stop animation.\r\n   */\r\n  stop: function () {\r\n    this._running = false;\r\n  },\r\n\r\n  /**\r\n   * Pause animation.\r\n   */\r\n  pause: function () {\r\n    if (!this._paused) {\r\n      this._pauseStart = new Date().getTime();\r\n      this._paused = true;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Resume animation.\r\n   */\r\n  resume: function () {\r\n    if (this._paused) {\r\n      this._pausedTime += new Date().getTime() - this._pauseStart;\r\n      this._paused = false;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Clear animation.\r\n   */\r\n  clear: function () {\r\n    this._clips = [];\r\n  },\r\n\r\n  /**\r\n   * Whether animation finished.\r\n   */\r\n  isFinished: function () {\r\n    return !this._clips.length;\r\n  },\r\n\r\n  /**\r\n   * Creat animator for a target, whose props can be animated.\r\n   *\r\n   * @param  {Object} target\r\n   * @param  {Object} options\r\n   * @param  {boolean} [options.loop=false] Whether loop animation.\r\n   * @param  {Function} [options.getter=null] Get value from target.\r\n   * @param  {Function} [options.setter=null] Set value to target.\r\n   * @return {module:zrender/animation/Animation~Animator}\r\n   */\r\n  // TODO Gap\r\n  animate: function (target, options) {\r\n    options = options || {};\r\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\r\n    this.addAnimator(animator);\r\n    return animator;\r\n  }\r\n};\r\nutil.mixin(Animation, Dispatcher);\r\nvar _default = Animation;\r\nmodule.exports = _default;","var Clip = require(\"./Clip\");\r\n\r\nvar color = require(\"../tool/color\");\r\n\r\nvar _util = require(\"../core/util\");\r\n\r\nvar isArrayLike = _util.isArrayLike;\r\n\r\n/**\r\n * @module echarts/animation/Animator\r\n */\r\nvar arraySlice = Array.prototype.slice;\r\n\r\nfunction defaultGetter(target, key) {\r\n  return target[key];\r\n}\r\n\r\nfunction defaultSetter(target, key, value) {\r\n  target[key] = value;\r\n}\r\n/**\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} percent\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction interpolateNumber(p0, p1, percent) {\r\n  return (p1 - p0) * percent + p0;\r\n}\r\n/**\r\n * @param  {string} p0\r\n * @param  {string} p1\r\n * @param  {number} percent\r\n * @return {string}\r\n */\r\n\r\n\r\nfunction interpolateString(p0, p1, percent) {\r\n  return percent > 0.5 ? p1 : p0;\r\n}\r\n/**\r\n * @param  {Array} p0\r\n * @param  {Array} p1\r\n * @param  {number} percent\r\n * @param  {Array} out\r\n * @param  {number} arrDim\r\n */\r\n\r\n\r\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\r\n  var len = p0.length;\r\n\r\n  if (arrDim === 1) {\r\n    for (var i = 0; i < len; i++) {\r\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\r\n    }\r\n  } else {\r\n    var len2 = len && p0[0].length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      for (var j = 0; j < len2; j++) {\r\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\r\n      }\r\n    }\r\n  }\r\n} // arr0 is source array, arr1 is target array.\r\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\r\n\r\n\r\nfunction fillArr(arr0, arr1, arrDim) {\r\n  var arr0Len = arr0.length;\r\n  var arr1Len = arr1.length;\r\n\r\n  if (arr0Len !== arr1Len) {\r\n    // FIXME Not work for TypedArray\r\n    var isPreviousLarger = arr0Len > arr1Len;\r\n\r\n    if (isPreviousLarger) {\r\n      // Cut the previous\r\n      arr0.length = arr1Len;\r\n    } else {\r\n      // Fill the previous\r\n      for (var i = arr0Len; i < arr1Len; i++) {\r\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\r\n      }\r\n    }\r\n  } // Handling NaN value\r\n\r\n\r\n  var len2 = arr0[0] && arr0[0].length;\r\n\r\n  for (var i = 0; i < arr0.length; i++) {\r\n    if (arrDim === 1) {\r\n      if (isNaN(arr0[i])) {\r\n        arr0[i] = arr1[i];\r\n      }\r\n    } else {\r\n      for (var j = 0; j < len2; j++) {\r\n        if (isNaN(arr0[i][j])) {\r\n          arr0[i][j] = arr1[i][j];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * @param  {Array} arr0\r\n * @param  {Array} arr1\r\n * @param  {number} arrDim\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isArraySame(arr0, arr1, arrDim) {\r\n  if (arr0 === arr1) {\r\n    return true;\r\n  }\r\n\r\n  var len = arr0.length;\r\n\r\n  if (len !== arr1.length) {\r\n    return false;\r\n  }\r\n\r\n  if (arrDim === 1) {\r\n    for (var i = 0; i < len; i++) {\r\n      if (arr0[i] !== arr1[i]) {\r\n        return false;\r\n      }\r\n    }\r\n  } else {\r\n    var len2 = arr0[0].length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      for (var j = 0; j < len2; j++) {\r\n        if (arr0[i][j] !== arr1[i][j]) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n/**\r\n * Catmull Rom interpolate array\r\n * @param  {Array} p0\r\n * @param  {Array} p1\r\n * @param  {Array} p2\r\n * @param  {Array} p3\r\n * @param  {number} t\r\n * @param  {number} t2\r\n * @param  {number} t3\r\n * @param  {Array} out\r\n * @param  {number} arrDim\r\n */\r\n\r\n\r\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\r\n  var len = p0.length;\r\n\r\n  if (arrDim === 1) {\r\n    for (var i = 0; i < len; i++) {\r\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\r\n    }\r\n  } else {\r\n    var len2 = p0[0].length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      for (var j = 0; j < len2; j++) {\r\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * Catmull Rom interpolate number\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} p3\r\n * @param  {number} t\r\n * @param  {number} t2\r\n * @param  {number} t3\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\r\n  var v0 = (p2 - p0) * 0.5;\r\n  var v1 = (p3 - p1) * 0.5;\r\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n}\r\n\r\nfunction cloneValue(value) {\r\n  if (isArrayLike(value)) {\r\n    var len = value.length;\r\n\r\n    if (isArrayLike(value[0])) {\r\n      var ret = [];\r\n\r\n      for (var i = 0; i < len; i++) {\r\n        ret.push(arraySlice.call(value[i]));\r\n      }\r\n\r\n      return ret;\r\n    }\r\n\r\n    return arraySlice.call(value);\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nfunction rgba2String(rgba) {\r\n  rgba[0] = Math.floor(rgba[0]);\r\n  rgba[1] = Math.floor(rgba[1]);\r\n  rgba[2] = Math.floor(rgba[2]);\r\n  return 'rgba(' + rgba.join(',') + ')';\r\n}\r\n\r\nfunction getArrayDim(keyframes) {\r\n  var lastValue = keyframes[keyframes.length - 1].value;\r\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\r\n}\r\n\r\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\r\n  var getter = animator._getter;\r\n  var setter = animator._setter;\r\n  var useSpline = easing === 'spline';\r\n  var trackLen = keyframes.length;\r\n\r\n  if (!trackLen) {\r\n    return;\r\n  } // Guess data type\r\n\r\n\r\n  var firstVal = keyframes[0].value;\r\n  var isValueArray = isArrayLike(firstVal);\r\n  var isValueColor = false;\r\n  var isValueString = false; // For vertices morphing\r\n\r\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\r\n  var trackMaxTime; // Sort keyframe as ascending\r\n\r\n  keyframes.sort(function (a, b) {\r\n    return a.time - b.time;\r\n  });\r\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\r\n\r\n  var kfPercents = []; // Value of each keyframe\r\n\r\n  var kfValues = [];\r\n  var prevValue = keyframes[0].value;\r\n  var isAllValueEqual = true;\r\n\r\n  for (var i = 0; i < trackLen; i++) {\r\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\r\n\r\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\r\n\r\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\r\n      isAllValueEqual = false;\r\n    }\r\n\r\n    prevValue = value; // Try converting a string to a color array\r\n\r\n    if (typeof value === 'string') {\r\n      var colorArray = color.parse(value);\r\n\r\n      if (colorArray) {\r\n        value = colorArray;\r\n        isValueColor = true;\r\n      } else {\r\n        isValueString = true;\r\n      }\r\n    }\r\n\r\n    kfValues.push(value);\r\n  }\r\n\r\n  if (!forceAnimate && isAllValueEqual) {\r\n    return;\r\n  }\r\n\r\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\r\n\r\n  for (var i = 0; i < trackLen - 1; i++) {\r\n    if (isValueArray) {\r\n      fillArr(kfValues[i], lastValue, arrDim);\r\n    } else {\r\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\r\n        kfValues[i] = lastValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\r\n  // animation playback is sequency\r\n\r\n  var lastFrame = 0;\r\n  var lastFramePercent = 0;\r\n  var start;\r\n  var w;\r\n  var p0;\r\n  var p1;\r\n  var p2;\r\n  var p3;\r\n\r\n  if (isValueColor) {\r\n    var rgba = [0, 0, 0, 0];\r\n  }\r\n\r\n  var onframe = function (target, percent) {\r\n    // Find the range keyframes\r\n    // kf1-----kf2---------current--------kf3\r\n    // find kf2 and kf3 and do interpolation\r\n    var frame; // In the easing function like elasticOut, percent may less than 0\r\n\r\n    if (percent < 0) {\r\n      frame = 0;\r\n    } else if (percent < lastFramePercent) {\r\n      // Start from next key\r\n      // PENDING start from lastFrame ?\r\n      start = Math.min(lastFrame + 1, trackLen - 1);\r\n\r\n      for (frame = start; frame >= 0; frame--) {\r\n        if (kfPercents[frame] <= percent) {\r\n          break;\r\n        }\r\n      } // PENDING really need to do this ?\r\n\r\n\r\n      frame = Math.min(frame, trackLen - 2);\r\n    } else {\r\n      for (frame = lastFrame; frame < trackLen; frame++) {\r\n        if (kfPercents[frame] > percent) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      frame = Math.min(frame - 1, trackLen - 2);\r\n    }\r\n\r\n    lastFrame = frame;\r\n    lastFramePercent = percent;\r\n    var range = kfPercents[frame + 1] - kfPercents[frame];\r\n\r\n    if (range === 0) {\r\n      return;\r\n    } else {\r\n      w = (percent - kfPercents[frame]) / range;\r\n    }\r\n\r\n    if (useSpline) {\r\n      p1 = kfValues[frame];\r\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\r\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\r\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\r\n\r\n      if (isValueArray) {\r\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\r\n      } else {\r\n        var value;\r\n\r\n        if (isValueColor) {\r\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\r\n          value = rgba2String(rgba);\r\n        } else if (isValueString) {\r\n          // String is step(0.5)\r\n          return interpolateString(p1, p2, w);\r\n        } else {\r\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\r\n        }\r\n\r\n        setter(target, propName, value);\r\n      }\r\n    } else {\r\n      if (isValueArray) {\r\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\r\n      } else {\r\n        var value;\r\n\r\n        if (isValueColor) {\r\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\r\n          value = rgba2String(rgba);\r\n        } else if (isValueString) {\r\n          // String is step(0.5)\r\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\r\n        } else {\r\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\r\n        }\r\n\r\n        setter(target, propName, value);\r\n      }\r\n    }\r\n  };\r\n\r\n  var clip = new Clip({\r\n    target: animator._target,\r\n    life: trackMaxTime,\r\n    loop: animator._loop,\r\n    delay: animator._delay,\r\n    onframe: onframe,\r\n    ondestroy: oneTrackDone\r\n  });\r\n\r\n  if (easing && easing !== 'spline') {\r\n    clip.easing = easing;\r\n  }\r\n\r\n  return clip;\r\n}\r\n/**\r\n * @alias module:zrender/animation/Animator\r\n * @constructor\r\n * @param {Object} target\r\n * @param {boolean} loop\r\n * @param {Function} getter\r\n * @param {Function} setter\r\n */\r\n\r\n\r\nvar Animator = function (target, loop, getter, setter) {\r\n  this._tracks = {};\r\n  this._target = target;\r\n  this._loop = loop || false;\r\n  this._getter = getter || defaultGetter;\r\n  this._setter = setter || defaultSetter;\r\n  this._clipCount = 0;\r\n  this._delay = 0;\r\n  this._doneList = [];\r\n  this._onframeList = [];\r\n  this._clipList = [];\r\n};\r\n\r\nAnimator.prototype = {\r\n  /**\r\n   * Set Animation keyframe\r\n   * @param  {number} time 关键帧时间，单位是ms\r\n   * @param  {Object} props 关键帧的属性值，key-value表示\r\n   * @return {module:zrender/animation/Animator}\r\n   */\r\n  when: function (time\r\n  /* ms */\r\n  , props) {\r\n    var tracks = this._tracks;\r\n\r\n    for (var propName in props) {\r\n      if (!props.hasOwnProperty(propName)) {\r\n        continue;\r\n      }\r\n\r\n      if (!tracks[propName]) {\r\n        tracks[propName] = []; // Invalid value\r\n\r\n        var value = this._getter(this._target, propName);\r\n\r\n        if (value == null) {\r\n          // zrLog('Invalid property ' + propName);\r\n          continue;\r\n        } // If time is 0\r\n        //  Then props is given initialize value\r\n        // Else\r\n        //  Initialize value from current prop value\r\n\r\n\r\n        if (time !== 0) {\r\n          tracks[propName].push({\r\n            time: 0,\r\n            value: cloneValue(value)\r\n          });\r\n        }\r\n      }\r\n\r\n      tracks[propName].push({\r\n        time: time,\r\n        value: props[propName]\r\n      });\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 添加动画每一帧的回调函数\r\n   * @param  {Function} callback\r\n   * @return {module:zrender/animation/Animator}\r\n   */\r\n  during: function (callback) {\r\n    this._onframeList.push(callback);\r\n\r\n    return this;\r\n  },\r\n  pause: function () {\r\n    for (var i = 0; i < this._clipList.length; i++) {\r\n      this._clipList[i].pause();\r\n    }\r\n\r\n    this._paused = true;\r\n  },\r\n  resume: function () {\r\n    for (var i = 0; i < this._clipList.length; i++) {\r\n      this._clipList[i].resume();\r\n    }\r\n\r\n    this._paused = false;\r\n  },\r\n  isPaused: function () {\r\n    return !!this._paused;\r\n  },\r\n  _doneCallback: function () {\r\n    // Clear all tracks\r\n    this._tracks = {}; // Clear all clips\r\n\r\n    this._clipList.length = 0;\r\n    var doneList = this._doneList;\r\n    var len = doneList.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      doneList[i].call(this);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Start the animation\r\n   * @param  {string|Function} [easing]\r\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\r\n   * @param  {boolean} forceAnimate\r\n   * @return {module:zrender/animation/Animator}\r\n   */\r\n  start: function (easing, forceAnimate) {\r\n    var self = this;\r\n    var clipCount = 0;\r\n\r\n    var oneTrackDone = function () {\r\n      clipCount--;\r\n\r\n      if (!clipCount) {\r\n        self._doneCallback();\r\n      }\r\n    };\r\n\r\n    var lastClip;\r\n\r\n    for (var propName in this._tracks) {\r\n      if (!this._tracks.hasOwnProperty(propName)) {\r\n        continue;\r\n      }\r\n\r\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\r\n\r\n      if (clip) {\r\n        this._clipList.push(clip);\r\n\r\n        clipCount++; // If start after added to animation\r\n\r\n        if (this.animation) {\r\n          this.animation.addClip(clip);\r\n        }\r\n\r\n        lastClip = clip;\r\n      }\r\n    } // Add during callback on the last clip\r\n\r\n\r\n    if (lastClip) {\r\n      var oldOnFrame = lastClip.onframe;\r\n\r\n      lastClip.onframe = function (target, percent) {\r\n        oldOnFrame(target, percent);\r\n\r\n        for (var i = 0; i < self._onframeList.length; i++) {\r\n          self._onframeList[i](target, percent);\r\n        }\r\n      };\r\n    } // This optimization will help the case that in the upper application\r\n    // the view may be refreshed frequently, where animation will be\r\n    // called repeatly but nothing changed.\r\n\r\n\r\n    if (!clipCount) {\r\n      this._doneCallback();\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Stop animation\r\n   * @param {boolean} forwardToLast If move to last frame before stop\r\n   */\r\n  stop: function (forwardToLast) {\r\n    var clipList = this._clipList;\r\n    var animation = this.animation;\r\n\r\n    for (var i = 0; i < clipList.length; i++) {\r\n      var clip = clipList[i];\r\n\r\n      if (forwardToLast) {\r\n        // Move to last frame before stop\r\n        clip.onframe(this._target, 1);\r\n      }\r\n\r\n      animation && animation.removeClip(clip);\r\n    }\r\n\r\n    clipList.length = 0;\r\n  },\r\n\r\n  /**\r\n   * Set when animation delay starts\r\n   * @param  {number} time 单位ms\r\n   * @return {module:zrender/animation/Animator}\r\n   */\r\n  delay: function (time) {\r\n    this._delay = time;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Add callback for animation end\r\n   * @param  {Function} cb\r\n   * @return {module:zrender/animation/Animator}\r\n   */\r\n  done: function (cb) {\r\n    if (cb) {\r\n      this._doneList.push(cb);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @return {Array.<module:zrender/animation/Clip>}\r\n   */\r\n  getClips: function () {\r\n    return this._clipList;\r\n  }\r\n};\r\nvar _default = Animator;\r\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\r\n\r\n/**\r\n * 动画主控制器\r\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\r\n * @config life(1000) 动画时长\r\n * @config delay(0) 动画延迟时间\r\n * @config loop(true)\r\n * @config gap(0) 循环的间隔时间\r\n * @config onframe\r\n * @config easing(optional)\r\n * @config ondestroy(optional)\r\n * @config onrestart(optional)\r\n *\r\n * TODO pause\r\n */\r\nfunction Clip(options) {\r\n  this._target = options.target; // 生命周期\r\n\r\n  this._life = options.life || 1000; // 延时\r\n\r\n  this._delay = options.delay || 0; // 开始时间\r\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\r\n\r\n  this._initialized = false; // 是否循环\r\n\r\n  this.loop = options.loop == null ? false : options.loop;\r\n  this.gap = options.gap || 0;\r\n  this.easing = options.easing || 'Linear';\r\n  this.onframe = options.onframe;\r\n  this.ondestroy = options.ondestroy;\r\n  this.onrestart = options.onrestart;\r\n  this._pausedTime = 0;\r\n  this._paused = false;\r\n}\r\n\r\nClip.prototype = {\r\n  constructor: Clip,\r\n  step: function (globalTime, deltaTime) {\r\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\r\n    // PENDING\r\n    if (!this._initialized) {\r\n      this._startTime = globalTime + this._delay;\r\n      this._initialized = true;\r\n    }\r\n\r\n    if (this._paused) {\r\n      this._pausedTime += deltaTime;\r\n      return;\r\n    }\r\n\r\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\r\n\r\n    if (percent < 0) {\r\n      return;\r\n    }\r\n\r\n    percent = Math.min(percent, 1);\r\n    var easing = this.easing;\r\n    var easingFunc = typeof easing === 'string' ? easingFuncs[easing] : easing;\r\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\r\n    this.fire('frame', schedule); // 结束\r\n\r\n    if (percent === 1) {\r\n      if (this.loop) {\r\n        this.restart(globalTime); // 重新开始周期\r\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\r\n\r\n        return 'restart';\r\n      } // 动画完成将这个控制器标识为待删除\r\n      // 在Animation.update中进行批量删除\r\n\r\n\r\n      this._needsRemove = true;\r\n      return 'destroy';\r\n    }\r\n\r\n    return null;\r\n  },\r\n  restart: function (globalTime) {\r\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\r\n    this._startTime = globalTime - remainder + this.gap;\r\n    this._pausedTime = 0;\r\n    this._needsRemove = false;\r\n  },\r\n  fire: function (eventType, arg) {\r\n    eventType = 'on' + eventType;\r\n\r\n    if (this[eventType]) {\r\n      this[eventType](this._target, arg);\r\n    }\r\n  },\r\n  pause: function () {\r\n    this._paused = true;\r\n  },\r\n  resume: function () {\r\n    this._paused = false;\r\n  }\r\n};\r\nvar _default = Clip;\r\nmodule.exports = _default;","/**\r\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\r\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\r\n * @exports zrender/animation/easing\r\n */\r\nvar easing = {\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  linear: function (k) {\r\n    return k;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  quadraticIn: function (k) {\r\n    return k * k;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  quadraticOut: function (k) {\r\n    return k * (2 - k);\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  quadraticInOut: function (k) {\r\n    if ((k *= 2) < 1) {\r\n      return 0.5 * k * k;\r\n    }\r\n\r\n    return -0.5 * (--k * (k - 2) - 1);\r\n  },\r\n  // 三次方的缓动（t^3）\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  cubicIn: function (k) {\r\n    return k * k * k;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  cubicOut: function (k) {\r\n    return --k * k * k + 1;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  cubicInOut: function (k) {\r\n    if ((k *= 2) < 1) {\r\n      return 0.5 * k * k * k;\r\n    }\r\n\r\n    return 0.5 * ((k -= 2) * k * k + 2);\r\n  },\r\n  // 四次方的缓动（t^4）\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  quarticIn: function (k) {\r\n    return k * k * k * k;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  quarticOut: function (k) {\r\n    return 1 - --k * k * k * k;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  quarticInOut: function (k) {\r\n    if ((k *= 2) < 1) {\r\n      return 0.5 * k * k * k * k;\r\n    }\r\n\r\n    return -0.5 * ((k -= 2) * k * k * k - 2);\r\n  },\r\n  // 五次方的缓动（t^5）\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  quinticIn: function (k) {\r\n    return k * k * k * k * k;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  quinticOut: function (k) {\r\n    return --k * k * k * k * k + 1;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  quinticInOut: function (k) {\r\n    if ((k *= 2) < 1) {\r\n      return 0.5 * k * k * k * k * k;\r\n    }\r\n\r\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n  },\r\n  // 正弦曲线的缓动（sin(t)）\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  sinusoidalIn: function (k) {\r\n    return 1 - Math.cos(k * Math.PI / 2);\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  sinusoidalOut: function (k) {\r\n    return Math.sin(k * Math.PI / 2);\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  sinusoidalInOut: function (k) {\r\n    return 0.5 * (1 - Math.cos(Math.PI * k));\r\n  },\r\n  // 指数曲线的缓动（2^t）\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  exponentialIn: function (k) {\r\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  exponentialOut: function (k) {\r\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  exponentialInOut: function (k) {\r\n    if (k === 0) {\r\n      return 0;\r\n    }\r\n\r\n    if (k === 1) {\r\n      return 1;\r\n    }\r\n\r\n    if ((k *= 2) < 1) {\r\n      return 0.5 * Math.pow(1024, k - 1);\r\n    }\r\n\r\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n  },\r\n  // 圆形曲线的缓动（sqrt(1-t^2)）\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  circularIn: function (k) {\r\n    return 1 - Math.sqrt(1 - k * k);\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  circularOut: function (k) {\r\n    return Math.sqrt(1 - --k * k);\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  circularInOut: function (k) {\r\n    if ((k *= 2) < 1) {\r\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n    }\r\n\r\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n  },\r\n  // 创建类似于弹簧在停止前来回振荡的动画\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  elasticIn: function (k) {\r\n    var s;\r\n    var a = 0.1;\r\n    var p = 0.4;\r\n\r\n    if (k === 0) {\r\n      return 0;\r\n    }\r\n\r\n    if (k === 1) {\r\n      return 1;\r\n    }\r\n\r\n    if (!a || a < 1) {\r\n      a = 1;\r\n      s = p / 4;\r\n    } else {\r\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n    }\r\n\r\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  elasticOut: function (k) {\r\n    var s;\r\n    var a = 0.1;\r\n    var p = 0.4;\r\n\r\n    if (k === 0) {\r\n      return 0;\r\n    }\r\n\r\n    if (k === 1) {\r\n      return 1;\r\n    }\r\n\r\n    if (!a || a < 1) {\r\n      a = 1;\r\n      s = p / 4;\r\n    } else {\r\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n    }\r\n\r\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  elasticInOut: function (k) {\r\n    var s;\r\n    var a = 0.1;\r\n    var p = 0.4;\r\n\r\n    if (k === 0) {\r\n      return 0;\r\n    }\r\n\r\n    if (k === 1) {\r\n      return 1;\r\n    }\r\n\r\n    if (!a || a < 1) {\r\n      a = 1;\r\n      s = p / 4;\r\n    } else {\r\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n    }\r\n\r\n    if ((k *= 2) < 1) {\r\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n    }\r\n\r\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n  },\r\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  backIn: function (k) {\r\n    var s = 1.70158;\r\n    return k * k * ((s + 1) * k - s);\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  backOut: function (k) {\r\n    var s = 1.70158;\r\n    return --k * k * ((s + 1) * k + s) + 1;\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  backInOut: function (k) {\r\n    var s = 1.70158 * 1.525;\r\n\r\n    if ((k *= 2) < 1) {\r\n      return 0.5 * (k * k * ((s + 1) * k - s));\r\n    }\r\n\r\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n  },\r\n  // 创建弹跳效果\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  bounceIn: function (k) {\r\n    return 1 - easing.bounceOut(1 - k);\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  bounceOut: function (k) {\r\n    if (k < 1 / 2.75) {\r\n      return 7.5625 * k * k;\r\n    } else if (k < 2 / 2.75) {\r\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\r\n    } else if (k < 2.5 / 2.75) {\r\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\r\n    } else {\r\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\r\n    }\r\n  },\r\n\r\n  /**\r\n  * @param {number} k\r\n  * @return {number}\r\n  */\r\n  bounceInOut: function (k) {\r\n    if (k < 0.5) {\r\n      return easing.bounceIn(k * 2) * 0.5;\r\n    }\r\n\r\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n  }\r\n};\r\nvar _default = easing;\r\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\r\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\r\n  setTimeout(func, 16);\r\n};\r\n\r\nmodule.exports = _default;","var dpr = 1; // If in browser environment\r\n\r\nif (typeof window !== 'undefined') {\r\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\r\n}\r\n/**\r\n * config默认配置项\r\n * @exports zrender/config\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n */\r\n\r\n/**\r\n * Debug log mode:\r\n * 0: Do nothing, for release.\r\n * 1: console.error, for debug.\r\n */\r\n\r\n\r\nvar debugMode = 0; // retina 屏幕优化\r\n\r\nvar devicePixelRatio = dpr;\r\nexports.debugMode = debugMode;\r\nexports.devicePixelRatio = devicePixelRatio;","var _util = require(\"./util\");\r\n\r\nvar normalizeRadian = _util.normalizeRadian;\r\nvar PI2 = Math.PI * 2;\r\n/**\r\n * 圆弧描边包含判断\r\n * @param  {number}  cx\r\n * @param  {number}  cy\r\n * @param  {number}  r\r\n * @param  {number}  startAngle\r\n * @param  {number}  endAngle\r\n * @param  {boolean}  anticlockwise\r\n * @param  {number} lineWidth\r\n * @param  {number}  x\r\n * @param  {number}  y\r\n * @return {Boolean}\r\n */\r\n\r\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\r\n  if (lineWidth === 0) {\r\n    return false;\r\n  }\r\n\r\n  var _l = lineWidth;\r\n  x -= cx;\r\n  y -= cy;\r\n  var d = Math.sqrt(x * x + y * y);\r\n\r\n  if (d - _l > r || d + _l < r) {\r\n    return false;\r\n  }\r\n\r\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\r\n    // Is a circle\r\n    return true;\r\n  }\r\n\r\n  if (anticlockwise) {\r\n    var tmp = startAngle;\r\n    startAngle = normalizeRadian(endAngle);\r\n    endAngle = normalizeRadian(tmp);\r\n  } else {\r\n    startAngle = normalizeRadian(startAngle);\r\n    endAngle = normalizeRadian(endAngle);\r\n  }\r\n\r\n  if (startAngle > endAngle) {\r\n    endAngle += PI2;\r\n  }\r\n\r\n  var angle = Math.atan2(y, x);\r\n\r\n  if (angle < 0) {\r\n    angle += PI2;\r\n  }\r\n\r\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\r\n}\r\n\r\nexports.containStroke = containStroke;","var curve = require(\"../core/curve\");\r\n\r\n/**\r\n * 三次贝塞尔曲线描边包含判断\r\n * @param  {number}  x0\r\n * @param  {number}  y0\r\n * @param  {number}  x1\r\n * @param  {number}  y1\r\n * @param  {number}  x2\r\n * @param  {number}  y2\r\n * @param  {number}  x3\r\n * @param  {number}  y3\r\n * @param  {number}  lineWidth\r\n * @param  {number}  x\r\n * @param  {number}  y\r\n * @return {boolean}\r\n */\r\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\r\n  if (lineWidth === 0) {\r\n    return false;\r\n  }\r\n\r\n  var _l = lineWidth; // Quick reject\r\n\r\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\r\n    return false;\r\n  }\r\n\r\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\r\n  return d <= _l / 2;\r\n}\r\n\r\nexports.containStroke = containStroke;","/**\r\n * 线段包含判断\r\n * @param  {number}  x0\r\n * @param  {number}  y0\r\n * @param  {number}  x1\r\n * @param  {number}  y1\r\n * @param  {number}  lineWidth\r\n * @param  {number}  x\r\n * @param  {number}  y\r\n * @return {boolean}\r\n */\r\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\r\n  if (lineWidth === 0) {\r\n    return false;\r\n  }\r\n\r\n  var _l = lineWidth;\r\n  var _a = 0;\r\n  var _b = x0; // Quick reject\r\n\r\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\r\n    return false;\r\n  }\r\n\r\n  if (x0 !== x1) {\r\n    _a = (y0 - y1) / (x0 - x1);\r\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\r\n  } else {\r\n    return Math.abs(x - x0) <= _l / 2;\r\n  }\r\n\r\n  var tmp = _a * x - y + _b;\r\n\r\n  var _s = tmp * tmp / (_a * _a + 1);\r\n\r\n  return _s <= _l / 2 * _l / 2;\r\n}\r\n\r\nexports.containStroke = containStroke;","var PathProxy = require(\"../core/PathProxy\");\r\n\r\nvar line = require(\"./line\");\r\n\r\nvar cubic = require(\"./cubic\");\r\n\r\nvar quadratic = require(\"./quadratic\");\r\n\r\nvar arc = require(\"./arc\");\r\n\r\nvar _util = require(\"./util\");\r\n\r\nvar normalizeRadian = _util.normalizeRadian;\r\n\r\nvar curve = require(\"../core/curve\");\r\n\r\nvar windingLine = require(\"./windingLine\");\r\n\r\nvar CMD = PathProxy.CMD;\r\nvar PI2 = Math.PI * 2;\r\nvar EPSILON = 1e-4;\r\n\r\nfunction isAroundEqual(a, b) {\r\n  return Math.abs(a - b) < EPSILON;\r\n} // 临时数组\r\n\r\n\r\nvar roots = [-1, -1, -1];\r\nvar extrema = [-1, -1];\r\n\r\nfunction swapExtrema() {\r\n  var tmp = extrema[0];\r\n  extrema[0] = extrema[1];\r\n  extrema[1] = tmp;\r\n}\r\n\r\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\r\n  // Quick reject\r\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\r\n    return 0;\r\n  }\r\n\r\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\r\n\r\n  if (nRoots === 0) {\r\n    return 0;\r\n  } else {\r\n    var w = 0;\r\n    var nExtrema = -1;\r\n    var y0_;\r\n    var y1_;\r\n\r\n    for (var i = 0; i < nRoots; i++) {\r\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\r\n\r\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\r\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\r\n\r\n      if (x_ < x) {\r\n        // Quick reject\r\n        continue;\r\n      }\r\n\r\n      if (nExtrema < 0) {\r\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\r\n\r\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\r\n          swapExtrema();\r\n        }\r\n\r\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\r\n\r\n        if (nExtrema > 1) {\r\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\r\n        }\r\n      }\r\n\r\n      if (nExtrema === 2) {\r\n        // 分成三段单调函数\r\n        if (t < extrema[0]) {\r\n          w += y0_ < y0 ? unit : -unit;\r\n        } else if (t < extrema[1]) {\r\n          w += y1_ < y0_ ? unit : -unit;\r\n        } else {\r\n          w += y3 < y1_ ? unit : -unit;\r\n        }\r\n      } else {\r\n        // 分成两段单调函数\r\n        if (t < extrema[0]) {\r\n          w += y0_ < y0 ? unit : -unit;\r\n        } else {\r\n          w += y3 < y0_ ? unit : -unit;\r\n        }\r\n      }\r\n    }\r\n\r\n    return w;\r\n  }\r\n}\r\n\r\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\r\n  // Quick reject\r\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\r\n    return 0;\r\n  }\r\n\r\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\r\n\r\n  if (nRoots === 0) {\r\n    return 0;\r\n  } else {\r\n    var t = curve.quadraticExtremum(y0, y1, y2);\r\n\r\n    if (t >= 0 && t <= 1) {\r\n      var w = 0;\r\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\r\n\r\n      for (var i = 0; i < nRoots; i++) {\r\n        // Remove one endpoint.\r\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\r\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\r\n\r\n        if (x_ < x) {\r\n          // Quick reject\r\n          continue;\r\n        }\r\n\r\n        if (roots[i] < t) {\r\n          w += y_ < y0 ? unit : -unit;\r\n        } else {\r\n          w += y2 < y_ ? unit : -unit;\r\n        }\r\n      }\r\n\r\n      return w;\r\n    } else {\r\n      // Remove one endpoint.\r\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\r\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\r\n\r\n      if (x_ < x) {\r\n        // Quick reject\r\n        return 0;\r\n      }\r\n\r\n      return y2 < y0 ? unit : -unit;\r\n    }\r\n  }\r\n} // TODO\r\n// Arc 旋转\r\n\r\n\r\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\r\n  y -= cy;\r\n\r\n  if (y > r || y < -r) {\r\n    return 0;\r\n  }\r\n\r\n  var tmp = Math.sqrt(r * r - y * y);\r\n  roots[0] = -tmp;\r\n  roots[1] = tmp;\r\n  var diff = Math.abs(startAngle - endAngle);\r\n\r\n  if (diff < 1e-4) {\r\n    return 0;\r\n  }\r\n\r\n  if (diff % PI2 < 1e-4) {\r\n    // Is a circle\r\n    startAngle = 0;\r\n    endAngle = PI2;\r\n    var dir = anticlockwise ? 1 : -1;\r\n\r\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\r\n      return dir;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  if (anticlockwise) {\r\n    var tmp = startAngle;\r\n    startAngle = normalizeRadian(endAngle);\r\n    endAngle = normalizeRadian(tmp);\r\n  } else {\r\n    startAngle = normalizeRadian(startAngle);\r\n    endAngle = normalizeRadian(endAngle);\r\n  }\r\n\r\n  if (startAngle > endAngle) {\r\n    endAngle += PI2;\r\n  }\r\n\r\n  var w = 0;\r\n\r\n  for (var i = 0; i < 2; i++) {\r\n    var x_ = roots[i];\r\n\r\n    if (x_ + cx > x) {\r\n      var angle = Math.atan2(y, x_);\r\n      var dir = anticlockwise ? 1 : -1;\r\n\r\n      if (angle < 0) {\r\n        angle = PI2 + angle;\r\n      }\r\n\r\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\r\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\r\n          dir = -dir;\r\n        }\r\n\r\n        w += dir;\r\n      }\r\n    }\r\n  }\r\n\r\n  return w;\r\n}\r\n\r\nfunction containPath(data, lineWidth, isStroke, x, y) {\r\n  var w = 0;\r\n  var xi = 0;\r\n  var yi = 0;\r\n  var x0 = 0;\r\n  var y0 = 0;\r\n\r\n  for (var i = 0; i < data.length;) {\r\n    var cmd = data[i++]; // Begin a new subpath\r\n\r\n    if (cmd === CMD.M && i > 1) {\r\n      // Close previous subpath\r\n      if (!isStroke) {\r\n        w += windingLine(xi, yi, x0, y0, x, y);\r\n      } // 如果被任何一个 subpath 包含\r\n      // if (w !== 0) {\r\n      //     return true;\r\n      // }\r\n\r\n    }\r\n\r\n    if (i === 1) {\r\n      // 如果第一个命令是 L, C, Q\r\n      // 则 previous point 同绘制命令的第一个 point\r\n      //\r\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\r\n      xi = data[i];\r\n      yi = data[i + 1];\r\n      x0 = xi;\r\n      y0 = yi;\r\n    }\r\n\r\n    switch (cmd) {\r\n      case CMD.M:\r\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\r\n        // 在 closePath 的时候使用\r\n        x0 = data[i++];\r\n        y0 = data[i++];\r\n        xi = x0;\r\n        yi = y0;\r\n        break;\r\n\r\n      case CMD.L:\r\n        if (isStroke) {\r\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\r\n            return true;\r\n          }\r\n        } else {\r\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\r\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\r\n        }\r\n\r\n        xi = data[i++];\r\n        yi = data[i++];\r\n        break;\r\n\r\n      case CMD.C:\r\n        if (isStroke) {\r\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\r\n            return true;\r\n          }\r\n        } else {\r\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\r\n        }\r\n\r\n        xi = data[i++];\r\n        yi = data[i++];\r\n        break;\r\n\r\n      case CMD.Q:\r\n        if (isStroke) {\r\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\r\n            return true;\r\n          }\r\n        } else {\r\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\r\n        }\r\n\r\n        xi = data[i++];\r\n        yi = data[i++];\r\n        break;\r\n\r\n      case CMD.A:\r\n        // TODO Arc 判断的开销比较大\r\n        var cx = data[i++];\r\n        var cy = data[i++];\r\n        var rx = data[i++];\r\n        var ry = data[i++];\r\n        var theta = data[i++];\r\n        var dTheta = data[i++]; // TODO Arc 旋转\r\n\r\n        i += 1;\r\n        var anticlockwise = 1 - data[i++];\r\n        var x1 = Math.cos(theta) * rx + cx;\r\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\r\n\r\n        if (i > 1) {\r\n          w += windingLine(xi, yi, x1, y1, x, y);\r\n        } else {\r\n          // 第一个命令起点还未定义\r\n          x0 = x1;\r\n          y0 = y1;\r\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\r\n\r\n\r\n        var _x = (x - cx) * ry / rx + cx;\r\n\r\n        if (isStroke) {\r\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\r\n            return true;\r\n          }\r\n        } else {\r\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\r\n        }\r\n\r\n        xi = Math.cos(theta + dTheta) * rx + cx;\r\n        yi = Math.sin(theta + dTheta) * ry + cy;\r\n        break;\r\n\r\n      case CMD.R:\r\n        x0 = xi = data[i++];\r\n        y0 = yi = data[i++];\r\n        var width = data[i++];\r\n        var height = data[i++];\r\n        var x1 = x0 + width;\r\n        var y1 = y0 + height;\r\n\r\n        if (isStroke) {\r\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\r\n            return true;\r\n          }\r\n        } else {\r\n          // FIXME Clockwise ?\r\n          w += windingLine(x1, y0, x1, y1, x, y);\r\n          w += windingLine(x0, y1, x0, y0, x, y);\r\n        }\r\n\r\n        break;\r\n\r\n      case CMD.Z:\r\n        if (isStroke) {\r\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\r\n            return true;\r\n          }\r\n        } else {\r\n          // Close a subpath\r\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\r\n          // FIXME subpaths may overlap\r\n          // if (w !== 0) {\r\n          //     return true;\r\n          // }\r\n        }\r\n\r\n        xi = x0;\r\n        yi = y0;\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (!isStroke && !isAroundEqual(yi, y0)) {\r\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\r\n  }\r\n\r\n  return w !== 0;\r\n}\r\n\r\nfunction contain(pathData, x, y) {\r\n  return containPath(pathData, 0, false, x, y);\r\n}\r\n\r\nfunction containStroke(pathData, lineWidth, x, y) {\r\n  return containPath(pathData, lineWidth, true, x, y);\r\n}\r\n\r\nexports.contain = contain;\r\nexports.containStroke = containStroke;","var windingLine = require(\"./windingLine\");\r\n\r\nvar EPSILON = 1e-8;\r\n\r\nfunction isAroundEqual(a, b) {\r\n  return Math.abs(a - b) < EPSILON;\r\n}\r\n\r\nfunction contain(points, x, y) {\r\n  var w = 0;\r\n  var p = points[0];\r\n\r\n  if (!p) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = 1; i < points.length; i++) {\r\n    var p2 = points[i];\r\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\r\n    p = p2;\r\n  } // Close polygon\r\n\r\n\r\n  var p0 = points[0];\r\n\r\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\r\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\r\n  }\r\n\r\n  return w !== 0;\r\n}\r\n\r\nexports.contain = contain;","var _curve = require(\"../core/curve\");\r\n\r\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\r\n\r\n/**\r\n * 二次贝塞尔曲线描边包含判断\r\n * @param  {number}  x0\r\n * @param  {number}  y0\r\n * @param  {number}  x1\r\n * @param  {number}  y1\r\n * @param  {number}  x2\r\n * @param  {number}  y2\r\n * @param  {number}  lineWidth\r\n * @param  {number}  x\r\n * @param  {number}  y\r\n * @return {boolean}\r\n */\r\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\r\n  if (lineWidth === 0) {\r\n    return false;\r\n  }\r\n\r\n  var _l = lineWidth; // Quick reject\r\n\r\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\r\n    return false;\r\n  }\r\n\r\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\r\n  return d <= _l / 2;\r\n}\r\n\r\nexports.containStroke = containStroke;","var BoundingRect = require(\"../core/BoundingRect\");\r\n\r\nvar imageHelper = require(\"../graphic/helper/image\");\r\n\r\nvar _util = require(\"../core/util\");\r\n\r\nvar getContext = _util.getContext;\r\nvar extend = _util.extend;\r\nvar retrieve2 = _util.retrieve2;\r\nvar retrieve3 = _util.retrieve3;\r\nvar trim = _util.trim;\r\nvar textWidthCache = {};\r\nvar textWidthCacheCounter = 0;\r\nvar TEXT_CACHE_MAX = 5000;\r\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\r\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\r\n\r\nvar methods = {};\r\n\r\nfunction $override(name, fn) {\r\n  methods[name] = fn;\r\n}\r\n/**\r\n * @public\r\n * @param {string} text\r\n * @param {string} font\r\n * @return {number} width\r\n */\r\n\r\n\r\nfunction getWidth(text, font) {\r\n  font = font || DEFAULT_FONT;\r\n  var key = text + ':' + font;\r\n\r\n  if (textWidthCache[key]) {\r\n    return textWidthCache[key];\r\n  }\r\n\r\n  var textLines = (text + '').split('\\n');\r\n  var width = 0;\r\n\r\n  for (var i = 0, l = textLines.length; i < l; i++) {\r\n    // textContain.measureText may be overrided in SVG or VML\r\n    width = Math.max(measureText(textLines[i], font).width, width);\r\n  }\r\n\r\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\r\n    textWidthCacheCounter = 0;\r\n    textWidthCache = {};\r\n  }\r\n\r\n  textWidthCacheCounter++;\r\n  textWidthCache[key] = width;\r\n  return width;\r\n}\r\n/**\r\n * @public\r\n * @param {string} text\r\n * @param {string} font\r\n * @param {string} [textAlign='left']\r\n * @param {string} [textVerticalAlign='top']\r\n * @param {Array.<number>} [textPadding]\r\n * @param {Object} [rich]\r\n * @param {Object} [truncate]\r\n * @return {Object} {x, y, width, height, lineHeight}\r\n */\r\n\r\n\r\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, rich, truncate) {\r\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, truncate);\r\n}\r\n\r\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, truncate) {\r\n  var contentBlock = parsePlainText(text, font, textPadding, textLineHeight, truncate);\r\n  var outerWidth = getWidth(text, font);\r\n\r\n  if (textPadding) {\r\n    outerWidth += textPadding[1] + textPadding[3];\r\n  }\r\n\r\n  var outerHeight = contentBlock.outerHeight;\r\n  var x = adjustTextX(0, outerWidth, textAlign);\r\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\r\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\r\n  rect.lineHeight = contentBlock.lineHeight;\r\n  return rect;\r\n}\r\n\r\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, rich, truncate) {\r\n  var contentBlock = parseRichText(text, {\r\n    rich: rich,\r\n    truncate: truncate,\r\n    font: font,\r\n    textAlign: textAlign,\r\n    textPadding: textPadding,\r\n    textLineHeight: textLineHeight\r\n  });\r\n  var outerWidth = contentBlock.outerWidth;\r\n  var outerHeight = contentBlock.outerHeight;\r\n  var x = adjustTextX(0, outerWidth, textAlign);\r\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\r\n  return new BoundingRect(x, y, outerWidth, outerHeight);\r\n}\r\n/**\r\n * @public\r\n * @param {number} x\r\n * @param {number} width\r\n * @param {string} [textAlign='left']\r\n * @return {number} Adjusted x.\r\n */\r\n\r\n\r\nfunction adjustTextX(x, width, textAlign) {\r\n  // FIXME Right to left language\r\n  if (textAlign === 'right') {\r\n    x -= width;\r\n  } else if (textAlign === 'center') {\r\n    x -= width / 2;\r\n  }\r\n\r\n  return x;\r\n}\r\n/**\r\n * @public\r\n * @param {number} y\r\n * @param {number} height\r\n * @param {string} [textVerticalAlign='top']\r\n * @return {number} Adjusted y.\r\n */\r\n\r\n\r\nfunction adjustTextY(y, height, textVerticalAlign) {\r\n  if (textVerticalAlign === 'middle') {\r\n    y -= height / 2;\r\n  } else if (textVerticalAlign === 'bottom') {\r\n    y -= height;\r\n  }\r\n\r\n  return y;\r\n}\r\n/**\r\n * Follow same interface to `Displayable.prototype.calculateTextPosition`.\r\n * @public\r\n * @param {Obejct} [out] Prepared out object. If not input, auto created in the method.\r\n * @param {module:zrender/graphic/Style} style where `textPosition` and `textDistance` are visited.\r\n * @param {Object} rect {x, y, width, height} Rect of the host elment, according to which the text positioned.\r\n * @return {Object} The input `out`. Set: {x, y, textAlign, textVerticalAlign}\r\n */\r\n\r\n\r\nfunction calculateTextPosition(out, style, rect) {\r\n  var textPosition = style.textPosition;\r\n  var distance = style.textDistance;\r\n  var x = rect.x;\r\n  var y = rect.y;\r\n  distance = distance || 0;\r\n  var height = rect.height;\r\n  var width = rect.width;\r\n  var halfHeight = height / 2;\r\n  var textAlign = 'left';\r\n  var textVerticalAlign = 'top';\r\n\r\n  switch (textPosition) {\r\n    case 'left':\r\n      x -= distance;\r\n      y += halfHeight;\r\n      textAlign = 'right';\r\n      textVerticalAlign = 'middle';\r\n      break;\r\n\r\n    case 'right':\r\n      x += distance + width;\r\n      y += halfHeight;\r\n      textVerticalAlign = 'middle';\r\n      break;\r\n\r\n    case 'top':\r\n      x += width / 2;\r\n      y -= distance;\r\n      textAlign = 'center';\r\n      textVerticalAlign = 'bottom';\r\n      break;\r\n\r\n    case 'bottom':\r\n      x += width / 2;\r\n      y += height + distance;\r\n      textAlign = 'center';\r\n      break;\r\n\r\n    case 'inside':\r\n      x += width / 2;\r\n      y += halfHeight;\r\n      textAlign = 'center';\r\n      textVerticalAlign = 'middle';\r\n      break;\r\n\r\n    case 'insideLeft':\r\n      x += distance;\r\n      y += halfHeight;\r\n      textVerticalAlign = 'middle';\r\n      break;\r\n\r\n    case 'insideRight':\r\n      x += width - distance;\r\n      y += halfHeight;\r\n      textAlign = 'right';\r\n      textVerticalAlign = 'middle';\r\n      break;\r\n\r\n    case 'insideTop':\r\n      x += width / 2;\r\n      y += distance;\r\n      textAlign = 'center';\r\n      break;\r\n\r\n    case 'insideBottom':\r\n      x += width / 2;\r\n      y += height - distance;\r\n      textAlign = 'center';\r\n      textVerticalAlign = 'bottom';\r\n      break;\r\n\r\n    case 'insideTopLeft':\r\n      x += distance;\r\n      y += distance;\r\n      break;\r\n\r\n    case 'insideTopRight':\r\n      x += width - distance;\r\n      y += distance;\r\n      textAlign = 'right';\r\n      break;\r\n\r\n    case 'insideBottomLeft':\r\n      x += distance;\r\n      y += height - distance;\r\n      textVerticalAlign = 'bottom';\r\n      break;\r\n\r\n    case 'insideBottomRight':\r\n      x += width - distance;\r\n      y += height - distance;\r\n      textAlign = 'right';\r\n      textVerticalAlign = 'bottom';\r\n      break;\r\n  }\r\n\r\n  out = out || {};\r\n  out.x = x;\r\n  out.y = y;\r\n  out.textAlign = textAlign;\r\n  out.textVerticalAlign = textVerticalAlign;\r\n  return out;\r\n}\r\n/**\r\n * To be removed. But still do not remove in case that some one has imported it.\r\n * @deprecated\r\n * @public\r\n * @param {stirng} textPosition\r\n * @param {Object} rect {x, y, width, height}\r\n * @param {number} distance\r\n * @return {Object} {x, y, textAlign, textVerticalAlign}\r\n */\r\n\r\n\r\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\r\n  var dummyStyle = {\r\n    textPosition: textPosition,\r\n    textDistance: distance\r\n  };\r\n  return calculateTextPosition({}, dummyStyle, rect);\r\n}\r\n/**\r\n * Show ellipsis if overflow.\r\n *\r\n * @public\r\n * @param  {string} text\r\n * @param  {string} containerWidth\r\n * @param  {string} font\r\n * @param  {number} [ellipsis='...']\r\n * @param  {Object} [options]\r\n * @param  {number} [options.maxIterations=3]\r\n * @param  {number} [options.minChar=0] If truncate result are less\r\n *                  then minChar, ellipsis will not show, which is\r\n *                  better for user hint in some cases.\r\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\r\n * @return {string}\r\n */\r\n\r\n\r\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\r\n  if (!containerWidth) {\r\n    return '';\r\n  }\r\n\r\n  var textLines = (text + '').split('\\n');\r\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\r\n  // It is not appropriate that every line has '...' when truncate multiple lines.\r\n\r\n  for (var i = 0, len = textLines.length; i < len; i++) {\r\n    textLines[i] = truncateSingleLine(textLines[i], options);\r\n  }\r\n\r\n  return textLines.join('\\n');\r\n}\r\n\r\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\r\n  options = extend({}, options);\r\n  options.font = font;\r\n  var ellipsis = retrieve2(ellipsis, '...');\r\n  options.maxIterations = retrieve2(options.maxIterations, 2);\r\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\r\n  // Other languages?\r\n\r\n  options.cnCharWidth = getWidth('国', font); // FIXME\r\n  // Consider proportional font?\r\n\r\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\r\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\r\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\r\n\r\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\r\n\r\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\r\n    contentWidth -= ascCharWidth;\r\n  }\r\n\r\n  var ellipsisWidth = getWidth(ellipsis, font);\r\n\r\n  if (ellipsisWidth > contentWidth) {\r\n    ellipsis = '';\r\n    ellipsisWidth = 0;\r\n  }\r\n\r\n  contentWidth = containerWidth - ellipsisWidth;\r\n  options.ellipsis = ellipsis;\r\n  options.ellipsisWidth = ellipsisWidth;\r\n  options.contentWidth = contentWidth;\r\n  options.containerWidth = containerWidth;\r\n  return options;\r\n}\r\n\r\nfunction truncateSingleLine(textLine, options) {\r\n  var containerWidth = options.containerWidth;\r\n  var font = options.font;\r\n  var contentWidth = options.contentWidth;\r\n\r\n  if (!containerWidth) {\r\n    return '';\r\n  }\r\n\r\n  var lineWidth = getWidth(textLine, font);\r\n\r\n  if (lineWidth <= containerWidth) {\r\n    return textLine;\r\n  }\r\n\r\n  for (var j = 0;; j++) {\r\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\r\n      textLine += options.ellipsis;\r\n      break;\r\n    }\r\n\r\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\r\n    textLine = textLine.substr(0, subLength);\r\n    lineWidth = getWidth(textLine, font);\r\n  }\r\n\r\n  if (textLine === '') {\r\n    textLine = options.placeholder;\r\n  }\r\n\r\n  return textLine;\r\n}\r\n\r\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\r\n  var width = 0;\r\n  var i = 0;\r\n\r\n  for (var len = text.length; i < len && width < contentWidth; i++) {\r\n    var charCode = text.charCodeAt(i);\r\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\r\n  }\r\n\r\n  return i;\r\n}\r\n/**\r\n * @public\r\n * @param {string} font\r\n * @return {number} line height\r\n */\r\n\r\n\r\nfunction getLineHeight(font) {\r\n  // FIXME A rough approach.\r\n  return getWidth('国', font);\r\n}\r\n/**\r\n * @public\r\n * @param {string} text\r\n * @param {string} font\r\n * @return {Object} width\r\n */\r\n\r\n\r\nfunction measureText(text, font) {\r\n  return methods.measureText(text, font);\r\n} // Avoid assign to an exported variable, for transforming to cjs.\r\n\r\n\r\nmethods.measureText = function (text, font) {\r\n  var ctx = getContext();\r\n  ctx.font = font || DEFAULT_FONT;\r\n  return ctx.measureText(text);\r\n};\r\n/**\r\n * @public\r\n * @param {string} text\r\n * @param {string} font\r\n * @param {Object} [truncate]\r\n * @return {Object} block: {lineHeight, lines, height, outerHeight, canCacheByTextString}\r\n *  Notice: for performance, do not calculate outerWidth util needed.\r\n *  `canCacheByTextString` means the result `lines` is only determined by the input `text`.\r\n *  Thus we can simply comparing the `input` text to determin whether the result changed,\r\n *  without travel the result `lines`.\r\n */\r\n\r\n\r\nfunction parsePlainText(text, font, padding, textLineHeight, truncate) {\r\n  text != null && (text += '');\r\n  var lineHeight = retrieve2(textLineHeight, getLineHeight(font));\r\n  var lines = text ? text.split('\\n') : [];\r\n  var height = lines.length * lineHeight;\r\n  var outerHeight = height;\r\n  var canCacheByTextString = true;\r\n\r\n  if (padding) {\r\n    outerHeight += padding[0] + padding[2];\r\n  }\r\n\r\n  if (text && truncate) {\r\n    canCacheByTextString = false;\r\n    var truncOuterHeight = truncate.outerHeight;\r\n    var truncOuterWidth = truncate.outerWidth;\r\n\r\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\r\n      text = '';\r\n      lines = [];\r\n    } else if (truncOuterWidth != null) {\r\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\r\n        minChar: truncate.minChar,\r\n        placeholder: truncate.placeholder\r\n      }); // FIXME\r\n      // It is not appropriate that every line has '...' when truncate multiple lines.\r\n\r\n      for (var i = 0, len = lines.length; i < len; i++) {\r\n        lines[i] = truncateSingleLine(lines[i], options);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    lines: lines,\r\n    height: height,\r\n    outerHeight: outerHeight,\r\n    lineHeight: lineHeight,\r\n    canCacheByTextString: canCacheByTextString\r\n  };\r\n}\r\n/**\r\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\r\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\r\n *\r\n * @public\r\n * @param {string} text\r\n * @param {Object} style\r\n * @return {Object} block\r\n * {\r\n *      width,\r\n *      height,\r\n *      lines: [{\r\n *          lineHeight,\r\n *          width,\r\n *          tokens: [[{\r\n *              styleName,\r\n *              text,\r\n *              width,      // include textPadding\r\n *              height,     // include textPadding\r\n *              textWidth, // pure text width\r\n *              textHeight, // pure text height\r\n *              lineHeihgt,\r\n *              font,\r\n *              textAlign,\r\n *              textVerticalAlign\r\n *          }], [...], ...]\r\n *      }, ...]\r\n * }\r\n * If styleName is undefined, it is plain text.\r\n */\r\n\r\n\r\nfunction parseRichText(text, style) {\r\n  var contentBlock = {\r\n    lines: [],\r\n    width: 0,\r\n    height: 0\r\n  };\r\n  text != null && (text += '');\r\n\r\n  if (!text) {\r\n    return contentBlock;\r\n  }\r\n\r\n  var lastIndex = STYLE_REG.lastIndex = 0;\r\n  var result;\r\n\r\n  while ((result = STYLE_REG.exec(text)) != null) {\r\n    var matchedIndex = result.index;\r\n\r\n    if (matchedIndex > lastIndex) {\r\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\r\n    }\r\n\r\n    pushTokens(contentBlock, result[2], result[1]);\r\n    lastIndex = STYLE_REG.lastIndex;\r\n  }\r\n\r\n  if (lastIndex < text.length) {\r\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\r\n  }\r\n\r\n  var lines = contentBlock.lines;\r\n  var contentHeight = 0;\r\n  var contentWidth = 0; // For `textWidth: 100%`\r\n\r\n  var pendingList = [];\r\n  var stlPadding = style.textPadding;\r\n  var truncate = style.truncate;\r\n  var truncateWidth = truncate && truncate.outerWidth;\r\n  var truncateHeight = truncate && truncate.outerHeight;\r\n\r\n  if (stlPadding) {\r\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\r\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\r\n  } // Calculate layout info of tokens.\r\n\r\n\r\n  for (var i = 0; i < lines.length; i++) {\r\n    var line = lines[i];\r\n    var lineHeight = 0;\r\n    var lineWidth = 0;\r\n\r\n    for (var j = 0; j < line.tokens.length; j++) {\r\n      var token = line.tokens[j];\r\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\r\n\r\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\r\n\r\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\r\n\r\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\r\n      // as box height of the block.\r\n      tokenStyle.textHeight, getLineHeight(font));\r\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\r\n      token.height = tokenHeight;\r\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\r\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\r\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\r\n\r\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\r\n        return {\r\n          lines: [],\r\n          width: 0,\r\n          height: 0\r\n        };\r\n      }\r\n\r\n      token.textWidth = getWidth(token.text, font);\r\n      var tokenWidth = tokenStyle.textWidth;\r\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\r\n      // line when box width is needed to be auto.\r\n\r\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\r\n        token.percentWidth = tokenWidth;\r\n        pendingList.push(token);\r\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\r\n        // and it is too complicated.\r\n      } else {\r\n        if (tokenWidthNotSpecified) {\r\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\r\n          // `getBoundingRect()` will not get correct result.\r\n\r\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\r\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\r\n          // (1) If image is not loaded, it will be loaded at render phase and call\r\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\r\n          // image, and then the right size will be calculated here at the next tick.\r\n          // See `graphic/helper/text.js`.\r\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\r\n          // use `imageHelper.findExistImage` to find cached image.\r\n          // `imageHelper.findExistImage` will always be called here before\r\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\r\n          // which ensures that image will not be rendered before correct size calcualted.\r\n\r\n          if (bgImg) {\r\n            bgImg = imageHelper.findExistImage(bgImg);\r\n\r\n            if (imageHelper.isImageReady(bgImg)) {\r\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\r\n            }\r\n          }\r\n        }\r\n\r\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\r\n        tokenWidth += paddingW;\r\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\r\n\r\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\r\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\r\n            token.text = '';\r\n            token.textWidth = tokenWidth = 0;\r\n          } else {\r\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\r\n              minChar: truncate.minChar\r\n            });\r\n            token.textWidth = getWidth(token.text, font);\r\n            tokenWidth = token.textWidth + paddingW;\r\n          }\r\n        }\r\n      }\r\n\r\n      lineWidth += token.width = tokenWidth;\r\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\r\n    }\r\n\r\n    line.width = lineWidth;\r\n    line.lineHeight = lineHeight;\r\n    contentHeight += lineHeight;\r\n    contentWidth = Math.max(contentWidth, lineWidth);\r\n  }\r\n\r\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\r\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\r\n\r\n  if (stlPadding) {\r\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\r\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\r\n  }\r\n\r\n  for (var i = 0; i < pendingList.length; i++) {\r\n    var token = pendingList[i];\r\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\r\n\r\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\r\n  }\r\n\r\n  return contentBlock;\r\n}\r\n\r\nfunction pushTokens(block, str, styleName) {\r\n  var isEmptyStr = str === '';\r\n  var strs = str.split('\\n');\r\n  var lines = block.lines;\r\n\r\n  for (var i = 0; i < strs.length; i++) {\r\n    var text = strs[i];\r\n    var token = {\r\n      styleName: styleName,\r\n      text: text,\r\n      isLineHolder: !text && !isEmptyStr\r\n    }; // The first token should be appended to the last line.\r\n\r\n    if (!i) {\r\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\r\n        tokens: []\r\n      })).tokens; // Consider cases:\r\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\r\n      // (which is a placeholder) should be replaced by new token.\r\n      // (2) A image backage, where token likes {a|}.\r\n      // (3) A redundant '' will affect textAlign in line.\r\n      // (4) tokens with the same tplName should not be merged, because\r\n      // they should be displayed in different box (with border and padding).\r\n\r\n      var tokensLen = tokens.length;\r\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\r\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\r\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\r\n    } // Other tokens always start a new line.\r\n    else {\r\n        // If there is '', insert it as a placeholder.\r\n        lines.push({\r\n          tokens: [token]\r\n        });\r\n      }\r\n  }\r\n}\r\n\r\nfunction makeFont(style) {\r\n  // FIXME in node-canvas fontWeight is before fontStyle\r\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\r\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\r\n  style.fontFamily || 'sans-serif'].join(' ');\r\n  return font && trim(font) || style.textFont || style.font;\r\n}\r\n\r\nexports.DEFAULT_FONT = DEFAULT_FONT;\r\nexports.$override = $override;\r\nexports.getWidth = getWidth;\r\nexports.getBoundingRect = getBoundingRect;\r\nexports.adjustTextX = adjustTextX;\r\nexports.adjustTextY = adjustTextY;\r\nexports.calculateTextPosition = calculateTextPosition;\r\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\r\nexports.truncateText = truncateText;\r\nexports.getLineHeight = getLineHeight;\r\nexports.measureText = measureText;\r\nexports.parsePlainText = parsePlainText;\r\nexports.parseRichText = parseRichText;\r\nexports.makeFont = makeFont;","var PI2 = Math.PI * 2;\r\n\r\nfunction normalizeRadian(angle) {\r\n  angle %= PI2;\r\n\r\n  if (angle < 0) {\r\n    angle += PI2;\r\n  }\r\n\r\n  return angle;\r\n}\r\n\r\nexports.normalizeRadian = normalizeRadian;","function windingLine(x0, y0, x1, y1, x, y) {\r\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\r\n    return 0;\r\n  } // Ignore horizontal line\r\n\r\n\r\n  if (y1 === y0) {\r\n    return 0;\r\n  }\r\n\r\n  var dir = y1 < y0 ? 1 : -1;\r\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\r\n\r\n  if (t === 1 || t === 0) {\r\n    dir = y1 < y0 ? 0.5 : -0.5;\r\n  }\r\n\r\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\r\n\r\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\r\n}\r\n\r\nmodule.exports = windingLine;","var zrUtil = require(\"../core/util\");\r\n\r\nvar Element = require(\"../Element\");\r\n\r\nvar BoundingRect = require(\"../core/BoundingRect\");\r\n\r\n/**\r\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\r\n * @module zrender/graphic/Group\r\n * @example\r\n *     var Group = require('zrender/container/Group');\r\n *     var Circle = require('zrender/graphic/shape/Circle');\r\n *     var g = new Group();\r\n *     g.position[0] = 100;\r\n *     g.position[1] = 100;\r\n *     g.add(new Circle({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r: 20,\r\n *         }\r\n *     }));\r\n *     zr.add(g);\r\n */\r\n\r\n/**\r\n * @alias module:zrender/graphic/Group\r\n * @constructor\r\n * @extends module:zrender/mixin/Transformable\r\n * @extends module:zrender/mixin/Eventful\r\n */\r\nvar Group = function (opts) {\r\n  opts = opts || {};\r\n  Element.call(this, opts);\r\n\r\n  for (var key in opts) {\r\n    if (opts.hasOwnProperty(key)) {\r\n      this[key] = opts[key];\r\n    }\r\n  }\r\n\r\n  this._children = [];\r\n  this.__storage = null;\r\n  this.__dirty = true;\r\n};\r\n\r\nGroup.prototype = {\r\n  constructor: Group,\r\n  isGroup: true,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  type: 'group',\r\n\r\n  /**\r\n   * 所有子孙元素是否响应鼠标事件\r\n   * @name module:/zrender/container/Group#silent\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  silent: false,\r\n\r\n  /**\r\n   * @return {Array.<module:zrender/Element>}\r\n   */\r\n  children: function () {\r\n    return this._children.slice();\r\n  },\r\n\r\n  /**\r\n   * 获取指定 index 的儿子节点\r\n   * @param  {number} idx\r\n   * @return {module:zrender/Element}\r\n   */\r\n  childAt: function (idx) {\r\n    return this._children[idx];\r\n  },\r\n\r\n  /**\r\n   * 获取指定名字的儿子节点\r\n   * @param  {string} name\r\n   * @return {module:zrender/Element}\r\n   */\r\n  childOfName: function (name) {\r\n    var children = this._children;\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      if (children[i].name === name) {\r\n        return children[i];\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  childCount: function () {\r\n    return this._children.length;\r\n  },\r\n\r\n  /**\r\n   * 添加子节点到最后\r\n   * @param {module:zrender/Element} child\r\n   */\r\n  add: function (child) {\r\n    if (child && child !== this && child.parent !== this) {\r\n      this._children.push(child);\r\n\r\n      this._doAdd(child);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 添加子节点在 nextSibling 之前\r\n   * @param {module:zrender/Element} child\r\n   * @param {module:zrender/Element} nextSibling\r\n   */\r\n  addBefore: function (child, nextSibling) {\r\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\r\n      var children = this._children;\r\n      var idx = children.indexOf(nextSibling);\r\n\r\n      if (idx >= 0) {\r\n        children.splice(idx, 0, child);\r\n\r\n        this._doAdd(child);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n  _doAdd: function (child) {\r\n    if (child.parent) {\r\n      child.parent.remove(child);\r\n    }\r\n\r\n    child.parent = this;\r\n    var storage = this.__storage;\r\n    var zr = this.__zr;\r\n\r\n    if (storage && storage !== child.__storage) {\r\n      storage.addToStorage(child);\r\n\r\n      if (child instanceof Group) {\r\n        child.addChildrenToStorage(storage);\r\n      }\r\n    }\r\n\r\n    zr && zr.refresh();\r\n  },\r\n\r\n  /**\r\n   * 移除子节点\r\n   * @param {module:zrender/Element} child\r\n   */\r\n  remove: function (child) {\r\n    var zr = this.__zr;\r\n    var storage = this.__storage;\r\n    var children = this._children;\r\n    var idx = zrUtil.indexOf(children, child);\r\n\r\n    if (idx < 0) {\r\n      return this;\r\n    }\r\n\r\n    children.splice(idx, 1);\r\n    child.parent = null;\r\n\r\n    if (storage) {\r\n      storage.delFromStorage(child);\r\n\r\n      if (child instanceof Group) {\r\n        child.delChildrenFromStorage(storage);\r\n      }\r\n    }\r\n\r\n    zr && zr.refresh();\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 移除所有子节点\r\n   */\r\n  removeAll: function () {\r\n    var children = this._children;\r\n    var storage = this.__storage;\r\n    var child;\r\n    var i;\r\n\r\n    for (i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n\r\n      if (storage) {\r\n        storage.delFromStorage(child);\r\n\r\n        if (child instanceof Group) {\r\n          child.delChildrenFromStorage(storage);\r\n        }\r\n      }\r\n\r\n      child.parent = null;\r\n    }\r\n\r\n    children.length = 0;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 遍历所有子节点\r\n   * @param  {Function} cb\r\n   * @param  {}   context\r\n   */\r\n  eachChild: function (cb, context) {\r\n    var children = this._children;\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      var child = children[i];\r\n      cb.call(context, child, i);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 深度优先遍历所有子孙节点\r\n   * @param  {Function} cb\r\n   * @param  {}   context\r\n   */\r\n  traverse: function (cb, context) {\r\n    for (var i = 0; i < this._children.length; i++) {\r\n      var child = this._children[i];\r\n      cb.call(context, child);\r\n\r\n      if (child.type === 'group') {\r\n        child.traverse(cb, context);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n  addChildrenToStorage: function (storage) {\r\n    for (var i = 0; i < this._children.length; i++) {\r\n      var child = this._children[i];\r\n      storage.addToStorage(child);\r\n\r\n      if (child instanceof Group) {\r\n        child.addChildrenToStorage(storage);\r\n      }\r\n    }\r\n  },\r\n  delChildrenFromStorage: function (storage) {\r\n    for (var i = 0; i < this._children.length; i++) {\r\n      var child = this._children[i];\r\n      storage.delFromStorage(child);\r\n\r\n      if (child instanceof Group) {\r\n        child.delChildrenFromStorage(storage);\r\n      }\r\n    }\r\n  },\r\n  dirty: function () {\r\n    this.__dirty = true;\r\n    this.__zr && this.__zr.refresh();\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  getBoundingRect: function (includeChildren) {\r\n    // TODO Caching\r\n    var rect = null;\r\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\r\n    var children = includeChildren || this._children;\r\n    var tmpMat = [];\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      var child = children[i];\r\n\r\n      if (child.ignore || child.invisible) {\r\n        continue;\r\n      }\r\n\r\n      var childRect = child.getBoundingRect();\r\n      var transform = child.getLocalTransform(tmpMat); // TODO\r\n      // The boundingRect cacluated by transforming original\r\n      // rect may be bigger than the actual bundingRect when rotation\r\n      // is used. (Consider a circle rotated aginst its center, where\r\n      // the actual boundingRect should be the same as that not be\r\n      // rotated.) But we can not find better approach to calculate\r\n      // actual boundingRect yet, considering performance.\r\n\r\n      if (transform) {\r\n        tmpRect.copy(childRect);\r\n        tmpRect.applyTransform(transform);\r\n        rect = rect || tmpRect.clone();\r\n        rect.union(tmpRect);\r\n      } else {\r\n        rect = rect || childRect.clone();\r\n        rect.union(childRect);\r\n      }\r\n    }\r\n\r\n    return rect || tmpRect;\r\n  }\r\n};\r\nzrUtil.inherits(Group, Element);\r\nvar _default = Group;\r\nmodule.exports = _default;","var vec2 = require(\"./vector\");\r\n\r\nvar matrix = require(\"./matrix\");\r\n\r\n/**\r\n * @module echarts/core/BoundingRect\r\n */\r\nvar v2ApplyTransform = vec2.applyTransform;\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max;\r\n/**\r\n * @alias module:echarts/core/BoundingRect\r\n */\r\n\r\nfunction BoundingRect(x, y, width, height) {\r\n  if (width < 0) {\r\n    x = x + width;\r\n    width = -width;\r\n  }\r\n\r\n  if (height < 0) {\r\n    y = y + height;\r\n    height = -height;\r\n  }\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  this.x = x;\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n  this.y = y;\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n  this.width = width;\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n  this.height = height;\r\n}\r\n\r\nBoundingRect.prototype = {\r\n  constructor: BoundingRect,\r\n\r\n  /**\r\n   * @param {module:echarts/core/BoundingRect} other\r\n   */\r\n  union: function (other) {\r\n    var x = mathMin(other.x, this.x);\r\n    var y = mathMin(other.y, this.y);\r\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\r\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\r\n    this.x = x;\r\n    this.y = y;\r\n  },\r\n\r\n  /**\r\n   * @param {Array.<number>} m\r\n   * @methods\r\n   */\r\n  applyTransform: function () {\r\n    var lt = [];\r\n    var rb = [];\r\n    var lb = [];\r\n    var rt = [];\r\n    return function (m) {\r\n      // In case usage like this\r\n      // el.getBoundingRect().applyTransform(el.transform)\r\n      // And element has no transform\r\n      if (!m) {\r\n        return;\r\n      }\r\n\r\n      lt[0] = lb[0] = this.x;\r\n      lt[1] = rt[1] = this.y;\r\n      rb[0] = rt[0] = this.x + this.width;\r\n      rb[1] = lb[1] = this.y + this.height;\r\n      v2ApplyTransform(lt, lt, m);\r\n      v2ApplyTransform(rb, rb, m);\r\n      v2ApplyTransform(lb, lb, m);\r\n      v2ApplyTransform(rt, rt, m);\r\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\r\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\r\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\r\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\r\n      this.width = maxX - this.x;\r\n      this.height = maxY - this.y;\r\n    };\r\n  }(),\r\n\r\n  /**\r\n   * Calculate matrix of transforming from self to target rect\r\n   * @param  {module:zrender/core/BoundingRect} b\r\n   * @return {Array.<number>}\r\n   */\r\n  calculateTransform: function (b) {\r\n    var a = this;\r\n    var sx = b.width / a.width;\r\n    var sy = b.height / a.height;\r\n    var m = matrix.create(); // 矩阵右乘\r\n\r\n    matrix.translate(m, m, [-a.x, -a.y]);\r\n    matrix.scale(m, m, [sx, sy]);\r\n    matrix.translate(m, m, [b.x, b.y]);\r\n    return m;\r\n  },\r\n\r\n  /**\r\n   * @param {(module:echarts/core/BoundingRect|Object)} b\r\n   * @return {boolean}\r\n   */\r\n  intersect: function (b) {\r\n    if (!b) {\r\n      return false;\r\n    }\r\n\r\n    if (!(b instanceof BoundingRect)) {\r\n      // Normalize negative width/height.\r\n      b = BoundingRect.create(b);\r\n    }\r\n\r\n    var a = this;\r\n    var ax0 = a.x;\r\n    var ax1 = a.x + a.width;\r\n    var ay0 = a.y;\r\n    var ay1 = a.y + a.height;\r\n    var bx0 = b.x;\r\n    var bx1 = b.x + b.width;\r\n    var by0 = b.y;\r\n    var by1 = b.y + b.height;\r\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\r\n  },\r\n  contain: function (x, y) {\r\n    var rect = this;\r\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\r\n  },\r\n\r\n  /**\r\n   * @return {module:echarts/core/BoundingRect}\r\n   */\r\n  clone: function () {\r\n    return new BoundingRect(this.x, this.y, this.width, this.height);\r\n  },\r\n\r\n  /**\r\n   * Copy from another rect\r\n   */\r\n  copy: function (other) {\r\n    this.x = other.x;\r\n    this.y = other.y;\r\n    this.width = other.width;\r\n    this.height = other.height;\r\n  },\r\n  plain: function () {\r\n    return {\r\n      x: this.x,\r\n      y: this.y,\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n  }\r\n};\r\n/**\r\n * @param {Object|module:zrender/core/BoundingRect} rect\r\n * @param {number} rect.x\r\n * @param {number} rect.y\r\n * @param {number} rect.width\r\n * @param {number} rect.height\r\n * @return {module:zrender/core/BoundingRect}\r\n */\r\n\r\nBoundingRect.create = function (rect) {\r\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\r\n};\r\n\r\nvar _default = BoundingRect;\r\nmodule.exports = _default;","var eventUtil = require(\"./event\");\r\n\r\n/**\r\n * Only implements needed gestures for mobile.\r\n */\r\nvar GestureMgr = function () {\r\n  /**\r\n   * @private\r\n   * @type {Array.<Object>}\r\n   */\r\n  this._track = [];\r\n};\r\n\r\nGestureMgr.prototype = {\r\n  constructor: GestureMgr,\r\n  recognize: function (event, target, root) {\r\n    this._doTrack(event, target, root);\r\n\r\n    return this._recognize(event);\r\n  },\r\n  clear: function () {\r\n    this._track.length = 0;\r\n    return this;\r\n  },\r\n  _doTrack: function (event, target, root) {\r\n    var touches = event.touches;\r\n\r\n    if (!touches) {\r\n      return;\r\n    }\r\n\r\n    var trackItem = {\r\n      points: [],\r\n      touches: [],\r\n      target: target,\r\n      event: event\r\n    };\r\n\r\n    for (var i = 0, len = touches.length; i < len; i++) {\r\n      var touch = touches[i];\r\n      var pos = eventUtil.clientToLocal(root, touch, {});\r\n      trackItem.points.push([pos.zrX, pos.zrY]);\r\n      trackItem.touches.push(touch);\r\n    }\r\n\r\n    this._track.push(trackItem);\r\n  },\r\n  _recognize: function (event) {\r\n    for (var eventName in recognizers) {\r\n      if (recognizers.hasOwnProperty(eventName)) {\r\n        var gestureInfo = recognizers[eventName](this._track, event);\r\n\r\n        if (gestureInfo) {\r\n          return gestureInfo;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction dist(pointPair) {\r\n  var dx = pointPair[1][0] - pointPair[0][0];\r\n  var dy = pointPair[1][1] - pointPair[0][1];\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\nfunction center(pointPair) {\r\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\r\n}\r\n\r\nvar recognizers = {\r\n  pinch: function (track, event) {\r\n    var trackLen = track.length;\r\n\r\n    if (!trackLen) {\r\n      return;\r\n    }\r\n\r\n    var pinchEnd = (track[trackLen - 1] || {}).points;\r\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\r\n\r\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\r\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\r\n      !isFinite(pinchScale) && (pinchScale = 1);\r\n      event.pinchScale = pinchScale;\r\n      var pinchCenter = center(pinchEnd);\r\n      event.pinchX = pinchCenter[0];\r\n      event.pinchY = pinchCenter[1];\r\n      return {\r\n        type: 'pinch',\r\n        target: track[0].target,\r\n        event: event\r\n      };\r\n    }\r\n  } // Only pinch currently.\r\n\r\n};\r\nvar _default = GestureMgr;\r\nmodule.exports = _default;","// Simple LRU cache use doubly linked list\r\n// @module zrender/core/LRU\r\n\r\n/**\r\n * Simple double linked list. Compared with array, it has O(1) remove operation.\r\n * @constructor\r\n */\r\nvar LinkedList = function () {\r\n  /**\r\n   * @type {module:zrender/core/LRU~Entry}\r\n   */\r\n  this.head = null;\r\n  /**\r\n   * @type {module:zrender/core/LRU~Entry}\r\n   */\r\n\r\n  this.tail = null;\r\n  this._len = 0;\r\n};\r\n\r\nvar linkedListProto = LinkedList.prototype;\r\n/**\r\n * Insert a new value at the tail\r\n * @param  {} val\r\n * @return {module:zrender/core/LRU~Entry}\r\n */\r\n\r\nlinkedListProto.insert = function (val) {\r\n  var entry = new Entry(val);\r\n  this.insertEntry(entry);\r\n  return entry;\r\n};\r\n/**\r\n * Insert an entry at the tail\r\n * @param  {module:zrender/core/LRU~Entry} entry\r\n */\r\n\r\n\r\nlinkedListProto.insertEntry = function (entry) {\r\n  if (!this.head) {\r\n    this.head = this.tail = entry;\r\n  } else {\r\n    this.tail.next = entry;\r\n    entry.prev = this.tail;\r\n    entry.next = null;\r\n    this.tail = entry;\r\n  }\r\n\r\n  this._len++;\r\n};\r\n/**\r\n * Remove entry.\r\n * @param  {module:zrender/core/LRU~Entry} entry\r\n */\r\n\r\n\r\nlinkedListProto.remove = function (entry) {\r\n  var prev = entry.prev;\r\n  var next = entry.next;\r\n\r\n  if (prev) {\r\n    prev.next = next;\r\n  } else {\r\n    // Is head\r\n    this.head = next;\r\n  }\r\n\r\n  if (next) {\r\n    next.prev = prev;\r\n  } else {\r\n    // Is tail\r\n    this.tail = prev;\r\n  }\r\n\r\n  entry.next = entry.prev = null;\r\n  this._len--;\r\n};\r\n/**\r\n * @return {number}\r\n */\r\n\r\n\r\nlinkedListProto.len = function () {\r\n  return this._len;\r\n};\r\n/**\r\n * Clear list\r\n */\r\n\r\n\r\nlinkedListProto.clear = function () {\r\n  this.head = this.tail = null;\r\n  this._len = 0;\r\n};\r\n/**\r\n * @constructor\r\n * @param {} val\r\n */\r\n\r\n\r\nvar Entry = function (val) {\r\n  /**\r\n   * @type {}\r\n   */\r\n  this.value = val;\r\n  /**\r\n   * @type {module:zrender/core/LRU~Entry}\r\n   */\r\n\r\n  this.next;\r\n  /**\r\n   * @type {module:zrender/core/LRU~Entry}\r\n   */\r\n\r\n  this.prev;\r\n};\r\n/**\r\n * LRU Cache\r\n * @constructor\r\n * @alias module:zrender/core/LRU\r\n */\r\n\r\n\r\nvar LRU = function (maxSize) {\r\n  this._list = new LinkedList();\r\n  this._map = {};\r\n  this._maxSize = maxSize || 10;\r\n  this._lastRemovedEntry = null;\r\n};\r\n\r\nvar LRUProto = LRU.prototype;\r\n/**\r\n * @param  {string} key\r\n * @param  {} value\r\n * @return {} Removed value\r\n */\r\n\r\nLRUProto.put = function (key, value) {\r\n  var list = this._list;\r\n  var map = this._map;\r\n  var removed = null;\r\n\r\n  if (map[key] == null) {\r\n    var len = list.len(); // Reuse last removed entry\r\n\r\n    var entry = this._lastRemovedEntry;\r\n\r\n    if (len >= this._maxSize && len > 0) {\r\n      // Remove the least recently used\r\n      var leastUsedEntry = list.head;\r\n      list.remove(leastUsedEntry);\r\n      delete map[leastUsedEntry.key];\r\n      removed = leastUsedEntry.value;\r\n      this._lastRemovedEntry = leastUsedEntry;\r\n    }\r\n\r\n    if (entry) {\r\n      entry.value = value;\r\n    } else {\r\n      entry = new Entry(value);\r\n    }\r\n\r\n    entry.key = key;\r\n    list.insertEntry(entry);\r\n    map[key] = entry;\r\n  }\r\n\r\n  return removed;\r\n};\r\n/**\r\n * @param  {string} key\r\n * @return {}\r\n */\r\n\r\n\r\nLRUProto.get = function (key) {\r\n  var entry = this._map[key];\r\n  var list = this._list;\r\n\r\n  if (entry != null) {\r\n    // Put the latest used entry in the tail\r\n    if (entry !== list.tail) {\r\n      list.remove(entry);\r\n      list.insertEntry(entry);\r\n    }\r\n\r\n    return entry.value;\r\n  }\r\n};\r\n/**\r\n * Clear the cache\r\n */\r\n\r\n\r\nLRUProto.clear = function () {\r\n  this._list.clear();\r\n\r\n  this._map = {};\r\n};\r\n\r\nvar _default = LRU;\r\nmodule.exports = _default;","var curve = require(\"./curve\");\r\n\r\nvar vec2 = require(\"./vector\");\r\n\r\nvar bbox = require(\"./bbox\");\r\n\r\nvar BoundingRect = require(\"./BoundingRect\");\r\n\r\nvar _config = require(\"../config\");\r\n\r\nvar dpr = _config.devicePixelRatio;\r\n\r\n/**\r\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\r\n * 可以用于 isInsidePath 判断以及获取boundingRect\r\n *\r\n * @module zrender/core/PathProxy\r\n * @author Yi Shen (http://www.github.com/pissang)\r\n */\r\n// TODO getTotalLength, getPointAtLength\r\n\r\n/* global Float32Array */\r\nvar CMD = {\r\n  M: 1,\r\n  L: 2,\r\n  C: 3,\r\n  Q: 4,\r\n  A: 5,\r\n  Z: 6,\r\n  // Rect\r\n  R: 7\r\n}; // var CMD_MEM_SIZE = {\r\n//     M: 3,\r\n//     L: 3,\r\n//     C: 7,\r\n//     Q: 5,\r\n//     A: 9,\r\n//     R: 5,\r\n//     Z: 1\r\n// };\r\n\r\nvar min = [];\r\nvar max = [];\r\nvar min2 = [];\r\nvar max2 = [];\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max;\r\nvar mathCos = Math.cos;\r\nvar mathSin = Math.sin;\r\nvar mathSqrt = Math.sqrt;\r\nvar mathAbs = Math.abs;\r\nvar hasTypedArray = typeof Float32Array !== 'undefined';\r\n/**\r\n * @alias module:zrender/core/PathProxy\r\n * @constructor\r\n */\r\n\r\nvar PathProxy = function (notSaveData) {\r\n  this._saveData = !(notSaveData || false);\r\n\r\n  if (this._saveData) {\r\n    /**\r\n     * Path data. Stored as flat array\r\n     * @type {Array.<Object>}\r\n     */\r\n    this.data = [];\r\n  }\r\n\r\n  this._ctx = null;\r\n};\r\n/**\r\n * 快速计算Path包围盒（并不是最小包围盒）\r\n * @return {Object}\r\n */\r\n\r\n\r\nPathProxy.prototype = {\r\n  constructor: PathProxy,\r\n  _xi: 0,\r\n  _yi: 0,\r\n  _x0: 0,\r\n  _y0: 0,\r\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\r\n  _ux: 0,\r\n  _uy: 0,\r\n  _len: 0,\r\n  _lineDash: null,\r\n  _dashOffset: 0,\r\n  _dashIdx: 0,\r\n  _dashSum: 0,\r\n\r\n  /**\r\n   * @readOnly\r\n   */\r\n  setScale: function (sx, sy, segmentIgnoreThreshold) {\r\n    // Compat. Previously there is no segmentIgnoreThreshold.\r\n    segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\r\n    this._ux = mathAbs(segmentIgnoreThreshold / dpr / sx) || 0;\r\n    this._uy = mathAbs(segmentIgnoreThreshold / dpr / sy) || 0;\r\n  },\r\n  getContext: function () {\r\n    return this._ctx;\r\n  },\r\n\r\n  /**\r\n   * @param  {CanvasRenderingContext2D} ctx\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  beginPath: function (ctx) {\r\n    this._ctx = ctx;\r\n    ctx && ctx.beginPath();\r\n    ctx && (this.dpr = ctx.dpr); // Reset\r\n\r\n    if (this._saveData) {\r\n      this._len = 0;\r\n    }\r\n\r\n    if (this._lineDash) {\r\n      this._lineDash = null;\r\n      this._dashOffset = 0;\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @param  {number} x\r\n   * @param  {number} y\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  moveTo: function (x, y) {\r\n    this.addData(CMD.M, x, y);\r\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\r\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\r\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\r\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\r\n\r\n    this._x0 = x;\r\n    this._y0 = y;\r\n    this._xi = x;\r\n    this._yi = y;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @param  {number} x\r\n   * @param  {number} y\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  lineTo: function (x, y) {\r\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\r\n    || this._len < 5;\r\n    this.addData(CMD.L, x, y);\r\n\r\n    if (this._ctx && exceedUnit) {\r\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\r\n    }\r\n\r\n    if (exceedUnit) {\r\n      this._xi = x;\r\n      this._yi = y;\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @param  {number} x1\r\n   * @param  {number} y1\r\n   * @param  {number} x2\r\n   * @param  {number} y2\r\n   * @param  {number} x3\r\n   * @param  {number} y3\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\r\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\r\n\r\n    if (this._ctx) {\r\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\r\n    }\r\n\r\n    this._xi = x3;\r\n    this._yi = y3;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @param  {number} x1\r\n   * @param  {number} y1\r\n   * @param  {number} x2\r\n   * @param  {number} y2\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  quadraticCurveTo: function (x1, y1, x2, y2) {\r\n    this.addData(CMD.Q, x1, y1, x2, y2);\r\n\r\n    if (this._ctx) {\r\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\r\n    }\r\n\r\n    this._xi = x2;\r\n    this._yi = y2;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @param  {number} cx\r\n   * @param  {number} cy\r\n   * @param  {number} r\r\n   * @param  {number} startAngle\r\n   * @param  {number} endAngle\r\n   * @param  {boolean} anticlockwise\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\r\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\r\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\r\n    this._xi = mathCos(endAngle) * r + cx;\r\n    this._yi = mathSin(endAngle) * r + cy;\r\n    return this;\r\n  },\r\n  // TODO\r\n  arcTo: function (x1, y1, x2, y2, radius) {\r\n    if (this._ctx) {\r\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\r\n    }\r\n\r\n    return this;\r\n  },\r\n  // TODO\r\n  rect: function (x, y, w, h) {\r\n    this._ctx && this._ctx.rect(x, y, w, h);\r\n    this.addData(CMD.R, x, y, w, h);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  closePath: function () {\r\n    this.addData(CMD.Z);\r\n    var ctx = this._ctx;\r\n    var x0 = this._x0;\r\n    var y0 = this._y0;\r\n\r\n    if (ctx) {\r\n      this._needsDash() && this._dashedLineTo(x0, y0);\r\n      ctx.closePath();\r\n    }\r\n\r\n    this._xi = x0;\r\n    this._yi = y0;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\r\n   * stroke 同样\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  fill: function (ctx) {\r\n    ctx && ctx.fill();\r\n    this.toStatic();\r\n  },\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  stroke: function (ctx) {\r\n    ctx && ctx.stroke();\r\n    this.toStatic();\r\n  },\r\n\r\n  /**\r\n   * 必须在其它绘制命令前调用\r\n   * Must be invoked before all other path drawing methods\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  setLineDash: function (lineDash) {\r\n    if (lineDash instanceof Array) {\r\n      this._lineDash = lineDash;\r\n      this._dashIdx = 0;\r\n      var lineDashSum = 0;\r\n\r\n      for (var i = 0; i < lineDash.length; i++) {\r\n        lineDashSum += lineDash[i];\r\n      }\r\n\r\n      this._dashSum = lineDashSum;\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 必须在其它绘制命令前调用\r\n   * Must be invoked before all other path drawing methods\r\n   * @return {module:zrender/core/PathProxy}\r\n   */\r\n  setLineDashOffset: function (offset) {\r\n    this._dashOffset = offset;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  len: function () {\r\n    return this._len;\r\n  },\r\n\r\n  /**\r\n   * 直接设置 Path 数据\r\n   */\r\n  setData: function (data) {\r\n    var len = data.length;\r\n\r\n    if (!(this.data && this.data.length === len) && hasTypedArray) {\r\n      this.data = new Float32Array(len);\r\n    }\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      this.data[i] = data[i];\r\n    }\r\n\r\n    this._len = len;\r\n  },\r\n\r\n  /**\r\n   * 添加子路径\r\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\r\n   */\r\n  appendPath: function (path) {\r\n    if (!(path instanceof Array)) {\r\n      path = [path];\r\n    }\r\n\r\n    var len = path.length;\r\n    var appendSize = 0;\r\n    var offset = this._len;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      appendSize += path[i].len();\r\n    }\r\n\r\n    if (hasTypedArray && this.data instanceof Float32Array) {\r\n      this.data = new Float32Array(offset + appendSize);\r\n    }\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      var appendPathData = path[i].data;\r\n\r\n      for (var k = 0; k < appendPathData.length; k++) {\r\n        this.data[offset++] = appendPathData[k];\r\n      }\r\n    }\r\n\r\n    this._len = offset;\r\n  },\r\n\r\n  /**\r\n   * 填充 Path 数据。\r\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\r\n   */\r\n  addData: function (cmd) {\r\n    if (!this._saveData) {\r\n      return;\r\n    }\r\n\r\n    var data = this.data;\r\n\r\n    if (this._len + arguments.length > data.length) {\r\n      // 因为之前的数组已经转换成静态的 Float32Array\r\n      // 所以不够用时需要扩展一个新的动态数组\r\n      this._expandData();\r\n\r\n      data = this.data;\r\n    }\r\n\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      data[this._len++] = arguments[i];\r\n    }\r\n\r\n    this._prevCmd = cmd;\r\n  },\r\n  _expandData: function () {\r\n    // Only if data is Float32Array\r\n    if (!(this.data instanceof Array)) {\r\n      var newData = [];\r\n\r\n      for (var i = 0; i < this._len; i++) {\r\n        newData[i] = this.data[i];\r\n      }\r\n\r\n      this.data = newData;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * If needs js implemented dashed line\r\n   * @return {boolean}\r\n   * @private\r\n   */\r\n  _needsDash: function () {\r\n    return this._lineDash;\r\n  },\r\n  _dashedLineTo: function (x1, y1) {\r\n    var dashSum = this._dashSum;\r\n    var offset = this._dashOffset;\r\n    var lineDash = this._lineDash;\r\n    var ctx = this._ctx;\r\n    var x0 = this._xi;\r\n    var y0 = this._yi;\r\n    var dx = x1 - x0;\r\n    var dy = y1 - y0;\r\n    var dist = mathSqrt(dx * dx + dy * dy);\r\n    var x = x0;\r\n    var y = y0;\r\n    var dash;\r\n    var nDash = lineDash.length;\r\n    var idx;\r\n    dx /= dist;\r\n    dy /= dist;\r\n\r\n    if (offset < 0) {\r\n      // Convert to positive offset\r\n      offset = dashSum + offset;\r\n    }\r\n\r\n    offset %= dashSum;\r\n    x -= offset * dx;\r\n    y -= offset * dy;\r\n\r\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx === 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\r\n      idx = this._dashIdx;\r\n      dash = lineDash[idx];\r\n      x += dx * dash;\r\n      y += dy * dash;\r\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\r\n\r\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\r\n        continue;\r\n      }\r\n\r\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\r\n    } // Offset for next lineTo\r\n\r\n\r\n    dx = x - x1;\r\n    dy = y - y1;\r\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\r\n  },\r\n  // Not accurate dashed line to\r\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\r\n    var dashSum = this._dashSum;\r\n    var offset = this._dashOffset;\r\n    var lineDash = this._lineDash;\r\n    var ctx = this._ctx;\r\n    var x0 = this._xi;\r\n    var y0 = this._yi;\r\n    var t;\r\n    var dx;\r\n    var dy;\r\n    var cubicAt = curve.cubicAt;\r\n    var bezierLen = 0;\r\n    var idx = this._dashIdx;\r\n    var nDash = lineDash.length;\r\n    var x;\r\n    var y;\r\n    var tmpLen = 0;\r\n\r\n    if (offset < 0) {\r\n      // Convert to positive offset\r\n      offset = dashSum + offset;\r\n    }\r\n\r\n    offset %= dashSum; // Bezier approx length\r\n\r\n    for (t = 0; t < 1; t += 0.1) {\r\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\r\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\r\n      bezierLen += mathSqrt(dx * dx + dy * dy);\r\n    } // Find idx after add offset\r\n\r\n\r\n    for (; idx < nDash; idx++) {\r\n      tmpLen += lineDash[idx];\r\n\r\n      if (tmpLen > offset) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    t = (tmpLen - offset) / bezierLen;\r\n\r\n    while (t <= 1) {\r\n      x = cubicAt(x0, x1, x2, x3, t);\r\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\r\n      // Bad result if dash is long\r\n\r\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\r\n      t += lineDash[idx] / bezierLen;\r\n      idx = (idx + 1) % nDash;\r\n    } // Finish the last segment and calculate the new offset\r\n\r\n\r\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\r\n    dx = x3 - x;\r\n    dy = y3 - y;\r\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\r\n  },\r\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\r\n    // Convert quadratic to cubic using degree elevation\r\n    var x3 = x2;\r\n    var y3 = y2;\r\n    x2 = (x2 + 2 * x1) / 3;\r\n    y2 = (y2 + 2 * y1) / 3;\r\n    x1 = (this._xi + 2 * x1) / 3;\r\n    y1 = (this._yi + 2 * y1) / 3;\r\n\r\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\r\n  },\r\n\r\n  /**\r\n   * 转成静态的 Float32Array 减少堆内存占用\r\n   * Convert dynamic array to static Float32Array\r\n   */\r\n  toStatic: function () {\r\n    var data = this.data;\r\n\r\n    if (data instanceof Array) {\r\n      data.length = this._len;\r\n\r\n      if (hasTypedArray) {\r\n        this.data = new Float32Array(data);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  getBoundingRect: function () {\r\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\r\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\r\n    var data = this.data;\r\n    var xi = 0;\r\n    var yi = 0;\r\n    var x0 = 0;\r\n    var y0 = 0;\r\n\r\n    for (var i = 0; i < data.length;) {\r\n      var cmd = data[i++];\r\n\r\n      if (i === 1) {\r\n        // 如果第一个命令是 L, C, Q\r\n        // 则 previous point 同绘制命令的第一个 point\r\n        //\r\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\r\n        xi = data[i];\r\n        yi = data[i + 1];\r\n        x0 = xi;\r\n        y0 = yi;\r\n      }\r\n\r\n      switch (cmd) {\r\n        case CMD.M:\r\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\r\n          // 在 closePath 的时候使用\r\n          x0 = data[i++];\r\n          y0 = data[i++];\r\n          xi = x0;\r\n          yi = y0;\r\n          min2[0] = x0;\r\n          min2[1] = y0;\r\n          max2[0] = x0;\r\n          max2[1] = y0;\r\n          break;\r\n\r\n        case CMD.L:\r\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          break;\r\n\r\n        case CMD.C:\r\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          break;\r\n\r\n        case CMD.Q:\r\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          break;\r\n\r\n        case CMD.A:\r\n          // TODO Arc 判断的开销比较大\r\n          var cx = data[i++];\r\n          var cy = data[i++];\r\n          var rx = data[i++];\r\n          var ry = data[i++];\r\n          var startAngle = data[i++];\r\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\r\n\r\n          i += 1;\r\n          var anticlockwise = 1 - data[i++];\r\n\r\n          if (i === 1) {\r\n            // 直接使用 arc 命令\r\n            // 第一个命令起点还未定义\r\n            x0 = mathCos(startAngle) * rx + cx;\r\n            y0 = mathSin(startAngle) * ry + cy;\r\n          }\r\n\r\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\r\n          xi = mathCos(endAngle) * rx + cx;\r\n          yi = mathSin(endAngle) * ry + cy;\r\n          break;\r\n\r\n        case CMD.R:\r\n          x0 = xi = data[i++];\r\n          y0 = yi = data[i++];\r\n          var width = data[i++];\r\n          var height = data[i++]; // Use fromLine\r\n\r\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\r\n          break;\r\n\r\n        case CMD.Z:\r\n          xi = x0;\r\n          yi = y0;\r\n          break;\r\n      } // Union\r\n\r\n\r\n      vec2.min(min, min, min2);\r\n      vec2.max(max, max, max2);\r\n    } // No data\r\n\r\n\r\n    if (i === 0) {\r\n      min[0] = min[1] = max[0] = max[1] = 0;\r\n    }\r\n\r\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\r\n  },\r\n\r\n  /**\r\n   * Rebuild path from current data\r\n   * Rebuild path will not consider javascript implemented line dash.\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   */\r\n  rebuildPath: function (ctx) {\r\n    var d = this.data;\r\n    var x0;\r\n    var y0;\r\n    var xi;\r\n    var yi;\r\n    var x;\r\n    var y;\r\n    var ux = this._ux;\r\n    var uy = this._uy;\r\n    var len = this._len;\r\n\r\n    for (var i = 0; i < len;) {\r\n      var cmd = d[i++];\r\n\r\n      if (i === 1) {\r\n        // 如果第一个命令是 L, C, Q\r\n        // 则 previous point 同绘制命令的第一个 point\r\n        //\r\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\r\n        xi = d[i];\r\n        yi = d[i + 1];\r\n        x0 = xi;\r\n        y0 = yi;\r\n      }\r\n\r\n      switch (cmd) {\r\n        case CMD.M:\r\n          x0 = xi = d[i++];\r\n          y0 = yi = d[i++];\r\n          ctx.moveTo(xi, yi);\r\n          break;\r\n\r\n        case CMD.L:\r\n          x = d[i++];\r\n          y = d[i++]; // Not draw too small seg between\r\n\r\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\r\n            ctx.lineTo(x, y);\r\n            xi = x;\r\n            yi = y;\r\n          }\r\n\r\n          break;\r\n\r\n        case CMD.C:\r\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\r\n          xi = d[i - 2];\r\n          yi = d[i - 1];\r\n          break;\r\n\r\n        case CMD.Q:\r\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\r\n          xi = d[i - 2];\r\n          yi = d[i - 1];\r\n          break;\r\n\r\n        case CMD.A:\r\n          var cx = d[i++];\r\n          var cy = d[i++];\r\n          var rx = d[i++];\r\n          var ry = d[i++];\r\n          var theta = d[i++];\r\n          var dTheta = d[i++];\r\n          var psi = d[i++];\r\n          var fs = d[i++];\r\n          var r = rx > ry ? rx : ry;\r\n          var scaleX = rx > ry ? 1 : rx / ry;\r\n          var scaleY = rx > ry ? ry / rx : 1;\r\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\r\n          var endAngle = theta + dTheta;\r\n\r\n          if (isEllipse) {\r\n            ctx.translate(cx, cy);\r\n            ctx.rotate(psi);\r\n            ctx.scale(scaleX, scaleY);\r\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\r\n            ctx.scale(1 / scaleX, 1 / scaleY);\r\n            ctx.rotate(-psi);\r\n            ctx.translate(-cx, -cy);\r\n          } else {\r\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\r\n          }\r\n\r\n          if (i === 1) {\r\n            // 直接使用 arc 命令\r\n            // 第一个命令起点还未定义\r\n            x0 = mathCos(theta) * rx + cx;\r\n            y0 = mathSin(theta) * ry + cy;\r\n          }\r\n\r\n          xi = mathCos(endAngle) * rx + cx;\r\n          yi = mathSin(endAngle) * ry + cy;\r\n          break;\r\n\r\n        case CMD.R:\r\n          x0 = xi = d[i];\r\n          y0 = yi = d[i + 1];\r\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\r\n          break;\r\n\r\n        case CMD.Z:\r\n          ctx.closePath();\r\n          xi = x0;\r\n          yi = y0;\r\n      }\r\n    }\r\n  }\r\n};\r\nPathProxy.CMD = CMD;\r\nvar _default = PathProxy;\r\nmodule.exports = _default;","// Myers' Diff Algorithm\r\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\r\nfunction Diff() {}\r\n\r\nDiff.prototype = {\r\n  diff: function (oldArr, newArr, equals) {\r\n    if (!equals) {\r\n      equals = function (a, b) {\r\n        return a === b;\r\n      };\r\n    }\r\n\r\n    this.equals = equals;\r\n    var self = this;\r\n    oldArr = oldArr.slice();\r\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\r\n\r\n    var newLen = newArr.length;\r\n    var oldLen = oldArr.length;\r\n    var editLength = 1;\r\n    var maxEditLength = newLen + oldLen;\r\n    var bestPath = [{\r\n      newPos: -1,\r\n      components: []\r\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\r\n\r\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\r\n\r\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\r\n      var indices = [];\r\n\r\n      for (var i = 0; i < newArr.length; i++) {\r\n        indices.push(i);\r\n      } // Identity per the equality and tokenizer\r\n\r\n\r\n      return [{\r\n        indices: indices,\r\n        count: newArr.length\r\n      }];\r\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\r\n\r\n\r\n    function execEditLength() {\r\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\r\n        var basePath;\r\n        var addPath = bestPath[diagonalPath - 1];\r\n        var removePath = bestPath[diagonalPath + 1];\r\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\r\n\r\n        if (addPath) {\r\n          // No one else is going to attempt to use this value, clear it\r\n          bestPath[diagonalPath - 1] = undefined;\r\n        }\r\n\r\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\r\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\r\n\r\n        if (!canAdd && !canRemove) {\r\n          // If this path is a terminal then prune\r\n          bestPath[diagonalPath] = undefined;\r\n          continue;\r\n        } // Select the diagonal that we want to branch from. We select the prior\r\n        // path whose position in the new string is the farthest from the origin\r\n        // and does not pass the bounds of the diff graph\r\n\r\n\r\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\r\n          basePath = clonePath(removePath);\r\n          self.pushComponent(basePath.components, undefined, true);\r\n        } else {\r\n          basePath = addPath; // No need to clone, we've pulled it from the list\r\n\r\n          basePath.newPos++;\r\n          self.pushComponent(basePath.components, true, undefined);\r\n        }\r\n\r\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\r\n\r\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\r\n          return buildValues(self, basePath.components, newArr, oldArr);\r\n        } else {\r\n          // Otherwise track this path as a potential candidate and continue.\r\n          bestPath[diagonalPath] = basePath;\r\n        }\r\n      }\r\n\r\n      editLength++;\r\n    }\r\n\r\n    while (editLength <= maxEditLength) {\r\n      var ret = execEditLength();\r\n\r\n      if (ret) {\r\n        return ret;\r\n      }\r\n    }\r\n  },\r\n  pushComponent: function (components, added, removed) {\r\n    var last = components[components.length - 1];\r\n\r\n    if (last && last.added === added && last.removed === removed) {\r\n      // We need to clone here as the component clone operation is just\r\n      // as shallow array clone\r\n      components[components.length - 1] = {\r\n        count: last.count + 1,\r\n        added: added,\r\n        removed: removed\r\n      };\r\n    } else {\r\n      components.push({\r\n        count: 1,\r\n        added: added,\r\n        removed: removed\r\n      });\r\n    }\r\n  },\r\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\r\n    var newLen = newArr.length;\r\n    var oldLen = oldArr.length;\r\n    var newPos = basePath.newPos;\r\n    var oldPos = newPos - diagonalPath;\r\n    var commonCount = 0;\r\n\r\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\r\n      newPos++;\r\n      oldPos++;\r\n      commonCount++;\r\n    }\r\n\r\n    if (commonCount) {\r\n      basePath.components.push({\r\n        count: commonCount\r\n      });\r\n    }\r\n\r\n    basePath.newPos = newPos;\r\n    return oldPos;\r\n  },\r\n  tokenize: function (value) {\r\n    return value.slice();\r\n  },\r\n  join: function (value) {\r\n    return value.slice();\r\n  }\r\n};\r\n\r\nfunction buildValues(diff, components, newArr, oldArr) {\r\n  var componentPos = 0;\r\n  var componentLen = components.length;\r\n  var newPos = 0;\r\n  var oldPos = 0;\r\n\r\n  for (; componentPos < componentLen; componentPos++) {\r\n    var component = components[componentPos];\r\n\r\n    if (!component.removed) {\r\n      var indices = [];\r\n\r\n      for (var i = newPos; i < newPos + component.count; i++) {\r\n        indices.push(i);\r\n      }\r\n\r\n      component.indices = indices;\r\n      newPos += component.count; // Common case\r\n\r\n      if (!component.added) {\r\n        oldPos += component.count;\r\n      }\r\n    } else {\r\n      var indices = [];\r\n\r\n      for (var i = oldPos; i < oldPos + component.count; i++) {\r\n        indices.push(i);\r\n      }\r\n\r\n      component.indices = indices;\r\n      oldPos += component.count;\r\n    }\r\n  }\r\n\r\n  return components;\r\n}\r\n\r\nfunction clonePath(path) {\r\n  return {\r\n    newPos: path.newPos,\r\n    components: path.components.slice(0)\r\n  };\r\n}\r\n\r\nvar arrayDiff = new Diff();\r\n\r\nfunction _default(oldArr, newArr, callback) {\r\n  return arrayDiff.diff(oldArr, newArr, callback);\r\n}\r\n\r\nmodule.exports = _default;","var vec2 = require(\"./vector\");\r\n\r\nvar curve = require(\"./curve\");\r\n\r\n/**\r\n * @author Yi Shen(https://github.com/pissang)\r\n */\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max;\r\nvar mathSin = Math.sin;\r\nvar mathCos = Math.cos;\r\nvar PI2 = Math.PI * 2;\r\nvar start = vec2.create();\r\nvar end = vec2.create();\r\nvar extremity = vec2.create();\r\n/**\r\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\r\n * @module zrender/core/bbox\r\n * @param {Array<Object>} points 顶点数组\r\n * @param {number} min\r\n * @param {number} max\r\n */\r\n\r\nfunction fromPoints(points, min, max) {\r\n  if (points.length === 0) {\r\n    return;\r\n  }\r\n\r\n  var p = points[0];\r\n  var left = p[0];\r\n  var right = p[0];\r\n  var top = p[1];\r\n  var bottom = p[1];\r\n  var i;\r\n\r\n  for (i = 1; i < points.length; i++) {\r\n    p = points[i];\r\n    left = mathMin(left, p[0]);\r\n    right = mathMax(right, p[0]);\r\n    top = mathMin(top, p[1]);\r\n    bottom = mathMax(bottom, p[1]);\r\n  }\r\n\r\n  min[0] = left;\r\n  min[1] = top;\r\n  max[0] = right;\r\n  max[1] = bottom;\r\n}\r\n/**\r\n * @memberOf module:zrender/core/bbox\r\n * @param {number} x0\r\n * @param {number} y0\r\n * @param {number} x1\r\n * @param {number} y1\r\n * @param {Array.<number>} min\r\n * @param {Array.<number>} max\r\n */\r\n\r\n\r\nfunction fromLine(x0, y0, x1, y1, min, max) {\r\n  min[0] = mathMin(x0, x1);\r\n  min[1] = mathMin(y0, y1);\r\n  max[0] = mathMax(x0, x1);\r\n  max[1] = mathMax(y0, y1);\r\n}\r\n\r\nvar xDim = [];\r\nvar yDim = [];\r\n/**\r\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\r\n * @memberOf module:zrender/core/bbox\r\n * @param {number} x0\r\n * @param {number} y0\r\n * @param {number} x1\r\n * @param {number} y1\r\n * @param {number} x2\r\n * @param {number} y2\r\n * @param {number} x3\r\n * @param {number} y3\r\n * @param {Array.<number>} min\r\n * @param {Array.<number>} max\r\n */\r\n\r\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\r\n  var cubicExtrema = curve.cubicExtrema;\r\n  var cubicAt = curve.cubicAt;\r\n  var i;\r\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\r\n  min[0] = Infinity;\r\n  min[1] = Infinity;\r\n  max[0] = -Infinity;\r\n  max[1] = -Infinity;\r\n\r\n  for (i = 0; i < n; i++) {\r\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\r\n    min[0] = mathMin(x, min[0]);\r\n    max[0] = mathMax(x, max[0]);\r\n  }\r\n\r\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\r\n\r\n  for (i = 0; i < n; i++) {\r\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\r\n    min[1] = mathMin(y, min[1]);\r\n    max[1] = mathMax(y, max[1]);\r\n  }\r\n\r\n  min[0] = mathMin(x0, min[0]);\r\n  max[0] = mathMax(x0, max[0]);\r\n  min[0] = mathMin(x3, min[0]);\r\n  max[0] = mathMax(x3, max[0]);\r\n  min[1] = mathMin(y0, min[1]);\r\n  max[1] = mathMax(y0, max[1]);\r\n  min[1] = mathMin(y3, min[1]);\r\n  max[1] = mathMax(y3, max[1]);\r\n}\r\n/**\r\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\r\n * @memberOf module:zrender/core/bbox\r\n * @param {number} x0\r\n * @param {number} y0\r\n * @param {number} x1\r\n * @param {number} y1\r\n * @param {number} x2\r\n * @param {number} y2\r\n * @param {Array.<number>} min\r\n * @param {Array.<number>} max\r\n */\r\n\r\n\r\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\r\n  var quadraticExtremum = curve.quadraticExtremum;\r\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\r\n\r\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\r\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\r\n  var x = quadraticAt(x0, x1, x2, tx);\r\n  var y = quadraticAt(y0, y1, y2, ty);\r\n  min[0] = mathMin(x0, x2, x);\r\n  min[1] = mathMin(y0, y2, y);\r\n  max[0] = mathMax(x0, x2, x);\r\n  max[1] = mathMax(y0, y2, y);\r\n}\r\n/**\r\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\r\n * @method\r\n * @memberOf module:zrender/core/bbox\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} rx\r\n * @param {number} ry\r\n * @param {number} startAngle\r\n * @param {number} endAngle\r\n * @param {number} anticlockwise\r\n * @param {Array.<number>} min\r\n * @param {Array.<number>} max\r\n */\r\n\r\n\r\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\r\n  var vec2Min = vec2.min;\r\n  var vec2Max = vec2.max;\r\n  var diff = Math.abs(startAngle - endAngle);\r\n\r\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\r\n    // Is a circle\r\n    min[0] = x - rx;\r\n    min[1] = y - ry;\r\n    max[0] = x + rx;\r\n    max[1] = y + ry;\r\n    return;\r\n  }\r\n\r\n  start[0] = mathCos(startAngle) * rx + x;\r\n  start[1] = mathSin(startAngle) * ry + y;\r\n  end[0] = mathCos(endAngle) * rx + x;\r\n  end[1] = mathSin(endAngle) * ry + y;\r\n  vec2Min(min, start, end);\r\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\r\n\r\n  startAngle = startAngle % PI2;\r\n\r\n  if (startAngle < 0) {\r\n    startAngle = startAngle + PI2;\r\n  }\r\n\r\n  endAngle = endAngle % PI2;\r\n\r\n  if (endAngle < 0) {\r\n    endAngle = endAngle + PI2;\r\n  }\r\n\r\n  if (startAngle > endAngle && !anticlockwise) {\r\n    endAngle += PI2;\r\n  } else if (startAngle < endAngle && anticlockwise) {\r\n    startAngle += PI2;\r\n  }\r\n\r\n  if (anticlockwise) {\r\n    var tmp = endAngle;\r\n    endAngle = startAngle;\r\n    startAngle = tmp;\r\n  } // var number = 0;\r\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\r\n\r\n\r\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\r\n    if (angle > startAngle) {\r\n      extremity[0] = mathCos(angle) * rx + x;\r\n      extremity[1] = mathSin(angle) * ry + y;\r\n      vec2Min(min, extremity, min);\r\n      vec2Max(max, extremity, max);\r\n    }\r\n  }\r\n}\r\n\r\nexports.fromPoints = fromPoints;\r\nexports.fromLine = fromLine;\r\nexports.fromCubic = fromCubic;\r\nexports.fromQuadratic = fromQuadratic;\r\nexports.fromArc = fromArc;","var _vector = require(\"./vector\");\r\n\r\nvar v2Create = _vector.create;\r\nvar v2DistSquare = _vector.distSquare;\r\n\r\n/**\r\n * 曲线辅助模块\r\n * @module zrender/core/curve\r\n * @author pissang(https://www.github.com/pissang)\r\n */\r\nvar mathPow = Math.pow;\r\nvar mathSqrt = Math.sqrt;\r\nvar EPSILON = 1e-8;\r\nvar EPSILON_NUMERIC = 1e-4;\r\nvar THREE_SQRT = mathSqrt(3);\r\nvar ONE_THIRD = 1 / 3; // 临时变量\r\n\r\nvar _v0 = v2Create();\r\n\r\nvar _v1 = v2Create();\r\n\r\nvar _v2 = v2Create();\r\n\r\nfunction isAroundZero(val) {\r\n  return val > -EPSILON && val < EPSILON;\r\n}\r\n\r\nfunction isNotAroundZero(val) {\r\n  return val > EPSILON || val < -EPSILON;\r\n}\r\n/**\r\n * 计算三次贝塞尔值\r\n * @memberOf module:zrender/core/curve\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} p3\r\n * @param  {number} t\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction cubicAt(p0, p1, p2, p3, t) {\r\n  var onet = 1 - t;\r\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\r\n}\r\n/**\r\n * 计算三次贝塞尔导数值\r\n * @memberOf module:zrender/core/curve\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} p3\r\n * @param  {number} t\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\r\n  var onet = 1 - t;\r\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\r\n}\r\n/**\r\n * 计算三次贝塞尔方程根，使用盛金公式\r\n * @memberOf module:zrender/core/curve\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} p3\r\n * @param  {number} val\r\n * @param  {Array.<number>} roots\r\n * @return {number} 有效根数目\r\n */\r\n\r\n\r\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\r\n  // Evaluate roots of cubic functions\r\n  var a = p3 + 3 * (p1 - p2) - p0;\r\n  var b = 3 * (p2 - p1 * 2 + p0);\r\n  var c = 3 * (p1 - p0);\r\n  var d = p0 - val;\r\n  var A = b * b - 3 * a * c;\r\n  var B = b * c - 9 * a * d;\r\n  var C = c * c - 3 * b * d;\r\n  var n = 0;\r\n\r\n  if (isAroundZero(A) && isAroundZero(B)) {\r\n    if (isAroundZero(b)) {\r\n      roots[0] = 0;\r\n    } else {\r\n      var t1 = -c / b; //t1, t2, t3, b is not zero\r\n\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        roots[n++] = t1;\r\n      }\r\n    }\r\n  } else {\r\n    var disc = B * B - 4 * A * C;\r\n\r\n    if (isAroundZero(disc)) {\r\n      var K = B / A;\r\n      var t1 = -b / a + K; // t1, a is not zero\r\n\r\n      var t2 = -K / 2; // t2, t3\r\n\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        roots[n++] = t1;\r\n      }\r\n\r\n      if (t2 >= 0 && t2 <= 1) {\r\n        roots[n++] = t2;\r\n      }\r\n    } else if (disc > 0) {\r\n      var discSqrt = mathSqrt(disc);\r\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\r\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\r\n\r\n      if (Y1 < 0) {\r\n        Y1 = -mathPow(-Y1, ONE_THIRD);\r\n      } else {\r\n        Y1 = mathPow(Y1, ONE_THIRD);\r\n      }\r\n\r\n      if (Y2 < 0) {\r\n        Y2 = -mathPow(-Y2, ONE_THIRD);\r\n      } else {\r\n        Y2 = mathPow(Y2, ONE_THIRD);\r\n      }\r\n\r\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\r\n\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        roots[n++] = t1;\r\n      }\r\n    } else {\r\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\r\n      var theta = Math.acos(T) / 3;\r\n      var ASqrt = mathSqrt(A);\r\n      var tmp = Math.cos(theta);\r\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\r\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        roots[n++] = t1;\r\n      }\r\n\r\n      if (t2 >= 0 && t2 <= 1) {\r\n        roots[n++] = t2;\r\n      }\r\n\r\n      if (t3 >= 0 && t3 <= 1) {\r\n        roots[n++] = t3;\r\n      }\r\n    }\r\n  }\r\n\r\n  return n;\r\n}\r\n/**\r\n * 计算三次贝塞尔方程极限值的位置\r\n * @memberOf module:zrender/core/curve\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} p3\r\n * @param  {Array.<number>} extrema\r\n * @return {number} 有效数目\r\n */\r\n\r\n\r\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\r\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\r\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\r\n  var c = 3 * p1 - 3 * p0;\r\n  var n = 0;\r\n\r\n  if (isAroundZero(a)) {\r\n    if (isNotAroundZero(b)) {\r\n      var t1 = -c / b;\r\n\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        extrema[n++] = t1;\r\n      }\r\n    }\r\n  } else {\r\n    var disc = b * b - 4 * a * c;\r\n\r\n    if (isAroundZero(disc)) {\r\n      extrema[0] = -b / (2 * a);\r\n    } else if (disc > 0) {\r\n      var discSqrt = mathSqrt(disc);\r\n      var t1 = (-b + discSqrt) / (2 * a);\r\n      var t2 = (-b - discSqrt) / (2 * a);\r\n\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        extrema[n++] = t1;\r\n      }\r\n\r\n      if (t2 >= 0 && t2 <= 1) {\r\n        extrema[n++] = t2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return n;\r\n}\r\n/**\r\n * 细分三次贝塞尔曲线\r\n * @memberOf module:zrender/core/curve\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} p3\r\n * @param  {number} t\r\n * @param  {Array.<number>} out\r\n */\r\n\r\n\r\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\r\n  var p01 = (p1 - p0) * t + p0;\r\n  var p12 = (p2 - p1) * t + p1;\r\n  var p23 = (p3 - p2) * t + p2;\r\n  var p012 = (p12 - p01) * t + p01;\r\n  var p123 = (p23 - p12) * t + p12;\r\n  var p0123 = (p123 - p012) * t + p012; // Seg0\r\n\r\n  out[0] = p0;\r\n  out[1] = p01;\r\n  out[2] = p012;\r\n  out[3] = p0123; // Seg1\r\n\r\n  out[4] = p0123;\r\n  out[5] = p123;\r\n  out[6] = p23;\r\n  out[7] = p3;\r\n}\r\n/**\r\n * 投射点到三次贝塞尔曲线上，返回投射距离。\r\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n * @param {number} x0\r\n * @param {number} y0\r\n * @param {number} x1\r\n * @param {number} y1\r\n * @param {number} x2\r\n * @param {number} y2\r\n * @param {number} x3\r\n * @param {number} y3\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {Array.<number>} [out] 投射点\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\r\n  // http://pomax.github.io/bezierinfo/#projections\r\n  var t;\r\n  var interval = 0.005;\r\n  var d = Infinity;\r\n  var prev;\r\n  var next;\r\n  var d1;\r\n  var d2;\r\n  _v0[0] = x;\r\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\r\n  // PENDING\r\n\r\n  for (var _t = 0; _t < 1; _t += 0.05) {\r\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\r\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\r\n    d1 = v2DistSquare(_v0, _v1);\r\n\r\n    if (d1 < d) {\r\n      t = _t;\r\n      d = d1;\r\n    }\r\n  }\r\n\r\n  d = Infinity; // At most 32 iteration\r\n\r\n  for (var i = 0; i < 32; i++) {\r\n    if (interval < EPSILON_NUMERIC) {\r\n      break;\r\n    }\r\n\r\n    prev = t - interval;\r\n    next = t + interval; // t - interval\r\n\r\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\r\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\r\n    d1 = v2DistSquare(_v1, _v0);\r\n\r\n    if (prev >= 0 && d1 < d) {\r\n      t = prev;\r\n      d = d1;\r\n    } else {\r\n      // t + interval\r\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\r\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\r\n      d2 = v2DistSquare(_v2, _v0);\r\n\r\n      if (next <= 1 && d2 < d) {\r\n        t = next;\r\n        d = d2;\r\n      } else {\r\n        interval *= 0.5;\r\n      }\r\n    }\r\n  } // t\r\n\r\n\r\n  if (out) {\r\n    out[0] = cubicAt(x0, x1, x2, x3, t);\r\n    out[1] = cubicAt(y0, y1, y2, y3, t);\r\n  } // console.log(interval, i);\r\n\r\n\r\n  return mathSqrt(d);\r\n}\r\n/**\r\n * 计算二次方贝塞尔值\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} t\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction quadraticAt(p0, p1, p2, t) {\r\n  var onet = 1 - t;\r\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\r\n}\r\n/**\r\n * 计算二次方贝塞尔导数值\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} t\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\r\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\r\n}\r\n/**\r\n * 计算二次方贝塞尔方程根\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} t\r\n * @param  {Array.<number>} roots\r\n * @return {number} 有效根数目\r\n */\r\n\r\n\r\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\r\n  var a = p0 - 2 * p1 + p2;\r\n  var b = 2 * (p1 - p0);\r\n  var c = p0 - val;\r\n  var n = 0;\r\n\r\n  if (isAroundZero(a)) {\r\n    if (isNotAroundZero(b)) {\r\n      var t1 = -c / b;\r\n\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        roots[n++] = t1;\r\n      }\r\n    }\r\n  } else {\r\n    var disc = b * b - 4 * a * c;\r\n\r\n    if (isAroundZero(disc)) {\r\n      var t1 = -b / (2 * a);\r\n\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        roots[n++] = t1;\r\n      }\r\n    } else if (disc > 0) {\r\n      var discSqrt = mathSqrt(disc);\r\n      var t1 = (-b + discSqrt) / (2 * a);\r\n      var t2 = (-b - discSqrt) / (2 * a);\r\n\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        roots[n++] = t1;\r\n      }\r\n\r\n      if (t2 >= 0 && t2 <= 1) {\r\n        roots[n++] = t2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return n;\r\n}\r\n/**\r\n * 计算二次贝塞尔方程极限值\r\n * @memberOf module:zrender/core/curve\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction quadraticExtremum(p0, p1, p2) {\r\n  var divider = p0 + p2 - 2 * p1;\r\n\r\n  if (divider === 0) {\r\n    // p1 is center of p0 and p2\r\n    return 0.5;\r\n  } else {\r\n    return (p0 - p1) / divider;\r\n  }\r\n}\r\n/**\r\n * 细分二次贝塞尔曲线\r\n * @memberOf module:zrender/core/curve\r\n * @param  {number} p0\r\n * @param  {number} p1\r\n * @param  {number} p2\r\n * @param  {number} t\r\n * @param  {Array.<number>} out\r\n */\r\n\r\n\r\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\r\n  var p01 = (p1 - p0) * t + p0;\r\n  var p12 = (p2 - p1) * t + p1;\r\n  var p012 = (p12 - p01) * t + p01; // Seg0\r\n\r\n  out[0] = p0;\r\n  out[1] = p01;\r\n  out[2] = p012; // Seg1\r\n\r\n  out[3] = p012;\r\n  out[4] = p12;\r\n  out[5] = p2;\r\n}\r\n/**\r\n * 投射点到二次贝塞尔曲线上，返回投射距离。\r\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n * @param {number} x0\r\n * @param {number} y0\r\n * @param {number} x1\r\n * @param {number} y1\r\n * @param {number} x2\r\n * @param {number} y2\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {Array.<number>} out 投射点\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\r\n  // http://pomax.github.io/bezierinfo/#projections\r\n  var t;\r\n  var interval = 0.005;\r\n  var d = Infinity;\r\n  _v0[0] = x;\r\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\r\n  // PENDING\r\n\r\n  for (var _t = 0; _t < 1; _t += 0.05) {\r\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\r\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\r\n    var d1 = v2DistSquare(_v0, _v1);\r\n\r\n    if (d1 < d) {\r\n      t = _t;\r\n      d = d1;\r\n    }\r\n  }\r\n\r\n  d = Infinity; // At most 32 iteration\r\n\r\n  for (var i = 0; i < 32; i++) {\r\n    if (interval < EPSILON_NUMERIC) {\r\n      break;\r\n    }\r\n\r\n    var prev = t - interval;\r\n    var next = t + interval; // t - interval\r\n\r\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\r\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\r\n    var d1 = v2DistSquare(_v1, _v0);\r\n\r\n    if (prev >= 0 && d1 < d) {\r\n      t = prev;\r\n      d = d1;\r\n    } else {\r\n      // t + interval\r\n      _v2[0] = quadraticAt(x0, x1, x2, next);\r\n      _v2[1] = quadraticAt(y0, y1, y2, next);\r\n      var d2 = v2DistSquare(_v2, _v0);\r\n\r\n      if (next <= 1 && d2 < d) {\r\n        t = next;\r\n        d = d2;\r\n      } else {\r\n        interval *= 0.5;\r\n      }\r\n    }\r\n  } // t\r\n\r\n\r\n  if (out) {\r\n    out[0] = quadraticAt(x0, x1, x2, t);\r\n    out[1] = quadraticAt(y0, y1, y2, t);\r\n  } // console.log(interval, i);\r\n\r\n\r\n  return mathSqrt(d);\r\n}\r\n\r\nexports.cubicAt = cubicAt;\r\nexports.cubicDerivativeAt = cubicDerivativeAt;\r\nexports.cubicRootAt = cubicRootAt;\r\nexports.cubicExtrema = cubicExtrema;\r\nexports.cubicSubdivide = cubicSubdivide;\r\nexports.cubicProjectPoint = cubicProjectPoint;\r\nexports.quadraticAt = quadraticAt;\r\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\r\nexports.quadraticRootAt = quadraticRootAt;\r\nexports.quadraticExtremum = quadraticExtremum;\r\nexports.quadraticSubdivide = quadraticSubdivide;\r\nexports.quadraticProjectPoint = quadraticProjectPoint;","var env = require(\"./env\");\r\n\r\nvar _fourPointsTransform = require(\"./fourPointsTransform\");\r\n\r\nvar buildTransformer = _fourPointsTransform.buildTransformer;\r\nvar EVENT_SAVED_PROP = '___zrEVENTSAVED';\r\nvar _calcOut = [];\r\n/**\r\n * Transform \"local coord\" from `elFrom` to `elTarget`.\r\n * \"local coord\": the coord based on the input `el`. The origin point is at\r\n *     the position of \"left: 0; top: 0;\" in the `el`.\r\n *\r\n * Support when CSS transform is used.\r\n *\r\n * Having the `out` (that is, `[outX, outY]`), we can create an DOM element\r\n * and set the CSS style as \"left: outX; top: outY;\" and append it to `elTarge`\r\n * to locate the element.\r\n *\r\n * For example, this code below positions a child of `document.body` on the event\r\n * point, no matter whether `body` has `margin`/`paddin`/`transfrom`/... :\r\n * ```js\r\n * transformLocalCoord(out, container, document.body, event.offsetX, event.offsetY);\r\n * if (!eqNaN(out[0])) {\r\n *     // Then locate the tip element on the event point.\r\n *     var tipEl = document.createElement('div');\r\n *     tipEl.style.cssText = 'position: absolute; left:' + out[0] + ';top:' + out[1] + ';';\r\n *     document.body.appendChild(tipEl);\r\n * }\r\n * ```\r\n *\r\n * Notice: In some env this method is not supported. If called, `out` will be `[NaN, NaN]`.\r\n *\r\n * @param {Array.<number>} out [inX: number, inY: number] The output..\r\n *        If can not transform, `out` will not be modified but return `false`.\r\n * @param {HTMLElement} elFrom The `[inX, inY]` is based on elFrom.\r\n * @param {HTMLElement} elTarget The `out` is based on elTarget.\r\n * @param {number} inX\r\n * @param {number} inY\r\n * @return {boolean} Whether transform successfully.\r\n */\r\n\r\nfunction transformLocalCoord(out, elFrom, elTarget, inX, inY) {\r\n  return transformCoordWithViewport(_calcOut, elFrom, inX, inY, true) && transformCoordWithViewport(out, elTarget, _calcOut[0], _calcOut[1]);\r\n}\r\n/**\r\n * Transform between a \"viewport coord\" and a \"local coord\".\r\n * \"viewport coord\": the coord based on the left-top corner of the viewport\r\n *     of the browser.\r\n * \"local coord\": the coord based on the input `el`. The origin point is at\r\n *     the position of \"left: 0; top: 0;\" in the `el`.\r\n *\r\n * Support the case when CSS transform is used on el.\r\n *\r\n * @param {Array.<number>} out [inX: number, inY: number] The output. If `inverse: false`,\r\n *        it represents \"local coord\", otherwise \"vireport coord\".\r\n *        If can not transform, `out` will not be modified but return `false`.\r\n * @param {HTMLElement} el The \"local coord\" is based on the `el`, see comment above.\r\n * @param {number} inX If `inverse: false`,\r\n *        it represents \"vireport coord\", otherwise \"local coord\".\r\n * @param {number} inY If `inverse: false`,\r\n *        it represents \"vireport coord\", otherwise \"local coord\".\r\n * @param {boolean} [inverse=false]\r\n *        `true`: from \"viewport coord\" to \"local coord\".\r\n *        `false`: from \"local coord\" to \"viewport coord\".\r\n * @return {boolean} Whether transform successfully.\r\n */\r\n\r\n\r\nfunction transformCoordWithViewport(out, el, inX, inY, inverse) {\r\n  if (el.getBoundingClientRect && env.domSupported && !isCanvasEl(el)) {\r\n    var saved = el[EVENT_SAVED_PROP] || (el[EVENT_SAVED_PROP] = {});\r\n    var markers = prepareCoordMarkers(el, saved);\r\n    var transformer = preparePointerTransformer(markers, saved, inverse);\r\n\r\n    if (transformer) {\r\n      transformer(out, inX, inY);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction prepareCoordMarkers(el, saved) {\r\n  var markers = saved.markers;\r\n\r\n  if (markers) {\r\n    return markers;\r\n  }\r\n\r\n  markers = saved.markers = [];\r\n  var propLR = ['left', 'right'];\r\n  var propTB = ['top', 'bottom'];\r\n\r\n  for (var i = 0; i < 4; i++) {\r\n    var marker = document.createElement('div');\r\n    var stl = marker.style;\r\n    var idxLR = i % 2;\r\n    var idxTB = (i >> 1) % 2;\r\n    stl.cssText = ['position: absolute', 'visibility: hidden', 'padding: 0', 'margin: 0', 'border-width: 0', 'user-select: none', 'width:0', 'height:0', // 'width: 5px',\r\n    // 'height: 5px',\r\n    propLR[idxLR] + ':0', propTB[idxTB] + ':0', propLR[1 - idxLR] + ':auto', propTB[1 - idxTB] + ':auto', ''].join('!important;');\r\n    el.appendChild(marker);\r\n    markers.push(marker);\r\n  }\r\n\r\n  return markers;\r\n}\r\n\r\nfunction preparePointerTransformer(markers, saved, inverse) {\r\n  var transformerName = inverse ? 'invTrans' : 'trans';\r\n  var transformer = saved[transformerName];\r\n  var oldSrcCoords = saved.srcCoords;\r\n  var oldCoordTheSame = true;\r\n  var srcCoords = [];\r\n  var destCoords = [];\r\n\r\n  for (var i = 0; i < 4; i++) {\r\n    var rect = markers[i].getBoundingClientRect();\r\n    var ii = 2 * i;\r\n    var x = rect.left;\r\n    var y = rect.top;\r\n    srcCoords.push(x, y);\r\n    oldCoordTheSame = oldCoordTheSame && oldSrcCoords && x === oldSrcCoords[ii] && y === oldSrcCoords[ii + 1];\r\n    destCoords.push(markers[i].offsetLeft, markers[i].offsetTop);\r\n  } // Cache to avoid time consuming of `buildTransformer`.\r\n\r\n\r\n  return oldCoordTheSame && transformer ? transformer : (saved.srcCoords = srcCoords, saved[transformerName] = inverse ? buildTransformer(destCoords, srcCoords) : buildTransformer(srcCoords, destCoords));\r\n}\r\n\r\nfunction isCanvasEl(el) {\r\n  return el.nodeName.toUpperCase() === 'CANVAS';\r\n}\r\n\r\nexports.transformLocalCoord = transformLocalCoord;\r\nexports.transformCoordWithViewport = transformCoordWithViewport;\r\nexports.isCanvasEl = isCanvasEl;","/**\r\n * echarts设备环境识别\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author firede[firede@firede.us]\r\n * @desc thanks zepto.\r\n */\r\n\r\n/* global wx */\r\nvar env = {};\r\n\r\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\r\n  // In Weixin Application\r\n  env = {\r\n    browser: {},\r\n    os: {},\r\n    node: false,\r\n    wxa: true,\r\n    // Weixin Application\r\n    canvasSupported: true,\r\n    svgSupported: false,\r\n    touchEventsSupported: true,\r\n    domSupported: false\r\n  };\r\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\r\n  // In worker\r\n  env = {\r\n    browser: {},\r\n    os: {},\r\n    node: false,\r\n    worker: true,\r\n    canvasSupported: true,\r\n    domSupported: false\r\n  };\r\n} else if (typeof navigator === 'undefined') {\r\n  // In node\r\n  env = {\r\n    browser: {},\r\n    os: {},\r\n    node: true,\r\n    worker: false,\r\n    // Assume canvas is supported\r\n    canvasSupported: true,\r\n    svgSupported: true,\r\n    domSupported: false\r\n  };\r\n} else {\r\n  env = detect(navigator.userAgent);\r\n}\r\n\r\nvar _default = env; // Zepto.js\r\n// (c) 2010-2013 Thomas Fuchs\r\n// Zepto.js may be freely distributed under the MIT license.\r\n\r\nfunction detect(ua) {\r\n  var os = {};\r\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\r\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\r\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\r\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\r\n  // var touchpad = webos && ua.match(/TouchPad/);\r\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\r\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\r\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\r\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\r\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\r\n  // var playbook = ua.match(/PlayBook/);\r\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\r\n\r\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\r\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\r\n\r\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\r\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\r\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\r\n\r\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\r\n  // - discern (more) between multiple browsers on android\r\n  // - decide if kindle fire in silk mode is android or not\r\n  // - Firefox on Android doesn't specify the Android version\r\n  // - possibly devide in os, device and browser hashes\r\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\r\n  // if (android) os.android = true, os.version = android[2];\r\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\r\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\r\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\r\n  // if (webos) os.webos = true, os.version = webos[2];\r\n  // if (touchpad) os.touchpad = true;\r\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\r\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\r\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\r\n  // if (playbook) browser.playbook = true;\r\n  // if (kindle) os.kindle = true, os.version = kindle[1];\r\n  // if (silk) browser.silk = true, browser.version = silk[1];\r\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\r\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\r\n\r\n  if (firefox) {\r\n    browser.firefox = true;\r\n    browser.version = firefox[1];\r\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\r\n  // if (webview) browser.webview = true;\r\n\r\n\r\n  if (ie) {\r\n    browser.ie = true;\r\n    browser.version = ie[1];\r\n  }\r\n\r\n  if (edge) {\r\n    browser.edge = true;\r\n    browser.version = edge[1];\r\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\r\n  // not be set on win phone. So we do not consider Win Phone.\r\n\r\n\r\n  if (weChat) {\r\n    browser.weChat = true;\r\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\r\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\r\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\r\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\r\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\r\n\r\n\r\n  return {\r\n    browser: browser,\r\n    os: os,\r\n    node: false,\r\n    // 原生canvas支持，改极端点了\r\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\r\n    canvasSupported: !!document.createElement('canvas').getContext,\r\n    svgSupported: typeof SVGRect !== 'undefined',\r\n    // works on most browsers\r\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\r\n    // default, so we dont check navigator.maxTouchPoints for them here.\r\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\r\n    // <http://caniuse.com/#search=pointer%20event>.\r\n    pointerEventsSupported: // (1) Firefox supports pointer but not by default, only MS browsers are reliable on pointer\r\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\r\n    // For example, in iOS 13 Mobile Chromium 78, if the touching behavior starts page\r\n    // scroll, the `pointermove` event can not be fired any more. That will break some\r\n    // features like \"pan horizontally to move something and pan vertically to page scroll\".\r\n    // The horizontal pan probably be interrupted by the casually triggered page scroll.\r\n    // (2) Although IE 10 supports pointer event, it use old style and is different from the\r\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\r\n    'onpointerdown' in window && (browser.edge || browser.ie && browser.version >= 11),\r\n    // passiveSupported: detectPassiveSupport()\r\n    domSupported: typeof document !== 'undefined'\r\n  };\r\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\r\n// function detectPassiveSupport() {\r\n//     // Test via a getter in the options object to see if the passive property is accessed\r\n//     var supportsPassive = false;\r\n//     try {\r\n//         var opts = Object.defineProperty({}, 'passive', {\r\n//             get: function() {\r\n//                 supportsPassive = true;\r\n//             }\r\n//         });\r\n//         window.addEventListener('testPassive', function() {}, opts);\r\n//     } catch (e) {\r\n//     }\r\n//     return supportsPassive;\r\n// }\r\n\r\n\r\nmodule.exports = _default;","var Eventful = require(\"../mixin/Eventful\");\r\n\r\nexports.Dispatcher = Eventful;\r\n\r\nvar env = require(\"./env\");\r\n\r\nvar _dom = require(\"./dom\");\r\n\r\nvar isCanvasEl = _dom.isCanvasEl;\r\nvar transformCoordWithViewport = _dom.transformCoordWithViewport;\r\n\r\n/**\r\n * Utilities for mouse or touch events.\r\n */\r\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\r\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\r\nvar _calcOut = [];\r\n/**\r\n * Get the `zrX` and `zrY`, which are relative to the top-left of\r\n * the input `el`.\r\n * CSS transform (2D & 3D) is supported.\r\n *\r\n * The strategy to fetch the coords:\r\n * + If `calculate` is not set as `true`, users of this method should\r\n * ensure that `el` is the same or the same size & location as `e.target`.\r\n * Otherwise the result coords are probably not expected. Because we\r\n * firstly try to get coords from e.offsetX/e.offsetY.\r\n * + If `calculate` is set as `true`, the input `el` can be any element\r\n * and we force to calculate the coords based on `el`.\r\n * + The input `el` should be positionable (not position:static).\r\n *\r\n * The force `calculate` can be used in case like:\r\n * When mousemove event triggered on ec tooltip, `e.target` is not `el`(zr painter.dom).\r\n *\r\n * @param {HTMLElement} el DOM element.\r\n * @param {Event} e Mouse event or touch event.\r\n * @param {Object} out Get `out.zrX` and `out.zrY` as the result.\r\n * @param {boolean} [calculate=false] Whether to force calculate\r\n *        the coordinates but not use ones provided by browser.\r\n */\r\n\r\nfunction clientToLocal(el, e, out, calculate) {\r\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\r\n  // to the padding edge of the target element. The only browser using this convention\r\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\r\n  // not support the properties.\r\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\r\n  // In zr painter.dom, padding edge equals to border edge.\r\n\r\n  if (calculate || !env.canvasSupported) {\r\n    calculateZrXY(el, e, out);\r\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\r\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\r\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\r\n  // zoom-factor, overflow / opacity layers, transforms ...)\r\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\r\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\r\n  // BTW3, In ff, offsetX/offsetY is always 0.\r\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\r\n      out.zrX = e.layerX;\r\n      out.zrY = e.layerY;\r\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\r\n    else if (e.offsetX != null) {\r\n        out.zrX = e.offsetX;\r\n        out.zrY = e.offsetY;\r\n      } // For some other device, e.g., IOS safari.\r\n      else {\r\n          calculateZrXY(el, e, out);\r\n        }\r\n\r\n  return out;\r\n}\r\n\r\nfunction calculateZrXY(el, e, out) {\r\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect.\r\n  if (env.domSupported && el.getBoundingClientRect) {\r\n    var ex = e.clientX;\r\n    var ey = e.clientY;\r\n\r\n    if (isCanvasEl(el)) {\r\n      // Original approach, which do not support CSS transform.\r\n      // marker can not be locationed in a canvas container\r\n      // (getBoundingClientRect is always 0). We do not support\r\n      // that input a pre-created canvas to zr while using css\r\n      // transform in iOS.\r\n      var box = el.getBoundingClientRect();\r\n      out.zrX = ex - box.left;\r\n      out.zrY = ey - box.top;\r\n      return;\r\n    } else {\r\n      if (transformCoordWithViewport(_calcOut, el, ex, ey)) {\r\n        out.zrX = _calcOut[0];\r\n        out.zrY = _calcOut[1];\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  out.zrX = out.zrY = 0;\r\n}\r\n/**\r\n * Find native event compat for legency IE.\r\n * Should be called at the begining of a native event listener.\r\n *\r\n * @param {Event} [e] Mouse event or touch event or pointer event.\r\n *        For lagency IE, we use `window.event` is used.\r\n * @return {Event} The native event.\r\n */\r\n\r\n\r\nfunction getNativeEvent(e) {\r\n  return e || window.event;\r\n}\r\n/**\r\n * Normalize the coordinates of the input event.\r\n *\r\n * Get the `e.zrX` and `e.zrY`, which are relative to the top-left of\r\n * the input `el`.\r\n * Get `e.zrDelta` if using mouse wheel.\r\n * Get `e.which`, see the comment inside this function.\r\n *\r\n * Do not calculate repeatly if `zrX` and `zrY` already exist.\r\n *\r\n * Notice: see comments in `clientToLocal`. check the relationship\r\n * between the result coords and the parameters `el` and `calculate`.\r\n *\r\n * @param {HTMLElement} el DOM element.\r\n * @param {Event} [e] See `getNativeEvent`.\r\n * @param {boolean} [calculate=false] Whether to force calculate\r\n *        the coordinates but not use ones provided by browser.\r\n * @return {UIEvent} The normalized native UIEvent.\r\n */\r\n\r\n\r\nfunction normalizeEvent(el, e, calculate) {\r\n  e = getNativeEvent(e);\r\n\r\n  if (e.zrX != null) {\r\n    return e;\r\n  }\r\n\r\n  var eventType = e.type;\r\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\r\n\r\n  if (!isTouch) {\r\n    clientToLocal(el, e, e, calculate);\r\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\r\n  } else {\r\n    var touch = eventType !== 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\r\n    touch && clientToLocal(el, touch, e, calculate);\r\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\r\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\r\n  // If e.which has been defined, it may be readonly,\r\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\r\n\r\n\r\n  var button = e.button;\r\n\r\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\r\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\r\n  } // [Caution]: `e.which` from browser is not always reliable. For example,\r\n  // when press left button and `mousemove (pointermove)` in Edge, the `e.which`\r\n  // is 65536 and the `e.button` is -1. But the `mouseup (pointerup)` and\r\n  // `mousedown (pointerdown)` is the same as Chrome does.\r\n\r\n\r\n  return e;\r\n}\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {string} name\r\n * @param {Function} handler\r\n * @param {Object|boolean} opt If boolean, means `opt.capture`\r\n * @param {boolean} [opt.capture=false]\r\n * @param {boolean} [opt.passive=false]\r\n */\r\n\r\n\r\nfunction addEventListener(el, name, handler, opt) {\r\n  if (isDomLevel2) {\r\n    // Reproduct the console warning:\r\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\r\n    // Consider marking event handler as 'passive' to make the page more responsive.\r\n    // Just set console log level: verbose in chrome dev tool.\r\n    // then the warning log will be printed when addEventListener called.\r\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\r\n    // listener delegate all of the upper events of element. Some of those events need\r\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\r\n    // Before passive can be adopted, these issues should be considered:\r\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\r\n    // passive or not.\r\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\r\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\r\n    // compatibility should be handled.\r\n    // var opts = (env.passiveSupported && name === 'mousewheel')\r\n    //     ? {passive: true}\r\n    //     // By default, the third param of el.addEventListener is `capture: false`.\r\n    //     : void 0;\r\n    // el.addEventListener(name, handler /* , opts */);\r\n    el.addEventListener(name, handler, opt);\r\n  } else {\r\n    // For simplicity, do not implement `setCapture` for IE9-.\r\n    el.attachEvent('on' + name, handler);\r\n  }\r\n}\r\n/**\r\n * Parameter are the same as `addEventListener`.\r\n *\r\n * Notice that if a listener is registered twice, one with capture and one without,\r\n * remove each one separately. Removal of a capturing listener does not affect a\r\n * non-capturing version of the same listener, and vice versa.\r\n */\r\n\r\n\r\nfunction removeEventListener(el, name, handler, opt) {\r\n  if (isDomLevel2) {\r\n    el.removeEventListener(name, handler, opt);\r\n  } else {\r\n    el.detachEvent('on' + name, handler);\r\n  }\r\n}\r\n/**\r\n * preventDefault and stopPropagation.\r\n * Notice: do not use this method in zrender. It can only be\r\n * used by upper applications if necessary.\r\n *\r\n * @param {Event} e A mouse or touch event.\r\n */\r\n\r\n\r\nvar stop = isDomLevel2 ? function (e) {\r\n  e.preventDefault();\r\n  e.stopPropagation();\r\n  e.cancelBubble = true;\r\n} : function (e) {\r\n  e.returnValue = false;\r\n  e.cancelBubble = true;\r\n};\r\n/**\r\n * This method only works for mouseup and mousedown. The functionality is restricted\r\n * for fault tolerance, See the `e.which` compatibility above.\r\n *\r\n * @param {MouseEvent} e\r\n * @return {boolean}\r\n */\r\n\r\nfunction isMiddleOrRightButtonOnMouseUpDown(e) {\r\n  return e.which === 2 || e.which === 3;\r\n}\r\n/**\r\n * To be removed.\r\n * @deprecated\r\n */\r\n\r\n\r\nfunction notLeftMouse(e) {\r\n  // If e.which is undefined, considered as left mouse event.\r\n  return e.which > 1;\r\n} // For backward compatibility\r\n\r\n\r\nexports.clientToLocal = clientToLocal;\r\nexports.getNativeEvent = getNativeEvent;\r\nexports.normalizeEvent = normalizeEvent;\r\nexports.addEventListener = addEventListener;\r\nexports.removeEventListener = removeEventListener;\r\nexports.stop = stop;\r\nexports.isMiddleOrRightButtonOnMouseUpDown = isMiddleOrRightButtonOnMouseUpDown;\r\nexports.notLeftMouse = notLeftMouse;","/**\r\n * The algoritm is learnt from\r\n * https://franklinta.com/2014/09/08/computing-css-matrix3d-transforms/\r\n * And we made some optimization for matrix inversion.\r\n * Other similar approaches:\r\n * \"cv::getPerspectiveTransform\", \"Direct Linear Transformation\".\r\n */\r\nvar LN2 = Math.log(2);\r\n\r\nfunction determinant(rows, rank, rowStart, rowMask, colMask, detCache) {\r\n  var cacheKey = rowMask + '-' + colMask;\r\n  var fullRank = rows.length;\r\n\r\n  if (detCache.hasOwnProperty(cacheKey)) {\r\n    return detCache[cacheKey];\r\n  }\r\n\r\n  if (rank === 1) {\r\n    // In this case the colMask must be like: `11101111`. We can find the place of `0`.\r\n    var colStart = Math.round(Math.log((1 << fullRank) - 1 & ~colMask) / LN2);\r\n    return rows[rowStart][colStart];\r\n  }\r\n\r\n  var subRowMask = rowMask | 1 << rowStart;\r\n  var subRowStart = rowStart + 1;\r\n\r\n  while (rowMask & 1 << subRowStart) {\r\n    subRowStart++;\r\n  }\r\n\r\n  var sum = 0;\r\n\r\n  for (var j = 0, colLocalIdx = 0; j < fullRank; j++) {\r\n    var colTag = 1 << j;\r\n\r\n    if (!(colTag & colMask)) {\r\n      sum += (colLocalIdx % 2 ? -1 : 1) * rows[rowStart][j] // det(subMatrix(0, j))\r\n      * determinant(rows, rank - 1, subRowStart, subRowMask, colMask | colTag, detCache);\r\n      colLocalIdx++;\r\n    }\r\n  }\r\n\r\n  detCache[cacheKey] = sum;\r\n  return sum;\r\n}\r\n/**\r\n * Usage:\r\n * ```js\r\n * var transformer = buildTransformer(\r\n *     [10, 44, 100, 44, 100, 300, 10, 300],\r\n *     [50, 54, 130, 14, 140, 330, 14, 220]\r\n * );\r\n * var out = [];\r\n * transformer && transformer([11, 33], out);\r\n * ```\r\n *\r\n * Notice: `buildTransformer` may take more than 10ms in some Android device.\r\n *\r\n * @param {Array.<number>} src source four points, [x0, y0, x1, y1, x2, y2, x3, y3]\r\n * @param {Array.<number>} dest destination four points, [x0, y0, x1, y1, x2, y2, x3, y3]\r\n * @return {Function} transformer If fail, return null/undefined.\r\n */\r\n\r\n\r\nfunction buildTransformer(src, dest) {\r\n  var mA = [[src[0], src[1], 1, 0, 0, 0, -dest[0] * src[0], -dest[0] * src[1]], [0, 0, 0, src[0], src[1], 1, -dest[1] * src[0], -dest[1] * src[1]], [src[2], src[3], 1, 0, 0, 0, -dest[2] * src[2], -dest[2] * src[3]], [0, 0, 0, src[2], src[3], 1, -dest[3] * src[2], -dest[3] * src[3]], [src[4], src[5], 1, 0, 0, 0, -dest[4] * src[4], -dest[4] * src[5]], [0, 0, 0, src[4], src[5], 1, -dest[5] * src[4], -dest[5] * src[5]], [src[6], src[7], 1, 0, 0, 0, -dest[6] * src[6], -dest[6] * src[7]], [0, 0, 0, src[6], src[7], 1, -dest[7] * src[6], -dest[7] * src[7]]];\r\n  var detCache = {};\r\n  var det = determinant(mA, 8, 0, 0, 0, detCache);\r\n\r\n  if (det === 0) {\r\n    // can not make transformer when and only when\r\n    // any three of the markers are collinear.\r\n    return;\r\n  } // `invert(mA) * dest`, that is, `adj(mA) / det * dest`.\r\n\r\n\r\n  var vh = [];\r\n\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      vh[j] == null && (vh[j] = 0);\r\n      vh[j] += ((i + j) % 2 ? -1 : 1) * // det(subMatrix(i, j))\r\n      determinant(mA, 7, i === 0 ? 1 : 0, 1 << i, 1 << j, detCache) / det * dest[i];\r\n    }\r\n  }\r\n\r\n  return function (out, srcPointX, srcPointY) {\r\n    var pk = srcPointX * vh[6] + srcPointY * vh[7] + 1;\r\n    out[0] = (srcPointX * vh[0] + srcPointY * vh[1] + vh[2]) / pk;\r\n    out[1] = (srcPointX * vh[3] + srcPointY * vh[4] + vh[5]) / pk;\r\n  };\r\n}\r\n\r\nexports.buildTransformer = buildTransformer;","/**\r\n * zrender: 生成唯一id\r\n *\r\n * @author errorrik (errorrik@gmail.com)\r\n */\r\nvar idStart = 0x0907;\r\n\r\nfunction _default() {\r\n  return idStart++;\r\n}\r\n\r\nmodule.exports = _default;","var _config = require(\"../config\");\r\n\r\nvar debugMode = _config.debugMode;\r\n\r\nvar logError = function () {};\r\n\r\nif (debugMode === 1) {\r\n  logError = console.error;\r\n}\r\n\r\nvar _default = logError;\r\nmodule.exports = _default;","/**\r\n * 3x2矩阵操作类\r\n * @exports zrender/tool/matrix\r\n */\r\n\r\n/* global Float32Array */\r\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\r\n/**\r\n * Create a identity matrix.\r\n * @return {Float32Array|Array.<number>}\r\n */\r\n\r\nfunction create() {\r\n  var out = new ArrayCtor(6);\r\n  identity(out);\r\n  return out;\r\n}\r\n/**\r\n * 设置矩阵为单位矩阵\r\n * @param {Float32Array|Array.<number>} out\r\n */\r\n\r\n\r\nfunction identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n/**\r\n * 复制矩阵\r\n * @param {Float32Array|Array.<number>} out\r\n * @param {Float32Array|Array.<number>} m\r\n */\r\n\r\n\r\nfunction copy(out, m) {\r\n  out[0] = m[0];\r\n  out[1] = m[1];\r\n  out[2] = m[2];\r\n  out[3] = m[3];\r\n  out[4] = m[4];\r\n  out[5] = m[5];\r\n  return out;\r\n}\r\n/**\r\n * 矩阵相乘\r\n * @param {Float32Array|Array.<number>} out\r\n * @param {Float32Array|Array.<number>} m1\r\n * @param {Float32Array|Array.<number>} m2\r\n */\r\n\r\n\r\nfunction mul(out, m1, m2) {\r\n  // Consider matrix.mul(m, m2, m);\r\n  // where out is the same as m2.\r\n  // So use temp variable to escape error.\r\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\r\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\r\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\r\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\r\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\r\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = out3;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  return out;\r\n}\r\n/**\r\n * 平移变换\r\n * @param {Float32Array|Array.<number>} out\r\n * @param {Float32Array|Array.<number>} a\r\n * @param {Float32Array|Array.<number>} v\r\n */\r\n\r\n\r\nfunction translate(out, a, v) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4] + v[0];\r\n  out[5] = a[5] + v[1];\r\n  return out;\r\n}\r\n/**\r\n * 旋转变换\r\n * @param {Float32Array|Array.<number>} out\r\n * @param {Float32Array|Array.<number>} a\r\n * @param {number} rad\r\n */\r\n\r\n\r\nfunction rotate(out, a, rad) {\r\n  var aa = a[0];\r\n  var ac = a[2];\r\n  var atx = a[4];\r\n  var ab = a[1];\r\n  var ad = a[3];\r\n  var aty = a[5];\r\n  var st = Math.sin(rad);\r\n  var ct = Math.cos(rad);\r\n  out[0] = aa * ct + ab * st;\r\n  out[1] = -aa * st + ab * ct;\r\n  out[2] = ac * ct + ad * st;\r\n  out[3] = -ac * st + ct * ad;\r\n  out[4] = ct * atx + st * aty;\r\n  out[5] = ct * aty - st * atx;\r\n  return out;\r\n}\r\n/**\r\n * 缩放变换\r\n * @param {Float32Array|Array.<number>} out\r\n * @param {Float32Array|Array.<number>} a\r\n * @param {Float32Array|Array.<number>} v\r\n */\r\n\r\n\r\nfunction scale(out, a, v) {\r\n  var vx = v[0];\r\n  var vy = v[1];\r\n  out[0] = a[0] * vx;\r\n  out[1] = a[1] * vy;\r\n  out[2] = a[2] * vx;\r\n  out[3] = a[3] * vy;\r\n  out[4] = a[4] * vx;\r\n  out[5] = a[5] * vy;\r\n  return out;\r\n}\r\n/**\r\n * 求逆矩阵\r\n * @param {Float32Array|Array.<number>} out\r\n * @param {Float32Array|Array.<number>} a\r\n */\r\n\r\n\r\nfunction invert(out, a) {\r\n  var aa = a[0];\r\n  var ac = a[2];\r\n  var atx = a[4];\r\n  var ab = a[1];\r\n  var ad = a[3];\r\n  var aty = a[5];\r\n  var det = aa * ad - ab * ac;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n\r\n  det = 1.0 / det;\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n/**\r\n * Clone a new matrix.\r\n * @param {Float32Array|Array.<number>} a\r\n */\r\n\r\n\r\nfunction clone(a) {\r\n  var b = create();\r\n  copy(b, a);\r\n  return b;\r\n}\r\n\r\nexports.create = create;\r\nexports.identity = identity;\r\nexports.copy = copy;\r\nexports.mul = mul;\r\nexports.translate = translate;\r\nexports.rotate = rotate;\r\nexports.scale = scale;\r\nexports.invert = invert;\r\nexports.clone = clone;","// https://github.com/mziccard/node-timsort\r\nvar DEFAULT_MIN_MERGE = 32;\r\nvar DEFAULT_MIN_GALLOPING = 7;\r\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\r\n\r\nfunction minRunLength(n) {\r\n  var r = 0;\r\n\r\n  while (n >= DEFAULT_MIN_MERGE) {\r\n    r |= n & 1;\r\n    n >>= 1;\r\n  }\r\n\r\n  return n + r;\r\n}\r\n\r\nfunction makeAscendingRun(array, lo, hi, compare) {\r\n  var runHi = lo + 1;\r\n\r\n  if (runHi === hi) {\r\n    return 1;\r\n  }\r\n\r\n  if (compare(array[runHi++], array[lo]) < 0) {\r\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\r\n      runHi++;\r\n    }\r\n\r\n    reverseRun(array, lo, runHi);\r\n  } else {\r\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\r\n      runHi++;\r\n    }\r\n  }\r\n\r\n  return runHi - lo;\r\n}\r\n\r\nfunction reverseRun(array, lo, hi) {\r\n  hi--;\r\n\r\n  while (lo < hi) {\r\n    var t = array[lo];\r\n    array[lo++] = array[hi];\r\n    array[hi--] = t;\r\n  }\r\n}\r\n\r\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\r\n  if (start === lo) {\r\n    start++;\r\n  }\r\n\r\n  for (; start < hi; start++) {\r\n    var pivot = array[start];\r\n    var left = lo;\r\n    var right = start;\r\n    var mid;\r\n\r\n    while (left < right) {\r\n      mid = left + right >>> 1;\r\n\r\n      if (compare(pivot, array[mid]) < 0) {\r\n        right = mid;\r\n      } else {\r\n        left = mid + 1;\r\n      }\r\n    }\r\n\r\n    var n = start - left;\r\n\r\n    switch (n) {\r\n      case 3:\r\n        array[left + 3] = array[left + 2];\r\n\r\n      case 2:\r\n        array[left + 2] = array[left + 1];\r\n\r\n      case 1:\r\n        array[left + 1] = array[left];\r\n        break;\r\n\r\n      default:\r\n        while (n > 0) {\r\n          array[left + n] = array[left + n - 1];\r\n          n--;\r\n        }\r\n\r\n    }\r\n\r\n    array[left] = pivot;\r\n  }\r\n}\r\n\r\nfunction gallopLeft(value, array, start, length, hint, compare) {\r\n  var lastOffset = 0;\r\n  var maxOffset = 0;\r\n  var offset = 1;\r\n\r\n  if (compare(value, array[start + hint]) > 0) {\r\n    maxOffset = length - hint;\r\n\r\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\r\n      lastOffset = offset;\r\n      offset = (offset << 1) + 1;\r\n\r\n      if (offset <= 0) {\r\n        offset = maxOffset;\r\n      }\r\n    }\r\n\r\n    if (offset > maxOffset) {\r\n      offset = maxOffset;\r\n    }\r\n\r\n    lastOffset += hint;\r\n    offset += hint;\r\n  } else {\r\n    maxOffset = hint + 1;\r\n\r\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\r\n      lastOffset = offset;\r\n      offset = (offset << 1) + 1;\r\n\r\n      if (offset <= 0) {\r\n        offset = maxOffset;\r\n      }\r\n    }\r\n\r\n    if (offset > maxOffset) {\r\n      offset = maxOffset;\r\n    }\r\n\r\n    var tmp = lastOffset;\r\n    lastOffset = hint - offset;\r\n    offset = hint - tmp;\r\n  }\r\n\r\n  lastOffset++;\r\n\r\n  while (lastOffset < offset) {\r\n    var m = lastOffset + (offset - lastOffset >>> 1);\r\n\r\n    if (compare(value, array[start + m]) > 0) {\r\n      lastOffset = m + 1;\r\n    } else {\r\n      offset = m;\r\n    }\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\nfunction gallopRight(value, array, start, length, hint, compare) {\r\n  var lastOffset = 0;\r\n  var maxOffset = 0;\r\n  var offset = 1;\r\n\r\n  if (compare(value, array[start + hint]) < 0) {\r\n    maxOffset = hint + 1;\r\n\r\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\r\n      lastOffset = offset;\r\n      offset = (offset << 1) + 1;\r\n\r\n      if (offset <= 0) {\r\n        offset = maxOffset;\r\n      }\r\n    }\r\n\r\n    if (offset > maxOffset) {\r\n      offset = maxOffset;\r\n    }\r\n\r\n    var tmp = lastOffset;\r\n    lastOffset = hint - offset;\r\n    offset = hint - tmp;\r\n  } else {\r\n    maxOffset = length - hint;\r\n\r\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\r\n      lastOffset = offset;\r\n      offset = (offset << 1) + 1;\r\n\r\n      if (offset <= 0) {\r\n        offset = maxOffset;\r\n      }\r\n    }\r\n\r\n    if (offset > maxOffset) {\r\n      offset = maxOffset;\r\n    }\r\n\r\n    lastOffset += hint;\r\n    offset += hint;\r\n  }\r\n\r\n  lastOffset++;\r\n\r\n  while (lastOffset < offset) {\r\n    var m = lastOffset + (offset - lastOffset >>> 1);\r\n\r\n    if (compare(value, array[start + m]) < 0) {\r\n      offset = m;\r\n    } else {\r\n      lastOffset = m + 1;\r\n    }\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\nfunction TimSort(array, compare) {\r\n  var minGallop = DEFAULT_MIN_GALLOPING;\r\n  var length = 0;\r\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\r\n  var stackLength = 0;\r\n  var runStart;\r\n  var runLength;\r\n  var stackSize = 0;\r\n  length = array.length;\r\n\r\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\r\n    tmpStorageLength = length >>> 1;\r\n  }\r\n\r\n  var tmp = [];\r\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\r\n  runStart = [];\r\n  runLength = [];\r\n\r\n  function pushRun(_runStart, _runLength) {\r\n    runStart[stackSize] = _runStart;\r\n    runLength[stackSize] = _runLength;\r\n    stackSize += 1;\r\n  }\r\n\r\n  function mergeRuns() {\r\n    while (stackSize > 1) {\r\n      var n = stackSize - 2;\r\n\r\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\r\n        if (runLength[n - 1] < runLength[n + 1]) {\r\n          n--;\r\n        }\r\n      } else if (runLength[n] > runLength[n + 1]) {\r\n        break;\r\n      }\r\n\r\n      mergeAt(n);\r\n    }\r\n  }\r\n\r\n  function forceMergeRuns() {\r\n    while (stackSize > 1) {\r\n      var n = stackSize - 2;\r\n\r\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\r\n        n--;\r\n      }\r\n\r\n      mergeAt(n);\r\n    }\r\n  }\r\n\r\n  function mergeAt(i) {\r\n    var start1 = runStart[i];\r\n    var length1 = runLength[i];\r\n    var start2 = runStart[i + 1];\r\n    var length2 = runLength[i + 1];\r\n    runLength[i] = length1 + length2;\r\n\r\n    if (i === stackSize - 3) {\r\n      runStart[i + 1] = runStart[i + 2];\r\n      runLength[i + 1] = runLength[i + 2];\r\n    }\r\n\r\n    stackSize--;\r\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\r\n    start1 += k;\r\n    length1 -= k;\r\n\r\n    if (length1 === 0) {\r\n      return;\r\n    }\r\n\r\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\r\n\r\n    if (length2 === 0) {\r\n      return;\r\n    }\r\n\r\n    if (length1 <= length2) {\r\n      mergeLow(start1, length1, start2, length2);\r\n    } else {\r\n      mergeHigh(start1, length1, start2, length2);\r\n    }\r\n  }\r\n\r\n  function mergeLow(start1, length1, start2, length2) {\r\n    var i = 0;\r\n\r\n    for (i = 0; i < length1; i++) {\r\n      tmp[i] = array[start1 + i];\r\n    }\r\n\r\n    var cursor1 = 0;\r\n    var cursor2 = start2;\r\n    var dest = start1;\r\n    array[dest++] = array[cursor2++];\r\n\r\n    if (--length2 === 0) {\r\n      for (i = 0; i < length1; i++) {\r\n        array[dest + i] = tmp[cursor1 + i];\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (length1 === 1) {\r\n      for (i = 0; i < length2; i++) {\r\n        array[dest + i] = array[cursor2 + i];\r\n      }\r\n\r\n      array[dest + length2] = tmp[cursor1];\r\n      return;\r\n    }\r\n\r\n    var _minGallop = minGallop;\r\n    var count1;\r\n    var count2;\r\n    var exit;\r\n\r\n    while (1) {\r\n      count1 = 0;\r\n      count2 = 0;\r\n      exit = false;\r\n\r\n      do {\r\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\r\n          array[dest++] = array[cursor2++];\r\n          count2++;\r\n          count1 = 0;\r\n\r\n          if (--length2 === 0) {\r\n            exit = true;\r\n            break;\r\n          }\r\n        } else {\r\n          array[dest++] = tmp[cursor1++];\r\n          count1++;\r\n          count2 = 0;\r\n\r\n          if (--length1 === 1) {\r\n            exit = true;\r\n            break;\r\n          }\r\n        }\r\n      } while ((count1 | count2) < _minGallop);\r\n\r\n      if (exit) {\r\n        break;\r\n      }\r\n\r\n      do {\r\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\r\n\r\n        if (count1 !== 0) {\r\n          for (i = 0; i < count1; i++) {\r\n            array[dest + i] = tmp[cursor1 + i];\r\n          }\r\n\r\n          dest += count1;\r\n          cursor1 += count1;\r\n          length1 -= count1;\r\n\r\n          if (length1 <= 1) {\r\n            exit = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        array[dest++] = array[cursor2++];\r\n\r\n        if (--length2 === 0) {\r\n          exit = true;\r\n          break;\r\n        }\r\n\r\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\r\n\r\n        if (count2 !== 0) {\r\n          for (i = 0; i < count2; i++) {\r\n            array[dest + i] = array[cursor2 + i];\r\n          }\r\n\r\n          dest += count2;\r\n          cursor2 += count2;\r\n          length2 -= count2;\r\n\r\n          if (length2 === 0) {\r\n            exit = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        array[dest++] = tmp[cursor1++];\r\n\r\n        if (--length1 === 1) {\r\n          exit = true;\r\n          break;\r\n        }\r\n\r\n        _minGallop--;\r\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\r\n\r\n      if (exit) {\r\n        break;\r\n      }\r\n\r\n      if (_minGallop < 0) {\r\n        _minGallop = 0;\r\n      }\r\n\r\n      _minGallop += 2;\r\n    }\r\n\r\n    minGallop = _minGallop;\r\n    minGallop < 1 && (minGallop = 1);\r\n\r\n    if (length1 === 1) {\r\n      for (i = 0; i < length2; i++) {\r\n        array[dest + i] = array[cursor2 + i];\r\n      }\r\n\r\n      array[dest + length2] = tmp[cursor1];\r\n    } else if (length1 === 0) {\r\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\r\n    } else {\r\n      for (i = 0; i < length1; i++) {\r\n        array[dest + i] = tmp[cursor1 + i];\r\n      }\r\n    }\r\n  }\r\n\r\n  function mergeHigh(start1, length1, start2, length2) {\r\n    var i = 0;\r\n\r\n    for (i = 0; i < length2; i++) {\r\n      tmp[i] = array[start2 + i];\r\n    }\r\n\r\n    var cursor1 = start1 + length1 - 1;\r\n    var cursor2 = length2 - 1;\r\n    var dest = start2 + length2 - 1;\r\n    var customCursor = 0;\r\n    var customDest = 0;\r\n    array[dest--] = array[cursor1--];\r\n\r\n    if (--length1 === 0) {\r\n      customCursor = dest - (length2 - 1);\r\n\r\n      for (i = 0; i < length2; i++) {\r\n        array[customCursor + i] = tmp[i];\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (length2 === 1) {\r\n      dest -= length1;\r\n      cursor1 -= length1;\r\n      customDest = dest + 1;\r\n      customCursor = cursor1 + 1;\r\n\r\n      for (i = length1 - 1; i >= 0; i--) {\r\n        array[customDest + i] = array[customCursor + i];\r\n      }\r\n\r\n      array[dest] = tmp[cursor2];\r\n      return;\r\n    }\r\n\r\n    var _minGallop = minGallop;\r\n\r\n    while (true) {\r\n      var count1 = 0;\r\n      var count2 = 0;\r\n      var exit = false;\r\n\r\n      do {\r\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\r\n          array[dest--] = array[cursor1--];\r\n          count1++;\r\n          count2 = 0;\r\n\r\n          if (--length1 === 0) {\r\n            exit = true;\r\n            break;\r\n          }\r\n        } else {\r\n          array[dest--] = tmp[cursor2--];\r\n          count2++;\r\n          count1 = 0;\r\n\r\n          if (--length2 === 1) {\r\n            exit = true;\r\n            break;\r\n          }\r\n        }\r\n      } while ((count1 | count2) < _minGallop);\r\n\r\n      if (exit) {\r\n        break;\r\n      }\r\n\r\n      do {\r\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\r\n\r\n        if (count1 !== 0) {\r\n          dest -= count1;\r\n          cursor1 -= count1;\r\n          length1 -= count1;\r\n          customDest = dest + 1;\r\n          customCursor = cursor1 + 1;\r\n\r\n          for (i = count1 - 1; i >= 0; i--) {\r\n            array[customDest + i] = array[customCursor + i];\r\n          }\r\n\r\n          if (length1 === 0) {\r\n            exit = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        array[dest--] = tmp[cursor2--];\r\n\r\n        if (--length2 === 1) {\r\n          exit = true;\r\n          break;\r\n        }\r\n\r\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\r\n\r\n        if (count2 !== 0) {\r\n          dest -= count2;\r\n          cursor2 -= count2;\r\n          length2 -= count2;\r\n          customDest = dest + 1;\r\n          customCursor = cursor2 + 1;\r\n\r\n          for (i = 0; i < count2; i++) {\r\n            array[customDest + i] = tmp[customCursor + i];\r\n          }\r\n\r\n          if (length2 <= 1) {\r\n            exit = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        array[dest--] = array[cursor1--];\r\n\r\n        if (--length1 === 0) {\r\n          exit = true;\r\n          break;\r\n        }\r\n\r\n        _minGallop--;\r\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\r\n\r\n      if (exit) {\r\n        break;\r\n      }\r\n\r\n      if (_minGallop < 0) {\r\n        _minGallop = 0;\r\n      }\r\n\r\n      _minGallop += 2;\r\n    }\r\n\r\n    minGallop = _minGallop;\r\n\r\n    if (minGallop < 1) {\r\n      minGallop = 1;\r\n    }\r\n\r\n    if (length2 === 1) {\r\n      dest -= length1;\r\n      cursor1 -= length1;\r\n      customDest = dest + 1;\r\n      customCursor = cursor1 + 1;\r\n\r\n      for (i = length1 - 1; i >= 0; i--) {\r\n        array[customDest + i] = array[customCursor + i];\r\n      }\r\n\r\n      array[dest] = tmp[cursor2];\r\n    } else if (length2 === 0) {\r\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\r\n    } else {\r\n      customCursor = dest - (length2 - 1);\r\n\r\n      for (i = 0; i < length2; i++) {\r\n        array[customCursor + i] = tmp[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  this.mergeRuns = mergeRuns;\r\n  this.forceMergeRuns = forceMergeRuns;\r\n  this.pushRun = pushRun;\r\n}\r\n\r\nfunction sort(array, compare, lo, hi) {\r\n  if (!lo) {\r\n    lo = 0;\r\n  }\r\n\r\n  if (!hi) {\r\n    hi = array.length;\r\n  }\r\n\r\n  var remaining = hi - lo;\r\n\r\n  if (remaining < 2) {\r\n    return;\r\n  }\r\n\r\n  var runLength = 0;\r\n\r\n  if (remaining < DEFAULT_MIN_MERGE) {\r\n    runLength = makeAscendingRun(array, lo, hi, compare);\r\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\r\n    return;\r\n  }\r\n\r\n  var ts = new TimSort(array, compare);\r\n  var minRun = minRunLength(remaining);\r\n\r\n  do {\r\n    runLength = makeAscendingRun(array, lo, hi, compare);\r\n\r\n    if (runLength < minRun) {\r\n      var force = remaining;\r\n\r\n      if (force > minRun) {\r\n        force = minRun;\r\n      }\r\n\r\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\r\n      runLength = force;\r\n    }\r\n\r\n    ts.pushRun(lo, runLength);\r\n    ts.mergeRuns();\r\n    remaining -= runLength;\r\n    lo += runLength;\r\n  } while (remaining !== 0);\r\n\r\n  ts.forceMergeRuns();\r\n}\r\n\r\nmodule.exports = sort;","/**\r\n * @module zrender/core/util\r\n */\r\n// 用于处理merge时无法遍历Date等对象的问题\r\nvar BUILTIN_OBJECT = {\r\n  '[object Function]': 1,\r\n  '[object RegExp]': 1,\r\n  '[object Date]': 1,\r\n  '[object Error]': 1,\r\n  '[object CanvasGradient]': 1,\r\n  '[object CanvasPattern]': 1,\r\n  // For node-canvas\r\n  '[object Image]': 1,\r\n  '[object Canvas]': 1\r\n};\r\nvar TYPED_ARRAY = {\r\n  '[object Int8Array]': 1,\r\n  '[object Uint8Array]': 1,\r\n  '[object Uint8ClampedArray]': 1,\r\n  '[object Int16Array]': 1,\r\n  '[object Uint16Array]': 1,\r\n  '[object Int32Array]': 1,\r\n  '[object Uint32Array]': 1,\r\n  '[object Float32Array]': 1,\r\n  '[object Float64Array]': 1\r\n};\r\nvar objToString = Object.prototype.toString;\r\nvar arrayProto = Array.prototype;\r\nvar nativeForEach = arrayProto.forEach;\r\nvar nativeFilter = arrayProto.filter;\r\nvar nativeSlice = arrayProto.slice;\r\nvar nativeMap = arrayProto.map;\r\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\r\n\r\nvar methods = {};\r\n\r\nfunction $override(name, fn) {\r\n  // Clear ctx instance for different environment\r\n  if (name === 'createCanvas') {\r\n    _ctx = null;\r\n  }\r\n\r\n  methods[name] = fn;\r\n}\r\n/**\r\n * Those data types can be cloned:\r\n *     Plain object, Array, TypedArray, number, string, null, undefined.\r\n * Those data types will be assgined using the orginal data:\r\n *     BUILTIN_OBJECT\r\n * Instance of user defined class will be cloned to a plain object, without\r\n * properties in prototype.\r\n * Other data types is not supported (not sure what will happen).\r\n *\r\n * Caution: do not support clone Date, for performance consideration.\r\n * (There might be a large number of date in `series.data`).\r\n * So date should not be modified in and out of echarts.\r\n *\r\n * @param {*} source\r\n * @return {*} new\r\n */\r\n\r\n\r\nfunction clone(source) {\r\n  if (source == null || typeof source !== 'object') {\r\n    return source;\r\n  }\r\n\r\n  var result = source;\r\n  var typeStr = objToString.call(source);\r\n\r\n  if (typeStr === '[object Array]') {\r\n    if (!isPrimitive(source)) {\r\n      result = [];\r\n\r\n      for (var i = 0, len = source.length; i < len; i++) {\r\n        result[i] = clone(source[i]);\r\n      }\r\n    }\r\n  } else if (TYPED_ARRAY[typeStr]) {\r\n    if (!isPrimitive(source)) {\r\n      var Ctor = source.constructor;\r\n\r\n      if (source.constructor.from) {\r\n        result = Ctor.from(source);\r\n      } else {\r\n        result = new Ctor(source.length);\r\n\r\n        for (var i = 0, len = source.length; i < len; i++) {\r\n          result[i] = clone(source[i]);\r\n        }\r\n      }\r\n    }\r\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\r\n    result = {};\r\n\r\n    for (var key in source) {\r\n      if (source.hasOwnProperty(key)) {\r\n        result[key] = clone(source[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {*} target\r\n * @param {*} source\r\n * @param {boolean} [overwrite=false]\r\n */\r\n\r\n\r\nfunction merge(target, source, overwrite) {\r\n  // We should escapse that source is string\r\n  // and enter for ... in ...\r\n  if (!isObject(source) || !isObject(target)) {\r\n    return overwrite ? clone(source) : target;\r\n  }\r\n\r\n  for (var key in source) {\r\n    if (source.hasOwnProperty(key)) {\r\n      var targetProp = target[key];\r\n      var sourceProp = source[key];\r\n\r\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\r\n        // 如果需要递归覆盖，就递归调用merge\r\n        merge(targetProp, sourceProp, overwrite);\r\n      } else if (overwrite || !(key in target)) {\r\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\r\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\r\n        target[key] = clone(source[key], true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n/**\r\n * @param {Array} targetAndSources The first item is target, and the rests are source.\r\n * @param {boolean} [overwrite=false]\r\n * @return {*} target\r\n */\r\n\r\n\r\nfunction mergeAll(targetAndSources, overwrite) {\r\n  var result = targetAndSources[0];\r\n\r\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\r\n    result = merge(result, targetAndSources[i], overwrite);\r\n  }\r\n\r\n  return result;\r\n}\r\n/**\r\n * @param {*} target\r\n * @param {*} source\r\n * @memberOf module:zrender/core/util\r\n */\r\n\r\n\r\nfunction extend(target, source) {\r\n  for (var key in source) {\r\n    if (source.hasOwnProperty(key)) {\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n/**\r\n * @param {*} target\r\n * @param {*} source\r\n * @param {boolean} [overlay=false]\r\n * @memberOf module:zrender/core/util\r\n */\r\n\r\n\r\nfunction defaults(target, source, overlay) {\r\n  for (var key in source) {\r\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nvar createCanvas = function () {\r\n  return methods.createCanvas();\r\n};\r\n\r\nmethods.createCanvas = function () {\r\n  return document.createElement('canvas');\r\n}; // FIXME\r\n\r\n\r\nvar _ctx;\r\n\r\nfunction getContext() {\r\n  if (!_ctx) {\r\n    // Use util.createCanvas instead of createCanvas\r\n    // because createCanvas may be overwritten in different environment\r\n    _ctx = createCanvas().getContext('2d');\r\n  }\r\n\r\n  return _ctx;\r\n}\r\n/**\r\n * 查询数组中元素的index\r\n * @memberOf module:zrender/core/util\r\n */\r\n\r\n\r\nfunction indexOf(array, value) {\r\n  if (array) {\r\n    if (array.indexOf) {\r\n      return array.indexOf(value);\r\n    }\r\n\r\n    for (var i = 0, len = array.length; i < len; i++) {\r\n      if (array[i] === value) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n/**\r\n * 构造类继承关系\r\n *\r\n * @memberOf module:zrender/core/util\r\n * @param {Function} clazz 源类\r\n * @param {Function} baseClazz 基类\r\n */\r\n\r\n\r\nfunction inherits(clazz, baseClazz) {\r\n  var clazzPrototype = clazz.prototype;\r\n\r\n  function F() {}\r\n\r\n  F.prototype = baseClazz.prototype;\r\n  clazz.prototype = new F();\r\n\r\n  for (var prop in clazzPrototype) {\r\n    if (clazzPrototype.hasOwnProperty(prop)) {\r\n      clazz.prototype[prop] = clazzPrototype[prop];\r\n    }\r\n  }\r\n\r\n  clazz.prototype.constructor = clazz;\r\n  clazz.superClass = baseClazz;\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {Object|Function} target\r\n * @param {Object|Function} sorce\r\n * @param {boolean} overlay\r\n */\r\n\r\n\r\nfunction mixin(target, source, overlay) {\r\n  target = 'prototype' in target ? target.prototype : target;\r\n  source = 'prototype' in source ? source.prototype : source;\r\n  defaults(target, source, overlay);\r\n}\r\n/**\r\n * Consider typed array.\r\n * @param {Array|TypedArray} data\r\n */\r\n\r\n\r\nfunction isArrayLike(data) {\r\n  if (!data) {\r\n    return;\r\n  }\r\n\r\n  if (typeof data === 'string') {\r\n    return false;\r\n  }\r\n\r\n  return typeof data.length === 'number';\r\n}\r\n/**\r\n * 数组或对象遍历\r\n * @memberOf module:zrender/core/util\r\n * @param {Object|Array} obj\r\n * @param {Function} cb\r\n * @param {*} [context]\r\n */\r\n\r\n\r\nfunction each(obj, cb, context) {\r\n  if (!(obj && cb)) {\r\n    return;\r\n  }\r\n\r\n  if (obj.forEach && obj.forEach === nativeForEach) {\r\n    obj.forEach(cb, context);\r\n  } else if (obj.length === +obj.length) {\r\n    for (var i = 0, len = obj.length; i < len; i++) {\r\n      cb.call(context, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        cb.call(context, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * 数组映射\r\n * @memberOf module:zrender/core/util\r\n * @param {Array} obj\r\n * @param {Function} cb\r\n * @param {*} [context]\r\n * @return {Array}\r\n */\r\n\r\n\r\nfunction map(obj, cb, context) {\r\n  if (!(obj && cb)) {\r\n    return;\r\n  }\r\n\r\n  if (obj.map && obj.map === nativeMap) {\r\n    return obj.map(cb, context);\r\n  } else {\r\n    var result = [];\r\n\r\n    for (var i = 0, len = obj.length; i < len; i++) {\r\n      result.push(cb.call(context, obj[i], i, obj));\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {Array} obj\r\n * @param {Function} cb\r\n * @param {Object} [memo]\r\n * @param {*} [context]\r\n * @return {Array}\r\n */\r\n\r\n\r\nfunction reduce(obj, cb, memo, context) {\r\n  if (!(obj && cb)) {\r\n    return;\r\n  }\r\n\r\n  if (obj.reduce && obj.reduce === nativeReduce) {\r\n    return obj.reduce(cb, memo, context);\r\n  } else {\r\n    for (var i = 0, len = obj.length; i < len; i++) {\r\n      memo = cb.call(context, memo, obj[i], i, obj);\r\n    }\r\n\r\n    return memo;\r\n  }\r\n}\r\n/**\r\n * 数组过滤\r\n * @memberOf module:zrender/core/util\r\n * @param {Array} obj\r\n * @param {Function} cb\r\n * @param {*} [context]\r\n * @return {Array}\r\n */\r\n\r\n\r\nfunction filter(obj, cb, context) {\r\n  if (!(obj && cb)) {\r\n    return;\r\n  }\r\n\r\n  if (obj.filter && obj.filter === nativeFilter) {\r\n    return obj.filter(cb, context);\r\n  } else {\r\n    var result = [];\r\n\r\n    for (var i = 0, len = obj.length; i < len; i++) {\r\n      if (cb.call(context, obj[i], i, obj)) {\r\n        result.push(obj[i]);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n/**\r\n * 数组项查找\r\n * @memberOf module:zrender/core/util\r\n * @param {Array} obj\r\n * @param {Function} cb\r\n * @param {*} [context]\r\n * @return {*}\r\n */\r\n\r\n\r\nfunction find(obj, cb, context) {\r\n  if (!(obj && cb)) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0, len = obj.length; i < len; i++) {\r\n    if (cb.call(context, obj[i], i, obj)) {\r\n      return obj[i];\r\n    }\r\n  }\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {Function} func\r\n * @param {*} context\r\n * @return {Function}\r\n */\r\n\r\n\r\nfunction bind(func, context) {\r\n  var args = nativeSlice.call(arguments, 2);\r\n  return function () {\r\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\r\n  };\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {Function} func\r\n * @return {Function}\r\n */\r\n\r\n\r\nfunction curry(func) {\r\n  var args = nativeSlice.call(arguments, 1);\r\n  return function () {\r\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\r\n  };\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {*} value\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isArray(value) {\r\n  return objToString.call(value) === '[object Array]';\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {*} value\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {*} value\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isString(value) {\r\n  return objToString.call(value) === '[object String]';\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {*} value\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isObject(value) {\r\n  // Avoid a V8 JIT bug in Chrome 19-20.\r\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\r\n  var type = typeof value;\r\n  return type === 'function' || !!value && type === 'object';\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {*} value\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isBuiltInObject(value) {\r\n  return !!BUILTIN_OBJECT[objToString.call(value)];\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {*} value\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isTypedArray(value) {\r\n  return !!TYPED_ARRAY[objToString.call(value)];\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {*} value\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isDom(value) {\r\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\r\n}\r\n/**\r\n * Whether is exactly NaN. Notice isNaN('a') returns true.\r\n * @param {*} value\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction eqNaN(value) {\r\n  /* eslint-disable-next-line no-self-compare */\r\n  return value !== value;\r\n}\r\n/**\r\n * If value1 is not null, then return value1, otherwise judget rest of values.\r\n * Low performance.\r\n * @memberOf module:zrender/core/util\r\n * @return {*} Final value\r\n */\r\n\r\n\r\nfunction retrieve(values) {\r\n  for (var i = 0, len = arguments.length; i < len; i++) {\r\n    if (arguments[i] != null) {\r\n      return arguments[i];\r\n    }\r\n  }\r\n}\r\n\r\nfunction retrieve2(value0, value1) {\r\n  return value0 != null ? value0 : value1;\r\n}\r\n\r\nfunction retrieve3(value0, value1, value2) {\r\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {Array} arr\r\n * @param {number} startIndex\r\n * @param {number} endIndex\r\n * @return {Array}\r\n */\r\n\r\n\r\nfunction slice() {\r\n  return Function.call.apply(nativeSlice, arguments);\r\n}\r\n/**\r\n * Normalize css liked array configuration\r\n * e.g.\r\n *  3 => [3, 3, 3, 3]\r\n *  [4, 2] => [4, 2, 4, 2]\r\n *  [4, 3, 2] => [4, 3, 2, 3]\r\n * @param {number|Array.<number>} val\r\n * @return {Array.<number>}\r\n */\r\n\r\n\r\nfunction normalizeCssArray(val) {\r\n  if (typeof val === 'number') {\r\n    return [val, val, val, val];\r\n  }\r\n\r\n  var len = val.length;\r\n\r\n  if (len === 2) {\r\n    // vertical | horizontal\r\n    return [val[0], val[1], val[0], val[1]];\r\n  } else if (len === 3) {\r\n    // top | horizontal | bottom\r\n    return [val[0], val[1], val[2], val[1]];\r\n  }\r\n\r\n  return val;\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {boolean} condition\r\n * @param {string} message\r\n */\r\n\r\n\r\nfunction assert(condition, message) {\r\n  if (!condition) {\r\n    throw new Error(message);\r\n  }\r\n}\r\n/**\r\n * @memberOf module:zrender/core/util\r\n * @param {string} str string to be trimed\r\n * @return {string} trimed string\r\n */\r\n\r\n\r\nfunction trim(str) {\r\n  if (str == null) {\r\n    return null;\r\n  } else if (typeof str.trim === 'function') {\r\n    return str.trim();\r\n  } else {\r\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n  }\r\n}\r\n\r\nvar primitiveKey = '__ec_primitive__';\r\n/**\r\n * Set an object as primitive to be ignored traversing children in clone or merge\r\n */\r\n\r\nfunction setAsPrimitive(obj) {\r\n  obj[primitiveKey] = true;\r\n}\r\n\r\nfunction isPrimitive(obj) {\r\n  return obj[primitiveKey];\r\n}\r\n/**\r\n * @constructor\r\n * @param {Object} obj Only apply `ownProperty`.\r\n */\r\n\r\n\r\nfunction HashMap(obj) {\r\n  var isArr = isArray(obj); // Key should not be set on this, otherwise\r\n  // methods get/set/... may be overrided.\r\n\r\n  this.data = {};\r\n  var thisMap = this;\r\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\r\n\r\n  function visit(value, key) {\r\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\r\n  }\r\n}\r\n\r\nHashMap.prototype = {\r\n  constructor: HashMap,\r\n  // Do not provide `has` method to avoid defining what is `has`.\r\n  // (We usually treat `null` and `undefined` as the same, different\r\n  // from ES6 Map).\r\n  get: function (key) {\r\n    return this.data.hasOwnProperty(key) ? this.data[key] : null;\r\n  },\r\n  set: function (key, value) {\r\n    // Comparing with invocation chaining, `return value` is more commonly\r\n    // used in this case: `var someVal = map.set('a', genVal());`\r\n    return this.data[key] = value;\r\n  },\r\n  // Although util.each can be performed on this hashMap directly, user\r\n  // should not use the exposed keys, who are prefixed.\r\n  each: function (cb, context) {\r\n    context !== void 0 && (cb = bind(cb, context));\r\n    /* eslint-disable guard-for-in */\r\n\r\n    for (var key in this.data) {\r\n      this.data.hasOwnProperty(key) && cb(this.data[key], key);\r\n    }\r\n    /* eslint-enable guard-for-in */\r\n\r\n  },\r\n  // Do not use this method if performance sensitive.\r\n  removeKey: function (key) {\r\n    delete this.data[key];\r\n  }\r\n};\r\n\r\nfunction createHashMap(obj) {\r\n  return new HashMap(obj);\r\n}\r\n\r\nfunction concatArray(a, b) {\r\n  var newArray = new a.constructor(a.length + b.length);\r\n\r\n  for (var i = 0; i < a.length; i++) {\r\n    newArray[i] = a[i];\r\n  }\r\n\r\n  var offset = a.length;\r\n\r\n  for (i = 0; i < b.length; i++) {\r\n    newArray[i + offset] = b[i];\r\n  }\r\n\r\n  return newArray;\r\n}\r\n\r\nfunction noop() {}\r\n\r\nexports.$override = $override;\r\nexports.clone = clone;\r\nexports.merge = merge;\r\nexports.mergeAll = mergeAll;\r\nexports.extend = extend;\r\nexports.defaults = defaults;\r\nexports.createCanvas = createCanvas;\r\nexports.getContext = getContext;\r\nexports.indexOf = indexOf;\r\nexports.inherits = inherits;\r\nexports.mixin = mixin;\r\nexports.isArrayLike = isArrayLike;\r\nexports.each = each;\r\nexports.map = map;\r\nexports.reduce = reduce;\r\nexports.filter = filter;\r\nexports.find = find;\r\nexports.bind = bind;\r\nexports.curry = curry;\r\nexports.isArray = isArray;\r\nexports.isFunction = isFunction;\r\nexports.isString = isString;\r\nexports.isObject = isObject;\r\nexports.isBuiltInObject = isBuiltInObject;\r\nexports.isTypedArray = isTypedArray;\r\nexports.isDom = isDom;\r\nexports.eqNaN = eqNaN;\r\nexports.retrieve = retrieve;\r\nexports.retrieve2 = retrieve2;\r\nexports.retrieve3 = retrieve3;\r\nexports.slice = slice;\r\nexports.normalizeCssArray = normalizeCssArray;\r\nexports.assert = assert;\r\nexports.trim = trim;\r\nexports.setAsPrimitive = setAsPrimitive;\r\nexports.isPrimitive = isPrimitive;\r\nexports.createHashMap = createHashMap;\r\nexports.concatArray = concatArray;\r\nexports.noop = noop;","/* global Float32Array */\r\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\r\n/**\r\n * 创建一个向量\r\n * @param {number} [x=0]\r\n * @param {number} [y=0]\r\n * @return {Vector2}\r\n */\r\n\r\nfunction create(x, y) {\r\n  var out = new ArrayCtor(2);\r\n\r\n  if (x == null) {\r\n    x = 0;\r\n  }\r\n\r\n  if (y == null) {\r\n    y = 0;\r\n  }\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n/**\r\n * 复制向量数据\r\n * @param {Vector2} out\r\n * @param {Vector2} v\r\n * @return {Vector2}\r\n */\r\n\r\n\r\nfunction copy(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = v[1];\r\n  return out;\r\n}\r\n/**\r\n * 克隆一个向量\r\n * @param {Vector2} v\r\n * @return {Vector2}\r\n */\r\n\r\n\r\nfunction clone(v) {\r\n  var out = new ArrayCtor(2);\r\n  out[0] = v[0];\r\n  out[1] = v[1];\r\n  return out;\r\n}\r\n/**\r\n * 设置向量的两个项\r\n * @param {Vector2} out\r\n * @param {number} a\r\n * @param {number} b\r\n * @return {Vector2} 结果\r\n */\r\n\r\n\r\nfunction set(out, a, b) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  return out;\r\n}\r\n/**\r\n * 向量相加\r\n * @param {Vector2} out\r\n * @param {Vector2} v1\r\n * @param {Vector2} v2\r\n */\r\n\r\n\r\nfunction add(out, v1, v2) {\r\n  out[0] = v1[0] + v2[0];\r\n  out[1] = v1[1] + v2[1];\r\n  return out;\r\n}\r\n/**\r\n * 向量缩放后相加\r\n * @param {Vector2} out\r\n * @param {Vector2} v1\r\n * @param {Vector2} v2\r\n * @param {number} a\r\n */\r\n\r\n\r\nfunction scaleAndAdd(out, v1, v2, a) {\r\n  out[0] = v1[0] + v2[0] * a;\r\n  out[1] = v1[1] + v2[1] * a;\r\n  return out;\r\n}\r\n/**\r\n * 向量相减\r\n * @param {Vector2} out\r\n * @param {Vector2} v1\r\n * @param {Vector2} v2\r\n */\r\n\r\n\r\nfunction sub(out, v1, v2) {\r\n  out[0] = v1[0] - v2[0];\r\n  out[1] = v1[1] - v2[1];\r\n  return out;\r\n}\r\n/**\r\n * 向量长度\r\n * @param {Vector2} v\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction len(v) {\r\n  return Math.sqrt(lenSquare(v));\r\n}\r\n\r\nvar length = len; // jshint ignore:line\r\n\r\n/**\r\n * 向量长度平方\r\n * @param {Vector2} v\r\n * @return {number}\r\n */\r\n\r\nfunction lenSquare(v) {\r\n  return v[0] * v[0] + v[1] * v[1];\r\n}\r\n\r\nvar lengthSquare = lenSquare;\r\n/**\r\n * 向量乘法\r\n * @param {Vector2} out\r\n * @param {Vector2} v1\r\n * @param {Vector2} v2\r\n */\r\n\r\nfunction mul(out, v1, v2) {\r\n  out[0] = v1[0] * v2[0];\r\n  out[1] = v1[1] * v2[1];\r\n  return out;\r\n}\r\n/**\r\n * 向量除法\r\n * @param {Vector2} out\r\n * @param {Vector2} v1\r\n * @param {Vector2} v2\r\n */\r\n\r\n\r\nfunction div(out, v1, v2) {\r\n  out[0] = v1[0] / v2[0];\r\n  out[1] = v1[1] / v2[1];\r\n  return out;\r\n}\r\n/**\r\n * 向量点乘\r\n * @param {Vector2} v1\r\n * @param {Vector2} v2\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction dot(v1, v2) {\r\n  return v1[0] * v2[0] + v1[1] * v2[1];\r\n}\r\n/**\r\n * 向量缩放\r\n * @param {Vector2} out\r\n * @param {Vector2} v\r\n * @param {number} s\r\n */\r\n\r\n\r\nfunction scale(out, v, s) {\r\n  out[0] = v[0] * s;\r\n  out[1] = v[1] * s;\r\n  return out;\r\n}\r\n/**\r\n * 向量归一化\r\n * @param {Vector2} out\r\n * @param {Vector2} v\r\n */\r\n\r\n\r\nfunction normalize(out, v) {\r\n  var d = len(v);\r\n\r\n  if (d === 0) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  } else {\r\n    out[0] = v[0] / d;\r\n    out[1] = v[1] / d;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * 计算向量间距离\r\n * @param {Vector2} v1\r\n * @param {Vector2} v2\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction distance(v1, v2) {\r\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\r\n}\r\n\r\nvar dist = distance;\r\n/**\r\n * 向量距离平方\r\n * @param {Vector2} v1\r\n * @param {Vector2} v2\r\n * @return {number}\r\n */\r\n\r\nfunction distanceSquare(v1, v2) {\r\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\r\n}\r\n\r\nvar distSquare = distanceSquare;\r\n/**\r\n * 求负向量\r\n * @param {Vector2} out\r\n * @param {Vector2} v\r\n */\r\n\r\nfunction negate(out, v) {\r\n  out[0] = -v[0];\r\n  out[1] = -v[1];\r\n  return out;\r\n}\r\n/**\r\n * 插值两个点\r\n * @param {Vector2} out\r\n * @param {Vector2} v1\r\n * @param {Vector2} v2\r\n * @param {number} t\r\n */\r\n\r\n\r\nfunction lerp(out, v1, v2, t) {\r\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\r\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\r\n  return out;\r\n}\r\n/**\r\n * 矩阵左乘向量\r\n * @param {Vector2} out\r\n * @param {Vector2} v\r\n * @param {Vector2} m\r\n */\r\n\r\n\r\nfunction applyTransform(out, v, m) {\r\n  var x = v[0];\r\n  var y = v[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n/**\r\n * 求两个向量最小值\r\n * @param  {Vector2} out\r\n * @param  {Vector2} v1\r\n * @param  {Vector2} v2\r\n */\r\n\r\n\r\nfunction min(out, v1, v2) {\r\n  out[0] = Math.min(v1[0], v2[0]);\r\n  out[1] = Math.min(v1[1], v2[1]);\r\n  return out;\r\n}\r\n/**\r\n * 求两个向量最大值\r\n * @param  {Vector2} out\r\n * @param  {Vector2} v1\r\n * @param  {Vector2} v2\r\n */\r\n\r\n\r\nfunction max(out, v1, v2) {\r\n  out[0] = Math.max(v1[0], v2[0]);\r\n  out[1] = Math.max(v1[1], v2[1]);\r\n  return out;\r\n}\r\n\r\nexports.create = create;\r\nexports.copy = copy;\r\nexports.clone = clone;\r\nexports.set = set;\r\nexports.add = add;\r\nexports.scaleAndAdd = scaleAndAdd;\r\nexports.sub = sub;\r\nexports.len = len;\r\nexports.length = length;\r\nexports.lenSquare = lenSquare;\r\nexports.lengthSquare = lengthSquare;\r\nexports.mul = mul;\r\nexports.div = div;\r\nexports.dot = dot;\r\nexports.scale = scale;\r\nexports.normalize = normalize;\r\nexports.distance = distance;\r\nexports.dist = dist;\r\nexports.distanceSquare = distanceSquare;\r\nexports.distSquare = distSquare;\r\nexports.negate = negate;\r\nexports.lerp = lerp;\r\nexports.applyTransform = applyTransform;\r\nexports.min = min;\r\nexports.max = max;","var _event = require(\"../core/event\");\r\n\r\nvar addEventListener = _event.addEventListener;\r\nvar removeEventListener = _event.removeEventListener;\r\nvar normalizeEvent = _event.normalizeEvent;\r\nvar getNativeEvent = _event.getNativeEvent;\r\n\r\nvar zrUtil = require(\"../core/util\");\r\n\r\nvar Eventful = require(\"../mixin/Eventful\");\r\n\r\nvar env = require(\"../core/env\");\r\n\r\n/* global document */\r\nvar TOUCH_CLICK_DELAY = 300;\r\nvar globalEventSupported = env.domSupported;\r\n\r\nvar localNativeListenerNames = function () {\r\n  var mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\r\n  var touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\r\n  var pointerEventNameMap = {\r\n    pointerdown: 1,\r\n    pointerup: 1,\r\n    pointermove: 1,\r\n    pointerout: 1\r\n  };\r\n  var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\r\n    var nm = name.replace('mouse', 'pointer');\r\n    return pointerEventNameMap.hasOwnProperty(nm) ? nm : name;\r\n  });\r\n  return {\r\n    mouse: mouseHandlerNames,\r\n    touch: touchHandlerNames,\r\n    pointer: pointerHandlerNames\r\n  };\r\n}();\r\n\r\nvar globalNativeListenerNames = {\r\n  mouse: ['mousemove', 'mouseup'],\r\n  pointer: ['pointermove', 'pointerup']\r\n};\r\n\r\nfunction eventNameFix(name) {\r\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\r\n}\r\n\r\nfunction isPointerFromTouch(event) {\r\n  var pointerType = event.pointerType;\r\n  return pointerType === 'pen' || pointerType === 'touch';\r\n} // function useMSGuesture(handlerProxy, event) {\r\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\r\n// }\r\n// function onMSGestureChange(proxy, event) {\r\n//     if (event.translationX || event.translationY) {\r\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\r\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\r\n//     }\r\n//     if (event.scale !== 1) {\r\n//         event.pinchX = event.offsetX;\r\n//         event.pinchY = event.offsetY;\r\n//         event.pinchScale = event.scale;\r\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\r\n//     }\r\n// }\r\n\r\n/**\r\n * Prevent mouse event from being dispatched after Touch Events action\r\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\r\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\r\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\r\n * Result: Blocking Mouse Events for 700ms.\r\n *\r\n * @param {DOMHandlerScope} scope\r\n */\r\n\r\n\r\nfunction setTouchTimer(scope) {\r\n  scope.touching = true;\r\n\r\n  if (scope.touchTimer != null) {\r\n    clearTimeout(scope.touchTimer);\r\n    scope.touchTimer = null;\r\n  }\r\n\r\n  scope.touchTimer = setTimeout(function () {\r\n    scope.touching = false;\r\n    scope.touchTimer = null;\r\n  }, 700);\r\n} // Mark touch, which is useful in distinguish touch and\r\n// mouse event in upper applicatoin.\r\n\r\n\r\nfunction markTouch(event) {\r\n  event && (event.zrByTouch = true);\r\n} // function markTriggeredFromLocal(event) {\r\n//     event && (event.__zrIsFromLocal = true);\r\n// }\r\n// function isTriggeredFromLocal(instance, event) {\r\n//     return !!(event && event.__zrIsFromLocal);\r\n// }\r\n\r\n\r\nfunction normalizeGlobalEvent(instance, event) {\r\n  // offsetX, offsetY still need to be calculated. They are necessary in the event\r\n  // handlers of the upper applications. Set `true` to force calculate them.\r\n  return normalizeEvent(instance.dom, new FakeGlobalEvent(instance, event), true);\r\n}\r\n/**\r\n * Detect whether the given el is in `painterRoot`.\r\n */\r\n\r\n\r\nfunction isLocalEl(instance, el) {\r\n  var elTmp = el;\r\n  var isLocal = false;\r\n\r\n  while (elTmp && elTmp.nodeType !== 9 && !(isLocal = elTmp.domBelongToZr || elTmp !== el && elTmp === instance.painterRoot)) {\r\n    elTmp = elTmp.parentNode;\r\n  }\r\n\r\n  return isLocal;\r\n}\r\n/**\r\n * Make a fake event but not change the original event,\r\n * becuase the global event probably be used by other\r\n * listeners not belonging to zrender.\r\n * @class\r\n */\r\n\r\n\r\nfunction FakeGlobalEvent(instance, event) {\r\n  this.type = event.type;\r\n  this.target = this.currentTarget = instance.dom;\r\n  this.pointerType = event.pointerType; // Necessray for the force calculation of zrX, zrY\r\n\r\n  this.clientX = event.clientX;\r\n  this.clientY = event.clientY; // Because we do not mount global listeners to touch events,\r\n  // we do not copy `targetTouches` and `changedTouches` here.\r\n}\r\n\r\nvar fakeGlobalEventProto = FakeGlobalEvent.prototype; // we make the default methods on the event do nothing,\r\n// otherwise it is dangerous. See more details in\r\n// [Drag outside] in `Handler.js`.\r\n\r\nfakeGlobalEventProto.stopPropagation = fakeGlobalEventProto.stopImmediatePropagation = fakeGlobalEventProto.preventDefault = zrUtil.noop;\r\n/**\r\n * Local DOM Handlers\r\n * @this {HandlerProxy}\r\n */\r\n\r\nvar localDOMHandlers = {\r\n  mousedown: function (event) {\r\n    event = normalizeEvent(this.dom, event);\r\n    this._mayPointerCapture = [event.zrX, event.zrY];\r\n    this.trigger('mousedown', event);\r\n  },\r\n  mousemove: function (event) {\r\n    event = normalizeEvent(this.dom, event);\r\n    var downPoint = this._mayPointerCapture;\r\n\r\n    if (downPoint && (event.zrX !== downPoint[0] || event.zrY !== downPoint[1])) {\r\n      togglePointerCapture(this, true);\r\n    }\r\n\r\n    this.trigger('mousemove', event);\r\n  },\r\n  mouseup: function (event) {\r\n    event = normalizeEvent(this.dom, event);\r\n    togglePointerCapture(this, false);\r\n    this.trigger('mouseup', event);\r\n  },\r\n  mouseout: function (event) {\r\n    event = normalizeEvent(this.dom, event); // Similarly to the browser did on `document` and touch event,\r\n    // `globalout` will be delayed to final pointer cature release.\r\n\r\n    if (this._pointerCapturing) {\r\n      event.zrEventControl = 'no_globalout';\r\n    } // There might be some doms created by upper layer application\r\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\r\n    // dom created by echarts), where 'globalout' event should not\r\n    // be triggered when mouse enters these doms. (But 'mouseout'\r\n    // should be triggered at the original hovered element as usual).\r\n\r\n\r\n    var element = event.toElement || event.relatedTarget;\r\n    event.zrIsToLocalDOM = isLocalEl(this, element);\r\n    this.trigger('mouseout', event);\r\n  },\r\n  touchstart: function (event) {\r\n    // Default mouse behaviour should not be disabled here.\r\n    // For example, page may needs to be slided.\r\n    event = normalizeEvent(this.dom, event);\r\n    markTouch(event);\r\n    this._lastTouchMoment = new Date();\r\n    this.handler.processGesture(event, 'start'); // For consistent event listener for both touch device and mouse device,\r\n    // we simulate \"mouseover-->mousedown\" in touch device. So we trigger\r\n    // `mousemove` here (to trigger `mouseover` inside), and then trigger\r\n    // `mousedown`.\r\n\r\n    localDOMHandlers.mousemove.call(this, event);\r\n    localDOMHandlers.mousedown.call(this, event);\r\n  },\r\n  touchmove: function (event) {\r\n    event = normalizeEvent(this.dom, event);\r\n    markTouch(event);\r\n    this.handler.processGesture(event, 'change'); // Mouse move should always be triggered no matter whether\r\n    // there is gestrue event, because mouse move and pinch may\r\n    // be used at the same time.\r\n\r\n    localDOMHandlers.mousemove.call(this, event);\r\n  },\r\n  touchend: function (event) {\r\n    event = normalizeEvent(this.dom, event);\r\n    markTouch(event);\r\n    this.handler.processGesture(event, 'end');\r\n    localDOMHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\r\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\r\n    // we can conveniently implement \"hover style\" in both PC and touch device just\r\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\r\n    // to remove \"hover style\" on an element, without any additional code for\r\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\r\n    // style\" will remain for user view)\r\n    // click event should always be triggered no matter whether\r\n    // there is gestrue event. System click can not be prevented.\r\n\r\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\r\n      localDOMHandlers.click.call(this, event);\r\n    }\r\n  },\r\n  pointerdown: function (event) {\r\n    localDOMHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\r\n    //     this._msGesture.addPointer(event.pointerId);\r\n    // }\r\n  },\r\n  pointermove: function (event) {\r\n    // FIXME\r\n    // pointermove is so sensitive that it always triggered when\r\n    // tap(click) on touch screen, which affect some judgement in\r\n    // upper application. So, we dont support mousemove on MS touch\r\n    // device yet.\r\n    if (!isPointerFromTouch(event)) {\r\n      localDOMHandlers.mousemove.call(this, event);\r\n    }\r\n  },\r\n  pointerup: function (event) {\r\n    localDOMHandlers.mouseup.call(this, event);\r\n  },\r\n  pointerout: function (event) {\r\n    // pointerout will be triggered when tap on touch screen\r\n    // (IE11+/Edge on MS Surface) after click event triggered,\r\n    // which is inconsistent with the mousout behavior we defined\r\n    // in touchend. So we unify them.\r\n    // (check localDOMHandlers.touchend for detailed explanation)\r\n    if (!isPointerFromTouch(event)) {\r\n      localDOMHandlers.mouseout.call(this, event);\r\n    }\r\n  }\r\n};\r\n/**\r\n * Othere DOM UI Event handlers for zr dom.\r\n * @this {HandlerProxy}\r\n */\r\n\r\nzrUtil.each(['click', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\r\n  localDOMHandlers[name] = function (event) {\r\n    event = normalizeEvent(this.dom, event);\r\n    this.trigger(name, event);\r\n  };\r\n});\r\n/**\r\n * DOM UI Event handlers for global page.\r\n *\r\n * [Caution]:\r\n * those handlers should both support in capture phase and bubble phase!\r\n *\r\n * @this {HandlerProxy}\r\n */\r\n\r\nvar globalDOMHandlers = {\r\n  pointermove: function (event) {\r\n    // FIXME\r\n    // pointermove is so sensitive that it always triggered when\r\n    // tap(click) on touch screen, which affect some judgement in\r\n    // upper application. So, we dont support mousemove on MS touch\r\n    // device yet.\r\n    if (!isPointerFromTouch(event)) {\r\n      globalDOMHandlers.mousemove.call(this, event);\r\n    }\r\n  },\r\n  pointerup: function (event) {\r\n    globalDOMHandlers.mouseup.call(this, event);\r\n  },\r\n  mousemove: function (event) {\r\n    this.trigger('mousemove', event);\r\n  },\r\n  mouseup: function (event) {\r\n    var pointerCaptureReleasing = this._pointerCapturing;\r\n    togglePointerCapture(this, false);\r\n    this.trigger('mouseup', event);\r\n\r\n    if (pointerCaptureReleasing) {\r\n      event.zrEventControl = 'only_globalout';\r\n      this.trigger('mouseout', event);\r\n    }\r\n  }\r\n};\r\n/**\r\n * @param {HandlerProxy} instance\r\n * @param {DOMHandlerScope} scope\r\n */\r\n\r\nfunction mountLocalDOMEventListeners(instance, scope) {\r\n  var domHandlers = scope.domHandlers;\r\n\r\n  if (env.pointerEventsSupported) {\r\n    // Only IE11+/Edge\r\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\r\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\r\n    // at the same time.\r\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\r\n    // screen, which do not occurs in pointer event.\r\n    // So we use pointer event to both detect touch gesture and mouse behavior.\r\n    zrUtil.each(localNativeListenerNames.pointer, function (nativeEventName) {\r\n      mountSingleDOMEventListener(scope, nativeEventName, function (event) {\r\n        // markTriggeredFromLocal(event);\r\n        domHandlers[nativeEventName].call(instance, event);\r\n      });\r\n    }); // FIXME\r\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\r\n    // which does not prevent defuault behavior occasionally (which may cause view port\r\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\r\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\r\n    // touch screen. And we only support click behavior on MS touch screen now.\r\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\r\n    // We dont support touch on IE on win7.\r\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\r\n    // if (typeof MSGesture === 'function') {\r\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\r\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\r\n    // }\r\n  } else {\r\n    if (env.touchEventsSupported) {\r\n      zrUtil.each(localNativeListenerNames.touch, function (nativeEventName) {\r\n        mountSingleDOMEventListener(scope, nativeEventName, function (event) {\r\n          // markTriggeredFromLocal(event);\r\n          domHandlers[nativeEventName].call(instance, event);\r\n          setTouchTimer(scope);\r\n        });\r\n      }); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\r\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\r\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\r\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\r\n    // mouse event can not be handle in those devices.\r\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\r\n    // mouseevent after touch event triggered, see `setTouchTimer`.\r\n\r\n\r\n    zrUtil.each(localNativeListenerNames.mouse, function (nativeEventName) {\r\n      mountSingleDOMEventListener(scope, nativeEventName, function (event) {\r\n        event = getNativeEvent(event);\r\n\r\n        if (!scope.touching) {\r\n          // markTriggeredFromLocal(event);\r\n          domHandlers[nativeEventName].call(instance, event);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n/**\r\n * @param {HandlerProxy} instance\r\n * @param {DOMHandlerScope} scope\r\n */\r\n\r\n\r\nfunction mountGlobalDOMEventListeners(instance, scope) {\r\n  // Only IE11+/Edge. See the comment in `mountLocalDOMEventListeners`.\r\n  if (env.pointerEventsSupported) {\r\n    zrUtil.each(globalNativeListenerNames.pointer, mount);\r\n  } // Touch event has implemented \"drag outside\" so we do not mount global listener for touch event.\r\n  // (see https://www.w3.org/TR/touch-events/#the-touchmove-event)\r\n  // We do not consider \"both-support-touch-and-mouse device\" for this feature (see the comment of\r\n  // `mountLocalDOMEventListeners`) to avoid bugs util some requirements come.\r\n  else if (!env.touchEventsSupported) {\r\n      zrUtil.each(globalNativeListenerNames.mouse, mount);\r\n    }\r\n\r\n  function mount(nativeEventName) {\r\n    function nativeEventListener(event) {\r\n      event = getNativeEvent(event); // See the reason in [Drag outside] in `Handler.js`\r\n      // This checking supports both `useCapture` or not.\r\n      // PENDING: if there is performance issue in some devices,\r\n      // we probably can not use `useCapture` and change a easier\r\n      // to judes whether local (mark).\r\n\r\n      if (!isLocalEl(instance, event.target)) {\r\n        event = normalizeGlobalEvent(instance, event);\r\n        scope.domHandlers[nativeEventName].call(instance, event);\r\n      }\r\n    }\r\n\r\n    mountSingleDOMEventListener(scope, nativeEventName, nativeEventListener, {\r\n      capture: true\r\n    } // See [Drag Outside] in `Handler.js`\r\n    );\r\n  }\r\n}\r\n\r\nfunction mountSingleDOMEventListener(scope, nativeEventName, listener, opt) {\r\n  scope.mounted[nativeEventName] = listener;\r\n  scope.listenerOpts[nativeEventName] = opt;\r\n  addEventListener(scope.domTarget, eventNameFix(nativeEventName), listener, opt);\r\n}\r\n\r\nfunction unmountDOMEventListeners(scope) {\r\n  var mounted = scope.mounted;\r\n\r\n  for (var nativeEventName in mounted) {\r\n    if (mounted.hasOwnProperty(nativeEventName)) {\r\n      removeEventListener(scope.domTarget, eventNameFix(nativeEventName), mounted[nativeEventName], scope.listenerOpts[nativeEventName]);\r\n    }\r\n  }\r\n\r\n  scope.mounted = {};\r\n}\r\n/**\r\n * See [Drag Outside] in `Handler.js`.\r\n * @implement\r\n * @param {boolean} isPointerCapturing Should never be `null`/`undefined`.\r\n *        `true`: start to capture pointer if it is not capturing.\r\n *        `false`: end the capture if it is capturing.\r\n */\r\n\r\n\r\nfunction togglePointerCapture(instance, isPointerCapturing) {\r\n  instance._mayPointerCapture = null;\r\n\r\n  if (globalEventSupported && instance._pointerCapturing ^ isPointerCapturing) {\r\n    instance._pointerCapturing = isPointerCapturing;\r\n    var globalHandlerScope = instance._globalHandlerScope;\r\n    isPointerCapturing ? mountGlobalDOMEventListeners(instance, globalHandlerScope) : unmountDOMEventListeners(globalHandlerScope);\r\n  }\r\n}\r\n/**\r\n * @inner\r\n * @class\r\n */\r\n\r\n\r\nfunction DOMHandlerScope(domTarget, domHandlers) {\r\n  this.domTarget = domTarget;\r\n  this.domHandlers = domHandlers; // Key: eventName, value: mounted handler funcitons.\r\n  // Used for unmount.\r\n\r\n  this.mounted = {};\r\n  this.listenerOpts = {};\r\n  this.touchTimer = null;\r\n  this.touching = false;\r\n}\r\n/**\r\n * @public\r\n * @class\r\n */\r\n\r\n\r\nfunction HandlerDomProxy(dom, painterRoot) {\r\n  Eventful.call(this);\r\n  this.dom = dom;\r\n  this.painterRoot = painterRoot;\r\n  this._localHandlerScope = new DOMHandlerScope(dom, localDOMHandlers);\r\n\r\n  if (globalEventSupported) {\r\n    this._globalHandlerScope = new DOMHandlerScope(document, globalDOMHandlers);\r\n  }\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n\r\n\r\n  this._pointerCapturing = false;\r\n  /**\r\n   * @type {Array.<number>} [x, y] or null.\r\n   */\r\n\r\n  this._mayPointerCapture = null;\r\n  mountLocalDOMEventListeners(this, this._localHandlerScope);\r\n}\r\n\r\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\r\n\r\nhandlerDomProxyProto.dispose = function () {\r\n  unmountDOMEventListeners(this._localHandlerScope);\r\n\r\n  if (globalEventSupported) {\r\n    unmountDOMEventListeners(this._globalHandlerScope);\r\n  }\r\n};\r\n\r\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\r\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\r\n};\r\n\r\nzrUtil.mixin(HandlerDomProxy, Eventful);\r\nvar _default = HandlerDomProxy;\r\nmodule.exports = _default;","var Path = require(\"./Path\");\r\n\r\n// CompoundPath to improve performance\r\nvar _default = Path.extend({\r\n  type: 'compound',\r\n  shape: {\r\n    paths: null\r\n  },\r\n  _updatePathDirty: function () {\r\n    var dirtyPath = this.__dirtyPath;\r\n    var paths = this.shape.paths;\r\n\r\n    for (var i = 0; i < paths.length; i++) {\r\n      // Mark as dirty if any subpath is dirty\r\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\r\n    }\r\n\r\n    this.__dirtyPath = dirtyPath;\r\n    this.__dirty = this.__dirty || dirtyPath;\r\n  },\r\n  beforeBrush: function () {\r\n    this._updatePathDirty();\r\n\r\n    var paths = this.shape.paths || [];\r\n    var scale = this.getGlobalScale(); // Update path scale\r\n\r\n    for (var i = 0; i < paths.length; i++) {\r\n      if (!paths[i].path) {\r\n        paths[i].createPathProxy();\r\n      }\r\n\r\n      paths[i].path.setScale(scale[0], scale[1], paths[i].segmentIgnoreThreshold);\r\n    }\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var paths = shape.paths || [];\r\n\r\n    for (var i = 0; i < paths.length; i++) {\r\n      paths[i].buildPath(ctx, paths[i].shape, true);\r\n    }\r\n  },\r\n  afterBrush: function () {\r\n    var paths = this.shape.paths || [];\r\n\r\n    for (var i = 0; i < paths.length; i++) {\r\n      paths[i].__dirtyPath = false;\r\n    }\r\n  },\r\n  getBoundingRect: function () {\r\n    this._updatePathDirty();\r\n\r\n    return Path.prototype.getBoundingRect.call(this);\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\r\n\r\nvar Style = require(\"./Style\");\r\n\r\nvar Element = require(\"../Element\");\r\n\r\nvar RectText = require(\"./mixin/RectText\");\r\n\r\n/**\r\n * Base class of all displayable graphic objects\r\n * @module zrender/graphic/Displayable\r\n */\r\n\r\n/**\r\n * @alias module:zrender/graphic/Displayable\r\n * @extends module:zrender/Element\r\n * @extends module:zrender/graphic/mixin/RectText\r\n */\r\nfunction Displayable(opts) {\r\n  opts = opts || {};\r\n  Element.call(this, opts); // Extend properties\r\n\r\n  for (var name in opts) {\r\n    if (opts.hasOwnProperty(name) && name !== 'style') {\r\n      this[name] = opts[name];\r\n    }\r\n  }\r\n  /**\r\n   * @type {module:zrender/graphic/Style}\r\n   */\r\n\r\n\r\n  this.style = new Style(opts.style, this);\r\n  this._rect = null; // Shapes for cascade clipping.\r\n  // Can only be `null`/`undefined` or an non-empty array, MUST NOT be an empty array.\r\n  // because it is easy to only using null to check whether clipPaths changed.\r\n\r\n  this.__clipPaths = null; // FIXME Stateful must be mixined after style is setted\r\n  // Stateful.call(this, opts);\r\n}\r\n\r\nDisplayable.prototype = {\r\n  constructor: Displayable,\r\n  type: 'displayable',\r\n\r\n  /**\r\n   * Dirty flag. From which painter will determine if this displayable object needs brush.\r\n   * @name module:zrender/graphic/Displayable#__dirty\r\n   * @type {boolean}\r\n   */\r\n  __dirty: true,\r\n\r\n  /**\r\n   * Whether the displayable object is visible. when it is true, the displayable object\r\n   * is not drawn, but the mouse event can still trigger the object.\r\n   * @name module:/zrender/graphic/Displayable#invisible\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  invisible: false,\r\n\r\n  /**\r\n   * @name module:/zrender/graphic/Displayable#z\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  z: 0,\r\n\r\n  /**\r\n   * @name module:/zrender/graphic/Displayable#z\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  z2: 0,\r\n\r\n  /**\r\n   * The z level determines the displayable object can be drawn in which layer canvas.\r\n   * @name module:/zrender/graphic/Displayable#zlevel\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  zlevel: 0,\r\n\r\n  /**\r\n   * Whether it can be dragged.\r\n   * @name module:/zrender/graphic/Displayable#draggable\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  draggable: false,\r\n\r\n  /**\r\n   * Whether is it dragging.\r\n   * @name module:/zrender/graphic/Displayable#draggable\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  dragging: false,\r\n\r\n  /**\r\n   * Whether to respond to mouse events.\r\n   * @name module:/zrender/graphic/Displayable#silent\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  silent: false,\r\n\r\n  /**\r\n   * If enable culling\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  culling: false,\r\n\r\n  /**\r\n   * Mouse cursor when hovered\r\n   * @name module:/zrender/graphic/Displayable#cursor\r\n   * @type {string}\r\n   */\r\n  cursor: 'pointer',\r\n\r\n  /**\r\n   * If hover area is bounding rect\r\n   * @name module:/zrender/graphic/Displayable#rectHover\r\n   * @type {string}\r\n   */\r\n  rectHover: false,\r\n\r\n  /**\r\n   * Render the element progressively when the value >= 0,\r\n   * usefull for large data.\r\n   * @type {boolean}\r\n   */\r\n  progressive: false,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  incremental: false,\r\n\r\n  /**\r\n   * Scale ratio for global scale.\r\n   * @type {boolean}\r\n   */\r\n  globalScaleRatio: 1,\r\n  beforeBrush: function (ctx) {},\r\n  afterBrush: function (ctx) {},\r\n\r\n  /**\r\n   * Graphic drawing method.\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   */\r\n  // Interface\r\n  brush: function (ctx, prevEl) {},\r\n\r\n  /**\r\n   * Get the minimum bounding box.\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  // Interface\r\n  getBoundingRect: function () {},\r\n\r\n  /**\r\n   * If displayable element contain coord x, y\r\n   * @param  {number} x\r\n   * @param  {number} y\r\n   * @return {boolean}\r\n   */\r\n  contain: function (x, y) {\r\n    return this.rectContain(x, y);\r\n  },\r\n\r\n  /**\r\n   * @param  {Function} cb\r\n   * @param  {}   context\r\n   */\r\n  traverse: function (cb, context) {\r\n    cb.call(context, this);\r\n  },\r\n\r\n  /**\r\n   * If bounding rect of element contain coord x, y\r\n   * @param  {number} x\r\n   * @param  {number} y\r\n   * @return {boolean}\r\n   */\r\n  rectContain: function (x, y) {\r\n    var coord = this.transformCoordToLocal(x, y);\r\n    var rect = this.getBoundingRect();\r\n    return rect.contain(coord[0], coord[1]);\r\n  },\r\n\r\n  /**\r\n   * Mark displayable element dirty and refresh next frame\r\n   */\r\n  dirty: function () {\r\n    this.__dirty = this.__dirtyText = true;\r\n    this._rect = null;\r\n    this.__zr && this.__zr.refresh();\r\n  },\r\n\r\n  /**\r\n   * If displayable object binded any event\r\n   * @return {boolean}\r\n   */\r\n  // TODO, events bound by bind\r\n  // isSilent: function () {\r\n  //     return !(\r\n  //         this.hoverable || this.draggable\r\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\r\n  //         || this.onmousedown || this.onmouseup || this.onclick\r\n  //         || this.ondragenter || this.ondragover || this.ondragleave\r\n  //         || this.ondrop\r\n  //     );\r\n  // },\r\n\r\n  /**\r\n   * Alias for animate('style')\r\n   * @param {boolean} loop\r\n   */\r\n  animateStyle: function (loop) {\r\n    return this.animate('style', loop);\r\n  },\r\n  attrKV: function (key, value) {\r\n    if (key !== 'style') {\r\n      Element.prototype.attrKV.call(this, key, value);\r\n    } else {\r\n      this.style.set(value);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {Object|string} key\r\n   * @param {*} value\r\n   */\r\n  setStyle: function (key, value) {\r\n    this.style.set(key, value);\r\n    this.dirty(false);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Use given style object\r\n   * @param  {Object} obj\r\n   */\r\n  useStyle: function (obj) {\r\n    this.style = new Style(obj, this);\r\n    this.dirty(false);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * The string value of `textPosition` needs to be calculated to a real postion.\r\n   * For example, `'inside'` is calculated to `[rect.width/2, rect.height/2]`\r\n   * by default. See `contain/text.js#calculateTextPosition` for more details.\r\n   * But some coutom shapes like \"pin\", \"flag\" have center that is not exactly\r\n   * `[width/2, height/2]`. So we provide this hook to customize the calculation\r\n   * for those shapes. It will be called if the `style.textPosition` is a string.\r\n   * @param {Obejct} [out] Prepared out object. If not provided, this method should\r\n   *        be responsible for creating one.\r\n   * @param {module:zrender/graphic/Style} style\r\n   * @param {Object} rect {x, y, width, height}\r\n   * @return {Obejct} out The same as the input out.\r\n   *         {\r\n   *             x: number. mandatory.\r\n   *             y: number. mandatory.\r\n   *             textAlign: string. optional. use style.textAlign by default.\r\n   *             textVerticalAlign: string. optional. use style.textVerticalAlign by default.\r\n   *         }\r\n   */\r\n  calculateTextPosition: null\r\n};\r\nzrUtil.inherits(Displayable, Element);\r\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\r\n\r\nvar _default = Displayable;\r\nmodule.exports = _default;","/**\r\n * @param {Array.<Object>} colorStops\r\n */\r\nvar Gradient = function (colorStops) {\r\n  this.colorStops = colorStops || [];\r\n};\r\n\r\nGradient.prototype = {\r\n  constructor: Gradient,\r\n  addColorStop: function (offset, color) {\r\n    this.colorStops.push({\r\n      offset: offset,\r\n      color: color\r\n    });\r\n  }\r\n};\r\nvar _default = Gradient;\r\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\r\n\r\nvar BoundingRect = require(\"../core/BoundingRect\");\r\n\r\nvar zrUtil = require(\"../core/util\");\r\n\r\nvar imageHelper = require(\"./helper/image\");\r\n\r\n/**\r\n * @alias zrender/graphic/Image\r\n * @extends module:zrender/graphic/Displayable\r\n * @constructor\r\n * @param {Object} opts\r\n */\r\nfunction ZImage(opts) {\r\n  Displayable.call(this, opts);\r\n}\r\n\r\nZImage.prototype = {\r\n  constructor: ZImage,\r\n  type: 'image',\r\n  brush: function (ctx, prevEl) {\r\n    var style = this.style;\r\n    var src = style.image; // Must bind each time\r\n\r\n    style.bind(ctx, this, prevEl);\r\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\r\n\r\n    if (!image || !imageHelper.isImageReady(image)) {\r\n      return;\r\n    } // 图片已经加载完成\r\n    // if (image.nodeName.toUpperCase() == 'IMG') {\r\n    //     if (!image.complete) {\r\n    //         return;\r\n    //     }\r\n    // }\r\n    // Else is canvas\r\n\r\n\r\n    var x = style.x || 0;\r\n    var y = style.y || 0;\r\n    var width = style.width;\r\n    var height = style.height;\r\n    var aspect = image.width / image.height;\r\n\r\n    if (width == null && height != null) {\r\n      // Keep image/height ratio\r\n      width = height * aspect;\r\n    } else if (height == null && width != null) {\r\n      height = width / aspect;\r\n    } else if (width == null && height == null) {\r\n      width = image.width;\r\n      height = image.height;\r\n    } // 设置transform\r\n\r\n\r\n    this.setTransform(ctx);\r\n\r\n    if (style.sWidth && style.sHeight) {\r\n      var sx = style.sx || 0;\r\n      var sy = style.sy || 0;\r\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\r\n    } else if (style.sx && style.sy) {\r\n      var sx = style.sx;\r\n      var sy = style.sy;\r\n      var sWidth = width - sx;\r\n      var sHeight = height - sy;\r\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\r\n    } else {\r\n      ctx.drawImage(image, x, y, width, height);\r\n    } // Draw rect text\r\n\r\n\r\n    if (style.text != null) {\r\n      // Only restore transform when needs draw text.\r\n      this.restoreTransform(ctx);\r\n      this.drawRectText(ctx, this.getBoundingRect());\r\n    }\r\n  },\r\n  getBoundingRect: function () {\r\n    var style = this.style;\r\n\r\n    if (!this._rect) {\r\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\r\n    }\r\n\r\n    return this._rect;\r\n  }\r\n};\r\nzrUtil.inherits(ZImage, Displayable);\r\nvar _default = ZImage;\r\nmodule.exports = _default;","var _util = require(\"../core/util\");\r\n\r\nvar inherits = _util.inherits;\r\n\r\nvar Displayble = require(\"./Displayable\");\r\n\r\nvar BoundingRect = require(\"../core/BoundingRect\");\r\n\r\n/**\r\n * Displayable for incremental rendering. It will be rendered in a separate layer\r\n * IncrementalDisplay have two main methods. `clearDisplayables` and `addDisplayables`\r\n * addDisplayables will render the added displayables incremetally.\r\n *\r\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\r\n */\r\n// TODO Style override ?\r\nfunction IncrementalDisplayble(opts) {\r\n  Displayble.call(this, opts);\r\n  this._displayables = [];\r\n  this._temporaryDisplayables = [];\r\n  this._cursor = 0;\r\n  this.notClear = true;\r\n}\r\n\r\nIncrementalDisplayble.prototype.incremental = true;\r\n\r\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\r\n  this._displayables = [];\r\n  this._temporaryDisplayables = [];\r\n  this._cursor = 0;\r\n  this.dirty();\r\n  this.notClear = false;\r\n};\r\n\r\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\r\n  if (notPersistent) {\r\n    this._temporaryDisplayables.push(displayable);\r\n  } else {\r\n    this._displayables.push(displayable);\r\n  }\r\n\r\n  this.dirty();\r\n};\r\n\r\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\r\n  notPersistent = notPersistent || false;\r\n\r\n  for (var i = 0; i < displayables.length; i++) {\r\n    this.addDisplayable(displayables[i], notPersistent);\r\n  }\r\n};\r\n\r\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\r\n  for (var i = this._cursor; i < this._displayables.length; i++) {\r\n    cb && cb(this._displayables[i]);\r\n  }\r\n\r\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\r\n    cb && cb(this._temporaryDisplayables[i]);\r\n  }\r\n};\r\n\r\nIncrementalDisplayble.prototype.update = function () {\r\n  this.updateTransform();\r\n\r\n  for (var i = this._cursor; i < this._displayables.length; i++) {\r\n    var displayable = this._displayables[i]; // PENDING\r\n\r\n    displayable.parent = this;\r\n    displayable.update();\r\n    displayable.parent = null;\r\n  }\r\n\r\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\r\n    var displayable = this._temporaryDisplayables[i]; // PENDING\r\n\r\n    displayable.parent = this;\r\n    displayable.update();\r\n    displayable.parent = null;\r\n  }\r\n};\r\n\r\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\r\n  // Render persistant displayables.\r\n  for (var i = this._cursor; i < this._displayables.length; i++) {\r\n    var displayable = this._displayables[i];\r\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\r\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\r\n    displayable.afterBrush && displayable.afterBrush(ctx);\r\n  }\r\n\r\n  this._cursor = i; // Render temporary displayables.\r\n\r\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\r\n    var displayable = this._temporaryDisplayables[i];\r\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\r\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\r\n    displayable.afterBrush && displayable.afterBrush(ctx);\r\n  }\r\n\r\n  this._temporaryDisplayables = [];\r\n  this.notClear = true;\r\n};\r\n\r\nvar m = [];\r\n\r\nIncrementalDisplayble.prototype.getBoundingRect = function () {\r\n  if (!this._rect) {\r\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\r\n\r\n    for (var i = 0; i < this._displayables.length; i++) {\r\n      var displayable = this._displayables[i];\r\n      var childRect = displayable.getBoundingRect().clone();\r\n\r\n      if (displayable.needLocalTransform()) {\r\n        childRect.applyTransform(displayable.getLocalTransform(m));\r\n      }\r\n\r\n      rect.union(childRect);\r\n    }\r\n\r\n    this._rect = rect;\r\n  }\r\n\r\n  return this._rect;\r\n};\r\n\r\nIncrementalDisplayble.prototype.contain = function (x, y) {\r\n  var localPos = this.transformCoordToLocal(x, y);\r\n  var rect = this.getBoundingRect();\r\n\r\n  if (rect.contain(localPos[0], localPos[1])) {\r\n    for (var i = 0; i < this._displayables.length; i++) {\r\n      var displayable = this._displayables[i];\r\n\r\n      if (displayable.contain(x, y)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\ninherits(IncrementalDisplayble, Displayble);\r\nvar _default = IncrementalDisplayble;\r\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\r\n\r\nvar Gradient = require(\"./Gradient\");\r\n\r\n/**\r\n * x, y, x2, y2 are all percent from 0 to 1\r\n * @param {number} [x=0]\r\n * @param {number} [y=0]\r\n * @param {number} [x2=1]\r\n * @param {number} [y2=0]\r\n * @param {Array.<Object>} colorStops\r\n * @param {boolean} [globalCoord=false]\r\n */\r\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\r\n  // Should do nothing more in this constructor. Because gradient can be\r\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\r\n  // this constructor will not be called.\r\n  this.x = x == null ? 0 : x;\r\n  this.y = y == null ? 0 : y;\r\n  this.x2 = x2 == null ? 1 : x2;\r\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\r\n\r\n  this.type = 'linear'; // If use global coord\r\n\r\n  this.global = globalCoord || false;\r\n  Gradient.call(this, colorStops);\r\n};\r\n\r\nLinearGradient.prototype = {\r\n  constructor: LinearGradient\r\n};\r\nzrUtil.inherits(LinearGradient, Gradient);\r\nvar _default = LinearGradient;\r\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\r\n\r\nvar zrUtil = require(\"../core/util\");\r\n\r\nvar PathProxy = require(\"../core/PathProxy\");\r\n\r\nvar pathContain = require(\"../contain/path\");\r\n\r\nvar Pattern = require(\"./Pattern\");\r\n\r\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\r\nvar abs = Math.abs;\r\nvar pathProxyForDraw = new PathProxy(true);\r\n/**\r\n * @alias module:zrender/graphic/Path\r\n * @extends module:zrender/graphic/Displayable\r\n * @constructor\r\n * @param {Object} opts\r\n */\r\n\r\nfunction Path(opts) {\r\n  Displayable.call(this, opts);\r\n  /**\r\n   * @type {module:zrender/core/PathProxy}\r\n   * @readOnly\r\n   */\r\n\r\n  this.path = null;\r\n}\r\n\r\nPath.prototype = {\r\n  constructor: Path,\r\n  type: 'path',\r\n  __dirtyPath: true,\r\n  strokeContainThreshold: 5,\r\n  // This item default to be false. But in map series in echarts,\r\n  // in order to improve performance, it should be set to true,\r\n  // so the shorty segment won't draw.\r\n  segmentIgnoreThreshold: 0,\r\n\r\n  /**\r\n   * See `module:zrender/src/graphic/helper/subPixelOptimize`.\r\n   * @type {boolean}\r\n   */\r\n  subPixelOptimize: false,\r\n  brush: function (ctx, prevEl) {\r\n    var style = this.style;\r\n    var path = this.path || pathProxyForDraw;\r\n    var hasStroke = style.hasStroke();\r\n    var hasFill = style.hasFill();\r\n    var fill = style.fill;\r\n    var stroke = style.stroke;\r\n    var hasFillGradient = hasFill && !!fill.colorStops;\r\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\r\n    var hasFillPattern = hasFill && !!fill.image;\r\n    var hasStrokePattern = hasStroke && !!stroke.image;\r\n    style.bind(ctx, this, prevEl);\r\n    this.setTransform(ctx);\r\n\r\n    if (this.__dirty) {\r\n      var rect; // Update gradient because bounding rect may changed\r\n\r\n      if (hasFillGradient) {\r\n        rect = rect || this.getBoundingRect();\r\n        this._fillGradient = style.getGradient(ctx, fill, rect);\r\n      }\r\n\r\n      if (hasStrokeGradient) {\r\n        rect = rect || this.getBoundingRect();\r\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\r\n      }\r\n    } // Use the gradient or pattern\r\n\r\n\r\n    if (hasFillGradient) {\r\n      // PENDING If may have affect the state\r\n      ctx.fillStyle = this._fillGradient;\r\n    } else if (hasFillPattern) {\r\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\r\n    }\r\n\r\n    if (hasStrokeGradient) {\r\n      ctx.strokeStyle = this._strokeGradient;\r\n    } else if (hasStrokePattern) {\r\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\r\n    }\r\n\r\n    var lineDash = style.lineDash;\r\n    var lineDashOffset = style.lineDashOffset;\r\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\r\n\r\n    var scale = this.getGlobalScale();\r\n    path.setScale(scale[0], scale[1], this.segmentIgnoreThreshold); // Proxy context\r\n    // Rebuild path in following 2 cases\r\n    // 1. Path is dirty\r\n    // 2. Path needs javascript implemented lineDash stroking.\r\n    //    In this case, lineDash information will not be saved in PathProxy\r\n\r\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\r\n      path.beginPath(ctx); // Setting line dash before build path\r\n\r\n      if (lineDash && !ctxLineDash) {\r\n        path.setLineDash(lineDash);\r\n        path.setLineDashOffset(lineDashOffset);\r\n      }\r\n\r\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\r\n\r\n      if (this.path) {\r\n        this.__dirtyPath = false;\r\n      }\r\n    } else {\r\n      // Replay path building\r\n      ctx.beginPath();\r\n      this.path.rebuildPath(ctx);\r\n    }\r\n\r\n    if (hasFill) {\r\n      if (style.fillOpacity != null) {\r\n        var originalGlobalAlpha = ctx.globalAlpha;\r\n        ctx.globalAlpha = style.fillOpacity * style.opacity;\r\n        path.fill(ctx);\r\n        ctx.globalAlpha = originalGlobalAlpha;\r\n      } else {\r\n        path.fill(ctx);\r\n      }\r\n    }\r\n\r\n    if (lineDash && ctxLineDash) {\r\n      ctx.setLineDash(lineDash);\r\n      ctx.lineDashOffset = lineDashOffset;\r\n    }\r\n\r\n    if (hasStroke) {\r\n      if (style.strokeOpacity != null) {\r\n        var originalGlobalAlpha = ctx.globalAlpha;\r\n        ctx.globalAlpha = style.strokeOpacity * style.opacity;\r\n        path.stroke(ctx);\r\n        ctx.globalAlpha = originalGlobalAlpha;\r\n      } else {\r\n        path.stroke(ctx);\r\n      }\r\n    }\r\n\r\n    if (lineDash && ctxLineDash) {\r\n      // PENDING\r\n      // Remove lineDash\r\n      ctx.setLineDash([]);\r\n    } // Draw rect text\r\n\r\n\r\n    if (style.text != null) {\r\n      // Only restore transform when needs draw text.\r\n      this.restoreTransform(ctx);\r\n      this.drawRectText(ctx, this.getBoundingRect());\r\n    }\r\n  },\r\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\r\n  // Like in circle\r\n  buildPath: function (ctx, shapeCfg, inBundle) {},\r\n  createPathProxy: function () {\r\n    this.path = new PathProxy();\r\n  },\r\n  getBoundingRect: function () {\r\n    var rect = this._rect;\r\n    var style = this.style;\r\n    var needsUpdateRect = !rect;\r\n\r\n    if (needsUpdateRect) {\r\n      var path = this.path;\r\n\r\n      if (!path) {\r\n        // Create path on demand.\r\n        path = this.path = new PathProxy();\r\n      }\r\n\r\n      if (this.__dirtyPath) {\r\n        path.beginPath();\r\n        this.buildPath(path, this.shape, false);\r\n      }\r\n\r\n      rect = path.getBoundingRect();\r\n    }\r\n\r\n    this._rect = rect;\r\n\r\n    if (style.hasStroke()) {\r\n      // Needs update rect with stroke lineWidth when\r\n      // 1. Element changes scale or lineWidth\r\n      // 2. Shape is changed\r\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\r\n\r\n      if (this.__dirty || needsUpdateRect) {\r\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\r\n\r\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\r\n\r\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\r\n\r\n        if (!style.hasFill()) {\r\n          w = Math.max(w, this.strokeContainThreshold || 4);\r\n        } // Consider line width\r\n        // Line scale can't be 0;\r\n\r\n\r\n        if (lineScale > 1e-10) {\r\n          rectWithStroke.width += w / lineScale;\r\n          rectWithStroke.height += w / lineScale;\r\n          rectWithStroke.x -= w / lineScale / 2;\r\n          rectWithStroke.y -= w / lineScale / 2;\r\n        }\r\n      } // Return rect with stroke\r\n\r\n\r\n      return rectWithStroke;\r\n    }\r\n\r\n    return rect;\r\n  },\r\n  contain: function (x, y) {\r\n    var localPos = this.transformCoordToLocal(x, y);\r\n    var rect = this.getBoundingRect();\r\n    var style = this.style;\r\n    x = localPos[0];\r\n    y = localPos[1];\r\n\r\n    if (rect.contain(x, y)) {\r\n      var pathData = this.path.data;\r\n\r\n      if (style.hasStroke()) {\r\n        var lineWidth = style.lineWidth;\r\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\r\n\r\n        if (lineScale > 1e-10) {\r\n          // Only add extra hover lineWidth when there are no fill\r\n          if (!style.hasFill()) {\r\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\r\n          }\r\n\r\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (style.hasFill()) {\r\n        return pathContain.contain(pathData, x, y);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * @param  {boolean} dirtyPath\r\n   */\r\n  dirty: function (dirtyPath) {\r\n    if (dirtyPath == null) {\r\n      dirtyPath = true;\r\n    } // Only mark dirty, not mark clean\r\n\r\n\r\n    if (dirtyPath) {\r\n      this.__dirtyPath = dirtyPath;\r\n      this._rect = null;\r\n    }\r\n\r\n    this.__dirty = this.__dirtyText = true;\r\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\r\n\r\n    if (this.__clipTarget) {\r\n      this.__clipTarget.dirty();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Alias for animate('shape')\r\n   * @param {boolean} loop\r\n   */\r\n  animateShape: function (loop) {\r\n    return this.animate('shape', loop);\r\n  },\r\n  // Overwrite attrKV\r\n  attrKV: function (key, value) {\r\n    // FIXME\r\n    if (key === 'shape') {\r\n      this.setShape(value);\r\n      this.__dirtyPath = true;\r\n      this._rect = null;\r\n    } else {\r\n      Displayable.prototype.attrKV.call(this, key, value);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {Object|string} key\r\n   * @param {*} value\r\n   */\r\n  setShape: function (key, value) {\r\n    var shape = this.shape; // Path from string may not have shape\r\n\r\n    if (shape) {\r\n      if (zrUtil.isObject(key)) {\r\n        for (var name in key) {\r\n          if (key.hasOwnProperty(name)) {\r\n            shape[name] = key[name];\r\n          }\r\n        }\r\n      } else {\r\n        shape[key] = value;\r\n      }\r\n\r\n      this.dirty(true);\r\n    }\r\n\r\n    return this;\r\n  },\r\n  getLineScale: function () {\r\n    var m = this.transform; // Get the line scale.\r\n    // Determinant of `m` means how much the area is enlarged by the\r\n    // transformation. So its square root can be used as a scale factor\r\n    // for width.\r\n\r\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\r\n  }\r\n};\r\n/**\r\n * 扩展一个 Path element, 比如星形，圆等。\r\n * Extend a path element\r\n * @param {Object} props\r\n * @param {string} props.type Path type\r\n * @param {Function} props.init Initialize\r\n * @param {Function} props.buildPath Overwrite buildPath method\r\n * @param {Object} [props.style] Extended default style config\r\n * @param {Object} [props.shape] Extended default shape config\r\n */\r\n\r\nPath.extend = function (defaults) {\r\n  var Sub = function (opts) {\r\n    Path.call(this, opts);\r\n\r\n    if (defaults.style) {\r\n      // Extend default style\r\n      this.style.extendFrom(defaults.style, false);\r\n    } // Extend default shape\r\n\r\n\r\n    var defaultShape = defaults.shape;\r\n\r\n    if (defaultShape) {\r\n      this.shape = this.shape || {};\r\n      var thisShape = this.shape;\r\n\r\n      for (var name in defaultShape) {\r\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\r\n          thisShape[name] = defaultShape[name];\r\n        }\r\n      }\r\n    }\r\n\r\n    defaults.init && defaults.init.call(this, opts);\r\n  };\r\n\r\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\r\n\r\n  for (var name in defaults) {\r\n    // Extending prototype values and methods\r\n    if (name !== 'style' && name !== 'shape') {\r\n      Sub.prototype[name] = defaults[name];\r\n    }\r\n  }\r\n\r\n  return Sub;\r\n};\r\n\r\nzrUtil.inherits(Path, Displayable);\r\nvar _default = Path;\r\nmodule.exports = _default;","var Pattern = function (image, repeat) {\r\n  // Should do nothing more in this constructor. Because gradient can be\r\n  // declard by `color: {image: ...}`, where this constructor will not be called.\r\n  this.image = image;\r\n  this.repeat = repeat; // Can be cloned\r\n\r\n  this.type = 'pattern';\r\n};\r\n\r\nPattern.prototype.getCanvasPattern = function (ctx) {\r\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\r\n};\r\n\r\nvar _default = Pattern;\r\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\r\n\r\nvar Gradient = require(\"./Gradient\");\r\n\r\n/**\r\n * x, y, r are all percent from 0 to 1\r\n * @param {number} [x=0.5]\r\n * @param {number} [y=0.5]\r\n * @param {number} [r=0.5]\r\n * @param {Array.<Object>} [colorStops]\r\n * @param {boolean} [globalCoord=false]\r\n */\r\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\r\n  // Should do nothing more in this constructor. Because gradient can be\r\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\r\n  // this constructor will not be called.\r\n  this.x = x == null ? 0.5 : x;\r\n  this.y = y == null ? 0.5 : y;\r\n  this.r = r == null ? 0.5 : r; // Can be cloned\r\n\r\n  this.type = 'radial'; // If use global coord\r\n\r\n  this.global = globalCoord || false;\r\n  Gradient.call(this, colorStops);\r\n};\r\n\r\nRadialGradient.prototype = {\r\n  constructor: RadialGradient\r\n};\r\nzrUtil.inherits(RadialGradient, Gradient);\r\nvar _default = RadialGradient;\r\nmodule.exports = _default;","var fixShadow = require(\"./helper/fixShadow\");\r\n\r\nvar _constant = require(\"./constant\");\r\n\r\nvar ContextCachedBy = _constant.ContextCachedBy;\r\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\r\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\r\n\r\nvar Style = function (opts) {\r\n  this.extendFrom(opts, false);\r\n};\r\n\r\nfunction createLinearGradient(ctx, obj, rect) {\r\n  var x = obj.x == null ? 0 : obj.x;\r\n  var x2 = obj.x2 == null ? 1 : obj.x2;\r\n  var y = obj.y == null ? 0 : obj.y;\r\n  var y2 = obj.y2 == null ? 0 : obj.y2;\r\n\r\n  if (!obj.global) {\r\n    x = x * rect.width + rect.x;\r\n    x2 = x2 * rect.width + rect.x;\r\n    y = y * rect.height + rect.y;\r\n    y2 = y2 * rect.height + rect.y;\r\n  } // Fix NaN when rect is Infinity\r\n\r\n\r\n  x = isNaN(x) ? 0 : x;\r\n  x2 = isNaN(x2) ? 1 : x2;\r\n  y = isNaN(y) ? 0 : y;\r\n  y2 = isNaN(y2) ? 0 : y2;\r\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\r\n  return canvasGradient;\r\n}\r\n\r\nfunction createRadialGradient(ctx, obj, rect) {\r\n  var width = rect.width;\r\n  var height = rect.height;\r\n  var min = Math.min(width, height);\r\n  var x = obj.x == null ? 0.5 : obj.x;\r\n  var y = obj.y == null ? 0.5 : obj.y;\r\n  var r = obj.r == null ? 0.5 : obj.r;\r\n\r\n  if (!obj.global) {\r\n    x = x * width + rect.x;\r\n    y = y * height + rect.y;\r\n    r = r * min;\r\n  }\r\n\r\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\r\n  return canvasGradient;\r\n}\r\n\r\nStyle.prototype = {\r\n  constructor: Style,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  fill: '#000',\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  stroke: null,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  opacity: 1,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  fillOpacity: null,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  strokeOpacity: null,\r\n\r\n  /**\r\n   * `true` is not supported.\r\n   * `false`/`null`/`undefined` are the same.\r\n   * `false` is used to remove lineDash in some\r\n   * case that `null`/`undefined` can not be set.\r\n   * (e.g., emphasis.lineStyle in echarts)\r\n   * @type {Array.<number>|boolean}\r\n   */\r\n  lineDash: null,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  lineDashOffset: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  shadowBlur: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  shadowOffsetX: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  shadowOffsetY: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  lineWidth: 1,\r\n\r\n  /**\r\n   * If stroke ignore scale\r\n   * @type {Boolean}\r\n   */\r\n  strokeNoScale: false,\r\n  // Bounding rect text configuration\r\n  // Not affected by element transform\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  text: null,\r\n\r\n  /**\r\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\r\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\r\n   * So do not visit it directly in upper application (like echarts),\r\n   * but use `contain/text#makeFont` instead.\r\n   * @type {string}\r\n   */\r\n  font: null,\r\n\r\n  /**\r\n   * The same as font. Use font please.\r\n   * @deprecated\r\n   * @type {string}\r\n   */\r\n  textFont: null,\r\n\r\n  /**\r\n   * It helps merging respectively, rather than parsing an entire font string.\r\n   * @type {string}\r\n   */\r\n  fontStyle: null,\r\n\r\n  /**\r\n   * It helps merging respectively, rather than parsing an entire font string.\r\n   * @type {string}\r\n   */\r\n  fontWeight: null,\r\n\r\n  /**\r\n   * It helps merging respectively, rather than parsing an entire font string.\r\n   * Should be 12 but not '12px'.\r\n   * @type {number}\r\n   */\r\n  fontSize: null,\r\n\r\n  /**\r\n   * It helps merging respectively, rather than parsing an entire font string.\r\n   * @type {string}\r\n   */\r\n  fontFamily: null,\r\n\r\n  /**\r\n   * Reserved for special functinality, like 'hr'.\r\n   * @type {string}\r\n   */\r\n  textTag: null,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  textFill: '#000',\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  textStroke: null,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textWidth: null,\r\n\r\n  /**\r\n   * Only for textBackground.\r\n   * @type {number}\r\n   */\r\n  textHeight: null,\r\n\r\n  /**\r\n   * textStroke may be set as some color as a default\r\n   * value in upper applicaion, where the default value\r\n   * of textStrokeWidth should be 0 to make sure that\r\n   * user can choose to do not use text stroke.\r\n   * @type {number}\r\n   */\r\n  textStrokeWidth: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textLineHeight: null,\r\n\r\n  /**\r\n   * 'inside', 'left', 'right', 'top', 'bottom'\r\n   * [x, y]\r\n   * Based on x, y of rect.\r\n   * @type {string|Array.<number>}\r\n   * @default 'inside'\r\n   */\r\n  textPosition: 'inside',\r\n\r\n  /**\r\n   * If not specified, use the boundingRect of a `displayable`.\r\n   * @type {Object}\r\n   */\r\n  textRect: null,\r\n\r\n  /**\r\n   * [x, y]\r\n   * @type {Array.<number>}\r\n   */\r\n  textOffset: null,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  textAlign: null,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  textVerticalAlign: null,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textDistance: 5,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  textShadowColor: 'transparent',\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textShadowBlur: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textShadowOffsetX: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textShadowOffsetY: 0,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  textBoxShadowColor: 'transparent',\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textBoxShadowBlur: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textBoxShadowOffsetX: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textBoxShadowOffsetY: 0,\r\n\r\n  /**\r\n   * Whether transform text.\r\n   * Only available in Path and Image element,\r\n   * where the text is called as `RectText`.\r\n   * @type {boolean}\r\n   */\r\n  transformText: false,\r\n\r\n  /**\r\n   * Text rotate around position of Path or Image.\r\n   * The origin of the rotation can be specified by `textOrigin`.\r\n   * Only available in Path and Image element,\r\n   * where the text is called as `RectText`.\r\n   */\r\n  textRotation: 0,\r\n\r\n  /**\r\n   * Text origin of text rotation.\r\n   * Useful in the case like label rotation of circular symbol.\r\n   * Only available in Path and Image element, where the text is called\r\n   * as `RectText` and the element is called as \"host element\".\r\n   * The value can be:\r\n   * + If specified as a coordinate like `[10, 40]`, it is the `[x, y]`\r\n   * base on the left-top corner of the rect of its host element.\r\n   * + If specified as a string `center`, it is the center of the rect of\r\n   * its host element.\r\n   * + By default, this origin is the `textPosition`.\r\n   * @type {string|Array.<number>}\r\n   */\r\n  textOrigin: null,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  textBackgroundColor: null,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  textBorderColor: null,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textBorderWidth: 0,\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  textBorderRadius: 0,\r\n\r\n  /**\r\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\r\n   * @type {number|Array.<number>}\r\n   */\r\n  textPadding: null,\r\n\r\n  /**\r\n   * Text styles for rich text.\r\n   * @type {Object}\r\n   */\r\n  rich: null,\r\n\r\n  /**\r\n   * {outerWidth, outerHeight, ellipsis, placeholder}\r\n   * @type {Object}\r\n   */\r\n  truncate: null,\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\r\n   * @type {string}\r\n   */\r\n  blend: null,\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   */\r\n  bind: function (ctx, el, prevEl) {\r\n    var style = this;\r\n    var prevStyle = prevEl && prevEl.style; // If no prevStyle, it means first draw.\r\n    // Only apply cache if the last time cachced by this function.\r\n\r\n    var notCheckCache = !prevStyle || ctx.__attrCachedBy !== ContextCachedBy.STYLE_BIND;\r\n    ctx.__attrCachedBy = ContextCachedBy.STYLE_BIND;\r\n\r\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\r\n      var prop = STYLE_COMMON_PROPS[i];\r\n      var styleName = prop[0];\r\n\r\n      if (notCheckCache || style[styleName] !== prevStyle[styleName]) {\r\n        // FIXME Invalid property value will cause style leak from previous element.\r\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\r\n      }\r\n    }\r\n\r\n    if (notCheckCache || style.fill !== prevStyle.fill) {\r\n      ctx.fillStyle = style.fill;\r\n    }\r\n\r\n    if (notCheckCache || style.stroke !== prevStyle.stroke) {\r\n      ctx.strokeStyle = style.stroke;\r\n    }\r\n\r\n    if (notCheckCache || style.opacity !== prevStyle.opacity) {\r\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\r\n    }\r\n\r\n    if (notCheckCache || style.blend !== prevStyle.blend) {\r\n      ctx.globalCompositeOperation = style.blend || 'source-over';\r\n    }\r\n\r\n    if (this.hasStroke()) {\r\n      var lineWidth = style.lineWidth;\r\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\r\n    }\r\n  },\r\n  hasFill: function () {\r\n    var fill = this.fill;\r\n    return fill != null && fill !== 'none';\r\n  },\r\n  hasStroke: function () {\r\n    var stroke = this.stroke;\r\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\r\n  },\r\n\r\n  /**\r\n   * Extend from other style\r\n   * @param {zrender/graphic/Style} otherStyle\r\n   * @param {boolean} overwrite true: overwrirte any way.\r\n   *                            false: overwrite only when !target.hasOwnProperty\r\n   *                            others: overwrite when property is not null/undefined.\r\n   */\r\n  extendFrom: function (otherStyle, overwrite) {\r\n    if (otherStyle) {\r\n      for (var name in otherStyle) {\r\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\r\n          this[name] = otherStyle[name];\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Batch setting style with a given object\r\n   * @param {Object|string} obj\r\n   * @param {*} [obj]\r\n   */\r\n  set: function (obj, value) {\r\n    if (typeof obj === 'string') {\r\n      this[obj] = value;\r\n    } else {\r\n      this.extendFrom(obj, true);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Clone\r\n   * @return {zrender/graphic/Style} [description]\r\n   */\r\n  clone: function () {\r\n    var newStyle = new this.constructor();\r\n    newStyle.extendFrom(this, true);\r\n    return newStyle;\r\n  },\r\n  getGradient: function (ctx, obj, rect) {\r\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\r\n    var canvasGradient = method(ctx, obj, rect);\r\n    var colorStops = obj.colorStops;\r\n\r\n    for (var i = 0; i < colorStops.length; i++) {\r\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\r\n    }\r\n\r\n    return canvasGradient;\r\n  }\r\n};\r\nvar styleProto = Style.prototype;\r\n\r\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\r\n  var prop = STYLE_COMMON_PROPS[i];\r\n\r\n  if (!(prop[0] in styleProto)) {\r\n    styleProto[prop[0]] = prop[1];\r\n  }\r\n} // Provide for others\r\n\r\n\r\nStyle.getGradient = styleProto.getGradient;\r\nvar _default = Style;\r\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\r\n\r\nvar zrUtil = require(\"../core/util\");\r\n\r\nvar textContain = require(\"../contain/text\");\r\n\r\nvar textHelper = require(\"./helper/text\");\r\n\r\nvar _constant = require(\"./constant\");\r\n\r\nvar ContextCachedBy = _constant.ContextCachedBy;\r\n\r\n/**\r\n * @alias zrender/graphic/Text\r\n * @extends module:zrender/graphic/Displayable\r\n * @constructor\r\n * @param {Object} opts\r\n */\r\nvar Text = function (opts) {\r\n  // jshint ignore:line\r\n  Displayable.call(this, opts);\r\n};\r\n\r\nText.prototype = {\r\n  constructor: Text,\r\n  type: 'text',\r\n  brush: function (ctx, prevEl) {\r\n    var style = this.style; // Optimize, avoid normalize every time.\r\n\r\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\r\n\r\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\r\n    var text = style.text; // Convert to string\r\n\r\n    text != null && (text += ''); // Do not apply style.bind in Text node. Because the real bind job\r\n    // is in textHelper.renderText, and performance of text render should\r\n    // be considered.\r\n    // style.bind(ctx, this, prevEl);\r\n\r\n    if (!textHelper.needDrawText(text, style)) {\r\n      // The current el.style is not applied\r\n      // and should not be used as cache.\r\n      ctx.__attrCachedBy = ContextCachedBy.NONE;\r\n      return;\r\n    }\r\n\r\n    this.setTransform(ctx);\r\n    textHelper.renderText(this, ctx, text, style, null, prevEl);\r\n    this.restoreTransform(ctx);\r\n  },\r\n  getBoundingRect: function () {\r\n    var style = this.style; // Optimize, avoid normalize every time.\r\n\r\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\r\n\r\n    if (!this._rect) {\r\n      var text = style.text;\r\n      text != null ? text += '' : text = '';\r\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.textLineHeight, style.rich);\r\n      rect.x += style.x || 0;\r\n      rect.y += style.y || 0;\r\n\r\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\r\n        var w = style.textStrokeWidth;\r\n        rect.x -= w / 2;\r\n        rect.y -= w / 2;\r\n        rect.width += w;\r\n        rect.height += w;\r\n      }\r\n\r\n      this._rect = rect;\r\n    }\r\n\r\n    return this._rect;\r\n  }\r\n};\r\nzrUtil.inherits(Text, Displayable);\r\nvar _default = Text;\r\nmodule.exports = _default;","var ContextCachedBy = {\r\n  NONE: 0,\r\n  STYLE_BIND: 1,\r\n  PLAIN_TEXT: 2\r\n}; // Avoid confused with 0/false.\r\n\r\nvar WILL_BE_RESTORED = 9;\r\nexports.ContextCachedBy = ContextCachedBy;\r\nexports.WILL_BE_RESTORED = WILL_BE_RESTORED;","var env = require(\"../../core/env\");\r\n\r\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\r\n// where exception \"unexpected call to method or property access\"\r\n// might be thrown when calling ctx.fill or ctx.stroke after a path\r\n// whose area size is zero is drawn and ctx.clip() is called and\r\n// shadowBlur is set. See #4572, #3112, #5777.\r\n// (e.g.,\r\n//  ctx.moveTo(10, 10);\r\n//  ctx.lineTo(20, 10);\r\n//  ctx.closePath();\r\n//  ctx.clip();\r\n//  ctx.shadowBlur = 10;\r\n//  ...\r\n//  ctx.fill();\r\n// )\r\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\r\n\r\nfunction _default(orignalBrush) {\r\n  // version string can be: '11.0'\r\n  return env.browser.ie && env.browser.version >= 11 ? function () {\r\n    var clipPaths = this.__clipPaths;\r\n    var style = this.style;\r\n    var modified;\r\n\r\n    if (clipPaths) {\r\n      for (var i = 0; i < clipPaths.length; i++) {\r\n        var clipPath = clipPaths[i];\r\n        var shape = clipPath && clipPath.shape;\r\n        var type = clipPath && clipPath.type;\r\n\r\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\r\n          for (var j = 0; j < shadowTemp.length; j++) {\r\n            // It is save to put shadowTemp static, because shadowTemp\r\n            // will be all modified each item brush called.\r\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\r\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\r\n          }\r\n\r\n          modified = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    orignalBrush.apply(this, arguments);\r\n\r\n    if (modified) {\r\n      for (var j = 0; j < shadowTemp.length; j++) {\r\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\r\n      }\r\n    }\r\n  } : orignalBrush;\r\n}\r\n\r\nmodule.exports = _default;","var SHADOW_PROPS = {\r\n  'shadowBlur': 1,\r\n  'shadowOffsetX': 1,\r\n  'shadowOffsetY': 1,\r\n  'textShadowBlur': 1,\r\n  'textShadowOffsetX': 1,\r\n  'textShadowOffsetY': 1,\r\n  'textBoxShadowBlur': 1,\r\n  'textBoxShadowOffsetX': 1,\r\n  'textBoxShadowOffsetY': 1\r\n};\r\n\r\nfunction _default(ctx, propName, value) {\r\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\r\n    return value *= ctx.dpr;\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nmodule.exports = _default;","var LRU = require(\"../../core/LRU\");\r\n\r\nvar globalImageCache = new LRU(50);\r\n/**\r\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\r\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\r\n */\r\n\r\nfunction findExistImage(newImageOrSrc) {\r\n  if (typeof newImageOrSrc === 'string') {\r\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\r\n    return cachedImgObj && cachedImgObj.image;\r\n  } else {\r\n    return newImageOrSrc;\r\n  }\r\n}\r\n/**\r\n * Caution: User should cache loaded images, but not just count on LRU.\r\n * Consider if required images more than LRU size, will dead loop occur?\r\n *\r\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\r\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\r\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\r\n * @param {Function} [cb] params: (image, cbPayload)\r\n * @param {Object} [cbPayload] Payload on cb calling.\r\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\r\n */\r\n\r\n\r\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\r\n  if (!newImageOrSrc) {\r\n    return image;\r\n  } else if (typeof newImageOrSrc === 'string') {\r\n    // Image should not be loaded repeatly.\r\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\r\n      return image;\r\n    } // Only when there is no existent image or existent image src\r\n    // is different, this method is responsible for load.\r\n\r\n\r\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\r\n    var pendingWrap = {\r\n      hostEl: hostEl,\r\n      cb: cb,\r\n      cbPayload: cbPayload\r\n    };\r\n\r\n    if (cachedImgObj) {\r\n      image = cachedImgObj.image;\r\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\r\n    } else {\r\n      image = new Image();\r\n      image.onload = image.onerror = imageOnLoad;\r\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\r\n        image: image,\r\n        pending: [pendingWrap]\r\n      });\r\n      image.src = image.__zrImageSrc = newImageOrSrc;\r\n    }\r\n\r\n    return image;\r\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\r\n  else {\r\n      return newImageOrSrc;\r\n    }\r\n}\r\n\r\nfunction imageOnLoad() {\r\n  var cachedImgObj = this.__cachedImgObj;\r\n  this.onload = this.onerror = this.__cachedImgObj = null;\r\n\r\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\r\n    var pendingWrap = cachedImgObj.pending[i];\r\n    var cb = pendingWrap.cb;\r\n    cb && cb(this, pendingWrap.cbPayload);\r\n    pendingWrap.hostEl.dirty();\r\n  }\r\n\r\n  cachedImgObj.pending.length = 0;\r\n}\r\n\r\nfunction isImageReady(image) {\r\n  return image && image.width && image.height;\r\n}\r\n\r\nexports.findExistImage = findExistImage;\r\nexports.createOrUpdateImage = createOrUpdateImage;\r\nexports.isImageReady = isImageReady;","var smoothSpline = require(\"./smoothSpline\");\r\n\r\nvar smoothBezier = require(\"./smoothBezier\");\r\n\r\nfunction buildPath(ctx, shape, closePath) {\r\n  var points = shape.points;\r\n  var smooth = shape.smooth;\r\n\r\n  if (points && points.length >= 2) {\r\n    if (smooth && smooth !== 'spline') {\r\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\r\n      ctx.moveTo(points[0][0], points[0][1]);\r\n      var len = points.length;\r\n\r\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\r\n        var cp1 = controlPoints[i * 2];\r\n        var cp2 = controlPoints[i * 2 + 1];\r\n        var p = points[(i + 1) % len];\r\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\r\n      }\r\n    } else {\r\n      if (smooth === 'spline') {\r\n        points = smoothSpline(points, closePath);\r\n      }\r\n\r\n      ctx.moveTo(points[0][0], points[0][1]);\r\n\r\n      for (var i = 1, l = points.length; i < l; i++) {\r\n        ctx.lineTo(points[i][0], points[i][1]);\r\n      }\r\n    }\r\n\r\n    closePath && ctx.closePath();\r\n  }\r\n}\r\n\r\nexports.buildPath = buildPath;","/**\r\n * @param {Object} ctx\r\n * @param {Object} shape\r\n * @param {number} shape.x\r\n * @param {number} shape.y\r\n * @param {number} shape.width\r\n * @param {number} shape.height\r\n * @param {number} shape.r\r\n */\r\nfunction buildPath(ctx, shape) {\r\n  var x = shape.x;\r\n  var y = shape.y;\r\n  var width = shape.width;\r\n  var height = shape.height;\r\n  var r = shape.r;\r\n  var r1;\r\n  var r2;\r\n  var r3;\r\n  var r4; // Convert width and height to positive for better borderRadius\r\n\r\n  if (width < 0) {\r\n    x = x + width;\r\n    width = -width;\r\n  }\r\n\r\n  if (height < 0) {\r\n    y = y + height;\r\n    height = -height;\r\n  }\r\n\r\n  if (typeof r === 'number') {\r\n    r1 = r2 = r3 = r4 = r;\r\n  } else if (r instanceof Array) {\r\n    if (r.length === 1) {\r\n      r1 = r2 = r3 = r4 = r[0];\r\n    } else if (r.length === 2) {\r\n      r1 = r3 = r[0];\r\n      r2 = r4 = r[1];\r\n    } else if (r.length === 3) {\r\n      r1 = r[0];\r\n      r2 = r4 = r[1];\r\n      r3 = r[2];\r\n    } else {\r\n      r1 = r[0];\r\n      r2 = r[1];\r\n      r3 = r[2];\r\n      r4 = r[3];\r\n    }\r\n  } else {\r\n    r1 = r2 = r3 = r4 = 0;\r\n  }\r\n\r\n  var total;\r\n\r\n  if (r1 + r2 > width) {\r\n    total = r1 + r2;\r\n    r1 *= width / total;\r\n    r2 *= width / total;\r\n  }\r\n\r\n  if (r3 + r4 > width) {\r\n    total = r3 + r4;\r\n    r3 *= width / total;\r\n    r4 *= width / total;\r\n  }\r\n\r\n  if (r2 + r3 > height) {\r\n    total = r2 + r3;\r\n    r2 *= height / total;\r\n    r3 *= height / total;\r\n  }\r\n\r\n  if (r1 + r4 > height) {\r\n    total = r1 + r4;\r\n    r1 *= height / total;\r\n    r4 *= height / total;\r\n  }\r\n\r\n  ctx.moveTo(x + r1, y);\r\n  ctx.lineTo(x + width - r2, y);\r\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\r\n  ctx.lineTo(x + width, y + height - r3);\r\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\r\n  ctx.lineTo(x + r4, y + height);\r\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\r\n  ctx.lineTo(x, y + r1);\r\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\r\n}\r\n\r\nexports.buildPath = buildPath;","var _vector = require(\"../../core/vector\");\r\n\r\nvar v2Min = _vector.min;\r\nvar v2Max = _vector.max;\r\nvar v2Scale = _vector.scale;\r\nvar v2Distance = _vector.distance;\r\nvar v2Add = _vector.add;\r\nvar v2Clone = _vector.clone;\r\nvar v2Sub = _vector.sub;\r\n\r\n/**\r\n * 贝塞尔平滑曲线\r\n * @module zrender/shape/util/smoothBezier\r\n * @author pissang (https://www.github.com/pissang)\r\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\n\r\n/**\r\n * 贝塞尔平滑曲线\r\n * @alias module:zrender/shape/util/smoothBezier\r\n * @param {Array} points 线段顶点数组\r\n * @param {number} smooth 平滑等级, 0-1\r\n * @param {boolean} isLoop\r\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\r\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\r\n *                           整个折线的包围盒做一个并集用来约束控制点。\r\n * @param {Array} 计算出来的控制点数组\r\n */\r\nfunction _default(points, smooth, isLoop, constraint) {\r\n  var cps = [];\r\n  var v = [];\r\n  var v1 = [];\r\n  var v2 = [];\r\n  var prevPoint;\r\n  var nextPoint;\r\n  var min;\r\n  var max;\r\n\r\n  if (constraint) {\r\n    min = [Infinity, Infinity];\r\n    max = [-Infinity, -Infinity];\r\n\r\n    for (var i = 0, len = points.length; i < len; i++) {\r\n      v2Min(min, min, points[i]);\r\n      v2Max(max, max, points[i]);\r\n    } // 与指定的包围盒做并集\r\n\r\n\r\n    v2Min(min, min, constraint[0]);\r\n    v2Max(max, max, constraint[1]);\r\n  }\r\n\r\n  for (var i = 0, len = points.length; i < len; i++) {\r\n    var point = points[i];\r\n\r\n    if (isLoop) {\r\n      prevPoint = points[i ? i - 1 : len - 1];\r\n      nextPoint = points[(i + 1) % len];\r\n    } else {\r\n      if (i === 0 || i === len - 1) {\r\n        cps.push(v2Clone(points[i]));\r\n        continue;\r\n      } else {\r\n        prevPoint = points[i - 1];\r\n        nextPoint = points[i + 1];\r\n      }\r\n    }\r\n\r\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\r\n\r\n    v2Scale(v, v, smooth);\r\n    var d0 = v2Distance(point, prevPoint);\r\n    var d1 = v2Distance(point, nextPoint);\r\n    var sum = d0 + d1;\r\n\r\n    if (sum !== 0) {\r\n      d0 /= sum;\r\n      d1 /= sum;\r\n    }\r\n\r\n    v2Scale(v1, v, -d0);\r\n    v2Scale(v2, v, d1);\r\n    var cp0 = v2Add([], point, v1);\r\n    var cp1 = v2Add([], point, v2);\r\n\r\n    if (constraint) {\r\n      v2Max(cp0, cp0, min);\r\n      v2Min(cp0, cp0, max);\r\n      v2Max(cp1, cp1, min);\r\n      v2Min(cp1, cp1, max);\r\n    }\r\n\r\n    cps.push(cp0);\r\n    cps.push(cp1);\r\n  }\r\n\r\n  if (isLoop) {\r\n    cps.push(cps.shift());\r\n  }\r\n\r\n  return cps;\r\n}\r\n\r\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\r\n\r\nvar v2Distance = _vector.distance;\r\n\r\n/**\r\n * Catmull-Rom spline 插值折线\r\n * @module zrender/shape/util/smoothSpline\r\n * @author pissang (https://www.github.com/pissang)\r\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\n\r\n/**\r\n * @inner\r\n */\r\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\r\n  var v0 = (p2 - p0) * 0.5;\r\n  var v1 = (p3 - p1) * 0.5;\r\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n}\r\n/**\r\n * @alias module:zrender/shape/util/smoothSpline\r\n * @param {Array} points 线段顶点数组\r\n * @param {boolean} isLoop\r\n * @return {Array}\r\n */\r\n\r\n\r\nfunction _default(points, isLoop) {\r\n  var len = points.length;\r\n  var ret = [];\r\n  var distance = 0;\r\n\r\n  for (var i = 1; i < len; i++) {\r\n    distance += v2Distance(points[i - 1], points[i]);\r\n  }\r\n\r\n  var segs = distance / 2;\r\n  segs = segs < len ? len : segs;\r\n\r\n  for (var i = 0; i < segs; i++) {\r\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\r\n    var idx = Math.floor(pos);\r\n    var w = pos - idx;\r\n    var p0;\r\n    var p1 = points[idx % len];\r\n    var p2;\r\n    var p3;\r\n\r\n    if (!isLoop) {\r\n      p0 = points[idx === 0 ? idx : idx - 1];\r\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\r\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\r\n    } else {\r\n      p0 = points[(idx - 1 + len) % len];\r\n      p2 = points[(idx + 1) % len];\r\n      p3 = points[(idx + 2) % len];\r\n    }\r\n\r\n    var w2 = w * w;\r\n    var w3 = w * w2;\r\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nmodule.exports = _default;","/**\r\n * Sub-pixel optimize for canvas rendering, prevent from blur\r\n * when rendering a thin vertical/horizontal line.\r\n */\r\nvar round = Math.round;\r\n/**\r\n * Sub pixel optimize line for canvas\r\n *\r\n * @param {Object} outputShape The modification will be performed on `outputShape`.\r\n *                 `outputShape` and `inputShape` can be the same object.\r\n *                 `outputShape` object can be used repeatly, because all of\r\n *                 the `x1`, `x2`, `y1`, `y2` will be assigned in this method.\r\n * @param {Object} [inputShape]\r\n * @param {number} [inputShape.x1]\r\n * @param {number} [inputShape.y1]\r\n * @param {number} [inputShape.x2]\r\n * @param {number} [inputShape.y2]\r\n * @param {Object} [style]\r\n * @param {number} [style.lineWidth] If `null`/`undefined`/`0`, do not optimize.\r\n */\r\n\r\nfunction subPixelOptimizeLine(outputShape, inputShape, style) {\r\n  if (!inputShape) {\r\n    return;\r\n  }\r\n\r\n  var x1 = inputShape.x1;\r\n  var x2 = inputShape.x2;\r\n  var y1 = inputShape.y1;\r\n  var y2 = inputShape.y2;\r\n  outputShape.x1 = x1;\r\n  outputShape.x2 = x2;\r\n  outputShape.y1 = y1;\r\n  outputShape.y2 = y2;\r\n  var lineWidth = style && style.lineWidth;\r\n\r\n  if (!lineWidth) {\r\n    return;\r\n  }\r\n\r\n  if (round(x1 * 2) === round(x2 * 2)) {\r\n    outputShape.x1 = outputShape.x2 = subPixelOptimize(x1, lineWidth, true);\r\n  }\r\n\r\n  if (round(y1 * 2) === round(y2 * 2)) {\r\n    outputShape.y1 = outputShape.y2 = subPixelOptimize(y1, lineWidth, true);\r\n  }\r\n}\r\n/**\r\n * Sub pixel optimize rect for canvas\r\n *\r\n * @param {Object} outputShape The modification will be performed on `outputShape`.\r\n *                 `outputShape` and `inputShape` can be the same object.\r\n *                 `outputShape` object can be used repeatly, because all of\r\n *                 the `x`, `y`, `width`, `height` will be assigned in this method.\r\n * @param {Object} [inputShape]\r\n * @param {number} [inputShape.x]\r\n * @param {number} [inputShape.y]\r\n * @param {number} [inputShape.width]\r\n * @param {number} [inputShape.height]\r\n * @param {Object} [style]\r\n * @param {number} [style.lineWidth] If `null`/`undefined`/`0`, do not optimize.\r\n */\r\n\r\n\r\nfunction subPixelOptimizeRect(outputShape, inputShape, style) {\r\n  if (!inputShape) {\r\n    return;\r\n  }\r\n\r\n  var originX = inputShape.x;\r\n  var originY = inputShape.y;\r\n  var originWidth = inputShape.width;\r\n  var originHeight = inputShape.height;\r\n  outputShape.x = originX;\r\n  outputShape.y = originY;\r\n  outputShape.width = originWidth;\r\n  outputShape.height = originHeight;\r\n  var lineWidth = style && style.lineWidth;\r\n\r\n  if (!lineWidth) {\r\n    return;\r\n  }\r\n\r\n  outputShape.x = subPixelOptimize(originX, lineWidth, true);\r\n  outputShape.y = subPixelOptimize(originY, lineWidth, true);\r\n  outputShape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - outputShape.x, originWidth === 0 ? 0 : 1);\r\n  outputShape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - outputShape.y, originHeight === 0 ? 0 : 1);\r\n}\r\n/**\r\n * Sub pixel optimize for canvas\r\n *\r\n * @param {number} position Coordinate, such as x, y\r\n * @param {number} lineWidth If `null`/`undefined`/`0`, do not optimize.\r\n * @param {boolean=} positiveOrNegative Default false (negative).\r\n * @return {number} Optimized position.\r\n */\r\n\r\n\r\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\r\n  if (!lineWidth) {\r\n    return position;\r\n  } // Assure that (position + lineWidth / 2) is near integer edge,\r\n  // otherwise line will be fuzzy in canvas.\r\n\r\n\r\n  var doubledPosition = round(position * 2);\r\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\r\n}\r\n\r\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\r\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\r\nexports.subPixelOptimize = subPixelOptimize;","var _util = require(\"../../core/util\");\r\n\r\nvar retrieve2 = _util.retrieve2;\r\nvar retrieve3 = _util.retrieve3;\r\nvar each = _util.each;\r\nvar normalizeCssArray = _util.normalizeCssArray;\r\nvar isString = _util.isString;\r\nvar isObject = _util.isObject;\r\n\r\nvar textContain = require(\"../../contain/text\");\r\n\r\nvar roundRectHelper = require(\"./roundRect\");\r\n\r\nvar imageHelper = require(\"./image\");\r\n\r\nvar fixShadow = require(\"./fixShadow\");\r\n\r\nvar _constant = require(\"../constant\");\r\n\r\nvar ContextCachedBy = _constant.ContextCachedBy;\r\nvar WILL_BE_RESTORED = _constant.WILL_BE_RESTORED;\r\nvar DEFAULT_FONT = textContain.DEFAULT_FONT; // TODO: Have not support 'start', 'end' yet.\r\n\r\nvar VALID_TEXT_ALIGN = {\r\n  left: 1,\r\n  right: 1,\r\n  center: 1\r\n};\r\nvar VALID_TEXT_VERTICAL_ALIGN = {\r\n  top: 1,\r\n  bottom: 1,\r\n  middle: 1\r\n}; // Different from `STYLE_COMMON_PROPS` of `graphic/Style`,\r\n// the default value of shadowColor is `'transparent'`.\r\n\r\nvar SHADOW_STYLE_COMMON_PROPS = [['textShadowBlur', 'shadowBlur', 0], ['textShadowOffsetX', 'shadowOffsetX', 0], ['textShadowOffsetY', 'shadowOffsetY', 0], ['textShadowColor', 'shadowColor', 'transparent']];\r\nvar _tmpTextPositionResult = {};\r\nvar _tmpBoxPositionResult = {};\r\n/**\r\n * @param {module:zrender/graphic/Style} style\r\n * @return {module:zrender/graphic/Style} The input style.\r\n */\r\n\r\nfunction normalizeTextStyle(style) {\r\n  normalizeStyle(style);\r\n  each(style.rich, normalizeStyle);\r\n  return style;\r\n}\r\n\r\nfunction normalizeStyle(style) {\r\n  if (style) {\r\n    style.font = textContain.makeFont(style);\r\n    var textAlign = style.textAlign;\r\n    textAlign === 'middle' && (textAlign = 'center');\r\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\r\n\r\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\r\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\r\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\r\n    var textPadding = style.textPadding;\r\n\r\n    if (textPadding) {\r\n      style.textPadding = normalizeCssArray(style.textPadding);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @param {CanvasRenderingContext2D} ctx\r\n * @param {string} text\r\n * @param {module:zrender/graphic/Style} style\r\n * @param {Object|boolean} [rect] {x, y, width, height}\r\n *                  If set false, rect text is not used.\r\n * @param {Element|module:zrender/graphic/helper/constant.WILL_BE_RESTORED} [prevEl] For ctx prop cache.\r\n */\r\n\r\n\r\nfunction renderText(hostEl, ctx, text, style, rect, prevEl) {\r\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect, prevEl) : renderPlainText(hostEl, ctx, text, style, rect, prevEl);\r\n} // Avoid setting to ctx according to prevEl if possible for\r\n// performance in scenarios of large amount text.\r\n\r\n\r\nfunction renderPlainText(hostEl, ctx, text, style, rect, prevEl) {\r\n  'use strict';\r\n\r\n  var needDrawBg = needDrawBackground(style);\r\n  var prevStyle;\r\n  var checkCache = false;\r\n  var cachedByMe = ctx.__attrCachedBy === ContextCachedBy.PLAIN_TEXT; // Only take and check cache for `Text` el, but not RectText.\r\n\r\n  if (prevEl !== WILL_BE_RESTORED) {\r\n    if (prevEl) {\r\n      prevStyle = prevEl.style;\r\n      checkCache = !needDrawBg && cachedByMe && prevStyle;\r\n    } // Prevent from using cache in `Style::bind`, because of the case:\r\n    // ctx property is modified by other properties than `Style::bind`\r\n    // used, and Style::bind is called next.\r\n\r\n\r\n    ctx.__attrCachedBy = needDrawBg ? ContextCachedBy.NONE : ContextCachedBy.PLAIN_TEXT;\r\n  } // Since this will be restored, prevent from using these props to check cache in the next\r\n  // entering of this method. But do not need to clear other cache like `Style::bind`.\r\n  else if (cachedByMe) {\r\n      ctx.__attrCachedBy = ContextCachedBy.NONE;\r\n    }\r\n\r\n  var styleFont = style.font || DEFAULT_FONT; // PENDING\r\n  // Only `Text` el set `font` and keep it (`RectText` will restore). So theoretically\r\n  // we can make font cache on ctx, which can cache for text el that are discontinuous.\r\n  // But layer save/restore needed to be considered.\r\n  // if (styleFont !== ctx.__fontCache) {\r\n  //     ctx.font = styleFont;\r\n  //     if (prevEl !== WILL_BE_RESTORED) {\r\n  //         ctx.__fontCache = styleFont;\r\n  //     }\r\n  // }\r\n\r\n  if (!checkCache || styleFont !== (prevStyle.font || DEFAULT_FONT)) {\r\n    ctx.font = styleFont;\r\n  } // Use the final font from context-2d, because the final\r\n  // font might not be the style.font when it is illegal.\r\n  // But get `ctx.font` might be time consuming.\r\n\r\n\r\n  var computedFont = hostEl.__computedFont;\r\n\r\n  if (hostEl.__styleFont !== styleFont) {\r\n    hostEl.__styleFont = styleFont;\r\n    computedFont = hostEl.__computedFont = ctx.font;\r\n  }\r\n\r\n  var textPadding = style.textPadding;\r\n  var textLineHeight = style.textLineHeight;\r\n  var contentBlock = hostEl.__textCotentBlock;\r\n\r\n  if (!contentBlock || hostEl.__dirtyText) {\r\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, computedFont, textPadding, textLineHeight, style.truncate);\r\n  }\r\n\r\n  var outerHeight = contentBlock.outerHeight;\r\n  var textLines = contentBlock.lines;\r\n  var lineHeight = contentBlock.lineHeight;\r\n  var boxPos = getBoxPosition(_tmpBoxPositionResult, hostEl, style, rect);\r\n  var baseX = boxPos.baseX;\r\n  var baseY = boxPos.baseY;\r\n  var textAlign = boxPos.textAlign || 'left';\r\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\r\n\r\n  applyTextRotation(ctx, style, rect, baseX, baseY);\r\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\r\n  var textX = baseX;\r\n  var textY = boxY;\r\n\r\n  if (needDrawBg || textPadding) {\r\n    // Consider performance, do not call getTextWidth util necessary.\r\n    var textWidth = textContain.getWidth(text, computedFont);\r\n    var outerWidth = textWidth;\r\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\r\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\r\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\r\n\r\n    if (textPadding) {\r\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\r\n      textY += textPadding[0];\r\n    }\r\n  } // Always set textAlign and textBase line, because it is difficute to calculate\r\n  // textAlign from prevEl, and we dont sure whether textAlign will be reset if\r\n  // font set happened.\r\n\r\n\r\n  ctx.textAlign = textAlign; // Force baseline to be \"middle\". Otherwise, if using \"top\", the\r\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\r\n\r\n  ctx.textBaseline = 'middle'; // Set text opacity\r\n\r\n  ctx.globalAlpha = style.opacity || 1; // Always set shadowBlur and shadowOffset to avoid leak from displayable.\r\n\r\n  for (var i = 0; i < SHADOW_STYLE_COMMON_PROPS.length; i++) {\r\n    var propItem = SHADOW_STYLE_COMMON_PROPS[i];\r\n    var styleProp = propItem[0];\r\n    var ctxProp = propItem[1];\r\n    var val = style[styleProp];\r\n\r\n    if (!checkCache || val !== prevStyle[styleProp]) {\r\n      ctx[ctxProp] = fixShadow(ctx, ctxProp, val || propItem[2]);\r\n    }\r\n  } // `textBaseline` is set as 'middle'.\r\n\r\n\r\n  textY += lineHeight / 2;\r\n  var textStrokeWidth = style.textStrokeWidth;\r\n  var textStrokeWidthPrev = checkCache ? prevStyle.textStrokeWidth : null;\r\n  var strokeWidthChanged = !checkCache || textStrokeWidth !== textStrokeWidthPrev;\r\n  var strokeChanged = !checkCache || strokeWidthChanged || style.textStroke !== prevStyle.textStroke;\r\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\r\n  var textFill = getFill(style.textFill);\r\n\r\n  if (textStroke) {\r\n    if (strokeWidthChanged) {\r\n      ctx.lineWidth = textStrokeWidth;\r\n    }\r\n\r\n    if (strokeChanged) {\r\n      ctx.strokeStyle = textStroke;\r\n    }\r\n  }\r\n\r\n  if (textFill) {\r\n    if (!checkCache || style.textFill !== prevStyle.textFill) {\r\n      ctx.fillStyle = textFill;\r\n    }\r\n  } // Optimize simply, in most cases only one line exists.\r\n\r\n\r\n  if (textLines.length === 1) {\r\n    // Fill after stroke so the outline will not cover the main part.\r\n    textStroke && ctx.strokeText(textLines[0], textX, textY);\r\n    textFill && ctx.fillText(textLines[0], textX, textY);\r\n  } else {\r\n    for (var i = 0; i < textLines.length; i++) {\r\n      // Fill after stroke so the outline will not cover the main part.\r\n      textStroke && ctx.strokeText(textLines[i], textX, textY);\r\n      textFill && ctx.fillText(textLines[i], textX, textY);\r\n      textY += lineHeight;\r\n    }\r\n  }\r\n}\r\n\r\nfunction renderRichText(hostEl, ctx, text, style, rect, prevEl) {\r\n  // Do not do cache for rich text because of the complexity.\r\n  // But `RectText` this will be restored, do not need to clear other cache like `Style::bind`.\r\n  if (prevEl !== WILL_BE_RESTORED) {\r\n    ctx.__attrCachedBy = ContextCachedBy.NONE;\r\n  }\r\n\r\n  var contentBlock = hostEl.__textCotentBlock;\r\n\r\n  if (!contentBlock || hostEl.__dirtyText) {\r\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\r\n  }\r\n\r\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\r\n}\r\n\r\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\r\n  var contentWidth = contentBlock.width;\r\n  var outerWidth = contentBlock.outerWidth;\r\n  var outerHeight = contentBlock.outerHeight;\r\n  var textPadding = style.textPadding;\r\n  var boxPos = getBoxPosition(_tmpBoxPositionResult, hostEl, style, rect);\r\n  var baseX = boxPos.baseX;\r\n  var baseY = boxPos.baseY;\r\n  var textAlign = boxPos.textAlign;\r\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\r\n\r\n  applyTextRotation(ctx, style, rect, baseX, baseY);\r\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\r\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\r\n  var xLeft = boxX;\r\n  var lineTop = boxY;\r\n\r\n  if (textPadding) {\r\n    xLeft += textPadding[3];\r\n    lineTop += textPadding[0];\r\n  }\r\n\r\n  var xRight = xLeft + contentWidth;\r\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\r\n\r\n  for (var i = 0; i < contentBlock.lines.length; i++) {\r\n    var line = contentBlock.lines[i];\r\n    var tokens = line.tokens;\r\n    var tokenCount = tokens.length;\r\n    var lineHeight = line.lineHeight;\r\n    var usedWidth = line.width;\r\n    var leftIndex = 0;\r\n    var lineXLeft = xLeft;\r\n    var lineXRight = xRight;\r\n    var rightIndex = tokenCount - 1;\r\n    var token;\r\n\r\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\r\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\r\n      usedWidth -= token.width;\r\n      lineXLeft += token.width;\r\n      leftIndex++;\r\n    }\r\n\r\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\r\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\r\n      usedWidth -= token.width;\r\n      lineXRight -= token.width;\r\n      rightIndex--;\r\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\r\n\r\n\r\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\r\n\r\n    while (leftIndex <= rightIndex) {\r\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\r\n\r\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\r\n      lineXLeft += token.width;\r\n      leftIndex++;\r\n    }\r\n\r\n    lineTop += lineHeight;\r\n  }\r\n}\r\n\r\nfunction applyTextRotation(ctx, style, rect, x, y) {\r\n  // textRotation only apply in RectText.\r\n  if (rect && style.textRotation) {\r\n    var origin = style.textOrigin;\r\n\r\n    if (origin === 'center') {\r\n      x = rect.width / 2 + rect.x;\r\n      y = rect.height / 2 + rect.y;\r\n    } else if (origin) {\r\n      x = origin[0] + rect.x;\r\n      y = origin[1] + rect.y;\r\n    }\r\n\r\n    ctx.translate(x, y); // Positive: anticlockwise\r\n\r\n    ctx.rotate(-style.textRotation);\r\n    ctx.translate(-x, -y);\r\n  }\r\n}\r\n\r\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\r\n  var tokenStyle = style.rich[token.styleName] || {};\r\n  tokenStyle.text = token.text; // 'ctx.textBaseline' is always set as 'middle', for sake of\r\n  // the bias of \"Microsoft YaHei\".\r\n\r\n  var textVerticalAlign = token.textVerticalAlign;\r\n  var y = lineTop + lineHeight / 2;\r\n\r\n  if (textVerticalAlign === 'top') {\r\n    y = lineTop + token.height / 2;\r\n  } else if (textVerticalAlign === 'bottom') {\r\n    y = lineTop + lineHeight - token.height / 2;\r\n  }\r\n\r\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\r\n  var textPadding = token.textPadding;\r\n\r\n  if (textPadding) {\r\n    x = getTextXForPadding(x, textAlign, textPadding);\r\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\r\n  }\r\n\r\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\r\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\r\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\r\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\r\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\r\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\r\n\r\n  setCtx(ctx, 'textBaseline', 'middle');\r\n  setCtx(ctx, 'font', token.font || DEFAULT_FONT);\r\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\r\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\r\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\r\n\r\n  if (textStroke) {\r\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\r\n    setCtx(ctx, 'strokeStyle', textStroke);\r\n    ctx.strokeText(token.text, x, y);\r\n  }\r\n\r\n  if (textFill) {\r\n    setCtx(ctx, 'fillStyle', textFill);\r\n    ctx.fillText(token.text, x, y);\r\n  }\r\n}\r\n\r\nfunction needDrawBackground(style) {\r\n  return !!(style.textBackgroundColor || style.textBorderWidth && style.textBorderColor);\r\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius, text}\r\n// shape: {x, y, width, height}\r\n\r\n\r\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\r\n  var textBackgroundColor = style.textBackgroundColor;\r\n  var textBorderWidth = style.textBorderWidth;\r\n  var textBorderColor = style.textBorderColor;\r\n  var isPlainBg = isString(textBackgroundColor);\r\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\r\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\r\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\r\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\r\n\r\n  if (isPlainBg || textBorderWidth && textBorderColor) {\r\n    ctx.beginPath();\r\n    var textBorderRadius = style.textBorderRadius;\r\n\r\n    if (!textBorderRadius) {\r\n      ctx.rect(x, y, width, height);\r\n    } else {\r\n      roundRectHelper.buildPath(ctx, {\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height,\r\n        r: textBorderRadius\r\n      });\r\n    }\r\n\r\n    ctx.closePath();\r\n  }\r\n\r\n  if (isPlainBg) {\r\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\r\n\r\n    if (style.fillOpacity != null) {\r\n      var originalGlobalAlpha = ctx.globalAlpha;\r\n      ctx.globalAlpha = style.fillOpacity * style.opacity;\r\n      ctx.fill();\r\n      ctx.globalAlpha = originalGlobalAlpha;\r\n    } else {\r\n      ctx.fill();\r\n    }\r\n  } else if (isObject(textBackgroundColor)) {\r\n    var image = textBackgroundColor.image;\r\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\r\n\r\n    if (image && imageHelper.isImageReady(image)) {\r\n      ctx.drawImage(image, x, y, width, height);\r\n    }\r\n  }\r\n\r\n  if (textBorderWidth && textBorderColor) {\r\n    setCtx(ctx, 'lineWidth', textBorderWidth);\r\n    setCtx(ctx, 'strokeStyle', textBorderColor);\r\n\r\n    if (style.strokeOpacity != null) {\r\n      var originalGlobalAlpha = ctx.globalAlpha;\r\n      ctx.globalAlpha = style.strokeOpacity * style.opacity;\r\n      ctx.stroke();\r\n      ctx.globalAlpha = originalGlobalAlpha;\r\n    } else {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onBgImageLoaded(image, textBackgroundColor) {\r\n  // Replace image, so that `contain/text.js#parseRichText`\r\n  // will get correct result in next tick.\r\n  textBackgroundColor.image = image;\r\n}\r\n\r\nfunction getBoxPosition(out, hostEl, style, rect) {\r\n  var baseX = style.x || 0;\r\n  var baseY = style.y || 0;\r\n  var textAlign = style.textAlign;\r\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\r\n\r\n  if (rect) {\r\n    var textPosition = style.textPosition;\r\n\r\n    if (textPosition instanceof Array) {\r\n      // Percent\r\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\r\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\r\n    } else {\r\n      var res = hostEl && hostEl.calculateTextPosition ? hostEl.calculateTextPosition(_tmpTextPositionResult, style, rect) : textContain.calculateTextPosition(_tmpTextPositionResult, style, rect);\r\n      baseX = res.x;\r\n      baseY = res.y; // Default align and baseline when has textPosition\r\n\r\n      textAlign = textAlign || res.textAlign;\r\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\r\n    } // textOffset is only support in RectText, otherwise\r\n    // we have to adjust boundingRect for textOffset.\r\n\r\n\r\n    var textOffset = style.textOffset;\r\n\r\n    if (textOffset) {\r\n      baseX += textOffset[0];\r\n      baseY += textOffset[1];\r\n    }\r\n  }\r\n\r\n  out = out || {};\r\n  out.baseX = baseX;\r\n  out.baseY = baseY;\r\n  out.textAlign = textAlign;\r\n  out.textVerticalAlign = textVerticalAlign;\r\n  return out;\r\n}\r\n\r\nfunction setCtx(ctx, prop, value) {\r\n  ctx[prop] = fixShadow(ctx, prop, value);\r\n  return ctx[prop];\r\n}\r\n/**\r\n * @param {string} [stroke] If specified, do not check style.textStroke.\r\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\r\n * @param {number} style\r\n */\r\n\r\n\r\nfunction getStroke(stroke, lineWidth) {\r\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\r\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\r\n}\r\n\r\nfunction getFill(fill) {\r\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\r\n  : fill.image || fill.colorStops ? '#000' : fill;\r\n}\r\n\r\nfunction parsePercent(value, maxValue) {\r\n  if (typeof value === 'string') {\r\n    if (value.lastIndexOf('%') >= 0) {\r\n      return parseFloat(value) / 100 * maxValue;\r\n    }\r\n\r\n    return parseFloat(value);\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nfunction getTextXForPadding(x, textAlign, textPadding) {\r\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\r\n}\r\n/**\r\n * @param {string} text\r\n * @param {module:zrender/Style} style\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction needDrawText(text, style) {\r\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\r\n}\r\n\r\nexports.normalizeTextStyle = normalizeTextStyle;\r\nexports.renderText = renderText;\r\nexports.getBoxPosition = getBoxPosition;\r\nexports.getStroke = getStroke;\r\nexports.getFill = getFill;\r\nexports.parsePercent = parsePercent;\r\nexports.needDrawText = needDrawText;","var textHelper = require(\"../helper/text\");\r\n\r\nvar BoundingRect = require(\"../../core/BoundingRect\");\r\n\r\nvar _constant = require(\"../constant\");\r\n\r\nvar WILL_BE_RESTORED = _constant.WILL_BE_RESTORED;\r\n\r\n/**\r\n * Mixin for drawing text in a element bounding rect\r\n * @module zrender/mixin/RectText\r\n */\r\nvar tmpRect = new BoundingRect();\r\n\r\nvar RectText = function () {};\r\n\r\nRectText.prototype = {\r\n  constructor: RectText,\r\n\r\n  /**\r\n   * Draw text in a rect with specified position.\r\n   * @param  {CanvasRenderingContext2D} ctx\r\n   * @param  {Object} rect Displayable rect\r\n   */\r\n  drawRectText: function (ctx, rect) {\r\n    var style = this.style;\r\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\r\n\r\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\r\n    var text = style.text; // Convert to string\r\n\r\n    text != null && (text += '');\r\n\r\n    if (!textHelper.needDrawText(text, style)) {\r\n      return;\r\n    } // FIXME\r\n    // Do not provide prevEl to `textHelper.renderText` for ctx prop cache,\r\n    // but use `ctx.save()` and `ctx.restore()`. Because the cache for rect\r\n    // text propably break the cache for its host elements.\r\n\r\n\r\n    ctx.save(); // Transform rect to view space\r\n\r\n    var transform = this.transform;\r\n\r\n    if (!style.transformText) {\r\n      if (transform) {\r\n        tmpRect.copy(rect);\r\n        tmpRect.applyTransform(transform);\r\n        rect = tmpRect;\r\n      }\r\n    } else {\r\n      this.setTransform(ctx);\r\n    } // transformText and textRotation can not be used at the same time.\r\n\r\n\r\n    textHelper.renderText(this, ctx, text, style, rect, WILL_BE_RESTORED);\r\n    ctx.restore();\r\n  }\r\n};\r\nvar _default = RectText;\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\n/**\r\n * 圆弧\r\n * @module zrender/graphic/shape/Arc\r\n */\r\nvar _default = Path.extend({\r\n  type: 'arc',\r\n  shape: {\r\n    cx: 0,\r\n    cy: 0,\r\n    r: 0,\r\n    startAngle: 0,\r\n    endAngle: Math.PI * 2,\r\n    clockwise: true\r\n  },\r\n  style: {\r\n    stroke: '#000',\r\n    fill: null\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var x = shape.cx;\r\n    var y = shape.cy;\r\n    var r = Math.max(shape.r, 0);\r\n    var startAngle = shape.startAngle;\r\n    var endAngle = shape.endAngle;\r\n    var clockwise = shape.clockwise;\r\n    var unitX = Math.cos(startAngle);\r\n    var unitY = Math.sin(startAngle);\r\n    ctx.moveTo(unitX * r + x, unitY * r + y);\r\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\nvar vec2 = require(\"../../core/vector\");\r\n\r\nvar _curve = require(\"../../core/curve\");\r\n\r\nvar quadraticSubdivide = _curve.quadraticSubdivide;\r\nvar cubicSubdivide = _curve.cubicSubdivide;\r\nvar quadraticAt = _curve.quadraticAt;\r\nvar cubicAt = _curve.cubicAt;\r\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\r\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\r\n\r\n/**\r\n * 贝塞尔曲线\r\n * @module zrender/shape/BezierCurve\r\n */\r\nvar out = [];\r\n\r\nfunction someVectorAt(shape, t, isTangent) {\r\n  var cpx2 = shape.cpx2;\r\n  var cpy2 = shape.cpy2;\r\n\r\n  if (cpx2 === null || cpy2 === null) {\r\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\r\n  } else {\r\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\r\n  }\r\n}\r\n\r\nvar _default = Path.extend({\r\n  type: 'bezier-curve',\r\n  shape: {\r\n    x1: 0,\r\n    y1: 0,\r\n    x2: 0,\r\n    y2: 0,\r\n    cpx1: 0,\r\n    cpy1: 0,\r\n    // cpx2: 0,\r\n    // cpy2: 0\r\n    // Curve show percent, for animating\r\n    percent: 1\r\n  },\r\n  style: {\r\n    stroke: '#000',\r\n    fill: null\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var x1 = shape.x1;\r\n    var y1 = shape.y1;\r\n    var x2 = shape.x2;\r\n    var y2 = shape.y2;\r\n    var cpx1 = shape.cpx1;\r\n    var cpy1 = shape.cpy1;\r\n    var cpx2 = shape.cpx2;\r\n    var cpy2 = shape.cpy2;\r\n    var percent = shape.percent;\r\n\r\n    if (percent === 0) {\r\n      return;\r\n    }\r\n\r\n    ctx.moveTo(x1, y1);\r\n\r\n    if (cpx2 == null || cpy2 == null) {\r\n      if (percent < 1) {\r\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\r\n        cpx1 = out[1];\r\n        x2 = out[2];\r\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\r\n        cpy1 = out[1];\r\n        y2 = out[2];\r\n      }\r\n\r\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\r\n    } else {\r\n      if (percent < 1) {\r\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\r\n        cpx1 = out[1];\r\n        cpx2 = out[2];\r\n        x2 = out[3];\r\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\r\n        cpy1 = out[1];\r\n        cpy2 = out[2];\r\n        y2 = out[3];\r\n      }\r\n\r\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get point at percent\r\n   * @param  {number} t\r\n   * @return {Array.<number>}\r\n   */\r\n  pointAt: function (t) {\r\n    return someVectorAt(this.shape, t, false);\r\n  },\r\n\r\n  /**\r\n   * Get tangent at percent\r\n   * @param  {number} t\r\n   * @return {Array.<number>}\r\n   */\r\n  tangentAt: function (t) {\r\n    var p = someVectorAt(this.shape, t, true);\r\n    return vec2.normalize(p, p);\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\n/**\r\n * 圆形\r\n * @module zrender/shape/Circle\r\n */\r\nvar _default = Path.extend({\r\n  type: 'circle',\r\n  shape: {\r\n    cx: 0,\r\n    cy: 0,\r\n    r: 0\r\n  },\r\n  buildPath: function (ctx, shape, inBundle) {\r\n    // Better stroking in ShapeBundle\r\n    // Always do it may have performence issue ( fill may be 2x more cost)\r\n    if (inBundle) {\r\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\r\n    } // else {\r\n    //     if (ctx.allocate && !ctx.data.length) {\r\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\r\n    //     }\r\n    // }\r\n    // Better stroking in ShapeBundle\r\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\r\n\r\n\r\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\n/**\r\n * 椭圆形状\r\n * @module zrender/graphic/shape/Ellipse\r\n */\r\nvar _default = Path.extend({\r\n  type: 'ellipse',\r\n  shape: {\r\n    cx: 0,\r\n    cy: 0,\r\n    rx: 0,\r\n    ry: 0\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var k = 0.5522848;\r\n    var x = shape.cx;\r\n    var y = shape.cy;\r\n    var a = shape.rx;\r\n    var b = shape.ry;\r\n    var ox = a * k; // 水平控制点偏移量\r\n\r\n    var oy = b * k; // 垂直控制点偏移量\r\n    // 从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线\r\n\r\n    ctx.moveTo(x - a, y);\r\n    ctx.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);\r\n    ctx.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);\r\n    ctx.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);\r\n    ctx.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);\r\n    ctx.closePath();\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\nvar _subPixelOptimize = require(\"../helper/subPixelOptimize\");\r\n\r\nvar subPixelOptimizeLine = _subPixelOptimize.subPixelOptimizeLine;\r\n\r\n/**\r\n * 直线\r\n * @module zrender/graphic/shape/Line\r\n */\r\n// Avoid create repeatly.\r\nvar subPixelOptimizeOutputShape = {};\r\n\r\nvar _default = Path.extend({\r\n  type: 'line',\r\n  shape: {\r\n    // Start point\r\n    x1: 0,\r\n    y1: 0,\r\n    // End point\r\n    x2: 0,\r\n    y2: 0,\r\n    percent: 1\r\n  },\r\n  style: {\r\n    stroke: '#000',\r\n    fill: null\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var x1;\r\n    var y1;\r\n    var x2;\r\n    var y2;\r\n\r\n    if (this.subPixelOptimize) {\r\n      subPixelOptimizeLine(subPixelOptimizeOutputShape, shape, this.style);\r\n      x1 = subPixelOptimizeOutputShape.x1;\r\n      y1 = subPixelOptimizeOutputShape.y1;\r\n      x2 = subPixelOptimizeOutputShape.x2;\r\n      y2 = subPixelOptimizeOutputShape.y2;\r\n    } else {\r\n      x1 = shape.x1;\r\n      y1 = shape.y1;\r\n      x2 = shape.x2;\r\n      y2 = shape.y2;\r\n    }\r\n\r\n    var percent = shape.percent;\r\n\r\n    if (percent === 0) {\r\n      return;\r\n    }\r\n\r\n    ctx.moveTo(x1, y1);\r\n\r\n    if (percent < 1) {\r\n      x2 = x1 * (1 - percent) + x2 * percent;\r\n      y2 = y1 * (1 - percent) + y2 * percent;\r\n    }\r\n\r\n    ctx.lineTo(x2, y2);\r\n  },\r\n\r\n  /**\r\n   * Get point at percent\r\n   * @param  {number} percent\r\n   * @return {Array.<number>}\r\n   */\r\n  pointAt: function (p) {\r\n    var shape = this.shape;\r\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\nvar polyHelper = require(\"../helper/poly\");\r\n\r\n/**\r\n * 多边形\r\n * @module zrender/shape/Polygon\r\n */\r\nvar _default = Path.extend({\r\n  type: 'polygon',\r\n  shape: {\r\n    points: null,\r\n    smooth: false,\r\n    smoothConstraint: null\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    polyHelper.buildPath(ctx, shape, true);\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\nvar polyHelper = require(\"../helper/poly\");\r\n\r\n/**\r\n * @module zrender/graphic/shape/Polyline\r\n */\r\nvar _default = Path.extend({\r\n  type: 'polyline',\r\n  shape: {\r\n    points: null,\r\n    smooth: false,\r\n    smoothConstraint: null\r\n  },\r\n  style: {\r\n    stroke: '#000',\r\n    fill: null\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    polyHelper.buildPath(ctx, shape, false);\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\nvar roundRectHelper = require(\"../helper/roundRect\");\r\n\r\nvar _subPixelOptimize = require(\"../helper/subPixelOptimize\");\r\n\r\nvar subPixelOptimizeRect = _subPixelOptimize.subPixelOptimizeRect;\r\n\r\n/**\r\n * 矩形\r\n * @module zrender/graphic/shape/Rect\r\n */\r\n// Avoid create repeatly.\r\nvar subPixelOptimizeOutputShape = {};\r\n\r\nvar _default = Path.extend({\r\n  type: 'rect',\r\n  shape: {\r\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\r\n    // r缩写为1         相当于 [1, 1, 1, 1]\r\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\r\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\r\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\r\n    r: 0,\r\n    x: 0,\r\n    y: 0,\r\n    width: 0,\r\n    height: 0\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var x;\r\n    var y;\r\n    var width;\r\n    var height;\r\n\r\n    if (this.subPixelOptimize) {\r\n      subPixelOptimizeRect(subPixelOptimizeOutputShape, shape, this.style);\r\n      x = subPixelOptimizeOutputShape.x;\r\n      y = subPixelOptimizeOutputShape.y;\r\n      width = subPixelOptimizeOutputShape.width;\r\n      height = subPixelOptimizeOutputShape.height;\r\n      subPixelOptimizeOutputShape.r = shape.r;\r\n      shape = subPixelOptimizeOutputShape;\r\n    } else {\r\n      x = shape.x;\r\n      y = shape.y;\r\n      width = shape.width;\r\n      height = shape.height;\r\n    }\r\n\r\n    if (!shape.r) {\r\n      ctx.rect(x, y, width, height);\r\n    } else {\r\n      roundRectHelper.buildPath(ctx, shape);\r\n    }\r\n\r\n    ctx.closePath();\r\n    return;\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\n/**\r\n * 圆环\r\n * @module zrender/graphic/shape/Ring\r\n */\r\nvar _default = Path.extend({\r\n  type: 'ring',\r\n  shape: {\r\n    cx: 0,\r\n    cy: 0,\r\n    r: 0,\r\n    r0: 0\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    var x = shape.cx;\r\n    var y = shape.cy;\r\n    var PI2 = Math.PI * 2;\r\n    ctx.moveTo(x + shape.r, y);\r\n    ctx.arc(x, y, shape.r, 0, PI2, false);\r\n    ctx.moveTo(x + shape.r0, y);\r\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Path = require(\"../Path\");\r\n\r\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\r\n\r\n/**\r\n * 扇形\r\n * @module zrender/graphic/shape/Sector\r\n */\r\nvar _default = Path.extend({\r\n  type: 'sector',\r\n  shape: {\r\n    cx: 0,\r\n    cy: 0,\r\n    r0: 0,\r\n    r: 0,\r\n    startAngle: 0,\r\n    endAngle: Math.PI * 2,\r\n    clockwise: true\r\n  },\r\n  brush: fixClipWithShadow(Path.prototype.brush),\r\n  buildPath: function (ctx, shape) {\r\n    var x = shape.cx;\r\n    var y = shape.cy;\r\n    var r0 = Math.max(shape.r0 || 0, 0);\r\n    var r = Math.max(shape.r, 0);\r\n    var startAngle = shape.startAngle;\r\n    var endAngle = shape.endAngle;\r\n    var clockwise = shape.clockwise;\r\n    var unitX = Math.cos(startAngle);\r\n    var unitY = Math.sin(startAngle);\r\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\r\n    ctx.lineTo(unitX * r + x, unitY * r + y);\r\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\r\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\r\n\r\n    if (r0 !== 0) {\r\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\r\n    }\r\n\r\n    ctx.closePath();\r\n  }\r\n});\r\n\r\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\r\n\r\nvar logError = require(\"../core/log\");\r\n\r\nvar _util = require(\"../core/util\");\r\n\r\nvar isString = _util.isString;\r\nvar isFunction = _util.isFunction;\r\nvar isObject = _util.isObject;\r\nvar isArrayLike = _util.isArrayLike;\r\nvar indexOf = _util.indexOf;\r\n\r\n/**\r\n * @alias module:zrender/mixin/Animatable\r\n * @constructor\r\n */\r\nvar Animatable = function () {\r\n  /**\r\n   * @type {Array.<module:zrender/animation/Animator>}\r\n   * @readOnly\r\n   */\r\n  this.animators = [];\r\n};\r\n\r\nAnimatable.prototype = {\r\n  constructor: Animatable,\r\n\r\n  /**\r\n   * 动画\r\n   *\r\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\r\n   * @param {boolean} [loop] Whether to loop animation.\r\n   * @return {module:zrender/animation/Animator}\r\n   * @example:\r\n   *     el.animate('style', false)\r\n   *         .when(1000, {x: 10} )\r\n   *         .done(function(){ // Animation done })\r\n   *         .start()\r\n   */\r\n  animate: function (path, loop) {\r\n    var target;\r\n    var animatingShape = false;\r\n    var el = this;\r\n    var zr = this.__zr;\r\n\r\n    if (path) {\r\n      var pathSplitted = path.split('.');\r\n      var prop = el; // If animating shape\r\n\r\n      animatingShape = pathSplitted[0] === 'shape';\r\n\r\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\r\n        if (!prop) {\r\n          continue;\r\n        }\r\n\r\n        prop = prop[pathSplitted[i]];\r\n      }\r\n\r\n      if (prop) {\r\n        target = prop;\r\n      }\r\n    } else {\r\n      target = el;\r\n    }\r\n\r\n    if (!target) {\r\n      logError('Property \"' + path + '\" is not existed in element ' + el.id);\r\n      return;\r\n    }\r\n\r\n    var animators = el.animators;\r\n    var animator = new Animator(target, loop);\r\n    animator.during(function (target) {\r\n      el.dirty(animatingShape);\r\n    }).done(function () {\r\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\r\n      animators.splice(indexOf(animators, animator), 1);\r\n    });\r\n    animators.push(animator); // If animate after added to the zrender\r\n\r\n    if (zr) {\r\n      zr.animation.addAnimator(animator);\r\n    }\r\n\r\n    return animator;\r\n  },\r\n\r\n  /**\r\n   * 停止动画\r\n   * @param {boolean} forwardToLast If move to last frame before stop\r\n   */\r\n  stopAnimation: function (forwardToLast) {\r\n    var animators = this.animators;\r\n    var len = animators.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      animators[i].stop(forwardToLast);\r\n    }\r\n\r\n    animators.length = 0;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Caution: this method will stop previous animation.\r\n   * So do not use this method to one element twice before\r\n   * animation starts, unless you know what you are doing.\r\n   * @param {Object} target\r\n   * @param {number} [time=500] Time in ms\r\n   * @param {string} [easing='linear']\r\n   * @param {number} [delay=0]\r\n   * @param {Function} [callback]\r\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\r\n   *        immediently when target values are the same as current values.\r\n   *\r\n   * @example\r\n   *  // Animate position\r\n   *  el.animateTo({\r\n   *      position: [10, 10]\r\n   *  }, function () { // done })\r\n   *\r\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\r\n   *  el.animateTo({\r\n   *      shape: {\r\n   *          width: 500\r\n   *      },\r\n   *      style: {\r\n   *          fill: 'red'\r\n   *      }\r\n   *      position: [10, 10]\r\n   *  }, 100, 100, 'cubicOut', function () { // done })\r\n   */\r\n  // TODO Return animation key\r\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\r\n    animateTo(this, target, time, delay, easing, callback, forceAnimate);\r\n  },\r\n\r\n  /**\r\n   * Animate from the target state to current state.\r\n   * The params and the return value are the same as `this.animateTo`.\r\n   */\r\n  animateFrom: function (target, time, delay, easing, callback, forceAnimate) {\r\n    animateTo(this, target, time, delay, easing, callback, forceAnimate, true);\r\n  }\r\n};\r\n\r\nfunction animateTo(animatable, target, time, delay, easing, callback, forceAnimate, reverse) {\r\n  // animateTo(target, time, easing, callback);\r\n  if (isString(delay)) {\r\n    callback = easing;\r\n    easing = delay;\r\n    delay = 0;\r\n  } // animateTo(target, time, delay, callback);\r\n  else if (isFunction(easing)) {\r\n      callback = easing;\r\n      easing = 'linear';\r\n      delay = 0;\r\n    } // animateTo(target, time, callback);\r\n    else if (isFunction(delay)) {\r\n        callback = delay;\r\n        delay = 0;\r\n      } // animateTo(target, callback)\r\n      else if (isFunction(time)) {\r\n          callback = time;\r\n          time = 500;\r\n        } // animateTo(target)\r\n        else if (!time) {\r\n            time = 500;\r\n          } // Stop all previous animations\r\n\r\n\r\n  animatable.stopAnimation();\r\n  animateToShallow(animatable, '', animatable, target, time, delay, reverse); // Animators may be removed immediately after start\r\n  // if there is nothing to animate\r\n\r\n  var animators = animatable.animators.slice();\r\n  var count = animators.length;\r\n\r\n  function done() {\r\n    count--;\r\n\r\n    if (!count) {\r\n      callback && callback();\r\n    }\r\n  } // No animators. This should be checked before animators[i].start(),\r\n  // because 'done' may be executed immediately if no need to animate.\r\n\r\n\r\n  if (!count) {\r\n    callback && callback();\r\n  } // Start after all animators created\r\n  // Incase any animator is done immediately when all animation properties are not changed\r\n\r\n\r\n  for (var i = 0; i < animators.length; i++) {\r\n    animators[i].done(done).start(easing, forceAnimate);\r\n  }\r\n}\r\n/**\r\n * @param {string} path=''\r\n * @param {Object} source=animatable\r\n * @param {Object} target\r\n * @param {number} [time=500]\r\n * @param {number} [delay=0]\r\n * @param {boolean} [reverse] If `true`, animate\r\n *        from the `target` to current state.\r\n *\r\n * @example\r\n *  // Animate position\r\n *  el._animateToShallow({\r\n *      position: [10, 10]\r\n *  })\r\n *\r\n *  // Animate shape, style and position in 100ms, delayed 100ms\r\n *  el._animateToShallow({\r\n *      shape: {\r\n *          width: 500\r\n *      },\r\n *      style: {\r\n *          fill: 'red'\r\n *      }\r\n *      position: [10, 10]\r\n *  }, 100, 100)\r\n */\r\n\r\n\r\nfunction animateToShallow(animatable, path, source, target, time, delay, reverse) {\r\n  var objShallow = {};\r\n  var propertyCount = 0;\r\n\r\n  for (var name in target) {\r\n    if (!target.hasOwnProperty(name)) {\r\n      continue;\r\n    }\r\n\r\n    if (source[name] != null) {\r\n      if (isObject(target[name]) && !isArrayLike(target[name])) {\r\n        animateToShallow(animatable, path ? path + '.' + name : name, source[name], target[name], time, delay, reverse);\r\n      } else {\r\n        if (reverse) {\r\n          objShallow[name] = source[name];\r\n          setAttrByPath(animatable, path, name, target[name]);\r\n        } else {\r\n          objShallow[name] = target[name];\r\n        }\r\n\r\n        propertyCount++;\r\n      }\r\n    } else if (target[name] != null && !reverse) {\r\n      setAttrByPath(animatable, path, name, target[name]);\r\n    }\r\n  }\r\n\r\n  if (propertyCount > 0) {\r\n    animatable.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\r\n  }\r\n}\r\n\r\nfunction setAttrByPath(el, path, name, value) {\r\n  // Attr directly if not has property\r\n  // FIXME, if some property not needed for element ?\r\n  if (!path) {\r\n    el.attr(name, value);\r\n  } else {\r\n    // Only support set shape or style\r\n    var props = {};\r\n    props[path] = {};\r\n    props[path][name] = value;\r\n    el.attr(props);\r\n  }\r\n}\r\n\r\nvar _default = Animatable;\r\nmodule.exports = _default;","// TODO Draggable for group\r\n// FIXME Draggable on element which has parent rotation or scale\r\nfunction Draggable() {\r\n  this.on('mousedown', this._dragStart, this);\r\n  this.on('mousemove', this._drag, this);\r\n  this.on('mouseup', this._dragEnd, this); // `mosuemove` and `mouseup` can be continue to fire when dragging.\r\n  // See [Drag outside] in `Handler.js`. So we do not need to trigger\r\n  // `_dragEnd` when globalout. That would brings better user experience.\r\n  // this.on('globalout', this._dragEnd, this);\r\n  // this._dropTarget = null;\r\n  // this._draggingTarget = null;\r\n  // this._x = 0;\r\n  // this._y = 0;\r\n}\r\n\r\nDraggable.prototype = {\r\n  constructor: Draggable,\r\n  _dragStart: function (e) {\r\n    var draggingTarget = e.target; // Find if there is draggable in the ancestor\r\n\r\n    while (draggingTarget && !draggingTarget.draggable) {\r\n      draggingTarget = draggingTarget.parent;\r\n    }\r\n\r\n    if (draggingTarget) {\r\n      this._draggingTarget = draggingTarget;\r\n      draggingTarget.dragging = true;\r\n      this._x = e.offsetX;\r\n      this._y = e.offsetY;\r\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\r\n    }\r\n  },\r\n  _drag: function (e) {\r\n    var draggingTarget = this._draggingTarget;\r\n\r\n    if (draggingTarget) {\r\n      var x = e.offsetX;\r\n      var y = e.offsetY;\r\n      var dx = x - this._x;\r\n      var dy = y - this._y;\r\n      this._x = x;\r\n      this._y = y;\r\n      draggingTarget.drift(dx, dy, e);\r\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\r\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\r\n      var lastDropTarget = this._dropTarget;\r\n      this._dropTarget = dropTarget;\r\n\r\n      if (draggingTarget !== dropTarget) {\r\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\r\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\r\n        }\r\n\r\n        if (dropTarget && dropTarget !== lastDropTarget) {\r\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  _dragEnd: function (e) {\r\n    var draggingTarget = this._draggingTarget;\r\n\r\n    if (draggingTarget) {\r\n      draggingTarget.dragging = false;\r\n    }\r\n\r\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\r\n\r\n    if (this._dropTarget) {\r\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\r\n    }\r\n\r\n    this._draggingTarget = null;\r\n    this._dropTarget = null;\r\n  }\r\n};\r\n\r\nfunction param(target, e) {\r\n  return {\r\n    target: target,\r\n    topTarget: e && e.topTarget\r\n  };\r\n}\r\n\r\nvar _default = Draggable;\r\nmodule.exports = _default;","/**\r\n * Event Mixin\r\n * @module zrender/mixin/Eventful\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n */\r\nvar arrySlice = Array.prototype.slice;\r\n/**\r\n * Event dispatcher.\r\n *\r\n * @alias module:zrender/mixin/Eventful\r\n * @constructor\r\n * @param {Object} [eventProcessor] The object eventProcessor is the scope when\r\n *        `eventProcessor.xxx` called.\r\n * @param {Function} [eventProcessor.normalizeQuery]\r\n *        param: {string|Object} Raw query.\r\n *        return: {string|Object} Normalized query.\r\n * @param {Function} [eventProcessor.filter] Event will be dispatched only\r\n *        if it returns `true`.\r\n *        param: {string} eventType\r\n *        param: {string|Object} query\r\n *        return: {boolean}\r\n * @param {Function} [eventProcessor.afterTrigger] Called after all handlers called.\r\n *        param: {string} eventType\r\n */\r\n\r\nvar Eventful = function (eventProcessor) {\r\n  this._$handlers = {};\r\n  this._$eventProcessor = eventProcessor;\r\n};\r\n\r\nEventful.prototype = {\r\n  constructor: Eventful,\r\n\r\n  /**\r\n   * The handler can only be triggered once, then removed.\r\n   *\r\n   * @param {string} event The event name.\r\n   * @param {string|Object} [query] Condition used on event filter.\r\n   * @param {Function} handler The event handler.\r\n   * @param {Object} context\r\n   */\r\n  one: function (event, query, handler, context) {\r\n    return on(this, event, query, handler, context, true);\r\n  },\r\n\r\n  /**\r\n   * Bind a handler.\r\n   *\r\n   * @param {string} event The event name.\r\n   * @param {string|Object} [query] Condition used on event filter.\r\n   * @param {Function} handler The event handler.\r\n   * @param {Object} [context]\r\n   */\r\n  on: function (event, query, handler, context) {\r\n    return on(this, event, query, handler, context, false);\r\n  },\r\n\r\n  /**\r\n   * Whether any handler has bound.\r\n   *\r\n   * @param  {string}  event\r\n   * @return {boolean}\r\n   */\r\n  isSilent: function (event) {\r\n    var _h = this._$handlers;\r\n    return !_h[event] || !_h[event].length;\r\n  },\r\n\r\n  /**\r\n   * Unbind a event.\r\n   *\r\n   * @param {string} [event] The event name.\r\n   *        If no `event` input, \"off\" all listeners.\r\n   * @param {Function} [handler] The event handler.\r\n   *        If no `handler` input, \"off\" all listeners of the `event`.\r\n   */\r\n  off: function (event, handler) {\r\n    var _h = this._$handlers;\r\n\r\n    if (!event) {\r\n      this._$handlers = {};\r\n      return this;\r\n    }\r\n\r\n    if (handler) {\r\n      if (_h[event]) {\r\n        var newList = [];\r\n\r\n        for (var i = 0, l = _h[event].length; i < l; i++) {\r\n          if (_h[event][i].h !== handler) {\r\n            newList.push(_h[event][i]);\r\n          }\r\n        }\r\n\r\n        _h[event] = newList;\r\n      }\r\n\r\n      if (_h[event] && _h[event].length === 0) {\r\n        delete _h[event];\r\n      }\r\n    } else {\r\n      delete _h[event];\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Dispatch a event.\r\n   *\r\n   * @param {string} type The event name.\r\n   */\r\n  trigger: function (type) {\r\n    var _h = this._$handlers[type];\r\n    var eventProcessor = this._$eventProcessor;\r\n\r\n    if (_h) {\r\n      var args = arguments;\r\n      var argLen = args.length;\r\n\r\n      if (argLen > 3) {\r\n        args = arrySlice.call(args, 1);\r\n      }\r\n\r\n      var len = _h.length;\r\n\r\n      for (var i = 0; i < len;) {\r\n        var hItem = _h[i];\r\n\r\n        if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(type, hItem.query)) {\r\n          i++;\r\n          continue;\r\n        } // Optimize advise from backbone\r\n\r\n\r\n        switch (argLen) {\r\n          case 1:\r\n            hItem.h.call(hItem.ctx);\r\n            break;\r\n\r\n          case 2:\r\n            hItem.h.call(hItem.ctx, args[1]);\r\n            break;\r\n\r\n          case 3:\r\n            hItem.h.call(hItem.ctx, args[1], args[2]);\r\n            break;\r\n\r\n          default:\r\n            // have more than 2 given arguments\r\n            hItem.h.apply(hItem.ctx, args);\r\n            break;\r\n        }\r\n\r\n        if (hItem.one) {\r\n          _h.splice(i, 1);\r\n\r\n          len--;\r\n        } else {\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n\r\n    eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(type);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Dispatch a event with context, which is specified at the last parameter.\r\n   *\r\n   * @param {string} type The event name.\r\n   */\r\n  triggerWithContext: function (type) {\r\n    var _h = this._$handlers[type];\r\n    var eventProcessor = this._$eventProcessor;\r\n\r\n    if (_h) {\r\n      var args = arguments;\r\n      var argLen = args.length;\r\n\r\n      if (argLen > 4) {\r\n        args = arrySlice.call(args, 1, args.length - 1);\r\n      }\r\n\r\n      var ctx = args[args.length - 1];\r\n      var len = _h.length;\r\n\r\n      for (var i = 0; i < len;) {\r\n        var hItem = _h[i];\r\n\r\n        if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(type, hItem.query)) {\r\n          i++;\r\n          continue;\r\n        } // Optimize advise from backbone\r\n\r\n\r\n        switch (argLen) {\r\n          case 1:\r\n            hItem.h.call(ctx);\r\n            break;\r\n\r\n          case 2:\r\n            hItem.h.call(ctx, args[1]);\r\n            break;\r\n\r\n          case 3:\r\n            hItem.h.call(ctx, args[1], args[2]);\r\n            break;\r\n\r\n          default:\r\n            // have more than 2 given arguments\r\n            hItem.h.apply(ctx, args);\r\n            break;\r\n        }\r\n\r\n        if (hItem.one) {\r\n          _h.splice(i, 1);\r\n\r\n          len--;\r\n        } else {\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n\r\n    eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(type);\r\n    return this;\r\n  }\r\n};\r\n\r\nfunction normalizeQuery(host, query) {\r\n  var eventProcessor = host._$eventProcessor;\r\n\r\n  if (query != null && eventProcessor && eventProcessor.normalizeQuery) {\r\n    query = eventProcessor.normalizeQuery(query);\r\n  }\r\n\r\n  return query;\r\n}\r\n\r\nfunction on(eventful, event, query, handler, context, isOnce) {\r\n  var _h = eventful._$handlers;\r\n\r\n  if (typeof query === 'function') {\r\n    context = handler;\r\n    handler = query;\r\n    query = null;\r\n  }\r\n\r\n  if (!handler || !event) {\r\n    return eventful;\r\n  }\r\n\r\n  query = normalizeQuery(eventful, query);\r\n\r\n  if (!_h[event]) {\r\n    _h[event] = [];\r\n  }\r\n\r\n  for (var i = 0; i < _h[event].length; i++) {\r\n    if (_h[event][i].h === handler) {\r\n      return eventful;\r\n    }\r\n  }\r\n\r\n  var wrap = {\r\n    h: handler,\r\n    one: isOnce,\r\n    query: query,\r\n    ctx: context || eventful,\r\n    // FIXME\r\n    // Do not publish this feature util it is proved that it makes sense.\r\n    callAtLast: handler.zrEventfulCallAtLast\r\n  };\r\n  var lastIndex = _h[event].length - 1;\r\n  var lastWrap = _h[event][lastIndex];\r\n  lastWrap && lastWrap.callAtLast ? _h[event].splice(lastIndex, 0, wrap) : _h[event].push(wrap);\r\n  return eventful;\r\n} // ----------------------\r\n// The events in zrender\r\n// ----------------------\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onclick\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmouseover\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmouseout\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmousemove\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmousewheel\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmousedown\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmouseup\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondrag\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragstart\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragend\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragenter\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragleave\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragover\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondrop\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n\r\nvar _default = Eventful;\r\nmodule.exports = _default;","var matrix = require(\"../core/matrix\");\r\n\r\nvar vector = require(\"../core/vector\");\r\n\r\n/**\r\n * 提供变换扩展\r\n * @module zrender/mixin/Transformable\r\n * @author pissang (https://www.github.com/pissang)\r\n */\r\nvar mIdentity = matrix.identity;\r\nvar EPSILON = 5e-5;\r\n\r\nfunction isNotAroundZero(val) {\r\n  return val > EPSILON || val < -EPSILON;\r\n}\r\n/**\r\n * @alias module:zrender/mixin/Transformable\r\n * @constructor\r\n */\r\n\r\n\r\nvar Transformable = function (opts) {\r\n  opts = opts || {}; // If there are no given position, rotation, scale\r\n\r\n  if (!opts.position) {\r\n    /**\r\n     * 平移\r\n     * @type {Array.<number>}\r\n     * @default [0, 0]\r\n     */\r\n    this.position = [0, 0];\r\n  }\r\n\r\n  if (opts.rotation == null) {\r\n    /**\r\n     * 旋转\r\n     * @type {Array.<number>}\r\n     * @default 0\r\n     */\r\n    this.rotation = 0;\r\n  }\r\n\r\n  if (!opts.scale) {\r\n    /**\r\n     * 缩放\r\n     * @type {Array.<number>}\r\n     * @default [1, 1]\r\n     */\r\n    this.scale = [1, 1];\r\n  }\r\n  /**\r\n   * 旋转和缩放的原点\r\n   * @type {Array.<number>}\r\n   * @default null\r\n   */\r\n\r\n\r\n  this.origin = this.origin || null;\r\n};\r\n\r\nvar transformableProto = Transformable.prototype;\r\ntransformableProto.transform = null;\r\n/**\r\n * 判断是否需要有坐标变换\r\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\r\n */\r\n\r\ntransformableProto.needLocalTransform = function () {\r\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\r\n};\r\n\r\nvar scaleTmp = [];\r\n\r\ntransformableProto.updateTransform = function () {\r\n  var parent = this.parent;\r\n  var parentHasTransform = parent && parent.transform;\r\n  var needLocalTransform = this.needLocalTransform();\r\n  var m = this.transform;\r\n\r\n  if (!(needLocalTransform || parentHasTransform)) {\r\n    m && mIdentity(m);\r\n    return;\r\n  }\r\n\r\n  m = m || matrix.create();\r\n\r\n  if (needLocalTransform) {\r\n    this.getLocalTransform(m);\r\n  } else {\r\n    mIdentity(m);\r\n  } // 应用父节点变换\r\n\r\n\r\n  if (parentHasTransform) {\r\n    if (needLocalTransform) {\r\n      matrix.mul(m, parent.transform, m);\r\n    } else {\r\n      matrix.copy(m, parent.transform);\r\n    }\r\n  } // 保存这个变换矩阵\r\n\r\n\r\n  this.transform = m;\r\n  var globalScaleRatio = this.globalScaleRatio;\r\n\r\n  if (globalScaleRatio != null && globalScaleRatio !== 1) {\r\n    this.getGlobalScale(scaleTmp);\r\n    var relX = scaleTmp[0] < 0 ? -1 : 1;\r\n    var relY = scaleTmp[1] < 0 ? -1 : 1;\r\n    var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\r\n    var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\r\n    m[0] *= sx;\r\n    m[1] *= sx;\r\n    m[2] *= sy;\r\n    m[3] *= sy;\r\n  }\r\n\r\n  this.invTransform = this.invTransform || matrix.create();\r\n  matrix.invert(this.invTransform, m);\r\n};\r\n\r\ntransformableProto.getLocalTransform = function (m) {\r\n  return Transformable.getLocalTransform(this, m);\r\n};\r\n/**\r\n * 将自己的transform应用到context上\r\n * @param {CanvasRenderingContext2D} ctx\r\n */\r\n\r\n\r\ntransformableProto.setTransform = function (ctx) {\r\n  var m = this.transform;\r\n  var dpr = ctx.dpr || 1;\r\n\r\n  if (m) {\r\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\r\n  } else {\r\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\r\n  }\r\n};\r\n\r\ntransformableProto.restoreTransform = function (ctx) {\r\n  var dpr = ctx.dpr || 1;\r\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\r\n};\r\n\r\nvar tmpTransform = [];\r\nvar originTransform = matrix.create();\r\n\r\ntransformableProto.setLocalTransform = function (m) {\r\n  if (!m) {\r\n    // TODO return or set identity?\r\n    return;\r\n  }\r\n\r\n  var sx = m[0] * m[0] + m[1] * m[1];\r\n  var sy = m[2] * m[2] + m[3] * m[3];\r\n  var position = this.position;\r\n  var scale = this.scale;\r\n\r\n  if (isNotAroundZero(sx - 1)) {\r\n    sx = Math.sqrt(sx);\r\n  }\r\n\r\n  if (isNotAroundZero(sy - 1)) {\r\n    sy = Math.sqrt(sy);\r\n  }\r\n\r\n  if (m[0] < 0) {\r\n    sx = -sx;\r\n  }\r\n\r\n  if (m[3] < 0) {\r\n    sy = -sy;\r\n  }\r\n\r\n  position[0] = m[4];\r\n  position[1] = m[5];\r\n  scale[0] = sx;\r\n  scale[1] = sy;\r\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\r\n};\r\n/**\r\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\r\n */\r\n\r\n\r\ntransformableProto.decomposeTransform = function () {\r\n  if (!this.transform) {\r\n    return;\r\n  }\r\n\r\n  var parent = this.parent;\r\n  var m = this.transform;\r\n\r\n  if (parent && parent.transform) {\r\n    // Get local transform and decompose them to position, scale, rotation\r\n    matrix.mul(tmpTransform, parent.invTransform, m);\r\n    m = tmpTransform;\r\n  }\r\n\r\n  var origin = this.origin;\r\n\r\n  if (origin && (origin[0] || origin[1])) {\r\n    originTransform[4] = origin[0];\r\n    originTransform[5] = origin[1];\r\n    matrix.mul(tmpTransform, m, originTransform);\r\n    tmpTransform[4] -= origin[0];\r\n    tmpTransform[5] -= origin[1];\r\n    m = tmpTransform;\r\n  }\r\n\r\n  this.setLocalTransform(m);\r\n};\r\n/**\r\n * Get global scale\r\n * @return {Array.<number>}\r\n */\r\n\r\n\r\ntransformableProto.getGlobalScale = function (out) {\r\n  var m = this.transform;\r\n  out = out || [];\r\n\r\n  if (!m) {\r\n    out[0] = 1;\r\n    out[1] = 1;\r\n    return out;\r\n  }\r\n\r\n  out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\r\n  out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\r\n\r\n  if (m[0] < 0) {\r\n    out[0] = -out[0];\r\n  }\r\n\r\n  if (m[3] < 0) {\r\n    out[1] = -out[1];\r\n  }\r\n\r\n  return out;\r\n};\r\n/**\r\n * 变换坐标位置到 shape 的局部坐标空间\r\n * @method\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {Array.<number>}\r\n */\r\n\r\n\r\ntransformableProto.transformCoordToLocal = function (x, y) {\r\n  var v2 = [x, y];\r\n  var invTransform = this.invTransform;\r\n\r\n  if (invTransform) {\r\n    vector.applyTransform(v2, v2, invTransform);\r\n  }\r\n\r\n  return v2;\r\n};\r\n/**\r\n * 变换局部坐标位置到全局坐标空间\r\n * @method\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {Array.<number>}\r\n */\r\n\r\n\r\ntransformableProto.transformCoordToGlobal = function (x, y) {\r\n  var v2 = [x, y];\r\n  var transform = this.transform;\r\n\r\n  if (transform) {\r\n    vector.applyTransform(v2, v2, transform);\r\n  }\r\n\r\n  return v2;\r\n};\r\n/**\r\n * @static\r\n * @param {Object} target\r\n * @param {Array.<number>} target.origin\r\n * @param {number} target.rotation\r\n * @param {Array.<number>} target.position\r\n * @param {Array.<number>} [m]\r\n */\r\n\r\n\r\nTransformable.getLocalTransform = function (target, m) {\r\n  m = m || [];\r\n  mIdentity(m);\r\n  var origin = target.origin;\r\n  var scale = target.scale || [1, 1];\r\n  var rotation = target.rotation || 0;\r\n  var position = target.position || [0, 0];\r\n\r\n  if (origin) {\r\n    // Translate to origin\r\n    m[4] -= origin[0];\r\n    m[5] -= origin[1];\r\n  }\r\n\r\n  matrix.scale(m, m, scale);\r\n\r\n  if (rotation) {\r\n    matrix.rotate(m, m, rotation);\r\n  }\r\n\r\n  if (origin) {\r\n    // Translate back from origin\r\n    m[4] += origin[0];\r\n    m[5] += origin[1];\r\n  }\r\n\r\n  m[4] += position[0];\r\n  m[5] += position[1];\r\n  return m;\r\n};\r\n\r\nvar _default = Transformable;\r\nmodule.exports = _default;","var _core = require(\"./core\");\r\n\r\nvar createElement = _core.createElement;\r\n\r\nvar util = require(\"../core/util\");\r\n\r\nvar logError = require(\"../core/log\");\r\n\r\nvar Path = require(\"../graphic/Path\");\r\n\r\nvar ZImage = require(\"../graphic/Image\");\r\n\r\nvar ZText = require(\"../graphic/Text\");\r\n\r\nvar arrayDiff = require(\"../core/arrayDiff2\");\r\n\r\nvar GradientManager = require(\"./helper/GradientManager\");\r\n\r\nvar ClippathManager = require(\"./helper/ClippathManager\");\r\n\r\nvar ShadowManager = require(\"./helper/ShadowManager\");\r\n\r\nvar _graphic = require(\"./graphic\");\r\n\r\nvar svgPath = _graphic.path;\r\nvar svgImage = _graphic.image;\r\nvar svgText = _graphic.text;\r\n\r\n/**\r\n * SVG Painter\r\n * @module zrender/svg/Painter\r\n */\r\nfunction parseInt10(val) {\r\n  return parseInt(val, 10);\r\n}\r\n\r\nfunction getSvgProxy(el) {\r\n  if (el instanceof Path) {\r\n    return svgPath;\r\n  } else if (el instanceof ZImage) {\r\n    return svgImage;\r\n  } else if (el instanceof ZText) {\r\n    return svgText;\r\n  } else {\r\n    return svgPath;\r\n  }\r\n}\r\n\r\nfunction checkParentAvailable(parent, child) {\r\n  return child && parent && child.parentNode !== parent;\r\n}\r\n\r\nfunction insertAfter(parent, child, prevSibling) {\r\n  if (checkParentAvailable(parent, child) && prevSibling) {\r\n    var nextSibling = prevSibling.nextSibling;\r\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\r\n  }\r\n}\r\n\r\nfunction prepend(parent, child) {\r\n  if (checkParentAvailable(parent, child)) {\r\n    var firstChild = parent.firstChild;\r\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\r\n  }\r\n} // function append(parent, child) {\r\n//     if (checkParentAvailable(parent, child)) {\r\n//         parent.appendChild(child);\r\n//     }\r\n// }\r\n\r\n\r\nfunction remove(parent, child) {\r\n  if (child && parent && child.parentNode === parent) {\r\n    parent.removeChild(child);\r\n  }\r\n}\r\n\r\nfunction getTextSvgElement(displayable) {\r\n  return displayable.__textSvgEl;\r\n}\r\n\r\nfunction getSvgElement(displayable) {\r\n  return displayable.__svgEl;\r\n}\r\n/**\r\n * @alias module:zrender/svg/Painter\r\n * @constructor\r\n * @param {HTMLElement} root 绘图容器\r\n * @param {module:zrender/Storage} storage\r\n * @param {Object} opts\r\n */\r\n\r\n\r\nvar SVGPainter = function (root, storage, opts, zrId) {\r\n  this.root = root;\r\n  this.storage = storage;\r\n  this._opts = opts = util.extend({}, opts || {});\r\n  var svgDom = createElement('svg');\r\n  svgDom.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n  svgDom.setAttribute('version', '1.1');\r\n  svgDom.setAttribute('baseProfile', 'full');\r\n  svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\r\n  var bgRoot = createElement('g');\r\n  svgDom.appendChild(bgRoot);\r\n  var svgRoot = createElement('g');\r\n  svgDom.appendChild(svgRoot);\r\n  this.gradientManager = new GradientManager(zrId, svgRoot);\r\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\r\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\r\n  var viewport = document.createElement('div');\r\n  viewport.style.cssText = 'overflow:hidden;position:relative';\r\n  this._svgDom = svgDom;\r\n  this._svgRoot = svgRoot;\r\n  this._backgroundRoot = bgRoot;\r\n  this._viewport = viewport;\r\n  root.appendChild(viewport);\r\n  viewport.appendChild(svgDom);\r\n  this.resize(opts.width, opts.height);\r\n  this._visibleList = [];\r\n};\r\n\r\nSVGPainter.prototype = {\r\n  constructor: SVGPainter,\r\n  getType: function () {\r\n    return 'svg';\r\n  },\r\n  getViewportRoot: function () {\r\n    return this._viewport;\r\n  },\r\n  getSvgDom: function () {\r\n    return this._svgDom;\r\n  },\r\n  getSvgRoot: function () {\r\n    return this._svgRoot;\r\n  },\r\n  getViewportRootOffset: function () {\r\n    var viewportRoot = this.getViewportRoot();\r\n\r\n    if (viewportRoot) {\r\n      return {\r\n        offsetLeft: viewportRoot.offsetLeft || 0,\r\n        offsetTop: viewportRoot.offsetTop || 0\r\n      };\r\n    }\r\n  },\r\n  refresh: function () {\r\n    var list = this.storage.getDisplayList(true);\r\n\r\n    this._paintList(list);\r\n  },\r\n  setBackgroundColor: function (backgroundColor) {\r\n    // TODO gradient\r\n    // Insert a bg rect instead of setting background to viewport.\r\n    // Otherwise, the exported SVG don't have background.\r\n    if (this._backgroundRoot && this._backgroundNode) {\r\n      this._backgroundRoot.removeChild(this._backgroundNode);\r\n    }\r\n\r\n    var bgNode = createElement('rect');\r\n    bgNode.setAttribute('width', this.getWidth());\r\n    bgNode.setAttribute('height', this.getHeight());\r\n    bgNode.setAttribute('x', 0);\r\n    bgNode.setAttribute('y', 0);\r\n    bgNode.setAttribute('id', 0);\r\n    bgNode.style.fill = backgroundColor;\r\n\r\n    this._backgroundRoot.appendChild(bgNode);\r\n\r\n    this._backgroundNode = bgNode;\r\n  },\r\n  _paintList: function (list) {\r\n    this.gradientManager.markAllUnused();\r\n    this.clipPathManager.markAllUnused();\r\n    this.shadowManager.markAllUnused();\r\n    var svgRoot = this._svgRoot;\r\n    var visibleList = this._visibleList;\r\n    var listLen = list.length;\r\n    var newVisibleList = [];\r\n    var i;\r\n\r\n    for (i = 0; i < listLen; i++) {\r\n      var displayable = list[i];\r\n      var svgProxy = getSvgProxy(displayable);\r\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\r\n\r\n      if (!displayable.invisible) {\r\n        if (displayable.__dirty) {\r\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\r\n\r\n          this.clipPathManager.update(displayable); // Update gradient and shadow\r\n\r\n          if (displayable.style) {\r\n            this.gradientManager.update(displayable.style.fill);\r\n            this.gradientManager.update(displayable.style.stroke);\r\n            this.shadowManager.update(svgElement, displayable);\r\n          }\r\n\r\n          displayable.__dirty = false;\r\n        }\r\n\r\n        newVisibleList.push(displayable);\r\n      }\r\n    }\r\n\r\n    var diff = arrayDiff(visibleList, newVisibleList);\r\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\r\n    // after add\r\n\r\n    for (i = 0; i < diff.length; i++) {\r\n      var item = diff[i];\r\n\r\n      if (item.removed) {\r\n        for (var k = 0; k < item.count; k++) {\r\n          var displayable = visibleList[item.indices[k]];\r\n          var svgElement = getSvgElement(displayable);\r\n          var textSvgElement = getTextSvgElement(displayable);\r\n          remove(svgRoot, svgElement);\r\n          remove(svgRoot, textSvgElement);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < diff.length; i++) {\r\n      var item = diff[i];\r\n\r\n      if (item.added) {\r\n        for (var k = 0; k < item.count; k++) {\r\n          var displayable = newVisibleList[item.indices[k]];\r\n          var svgElement = getSvgElement(displayable);\r\n          var textSvgElement = getTextSvgElement(displayable);\r\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\r\n\r\n          if (svgElement) {\r\n            insertAfter(svgRoot, textSvgElement, svgElement);\r\n          } else if (prevSvgElement) {\r\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\r\n          } else {\r\n            prepend(svgRoot, textSvgElement);\r\n          } // Insert text\r\n\r\n\r\n          insertAfter(svgRoot, textSvgElement, svgElement);\r\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement; // zrender.Text only create textSvgElement.\r\n\r\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\r\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\r\n          this.clipPathManager.markUsed(displayable);\r\n        }\r\n      } else if (!item.removed) {\r\n        for (var k = 0; k < item.count; k++) {\r\n          var displayable = newVisibleList[item.indices[k]];\r\n          var svgElement = getSvgElement(displayable);\r\n          var textSvgElement = getTextSvgElement(displayable);\r\n          var svgElement = getSvgElement(displayable);\r\n          var textSvgElement = getTextSvgElement(displayable);\r\n          this.gradientManager.markUsed(displayable);\r\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\r\n          this.shadowManager.markUsed(displayable);\r\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\r\n          this.clipPathManager.markUsed(displayable);\r\n\r\n          if (textSvgElement) {\r\n            // Insert text.\r\n            insertAfter(svgRoot, textSvgElement, svgElement);\r\n          }\r\n\r\n          prevSvgElement = svgElement || textSvgElement || prevSvgElement;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.gradientManager.removeUnused();\r\n    this.clipPathManager.removeUnused();\r\n    this.shadowManager.removeUnused();\r\n    this._visibleList = newVisibleList;\r\n  },\r\n  _getDefs: function (isForceCreating) {\r\n    var svgRoot = this._svgDom;\r\n    var defs = svgRoot.getElementsByTagName('defs');\r\n\r\n    if (defs.length === 0) {\r\n      // Not exist\r\n      if (isForceCreating) {\r\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\r\n        svgRoot.firstChild // Insert in the front of svg\r\n        );\r\n\r\n        if (!defs.contains) {\r\n          // IE doesn't support contains method\r\n          defs.contains = function (el) {\r\n            var children = defs.children;\r\n\r\n            if (!children) {\r\n              return false;\r\n            }\r\n\r\n            for (var i = children.length - 1; i >= 0; --i) {\r\n              if (children[i] === el) {\r\n                return true;\r\n              }\r\n            }\r\n\r\n            return false;\r\n          };\r\n        }\r\n\r\n        return defs;\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      return defs[0];\r\n    }\r\n  },\r\n  resize: function (width, height) {\r\n    var viewport = this._viewport; // FIXME Why ?\r\n\r\n    viewport.style.display = 'none'; // Save input w/h\r\n\r\n    var opts = this._opts;\r\n    width != null && (opts.width = width);\r\n    height != null && (opts.height = height);\r\n    width = this._getSize(0);\r\n    height = this._getSize(1);\r\n    viewport.style.display = '';\r\n\r\n    if (this._width !== width || this._height !== height) {\r\n      this._width = width;\r\n      this._height = height;\r\n      var viewportStyle = viewport.style;\r\n      viewportStyle.width = width + 'px';\r\n      viewportStyle.height = height + 'px';\r\n      var svgRoot = this._svgDom; // Set width by 'svgRoot.width = width' is invalid\r\n\r\n      svgRoot.setAttribute('width', width);\r\n      svgRoot.setAttribute('height', height);\r\n    }\r\n\r\n    if (this._backgroundNode) {\r\n      this._backgroundNode.setAttribute('width', width);\r\n\r\n      this._backgroundNode.setAttribute('height', height);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 获取绘图区域宽度\r\n   */\r\n  getWidth: function () {\r\n    return this._width;\r\n  },\r\n\r\n  /**\r\n   * 获取绘图区域高度\r\n   */\r\n  getHeight: function () {\r\n    return this._height;\r\n  },\r\n  _getSize: function (whIdx) {\r\n    var opts = this._opts;\r\n    var wh = ['width', 'height'][whIdx];\r\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\r\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\r\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\r\n\r\n    if (opts[wh] != null && opts[wh] !== 'auto') {\r\n      return parseFloat(opts[wh]);\r\n    }\r\n\r\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\r\n\r\n    var stl = document.defaultView.getComputedStyle(root);\r\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\r\n  },\r\n  dispose: function () {\r\n    this.root.innerHTML = '';\r\n    this._svgRoot = this._backgroundRoot = this._svgDom = this._backgroundNode = this._viewport = this.storage = null;\r\n  },\r\n  clear: function () {\r\n    if (this._viewport) {\r\n      this.root.removeChild(this._viewport);\r\n    }\r\n  },\r\n  toDataURL: function () {\r\n    this.refresh();\r\n    var html = encodeURIComponent(this._svgDom.outerHTML.replace(/></g, '>\\n\\r<'));\r\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\r\n  }\r\n}; // Not supported methods\r\n\r\nfunction createMethodNotSupport(method) {\r\n  return function () {\r\n    logError('In SVG mode painter not support method \"' + method + '\"');\r\n  };\r\n} // Unsuppoted methods\r\n\r\n\r\nutil.each(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'pathToImage'], function (name) {\r\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\r\n});\r\nvar _default = SVGPainter;\r\nmodule.exports = _default;","var svgURI = 'http://www.w3.org/2000/svg';\r\n\r\nfunction createElement(name) {\r\n  return document.createElementNS(svgURI, name);\r\n}\r\n\r\nexports.createElement = createElement;","var _core = require(\"./core\");\r\n\r\nvar createElement = _core.createElement;\r\n\r\nvar PathProxy = require(\"../core/PathProxy\");\r\n\r\nvar BoundingRect = require(\"../core/BoundingRect\");\r\n\r\nvar matrix = require(\"../core/matrix\");\r\n\r\nvar textContain = require(\"../contain/text\");\r\n\r\nvar textHelper = require(\"../graphic/helper/text\");\r\n\r\nvar Text = require(\"../graphic/Text\");\r\n\r\n// TODO\r\n// 1. shadow\r\n// 2. Image: sx, sy, sw, sh\r\nvar CMD = PathProxy.CMD;\r\nvar arrayJoin = Array.prototype.join;\r\nvar NONE = 'none';\r\nvar mathRound = Math.round;\r\nvar mathSin = Math.sin;\r\nvar mathCos = Math.cos;\r\nvar PI = Math.PI;\r\nvar PI2 = Math.PI * 2;\r\nvar degree = 180 / PI;\r\nvar EPSILON = 1e-4;\r\n\r\nfunction round4(val) {\r\n  return mathRound(val * 1e4) / 1e4;\r\n}\r\n\r\nfunction isAroundZero(val) {\r\n  return val < EPSILON && val > -EPSILON;\r\n}\r\n\r\nfunction pathHasFill(style, isText) {\r\n  var fill = isText ? style.textFill : style.fill;\r\n  return fill != null && fill !== NONE;\r\n}\r\n\r\nfunction pathHasStroke(style, isText) {\r\n  var stroke = isText ? style.textStroke : style.stroke;\r\n  return stroke != null && stroke !== NONE;\r\n}\r\n\r\nfunction setTransform(svgEl, m) {\r\n  if (m) {\r\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\r\n  }\r\n}\r\n\r\nfunction attr(el, key, val) {\r\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\r\n    // Don't set attribute for gradient, since it need new dom nodes\r\n    el.setAttribute(key, val);\r\n  }\r\n}\r\n\r\nfunction attrXLink(el, key, val) {\r\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\r\n}\r\n\r\nfunction bindStyle(svgEl, style, isText, el) {\r\n  if (pathHasFill(style, isText)) {\r\n    var fill = isText ? style.textFill : style.fill;\r\n    fill = fill === 'transparent' ? NONE : fill;\r\n    attr(svgEl, 'fill', fill);\r\n    attr(svgEl, 'fill-opacity', style.fillOpacity != null ? style.fillOpacity * style.opacity : style.opacity);\r\n  } else {\r\n    attr(svgEl, 'fill', NONE);\r\n  }\r\n\r\n  if (pathHasStroke(style, isText)) {\r\n    var stroke = isText ? style.textStroke : style.stroke;\r\n    stroke = stroke === 'transparent' ? NONE : stroke;\r\n    attr(svgEl, 'stroke', stroke);\r\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\r\n    var strokeScale = !isText && style.strokeNoScale ? el.getLineScale() : 1;\r\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\r\n\r\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\r\n    attr(svgEl, 'stroke-opacity', style.strokeOpacity != null ? style.strokeOpacity : style.opacity);\r\n    var lineDash = style.lineDash;\r\n\r\n    if (lineDash) {\r\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\r\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\r\n    } else {\r\n      attr(svgEl, 'stroke-dasharray', '');\r\n    } // PENDING\r\n\r\n\r\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\r\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\r\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\r\n  } else {\r\n    attr(svgEl, 'stroke', NONE);\r\n  }\r\n}\r\n/***************************************************\r\n * PATH\r\n **************************************************/\r\n\r\n\r\nfunction pathDataToString(path) {\r\n  var str = [];\r\n  var data = path.data;\r\n  var dataLength = path.len();\r\n\r\n  for (var i = 0; i < dataLength;) {\r\n    var cmd = data[i++];\r\n    var cmdStr = '';\r\n    var nData = 0;\r\n\r\n    switch (cmd) {\r\n      case CMD.M:\r\n        cmdStr = 'M';\r\n        nData = 2;\r\n        break;\r\n\r\n      case CMD.L:\r\n        cmdStr = 'L';\r\n        nData = 2;\r\n        break;\r\n\r\n      case CMD.Q:\r\n        cmdStr = 'Q';\r\n        nData = 4;\r\n        break;\r\n\r\n      case CMD.C:\r\n        cmdStr = 'C';\r\n        nData = 6;\r\n        break;\r\n\r\n      case CMD.A:\r\n        var cx = data[i++];\r\n        var cy = data[i++];\r\n        var rx = data[i++];\r\n        var ry = data[i++];\r\n        var theta = data[i++];\r\n        var dTheta = data[i++];\r\n        var psi = data[i++];\r\n        var clockwise = data[i++];\r\n        var dThetaPositive = Math.abs(dTheta);\r\n        var isCircle = isAroundZero(dThetaPositive - PI2) || (clockwise ? dTheta >= PI2 : -dTheta >= PI2); // Mapping to 0~2PI\r\n\r\n        var unifiedTheta = dTheta > 0 ? dTheta % PI2 : dTheta % PI2 + PI2;\r\n        var large = false;\r\n\r\n        if (isCircle) {\r\n          large = true;\r\n        } else if (isAroundZero(dThetaPositive)) {\r\n          large = false;\r\n        } else {\r\n          large = unifiedTheta >= PI === !!clockwise;\r\n        }\r\n\r\n        var x0 = round4(cx + rx * mathCos(theta));\r\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\r\n        // We need to shift the end point with a small value\r\n        // FIXME A better way to draw circle ?\r\n\r\n        if (isCircle) {\r\n          if (clockwise) {\r\n            dTheta = PI2 - 1e-4;\r\n          } else {\r\n            dTheta = -PI2 + 1e-4;\r\n          }\r\n\r\n          large = true;\r\n\r\n          if (i === 9) {\r\n            // Move to (x0, y0) only when CMD.A comes at the\r\n            // first position of a shape.\r\n            // For instance, when drawing a ring, CMD.A comes\r\n            // after CMD.M, so it's unnecessary to move to\r\n            // (x0, y0).\r\n            str.push('M', x0, y0);\r\n          }\r\n        }\r\n\r\n        var x = round4(cx + rx * mathCos(theta + dTheta));\r\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\r\n\r\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\r\n        break;\r\n\r\n      case CMD.Z:\r\n        cmdStr = 'Z';\r\n        break;\r\n\r\n      case CMD.R:\r\n        var x = round4(data[i++]);\r\n        var y = round4(data[i++]);\r\n        var w = round4(data[i++]);\r\n        var h = round4(data[i++]);\r\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\r\n        break;\r\n    }\r\n\r\n    cmdStr && str.push(cmdStr);\r\n\r\n    for (var j = 0; j < nData; j++) {\r\n      // PENDING With scale\r\n      str.push(round4(data[i++]));\r\n    }\r\n  }\r\n\r\n  return str.join(' ');\r\n}\r\n\r\nvar svgPath = {};\r\n\r\nsvgPath.brush = function (el) {\r\n  var style = el.style;\r\n  var svgEl = el.__svgEl;\r\n\r\n  if (!svgEl) {\r\n    svgEl = createElement('path');\r\n    el.__svgEl = svgEl;\r\n  }\r\n\r\n  if (!el.path) {\r\n    el.createPathProxy();\r\n  }\r\n\r\n  var path = el.path;\r\n\r\n  if (el.__dirtyPath) {\r\n    path.beginPath();\r\n    path.subPixelOptimize = false;\r\n    el.buildPath(path, el.shape);\r\n    el.__dirtyPath = false;\r\n    var pathStr = pathDataToString(path);\r\n\r\n    if (pathStr.indexOf('NaN') < 0) {\r\n      // Ignore illegal path, which may happen such in out-of-range\r\n      // data in Calendar series.\r\n      attr(svgEl, 'd', pathStr);\r\n    }\r\n  }\r\n\r\n  bindStyle(svgEl, style, false, el);\r\n  setTransform(svgEl, el.transform);\r\n\r\n  if (style.text != null) {\r\n    svgTextDrawRectText(el, el.getBoundingRect());\r\n  } else {\r\n    removeOldTextNode(el);\r\n  }\r\n};\r\n/***************************************************\r\n * IMAGE\r\n **************************************************/\r\n\r\n\r\nvar svgImage = {};\r\n\r\nsvgImage.brush = function (el) {\r\n  var style = el.style;\r\n  var image = style.image;\r\n\r\n  if (image instanceof HTMLImageElement) {\r\n    var src = image.src;\r\n    image = src;\r\n  }\r\n\r\n  if (!image) {\r\n    return;\r\n  }\r\n\r\n  var x = style.x || 0;\r\n  var y = style.y || 0;\r\n  var dw = style.width;\r\n  var dh = style.height;\r\n  var svgEl = el.__svgEl;\r\n\r\n  if (!svgEl) {\r\n    svgEl = createElement('image');\r\n    el.__svgEl = svgEl;\r\n  }\r\n\r\n  if (image !== el.__imageSrc) {\r\n    attrXLink(svgEl, 'href', image); // Caching image src\r\n\r\n    el.__imageSrc = image;\r\n  }\r\n\r\n  attr(svgEl, 'width', dw);\r\n  attr(svgEl, 'height', dh);\r\n  attr(svgEl, 'x', x);\r\n  attr(svgEl, 'y', y);\r\n  setTransform(svgEl, el.transform);\r\n\r\n  if (style.text != null) {\r\n    svgTextDrawRectText(el, el.getBoundingRect());\r\n  } else {\r\n    removeOldTextNode(el);\r\n  }\r\n};\r\n/***************************************************\r\n * TEXT\r\n **************************************************/\r\n\r\n\r\nvar svgText = {};\r\n\r\nvar _tmpTextHostRect = new BoundingRect();\r\n\r\nvar _tmpTextBoxPos = {};\r\nvar _tmpTextTransform = [];\r\nvar TEXT_ALIGN_TO_ANCHRO = {\r\n  left: 'start',\r\n  right: 'end',\r\n  center: 'middle',\r\n  middle: 'middle'\r\n};\r\n/**\r\n * @param {module:zrender/Element} el\r\n * @param {Object|boolean} [hostRect] {x, y, width, height}\r\n *        If set false, rect text is not used.\r\n */\r\n\r\nvar svgTextDrawRectText = function (el, hostRect) {\r\n  var style = el.style;\r\n  var elTransform = el.transform;\r\n  var needTransformTextByHostEl = el instanceof Text || style.transformText;\r\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\r\n  var text = style.text; // Convert to string\r\n\r\n  text != null && (text += '');\r\n\r\n  if (!textHelper.needDrawText(text, style)) {\r\n    return;\r\n  } // render empty text for svg if no text but need draw text.\r\n\r\n\r\n  text == null && (text = ''); // Follow the setting in the canvas renderer, if not transform the\r\n  // text, transform the hostRect, by which the text is located.\r\n\r\n  if (!needTransformTextByHostEl && elTransform) {\r\n    _tmpTextHostRect.copy(hostRect);\r\n\r\n    _tmpTextHostRect.applyTransform(elTransform);\r\n\r\n    hostRect = _tmpTextHostRect;\r\n  }\r\n\r\n  var textSvgEl = el.__textSvgEl;\r\n\r\n  if (!textSvgEl) {\r\n    textSvgEl = createElement('text');\r\n    el.__textSvgEl = textSvgEl;\r\n  } // style.font has been normalized by `normalizeTextStyle`.\r\n\r\n\r\n  var textSvgElStyle = textSvgEl.style;\r\n  var font = style.font || textContain.DEFAULT_FONT;\r\n  var computedFont = textSvgEl.__computedFont;\r\n\r\n  if (font !== textSvgEl.__styleFont) {\r\n    textSvgElStyle.font = textSvgEl.__styleFont = font; // The computedFont might not be the orginal font if it is illegal font.\r\n\r\n    computedFont = textSvgEl.__computedFont = textSvgElStyle.font;\r\n  }\r\n\r\n  var textPadding = style.textPadding;\r\n  var textLineHeight = style.textLineHeight;\r\n  var contentBlock = el.__textCotentBlock;\r\n\r\n  if (!contentBlock || el.__dirtyText) {\r\n    contentBlock = el.__textCotentBlock = textContain.parsePlainText(text, computedFont, textPadding, textLineHeight, style.truncate);\r\n  }\r\n\r\n  var outerHeight = contentBlock.outerHeight;\r\n  var lineHeight = contentBlock.lineHeight;\r\n  textHelper.getBoxPosition(_tmpTextBoxPos, el, style, hostRect);\r\n  var baseX = _tmpTextBoxPos.baseX;\r\n  var baseY = _tmpTextBoxPos.baseY;\r\n  var textAlign = _tmpTextBoxPos.textAlign || 'left';\r\n  var textVerticalAlign = _tmpTextBoxPos.textVerticalAlign;\r\n  setTextTransform(textSvgEl, needTransformTextByHostEl, elTransform, style, hostRect, baseX, baseY);\r\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\r\n  var textX = baseX;\r\n  var textY = boxY; // TODO needDrawBg\r\n\r\n  if (textPadding) {\r\n    textX = getTextXForPadding(baseX, textAlign, textPadding);\r\n    textY += textPadding[0];\r\n  } // `textBaseline` is set as 'middle'.\r\n\r\n\r\n  textY += lineHeight / 2;\r\n  bindStyle(textSvgEl, style, true, el); // FIXME\r\n  // Add a <style> to reset all of the text font as inherit?\r\n  // otherwise the outer <style> may set the unexpected style.\r\n  // Font may affect position of each tspan elements\r\n\r\n  var canCacheByTextString = contentBlock.canCacheByTextString;\r\n  var tspanList = el.__tspanList || (el.__tspanList = []);\r\n  var tspanOriginLen = tspanList.length; // Optimize for most cases, just compare text string to determine change.\r\n\r\n  if (canCacheByTextString && el.__canCacheByTextString && el.__text === text) {\r\n    if (el.__dirtyText && tspanOriginLen) {\r\n      for (var idx = 0; idx < tspanOriginLen; ++idx) {\r\n        updateTextLocation(tspanList[idx], textAlign, textX, textY + idx * lineHeight);\r\n      }\r\n    }\r\n  } else {\r\n    el.__text = text;\r\n    el.__canCacheByTextString = canCacheByTextString;\r\n    var textLines = contentBlock.lines;\r\n    var nTextLines = textLines.length;\r\n    var idx = 0;\r\n\r\n    for (; idx < nTextLines; idx++) {\r\n      // Using cached tspan elements\r\n      var tspan = tspanList[idx];\r\n      var singleLineText = textLines[idx];\r\n\r\n      if (!tspan) {\r\n        tspan = tspanList[idx] = createElement('tspan');\r\n        textSvgEl.appendChild(tspan);\r\n        tspan.appendChild(document.createTextNode(singleLineText));\r\n      } else if (tspan.__zrText !== singleLineText) {\r\n        tspan.innerHTML = '';\r\n        tspan.appendChild(document.createTextNode(singleLineText));\r\n      }\r\n\r\n      updateTextLocation(tspan, textAlign, textX, textY + idx * lineHeight);\r\n    } // Remove unused tspan elements\r\n\r\n\r\n    if (tspanOriginLen > nTextLines) {\r\n      for (; idx < tspanOriginLen; idx++) {\r\n        textSvgEl.removeChild(tspanList[idx]);\r\n      }\r\n\r\n      tspanList.length = nTextLines;\r\n    }\r\n  }\r\n};\r\n\r\nfunction setTextTransform(textSvgEl, needTransformTextByHostEl, elTransform, style, hostRect, baseX, baseY) {\r\n  matrix.identity(_tmpTextTransform);\r\n\r\n  if (needTransformTextByHostEl && elTransform) {\r\n    matrix.copy(_tmpTextTransform, elTransform);\r\n  } // textRotation only apply in RectText.\r\n\r\n\r\n  var textRotation = style.textRotation;\r\n\r\n  if (hostRect && textRotation) {\r\n    var origin = style.textOrigin;\r\n\r\n    if (origin === 'center') {\r\n      baseX = hostRect.width / 2 + hostRect.x;\r\n      baseY = hostRect.height / 2 + hostRect.y;\r\n    } else if (origin) {\r\n      baseX = origin[0] + hostRect.x;\r\n      baseY = origin[1] + hostRect.y;\r\n    }\r\n\r\n    _tmpTextTransform[4] -= baseX;\r\n    _tmpTextTransform[5] -= baseY; // Positive: anticlockwise\r\n\r\n    matrix.rotate(_tmpTextTransform, _tmpTextTransform, textRotation);\r\n    _tmpTextTransform[4] += baseX;\r\n    _tmpTextTransform[5] += baseY;\r\n  } // See the definition in `Style.js#textOrigin`, the default\r\n  // origin is from the result of `getBoxPosition`.\r\n\r\n\r\n  setTransform(textSvgEl, _tmpTextTransform);\r\n} // FIXME merge the same code with `helper/text.js#getTextXForPadding`;\r\n\r\n\r\nfunction getTextXForPadding(x, textAlign, textPadding) {\r\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\r\n}\r\n\r\nfunction updateTextLocation(tspan, textAlign, x, y) {\r\n  // Consider different font display differently in vertial align, we always\r\n  // set vertialAlign as 'middle', and use 'y' to locate text vertically.\r\n  attr(tspan, 'dominant-baseline', 'middle');\r\n  attr(tspan, 'text-anchor', TEXT_ALIGN_TO_ANCHRO[textAlign]);\r\n  attr(tspan, 'x', x);\r\n  attr(tspan, 'y', y);\r\n}\r\n\r\nfunction removeOldTextNode(el) {\r\n  if (el && el.__textSvgEl) {\r\n    // textSvgEl may has no parentNode if el has been removed temporary.\r\n    if (el.__textSvgEl.parentNode) {\r\n      el.__textSvgEl.parentNode.removeChild(el.__textSvgEl);\r\n    }\r\n\r\n    el.__textSvgEl = null;\r\n    el.__tspanList = [];\r\n    el.__text = null;\r\n  }\r\n}\r\n\r\nsvgText.drawRectText = svgTextDrawRectText;\r\n\r\nsvgText.brush = function (el) {\r\n  var style = el.style;\r\n\r\n  if (style.text != null) {\r\n    svgTextDrawRectText(el, false);\r\n  } else {\r\n    removeOldTextNode(el);\r\n  }\r\n};\r\n\r\nexports.path = svgPath;\r\nexports.image = svgImage;\r\nexports.text = svgText;","var Definable = require(\"./Definable\");\r\n\r\nvar zrUtil = require(\"../../core/util\");\r\n\r\nvar matrix = require(\"../../core/matrix\");\r\n\r\n/**\r\n * @file Manages SVG clipPath elements.\r\n * @author Zhang Wenli\r\n */\r\n\r\n/**\r\n * Manages SVG clipPath elements.\r\n *\r\n * @class\r\n * @extends Definable\r\n * @param   {number}     zrId    zrender instance id\r\n * @param   {SVGElement} svgRoot root of SVG document\r\n */\r\nfunction ClippathManager(zrId, svgRoot) {\r\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\r\n}\r\n\r\nzrUtil.inherits(ClippathManager, Definable);\r\n/**\r\n * Update clipPath.\r\n *\r\n * @param {Displayable} displayable displayable element\r\n */\r\n\r\nClippathManager.prototype.update = function (displayable) {\r\n  var svgEl = this.getSvgElement(displayable);\r\n\r\n  if (svgEl) {\r\n    this.updateDom(svgEl, displayable.__clipPaths, false);\r\n  }\r\n\r\n  var textEl = this.getTextSvgElement(displayable);\r\n\r\n  if (textEl) {\r\n    // Make another clipPath for text, since it's transform\r\n    // matrix is not the same with svgElement\r\n    this.updateDom(textEl, displayable.__clipPaths, true);\r\n  }\r\n\r\n  this.markUsed(displayable);\r\n};\r\n/**\r\n * Create an SVGElement of displayable and create a <clipPath> of its\r\n * clipPath\r\n *\r\n * @param {Displayable} parentEl  parent element\r\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\r\n * @param {boolean}     isText    if parent element is Text\r\n */\r\n\r\n\r\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\r\n  if (clipPaths && clipPaths.length > 0) {\r\n    // Has clipPath, create <clipPath> with the first clipPath\r\n    var defs = this.getDefs(true);\r\n    var clipPath = clipPaths[0];\r\n    var clipPathEl;\r\n    var id;\r\n    var dom = isText ? '_textDom' : '_dom';\r\n\r\n    if (clipPath[dom]) {\r\n      // Use a dom that is already in <defs>\r\n      id = clipPath[dom].getAttribute('id');\r\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\r\n\r\n      if (!defs.contains(clipPathEl)) {\r\n        // This happens when set old clipPath that has\r\n        // been previously removed\r\n        defs.appendChild(clipPathEl);\r\n      }\r\n    } else {\r\n      // New <clipPath>\r\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\r\n      ++this.nextId;\r\n      clipPathEl = this.createElement('clipPath');\r\n      clipPathEl.setAttribute('id', id);\r\n      defs.appendChild(clipPathEl);\r\n      clipPath[dom] = clipPathEl;\r\n    } // Build path and add to <clipPath>\r\n\r\n\r\n    var svgProxy = this.getSvgProxy(clipPath);\r\n\r\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\r\n      /**\r\n       * If a clipPath has a parent with transform, the transform\r\n       * of parent should not be considered when setting transform\r\n       * of clipPath. So we need to transform back from parent's\r\n       * transform, which is done by multiplying parent's inverse\r\n       * transform.\r\n       */\r\n      // Store old transform\r\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\r\n\r\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\r\n      svgProxy.brush(clipPath); // Set back transform of clipPath\r\n\r\n      clipPath.transform = transform;\r\n    } else {\r\n      svgProxy.brush(clipPath);\r\n    }\r\n\r\n    var pathEl = this.getSvgElement(clipPath);\r\n    clipPathEl.innerHTML = '';\r\n    /**\r\n     * Use `cloneNode()` here to appendChild to multiple parents,\r\n     * which may happend when Text and other shapes are using the same\r\n     * clipPath. Since Text will create an extra clipPath DOM due to\r\n     * different transform rules.\r\n     */\r\n\r\n    clipPathEl.appendChild(pathEl.cloneNode());\r\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\r\n\r\n    if (clipPaths.length > 1) {\r\n      // Make the other clipPaths recursively\r\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\r\n    }\r\n  } else {\r\n    // No clipPath\r\n    if (parentEl) {\r\n      parentEl.setAttribute('clip-path', 'none');\r\n    }\r\n  }\r\n};\r\n/**\r\n * Mark a single clipPath to be used\r\n *\r\n * @param {Displayable} displayable displayable element\r\n */\r\n\r\n\r\nClippathManager.prototype.markUsed = function (displayable) {\r\n  var that = this; // displayable.__clipPaths can only be `null`/`undefined` or an non-empty array.\r\n\r\n  if (displayable.__clipPaths) {\r\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\r\n      if (clipPath._dom) {\r\n        Definable.prototype.markUsed.call(that, clipPath._dom);\r\n      }\r\n\r\n      if (clipPath._textDom) {\r\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nvar _default = ClippathManager;\r\nmodule.exports = _default;","var _core = require(\"../core\");\r\n\r\nvar createElement = _core.createElement;\r\n\r\nvar zrUtil = require(\"../../core/util\");\r\n\r\nvar Path = require(\"../../graphic/Path\");\r\n\r\nvar ZImage = require(\"../../graphic/Image\");\r\n\r\nvar ZText = require(\"../../graphic/Text\");\r\n\r\nvar _graphic = require(\"../graphic\");\r\n\r\nvar svgPath = _graphic.path;\r\nvar svgImage = _graphic.image;\r\nvar svgText = _graphic.text;\r\n\r\n/**\r\n * @file Manages elements that can be defined in <defs> in SVG,\r\n *       e.g., gradients, clip path, etc.\r\n * @author Zhang Wenli\r\n */\r\nvar MARK_UNUSED = '0';\r\nvar MARK_USED = '1';\r\n/**\r\n * Manages elements that can be defined in <defs> in SVG,\r\n * e.g., gradients, clip path, etc.\r\n *\r\n * @class\r\n * @param {number}          zrId      zrender instance id\r\n * @param {SVGElement}      svgRoot   root of SVG document\r\n * @param {string|string[]} tagNames  possible tag names\r\n * @param {string}          markLabel label name to make if the element\r\n *                                    is used\r\n */\r\n\r\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\r\n  this._zrId = zrId;\r\n  this._svgRoot = svgRoot;\r\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\r\n  this._markLabel = markLabel;\r\n  this._domName = domName || '_dom';\r\n  this.nextId = 0;\r\n}\r\n\r\nDefinable.prototype.createElement = createElement;\r\n/**\r\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\r\n *\r\n * @param {boolean} isForceCreating if need to create when not exists\r\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\r\n * exist and isForceCreating is false\r\n */\r\n\r\nDefinable.prototype.getDefs = function (isForceCreating) {\r\n  var svgRoot = this._svgRoot;\r\n\r\n  var defs = this._svgRoot.getElementsByTagName('defs');\r\n\r\n  if (defs.length === 0) {\r\n    // Not exist\r\n    if (isForceCreating) {\r\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\r\n      svgRoot.firstChild // Insert in the front of svg\r\n      );\r\n\r\n      if (!defs.contains) {\r\n        // IE doesn't support contains method\r\n        defs.contains = function (el) {\r\n          var children = defs.children;\r\n\r\n          if (!children) {\r\n            return false;\r\n          }\r\n\r\n          for (var i = children.length - 1; i >= 0; --i) {\r\n            if (children[i] === el) {\r\n              return true;\r\n            }\r\n          }\r\n\r\n          return false;\r\n        };\r\n      }\r\n\r\n      return defs;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else {\r\n    return defs[0];\r\n  }\r\n};\r\n/**\r\n * Update DOM element if necessary.\r\n *\r\n * @param {Object|string} element style element. e.g., for gradient,\r\n *                                it may be '#ccc' or {type: 'linear', ...}\r\n * @param {Function|undefined} onUpdate update callback\r\n */\r\n\r\n\r\nDefinable.prototype.update = function (element, onUpdate) {\r\n  if (!element) {\r\n    return;\r\n  }\r\n\r\n  var defs = this.getDefs(false);\r\n\r\n  if (element[this._domName] && defs.contains(element[this._domName])) {\r\n    // Update DOM\r\n    if (typeof onUpdate === 'function') {\r\n      onUpdate(element);\r\n    }\r\n  } else {\r\n    // No previous dom, create new\r\n    var dom = this.add(element);\r\n\r\n    if (dom) {\r\n      element[this._domName] = dom;\r\n    }\r\n  }\r\n};\r\n/**\r\n * Add gradient dom to defs\r\n *\r\n * @param {SVGElement} dom DOM to be added to <defs>\r\n */\r\n\r\n\r\nDefinable.prototype.addDom = function (dom) {\r\n  var defs = this.getDefs(true);\r\n  defs.appendChild(dom);\r\n};\r\n/**\r\n * Remove DOM of a given element.\r\n *\r\n * @param {SVGElement} element element to remove dom\r\n */\r\n\r\n\r\nDefinable.prototype.removeDom = function (element) {\r\n  var defs = this.getDefs(false);\r\n\r\n  if (defs && element[this._domName]) {\r\n    defs.removeChild(element[this._domName]);\r\n    element[this._domName] = null;\r\n  }\r\n};\r\n/**\r\n * Get DOMs of this element.\r\n *\r\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\r\n */\r\n\r\n\r\nDefinable.prototype.getDoms = function () {\r\n  var defs = this.getDefs(false);\r\n\r\n  if (!defs) {\r\n    // No dom when defs is not defined\r\n    return [];\r\n  }\r\n\r\n  var doms = [];\r\n  zrUtil.each(this._tagNames, function (tagName) {\r\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\r\n    // rather than real array.\r\n    // So `doms.concat(tags)` add tags as one object.\r\n\r\n    doms = doms.concat([].slice.call(tags));\r\n  });\r\n  return doms;\r\n};\r\n/**\r\n * Mark DOMs to be unused before painting, and clear unused ones at the end\r\n * of the painting.\r\n */\r\n\r\n\r\nDefinable.prototype.markAllUnused = function () {\r\n  var doms = this.getDoms();\r\n  var that = this;\r\n  zrUtil.each(doms, function (dom) {\r\n    dom[that._markLabel] = MARK_UNUSED;\r\n  });\r\n};\r\n/**\r\n * Mark a single DOM to be used.\r\n *\r\n * @param {SVGElement} dom DOM to mark\r\n */\r\n\r\n\r\nDefinable.prototype.markUsed = function (dom) {\r\n  if (dom) {\r\n    dom[this._markLabel] = MARK_USED;\r\n  }\r\n};\r\n/**\r\n * Remove unused DOMs defined in <defs>\r\n */\r\n\r\n\r\nDefinable.prototype.removeUnused = function () {\r\n  var defs = this.getDefs(false);\r\n\r\n  if (!defs) {\r\n    // Nothing to remove\r\n    return;\r\n  }\r\n\r\n  var doms = this.getDoms();\r\n  var that = this;\r\n  zrUtil.each(doms, function (dom) {\r\n    if (dom[that._markLabel] !== MARK_USED) {\r\n      // Remove gradient\r\n      defs.removeChild(dom);\r\n    }\r\n  });\r\n};\r\n/**\r\n * Get SVG proxy.\r\n *\r\n * @param {Displayable} displayable displayable element\r\n * @return {Path|Image|Text} svg proxy of given element\r\n */\r\n\r\n\r\nDefinable.prototype.getSvgProxy = function (displayable) {\r\n  if (displayable instanceof Path) {\r\n    return svgPath;\r\n  } else if (displayable instanceof ZImage) {\r\n    return svgImage;\r\n  } else if (displayable instanceof ZText) {\r\n    return svgText;\r\n  } else {\r\n    return svgPath;\r\n  }\r\n};\r\n/**\r\n * Get text SVG element.\r\n *\r\n * @param {Displayable} displayable displayable element\r\n * @return {SVGElement} SVG element of text\r\n */\r\n\r\n\r\nDefinable.prototype.getTextSvgElement = function (displayable) {\r\n  return displayable.__textSvgEl;\r\n};\r\n/**\r\n * Get SVG element.\r\n *\r\n * @param {Displayable} displayable displayable element\r\n * @return {SVGElement} SVG element\r\n */\r\n\r\n\r\nDefinable.prototype.getSvgElement = function (displayable) {\r\n  return displayable.__svgEl;\r\n};\r\n\r\nvar _default = Definable;\r\nmodule.exports = _default;","var Definable = require(\"./Definable\");\r\n\r\nvar zrUtil = require(\"../../core/util\");\r\n\r\nvar logError = require(\"../../core/log\");\r\n\r\nvar colorTool = require(\"../../tool/color\");\r\n\r\n/**\r\n * @file Manages SVG gradient elements.\r\n * @author Zhang Wenli\r\n */\r\n\r\n/**\r\n * Manages SVG gradient elements.\r\n *\r\n * @class\r\n * @extends Definable\r\n * @param   {number}     zrId    zrender instance id\r\n * @param   {SVGElement} svgRoot root of SVG document\r\n */\r\nfunction GradientManager(zrId, svgRoot) {\r\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\r\n}\r\n\r\nzrUtil.inherits(GradientManager, Definable);\r\n/**\r\n * Create new gradient DOM for fill or stroke if not exist,\r\n * but will not update gradient if exists.\r\n *\r\n * @param {SvgElement}  svgElement   SVG element to paint\r\n * @param {Displayable} displayable  zrender displayable element\r\n */\r\n\r\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\r\n  if (displayable && displayable.style) {\r\n    var that = this;\r\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\r\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\r\n        var gradient = displayable.style[fillOrStroke];\r\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\r\n\r\n        var dom;\r\n\r\n        if (gradient._dom) {\r\n          // Gradient exists\r\n          dom = gradient._dom;\r\n\r\n          if (!defs.contains(gradient._dom)) {\r\n            // _dom is no longer in defs, recreate\r\n            that.addDom(dom);\r\n          }\r\n        } else {\r\n          // New dom\r\n          dom = that.add(gradient);\r\n        }\r\n\r\n        that.markUsed(displayable);\r\n        var id = dom.getAttribute('id');\r\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\r\n      }\r\n    });\r\n  }\r\n};\r\n/**\r\n * Add a new gradient tag in <defs>\r\n *\r\n * @param   {Gradient} gradient zr gradient instance\r\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\r\n *                            created DOM\r\n */\r\n\r\n\r\nGradientManager.prototype.add = function (gradient) {\r\n  var dom;\r\n\r\n  if (gradient.type === 'linear') {\r\n    dom = this.createElement('linearGradient');\r\n  } else if (gradient.type === 'radial') {\r\n    dom = this.createElement('radialGradient');\r\n  } else {\r\n    logError('Illegal gradient type.');\r\n    return null;\r\n  } // Set dom id with gradient id, since each gradient instance\r\n  // will have no more than one dom element.\r\n  // id may exists before for those dirty elements, in which case\r\n  // id should remain the same, and other attributes should be\r\n  // updated.\r\n\r\n\r\n  gradient.id = gradient.id || this.nextId++;\r\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\r\n  this.updateDom(gradient, dom);\r\n  this.addDom(dom);\r\n  return dom;\r\n};\r\n/**\r\n * Update gradient.\r\n *\r\n * @param {Gradient} gradient zr gradient instance\r\n */\r\n\r\n\r\nGradientManager.prototype.update = function (gradient) {\r\n  var that = this;\r\n  Definable.prototype.update.call(this, gradient, function () {\r\n    var type = gradient.type;\r\n    var tagName = gradient._dom.tagName;\r\n\r\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\r\n      // Gradient type is not changed, update gradient\r\n      that.updateDom(gradient, gradient._dom);\r\n    } else {\r\n      // Remove and re-create if type is changed\r\n      that.removeDom(gradient);\r\n      that.add(gradient);\r\n    }\r\n  });\r\n};\r\n/**\r\n * Update gradient dom\r\n *\r\n * @param {Gradient} gradient zr gradient instance\r\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\r\n *                            DOM to update\r\n */\r\n\r\n\r\nGradientManager.prototype.updateDom = function (gradient, dom) {\r\n  if (gradient.type === 'linear') {\r\n    dom.setAttribute('x1', gradient.x);\r\n    dom.setAttribute('y1', gradient.y);\r\n    dom.setAttribute('x2', gradient.x2);\r\n    dom.setAttribute('y2', gradient.y2);\r\n  } else if (gradient.type === 'radial') {\r\n    dom.setAttribute('cx', gradient.x);\r\n    dom.setAttribute('cy', gradient.y);\r\n    dom.setAttribute('r', gradient.r);\r\n  } else {\r\n    logError('Illegal gradient type.');\r\n    return;\r\n  }\r\n\r\n  if (gradient.global) {\r\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\r\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\r\n  } else {\r\n    // x1, x2, y1, y2 in range of 0 to 1\r\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\r\n  } // Remove color stops if exists\r\n\r\n\r\n  dom.innerHTML = ''; // Add color stops\r\n\r\n  var colors = gradient.colorStops;\r\n\r\n  for (var i = 0, len = colors.length; i < len; ++i) {\r\n    var stop = this.createElement('stop');\r\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\r\n    var color = colors[i].color;\r\n\r\n    if (color.indexOf('rgba') > -1) {\r\n      // Fix Safari bug that stop-color not recognizing alpha #9014\r\n      var opacity = colorTool.parse(color)[3];\r\n      var hex = colorTool.toHex(color); // stop-color cannot be color, since:\r\n      // The opacity value used for the gradient calculation is the\r\n      // *product* of the value of stop-opacity and the opacity of the\r\n      // value of stop-color.\r\n      // See https://www.w3.org/TR/SVG2/pservers.html#StopOpacityProperty\r\n\r\n      stop.setAttribute('stop-color', '#' + hex);\r\n      stop.setAttribute('stop-opacity', opacity);\r\n    } else {\r\n      stop.setAttribute('stop-color', colors[i].color);\r\n    }\r\n\r\n    dom.appendChild(stop);\r\n  } // Store dom element in gradient, to avoid creating multiple\r\n  // dom instances for the same gradient element\r\n\r\n\r\n  gradient._dom = dom;\r\n};\r\n/**\r\n * Mark a single gradient to be used\r\n *\r\n * @param {Displayable} displayable displayable element\r\n */\r\n\r\n\r\nGradientManager.prototype.markUsed = function (displayable) {\r\n  if (displayable.style) {\r\n    var gradient = displayable.style.fill;\r\n\r\n    if (gradient && gradient._dom) {\r\n      Definable.prototype.markUsed.call(this, gradient._dom);\r\n    }\r\n\r\n    gradient = displayable.style.stroke;\r\n\r\n    if (gradient && gradient._dom) {\r\n      Definable.prototype.markUsed.call(this, gradient._dom);\r\n    }\r\n  }\r\n};\r\n\r\nvar _default = GradientManager;\r\nmodule.exports = _default;","var Definable = require(\"./Definable\");\r\n\r\nvar zrUtil = require(\"../../core/util\");\r\n\r\n/**\r\n * @file Manages SVG shadow elements.\r\n * @author Zhang Wenli\r\n */\r\n\r\n/**\r\n * Manages SVG shadow elements.\r\n *\r\n * @class\r\n * @extends Definable\r\n * @param   {number}     zrId    zrender instance id\r\n * @param   {SVGElement} svgRoot root of SVG document\r\n */\r\nfunction ShadowManager(zrId, svgRoot) {\r\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\r\n}\r\n\r\nzrUtil.inherits(ShadowManager, Definable);\r\n/**\r\n * Create new shadow DOM for fill or stroke if not exist,\r\n * but will not update shadow if exists.\r\n *\r\n * @param {SvgElement}  svgElement   SVG element to paint\r\n * @param {Displayable} displayable  zrender displayable element\r\n */\r\n\r\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\r\n  if (displayable && hasShadow(displayable.style)) {\r\n    // Create dom in <defs> if not exists\r\n    var dom;\r\n\r\n    if (displayable._shadowDom) {\r\n      // Gradient exists\r\n      dom = displayable._shadowDom;\r\n      var defs = this.getDefs(true);\r\n\r\n      if (!defs.contains(displayable._shadowDom)) {\r\n        // _shadowDom is no longer in defs, recreate\r\n        this.addDom(dom);\r\n      }\r\n    } else {\r\n      // New dom\r\n      dom = this.add(displayable);\r\n    }\r\n\r\n    this.markUsed(displayable);\r\n    var id = dom.getAttribute('id');\r\n    svgElement.style.filter = 'url(#' + id + ')';\r\n  }\r\n};\r\n/**\r\n * Add a new shadow tag in <defs>\r\n *\r\n * @param {Displayable} displayable  zrender displayable element\r\n * @return {SVGFilterElement} created DOM\r\n */\r\n\r\n\r\nShadowManager.prototype.add = function (displayable) {\r\n  var dom = this.createElement('filter'); // Set dom id with shadow id, since each shadow instance\r\n  // will have no more than one dom element.\r\n  // id may exists before for those dirty elements, in which case\r\n  // id should remain the same, and other attributes should be\r\n  // updated.\r\n\r\n  displayable._shadowDomId = displayable._shadowDomId || this.nextId++;\r\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + displayable._shadowDomId);\r\n  this.updateDom(displayable, dom);\r\n  this.addDom(dom);\r\n  return dom;\r\n};\r\n/**\r\n * Update shadow.\r\n *\r\n * @param {Displayable} displayable  zrender displayable element\r\n */\r\n\r\n\r\nShadowManager.prototype.update = function (svgElement, displayable) {\r\n  var style = displayable.style;\r\n\r\n  if (hasShadow(style)) {\r\n    var that = this;\r\n    Definable.prototype.update.call(this, displayable, function () {\r\n      that.updateDom(displayable, displayable._shadowDom);\r\n    });\r\n  } else {\r\n    // Remove shadow\r\n    this.remove(svgElement, displayable);\r\n  }\r\n};\r\n/**\r\n * Remove DOM and clear parent filter\r\n */\r\n\r\n\r\nShadowManager.prototype.remove = function (svgElement, displayable) {\r\n  if (displayable._shadowDomId != null) {\r\n    this.removeDom(svgElement);\r\n    svgElement.style.filter = '';\r\n  }\r\n};\r\n/**\r\n * Update shadow dom\r\n *\r\n * @param {Displayable} displayable  zrender displayable element\r\n * @param {SVGFilterElement} dom DOM to update\r\n */\r\n\r\n\r\nShadowManager.prototype.updateDom = function (displayable, dom) {\r\n  var domChild = dom.getElementsByTagName('feDropShadow');\r\n\r\n  if (domChild.length === 0) {\r\n    domChild = this.createElement('feDropShadow');\r\n  } else {\r\n    domChild = domChild[0];\r\n  }\r\n\r\n  var style = displayable.style;\r\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\r\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\r\n\r\n  var offsetX;\r\n  var offsetY;\r\n  var blur;\r\n  var color;\r\n\r\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\r\n    offsetX = style.shadowOffsetX || 0;\r\n    offsetY = style.shadowOffsetY || 0;\r\n    blur = style.shadowBlur;\r\n    color = style.shadowColor;\r\n  } else if (style.textShadowBlur) {\r\n    offsetX = style.textShadowOffsetX || 0;\r\n    offsetY = style.textShadowOffsetY || 0;\r\n    blur = style.textShadowBlur;\r\n    color = style.textShadowColor;\r\n  } else {\r\n    // Remove shadow\r\n    this.removeDom(dom, style);\r\n    return;\r\n  }\r\n\r\n  domChild.setAttribute('dx', offsetX / scaleX);\r\n  domChild.setAttribute('dy', offsetY / scaleY);\r\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\r\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\r\n\r\n  var stdDx = blur / 2 / scaleX;\r\n  var stdDy = blur / 2 / scaleY;\r\n  var stdDeviation = stdDx + ' ' + stdDy;\r\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\r\n\r\n  dom.setAttribute('x', '-100%');\r\n  dom.setAttribute('y', '-100%');\r\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\r\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\r\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\r\n  // dom instances for the same shadow element\r\n\r\n  displayable._shadowDom = dom;\r\n};\r\n/**\r\n * Mark a single shadow to be used\r\n *\r\n * @param {Displayable} displayable displayable element\r\n */\r\n\r\n\r\nShadowManager.prototype.markUsed = function (displayable) {\r\n  if (displayable._shadowDom) {\r\n    Definable.prototype.markUsed.call(this, displayable._shadowDom);\r\n  }\r\n};\r\n\r\nfunction hasShadow(style) {\r\n  // TODO: textBoxShadowBlur is not supported yet\r\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\r\n}\r\n\r\nvar _default = ShadowManager;\r\nmodule.exports = _default;","require(\"./graphic\");\r\n\r\nvar _zrender = require(\"../zrender\");\r\n\r\nvar registerPainter = _zrender.registerPainter;\r\n\r\nvar Painter = require(\"./Painter\");\r\n\r\nregisterPainter('svg', Painter);","var LRU = require(\"../core/LRU\");\r\n\r\nvar kCSSColorTable = {\r\n  'transparent': [0, 0, 0, 0],\r\n  'aliceblue': [240, 248, 255, 1],\r\n  'antiquewhite': [250, 235, 215, 1],\r\n  'aqua': [0, 255, 255, 1],\r\n  'aquamarine': [127, 255, 212, 1],\r\n  'azure': [240, 255, 255, 1],\r\n  'beige': [245, 245, 220, 1],\r\n  'bisque': [255, 228, 196, 1],\r\n  'black': [0, 0, 0, 1],\r\n  'blanchedalmond': [255, 235, 205, 1],\r\n  'blue': [0, 0, 255, 1],\r\n  'blueviolet': [138, 43, 226, 1],\r\n  'brown': [165, 42, 42, 1],\r\n  'burlywood': [222, 184, 135, 1],\r\n  'cadetblue': [95, 158, 160, 1],\r\n  'chartreuse': [127, 255, 0, 1],\r\n  'chocolate': [210, 105, 30, 1],\r\n  'coral': [255, 127, 80, 1],\r\n  'cornflowerblue': [100, 149, 237, 1],\r\n  'cornsilk': [255, 248, 220, 1],\r\n  'crimson': [220, 20, 60, 1],\r\n  'cyan': [0, 255, 255, 1],\r\n  'darkblue': [0, 0, 139, 1],\r\n  'darkcyan': [0, 139, 139, 1],\r\n  'darkgoldenrod': [184, 134, 11, 1],\r\n  'darkgray': [169, 169, 169, 1],\r\n  'darkgreen': [0, 100, 0, 1],\r\n  'darkgrey': [169, 169, 169, 1],\r\n  'darkkhaki': [189, 183, 107, 1],\r\n  'darkmagenta': [139, 0, 139, 1],\r\n  'darkolivegreen': [85, 107, 47, 1],\r\n  'darkorange': [255, 140, 0, 1],\r\n  'darkorchid': [153, 50, 204, 1],\r\n  'darkred': [139, 0, 0, 1],\r\n  'darksalmon': [233, 150, 122, 1],\r\n  'darkseagreen': [143, 188, 143, 1],\r\n  'darkslateblue': [72, 61, 139, 1],\r\n  'darkslategray': [47, 79, 79, 1],\r\n  'darkslategrey': [47, 79, 79, 1],\r\n  'darkturquoise': [0, 206, 209, 1],\r\n  'darkviolet': [148, 0, 211, 1],\r\n  'deeppink': [255, 20, 147, 1],\r\n  'deepskyblue': [0, 191, 255, 1],\r\n  'dimgray': [105, 105, 105, 1],\r\n  'dimgrey': [105, 105, 105, 1],\r\n  'dodgerblue': [30, 144, 255, 1],\r\n  'firebrick': [178, 34, 34, 1],\r\n  'floralwhite': [255, 250, 240, 1],\r\n  'forestgreen': [34, 139, 34, 1],\r\n  'fuchsia': [255, 0, 255, 1],\r\n  'gainsboro': [220, 220, 220, 1],\r\n  'ghostwhite': [248, 248, 255, 1],\r\n  'gold': [255, 215, 0, 1],\r\n  'goldenrod': [218, 165, 32, 1],\r\n  'gray': [128, 128, 128, 1],\r\n  'green': [0, 128, 0, 1],\r\n  'greenyellow': [173, 255, 47, 1],\r\n  'grey': [128, 128, 128, 1],\r\n  'honeydew': [240, 255, 240, 1],\r\n  'hotpink': [255, 105, 180, 1],\r\n  'indianred': [205, 92, 92, 1],\r\n  'indigo': [75, 0, 130, 1],\r\n  'ivory': [255, 255, 240, 1],\r\n  'khaki': [240, 230, 140, 1],\r\n  'lavender': [230, 230, 250, 1],\r\n  'lavenderblush': [255, 240, 245, 1],\r\n  'lawngreen': [124, 252, 0, 1],\r\n  'lemonchiffon': [255, 250, 205, 1],\r\n  'lightblue': [173, 216, 230, 1],\r\n  'lightcoral': [240, 128, 128, 1],\r\n  'lightcyan': [224, 255, 255, 1],\r\n  'lightgoldenrodyellow': [250, 250, 210, 1],\r\n  'lightgray': [211, 211, 211, 1],\r\n  'lightgreen': [144, 238, 144, 1],\r\n  'lightgrey': [211, 211, 211, 1],\r\n  'lightpink': [255, 182, 193, 1],\r\n  'lightsalmon': [255, 160, 122, 1],\r\n  'lightseagreen': [32, 178, 170, 1],\r\n  'lightskyblue': [135, 206, 250, 1],\r\n  'lightslategray': [119, 136, 153, 1],\r\n  'lightslategrey': [119, 136, 153, 1],\r\n  'lightsteelblue': [176, 196, 222, 1],\r\n  'lightyellow': [255, 255, 224, 1],\r\n  'lime': [0, 255, 0, 1],\r\n  'limegreen': [50, 205, 50, 1],\r\n  'linen': [250, 240, 230, 1],\r\n  'magenta': [255, 0, 255, 1],\r\n  'maroon': [128, 0, 0, 1],\r\n  'mediumaquamarine': [102, 205, 170, 1],\r\n  'mediumblue': [0, 0, 205, 1],\r\n  'mediumorchid': [186, 85, 211, 1],\r\n  'mediumpurple': [147, 112, 219, 1],\r\n  'mediumseagreen': [60, 179, 113, 1],\r\n  'mediumslateblue': [123, 104, 238, 1],\r\n  'mediumspringgreen': [0, 250, 154, 1],\r\n  'mediumturquoise': [72, 209, 204, 1],\r\n  'mediumvioletred': [199, 21, 133, 1],\r\n  'midnightblue': [25, 25, 112, 1],\r\n  'mintcream': [245, 255, 250, 1],\r\n  'mistyrose': [255, 228, 225, 1],\r\n  'moccasin': [255, 228, 181, 1],\r\n  'navajowhite': [255, 222, 173, 1],\r\n  'navy': [0, 0, 128, 1],\r\n  'oldlace': [253, 245, 230, 1],\r\n  'olive': [128, 128, 0, 1],\r\n  'olivedrab': [107, 142, 35, 1],\r\n  'orange': [255, 165, 0, 1],\r\n  'orangered': [255, 69, 0, 1],\r\n  'orchid': [218, 112, 214, 1],\r\n  'palegoldenrod': [238, 232, 170, 1],\r\n  'palegreen': [152, 251, 152, 1],\r\n  'paleturquoise': [175, 238, 238, 1],\r\n  'palevioletred': [219, 112, 147, 1],\r\n  'papayawhip': [255, 239, 213, 1],\r\n  'peachpuff': [255, 218, 185, 1],\r\n  'peru': [205, 133, 63, 1],\r\n  'pink': [255, 192, 203, 1],\r\n  'plum': [221, 160, 221, 1],\r\n  'powderblue': [176, 224, 230, 1],\r\n  'purple': [128, 0, 128, 1],\r\n  'red': [255, 0, 0, 1],\r\n  'rosybrown': [188, 143, 143, 1],\r\n  'royalblue': [65, 105, 225, 1],\r\n  'saddlebrown': [139, 69, 19, 1],\r\n  'salmon': [250, 128, 114, 1],\r\n  'sandybrown': [244, 164, 96, 1],\r\n  'seagreen': [46, 139, 87, 1],\r\n  'seashell': [255, 245, 238, 1],\r\n  'sienna': [160, 82, 45, 1],\r\n  'silver': [192, 192, 192, 1],\r\n  'skyblue': [135, 206, 235, 1],\r\n  'slateblue': [106, 90, 205, 1],\r\n  'slategray': [112, 128, 144, 1],\r\n  'slategrey': [112, 128, 144, 1],\r\n  'snow': [255, 250, 250, 1],\r\n  'springgreen': [0, 255, 127, 1],\r\n  'steelblue': [70, 130, 180, 1],\r\n  'tan': [210, 180, 140, 1],\r\n  'teal': [0, 128, 128, 1],\r\n  'thistle': [216, 191, 216, 1],\r\n  'tomato': [255, 99, 71, 1],\r\n  'turquoise': [64, 224, 208, 1],\r\n  'violet': [238, 130, 238, 1],\r\n  'wheat': [245, 222, 179, 1],\r\n  'white': [255, 255, 255, 1],\r\n  'whitesmoke': [245, 245, 245, 1],\r\n  'yellow': [255, 255, 0, 1],\r\n  'yellowgreen': [154, 205, 50, 1]\r\n};\r\n\r\nfunction clampCssByte(i) {\r\n  // Clamp to integer 0 .. 255.\r\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\r\n\r\n  return i < 0 ? 0 : i > 255 ? 255 : i;\r\n}\r\n\r\nfunction clampCssAngle(i) {\r\n  // Clamp to integer 0 .. 360.\r\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\r\n\r\n  return i < 0 ? 0 : i > 360 ? 360 : i;\r\n}\r\n\r\nfunction clampCssFloat(f) {\r\n  // Clamp to float 0.0 .. 1.0.\r\n  return f < 0 ? 0 : f > 1 ? 1 : f;\r\n}\r\n\r\nfunction parseCssInt(str) {\r\n  // int or percentage.\r\n  if (str.length && str.charAt(str.length - 1) === '%') {\r\n    return clampCssByte(parseFloat(str) / 100 * 255);\r\n  }\r\n\r\n  return clampCssByte(parseInt(str, 10));\r\n}\r\n\r\nfunction parseCssFloat(str) {\r\n  // float or percentage.\r\n  if (str.length && str.charAt(str.length - 1) === '%') {\r\n    return clampCssFloat(parseFloat(str) / 100);\r\n  }\r\n\r\n  return clampCssFloat(parseFloat(str));\r\n}\r\n\r\nfunction cssHueToRgb(m1, m2, h) {\r\n  if (h < 0) {\r\n    h += 1;\r\n  } else if (h > 1) {\r\n    h -= 1;\r\n  }\r\n\r\n  if (h * 6 < 1) {\r\n    return m1 + (m2 - m1) * h * 6;\r\n  }\r\n\r\n  if (h * 2 < 1) {\r\n    return m2;\r\n  }\r\n\r\n  if (h * 3 < 2) {\r\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\r\n  }\r\n\r\n  return m1;\r\n}\r\n\r\nfunction lerpNumber(a, b, p) {\r\n  return a + (b - a) * p;\r\n}\r\n\r\nfunction setRgba(out, r, g, b, a) {\r\n  out[0] = r;\r\n  out[1] = g;\r\n  out[2] = b;\r\n  out[3] = a;\r\n  return out;\r\n}\r\n\r\nfunction copyRgba(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\nvar colorCache = new LRU(20);\r\nvar lastRemovedArr = null;\r\n\r\nfunction putToCache(colorStr, rgbaArr) {\r\n  // Reuse removed array\r\n  if (lastRemovedArr) {\r\n    copyRgba(lastRemovedArr, rgbaArr);\r\n  }\r\n\r\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\r\n}\r\n/**\r\n * @param {string} colorStr\r\n * @param {Array.<number>} out\r\n * @return {Array.<number>}\r\n * @memberOf module:zrender/util/color\r\n */\r\n\r\n\r\nfunction parse(colorStr, rgbaArr) {\r\n  if (!colorStr) {\r\n    return;\r\n  }\r\n\r\n  rgbaArr = rgbaArr || [];\r\n  var cached = colorCache.get(colorStr);\r\n\r\n  if (cached) {\r\n    return copyRgba(rgbaArr, cached);\r\n  } // colorStr may be not string\r\n\r\n\r\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\r\n\r\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\r\n\r\n  if (str in kCSSColorTable) {\r\n    copyRgba(rgbaArr, kCSSColorTable[str]);\r\n    putToCache(colorStr, rgbaArr);\r\n    return rgbaArr;\r\n  } // #abc and #abc123 syntax.\r\n\r\n\r\n  if (str.charAt(0) === '#') {\r\n    if (str.length === 4) {\r\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\r\n\r\n      if (!(iv >= 0 && iv <= 0xfff)) {\r\n        setRgba(rgbaArr, 0, 0, 0, 1);\r\n        return; // Covers NaN.\r\n      }\r\n\r\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\r\n      putToCache(colorStr, rgbaArr);\r\n      return rgbaArr;\r\n    } else if (str.length === 7) {\r\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\r\n\r\n      if (!(iv >= 0 && iv <= 0xffffff)) {\r\n        setRgba(rgbaArr, 0, 0, 0, 1);\r\n        return; // Covers NaN.\r\n      }\r\n\r\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\r\n      putToCache(colorStr, rgbaArr);\r\n      return rgbaArr;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  var op = str.indexOf('(');\r\n  var ep = str.indexOf(')');\r\n\r\n  if (op !== -1 && ep + 1 === str.length) {\r\n    var fname = str.substr(0, op);\r\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\r\n    var alpha = 1; // To allow case fallthrough.\r\n\r\n    switch (fname) {\r\n      case 'rgba':\r\n        if (params.length !== 4) {\r\n          setRgba(rgbaArr, 0, 0, 0, 1);\r\n          return;\r\n        }\r\n\r\n        alpha = parseCssFloat(params.pop());\r\n      // jshint ignore:line\r\n      // Fall through.\r\n\r\n      case 'rgb':\r\n        if (params.length !== 3) {\r\n          setRgba(rgbaArr, 0, 0, 0, 1);\r\n          return;\r\n        }\r\n\r\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\r\n        putToCache(colorStr, rgbaArr);\r\n        return rgbaArr;\r\n\r\n      case 'hsla':\r\n        if (params.length !== 4) {\r\n          setRgba(rgbaArr, 0, 0, 0, 1);\r\n          return;\r\n        }\r\n\r\n        params[3] = parseCssFloat(params[3]);\r\n        hsla2rgba(params, rgbaArr);\r\n        putToCache(colorStr, rgbaArr);\r\n        return rgbaArr;\r\n\r\n      case 'hsl':\r\n        if (params.length !== 3) {\r\n          setRgba(rgbaArr, 0, 0, 0, 1);\r\n          return;\r\n        }\r\n\r\n        hsla2rgba(params, rgbaArr);\r\n        putToCache(colorStr, rgbaArr);\r\n        return rgbaArr;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  setRgba(rgbaArr, 0, 0, 0, 1);\r\n  return;\r\n}\r\n/**\r\n * @param {Array.<number>} hsla\r\n * @param {Array.<number>} rgba\r\n * @return {Array.<number>} rgba\r\n */\r\n\r\n\r\nfunction hsla2rgba(hsla, rgba) {\r\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\r\n  // NOTE(deanm): According to the CSS spec s/l should only be\r\n  // percentages, but we don't bother and let float or percentage.\r\n\r\n  var s = parseCssFloat(hsla[1]);\r\n  var l = parseCssFloat(hsla[2]);\r\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n  var m1 = l * 2 - m2;\r\n  rgba = rgba || [];\r\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\r\n\r\n  if (hsla.length === 4) {\r\n    rgba[3] = hsla[3];\r\n  }\r\n\r\n  return rgba;\r\n}\r\n/**\r\n * @param {Array.<number>} rgba\r\n * @return {Array.<number>} hsla\r\n */\r\n\r\n\r\nfunction rgba2hsla(rgba) {\r\n  if (!rgba) {\r\n    return;\r\n  } // RGB from 0 to 255\r\n\r\n\r\n  var R = rgba[0] / 255;\r\n  var G = rgba[1] / 255;\r\n  var B = rgba[2] / 255;\r\n  var vMin = Math.min(R, G, B); // Min. value of RGB\r\n\r\n  var vMax = Math.max(R, G, B); // Max. value of RGB\r\n\r\n  var delta = vMax - vMin; // Delta RGB value\r\n\r\n  var L = (vMax + vMin) / 2;\r\n  var H;\r\n  var S; // HSL results from 0 to 1\r\n\r\n  if (delta === 0) {\r\n    H = 0;\r\n    S = 0;\r\n  } else {\r\n    if (L < 0.5) {\r\n      S = delta / (vMax + vMin);\r\n    } else {\r\n      S = delta / (2 - vMax - vMin);\r\n    }\r\n\r\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\r\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\r\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\r\n\r\n    if (R === vMax) {\r\n      H = deltaB - deltaG;\r\n    } else if (G === vMax) {\r\n      H = 1 / 3 + deltaR - deltaB;\r\n    } else if (B === vMax) {\r\n      H = 2 / 3 + deltaG - deltaR;\r\n    }\r\n\r\n    if (H < 0) {\r\n      H += 1;\r\n    }\r\n\r\n    if (H > 1) {\r\n      H -= 1;\r\n    }\r\n  }\r\n\r\n  var hsla = [H * 360, S, L];\r\n\r\n  if (rgba[3] != null) {\r\n    hsla.push(rgba[3]);\r\n  }\r\n\r\n  return hsla;\r\n}\r\n/**\r\n * @param {string} color\r\n * @param {number} level\r\n * @return {string}\r\n * @memberOf module:zrender/util/color\r\n */\r\n\r\n\r\nfunction lift(color, level) {\r\n  var colorArr = parse(color);\r\n\r\n  if (colorArr) {\r\n    for (var i = 0; i < 3; i++) {\r\n      if (level < 0) {\r\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\r\n      } else {\r\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\r\n      }\r\n\r\n      if (colorArr[i] > 255) {\r\n        colorArr[i] = 255;\r\n      } else if (color[i] < 0) {\r\n        colorArr[i] = 0;\r\n      }\r\n    }\r\n\r\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\r\n  }\r\n}\r\n/**\r\n * @param {string} color\r\n * @return {string}\r\n * @memberOf module:zrender/util/color\r\n */\r\n\r\n\r\nfunction toHex(color) {\r\n  var colorArr = parse(color);\r\n\r\n  if (colorArr) {\r\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\r\n  }\r\n}\r\n/**\r\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\r\n * @param {number} normalizedValue A float between 0 and 1.\r\n * @param {Array.<Array.<number>>} colors List of rgba color array\r\n * @param {Array.<number>} [out] Mapped gba color array\r\n * @return {Array.<number>} will be null/undefined if input illegal.\r\n */\r\n\r\n\r\nfunction fastLerp(normalizedValue, colors, out) {\r\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\r\n    return;\r\n  }\r\n\r\n  out = out || [];\r\n  var value = normalizedValue * (colors.length - 1);\r\n  var leftIndex = Math.floor(value);\r\n  var rightIndex = Math.ceil(value);\r\n  var leftColor = colors[leftIndex];\r\n  var rightColor = colors[rightIndex];\r\n  var dv = value - leftIndex;\r\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\r\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\r\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\r\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\r\n  return out;\r\n}\r\n/**\r\n * @deprecated\r\n */\r\n\r\n\r\nvar fastMapToColor = fastLerp;\r\n/**\r\n * @param {number} normalizedValue A float between 0 and 1.\r\n * @param {Array.<string>} colors Color list.\r\n * @param {boolean=} fullOutput Default false.\r\n * @return {(string|Object)} Result color. If fullOutput,\r\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\r\n * @memberOf module:zrender/util/color\r\n */\r\n\r\nfunction lerp(normalizedValue, colors, fullOutput) {\r\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\r\n    return;\r\n  }\r\n\r\n  var value = normalizedValue * (colors.length - 1);\r\n  var leftIndex = Math.floor(value);\r\n  var rightIndex = Math.ceil(value);\r\n  var leftColor = parse(colors[leftIndex]);\r\n  var rightColor = parse(colors[rightIndex]);\r\n  var dv = value - leftIndex;\r\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\r\n  return fullOutput ? {\r\n    color: color,\r\n    leftIndex: leftIndex,\r\n    rightIndex: rightIndex,\r\n    value: value\r\n  } : color;\r\n}\r\n/**\r\n * @deprecated\r\n */\r\n\r\n\r\nvar mapToColor = lerp;\r\n/**\r\n * @param {string} color\r\n * @param {number=} h 0 ~ 360, ignore when null.\r\n * @param {number=} s 0 ~ 1, ignore when null.\r\n * @param {number=} l 0 ~ 1, ignore when null.\r\n * @return {string} Color string in rgba format.\r\n * @memberOf module:zrender/util/color\r\n */\r\n\r\nfunction modifyHSL(color, h, s, l) {\r\n  color = parse(color);\r\n\r\n  if (color) {\r\n    color = rgba2hsla(color);\r\n    h != null && (color[0] = clampCssAngle(h));\r\n    s != null && (color[1] = parseCssFloat(s));\r\n    l != null && (color[2] = parseCssFloat(l));\r\n    return stringify(hsla2rgba(color), 'rgba');\r\n  }\r\n}\r\n/**\r\n * @param {string} color\r\n * @param {number=} alpha 0 ~ 1\r\n * @return {string} Color string in rgba format.\r\n * @memberOf module:zrender/util/color\r\n */\r\n\r\n\r\nfunction modifyAlpha(color, alpha) {\r\n  color = parse(color);\r\n\r\n  if (color && alpha != null) {\r\n    color[3] = clampCssFloat(alpha);\r\n    return stringify(color, 'rgba');\r\n  }\r\n}\r\n/**\r\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\r\n * @param {string} type 'rgba', 'hsva', ...\r\n * @return {string} Result color. (If input illegal, return undefined).\r\n */\r\n\r\n\r\nfunction stringify(arrColor, type) {\r\n  if (!arrColor || !arrColor.length) {\r\n    return;\r\n  }\r\n\r\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\r\n\r\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\r\n    colorStr += ',' + arrColor[3];\r\n  }\r\n\r\n  return type + '(' + colorStr + ')';\r\n}\r\n\r\nexports.parse = parse;\r\nexports.lift = lift;\r\nexports.toHex = toHex;\r\nexports.fastLerp = fastLerp;\r\nexports.fastMapToColor = fastMapToColor;\r\nexports.lerp = lerp;\r\nexports.mapToColor = mapToColor;\r\nexports.modifyHSL = modifyHSL;\r\nexports.modifyAlpha = modifyAlpha;\r\nexports.stringify = stringify;","var Group = require(\"../container/Group\");\r\n\r\nvar ZImage = require(\"../graphic/Image\");\r\n\r\nvar Text = require(\"../graphic/Text\");\r\n\r\nvar Circle = require(\"../graphic/shape/Circle\");\r\n\r\nvar Rect = require(\"../graphic/shape/Rect\");\r\n\r\nvar Ellipse = require(\"../graphic/shape/Ellipse\");\r\n\r\nvar Line = require(\"../graphic/shape/Line\");\r\n\r\nvar Path = require(\"../graphic/Path\");\r\n\r\nvar Polygon = require(\"../graphic/shape/Polygon\");\r\n\r\nvar Polyline = require(\"../graphic/shape/Polyline\");\r\n\r\nvar LinearGradient = require(\"../graphic/LinearGradient\");\r\n\r\nvar Style = require(\"../graphic/Style\");\r\n\r\nvar matrix = require(\"../core/matrix\");\r\n\r\nvar _path = require(\"./path\");\r\n\r\nvar createFromString = _path.createFromString;\r\n\r\nvar _util = require(\"../core/util\");\r\n\r\nvar isString = _util.isString;\r\nvar extend = _util.extend;\r\nvar defaults = _util.defaults;\r\nvar trim = _util.trim;\r\nvar each = _util.each;\r\n// import RadialGradient from '../graphic/RadialGradient';\r\n// import Pattern from '../graphic/Pattern';\r\n// import * as vector from '../core/vector';\r\n// Most of the values can be separated by comma and/or white space.\r\nvar DILIMITER_REG = /[\\s,]+/;\r\n/**\r\n * For big svg string, this method might be time consuming.\r\n *\r\n * @param {string} svg xml string\r\n * @return {Object} xml root.\r\n */\r\n\r\nfunction parseXML(svg) {\r\n  if (isString(svg)) {\r\n    var parser = new DOMParser();\r\n    svg = parser.parseFromString(svg, 'text/xml');\r\n  } // Document node. If using $.get, doc node may be input.\r\n\r\n\r\n  if (svg.nodeType === 9) {\r\n    svg = svg.firstChild;\r\n  } // nodeName of <!DOCTYPE svg> is also 'svg'.\r\n\r\n\r\n  while (svg.nodeName.toLowerCase() !== 'svg' || svg.nodeType !== 1) {\r\n    svg = svg.nextSibling;\r\n  }\r\n\r\n  return svg;\r\n}\r\n\r\nfunction SVGParser() {\r\n  this._defs = {};\r\n  this._root = null;\r\n  this._isDefine = false;\r\n  this._isText = false;\r\n}\r\n\r\nSVGParser.prototype.parse = function (xml, opt) {\r\n  opt = opt || {};\r\n  var svg = parseXML(xml);\r\n\r\n  if (!svg) {\r\n    throw new Error('Illegal svg');\r\n  }\r\n\r\n  var root = new Group();\r\n  this._root = root; // parse view port\r\n\r\n  var viewBox = svg.getAttribute('viewBox') || ''; // If width/height not specified, means \"100%\" of `opt.width/height`.\r\n  // TODO: Other percent value not supported yet.\r\n\r\n  var width = parseFloat(svg.getAttribute('width') || opt.width);\r\n  var height = parseFloat(svg.getAttribute('height') || opt.height); // If width/height not specified, set as null for output.\r\n\r\n  isNaN(width) && (width = null);\r\n  isNaN(height) && (height = null); // Apply inline style on svg element.\r\n\r\n  parseAttributes(svg, root, null, true);\r\n  var child = svg.firstChild;\r\n\r\n  while (child) {\r\n    this._parseNode(child, root);\r\n\r\n    child = child.nextSibling;\r\n  }\r\n\r\n  var viewBoxRect;\r\n  var viewBoxTransform;\r\n\r\n  if (viewBox) {\r\n    var viewBoxArr = trim(viewBox).split(DILIMITER_REG); // Some invalid case like viewBox: 'none'.\r\n\r\n    if (viewBoxArr.length >= 4) {\r\n      viewBoxRect = {\r\n        x: parseFloat(viewBoxArr[0] || 0),\r\n        y: parseFloat(viewBoxArr[1] || 0),\r\n        width: parseFloat(viewBoxArr[2]),\r\n        height: parseFloat(viewBoxArr[3])\r\n      };\r\n    }\r\n  }\r\n\r\n  if (viewBoxRect && width != null && height != null) {\r\n    viewBoxTransform = makeViewBoxTransform(viewBoxRect, width, height);\r\n\r\n    if (!opt.ignoreViewBox) {\r\n      // If set transform on the output group, it probably bring trouble when\r\n      // some users only intend to show the clipped content inside the viewBox,\r\n      // but not intend to transform the output group. So we keep the output\r\n      // group no transform. If the user intend to use the viewBox as a\r\n      // camera, just set `opt.ignoreViewBox` as `true` and set transfrom\r\n      // manually according to the viewBox info in the output of this method.\r\n      var elRoot = root;\r\n      root = new Group();\r\n      root.add(elRoot);\r\n      elRoot.scale = viewBoxTransform.scale.slice();\r\n      elRoot.position = viewBoxTransform.position.slice();\r\n    }\r\n  } // Some shapes might be overflow the viewport, which should be\r\n  // clipped despite whether the viewBox is used, as the SVG does.\r\n\r\n\r\n  if (!opt.ignoreRootClip && width != null && height != null) {\r\n    root.setClipPath(new Rect({\r\n      shape: {\r\n        x: 0,\r\n        y: 0,\r\n        width: width,\r\n        height: height\r\n      }\r\n    }));\r\n  } // Set width/height on group just for output the viewport size.\r\n\r\n\r\n  return {\r\n    root: root,\r\n    width: width,\r\n    height: height,\r\n    viewBoxRect: viewBoxRect,\r\n    viewBoxTransform: viewBoxTransform\r\n  };\r\n};\r\n\r\nSVGParser.prototype._parseNode = function (xmlNode, parentGroup) {\r\n  var nodeName = xmlNode.nodeName.toLowerCase(); // TODO\r\n  // support <style>...</style> in svg, where nodeName is 'style',\r\n  // CSS classes is defined globally wherever the style tags are declared.\r\n\r\n  if (nodeName === 'defs') {\r\n    // define flag\r\n    this._isDefine = true;\r\n  } else if (nodeName === 'text') {\r\n    this._isText = true;\r\n  }\r\n\r\n  var el;\r\n\r\n  if (this._isDefine) {\r\n    var parser = defineParsers[nodeName];\r\n\r\n    if (parser) {\r\n      var def = parser.call(this, xmlNode);\r\n      var id = xmlNode.getAttribute('id');\r\n\r\n      if (id) {\r\n        this._defs[id] = def;\r\n      }\r\n    }\r\n  } else {\r\n    var parser = nodeParsers[nodeName];\r\n\r\n    if (parser) {\r\n      el = parser.call(this, xmlNode, parentGroup);\r\n      parentGroup.add(el);\r\n    }\r\n  }\r\n\r\n  var child = xmlNode.firstChild;\r\n\r\n  while (child) {\r\n    if (child.nodeType === 1) {\r\n      this._parseNode(child, el);\r\n    } // Is text\r\n\r\n\r\n    if (child.nodeType === 3 && this._isText) {\r\n      this._parseText(child, el);\r\n    }\r\n\r\n    child = child.nextSibling;\r\n  } // Quit define\r\n\r\n\r\n  if (nodeName === 'defs') {\r\n    this._isDefine = false;\r\n  } else if (nodeName === 'text') {\r\n    this._isText = false;\r\n  }\r\n};\r\n\r\nSVGParser.prototype._parseText = function (xmlNode, parentGroup) {\r\n  if (xmlNode.nodeType === 1) {\r\n    var dx = xmlNode.getAttribute('dx') || 0;\r\n    var dy = xmlNode.getAttribute('dy') || 0;\r\n    this._textX += parseFloat(dx);\r\n    this._textY += parseFloat(dy);\r\n  }\r\n\r\n  var text = new Text({\r\n    style: {\r\n      text: xmlNode.textContent,\r\n      transformText: true\r\n    },\r\n    position: [this._textX || 0, this._textY || 0]\r\n  });\r\n  inheritStyle(parentGroup, text);\r\n  parseAttributes(xmlNode, text, this._defs);\r\n  var fontSize = text.style.fontSize;\r\n\r\n  if (fontSize && fontSize < 9) {\r\n    // PENDING\r\n    text.style.fontSize = 9;\r\n    text.scale = text.scale || [1, 1];\r\n    text.scale[0] *= fontSize / 9;\r\n    text.scale[1] *= fontSize / 9;\r\n  }\r\n\r\n  var rect = text.getBoundingRect();\r\n  this._textX += rect.width;\r\n  parentGroup.add(text);\r\n  return text;\r\n};\r\n\r\nvar nodeParsers = {\r\n  'g': function (xmlNode, parentGroup) {\r\n    var g = new Group();\r\n    inheritStyle(parentGroup, g);\r\n    parseAttributes(xmlNode, g, this._defs);\r\n    return g;\r\n  },\r\n  'rect': function (xmlNode, parentGroup) {\r\n    var rect = new Rect();\r\n    inheritStyle(parentGroup, rect);\r\n    parseAttributes(xmlNode, rect, this._defs);\r\n    rect.setShape({\r\n      x: parseFloat(xmlNode.getAttribute('x') || 0),\r\n      y: parseFloat(xmlNode.getAttribute('y') || 0),\r\n      width: parseFloat(xmlNode.getAttribute('width') || 0),\r\n      height: parseFloat(xmlNode.getAttribute('height') || 0)\r\n    }); // console.log(xmlNode.getAttribute('transform'));\r\n    // console.log(rect.transform);\r\n\r\n    return rect;\r\n  },\r\n  'circle': function (xmlNode, parentGroup) {\r\n    var circle = new Circle();\r\n    inheritStyle(parentGroup, circle);\r\n    parseAttributes(xmlNode, circle, this._defs);\r\n    circle.setShape({\r\n      cx: parseFloat(xmlNode.getAttribute('cx') || 0),\r\n      cy: parseFloat(xmlNode.getAttribute('cy') || 0),\r\n      r: parseFloat(xmlNode.getAttribute('r') || 0)\r\n    });\r\n    return circle;\r\n  },\r\n  'line': function (xmlNode, parentGroup) {\r\n    var line = new Line();\r\n    inheritStyle(parentGroup, line);\r\n    parseAttributes(xmlNode, line, this._defs);\r\n    line.setShape({\r\n      x1: parseFloat(xmlNode.getAttribute('x1') || 0),\r\n      y1: parseFloat(xmlNode.getAttribute('y1') || 0),\r\n      x2: parseFloat(xmlNode.getAttribute('x2') || 0),\r\n      y2: parseFloat(xmlNode.getAttribute('y2') || 0)\r\n    });\r\n    return line;\r\n  },\r\n  'ellipse': function (xmlNode, parentGroup) {\r\n    var ellipse = new Ellipse();\r\n    inheritStyle(parentGroup, ellipse);\r\n    parseAttributes(xmlNode, ellipse, this._defs);\r\n    ellipse.setShape({\r\n      cx: parseFloat(xmlNode.getAttribute('cx') || 0),\r\n      cy: parseFloat(xmlNode.getAttribute('cy') || 0),\r\n      rx: parseFloat(xmlNode.getAttribute('rx') || 0),\r\n      ry: parseFloat(xmlNode.getAttribute('ry') || 0)\r\n    });\r\n    return ellipse;\r\n  },\r\n  'polygon': function (xmlNode, parentGroup) {\r\n    var points = xmlNode.getAttribute('points');\r\n\r\n    if (points) {\r\n      points = parsePoints(points);\r\n    }\r\n\r\n    var polygon = new Polygon({\r\n      shape: {\r\n        points: points || []\r\n      }\r\n    });\r\n    inheritStyle(parentGroup, polygon);\r\n    parseAttributes(xmlNode, polygon, this._defs);\r\n    return polygon;\r\n  },\r\n  'polyline': function (xmlNode, parentGroup) {\r\n    var path = new Path();\r\n    inheritStyle(parentGroup, path);\r\n    parseAttributes(xmlNode, path, this._defs);\r\n    var points = xmlNode.getAttribute('points');\r\n\r\n    if (points) {\r\n      points = parsePoints(points);\r\n    }\r\n\r\n    var polyline = new Polyline({\r\n      shape: {\r\n        points: points || []\r\n      }\r\n    });\r\n    return polyline;\r\n  },\r\n  'image': function (xmlNode, parentGroup) {\r\n    var img = new ZImage();\r\n    inheritStyle(parentGroup, img);\r\n    parseAttributes(xmlNode, img, this._defs);\r\n    img.setStyle({\r\n      image: xmlNode.getAttribute('xlink:href'),\r\n      x: xmlNode.getAttribute('x'),\r\n      y: xmlNode.getAttribute('y'),\r\n      width: xmlNode.getAttribute('width'),\r\n      height: xmlNode.getAttribute('height')\r\n    });\r\n    return img;\r\n  },\r\n  'text': function (xmlNode, parentGroup) {\r\n    var x = xmlNode.getAttribute('x') || 0;\r\n    var y = xmlNode.getAttribute('y') || 0;\r\n    var dx = xmlNode.getAttribute('dx') || 0;\r\n    var dy = xmlNode.getAttribute('dy') || 0;\r\n    this._textX = parseFloat(x) + parseFloat(dx);\r\n    this._textY = parseFloat(y) + parseFloat(dy);\r\n    var g = new Group();\r\n    inheritStyle(parentGroup, g);\r\n    parseAttributes(xmlNode, g, this._defs);\r\n    return g;\r\n  },\r\n  'tspan': function (xmlNode, parentGroup) {\r\n    var x = xmlNode.getAttribute('x');\r\n    var y = xmlNode.getAttribute('y');\r\n\r\n    if (x != null) {\r\n      // new offset x\r\n      this._textX = parseFloat(x);\r\n    }\r\n\r\n    if (y != null) {\r\n      // new offset y\r\n      this._textY = parseFloat(y);\r\n    }\r\n\r\n    var dx = xmlNode.getAttribute('dx') || 0;\r\n    var dy = xmlNode.getAttribute('dy') || 0;\r\n    var g = new Group();\r\n    inheritStyle(parentGroup, g);\r\n    parseAttributes(xmlNode, g, this._defs);\r\n    this._textX += dx;\r\n    this._textY += dy;\r\n    return g;\r\n  },\r\n  'path': function (xmlNode, parentGroup) {\r\n    // TODO svg fill rule\r\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule\r\n    // path.style.globalCompositeOperation = 'xor';\r\n    var d = xmlNode.getAttribute('d') || ''; // Performance sensitive.\r\n\r\n    var path = createFromString(d);\r\n    inheritStyle(parentGroup, path);\r\n    parseAttributes(xmlNode, path, this._defs);\r\n    return path;\r\n  }\r\n};\r\nvar defineParsers = {\r\n  'lineargradient': function (xmlNode) {\r\n    var x1 = parseInt(xmlNode.getAttribute('x1') || 0, 10);\r\n    var y1 = parseInt(xmlNode.getAttribute('y1') || 0, 10);\r\n    var x2 = parseInt(xmlNode.getAttribute('x2') || 10, 10);\r\n    var y2 = parseInt(xmlNode.getAttribute('y2') || 0, 10);\r\n    var gradient = new LinearGradient(x1, y1, x2, y2);\r\n\r\n    _parseGradientColorStops(xmlNode, gradient);\r\n\r\n    return gradient;\r\n  },\r\n  'radialgradient': function (xmlNode) {}\r\n};\r\n\r\nfunction _parseGradientColorStops(xmlNode, gradient) {\r\n  var stop = xmlNode.firstChild;\r\n\r\n  while (stop) {\r\n    if (stop.nodeType === 1) {\r\n      var offset = stop.getAttribute('offset');\r\n\r\n      if (offset.indexOf('%') > 0) {\r\n        // percentage\r\n        offset = parseInt(offset, 10) / 100;\r\n      } else if (offset) {\r\n        // number from 0 to 1\r\n        offset = parseFloat(offset);\r\n      } else {\r\n        offset = 0;\r\n      }\r\n\r\n      var stopColor = stop.getAttribute('stop-color') || '#000000';\r\n      gradient.addColorStop(offset, stopColor);\r\n    }\r\n\r\n    stop = stop.nextSibling;\r\n  }\r\n}\r\n\r\nfunction inheritStyle(parent, child) {\r\n  if (parent && parent.__inheritedStyle) {\r\n    if (!child.__inheritedStyle) {\r\n      child.__inheritedStyle = {};\r\n    }\r\n\r\n    defaults(child.__inheritedStyle, parent.__inheritedStyle);\r\n  }\r\n}\r\n\r\nfunction parsePoints(pointsString) {\r\n  var list = trim(pointsString).split(DILIMITER_REG);\r\n  var points = [];\r\n\r\n  for (var i = 0; i < list.length; i += 2) {\r\n    var x = parseFloat(list[i]);\r\n    var y = parseFloat(list[i + 1]);\r\n    points.push([x, y]);\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nvar attributesMap = {\r\n  'fill': 'fill',\r\n  'stroke': 'stroke',\r\n  'stroke-width': 'lineWidth',\r\n  'opacity': 'opacity',\r\n  'fill-opacity': 'fillOpacity',\r\n  'stroke-opacity': 'strokeOpacity',\r\n  'stroke-dasharray': 'lineDash',\r\n  'stroke-dashoffset': 'lineDashOffset',\r\n  'stroke-linecap': 'lineCap',\r\n  'stroke-linejoin': 'lineJoin',\r\n  'stroke-miterlimit': 'miterLimit',\r\n  'font-family': 'fontFamily',\r\n  'font-size': 'fontSize',\r\n  'font-style': 'fontStyle',\r\n  'font-weight': 'fontWeight',\r\n  'text-align': 'textAlign',\r\n  'alignment-baseline': 'textBaseline'\r\n};\r\n\r\nfunction parseAttributes(xmlNode, el, defs, onlyInlineStyle) {\r\n  var zrStyle = el.__inheritedStyle || {};\r\n  var isTextEl = el.type === 'text'; // TODO Shadow\r\n\r\n  if (xmlNode.nodeType === 1) {\r\n    parseTransformAttribute(xmlNode, el);\r\n    extend(zrStyle, parseStyleAttribute(xmlNode));\r\n\r\n    if (!onlyInlineStyle) {\r\n      for (var svgAttrName in attributesMap) {\r\n        if (attributesMap.hasOwnProperty(svgAttrName)) {\r\n          var attrValue = xmlNode.getAttribute(svgAttrName);\r\n\r\n          if (attrValue != null) {\r\n            zrStyle[attributesMap[svgAttrName]] = attrValue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var elFillProp = isTextEl ? 'textFill' : 'fill';\r\n  var elStrokeProp = isTextEl ? 'textStroke' : 'stroke';\r\n  el.style = el.style || new Style();\r\n  var elStyle = el.style;\r\n  zrStyle.fill != null && elStyle.set(elFillProp, getPaint(zrStyle.fill, defs));\r\n  zrStyle.stroke != null && elStyle.set(elStrokeProp, getPaint(zrStyle.stroke, defs));\r\n  each(['lineWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'miterLimit', 'fontSize'], function (propName) {\r\n    var elPropName = propName === 'lineWidth' && isTextEl ? 'textStrokeWidth' : propName;\r\n    zrStyle[propName] != null && elStyle.set(elPropName, parseFloat(zrStyle[propName]));\r\n  });\r\n\r\n  if (!zrStyle.textBaseline || zrStyle.textBaseline === 'auto') {\r\n    zrStyle.textBaseline = 'alphabetic';\r\n  }\r\n\r\n  if (zrStyle.textBaseline === 'alphabetic') {\r\n    zrStyle.textBaseline = 'bottom';\r\n  }\r\n\r\n  if (zrStyle.textAlign === 'start') {\r\n    zrStyle.textAlign = 'left';\r\n  }\r\n\r\n  if (zrStyle.textAlign === 'end') {\r\n    zrStyle.textAlign = 'right';\r\n  }\r\n\r\n  each(['lineDashOffset', 'lineCap', 'lineJoin', 'fontWeight', 'fontFamily', 'fontStyle', 'textAlign', 'textBaseline'], function (propName) {\r\n    zrStyle[propName] != null && elStyle.set(propName, zrStyle[propName]);\r\n  });\r\n\r\n  if (zrStyle.lineDash) {\r\n    el.style.lineDash = trim(zrStyle.lineDash).split(DILIMITER_REG);\r\n  }\r\n\r\n  if (elStyle[elStrokeProp] && elStyle[elStrokeProp] !== 'none') {\r\n    // enable stroke\r\n    el[elStrokeProp] = true;\r\n  }\r\n\r\n  el.__inheritedStyle = zrStyle;\r\n}\r\n\r\nvar urlRegex = /url\\(\\s*#(.*?)\\)/;\r\n\r\nfunction getPaint(str, defs) {\r\n  // if (str === 'none') {\r\n  //     return;\r\n  // }\r\n  var urlMatch = defs && str && str.match(urlRegex);\r\n\r\n  if (urlMatch) {\r\n    var url = trim(urlMatch[1]);\r\n    var def = defs[url];\r\n    return def;\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nvar transformRegex = /(translate|scale|rotate|skewX|skewY|matrix)\\(([\\-\\s0-9\\.e,]*)\\)/g;\r\n\r\nfunction parseTransformAttribute(xmlNode, node) {\r\n  var transform = xmlNode.getAttribute('transform');\r\n\r\n  if (transform) {\r\n    transform = transform.replace(/,/g, ' ');\r\n    var m = null;\r\n    var transformOps = [];\r\n    transform.replace(transformRegex, function (str, type, value) {\r\n      transformOps.push(type, value);\r\n    });\r\n\r\n    for (var i = transformOps.length - 1; i > 0; i -= 2) {\r\n      var value = transformOps[i];\r\n      var type = transformOps[i - 1];\r\n      m = m || matrix.create();\r\n\r\n      switch (type) {\r\n        case 'translate':\r\n          value = trim(value).split(DILIMITER_REG);\r\n          matrix.translate(m, m, [parseFloat(value[0]), parseFloat(value[1] || 0)]);\r\n          break;\r\n\r\n        case 'scale':\r\n          value = trim(value).split(DILIMITER_REG);\r\n          matrix.scale(m, m, [parseFloat(value[0]), parseFloat(value[1] || value[0])]);\r\n          break;\r\n\r\n        case 'rotate':\r\n          value = trim(value).split(DILIMITER_REG);\r\n          matrix.rotate(m, m, parseFloat(value[0]));\r\n          break;\r\n\r\n        case 'skew':\r\n          value = trim(value).split(DILIMITER_REG);\r\n          console.warn('Skew transform is not supported yet');\r\n          break;\r\n\r\n        case 'matrix':\r\n          var value = trim(value).split(DILIMITER_REG);\r\n          m[0] = parseFloat(value[0]);\r\n          m[1] = parseFloat(value[1]);\r\n          m[2] = parseFloat(value[2]);\r\n          m[3] = parseFloat(value[3]);\r\n          m[4] = parseFloat(value[4]);\r\n          m[5] = parseFloat(value[5]);\r\n          break;\r\n      }\r\n    }\r\n\r\n    node.setLocalTransform(m);\r\n  }\r\n} // Value may contain space.\r\n\r\n\r\nvar styleRegex = /([^\\s:;]+)\\s*:\\s*([^:;]+)/g;\r\n\r\nfunction parseStyleAttribute(xmlNode) {\r\n  var style = xmlNode.getAttribute('style');\r\n  var result = {};\r\n\r\n  if (!style) {\r\n    return result;\r\n  }\r\n\r\n  var styleList = {};\r\n  styleRegex.lastIndex = 0;\r\n  var styleRegResult;\r\n\r\n  while ((styleRegResult = styleRegex.exec(style)) != null) {\r\n    styleList[styleRegResult[1]] = styleRegResult[2];\r\n  }\r\n\r\n  for (var svgAttrName in attributesMap) {\r\n    if (attributesMap.hasOwnProperty(svgAttrName) && styleList[svgAttrName] != null) {\r\n      result[attributesMap[svgAttrName]] = styleList[svgAttrName];\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n/**\r\n * @param {Array.<number>} viewBoxRect\r\n * @param {number} width\r\n * @param {number} height\r\n * @return {Object} {scale, position}\r\n */\r\n\r\n\r\nfunction makeViewBoxTransform(viewBoxRect, width, height) {\r\n  var scaleX = width / viewBoxRect.width;\r\n  var scaleY = height / viewBoxRect.height;\r\n  var scale = Math.min(scaleX, scaleY); // preserveAspectRatio 'xMidYMid'\r\n\r\n  var viewBoxScale = [scale, scale];\r\n  var viewBoxPosition = [-(viewBoxRect.x + viewBoxRect.width / 2) * scale + width / 2, -(viewBoxRect.y + viewBoxRect.height / 2) * scale + height / 2];\r\n  return {\r\n    scale: viewBoxScale,\r\n    position: viewBoxPosition\r\n  };\r\n}\r\n/**\r\n * @param {string|XMLElement} xml\r\n * @param {Object} [opt]\r\n * @param {number} [opt.width] Default width if svg width not specified or is a percent value.\r\n * @param {number} [opt.height] Default height if svg height not specified or is a percent value.\r\n * @param {boolean} [opt.ignoreViewBox]\r\n * @param {boolean} [opt.ignoreRootClip]\r\n * @return {Object} result:\r\n * {\r\n *     root: Group, The root of the the result tree of zrender shapes,\r\n *     width: number, the viewport width of the SVG,\r\n *     height: number, the viewport height of the SVG,\r\n *     viewBoxRect: {x, y, width, height}, the declared viewBox rect of the SVG, if exists,\r\n *     viewBoxTransform: the {scale, position} calculated by viewBox and viewport, is exists.\r\n * }\r\n */\r\n\r\n\r\nfunction parseSVG(xml, opt) {\r\n  var parser = new SVGParser();\r\n  return parser.parse(xml, opt);\r\n}\r\n\r\nexports.parseXML = parseXML;\r\nexports.makeViewBoxTransform = makeViewBoxTransform;\r\nexports.parseSVG = parseSVG;","var Path = require(\"../graphic/Path\");\r\n\r\nvar PathProxy = require(\"../core/PathProxy\");\r\n\r\nvar transformPath = require(\"./transformPath\");\r\n\r\n// command chars\r\n// var cc = [\r\n//     'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\r\n//     'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\r\n// ];\r\nvar mathSqrt = Math.sqrt;\r\nvar mathSin = Math.sin;\r\nvar mathCos = Math.cos;\r\nvar PI = Math.PI;\r\n\r\nvar vMag = function (v) {\r\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n};\r\n\r\nvar vRatio = function (u, v) {\r\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\r\n};\r\n\r\nvar vAngle = function (u, v) {\r\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\r\n};\r\n\r\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\r\n  var psi = psiDeg * (PI / 180.0);\r\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\r\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\r\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\r\n\r\n  if (lambda > 1) {\r\n    rx *= mathSqrt(lambda);\r\n    ry *= mathSqrt(lambda);\r\n  }\r\n\r\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\r\n  var cxp = f * rx * yp / ry;\r\n  var cyp = f * -ry * xp / rx;\r\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\r\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\r\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\r\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\r\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\r\n  var dTheta = vAngle(u, v);\r\n\r\n  if (vRatio(u, v) <= -1) {\r\n    dTheta = PI;\r\n  }\r\n\r\n  if (vRatio(u, v) >= 1) {\r\n    dTheta = 0;\r\n  }\r\n\r\n  if (fs === 0 && dTheta > 0) {\r\n    dTheta = dTheta - 2 * PI;\r\n  }\r\n\r\n  if (fs === 1 && dTheta < 0) {\r\n    dTheta = dTheta + 2 * PI;\r\n  }\r\n\r\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\r\n}\r\n\r\nvar commandReg = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig; // Consider case:\r\n// (1) delimiter can be comma or space, where continuous commas\r\n// or spaces should be seen as one comma.\r\n// (2) value can be like:\r\n// '2e-4', 'l.5.9' (ignore 0), 'M-10-10', 'l-2.43e-1,34.9983',\r\n// 'l-.5E1,54', '121-23-44-11' (no delimiter)\r\n\r\nvar numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g; // var valueSplitReg = /[\\s,]+/;\r\n\r\nfunction createPathProxyFromString(data) {\r\n  if (!data) {\r\n    return new PathProxy();\r\n  } // var data = data.replace(/-/g, ' -')\r\n  //     .replace(/  /g, ' ')\r\n  //     .replace(/ /g, ',')\r\n  //     .replace(/,,/g, ',');\r\n  // var n;\r\n  // create pipes so that we can split the data\r\n  // for (n = 0; n < cc.length; n++) {\r\n  //     cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\r\n  // }\r\n  // data = data.replace(/-/g, ',-');\r\n  // create array\r\n  // var arr = cs.split('|');\r\n  // init context point\r\n\r\n\r\n  var cpx = 0;\r\n  var cpy = 0;\r\n  var subpathX = cpx;\r\n  var subpathY = cpy;\r\n  var prevCmd;\r\n  var path = new PathProxy();\r\n  var CMD = PathProxy.CMD; // commandReg.lastIndex = 0;\r\n  // var cmdResult;\r\n  // while ((cmdResult = commandReg.exec(data)) != null) {\r\n  //     var cmdStr = cmdResult[1];\r\n  //     var cmdContent = cmdResult[2];\r\n\r\n  var cmdList = data.match(commandReg);\r\n\r\n  for (var l = 0; l < cmdList.length; l++) {\r\n    var cmdText = cmdList[l];\r\n    var cmdStr = cmdText.charAt(0);\r\n    var cmd; // String#split is faster a little bit than String#replace or RegExp#exec.\r\n    // var p = cmdContent.split(valueSplitReg);\r\n    // var pLen = 0;\r\n    // for (var i = 0; i < p.length; i++) {\r\n    //     // '' and other invalid str => NaN\r\n    //     var val = parseFloat(p[i]);\r\n    //     !isNaN(val) && (p[pLen++] = val);\r\n    // }\r\n\r\n    var p = cmdText.match(numberReg) || [];\r\n    var pLen = p.length;\r\n\r\n    for (var i = 0; i < pLen; i++) {\r\n      p[i] = parseFloat(p[i]);\r\n    }\r\n\r\n    var off = 0;\r\n\r\n    while (off < pLen) {\r\n      var ctlPtx;\r\n      var ctlPty;\r\n      var rx;\r\n      var ry;\r\n      var psi;\r\n      var fa;\r\n      var fs;\r\n      var x1 = cpx;\r\n      var y1 = cpy; // convert l, H, h, V, and v to L\r\n\r\n      switch (cmdStr) {\r\n        case 'l':\r\n          cpx += p[off++];\r\n          cpy += p[off++];\r\n          cmd = CMD.L;\r\n          path.addData(cmd, cpx, cpy);\r\n          break;\r\n\r\n        case 'L':\r\n          cpx = p[off++];\r\n          cpy = p[off++];\r\n          cmd = CMD.L;\r\n          path.addData(cmd, cpx, cpy);\r\n          break;\r\n\r\n        case 'm':\r\n          cpx += p[off++];\r\n          cpy += p[off++];\r\n          cmd = CMD.M;\r\n          path.addData(cmd, cpx, cpy);\r\n          subpathX = cpx;\r\n          subpathY = cpy;\r\n          cmdStr = 'l';\r\n          break;\r\n\r\n        case 'M':\r\n          cpx = p[off++];\r\n          cpy = p[off++];\r\n          cmd = CMD.M;\r\n          path.addData(cmd, cpx, cpy);\r\n          subpathX = cpx;\r\n          subpathY = cpy;\r\n          cmdStr = 'L';\r\n          break;\r\n\r\n        case 'h':\r\n          cpx += p[off++];\r\n          cmd = CMD.L;\r\n          path.addData(cmd, cpx, cpy);\r\n          break;\r\n\r\n        case 'H':\r\n          cpx = p[off++];\r\n          cmd = CMD.L;\r\n          path.addData(cmd, cpx, cpy);\r\n          break;\r\n\r\n        case 'v':\r\n          cpy += p[off++];\r\n          cmd = CMD.L;\r\n          path.addData(cmd, cpx, cpy);\r\n          break;\r\n\r\n        case 'V':\r\n          cpy = p[off++];\r\n          cmd = CMD.L;\r\n          path.addData(cmd, cpx, cpy);\r\n          break;\r\n\r\n        case 'C':\r\n          cmd = CMD.C;\r\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\r\n          cpx = p[off - 2];\r\n          cpy = p[off - 1];\r\n          break;\r\n\r\n        case 'c':\r\n          cmd = CMD.C;\r\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\r\n          cpx += p[off - 2];\r\n          cpy += p[off - 1];\r\n          break;\r\n\r\n        case 'S':\r\n          ctlPtx = cpx;\r\n          ctlPty = cpy;\r\n          var len = path.len();\r\n          var pathData = path.data;\r\n\r\n          if (prevCmd === CMD.C) {\r\n            ctlPtx += cpx - pathData[len - 4];\r\n            ctlPty += cpy - pathData[len - 3];\r\n          }\r\n\r\n          cmd = CMD.C;\r\n          x1 = p[off++];\r\n          y1 = p[off++];\r\n          cpx = p[off++];\r\n          cpy = p[off++];\r\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\r\n          break;\r\n\r\n        case 's':\r\n          ctlPtx = cpx;\r\n          ctlPty = cpy;\r\n          var len = path.len();\r\n          var pathData = path.data;\r\n\r\n          if (prevCmd === CMD.C) {\r\n            ctlPtx += cpx - pathData[len - 4];\r\n            ctlPty += cpy - pathData[len - 3];\r\n          }\r\n\r\n          cmd = CMD.C;\r\n          x1 = cpx + p[off++];\r\n          y1 = cpy + p[off++];\r\n          cpx += p[off++];\r\n          cpy += p[off++];\r\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\r\n          break;\r\n\r\n        case 'Q':\r\n          x1 = p[off++];\r\n          y1 = p[off++];\r\n          cpx = p[off++];\r\n          cpy = p[off++];\r\n          cmd = CMD.Q;\r\n          path.addData(cmd, x1, y1, cpx, cpy);\r\n          break;\r\n\r\n        case 'q':\r\n          x1 = p[off++] + cpx;\r\n          y1 = p[off++] + cpy;\r\n          cpx += p[off++];\r\n          cpy += p[off++];\r\n          cmd = CMD.Q;\r\n          path.addData(cmd, x1, y1, cpx, cpy);\r\n          break;\r\n\r\n        case 'T':\r\n          ctlPtx = cpx;\r\n          ctlPty = cpy;\r\n          var len = path.len();\r\n          var pathData = path.data;\r\n\r\n          if (prevCmd === CMD.Q) {\r\n            ctlPtx += cpx - pathData[len - 4];\r\n            ctlPty += cpy - pathData[len - 3];\r\n          }\r\n\r\n          cpx = p[off++];\r\n          cpy = p[off++];\r\n          cmd = CMD.Q;\r\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\r\n          break;\r\n\r\n        case 't':\r\n          ctlPtx = cpx;\r\n          ctlPty = cpy;\r\n          var len = path.len();\r\n          var pathData = path.data;\r\n\r\n          if (prevCmd === CMD.Q) {\r\n            ctlPtx += cpx - pathData[len - 4];\r\n            ctlPty += cpy - pathData[len - 3];\r\n          }\r\n\r\n          cpx += p[off++];\r\n          cpy += p[off++];\r\n          cmd = CMD.Q;\r\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\r\n          break;\r\n\r\n        case 'A':\r\n          rx = p[off++];\r\n          ry = p[off++];\r\n          psi = p[off++];\r\n          fa = p[off++];\r\n          fs = p[off++];\r\n          x1 = cpx, y1 = cpy;\r\n          cpx = p[off++];\r\n          cpy = p[off++];\r\n          cmd = CMD.A;\r\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\r\n          break;\r\n\r\n        case 'a':\r\n          rx = p[off++];\r\n          ry = p[off++];\r\n          psi = p[off++];\r\n          fa = p[off++];\r\n          fs = p[off++];\r\n          x1 = cpx, y1 = cpy;\r\n          cpx += p[off++];\r\n          cpy += p[off++];\r\n          cmd = CMD.A;\r\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (cmdStr === 'z' || cmdStr === 'Z') {\r\n      cmd = CMD.Z;\r\n      path.addData(cmd); // z may be in the middle of the path.\r\n\r\n      cpx = subpathX;\r\n      cpy = subpathY;\r\n    }\r\n\r\n    prevCmd = cmd;\r\n  }\r\n\r\n  path.toStatic();\r\n  return path;\r\n} // TODO Optimize double memory cost problem\r\n\r\n\r\nfunction createPathOptions(str, opts) {\r\n  var pathProxy = createPathProxyFromString(str);\r\n  opts = opts || {};\r\n\r\n  opts.buildPath = function (path) {\r\n    if (path.setData) {\r\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\r\n\r\n      var ctx = path.getContext();\r\n\r\n      if (ctx) {\r\n        path.rebuildPath(ctx);\r\n      }\r\n    } else {\r\n      var ctx = path;\r\n      pathProxy.rebuildPath(ctx);\r\n    }\r\n  };\r\n\r\n  opts.applyTransform = function (m) {\r\n    transformPath(pathProxy, m);\r\n    this.dirty(true);\r\n  };\r\n\r\n  return opts;\r\n}\r\n/**\r\n * Create a Path object from path string data\r\n * http://www.w3.org/TR/SVG/paths.html#PathData\r\n * @param  {Object} opts Other options\r\n */\r\n\r\n\r\nfunction createFromString(str, opts) {\r\n  return new Path(createPathOptions(str, opts));\r\n}\r\n/**\r\n * Create a Path class from path string data\r\n * @param  {string} str\r\n * @param  {Object} opts Other options\r\n */\r\n\r\n\r\nfunction extendFromString(str, opts) {\r\n  return Path.extend(createPathOptions(str, opts));\r\n}\r\n/**\r\n * Merge multiple paths\r\n */\r\n// TODO Apply transform\r\n// TODO stroke dash\r\n// TODO Optimize double memory cost problem\r\n\r\n\r\nfunction mergePath(pathEls, opts) {\r\n  var pathList = [];\r\n  var len = pathEls.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var pathEl = pathEls[i];\r\n\r\n    if (!pathEl.path) {\r\n      pathEl.createPathProxy();\r\n    }\r\n\r\n    if (pathEl.__dirtyPath) {\r\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\r\n    }\r\n\r\n    pathList.push(pathEl.path);\r\n  }\r\n\r\n  var pathBundle = new Path(opts); // Need path proxy.\r\n\r\n  pathBundle.createPathProxy();\r\n\r\n  pathBundle.buildPath = function (path) {\r\n    path.appendPath(pathList); // Svg and vml renderer don't have context\r\n\r\n    var ctx = path.getContext();\r\n\r\n    if (ctx) {\r\n      path.rebuildPath(ctx);\r\n    }\r\n  };\r\n\r\n  return pathBundle;\r\n}\r\n\r\nexports.createFromString = createFromString;\r\nexports.extendFromString = extendFromString;\r\nexports.mergePath = mergePath;","var PathProxy = require(\"../core/PathProxy\");\r\n\r\nvar _vector = require(\"../core/vector\");\r\n\r\nvar v2ApplyTransform = _vector.applyTransform;\r\nvar CMD = PathProxy.CMD;\r\nvar points = [[], [], []];\r\nvar mathSqrt = Math.sqrt;\r\nvar mathAtan2 = Math.atan2;\r\n\r\nfunction _default(path, m) {\r\n  var data = path.data;\r\n  var cmd;\r\n  var nPoint;\r\n  var i;\r\n  var j;\r\n  var k;\r\n  var p;\r\n  var M = CMD.M;\r\n  var C = CMD.C;\r\n  var L = CMD.L;\r\n  var R = CMD.R;\r\n  var A = CMD.A;\r\n  var Q = CMD.Q;\r\n\r\n  for (i = 0, j = 0; i < data.length;) {\r\n    cmd = data[i++];\r\n    j = i;\r\n    nPoint = 0;\r\n\r\n    switch (cmd) {\r\n      case M:\r\n        nPoint = 1;\r\n        break;\r\n\r\n      case L:\r\n        nPoint = 1;\r\n        break;\r\n\r\n      case C:\r\n        nPoint = 3;\r\n        break;\r\n\r\n      case Q:\r\n        nPoint = 2;\r\n        break;\r\n\r\n      case A:\r\n        var x = m[4];\r\n        var y = m[5];\r\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\r\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\r\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\r\n\r\n        data[i] *= sx;\r\n        data[i++] += x; // cy\r\n\r\n        data[i] *= sy;\r\n        data[i++] += y; // Scale rx and ry\r\n        // FIXME Assume psi is 0 here\r\n\r\n        data[i++] *= sx;\r\n        data[i++] *= sy; // Start angle\r\n\r\n        data[i++] += angle; // end angle\r\n\r\n        data[i++] += angle; // FIXME psi\r\n\r\n        i += 2;\r\n        j = i;\r\n        break;\r\n\r\n      case R:\r\n        // x0, y0\r\n        p[0] = data[i++];\r\n        p[1] = data[i++];\r\n        v2ApplyTransform(p, p, m);\r\n        data[j++] = p[0];\r\n        data[j++] = p[1]; // x1, y1\r\n\r\n        p[0] += data[i++];\r\n        p[1] += data[i++];\r\n        v2ApplyTransform(p, p, m);\r\n        data[j++] = p[0];\r\n        data[j++] = p[1];\r\n    }\r\n\r\n    for (k = 0; k < nPoint; k++) {\r\n      var p = points[k];\r\n      p[0] = data[i++];\r\n      p[1] = data[i++];\r\n      v2ApplyTransform(p, p, m); // Write back\r\n\r\n      data[j++] = p[0];\r\n      data[j++] = p[1];\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = _default;","var logError = require(\"../core/log\");\r\n\r\nvar vmlCore = require(\"./core\");\r\n\r\nvar _util = require(\"../core/util\");\r\n\r\nvar each = _util.each;\r\n\r\n/**\r\n * VML Painter.\r\n *\r\n * @module zrender/vml/Painter\r\n */\r\nfunction parseInt10(val) {\r\n  return parseInt(val, 10);\r\n}\r\n/**\r\n * @alias module:zrender/vml/Painter\r\n */\r\n\r\n\r\nfunction VMLPainter(root, storage) {\r\n  vmlCore.initVML();\r\n  this.root = root;\r\n  this.storage = storage;\r\n  var vmlViewport = document.createElement('div');\r\n  var vmlRoot = document.createElement('div');\r\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\r\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\r\n  root.appendChild(vmlViewport);\r\n  this._vmlRoot = vmlRoot;\r\n  this._vmlViewport = vmlViewport;\r\n  this.resize(); // Modify storage\r\n\r\n  var oldDelFromStorage = storage.delFromStorage;\r\n  var oldAddToStorage = storage.addToStorage;\r\n\r\n  storage.delFromStorage = function (el) {\r\n    oldDelFromStorage.call(storage, el);\r\n\r\n    if (el) {\r\n      el.onRemove && el.onRemove(vmlRoot);\r\n    }\r\n  };\r\n\r\n  storage.addToStorage = function (el) {\r\n    // Displayable already has a vml node\r\n    el.onAdd && el.onAdd(vmlRoot);\r\n    oldAddToStorage.call(storage, el);\r\n  };\r\n\r\n  this._firstPaint = true;\r\n}\r\n\r\nVMLPainter.prototype = {\r\n  constructor: VMLPainter,\r\n  getType: function () {\r\n    return 'vml';\r\n  },\r\n\r\n  /**\r\n   * @return {HTMLDivElement}\r\n   */\r\n  getViewportRoot: function () {\r\n    return this._vmlViewport;\r\n  },\r\n  getViewportRootOffset: function () {\r\n    var viewportRoot = this.getViewportRoot();\r\n\r\n    if (viewportRoot) {\r\n      return {\r\n        offsetLeft: viewportRoot.offsetLeft || 0,\r\n        offsetTop: viewportRoot.offsetTop || 0\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 刷新\r\n   */\r\n  refresh: function () {\r\n    var list = this.storage.getDisplayList(true, true);\r\n\r\n    this._paintList(list);\r\n  },\r\n  _paintList: function (list) {\r\n    var vmlRoot = this._vmlRoot;\r\n\r\n    for (var i = 0; i < list.length; i++) {\r\n      var el = list[i];\r\n\r\n      if (el.invisible || el.ignore) {\r\n        if (!el.__alreadyNotVisible) {\r\n          el.onRemove(vmlRoot);\r\n        } // Set as already invisible\r\n\r\n\r\n        el.__alreadyNotVisible = true;\r\n      } else {\r\n        if (el.__alreadyNotVisible) {\r\n          el.onAdd(vmlRoot);\r\n        }\r\n\r\n        el.__alreadyNotVisible = false;\r\n\r\n        if (el.__dirty) {\r\n          el.beforeBrush && el.beforeBrush();\r\n          (el.brushVML || el.brush).call(el, vmlRoot);\r\n          el.afterBrush && el.afterBrush();\r\n        }\r\n      }\r\n\r\n      el.__dirty = false;\r\n    }\r\n\r\n    if (this._firstPaint) {\r\n      // Detached from document at first time\r\n      // to avoid page refreshing too many times\r\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\r\n      this._vmlViewport.appendChild(vmlRoot);\r\n\r\n      this._firstPaint = false;\r\n    }\r\n  },\r\n  resize: function (width, height) {\r\n    var width = width == null ? this._getWidth() : width;\r\n    var height = height == null ? this._getHeight() : height;\r\n\r\n    if (this._width !== width || this._height !== height) {\r\n      this._width = width;\r\n      this._height = height;\r\n      var vmlViewportStyle = this._vmlViewport.style;\r\n      vmlViewportStyle.width = width + 'px';\r\n      vmlViewportStyle.height = height + 'px';\r\n    }\r\n  },\r\n  dispose: function () {\r\n    this.root.innerHTML = '';\r\n    this._vmlRoot = this._vmlViewport = this.storage = null;\r\n  },\r\n  getWidth: function () {\r\n    return this._width;\r\n  },\r\n  getHeight: function () {\r\n    return this._height;\r\n  },\r\n  clear: function () {\r\n    if (this._vmlViewport) {\r\n      this.root.removeChild(this._vmlViewport);\r\n    }\r\n  },\r\n  _getWidth: function () {\r\n    var root = this.root;\r\n    var stl = root.currentStyle;\r\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\r\n  },\r\n  _getHeight: function () {\r\n    var root = this.root;\r\n    var stl = root.currentStyle;\r\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\r\n  }\r\n}; // Not supported methods\r\n\r\nfunction createMethodNotSupport(method) {\r\n  return function () {\r\n    logError('In IE8.0 VML mode painter not support method \"' + method + '\"');\r\n  };\r\n} // Unsupported methods\r\n\r\n\r\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\r\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\r\n});\r\nvar _default = VMLPainter;\r\nmodule.exports = _default;","var env = require(\"../core/env\");\r\n\r\nvar urn = 'urn:schemas-microsoft-com:vml';\r\nvar win = typeof window === 'undefined' ? null : window;\r\nvar vmlInited = false;\r\nvar doc = win && win.document;\r\n\r\nfunction createNode(tagName) {\r\n  return doCreateNode(tagName);\r\n} // Avoid assign to an exported variable, for transforming to cjs.\r\n\r\n\r\nvar doCreateNode;\r\n\r\nif (doc && !env.canvasSupported) {\r\n  try {\r\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\r\n\r\n    doCreateNode = function (tagName) {\r\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\r\n    };\r\n  } catch (e) {\r\n    doCreateNode = function (tagName) {\r\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\r\n    };\r\n  }\r\n} // From raphael\r\n\r\n\r\nfunction initVML() {\r\n  if (vmlInited || !doc) {\r\n    return;\r\n  }\r\n\r\n  vmlInited = true;\r\n  var styleSheets = doc.styleSheets;\r\n\r\n  if (styleSheets.length < 31) {\r\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\r\n  } else {\r\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\r\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\r\n  }\r\n}\r\n\r\nexports.doc = doc;\r\nexports.createNode = createNode;\r\nexports.initVML = initVML;","var env = require(\"../core/env\");\r\n\r\nvar _vector = require(\"../core/vector\");\r\n\r\nvar applyTransform = _vector.applyTransform;\r\n\r\nvar BoundingRect = require(\"../core/BoundingRect\");\r\n\r\nvar colorTool = require(\"../tool/color\");\r\n\r\nvar textContain = require(\"../contain/text\");\r\n\r\nvar textHelper = require(\"../graphic/helper/text\");\r\n\r\nvar RectText = require(\"../graphic/mixin/RectText\");\r\n\r\nvar Displayable = require(\"../graphic/Displayable\");\r\n\r\nvar ZImage = require(\"../graphic/Image\");\r\n\r\nvar Text = require(\"../graphic/Text\");\r\n\r\nvar Path = require(\"../graphic/Path\");\r\n\r\nvar PathProxy = require(\"../core/PathProxy\");\r\n\r\nvar Gradient = require(\"../graphic/Gradient\");\r\n\r\nvar vmlCore = require(\"./core\");\r\n\r\n// http://www.w3.org/TR/NOTE-VML\r\n// TODO Use proxy like svg instead of overwrite brush methods\r\nvar CMD = PathProxy.CMD;\r\nvar round = Math.round;\r\nvar sqrt = Math.sqrt;\r\nvar abs = Math.abs;\r\nvar cos = Math.cos;\r\nvar sin = Math.sin;\r\nvar mathMax = Math.max;\r\n\r\nif (!env.canvasSupported) {\r\n  var comma = ',';\r\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\r\n  var Z = 21600;\r\n  var Z2 = Z / 2;\r\n  var ZLEVEL_BASE = 100000;\r\n  var Z_BASE = 1000;\r\n\r\n  var initRootElStyle = function (el) {\r\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\r\n    el.coordsize = Z + ',' + Z;\r\n    el.coordorigin = '0,0';\r\n  };\r\n\r\n  var encodeHtmlAttribute = function (s) {\r\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\r\n  };\r\n\r\n  var rgb2Str = function (r, g, b) {\r\n    return 'rgb(' + [r, g, b].join(',') + ')';\r\n  };\r\n\r\n  var append = function (parent, child) {\r\n    if (child && parent && child.parentNode !== parent) {\r\n      parent.appendChild(child);\r\n    }\r\n  };\r\n\r\n  var remove = function (parent, child) {\r\n    if (child && parent && child.parentNode === parent) {\r\n      parent.removeChild(child);\r\n    }\r\n  };\r\n\r\n  var getZIndex = function (zlevel, z, z2) {\r\n    // z 的取值范围为 [0, 1000]\r\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\r\n  };\r\n\r\n  var parsePercent = textHelper.parsePercent;\r\n  /***************************************************\r\n   * PATH\r\n   **************************************************/\r\n\r\n  var setColorAndOpacity = function (el, color, opacity) {\r\n    var colorArr = colorTool.parse(color);\r\n    opacity = +opacity;\r\n\r\n    if (isNaN(opacity)) {\r\n      opacity = 1;\r\n    }\r\n\r\n    if (colorArr) {\r\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\r\n      el.opacity = opacity * colorArr[3];\r\n    }\r\n  };\r\n\r\n  var getColorAndAlpha = function (color) {\r\n    var colorArr = colorTool.parse(color);\r\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\r\n  };\r\n\r\n  var updateFillNode = function (el, style, zrEl) {\r\n    // TODO pattern\r\n    var fill = style.fill;\r\n\r\n    if (fill != null) {\r\n      // Modified from excanvas\r\n      if (fill instanceof Gradient) {\r\n        var gradientType;\r\n        var angle = 0;\r\n        var focus = [0, 0]; // additional offset\r\n\r\n        var shift = 0; // scale factor for offset\r\n\r\n        var expansion = 1;\r\n        var rect = zrEl.getBoundingRect();\r\n        var rectWidth = rect.width;\r\n        var rectHeight = rect.height;\r\n\r\n        if (fill.type === 'linear') {\r\n          gradientType = 'gradient';\r\n          var transform = zrEl.transform;\r\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\r\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\r\n\r\n          if (transform) {\r\n            applyTransform(p0, p0, transform);\r\n            applyTransform(p1, p1, transform);\r\n          }\r\n\r\n          var dx = p1[0] - p0[0];\r\n          var dy = p1[1] - p0[1];\r\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\r\n\r\n          if (angle < 0) {\r\n            angle += 360;\r\n          } // Very small angles produce an unexpected result because they are\r\n          // converted to a scientific notation string.\r\n\r\n\r\n          if (angle < 1e-6) {\r\n            angle = 0;\r\n          }\r\n        } else {\r\n          gradientType = 'gradientradial';\r\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\r\n          var transform = zrEl.transform;\r\n          var scale = zrEl.scale;\r\n          var width = rectWidth;\r\n          var height = rectHeight;\r\n          focus = [// Percent in bounding rect\r\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\r\n\r\n          if (transform) {\r\n            applyTransform(p0, p0, transform);\r\n          }\r\n\r\n          width /= scale[0] * Z;\r\n          height /= scale[1] * Z;\r\n          var dimension = mathMax(width, height);\r\n          shift = 2 * 0 / dimension;\r\n          expansion = 2 * fill.r / dimension - shift;\r\n        } // We need to sort the color stops in ascending order by offset,\r\n        // otherwise IE won't interpret it correctly.\r\n\r\n\r\n        var stops = fill.colorStops.slice();\r\n        stops.sort(function (cs1, cs2) {\r\n          return cs1.offset - cs2.offset;\r\n        });\r\n        var length = stops.length; // Color and alpha list of first and last stop\r\n\r\n        var colorAndAlphaList = [];\r\n        var colors = [];\r\n\r\n        for (var i = 0; i < length; i++) {\r\n          var stop = stops[i];\r\n          var colorAndAlpha = getColorAndAlpha(stop.color);\r\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\r\n\r\n          if (i === 0 || i === length - 1) {\r\n            colorAndAlphaList.push(colorAndAlpha);\r\n          }\r\n        }\r\n\r\n        if (length >= 2) {\r\n          var color1 = colorAndAlphaList[0][0];\r\n          var color2 = colorAndAlphaList[1][0];\r\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\r\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\r\n          el.type = gradientType;\r\n          el.method = 'none';\r\n          el.focus = '100%';\r\n          el.angle = angle;\r\n          el.color = color1;\r\n          el.color2 = color2;\r\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\r\n          // are reversed.\r\n\r\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\r\n\r\n          el.opacity2 = opacity1;\r\n        }\r\n\r\n        if (gradientType === 'radial') {\r\n          el.focusposition = focus.join(',');\r\n        }\r\n      } else {\r\n        // FIXME Change from Gradient fill to color fill\r\n        setColorAndOpacity(el, fill, style.opacity);\r\n      }\r\n    }\r\n  };\r\n\r\n  var updateStrokeNode = function (el, style) {\r\n    // if (style.lineJoin != null) {\r\n    //     el.joinstyle = style.lineJoin;\r\n    // }\r\n    // if (style.miterLimit != null) {\r\n    //     el.miterlimit = style.miterLimit * Z;\r\n    // }\r\n    // if (style.lineCap != null) {\r\n    //     el.endcap = style.lineCap;\r\n    // }\r\n    if (style.lineDash) {\r\n      el.dashstyle = style.lineDash.join(' ');\r\n    }\r\n\r\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\r\n      setColorAndOpacity(el, style.stroke, style.opacity);\r\n    }\r\n  };\r\n\r\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\r\n    var isFill = type === 'fill';\r\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\r\n\r\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\r\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\r\n\r\n      if (style[type] instanceof Gradient) {\r\n        remove(vmlEl, el);\r\n      }\r\n\r\n      if (!el) {\r\n        el = vmlCore.createNode(type);\r\n      }\r\n\r\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\r\n      append(vmlEl, el);\r\n    } else {\r\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\r\n      remove(vmlEl, el);\r\n    }\r\n  };\r\n\r\n  var points = [[], [], []];\r\n\r\n  var pathDataToString = function (path, m) {\r\n    var M = CMD.M;\r\n    var C = CMD.C;\r\n    var L = CMD.L;\r\n    var A = CMD.A;\r\n    var Q = CMD.Q;\r\n    var str = [];\r\n    var nPoint;\r\n    var cmdStr;\r\n    var cmd;\r\n    var i;\r\n    var xi;\r\n    var yi;\r\n    var data = path.data;\r\n    var dataLength = path.len();\r\n\r\n    for (i = 0; i < dataLength;) {\r\n      cmd = data[i++];\r\n      cmdStr = '';\r\n      nPoint = 0;\r\n\r\n      switch (cmd) {\r\n        case M:\r\n          cmdStr = ' m ';\r\n          nPoint = 1;\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          points[0][0] = xi;\r\n          points[0][1] = yi;\r\n          break;\r\n\r\n        case L:\r\n          cmdStr = ' l ';\r\n          nPoint = 1;\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          points[0][0] = xi;\r\n          points[0][1] = yi;\r\n          break;\r\n\r\n        case Q:\r\n        case C:\r\n          cmdStr = ' c ';\r\n          nPoint = 3;\r\n          var x1 = data[i++];\r\n          var y1 = data[i++];\r\n          var x2 = data[i++];\r\n          var y2 = data[i++];\r\n          var x3;\r\n          var y3;\r\n\r\n          if (cmd === Q) {\r\n            // Convert quadratic to cubic using degree elevation\r\n            x3 = x2;\r\n            y3 = y2;\r\n            x2 = (x2 + 2 * x1) / 3;\r\n            y2 = (y2 + 2 * y1) / 3;\r\n            x1 = (xi + 2 * x1) / 3;\r\n            y1 = (yi + 2 * y1) / 3;\r\n          } else {\r\n            x3 = data[i++];\r\n            y3 = data[i++];\r\n          }\r\n\r\n          points[0][0] = x1;\r\n          points[0][1] = y1;\r\n          points[1][0] = x2;\r\n          points[1][1] = y2;\r\n          points[2][0] = x3;\r\n          points[2][1] = y3;\r\n          xi = x3;\r\n          yi = y3;\r\n          break;\r\n\r\n        case A:\r\n          var x = 0;\r\n          var y = 0;\r\n          var sx = 1;\r\n          var sy = 1;\r\n          var angle = 0;\r\n\r\n          if (m) {\r\n            // Extract SRT from matrix\r\n            x = m[4];\r\n            y = m[5];\r\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\r\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\r\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\r\n          }\r\n\r\n          var cx = data[i++];\r\n          var cy = data[i++];\r\n          var rx = data[i++];\r\n          var ry = data[i++];\r\n          var startAngle = data[i++] + angle;\r\n          var endAngle = data[i++] + startAngle + angle; // FIXME\r\n          // var psi = data[i++];\r\n\r\n          i++;\r\n          var clockwise = data[i++];\r\n          var x0 = cx + cos(startAngle) * rx;\r\n          var y0 = cy + sin(startAngle) * ry;\r\n          var x1 = cx + cos(endAngle) * rx;\r\n          var y1 = cy + sin(endAngle) * ry;\r\n          var type = clockwise ? ' wa ' : ' at ';\r\n\r\n          if (Math.abs(x0 - x1) < 1e-4) {\r\n            // IE won't render arches drawn counter clockwise if x0 == x1.\r\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\r\n              // Offset x0 by 1/80 of a pixel. Use something\r\n              // that can be represented in binary\r\n              if (clockwise) {\r\n                x0 += 270 / Z;\r\n              }\r\n            } else {\r\n              // Avoid case draw full circle\r\n              if (Math.abs(y0 - cy) < 1e-4) {\r\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\r\n                  y1 -= 270 / Z;\r\n                } else {\r\n                  y1 += 270 / Z;\r\n                }\r\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\r\n                x1 += 270 / Z;\r\n              } else {\r\n                x1 -= 270 / Z;\r\n              }\r\n            }\r\n          }\r\n\r\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\r\n          xi = x1;\r\n          yi = y1;\r\n          break;\r\n\r\n        case CMD.R:\r\n          var p0 = points[0];\r\n          var p1 = points[1]; // x0, y0\r\n\r\n          p0[0] = data[i++];\r\n          p0[1] = data[i++]; // x1, y1\r\n\r\n          p1[0] = p0[0] + data[i++];\r\n          p1[1] = p0[1] + data[i++];\r\n\r\n          if (m) {\r\n            applyTransform(p0, p0, m);\r\n            applyTransform(p1, p1, m);\r\n          }\r\n\r\n          p0[0] = round(p0[0] * Z - Z2);\r\n          p1[0] = round(p1[0] * Z - Z2);\r\n          p0[1] = round(p0[1] * Z - Z2);\r\n          p1[1] = round(p1[1] * Z - Z2);\r\n          str.push( // x0, y0\r\n          ' m ', p0[0], comma, p0[1], // x1, y0\r\n          ' l ', p1[0], comma, p0[1], // x1, y1\r\n          ' l ', p1[0], comma, p1[1], // x0, y1\r\n          ' l ', p0[0], comma, p1[1]);\r\n          break;\r\n\r\n        case CMD.Z:\r\n          // FIXME Update xi, yi\r\n          str.push(' x ');\r\n      }\r\n\r\n      if (nPoint > 0) {\r\n        str.push(cmdStr);\r\n\r\n        for (var k = 0; k < nPoint; k++) {\r\n          var p = points[k];\r\n          m && applyTransform(p, p, m); // 不 round 会非常慢\r\n\r\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\r\n        }\r\n      }\r\n    }\r\n\r\n    return str.join('');\r\n  }; // Rewrite the original path method\r\n\r\n\r\n  Path.prototype.brushVML = function (vmlRoot) {\r\n    var style = this.style;\r\n    var vmlEl = this._vmlEl;\r\n\r\n    if (!vmlEl) {\r\n      vmlEl = vmlCore.createNode('shape');\r\n      initRootElStyle(vmlEl);\r\n      this._vmlEl = vmlEl;\r\n    }\r\n\r\n    updateFillAndStroke(vmlEl, 'fill', style, this);\r\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\r\n    var m = this.transform;\r\n    var needTransform = m != null;\r\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\r\n\r\n    if (strokeEl) {\r\n      var lineWidth = style.lineWidth; // Get the line scale.\r\n      // Determinant of this.m_ means how much the area is enlarged by the\r\n      // transformation. So its square root can be used as a scale factor\r\n      // for width.\r\n\r\n      if (needTransform && !style.strokeNoScale) {\r\n        var det = m[0] * m[3] - m[1] * m[2];\r\n        lineWidth *= sqrt(abs(det));\r\n      }\r\n\r\n      strokeEl.weight = lineWidth + 'px';\r\n    }\r\n\r\n    var path = this.path || (this.path = new PathProxy());\r\n\r\n    if (this.__dirtyPath) {\r\n      path.beginPath();\r\n      path.subPixelOptimize = false;\r\n      this.buildPath(path, this.shape);\r\n      path.toStatic();\r\n      this.__dirtyPath = false;\r\n    }\r\n\r\n    vmlEl.path = pathDataToString(path, this.transform);\r\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\r\n\r\n    append(vmlRoot, vmlEl); // Text\r\n\r\n    if (style.text != null) {\r\n      this.drawRectText(vmlRoot, this.getBoundingRect());\r\n    } else {\r\n      this.removeRectText(vmlRoot);\r\n    }\r\n  };\r\n\r\n  Path.prototype.onRemove = function (vmlRoot) {\r\n    remove(vmlRoot, this._vmlEl);\r\n    this.removeRectText(vmlRoot);\r\n  };\r\n\r\n  Path.prototype.onAdd = function (vmlRoot) {\r\n    append(vmlRoot, this._vmlEl);\r\n    this.appendRectText(vmlRoot);\r\n  };\r\n  /***************************************************\r\n   * IMAGE\r\n   **************************************************/\r\n\r\n\r\n  var isImage = function (img) {\r\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\r\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\r\n  }; // Rewrite the original path method\r\n\r\n\r\n  ZImage.prototype.brushVML = function (vmlRoot) {\r\n    var style = this.style;\r\n    var image = style.image; // Image original width, height\r\n\r\n    var ow;\r\n    var oh;\r\n\r\n    if (isImage(image)) {\r\n      var src = image.src;\r\n\r\n      if (src === this._imageSrc) {\r\n        ow = this._imageWidth;\r\n        oh = this._imageHeight;\r\n      } else {\r\n        var imageRuntimeStyle = image.runtimeStyle;\r\n        var oldRuntimeWidth = imageRuntimeStyle.width;\r\n        var oldRuntimeHeight = imageRuntimeStyle.height;\r\n        imageRuntimeStyle.width = 'auto';\r\n        imageRuntimeStyle.height = 'auto'; // get the original size\r\n\r\n        ow = image.width;\r\n        oh = image.height; // and remove overides\r\n\r\n        imageRuntimeStyle.width = oldRuntimeWidth;\r\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\r\n\r\n        this._imageSrc = src;\r\n        this._imageWidth = ow;\r\n        this._imageHeight = oh;\r\n      }\r\n\r\n      image = src;\r\n    } else {\r\n      if (image === this._imageSrc) {\r\n        ow = this._imageWidth;\r\n        oh = this._imageHeight;\r\n      }\r\n    }\r\n\r\n    if (!image) {\r\n      return;\r\n    }\r\n\r\n    var x = style.x || 0;\r\n    var y = style.y || 0;\r\n    var dw = style.width;\r\n    var dh = style.height;\r\n    var sw = style.sWidth;\r\n    var sh = style.sHeight;\r\n    var sx = style.sx || 0;\r\n    var sy = style.sy || 0;\r\n    var hasCrop = sw && sh;\r\n    var vmlEl = this._vmlEl;\r\n\r\n    if (!vmlEl) {\r\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\r\n      // vmlEl = vmlCore.createNode('group');\r\n      vmlEl = vmlCore.doc.createElement('div');\r\n      initRootElStyle(vmlEl);\r\n      this._vmlEl = vmlEl;\r\n    }\r\n\r\n    var vmlElStyle = vmlEl.style;\r\n    var hasRotation = false;\r\n    var m;\r\n    var scaleX = 1;\r\n    var scaleY = 1;\r\n\r\n    if (this.transform) {\r\n      m = this.transform;\r\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\r\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\r\n      hasRotation = m[1] || m[2];\r\n    }\r\n\r\n    if (hasRotation) {\r\n      // If filters are necessary (rotation exists), create them\r\n      // filters are bog-slow, so only create them if abbsolutely necessary\r\n      // The following check doesn't account for skews (which don't exist\r\n      // in the canvas spec (yet) anyway.\r\n      // From excanvas\r\n      var p0 = [x, y];\r\n      var p1 = [x + dw, y];\r\n      var p2 = [x, y + dh];\r\n      var p3 = [x + dw, y + dh];\r\n      applyTransform(p0, p0, m);\r\n      applyTransform(p1, p1, m);\r\n      applyTransform(p2, p2, m);\r\n      applyTransform(p3, p3, m);\r\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\r\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\r\n      var transformFilter = [];\r\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\r\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\r\n\r\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\r\n    } else {\r\n      if (m) {\r\n        x = x * scaleX + m[4];\r\n        y = y * scaleY + m[5];\r\n      }\r\n\r\n      vmlElStyle.filter = '';\r\n      vmlElStyle.left = round(x) + 'px';\r\n      vmlElStyle.top = round(y) + 'px';\r\n    }\r\n\r\n    var imageEl = this._imageEl;\r\n    var cropEl = this._cropEl;\r\n\r\n    if (!imageEl) {\r\n      imageEl = vmlCore.doc.createElement('div');\r\n      this._imageEl = imageEl;\r\n    }\r\n\r\n    var imageELStyle = imageEl.style;\r\n\r\n    if (hasCrop) {\r\n      // Needs know image original width and height\r\n      if (!(ow && oh)) {\r\n        var tmpImage = new Image();\r\n        var self = this;\r\n\r\n        tmpImage.onload = function () {\r\n          tmpImage.onload = null;\r\n          ow = tmpImage.width;\r\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\r\n\r\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\r\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\r\n\r\n          self._imageWidth = ow;\r\n          self._imageHeight = oh;\r\n          self._imageSrc = image;\r\n        };\r\n\r\n        tmpImage.src = image;\r\n      } else {\r\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\r\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\r\n      }\r\n\r\n      if (!cropEl) {\r\n        cropEl = vmlCore.doc.createElement('div');\r\n        cropEl.style.overflow = 'hidden';\r\n        this._cropEl = cropEl;\r\n      }\r\n\r\n      var cropElStyle = cropEl.style;\r\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\r\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\r\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\r\n\r\n      if (!cropEl.parentNode) {\r\n        vmlEl.appendChild(cropEl);\r\n      }\r\n\r\n      if (imageEl.parentNode !== cropEl) {\r\n        cropEl.appendChild(imageEl);\r\n      }\r\n    } else {\r\n      imageELStyle.width = round(scaleX * dw) + 'px';\r\n      imageELStyle.height = round(scaleY * dh) + 'px';\r\n      vmlEl.appendChild(imageEl);\r\n\r\n      if (cropEl && cropEl.parentNode) {\r\n        vmlEl.removeChild(cropEl);\r\n        this._cropEl = null;\r\n      }\r\n    }\r\n\r\n    var filterStr = '';\r\n    var alpha = style.opacity;\r\n\r\n    if (alpha < 1) {\r\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\r\n    }\r\n\r\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\r\n    imageELStyle.filter = filterStr;\r\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\r\n\r\n    append(vmlRoot, vmlEl); // Text\r\n\r\n    if (style.text != null) {\r\n      this.drawRectText(vmlRoot, this.getBoundingRect());\r\n    }\r\n  };\r\n\r\n  ZImage.prototype.onRemove = function (vmlRoot) {\r\n    remove(vmlRoot, this._vmlEl);\r\n    this._vmlEl = null;\r\n    this._cropEl = null;\r\n    this._imageEl = null;\r\n    this.removeRectText(vmlRoot);\r\n  };\r\n\r\n  ZImage.prototype.onAdd = function (vmlRoot) {\r\n    append(vmlRoot, this._vmlEl);\r\n    this.appendRectText(vmlRoot);\r\n  };\r\n  /***************************************************\r\n   * TEXT\r\n   **************************************************/\r\n\r\n\r\n  var DEFAULT_STYLE_NORMAL = 'normal';\r\n  var fontStyleCache = {};\r\n  var fontStyleCacheCount = 0;\r\n  var MAX_FONT_CACHE_SIZE = 100;\r\n  var fontEl = document.createElement('div');\r\n\r\n  var getFontStyle = function (fontString) {\r\n    var fontStyle = fontStyleCache[fontString];\r\n\r\n    if (!fontStyle) {\r\n      // Clear cache\r\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\r\n        fontStyleCacheCount = 0;\r\n        fontStyleCache = {};\r\n      }\r\n\r\n      var style = fontEl.style;\r\n      var fontFamily;\r\n\r\n      try {\r\n        style.font = fontString;\r\n        fontFamily = style.fontFamily.split(',')[0];\r\n      } catch (e) {}\r\n\r\n      fontStyle = {\r\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\r\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\r\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\r\n        size: parseFloat(style.fontSize || 12) | 0,\r\n        family: fontFamily || 'Microsoft YaHei'\r\n      };\r\n      fontStyleCache[fontString] = fontStyle;\r\n      fontStyleCacheCount++;\r\n    }\r\n\r\n    return fontStyle;\r\n  };\r\n\r\n  var textMeasureEl; // Overwrite measure text method\r\n\r\n  textContain.$override('measureText', function (text, textFont) {\r\n    var doc = vmlCore.doc;\r\n\r\n    if (!textMeasureEl) {\r\n      textMeasureEl = doc.createElement('div');\r\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\r\n      vmlCore.doc.body.appendChild(textMeasureEl);\r\n    }\r\n\r\n    try {\r\n      textMeasureEl.style.font = textFont;\r\n    } catch (ex) {// Ignore failures to set to invalid font.\r\n    }\r\n\r\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\r\n\r\n    textMeasureEl.appendChild(doc.createTextNode(text));\r\n    return {\r\n      width: textMeasureEl.offsetWidth\r\n    };\r\n  });\r\n  var tmpRect = new BoundingRect();\r\n\r\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\r\n    var style = this.style; // Optimize, avoid normalize every time.\r\n\r\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\r\n    var text = style.text; // Convert to string\r\n\r\n    text != null && (text += '');\r\n\r\n    if (!text) {\r\n      return;\r\n    } // Convert rich text to plain text. Rich text is not supported in\r\n    // IE8-, but tags in rich text template will be removed.\r\n\r\n\r\n    if (style.rich) {\r\n      var contentBlock = textContain.parseRichText(text, style);\r\n      text = [];\r\n\r\n      for (var i = 0; i < contentBlock.lines.length; i++) {\r\n        var tokens = contentBlock.lines[i].tokens;\r\n        var textLine = [];\r\n\r\n        for (var j = 0; j < tokens.length; j++) {\r\n          textLine.push(tokens[j].text);\r\n        }\r\n\r\n        text.push(textLine.join(''));\r\n      }\r\n\r\n      text = text.join('\\n');\r\n    }\r\n\r\n    var x;\r\n    var y;\r\n    var align = style.textAlign;\r\n    var verticalAlign = style.textVerticalAlign;\r\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\r\n\r\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\r\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign, style.textPadding, style.textLineHeight); // Transform rect to view space\r\n\r\n    var m = this.transform; // Ignore transform for text in other element\r\n\r\n    if (m && !fromTextEl) {\r\n      tmpRect.copy(rect);\r\n      tmpRect.applyTransform(m);\r\n      rect = tmpRect;\r\n    }\r\n\r\n    if (!fromTextEl) {\r\n      var textPosition = style.textPosition; // Text position represented by coord\r\n\r\n      if (textPosition instanceof Array) {\r\n        x = rect.x + parsePercent(textPosition[0], rect.width);\r\n        y = rect.y + parsePercent(textPosition[1], rect.height);\r\n        align = align || 'left';\r\n      } else {\r\n        var res = this.calculateTextPosition ? this.calculateTextPosition({}, style, rect) : textContain.calculateTextPosition({}, style, rect);\r\n        x = res.x;\r\n        y = res.y; // Default align and baseline when has textPosition\r\n\r\n        align = align || res.textAlign;\r\n        verticalAlign = verticalAlign || res.textVerticalAlign;\r\n      }\r\n    } else {\r\n      x = rect.x;\r\n      y = rect.y;\r\n    }\r\n\r\n    x = textContain.adjustTextX(x, textRect.width, align);\r\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\r\n\r\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\r\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\r\n    // switch (baseline) {\r\n    // case 'hanging':\r\n    // case 'top':\r\n    //     y += fontSize / 1.75;\r\n    //     break;\r\n    //     case 'middle':\r\n    //         break;\r\n    //     default:\r\n    //     // case null:\r\n    //     // case 'alphabetic':\r\n    //     // case 'ideographic':\r\n    //     // case 'bottom':\r\n    //         y -= fontSize / 2.25;\r\n    //         break;\r\n    // }\r\n    // switch (align) {\r\n    //     case 'left':\r\n    //         break;\r\n    //     case 'center':\r\n    //         x -= textRect.width / 2;\r\n    //         break;\r\n    //     case 'right':\r\n    //         x -= textRect.width;\r\n    //         break;\r\n    // case 'end':\r\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\r\n    // break;\r\n    // case 'start':\r\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\r\n    // break;\r\n    // default:\r\n    //     align = 'left';\r\n    // }\r\n\r\n    var createNode = vmlCore.createNode;\r\n    var textVmlEl = this._textVmlEl;\r\n    var pathEl;\r\n    var textPathEl;\r\n    var skewEl;\r\n\r\n    if (!textVmlEl) {\r\n      textVmlEl = createNode('line');\r\n      pathEl = createNode('path');\r\n      textPathEl = createNode('textpath');\r\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\r\n      // Align 'center' seems wrong\r\n\r\n      textPathEl.style['v-text-align'] = 'left';\r\n      initRootElStyle(textVmlEl);\r\n      pathEl.textpathok = true;\r\n      textPathEl.on = true;\r\n      textVmlEl.from = '0 0';\r\n      textVmlEl.to = '1000 0.05';\r\n      append(textVmlEl, skewEl);\r\n      append(textVmlEl, pathEl);\r\n      append(textVmlEl, textPathEl);\r\n      this._textVmlEl = textVmlEl;\r\n    } else {\r\n      // 这里是在前面 appendChild 保证顺序的前提下\r\n      skewEl = textVmlEl.firstChild;\r\n      pathEl = skewEl.nextSibling;\r\n      textPathEl = pathEl.nextSibling;\r\n    }\r\n\r\n    var coords = [x, y];\r\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\r\n\r\n    if (m && fromTextEl) {\r\n      applyTransform(coords, coords, m);\r\n      skewEl.on = true;\r\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\r\n\r\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\r\n\r\n      skewEl.origin = '0 0';\r\n      textVmlElStyle.left = '0px';\r\n      textVmlElStyle.top = '0px';\r\n    } else {\r\n      skewEl.on = false;\r\n      textVmlElStyle.left = round(x) + 'px';\r\n      textVmlElStyle.top = round(y) + 'px';\r\n    }\r\n\r\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\r\n\r\n    try {\r\n      textPathEl.style.font = font;\r\n    } // Error font format\r\n    catch (e) {}\r\n\r\n    updateFillAndStroke(textVmlEl, 'fill', {\r\n      fill: style.textFill,\r\n      opacity: style.opacity\r\n    }, this);\r\n    updateFillAndStroke(textVmlEl, 'stroke', {\r\n      stroke: style.textStroke,\r\n      opacity: style.opacity,\r\n      lineDash: style.lineDash || null // style.lineDash can be `false`.\r\n\r\n    }, this);\r\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\r\n\r\n    append(vmlRoot, textVmlEl);\r\n  };\r\n\r\n  var removeRectText = function (vmlRoot) {\r\n    remove(vmlRoot, this._textVmlEl);\r\n    this._textVmlEl = null;\r\n  };\r\n\r\n  var appendRectText = function (vmlRoot) {\r\n    append(vmlRoot, this._textVmlEl);\r\n  };\r\n\r\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\r\n\r\n  for (var i = 0; i < list.length; i++) {\r\n    var proto = list[i].prototype;\r\n    proto.drawRectText = drawRectText;\r\n    proto.removeRectText = removeRectText;\r\n    proto.appendRectText = appendRectText;\r\n  }\r\n\r\n  Text.prototype.brushVML = function (vmlRoot) {\r\n    var style = this.style;\r\n\r\n    if (style.text != null) {\r\n      this.drawRectText(vmlRoot, {\r\n        x: style.x || 0,\r\n        y: style.y || 0,\r\n        width: 0,\r\n        height: 0\r\n      }, this.getBoundingRect(), true);\r\n    } else {\r\n      this.removeRectText(vmlRoot);\r\n    }\r\n  };\r\n\r\n  Text.prototype.onRemove = function (vmlRoot) {\r\n    this.removeRectText(vmlRoot);\r\n  };\r\n\r\n  Text.prototype.onAdd = function (vmlRoot) {\r\n    this.appendRectText(vmlRoot);\r\n  };\r\n}","require(\"./graphic\");\r\n\r\nvar _zrender = require(\"../zrender\");\r\n\r\nvar registerPainter = _zrender.registerPainter;\r\n\r\nvar Painter = require(\"./Painter\");\r\n\r\nregisterPainter('vml', Painter);","var guid = require(\"./core/guid\");\r\n\r\nvar env = require(\"./core/env\");\r\n\r\nvar zrUtil = require(\"./core/util\");\r\n\r\nvar Handler = require(\"./Handler\");\r\n\r\nvar Storage = require(\"./Storage\");\r\n\r\nvar Painter = require(\"./Painter\");\r\n\r\nvar Animation = require(\"./animation/Animation\");\r\n\r\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\r\n\r\n/*!\r\n* ZRender, a high performance 2d drawing library.\r\n*\r\n* Copyright (c) 2013, Baidu Inc.\r\n* All rights reserved.\r\n*\r\n* LICENSE\r\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\r\n*/\r\nvar useVML = !env.canvasSupported;\r\nvar painterCtors = {\r\n  canvas: Painter\r\n};\r\nvar instances = {}; // ZRender实例map索引\r\n\r\n/**\r\n * @type {string}\r\n */\r\n\r\nvar version = '4.3.2';\r\n/**\r\n * Initializing a zrender instance\r\n * @param {HTMLElement} dom\r\n * @param {Object} [opts]\r\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\r\n * @param {number} [opts.devicePixelRatio]\r\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\r\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\r\n * @return {module:zrender/ZRender}\r\n */\r\n\r\nfunction init(dom, opts) {\r\n  var zr = new ZRender(guid(), dom, opts);\r\n  instances[zr.id] = zr;\r\n  return zr;\r\n}\r\n/**\r\n * Dispose zrender instance\r\n * @param {module:zrender/ZRender} zr\r\n */\r\n\r\n\r\nfunction dispose(zr) {\r\n  if (zr) {\r\n    zr.dispose();\r\n  } else {\r\n    for (var key in instances) {\r\n      if (instances.hasOwnProperty(key)) {\r\n        instances[key].dispose();\r\n      }\r\n    }\r\n\r\n    instances = {};\r\n  }\r\n\r\n  return this;\r\n}\r\n/**\r\n * Get zrender instance by id\r\n * @param {string} id zrender instance id\r\n * @return {module:zrender/ZRender}\r\n */\r\n\r\n\r\nfunction getInstance(id) {\r\n  return instances[id];\r\n}\r\n\r\nfunction registerPainter(name, Ctor) {\r\n  painterCtors[name] = Ctor;\r\n}\r\n\r\nfunction delInstance(id) {\r\n  delete instances[id];\r\n}\r\n/**\r\n * @module zrender/ZRender\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @alias module:zrender/ZRender\r\n * @param {string} id\r\n * @param {HTMLElement} dom\r\n * @param {Object} opts\r\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\r\n * @param {number} [opts.devicePixelRatio]\r\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\r\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\r\n */\r\n\r\n\r\nvar ZRender = function (id, dom, opts) {\r\n  opts = opts || {};\r\n  /**\r\n   * @type {HTMLDomElement}\r\n   */\r\n\r\n  this.dom = dom;\r\n  /**\r\n   * @type {string}\r\n   */\r\n\r\n  this.id = id;\r\n  var self = this;\r\n  var storage = new Storage();\r\n  var rendererType = opts.renderer; // TODO WebGL\r\n\r\n  if (useVML) {\r\n    if (!painterCtors.vml) {\r\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\r\n    }\r\n\r\n    rendererType = 'vml';\r\n  } else if (!rendererType || !painterCtors[rendererType]) {\r\n    rendererType = 'canvas';\r\n  }\r\n\r\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\r\n  this.storage = storage;\r\n  this.painter = painter;\r\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot(), painter.root) : null;\r\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\r\n  /**\r\n   * @type {module:zrender/animation/Animation}\r\n   */\r\n\r\n  this.animation = new Animation({\r\n    stage: {\r\n      update: zrUtil.bind(this.flush, this)\r\n    }\r\n  });\r\n  this.animation.start();\r\n  /**\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n\r\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\r\n  // FIXME 有点ugly\r\n\r\n  var oldDelFromStorage = storage.delFromStorage;\r\n  var oldAddToStorage = storage.addToStorage;\r\n\r\n  storage.delFromStorage = function (el) {\r\n    oldDelFromStorage.call(storage, el);\r\n    el && el.removeSelfFromZr(self);\r\n  };\r\n\r\n  storage.addToStorage = function (el) {\r\n    oldAddToStorage.call(storage, el);\r\n    el.addSelfToZr(self);\r\n  };\r\n};\r\n\r\nZRender.prototype = {\r\n  constructor: ZRender,\r\n\r\n  /**\r\n   * 获取实例唯一标识\r\n   * @return {string}\r\n   */\r\n  getId: function () {\r\n    return this.id;\r\n  },\r\n\r\n  /**\r\n   * 添加元素\r\n   * @param  {module:zrender/Element} el\r\n   */\r\n  add: function (el) {\r\n    this.storage.addRoot(el);\r\n    this._needsRefresh = true;\r\n  },\r\n\r\n  /**\r\n   * 删除元素\r\n   * @param  {module:zrender/Element} el\r\n   */\r\n  remove: function (el) {\r\n    this.storage.delRoot(el);\r\n    this._needsRefresh = true;\r\n  },\r\n\r\n  /**\r\n   * Change configuration of layer\r\n   * @param {string} zLevel\r\n   * @param {Object} config\r\n   * @param {string} [config.clearColor=0] Clear color\r\n   * @param {string} [config.motionBlur=false] If enable motion blur\r\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\r\n  */\r\n  configLayer: function (zLevel, config) {\r\n    if (this.painter.configLayer) {\r\n      this.painter.configLayer(zLevel, config);\r\n    }\r\n\r\n    this._needsRefresh = true;\r\n  },\r\n\r\n  /**\r\n   * Set background color\r\n   * @param {string} backgroundColor\r\n   */\r\n  setBackgroundColor: function (backgroundColor) {\r\n    if (this.painter.setBackgroundColor) {\r\n      this.painter.setBackgroundColor(backgroundColor);\r\n    }\r\n\r\n    this._needsRefresh = true;\r\n  },\r\n\r\n  /**\r\n   * Repaint the canvas immediately\r\n   */\r\n  refreshImmediately: function () {\r\n    // var start = new Date();\r\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\r\n    // Or it will cause zrender refreshes again and again.\r\n    this._needsRefresh = this._needsRefreshHover = false;\r\n    this.painter.refresh(); // Avoid trigger zr.refresh in Element#beforeUpdate hook\r\n\r\n    this._needsRefresh = this._needsRefreshHover = false; // var end = new Date();\r\n    // var log = document.getElementById('log');\r\n    // if (log) {\r\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\r\n    // }\r\n  },\r\n\r\n  /**\r\n   * Mark and repaint the canvas in the next frame of browser\r\n   */\r\n  refresh: function () {\r\n    this._needsRefresh = true;\r\n  },\r\n\r\n  /**\r\n   * Perform all refresh\r\n   */\r\n  flush: function () {\r\n    var triggerRendered;\r\n\r\n    if (this._needsRefresh) {\r\n      triggerRendered = true;\r\n      this.refreshImmediately();\r\n    }\r\n\r\n    if (this._needsRefreshHover) {\r\n      triggerRendered = true;\r\n      this.refreshHoverImmediately();\r\n    }\r\n\r\n    triggerRendered && this.trigger('rendered');\r\n  },\r\n\r\n  /**\r\n   * Add element to hover layer\r\n   * @param  {module:zrender/Element} el\r\n   * @param {Object} style\r\n   */\r\n  addHover: function (el, style) {\r\n    if (this.painter.addHover) {\r\n      var elMirror = this.painter.addHover(el, style);\r\n      this.refreshHover();\r\n      return elMirror;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Add element from hover layer\r\n   * @param  {module:zrender/Element} el\r\n   */\r\n  removeHover: function (el) {\r\n    if (this.painter.removeHover) {\r\n      this.painter.removeHover(el);\r\n      this.refreshHover();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Clear all hover elements in hover layer\r\n   * @param  {module:zrender/Element} el\r\n   */\r\n  clearHover: function () {\r\n    if (this.painter.clearHover) {\r\n      this.painter.clearHover();\r\n      this.refreshHover();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Refresh hover in next frame\r\n   */\r\n  refreshHover: function () {\r\n    this._needsRefreshHover = true;\r\n  },\r\n\r\n  /**\r\n   * Refresh hover immediately\r\n   */\r\n  refreshHoverImmediately: function () {\r\n    this._needsRefreshHover = false;\r\n    this.painter.refreshHover && this.painter.refreshHover();\r\n  },\r\n\r\n  /**\r\n   * Resize the canvas.\r\n   * Should be invoked when container size is changed\r\n   * @param {Object} [opts]\r\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\r\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\r\n   */\r\n  resize: function (opts) {\r\n    opts = opts || {};\r\n    this.painter.resize(opts.width, opts.height);\r\n    this.handler.resize();\r\n  },\r\n\r\n  /**\r\n   * Stop and clear all animation immediately\r\n   */\r\n  clearAnimation: function () {\r\n    this.animation.clear();\r\n  },\r\n\r\n  /**\r\n   * Get container width\r\n   */\r\n  getWidth: function () {\r\n    return this.painter.getWidth();\r\n  },\r\n\r\n  /**\r\n   * Get container height\r\n   */\r\n  getHeight: function () {\r\n    return this.painter.getHeight();\r\n  },\r\n\r\n  /**\r\n   * Export the canvas as Base64 URL\r\n   * @param {string} type\r\n   * @param {string} [backgroundColor='#fff']\r\n   * @return {string} Base64 URL\r\n   */\r\n  // toDataURL: function(type, backgroundColor) {\r\n  //     return this.painter.getRenderedCanvas({\r\n  //         backgroundColor: backgroundColor\r\n  //     }).toDataURL(type);\r\n  // },\r\n\r\n  /**\r\n   * Converting a path to image.\r\n   * It has much better performance of drawing image rather than drawing a vector path.\r\n   * @param {module:zrender/graphic/Path} e\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  pathToImage: function (e, dpr) {\r\n    return this.painter.pathToImage(e, dpr);\r\n  },\r\n\r\n  /**\r\n   * Set default cursor\r\n   * @param {string} [cursorStyle='default'] 例如 crosshair\r\n   */\r\n  setCursorStyle: function (cursorStyle) {\r\n    this.handler.setCursorStyle(cursorStyle);\r\n  },\r\n\r\n  /**\r\n   * Find hovered element\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @return {Object} {target, topTarget}\r\n   */\r\n  findHover: function (x, y) {\r\n    return this.handler.findHover(x, y);\r\n  },\r\n\r\n  /**\r\n   * Bind event\r\n   *\r\n   * @param {string} eventName Event name\r\n   * @param {Function} eventHandler Handler function\r\n   * @param {Object} [context] Context object\r\n   */\r\n  on: function (eventName, eventHandler, context) {\r\n    this.handler.on(eventName, eventHandler, context);\r\n  },\r\n\r\n  /**\r\n   * Unbind event\r\n   * @param {string} eventName Event name\r\n   * @param {Function} [eventHandler] Handler function\r\n   */\r\n  off: function (eventName, eventHandler) {\r\n    this.handler.off(eventName, eventHandler);\r\n  },\r\n\r\n  /**\r\n   * Trigger event manually\r\n   *\r\n   * @param {string} eventName Event name\r\n   * @param {event=} event Event object\r\n   */\r\n  trigger: function (eventName, event) {\r\n    this.handler.trigger(eventName, event);\r\n  },\r\n\r\n  /**\r\n   * Clear all objects and the canvas.\r\n   */\r\n  clear: function () {\r\n    this.storage.delRoot();\r\n    this.painter.clear();\r\n  },\r\n\r\n  /**\r\n   * Dispose self.\r\n   */\r\n  dispose: function () {\r\n    this.animation.stop();\r\n    this.clear();\r\n    this.storage.dispose();\r\n    this.painter.dispose();\r\n    this.handler.dispose();\r\n    this.animation = this.storage = this.painter = this.handler = null;\r\n    delInstance(this.id);\r\n  }\r\n};\r\nexports.version = version;\r\nexports.init = init;\r\nexports.dispose = dispose;\r\nexports.getInstance = getInstance;\r\nexports.registerPainter = registerPainter;"],"sourceRoot":"webpack:///"}